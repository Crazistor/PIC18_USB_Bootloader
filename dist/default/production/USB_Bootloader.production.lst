

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jul 27 00:15:14 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1,group=2
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   225                           	dabs	1,0x600,512,_msd_buffer
   226                           	dabs	1,0xD00,48,_BDT
   227                           	dabs	1,0xD40,31,_msd_cbw
   228                           	dabs	1,0xD80,13,_msd_csw
   229                           	dabs	1,0xD38,8,_CtrlTrfData
   230                           	dabs	1,0xD30,8,_SetupPkt
   231  0000                     
   232                           ; Version 2.00
   233                           ; Generated 27/05/2018 GMT
   234                           ; 
   235                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   236                           ; All rights reserved.
   237                           ; 
   238                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   239                           ; 
   240                           ; Redistribution and use in source and binary forms, with or without modification, are
   241                           ; permitted provided that the following conditions are met:
   242                           ; 
   243                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   244                           ;        conditions and the following disclaimer.
   245                           ; 
   246                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   247                           ;        of conditions and the following disclaimer in the documentation and/or other
   248                           ;        materials provided with the distribution.
   249                           ; 
   250                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   251                           ;        software without specific prior written permission.
   252                           ; 
   253                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   254                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   255                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   256                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   257                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   258                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   259                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   260                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   261                           ; 
   262                           ; 
   263                           ; Code-generator required, PIC18F47J53 Definitions
   264                           ; 
   265                           ; SFR Addresses
   266  0000                     
   267                           	psect	intcode
   268  000008  EF04 F048          	goto	36872	;# 
   269                           
   270                           	psect	intcodelo
   271  000018  EF0C F048          	goto	36888	; ;# 
   272  0000                     
   273                           	psect	idataBANK0
   274  007AC6                     __pidataBANK0:
   275                           	opt stack 0
   276                           
   277                           ;initializer for _file_number
   278  007AC6  FF                 	db	255
   279                           
   280                           	psect	idataBANK1
   281  0078B2                     __pidataBANK1:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _LUN
   285  0078B2  08                 	db	low _ExternalFlash_MediaInitialize
   286  0078B3  79                 	db	high _ExternalFlash_MediaInitialize
   287  0078B4  88                 	db	low _ExternalFlash_CapacityRead
   288  0078B5  79                 	db	high _ExternalFlash_CapacityRead
   289  0078B6  2C                 	db	low _ExternalFlash_SectorSizeRead
   290  0078B7  7A                 	db	high _ExternalFlash_SectorSizeRead
   291  0078B8  B6                 	db	low _ExternalFlash_MediaDetect
   292  0078B9  7A                 	db	high _ExternalFlash_MediaDetect
   293  0078BA  E6                 	db	low _ExternalFlash_SectorRead
   294  0078BB  74                 	db	high _ExternalFlash_SectorRead
   295  0078BC  B2                 	db	low _ExternalFlash_WriteProtectStateGet
   296  0078BD  7A                 	db	high _ExternalFlash_WriteProtectStateGet
   297  0078BE  B4                 	db	low _ExternalFlash_SectorWrite
   298  0078BF  74                 	db	high _ExternalFlash_SectorWrite
   299  0078C0  00                 	db	0
   300  0078C1  00                 	db	0
   301  0078C2  00                 	db	0
   302  0078C3  00                 	db	0
   303  0078C4  00                 	db	0
   304  0078C5  00                 	db	0
   305                           
   306                           ;initializer for i2c_display_send_init_sequence@F6765
   307  0078C6  3A                 	db	58
   308  0078C7  1E                 	db	30
   309  0078C8  39                 	db	57
   310  0078C9  0C                 	db	12
   311  0078CA  74                 	db	116
   312  0078CB  5C                 	db	92
   313  0078CC  6D                 	db	109
   314  0078CD  0C                 	db	12
   315  0078CE  01                 	db	1
   316                           
   317                           	psect	mediumconst
   318  008CCC                     __pmediumconst:
   319                           	opt stack 0
   320  008CCC  00                 	db	0
   321  008CCD                     _checked_line2:
   322                           	opt stack 0
   323  008CCD  46                 	db	70
   324  008CCE  69                 	db	105
   325  008CCF  6C                 	db	108
   326  008CD0  65                 	db	101
   327  008CD1  20                 	db	32
   328  008CD2  63                 	db	99
   329  008CD3  68                 	db	104
   330  008CD4  65                 	db	101
   331  008CD5  63                 	db	99
   332  008CD6  6B                 	db	107
   333  008CD7  20                 	db	32
   334  008CD8  63                 	db	99
   335  008CD9  6F                 	db	111
   336  008CDA  6D                 	db	109
   337  008CDB  70                 	db	112
   338  008CDC  6C                 	db	108
   339  008CDD  65                 	db	101
   340  008CDE  74                 	db	116
   341  008CDF  65                 	db	101
   342  008CE0  64                 	db	100
   343  008CE1  00                 	db	0
   344  008CE2                     __end_of_checked_line2:
   345                           	opt stack 0
   346  008CE2                     _failed_line3_addressRange:
   347                           	opt stack 0
   348  008CE2  41                 	db	65
   349  008CE3  64                 	db	100
   350  008CE4  64                 	db	100
   351  008CE5  72                 	db	114
   352  008CE6  2E                 	db	46
   353  008CE7  20                 	db	32
   354  008CE8  6F                 	db	111
   355  008CE9  75                 	db	117
   356  008CEA  74                 	db	116
   357  008CEB  73                 	db	115
   358  008CEC  69                 	db	105
   359  008CED  64                 	db	100
   360  008CEE  65                 	db	101
   361  008CEF  20                 	db	32
   362  008CF0  72                 	db	114
   363  008CF1  61                 	db	97
   364  008CF2  6E                 	db	110
   365  008CF3  67                 	db	103
   366  008CF4  65                 	db	101
   367  008CF5  00                 	db	0
   368  008CF6                     __end_of_failed_line3_addressRange:
   369                           	opt stack 0
   370  008CF6                     _start_line3:
   371                           	opt stack 0
   372  008CF6  46                 	db	70
   373  008CF7  49                 	db	73
   374  008CF8  52                 	db	82
   375  008CF9  4D                 	db	77
   376  008CFA  57                 	db	87
   377  008CFB  41                 	db	65
   378  008CFC  52                 	db	82
   379  008CFD  45                 	db	69
   380  008CFE  2E                 	db	46
   381  008CFF  48                 	db	72
   382  008D00  45                 	db	69
   383  008D01  58                 	db	88
   384  008D02  20                 	db	32
   385  008D03  6F                 	db	111
   386  008D04  6E                 	db	110
   387  008D05  20                 	db	32
   388  008D06  55                 	db	85
   389  008D07  53                 	db	83
   390  008D08  42                 	db	66
   391  008D09  00                 	db	0
   392  008D0A                     __end_of_start_line3:
   393                           	opt stack 0
   394  008D0A                     _failed_line3_startCode:
   395                           	opt stack 0
   396  008D0A  4D                 	db	77
   397  008D0B  69                 	db	105
   398  008D0C  73                 	db	115
   399  008D0D  73                 	db	115
   400  008D0E  69                 	db	105
   401  008D0F  6E                 	db	110
   402  008D10  67                 	db	103
   403  008D11  20                 	db	32
   404  008D12  73                 	db	115
   405  008D13  74                 	db	116
   406  008D14  61                 	db	97
   407  008D15  72                 	db	114
   408  008D16  74                 	db	116
   409  008D17  20                 	db	32
   410  008D18  63                 	db	99
   411  008D19  6F                 	db	111
   412  008D1A  64                 	db	100
   413  008D1B  65                 	db	101
   414  008D1C  00                 	db	0
   415  008D1D                     __end_of_failed_line3_startCode:
   416                           	opt stack 0
   417  008D1D                     _found_line2:
   418                           	opt stack 0
   419  008D1D  46                 	db	70
   420  008D1E  49                 	db	73
   421  008D1F  52                 	db	82
   422  008D20  4D                 	db	77
   423  008D21  57                 	db	87
   424  008D22  41                 	db	65
   425  008D23  52                 	db	82
   426  008D24  45                 	db	69
   427  008D25  2E                 	db	46
   428  008D26  48                 	db	72
   429  008D27  45                 	db	69
   430  008D28  58                 	db	88
   431  008D29  20                 	db	32
   432  008D2A  66                 	db	102
   433  008D2B  6F                 	db	111
   434  008D2C  75                 	db	117
   435  008D2D  6E                 	db	110
   436  008D2E  64                 	db	100
   437  008D2F  00                 	db	0
   438  008D30                     __end_of_found_line2:
   439                           	opt stack 0
   440  008D30                     _programming_line2:
   441                           	opt stack 0
   442  008D30  50                 	db	80
   443  008D31  72                 	db	114
   444  008D32  6F                 	db	111
   445  008D33  67                 	db	103
   446  008D34  72                 	db	114
   447  008D35  61                 	db	97
   448  008D36  6D                 	db	109
   449  008D37  6D                 	db	109
   450  008D38  69                 	db	105
   451  008D39  6E                 	db	110
   452  008D3A  67                 	db	103
   453  008D3B  20                 	db	32
   454  008D3C  66                 	db	102
   455  008D3D  6C                 	db	108
   456  008D3E  61                 	db	97
   457  008D3F  73                 	db	115
   458  008D40  68                 	db	104
   459  008D41  00                 	db	0
   460  008D42                     __end_of_programming_line2:
   461                           	opt stack 0
   462  008D42                     _failed_line2:
   463                           	opt stack 0
   464  008D42  46                 	db	70
   465  008D43  69                 	db	105
   466  008D44  6C                 	db	108
   467  008D45  65                 	db	101
   468  008D46  20                 	db	32
   469  008D47  63                 	db	99
   470  008D48  68                 	db	104
   471  008D49  65                 	db	101
   472  008D4A  63                 	db	99
   473  008D4B  6B                 	db	107
   474  008D4C  20                 	db	32
   475  008D4D  66                 	db	102
   476  008D4E  61                 	db	97
   477  008D4F  69                 	db	105
   478  008D50  6C                 	db	108
   479  008D51  65                 	db	101
   480  008D52  64                 	db	100
   481  008D53  00                 	db	0
   482  008D54                     __end_of_failed_line2:
   483                           	opt stack 0
   484  008D54                     _found_line4:
   485                           	opt stack 0
   486  008D54  50                 	db	80
   487  008D55  72                 	db	114
   488  008D56  65                 	db	101
   489  008D57  73                 	db	115
   490  008D58  73                 	db	115
   491  008D59  20                 	db	32
   492  008D5A  74                 	db	116
   493  008D5B  6F                 	db	111
   494  008D5C  20                 	db	32
   495  008D5D  75                 	db	117
   496  008D5E  73                 	db	115
   497  008D5F  65                 	db	101
   498  008D60  20                 	db	32
   499  008D61  66                 	db	102
   500  008D62  69                 	db	105
   501  008D63  6C                 	db	108
   502  008D64  65                 	db	101
   503  008D65  00                 	db	0
   504  008D66                     __end_of_found_line4:
   505                           	opt stack 0
   506  008D66                     _checked_line4:
   507                           	opt stack 0
   508  008D66  50                 	db	80
   509  008D67  72                 	db	114
   510  008D68  65                 	db	101
   511  008D69  73                 	db	115
   512  008D6A  73                 	db	115
   513  008D6B  20                 	db	32
   514  008D6C  74                 	db	116
   515  008D6D  6F                 	db	111
   516  008D6E  20                 	db	32
   517  008D6F  70                 	db	112
   518  008D70  72                 	db	114
   519  008D71  6F                 	db	111
   520  008D72  67                 	db	103
   521  008D73  72                 	db	114
   522  008D74  61                 	db	97
   523  008D75  6D                 	db	109
   524  008D76  00                 	db	0
   525  008D77                     __end_of_checked_line4:
   526                           	opt stack 0
   527  008D77                     _start_line2:
   528                           	opt stack 0
   529  008D77  4C                 	db	76
   530  008D78  6F                 	db	111
   531  008D79  6F                 	db	111
   532  008D7A  6B                 	db	107
   533  008D7B  69                 	db	105
   534  008D7C  6E                 	db	110
   535  008D7D  67                 	db	103
   536  008D7E  20                 	db	32
   537  008D7F  66                 	db	102
   538  008D80  6F                 	db	111
   539  008D81  72                 	db	114
   540  008D82  20                 	db	32
   541  008D83  66                 	db	102
   542  008D84  69                 	db	105
   543  008D85  6C                 	db	108
   544  008D86  65                 	db	101
   545  008D87  00                 	db	0
   546  008D88                     __end_of_start_line2:
   547                           	opt stack 0
   548  008D88                     _start_line1:
   549                           	opt stack 0
   550  008D88  42                 	db	66
   551  008D89  6F                 	db	111
   552  008D8A  6F                 	db	111
   553  008D8B  74                 	db	116
   554  008D8C  6C                 	db	108
   555  008D8D  6F                 	db	111
   556  008D8E  61                 	db	97
   557  008D8F  64                 	db	100
   558  008D90  65                 	db	101
   559  008D91  72                 	db	114
   560  008D92  20                 	db	32
   561  008D93  4D                 	db	77
   562  008D94  6F                 	db	111
   563  008D95  64                 	db	100
   564  008D96  65                 	db	101
   565  008D97  00                 	db	0
   566  008D98  00                 	db	0
   567  008D99                     __end_of_start_line1:
   568                           	opt stack 0
   569  008D99                     _done_line4:
   570                           	opt stack 0
   571  008D99  50                 	db	80
   572  008D9A  72                 	db	114
   573  008D9B  65                 	db	101
   574  008D9C  73                 	db	115
   575  008D9D  73                 	db	115
   576  008D9E  20                 	db	32
   577  008D9F  74                 	db	116
   578  008DA0  6F                 	db	111
   579  008DA1  20                 	db	32
   580  008DA2  72                 	db	114
   581  008DA3  65                 	db	101
   582  008DA4  62                 	db	98
   583  008DA5  6F                 	db	111
   584  008DA6  6F                 	db	111
   585  008DA7  74                 	db	116
   586  008DA8  00                 	db	0
   587  008DA9                     __end_of_done_line4:
   588                           	opt stack 0
   589  008DA9                     _done_line3:
   590                           	opt stack 0
   591  008DA9  50                 	db	80
   592  008DAA  61                 	db	97
   593  008DAB  67                 	db	103
   594  008DAC  65                 	db	101
   595  008DAD  73                 	db	115
   596  008DAE  20                 	db	32
   597  008DAF  77                 	db	119
   598  008DB0  72                 	db	114
   599  008DB1  69                 	db	105
   600  008DB2  74                 	db	116
   601  008DB3  74                 	db	116
   602  008DB4  65                 	db	101
   603  008DB5  6E                 	db	110
   604  008DB6  3A                 	db	58
   605  008DB7  20                 	db	32
   606  008DB8  00                 	db	0
   607  008DB9                     __end_of_done_line3:
   608                           	opt stack 0
   609  008DB9                     _done_line1:
   610                           	opt stack 0
   611  008DB9  42                 	db	66
   612  008DBA  6F                 	db	111
   613  008DBB  6F                 	db	111
   614  008DBC  74                 	db	116
   615  008DBD  6C                 	db	108
   616  008DBE  6F                 	db	111
   617  008DBF  61                 	db	97
   618  008DC0  64                 	db	100
   619  008DC1  65                 	db	101
   620  008DC2  72                 	db	114
   621  008DC3  20                 	db	32
   622  008DC4  4D                 	db	77
   623  008DC5  6F                 	db	111
   624  008DC6  64                 	db	100
   625  008DC7  65                 	db	101
   626  008DC8  00                 	db	0
   627  008DC9                     __end_of_done_line1:
   628                           	opt stack 0
   629  008DC9                     _programming_line4:
   630                           	opt stack 0
   631  008DC9  50                 	db	80
   632  008DCA  61                 	db	97
   633  008DCB  67                 	db	103
   634  008DCC  65                 	db	101
   635  008DCD  73                 	db	115
   636  008DCE  20                 	db	32
   637  008DCF  77                 	db	119
   638  008DD0  72                 	db	114
   639  008DD1  69                 	db	105
   640  008DD2  74                 	db	116
   641  008DD3  74                 	db	116
   642  008DD4  65                 	db	101
   643  008DD5  6E                 	db	110
   644  008DD6  3A                 	db	58
   645  008DD7  20                 	db	32
   646  008DD8  00                 	db	0
   647  008DD9                     __end_of_programming_line4:
   648                           	opt stack 0
   649  008DD9                     _programming_line1:
   650                           	opt stack 0
   651  008DD9  42                 	db	66
   652  008DDA  6F                 	db	111
   653  008DDB  6F                 	db	111
   654  008DDC  74                 	db	116
   655  008DDD  6C                 	db	108
   656  008DDE  6F                 	db	111
   657  008DDF  61                 	db	97
   658  008DE0  64                 	db	100
   659  008DE1  65                 	db	101
   660  008DE2  72                 	db	114
   661  008DE3  20                 	db	32
   662  008DE4  4D                 	db	77
   663  008DE5  6F                 	db	111
   664  008DE6  64                 	db	100
   665  008DE7  65                 	db	101
   666  008DE8  00                 	db	0
   667  008DE9                     __end_of_programming_line1:
   668                           	opt stack 0
   669  008DE9                     _failed_line1:
   670                           	opt stack 0
   671  008DE9  42                 	db	66
   672  008DEA  6F                 	db	111
   673  008DEB  6F                 	db	111
   674  008DEC  74                 	db	116
   675  008DED  6C                 	db	108
   676  008DEE  6F                 	db	111
   677  008DEF  61                 	db	97
   678  008DF0  64                 	db	100
   679  008DF1  65                 	db	101
   680  008DF2  72                 	db	114
   681  008DF3  20                 	db	32
   682  008DF4  4D                 	db	77
   683  008DF5  6F                 	db	111
   684  008DF6  64                 	db	100
   685  008DF7  65                 	db	101
   686  008DF8  00                 	db	0
   687  008DF9                     __end_of_failed_line1:
   688                           	opt stack 0
   689  008DF9                     _checked_line1:
   690                           	opt stack 0
   691  008DF9  42                 	db	66
   692  008DFA  6F                 	db	111
   693  008DFB  6F                 	db	111
   694  008DFC  74                 	db	116
   695  008DFD  6C                 	db	108
   696  008DFE  6F                 	db	111
   697  008DFF  61                 	db	97
   698  008E00  64                 	db	100
   699  008E01  65                 	db	101
   700  008E02  72                 	db	114
   701  008E03  20                 	db	32
   702  008E04  4D                 	db	77
   703  008E05  6F                 	db	111
   704  008E06  64                 	db	100
   705  008E07  65                 	db	101
   706  008E08  00                 	db	0
   707  008E09                     __end_of_checked_line1:
   708                           	opt stack 0
   709  008E09                     _verify_line1:
   710                           	opt stack 0
   711  008E09  42                 	db	66
   712  008E0A  6F                 	db	111
   713  008E0B  6F                 	db	111
   714  008E0C  74                 	db	116
   715  008E0D  6C                 	db	108
   716  008E0E  6F                 	db	111
   717  008E0F  61                 	db	97
   718  008E10  64                 	db	100
   719  008E11  65                 	db	101
   720  008E12  72                 	db	114
   721  008E13  20                 	db	32
   722  008E14  4D                 	db	77
   723  008E15  6F                 	db	111
   724  008E16  64                 	db	100
   725  008E17  65                 	db	101
   726  008E18  00                 	db	0
   727  008E19                     __end_of_verify_line1:
   728                           	opt stack 0
   729  008E19                     _found_line1:
   730                           	opt stack 0
   731  008E19  42                 	db	66
   732  008E1A  6F                 	db	111
   733  008E1B  6F                 	db	111
   734  008E1C  74                 	db	116
   735  008E1D  6C                 	db	108
   736  008E1E  6F                 	db	111
   737  008E1F  61                 	db	97
   738  008E20  64                 	db	100
   739  008E21  65                 	db	101
   740  008E22  72                 	db	114
   741  008E23  20                 	db	32
   742  008E24  4D                 	db	77
   743  008E25  6F                 	db	111
   744  008E26  64                 	db	100
   745  008E27  65                 	db	101
   746  008E28  00                 	db	0
   747  008E29                     __end_of_found_line1:
   748                           	opt stack 0
   749  008E29                     _failed_line3_checksum:
   750                           	opt stack 0
   751  008E29  43                 	db	67
   752  008E2A  68                 	db	104
   753  008E2B  65                 	db	101
   754  008E2C  63                 	db	99
   755  008E2D  6B                 	db	107
   756  008E2E  73                 	db	115
   757  008E2F  75                 	db	117
   758  008E30  6D                 	db	109
   759  008E31  20                 	db	32
   760  008E32  65                 	db	101
   761  008E33  72                 	db	114
   762  008E34  72                 	db	114
   763  008E35  6F                 	db	111
   764  008E36  72                 	db	114
   765  008E37  00                 	db	0
   766  008E38                     __end_of_failed_line3_checksum:
   767                           	opt stack 0
   768  008E38                     _failed_line3_noNextRecord:
   769                           	opt stack 0
   770  008E38  4E                 	db	78
   771  008E39  6F                 	db	111
   772  008E3A  20                 	db	32
   773  008E3B  6E                 	db	110
   774  008E3C  65                 	db	101
   775  008E3D  78                 	db	120
   776  008E3E  74                 	db	116
   777  008E3F  20                 	db	32
   778  008E40  72                 	db	114
   779  008E41  65                 	db	101
   780  008E42  63                 	db	99
   781  008E43  6F                 	db	111
   782  008E44  72                 	db	114
   783  008E45  64                 	db	100
   784  008E46  00                 	db	0
   785  008E47                     __end_of_failed_line3_noNextRecord:
   786                           	opt stack 0
   787  008E47                     _failed_line3_dataTooLong:
   788                           	opt stack 0
   789  008E47  44                 	db	68
   790  008E48  61                 	db	97
   791  008E49  74                 	db	116
   792  008E4A  61                 	db	97
   793  008E4B  20                 	db	32
   794  008E4C  74                 	db	116
   795  008E4D  6F                 	db	111
   796  008E4E  6F                 	db	111
   797  008E4F  20                 	db	32
   798  008E50  6C                 	db	108
   799  008E51  6F                 	db	111
   800  008E52  6E                 	db	110
   801  008E53  67                 	db	103
   802  008E54  00                 	db	0
   803  008E55                     __end_of_failed_line3_dataTooLong:
   804                           	opt stack 0
   805  008E55                     _verify_line2:
   806                           	opt stack 0
   807  008E55  56                 	db	86
   808  008E56  65                 	db	101
   809  008E57  72                 	db	114
   810  008E58  69                 	db	105
   811  008E59  66                 	db	102
   812  008E5A  79                 	db	121
   813  008E5B  69                 	db	105
   814  008E5C  6E                 	db	110
   815  008E5D  67                 	db	103
   816  008E5E  2E                 	db	46
   817  008E5F  2E                 	db	46
   818  008E60  2E                 	db	46
   819  008E61  00                 	db	0
   820  008E62                     __end_of_verify_line2:
   821                           	opt stack 0
   822  008E62                     _start_line4:
   823                           	opt stack 0
   824  008E62  64                 	db	100
   825  008E63  72                 	db	114
   826  008E64  69                 	db	105
   827  008E65  76                 	db	118
   828  008E66  65                 	db	101
   829  008E67  2E                 	db	46
   830  008E68  2E                 	db	46
   831  008E69  2E                 	db	46
   832  008E6A  00                 	db	0
   833  008E6B                     __end_of_start_line4:
   834                           	opt stack 0
   835  008E6B                     _failed_line4:
   836                           	opt stack 0
   837  008E6B  52                 	db	82
   838  008E6C  65                 	db	101
   839  008E6D  63                 	db	99
   840  008E6E  6F                 	db	111
   841  008E6F  72                 	db	114
   842  008E70  64                 	db	100
   843  008E71  20                 	db	32
   844  008E72  00                 	db	0
   845  008E73                     __end_of_failed_line4:
   846                           	opt stack 0
   847  008E73                     _checked_line3:
   848                           	opt stack 0
   849  008E73  72                 	db	114
   850  008E74  65                 	db	101
   851  008E75  63                 	db	99
   852  008E76  6F                 	db	111
   853  008E77  72                 	db	114
   854  008E78  64                 	db	100
   855  008E79  73                 	db	115
   856  008E7A  00                 	db	0
   857  008E7B                     __end_of_checked_line3:
   858                           	opt stack 0
   859  008E7B                     _USB_SD_Ptr:
   860                           	opt stack 0
   861  008E7B  CB                 	db	low _sd000
   862  008E7C  8F                 	db	high _sd000
   863  008E7D  E7                 	db	low _sd001
   864  008E7E  8E                 	db	high _sd001
   865  008E7F  1B                 	db	low _sd002
   866  008E80  8F                 	db	high _sd002
   867  008E81  8A                 	db	low _sd003
   868  008E82  8F                 	db	high _sd003
   869  008E83                     __end_of_USB_SD_Ptr:
   870                           	opt stack 0
   871  008E83                     _programming_line3:
   872                           	opt stack 0
   873  008E83  45                 	db	69
   874  008E84  6E                 	db	110
   875  008E85  74                 	db	116
   876  008E86  72                 	db	114
   877  008E87  79                 	db	121
   878  008E88  20                 	db	32
   879  008E89  00                 	db	0
   880  008E8A                     __end_of_programming_line3:
   881                           	opt stack 0
   882  008E8A                     _verify_line3:
   883                           	opt stack 0
   884  008E8A  52                 	db	82
   885  008E8B  65                 	db	101
   886  008E8C  63                 	db	99
   887  008E8D  6F                 	db	111
   888  008E8E  72                 	db	114
   889  008E8F  64                 	db	100
   890  008E90  00                 	db	0
   891  008E91                     __end_of_verify_line3:
   892                           	opt stack 0
   893  008E91                     _found_line3b:
   894                           	opt stack 0
   895  008E91  20                 	db	32
   896  008E92  62                 	db	98
   897  008E93  79                 	db	121
   898  008E94  74                 	db	116
   899  008E95  65                 	db	101
   900  008E96  73                 	db	115
   901  008E97  00                 	db	0
   902  008E98                     __end_of_found_line3b:
   903                           	opt stack 0
   904  008E98                     _found_line3:
   905                           	opt stack 0
   906  008E98  53                 	db	83
   907  008E99  69                 	db	105
   908  008E9A  7A                 	db	122
   909  008E9B  65                 	db	101
   910  008E9C  3A                 	db	58
   911  008E9D  20                 	db	32
   912  008E9E  00                 	db	0
   913  008E9F                     __end_of_found_line3:
   914                           	opt stack 0
   915  008E9F                     _done_line2:
   916                           	opt stack 0
   917  008E9F  44                 	db	68
   918  008EA0  6F                 	db	111
   919  008EA1  6E                 	db	110
   920  008EA2  65                 	db	101
   921  008EA3  21                 	db	33
   922  008EA4  00                 	db	0
   923  008EA5                     __end_of_done_line2:
   924                           	opt stack 0
   925  008EA5                     _USB_CD_Ptr:
   926                           	opt stack 0
   927  008EA5  A7                 	db	low _configDescriptor1
   928  008EA6  8E                 	db	high _configDescriptor1
   929  008EA7                     __end_of_USB_CD_Ptr:
   930                           	opt stack 0
   931  008EA7                     _configDescriptor1:
   932                           	opt stack 0
   933  008EA7  09                 	db	9
   934  008EA8  02                 	db	2
   935  008EA9  40                 	db	64
   936  008EAA  00                 	db	0
   937  008EAB  02                 	db	2
   938  008EAC  01                 	db	1
   939  008EAD  00                 	db	0
   940  008EAE  C0                 	db	192
   941  008EAF  32                 	db	50
   942  008EB0  09                 	db	9
   943  008EB1  04                 	db	4
   944  008EB2  00                 	db	0
   945  008EB3  00                 	db	0
   946  008EB4  02                 	db	2
   947  008EB5  03                 	db	3
   948  008EB6  00                 	db	0
   949  008EB7  00                 	db	0
   950  008EB8  00                 	db	0
   951  008EB9  09                 	db	9
   952  008EBA  21                 	db	33
   953  008EBB  11                 	db	17
   954  008EBC  01                 	db	1
   955  008EBD  00                 	db	0
   956  008EBE  01                 	db	1
   957  008EBF  22                 	db	34
   958  008EC0  1D                 	db	29
   959  008EC1  00                 	db	0
   960  008EC2  07                 	db	7
   961  008EC3  05                 	db	5
   962  008EC4  81                 	db	129
   963  008EC5  03                 	db	3
   964  008EC6  40                 	db	64
   965  008EC7  00                 	db	0
   966  008EC8  01                 	db	1
   967  008EC9  07                 	db	7
   968  008ECA  05                 	db	5
   969  008ECB  01                 	db	1
   970  008ECC  03                 	db	3
   971  008ECD  40                 	db	64
   972  008ECE  00                 	db	0
   973  008ECF  01                 	db	1
   974  008ED0  09                 	db	9
   975  008ED1  04                 	db	4
   976  008ED2  01                 	db	1
   977  008ED3  00                 	db	0
   978  008ED4  02                 	db	2
   979  008ED5  08                 	db	8
   980  008ED6  06                 	db	6
   981  008ED7  50                 	db	80
   982  008ED8  00                 	db	0
   983  008ED9  07                 	db	7
   984  008EDA  05                 	db	5
   985  008EDB  82                 	db	130
   986  008EDC  02                 	db	2
   987  008EDD  40                 	db	64
   988  008EDE  00                 	db	0
   989  008EDF  01                 	db	1
   990  008EE0  07                 	db	7
   991  008EE1  05                 	db	5
   992  008EE2  02                 	db	2
   993  008EE3  02                 	db	2
   994  008EE4  40                 	db	64
   995  008EE5  00                 	db	0
   996  008EE6  01                 	db	1
   997  008EE7                     __end_of_configDescriptor1:
   998                           	opt stack 0
   999  008EE7                     _sd001:
  1000                           	opt stack 0
  1001  008EE7  34                 	db	52
  1002  008EE8  03                 	db	3
  1003  008EE9  0053               	dw	83
  1004  008EEB  006F               	dw	111
  1005  008EED  006C               	dw	108
  1006  008EEF  0064               	dw	100
  1007  008EF1  0065               	dw	101
  1008  008EF3  0072               	dw	114
  1009  008EF5  006E               	dw	110
  1010  008EF7  0065               	dw	101
  1011  008EF9  0072               	dw	114
  1012  008EFB  0064               	dw	100
  1013  008EFD  002E               	dw	46
  1014  008EFF  0063               	dw	99
  1015  008F01  006F               	dw	111
  1016  008F03  006D               	dw	109
  1017  008F05  0020               	dw	32
  1018  008F07  0020               	dw	32
  1019  008F09  0020               	dw	32
  1020  008F0B  0020               	dw	32
  1021  008F0D  0020               	dw	32
  1022  008F0F  0020               	dw	32
  1023  008F11  0020               	dw	32
  1024  008F13  0020               	dw	32
  1025  008F15  0020               	dw	32
  1026  008F17  0020               	dw	32
  1027  008F19  0020               	dw	32
  1028  008F1B                     __end_of_sd001:
  1029                           	opt stack 0
  1030  008F1B                     _sd002:
  1031                           	opt stack 0
  1032  008F1B  2E                 	db	46
  1033  008F1C  03                 	db	3
  1034  008F1D  004D               	dw	77
  1035  008F1F  0050               	dw	80
  1036  008F21  0050               	dw	80
  1037  008F23  0054               	dw	84
  1038  008F25  0053               	dw	83
  1039  008F27  006F               	dw	111
  1040  008F29  006C               	dw	108
  1041  008F2B  0061               	dw	97
  1042  008F2D  0072               	dw	114
  1043  008F2F  0020               	dw	32
  1044  008F31  0043               	dw	67
  1045  008F33  0068               	dw	104
  1046  008F35  0061               	dw	97
  1047  008F37  0072               	dw	114
  1048  008F39  0067               	dw	103
  1049  008F3B  0065               	dw	101
  1050  008F3D  0072               	dw	114
  1051  008F3F  0020               	dw	32
  1052  008F41  0052               	dw	82
  1053  008F43  0065               	dw	101
  1054  008F45  0076               	dw	118
  1055  008F47  0043               	dw	67
  1056  008F49                     __end_of_sd002:
  1057                           	opt stack 0
  1058  008F49                     _inq_resp:
  1059                           	opt stack 0
  1060  008F49  00                 	db	0
  1061  008F4A  80                 	db	128
  1062  008F4B  04                 	db	4
  1063  008F4C  02                 	db	2
  1064  008F4D  20                 	db	32
  1065  008F4E  00                 	db	0
  1066  008F4F  00                 	db	0
  1067  008F50  00                 	db	0
  1068  008F51  4D                 	db	77
  1069  008F52  69                 	db	105
  1070  008F53  63                 	db	99
  1071  008F54  72                 	db	114
  1072  008F55  6F                 	db	111
  1073  008F56  63                 	db	99
  1074  008F57  68                 	db	104
  1075  008F58  70                 	db	112
  1076  008F59  4D                 	db	77
  1077  008F5A  61                 	db	97
  1078  008F5B  73                 	db	115
  1079  008F5C  73                 	db	115
  1080  008F5D  20                 	db	32
  1081  008F5E  53                 	db	83
  1082  008F5F  74                 	db	116
  1083  008F60  6F                 	db	111
  1084  008F61  72                 	db	114
  1085  008F62  61                 	db	97
  1086  008F63  67                 	db	103
  1087  008F64  65                 	db	101
  1088  008F65  20                 	db	32
  1089  008F66  20                 	db	32
  1090  008F67  20                 	db	32
  1091  008F68  20                 	db	32
  1092  008F69  30                 	db	48
  1093  008F6A  30                 	db	48
  1094  008F6B  30                 	db	48
  1095  008F6C  31                 	db	49
  1096  008F6D                     __end_of_inq_resp:
  1097                           	opt stack 0
  1098  008F6D                     _hid_rpt01:
  1099                           	opt stack 0
  1100  008F6D  06                 	db	6
  1101  008F6E  00                 	db	0
  1102  008F6F  FF                 	db	255
  1103  008F70  09                 	db	9
  1104  008F71  01                 	db	1
  1105  008F72  A1                 	db	161
  1106  008F73  01                 	db	1
  1107  008F74  19                 	db	25
  1108  008F75  01                 	db	1
  1109  008F76  29                 	db	41
  1110  008F77  40                 	db	64
  1111  008F78  15                 	db	21
  1112  008F79  00                 	db	0
  1113  008F7A  26                 	db	38
  1114  008F7B  FF                 	db	255
  1115  008F7C  00                 	db	0
  1116  008F7D  75                 	db	117
  1117  008F7E  08                 	db	8
  1118  008F7F  95                 	db	149
  1119  008F80  40                 	db	64
  1120  008F81  81                 	db	129
  1121  008F82  00                 	db	0
  1122  008F83  19                 	db	25
  1123  008F84  01                 	db	1
  1124  008F85  29                 	db	41
  1125  008F86  40                 	db	64
  1126  008F87  91                 	db	145
  1127  008F88  00                 	db	0
  1128  008F89  C0                 	db	192
  1129  008F8A                     __end_of_hid_rpt01:
  1130                           	opt stack 0
  1131  008F8A                     _sd003:
  1132                           	opt stack 0
  1133  008F8A  1A                 	db	26
  1134  008F8B  03                 	db	3
  1135  008F8C  0031               	dw	49
  1136  008F8E  0032               	dw	50
  1137  008F90  0033               	dw	51
  1138  008F92  0034               	dw	52
  1139  008F94  0035               	dw	53
  1140  008F96  0036               	dw	54
  1141  008F98  0037               	dw	55
  1142  008F9A  0038               	dw	56
  1143  008F9C  0039               	dw	57
  1144  008F9E  0030               	dw	48
  1145  008FA0  0039               	dw	57
  1146  008FA2  0039               	dw	57
  1147  008FA4                     __end_of_sd003:
  1148                           	opt stack 0
  1149  008FA4                     _device_dsc:
  1150                           	opt stack 0
  1151  008FA4  12                 	db	18
  1152  008FA5  01                 	db	1
  1153  008FA6  0200               	dw	512
  1154  008FA8  00                 	db	0
  1155  008FA9  00                 	db	0
  1156  008FAA  00                 	db	0
  1157  008FAB  08                 	db	8
  1158  008FAC  04D8               	dw	1240
  1159  008FAE  F08E               	dw	61582
  1160  008FB0  0100               	dw	256
  1161  008FB2  01                 	db	1
  1162  008FB3  02                 	db	2
  1163  008FB4  00                 	db	0
  1164  008FB5  01                 	db	1
  1165  008FB6                     __end_of_device_dsc:
  1166                           	opt stack 0
  1167  008FB6                     _bootloader_filename:
  1168                           	opt stack 0
  1169  008FB6  46                 	db	70
  1170  008FB7  49                 	db	73
  1171  008FB8  52                 	db	82
  1172  008FB9  4D                 	db	77
  1173  008FBA  57                 	db	87
  1174  008FBB  41                 	db	65
  1175  008FBC  52                 	db	82
  1176  008FBD  45                 	db	69
  1177  008FBE  00                 	db	0
  1178  008FBF                     __end_of_bootloader_filename:
  1179                           	opt stack 0
  1180  008FBF                     _flash_command_pagesize_528:
  1181                           	opt stack 0
  1182  008FBF  3D                 	db	61
  1183  008FC0  2A                 	db	42
  1184  008FC1  80                 	db	128
  1185  008FC2  A7                 	db	167
  1186  008FC3                     __end_of_flash_command_pagesize_528:
  1187                           	opt stack 0
  1188  008FC3                     _flash_command_pagesize_512:
  1189                           	opt stack 0
  1190  008FC3  3D                 	db	61
  1191  008FC4  2A                 	db	42
  1192  008FC5  80                 	db	128
  1193  008FC6  A6                 	db	166
  1194  008FC7                     __end_of_flash_command_pagesize_512:
  1195                           	opt stack 0
  1196  008FC7                     _bootloader_extension:
  1197                           	opt stack 0
  1198  008FC7  48                 	db	72
  1199  008FC8  45                 	db	69
  1200  008FC9  58                 	db	88
  1201  008FCA  00                 	db	0
  1202  008FCB                     __end_of_bootloader_extension:
  1203                           	opt stack 0
  1204  008FCB                     _sd000:
  1205                           	opt stack 0
  1206  008FCB  04                 	db	4
  1207  008FCC  03                 	db	3
  1208  008FCD  0409               	dw	1033
  1209  008FCF                     __end_of_sd000:
  1210                           	opt stack 0
  1211  0000                     _RPINR22	set	3837
  1212  0000                     _RPOR22	set	3798
  1213  0000                     _RPOR21	set	3797
  1214  0000                     _RPINR21	set	3836
  1215  0000                     _RPINR2	set	3810
  1216  0000                     _RPINR3	set	3811
  1217  0000                     _RPINR1	set	3809
  1218  0000                     _PPSCONbits	set	3775
  1219  0000                     _ANCON0bits	set	3912
  1220  0000                     _UEP0bits	set	3878
  1221  0000                     _UIEbits	set	3894
  1222  0000                     _UADDR	set	3896
  1223  0000                     _UIE	set	3894
  1224  0000                     _UEIE	set	3895
  1225  0000                     _UCFG	set	3897
  1226  0000                     _UEP1	set	3879
  1227  0000                     _UEP0	set	3878
  1228  0000                     _TBLPTR	set	4086
  1229  0000                     _RXADDRL	set	3945
  1230  0000                     _RXADDRH	set	3944
  1231  0000                     _DMABCL	set	3943
  1232  0000                     _DMABCH	set	3942
  1233  0000                     _TXADDRL	set	3947
  1234  0000                     _TXADDRH	set	3946
  1235  0000                     _DMACON2bits	set	3974
  1236  0000                     _DMACON1bits	set	3976
  1237  0000                     _SSP2CON1bits	set	3954
  1238  0000                     _SSP2STATbits	set	3955
  1239  0000                     _INTCON	set	4082
  1240  0000                     _EECON1	set	4006
  1241  0000                     _TABLAT	set	4085
  1242  0000                     _EECON1bits	set	4006
  1243  0000                     _SSP1BUF	set	4041
  1244  0000                     _SSP1CON2bits	set	4037
  1245  0000                     _SSP1CON1bits	set	4038
  1246  0000                     _SSP1ADD	set	4040
  1247  0000                     _SSP1STATbits	set	4039
  1248  0000                     _LATAbits	set	3977
  1249  0000                     _TRISAbits	set	3986
  1250  0000                     _LATEbits	set	3981
  1251  0000                     _TRISEbits	set	3990
  1252  0000                     _LATBbits	set	3978
  1253  0000                     _TRISBbits	set	3987
  1254  0000                     _LATDbits	set	3980
  1255  0000                     _TRISDbits	set	3989
  1256  0000                     _LATCbits	set	3979
  1257  0000                     _TRISCbits	set	3988
  1258  0000                     _T0CONbits	set	4053
  1259  0000                     _INTCON2bits	set	4081
  1260  0000                     _EECON2	set	4007
  1261  0000                     _PORTBbits	set	3969
  1262  0000                     _INTCON3bits	set	4080
  1263  0000                     _TMR0L	set	4054
  1264  0000                     _TMR0H	set	4055
  1265  0000                     _INTCONbits	set	4082
  1266  0000                     _OSCCON	set	4051
  1267  0000                     _OSCTUNEbits	set	3995
  1268  0000                     _PORTAbits	set	3968
  1269  0000                     _USTAT	set	3940
  1270  0000                     _PIR2bits	set	4001
  1271  0000                     _UCON	set	3941
  1272  0000                     _UIRbits	set	3938
  1273  0000                     _UCONbits	set	3941
  1274  0000                     _UIR	set	3938
  1275  0000                     _UEIR	set	3939
  1276  0000                     _PIE2bits	set	4000
  1277  008FCF                     STR_12:
  1278  008FCF  48                 	db	72	;'H'
  1279  008FD0  65                 	db	101	;'e'
  1280  008FD1  6C                 	db	108	;'l'
  1281  008FD2  6C                 	db	108	;'l'
  1282  008FD3  6F                 	db	111	;'o'
  1283  008FD4  20                 	db	32
  1284  008FD5  57                 	db	87	;'W'
  1285  008FD6  6F                 	db	111	;'o'
  1286  008FD7  72                 	db	114	;'r'
  1287  008FD8  6C                 	db	108	;'l'
  1288  008FD9  64                 	db	100	;'d'
  1289  008FDA  21                 	db	33
  1290  008FDB  00                 	db	0
  1291  008FDC                     STR_9:
  1292  008FDC  53                 	db	83	;'S'
  1293  008FDD  6F                 	db	111	;'o'
  1294  008FDE  6C                 	db	108	;'l'
  1295  008FDF  61                 	db	97	;'a'
  1296  008FE0  72                 	db	114	;'r'
  1297  008FE1  43                 	db	67	;'C'
  1298  008FE2  68                 	db	104	;'h'
  1299  008FE3  61                 	db	97	;'a'
  1300  008FE4  72                 	db	114	;'r'
  1301  008FE5  67                 	db	103	;'g'
  1302  008FE6  72                 	db	114	;'r'
  1303  008FE7  00                 	db	0
  1304  008FE8                     STR_10:
  1305  008FE8  46                 	db	70	;'F'
  1306  008FE9  49                 	db	73	;'I'
  1307  008FEA  4C                 	db	76	;'L'
  1308  008FEB  45                 	db	69	;'E'
  1309  008FEC  20                 	db	32
  1310  008FED  20                 	db	32
  1311  008FEE  20                 	db	32
  1312  008FEF  20                 	db	32
  1313  008FF0  00                 	db	0
  1314  008FF1                     STR_1:
  1315  008FF1  4D                 	db	77	;'M'
  1316  008FF2  53                 	db	83	;'S'
  1317  008FF3  44                 	db	68	;'D'
  1318  008FF4  4F                 	db	79	;'O'
  1319  008FF5  53                 	db	83	;'S'
  1320  008FF6  35                 	db	53	;'5'
  1321  008FF7  2E                 	db	46
  1322  008FF8  30                 	db	48	;'0'
  1323  008FF9  00                 	db	0
  1324  008FFA                     STR_11:
  1325  008FFA  54                 	db	84	;'T'
  1326  008FFB  58                 	db	88	;'X'
  1327  008FFC  54                 	db	84	;'T'
  1328  008FFD  00                 	db	0
  1329  0000                     
  1330                           ; #config settings
  1331  008FFE  00                 	db	0	; dummy byte at the end
  1332  0000                     
  1333                           	psect	cinit
  1334  005E5C                     __pcinit:
  1335                           	opt stack 0
  1336  005E5C                     start_initialization:
  1337                           	opt stack 0
  1338  005E5C                     __initialization:
  1339                           	opt stack 0
  1340                           
  1341                           ; Initialize objects allocated to BANK1 (29 bytes)
  1342                           ; load TBLPTR registers with __pidataBANK1
  1343  005E5C  0EB2               	movlw	low __pidataBANK1
  1344  005E5E  6EF6               	movwf	tblptrl,c
  1345  005E60  0E78               	movlw	high __pidataBANK1
  1346  005E62  6EF7               	movwf	tblptrh,c
  1347  005E64  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1348  005E66  6EF8               	movwf	tblptru,c
  1349  005E68  EE01  F0D4         	lfsr	0,__pdataBANK1
  1350  005E6C  EE10 F01D          	lfsr	1,29
  1351  005E70                     copy_data0:
  1352  005E70  0009               	tblrd		*+
  1353  005E72  CFF5 FFEE          	movff	tablat,postinc0
  1354  005E76  50E5               	movf	postdec1,w,c
  1355  005E78  50E1               	movf	fsr1l,w,c
  1356  005E7A  E1FA               	bnz	copy_data0
  1357                           
  1358                           ; Initialize objects allocated to BANK0 (1 bytes)
  1359                           ; load TBLPTR registers with __pidataBANK0
  1360  005E7C  0EC6               	movlw	low __pidataBANK0
  1361  005E7E  6EF6               	movwf	tblptrl,c
  1362  005E80  0E7A               	movlw	high __pidataBANK0
  1363  005E82  6EF7               	movwf	tblptrh,c
  1364  005E84  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1365  005E86  6EF8               	movwf	tblptru,c
  1366  005E88  0009               	tblrd		*+	;fetch initializer
  1367  005E8A  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1368                           
  1369                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1370  005E8E  EE02  F0B2         	lfsr	0,__pbssBIGRAMll
  1371  005E92  EE12 F000          	lfsr	1,512
  1372  005E96                     clear_0:
  1373  005E96  6AEE               	clrf	postinc0,c
  1374  005E98  50E5               	movf	postdec1,w,c
  1375  005E9A  50E1               	movf	fsr1l,w,c
  1376  005E9C  E1FC               	bnz	clear_0
  1377  005E9E  50E2               	movf	fsr1h,w,c
  1378  005EA0  E1FA               	bnz	clear_0
  1379                           
  1380                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1381  005EA2  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1382  005EA6  EE14 F000          	lfsr	1,1024
  1383  005EAA                     clear_1:
  1384  005EAA  6AEE               	clrf	postinc0,c
  1385  005EAC  50E5               	movf	postdec1,w,c
  1386  005EAE  50E1               	movf	fsr1l,w,c
  1387  005EB0  E1FC               	bnz	clear_1
  1388  005EB2  50E2               	movf	fsr1h,w,c
  1389  005EB4  E1FA               	bnz	clear_1
  1390                           
  1391                           ; Clear objects allocated to BANK2 (178 bytes)
  1392  005EB6  EE02  F000         	lfsr	0,__pbssBANK2
  1393  005EBA  0EB2               	movlw	178
  1394  005EBC                     clear_2:
  1395  005EBC  6AEE               	clrf	postinc0,c
  1396  005EBE  06E8               	decf	wreg,f,c
  1397  005EC0  E1FD               	bnz	clear_2
  1398                           
  1399                           ; Clear objects allocated to BANK1 (212 bytes)
  1400  005EC2  EE01  F000         	lfsr	0,__pbssBANK1
  1401  005EC6  0ED4               	movlw	212
  1402  005EC8                     clear_3:
  1403  005EC8  6AEE               	clrf	postinc0,c
  1404  005ECA  06E8               	decf	wreg,f,c
  1405  005ECC  E1FD               	bnz	clear_3
  1406                           
  1407                           ; Clear objects allocated to BANK0 (94 bytes)
  1408  005ECE  EE00  F060         	lfsr	0,__pbssBANK0
  1409  005ED2  0E5E               	movlw	94
  1410  005ED4                     clear_4:
  1411  005ED4  6AEE               	clrf	postinc0,c
  1412  005ED6  06E8               	decf	wreg,f,c
  1413  005ED8  E1FD               	bnz	clear_4
  1414  005EDA                     end_of_initialization:
  1415                           	opt stack 0
  1416  005EDA                     __end_of__initialization:
  1417                           	opt stack 0
  1418  005EDA  0100               	movlb	0
  1419  005EDC  EF70  F026         	goto	_main	;jump to C main() function
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postdec1	equ	0xFE5
  1427                           fsr1h	equ	0xFE2
  1428                           fsr1l	equ	0xFE1
  1429                           
  1430                           	psect	bssBANK0
  1431  000060                     __pbssBANK0:
  1432                           	opt stack 0
  1433  000060                     _os:
  1434                           	opt stack 0
  1435  000060                     	ds	6
  1436  000066                     _inPipes:
  1437                           	opt stack 0
  1438  000066                     	ds	6
  1439  00006C                     _pBDTEntryIn:
  1440                           	opt stack 0
  1441  00006C                     	ds	6
  1442  000072                     _pBDTEntryOut:
  1443                           	opt stack 0
  1444  000072                     	ds	6
  1445  000078                     _hex_file_size:
  1446                           	opt stack 0
  1447  000078                     	ds	4
  1448  00007C                     _hex_file_offset:
  1449                           	opt stack 0
  1450  00007C                     	ds	4
  1451  000080                     _LBA:
  1452                           	opt stack 0
  1453  000080                     	ds	4
  1454  000084                     _hex_file_entries:
  1455                           	opt stack 0
  1456  000084                     	ds	2
  1457  000086                     _system_ui_inactive_count:
  1458                           	opt stack 0
  1459  000086                     	ds	2
  1460  000088                     _USBInHandle:
  1461                           	opt stack 0
  1462  000088                     	ds	2
  1463  00008A                     _USBOutHandle:
  1464                           	opt stack 0
  1465  00008A                     	ds	2
  1466  00008C                     _TransferLength:
  1467                           	opt stack 0
  1468  00008C                     	ds	2
  1469  00008E                     _USBMSDInHandle:
  1470                           	opt stack 0
  1471  00008E                     	ds	2
  1472  000090                     _USBMSDOutHandle:
  1473                           	opt stack 0
  1474  000090                     	ds	2
  1475  000092                     _ptrNextData:
  1476                           	opt stack 0
  1477  000092                     	ds	2
  1478  000094                     _pDst:
  1479                           	opt stack 0
  1480  000094                     	ds	2
  1481  000096                     _pBDTEntryEP0OutNext:
  1482                           	opt stack 0
  1483  000096                     	ds	2
  1484  000098                     _pBDTEntryEP0OutCurrent:
  1485                           	opt stack 0
  1486  000098                     	ds	2
  1487  00009A                     _spi_speed:
  1488                           	opt stack 0
  1489  00009A                     	ds	1
  1490  00009B                     _spi_mode:
  1491                           	opt stack 0
  1492  00009B                     	ds	1
  1493  00009C                     _start_from_byte_next:
  1494                           	opt stack 0
  1495  00009C                     	ds	1
  1496  00009D                     _last_error:
  1497                           	opt stack 0
  1498  00009D                     	ds	1
  1499  00009E                     _power_state:
  1500                           	opt stack 0
  1501  00009E                     	ds	1
  1502  00009F                     _userInterfaceStatus:
  1503                           	opt stack 0
  1504  00009F                     	ds	1
  1505  0000A0                     _i2c_frequency:
  1506                           	opt stack 0
  1507  0000A0                     	ds	1
  1508  0000A1                     _MSDCBWValid:
  1509                           	opt stack 0
  1510  0000A1                     	ds	1
  1511  0000A2                     _MSDHostNoData:
  1512                           	opt stack 0
  1513  0000A2                     	ds	1
  1514  0000A3                     _SoftDetach:
  1515                           	opt stack 0
  1516  0000A3                     	ds	1
  1517  0000A4                     _gblCBWLength:
  1518                           	opt stack 0
  1519  0000A4                     	ds	1
  1520  0000A5                     _MSDRetryAttempt:
  1521                           	opt stack 0
  1522  0000A5                     	ds	1
  1523  0000A6                     _MSDWriteState:
  1524                           	opt stack 0
  1525  0000A6                     	ds	1
  1526  0000A7                     _MSDReadState:
  1527                           	opt stack 0
  1528  0000A7                     	ds	1
  1529  0000A8                     _MSDCommandState:
  1530                           	opt stack 0
  1531  0000A8                     	ds	1
  1532  0000A9                     _MSD_State:
  1533                           	opt stack 0
  1534  0000A9                     	ds	1
  1535  0000AA                     _USBTicksSinceSuspendEnd:
  1536                           	opt stack 0
  1537  0000AA                     	ds	1
  1538  0000AB                     _USBDeferOUTDataStagePackets:
  1539                           	opt stack 0
  1540  0000AB                     	ds	1
  1541  0000AC                     _USBDeferINDataStagePackets:
  1542                           	opt stack 0
  1543  0000AC                     	ds	1
  1544  0000AD                     _USBStatusStageEnabledFlag2:
  1545                           	opt stack 0
  1546  0000AD                     	ds	1
  1547  0000AE                     _USBStatusStageEnabledFlag1:
  1548                           	opt stack 0
  1549  0000AE                     	ds	1
  1550  0000AF                     _USBDeferStatusStagePacket:
  1551                           	opt stack 0
  1552  0000AF                     	ds	1
  1553  0000B0                     _USBStatusStageTimeoutCounter:
  1554                           	opt stack 0
  1555  0000B0                     	ds	1
  1556  0000B1                     _BothEP0OutUOWNsSet:
  1557                           	opt stack 0
  1558  0000B1                     	ds	1
  1559  0000B2                     _endpoint_number:
  1560                           	opt stack 0
  1561  0000B2                     	ds	1
  1562  0000B3                     _USBBusIsSuspended:
  1563                           	opt stack 0
  1564  0000B3                     	ds	1
  1565  0000B4                     _RemoteWakeup:
  1566                           	opt stack 0
  1567  0000B4                     	ds	1
  1568  0000B5                     _controlTransferState:
  1569                           	opt stack 0
  1570  0000B5                     	ds	1
  1571  0000B6                     _shortPacketStatus:
  1572                           	opt stack 0
  1573  0000B6                     	ds	1
  1574  0000B7                     _USBDeviceState:
  1575                           	opt stack 0
  1576  0000B7                     	ds	1
  1577  0000B8                     _USBAlternateInterface:
  1578                           	opt stack 0
  1579  0000B8                     	ds	2
  1580  0000BA                     _active_protocol:
  1581                           	opt stack 0
  1582  0000BA                     	ds	1
  1583  0000BB                     _idle_rate:
  1584                           	opt stack 0
  1585  0000BB                     	ds	1
  1586  0000BC                     _USTATcopy:
  1587                           	opt stack 0
  1588  0000BC                     	ds	1
  1589  0000BD                     _USBActiveConfiguration:
  1590                           	opt stack 0
  1591  0000BD                     	ds	1
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           postinc0	equ	0xFEE
  1597                           wreg	equ	0xFE8
  1598                           postdec1	equ	0xFE5
  1599                           fsr1h	equ	0xFE2
  1600                           fsr1l	equ	0xFE1
  1601                           
  1602                           	psect	dataBANK0
  1603  0000FE                     __pdataBANK0:
  1604                           	opt stack 0
  1605  0000FE                     _file_number:
  1606                           	opt stack 0
  1607  0000FE                     	ds	1
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           postdec1	equ	0xFE5
  1615                           fsr1h	equ	0xFE2
  1616                           fsr1l	equ	0xFE1
  1617                           
  1618                           	psect	bssBANK1
  1619  000100                     __pbssBANK1:
  1620                           	opt stack 0
  1621  000100                     _gblCBW:
  1622                           	opt stack 0
  1623  000100                     	ds	31
  1624  00011F                     _gblSenseData:
  1625                           	opt stack 0
  1626  00011F                     	ds	18
  1627  000131                     _outPipes:
  1628                           	opt stack 0
  1629  000131                     	ds	8
  1630  000139                     _communicationSettings:
  1631                           	opt stack 0
  1632  000139                     	ds	7
  1633  000140                     _extended_linear_address:
  1634                           	opt stack 0
  1635  000140                     	ds	4
  1636  000144                     _file_maximum_address:
  1637                           	opt stack 0
  1638  000144                     	ds	4
  1639  000148                     _file_minimum_address:
  1640                           	opt stack 0
  1641  000148                     	ds	4
  1642  00014C                     _gblBLKLen:
  1643                           	opt stack 0
  1644  00014C                     	ds	4
  1645  000150                     _gblNumBLKS:
  1646                           	opt stack 0
  1647  000150                     	ds	4
  1648  000154                     _USB1msTickCount:
  1649                           	opt stack 0
  1650  000154                     	ds	4
  1651  000158                     _ep_data_out:
  1652                           	opt stack 0
  1653  000158                     	ds	3
  1654  00015B                     _ep_data_in:
  1655                           	opt stack 0
  1656  00015B                     	ds	3
  1657  00015E                     _FileAddress:
  1658                           	opt stack 0
  1659  00015E                     	ds	2
  1660  000160                     _flash_pages_written:
  1661                           	opt stack 0
  1662  000160                     	ds	2
  1663  000162                     _total_hex_file_entries:
  1664                           	opt stack 0
  1665  000162                     	ds	2
  1666  000164                     _gblMediaPresent:
  1667                           	opt stack 0
  1668  000164                     	ds	2
  1669  000166                     _MSBBufferIndex:
  1670                           	opt stack 0
  1671  000166                     	ds	2
  1672  000168                     _display_content:
  1673                           	opt stack 0
  1674  000168                     	ds	80
  1675  0001B8                     _hex_file_entry:
  1676                           	opt stack 0
  1677  0001B8                     	ds	23
  1678  0001CF                     _mediaInformation:
  1679                           	opt stack 0
  1680  0001CF                     	ds	5
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           postinc0	equ	0xFEE
  1686                           wreg	equ	0xFE8
  1687                           postdec1	equ	0xFE5
  1688                           fsr1h	equ	0xFE2
  1689                           fsr1l	equ	0xFE1
  1690                           
  1691                           	psect	dataBANK1
  1692  0001D4                     __pdataBANK1:
  1693                           	opt stack 0
  1694  0001D4                     _LUN:
  1695                           	opt stack 0
  1696  0001D4                     	ds	20
  1697  0001E8                     i2c_display_send_init_sequence@F6765:
  1698                           	opt stack 0
  1699  0001E8                     	ds	9
  1700                           tblptru	equ	0xFF8
  1701                           tblptrh	equ	0xFF7
  1702                           tblptrl	equ	0xFF6
  1703                           tablat	equ	0xFF5
  1704                           postinc0	equ	0xFEE
  1705                           wreg	equ	0xFE8
  1706                           postdec1	equ	0xFE5
  1707                           fsr1h	equ	0xFE2
  1708                           fsr1l	equ	0xFE1
  1709                           
  1710                           	psect	bssBANK2
  1711  000200                     __pbssBANK2:
  1712                           	opt stack 0
  1713  000200                     _ToSendDataBuffer:
  1714                           	opt stack 0
  1715  000200                     	ds	64
  1716  000240                     _ReceivedDataBuffer:
  1717                           	opt stack 0
  1718  000240                     	ds	64
  1719  000280                     _file_buffer:
  1720                           	opt stack 0
  1721  000280                     	ds	50
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1h	equ	0xFE2
  1730                           fsr1l	equ	0xFE1
  1731                           
  1732                           	psect	bssBIGRAMlh
  1733  000800                     __pbssBIGRAMlh:
  1734                           	opt stack 0
  1735  000800                     _pageBuffer:
  1736                           	opt stack 0
  1737  000800                     	ds	1024
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           fsr1h	equ	0xFE2
  1746                           fsr1l	equ	0xFE1
  1747                           
  1748                           	psect	bssBIGRAMll
  1749  0002B2                     __pbssBIGRAMll:
  1750                           	opt stack 0
  1751  0002B2                     _buffer:
  1752                           	opt stack 0
  1753  0002B2                     	ds	512
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           postdec1	equ	0xFE5
  1761                           fsr1h	equ	0xFE2
  1762                           fsr1l	equ	0xFE1
  1763                           
  1764                           	psect	cstackBANK0
  1765  0000BE                     __pcstackBANK0:
  1766                           	opt stack 0
  1767  0000BE                     fat_create_file@next_cluster:
  1768                           	opt stack 0
  1769  0000BE                     fat_append_to_file@sector:
  1770                           	opt stack 0
  1771  0000BE                     fat_read_from_file@sector:
  1772                           	opt stack 0
  1773                           
  1774                           ; 2 bytes @ 0x0
  1775  0000BE                     	ds	2
  1776  0000C0                     fat_read_from_file@file_number:
  1777                           	opt stack 0
  1778  0000C0                     fat_create_file@cluster_count:
  1779                           	opt stack 0
  1780  0000C0                     fat_append_to_file@file_size:
  1781                           	opt stack 0
  1782                           
  1783                           ; 4 bytes @ 0x2
  1784  0000C0                     	ds	1
  1785  0000C1                     fat_read_from_file@root:
  1786                           	opt stack 0
  1787                           
  1788                           ; 32 bytes @ 0x3
  1789  0000C1                     	ds	1
  1790  0000C2                     fat_create_file@root_slot:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x4
  1794  0000C2                     	ds	1
  1795  0000C3                     fat_create_file@number_of_clusters:
  1796                           	opt stack 0
  1797                           
  1798                           ; 2 bytes @ 0x5
  1799  0000C3                     	ds	1
  1800  0000C4                     fat_append_to_file@new_cluster:
  1801                           	opt stack 0
  1802                           
  1803                           ; 2 bytes @ 0x6
  1804  0000C4                     	ds	1
  1805  0000C5                     fat_create_file@cluster:
  1806                           	opt stack 0
  1807                           
  1808                           ; 2 bytes @ 0x7
  1809  0000C5                     	ds	1
  1810  0000C6                     fat_append_to_file@fat_cluster:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x8
  1814  0000C6                     	ds	1
  1815  0000C7                     fat_create_file@root_entry:
  1816                           	opt stack 0
  1817                           
  1818                           ; 32 bytes @ 0x9
  1819  0000C7                     	ds	1
  1820  0000C8                     fat_append_to_file@offset:
  1821                           	opt stack 0
  1822                           
  1823                           ; 2 bytes @ 0xA
  1824  0000C8                     	ds	2
  1825  0000CA                     fat_append_to_file@file_number:
  1826                           	opt stack 0
  1827                           
  1828                           ; 1 bytes @ 0xC
  1829  0000CA                     	ds	1
  1830  0000CB                     fat_append_to_file@length:
  1831                           	opt stack 0
  1832                           
  1833                           ; 2 bytes @ 0xD
  1834  0000CB                     	ds	2
  1835  0000CD                     fat_append_to_file@position:
  1836                           	opt stack 0
  1837                           
  1838                           ; 4 bytes @ 0xF
  1839  0000CD                     	ds	4
  1840  0000D1                     fat_append_to_file@root:
  1841                           	opt stack 0
  1842                           
  1843                           ; 32 bytes @ 0x13
  1844  0000D1                     	ds	16
  1845  0000E1                     fat_read_from_file@cluster:
  1846                           	opt stack 0
  1847                           
  1848                           ; 2 bytes @ 0x23
  1849  0000E1                     	ds	2
  1850  0000E3                     fat_read_from_file@offset:
  1851                           	opt stack 0
  1852                           
  1853                           ; 2 bytes @ 0x25
  1854  0000E3                     	ds	2
  1855  0000E5                     fat_read_from_file@read_length:
  1856                           	opt stack 0
  1857                           
  1858                           ; 2 bytes @ 0x27
  1859  0000E5                     	ds	2
  1860  0000E7                     fat_read_from_file@position:
  1861                           	opt stack 0
  1862                           
  1863                           ; 4 bytes @ 0x29
  1864  0000E7                     	ds	4
  1865  0000EB                     __bootloader_program@buffer:
  1866                           	opt stack 0
  1867  0000EB                     __fill_buffer_read_file@file_size:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0x2D
  1871  0000EB                     	ds	2
  1872  0000ED                     __bootloader_program@entry_page:
  1873                           	opt stack 0
  1874                           
  1875                           ; 2 bytes @ 0x2F
  1876  0000ED                     	ds	2
  1877  0000EF                     __bootloader_program@address_within_page:
  1878                           	opt stack 0
  1879  0000EF                     __fill_buffer_read_file@data_length:
  1880                           	opt stack 0
  1881                           
  1882                           ; 4 bytes @ 0x31
  1883  0000EF                     	ds	2
  1884  0000F1                     __parse_command_long@data:
  1885                           	opt stack 0
  1886  0000F1                     __bootloader_program@return_value:
  1887                           	opt stack 0
  1888                           
  1889                           ; 4 bytes @ 0x33
  1890  0000F1                     	ds	2
  1891  0000F3                     __parse_command_long@length:
  1892                           	opt stack 0
  1893  0000F3                     __fill_buffer_read_file@start:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x35
  1897  0000F3                     	ds	1
  1898  0000F4                     api_parse@inBuffer:
  1899                           	opt stack 0
  1900                           
  1901                           ; 2 bytes @ 0x36
  1902  0000F4                     	ds	1
  1903  0000F5                     __bootloader_program@address32:
  1904                           	opt stack 0
  1905                           
  1906                           ; 4 bytes @ 0x37
  1907  0000F5                     	ds	1
  1908  0000F6                     api_parse@receivedDataLength:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x38
  1912  0000F6                     	ds	1
  1913  0000F7                     ??_api_parse:
  1914                           
  1915                           ; 1 bytes @ 0x39
  1916  0000F7                     	ds	2
  1917  0000F9                     __bootloader_program@start_from_byte:
  1918                           	opt stack 0
  1919  0000F9                     api_parse@idx:
  1920                           	opt stack 0
  1921                           
  1922                           ; 1 bytes @ 0x3B
  1923  0000F9                     	ds	1
  1924  0000FA                     ??_APP_DeviceCustomHIDTasks:
  1925  0000FA                     __bootloader_program@cntr:
  1926                           	opt stack 0
  1927                           
  1928                           ; 2 bytes @ 0x3C
  1929  0000FA                     	ds	2
  1930  0000FC                     __bootloader_program@page_to_write:
  1931                           	opt stack 0
  1932                           
  1933                           ; 2 bytes @ 0x3E
  1934  0000FC                     	ds	2
  1935                           tblptru	equ	0xFF8
  1936                           tblptrh	equ	0xFF7
  1937                           tblptrl	equ	0xFF6
  1938                           tablat	equ	0xFF5
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1h	equ	0xFE2
  1943                           fsr1l	equ	0xFE1
  1944                           
  1945                           	psect	cstackCOMRAM
  1946  000001                     __pcstackCOMRAM:
  1947                           	opt stack 0
  1948  000001                     ??_USBStdGetDscHandler:
  1949  000001                     ??_USBStdGetStatusHandler:
  1950  000001                     ??_system_delay_ms:
  1951  000001                     ??__i2c_wait_idle:
  1952  000001                     ??__display_clear:
  1953  000001                     ?_USBTransferOnePacket:
  1954                           	opt stack 0
  1955  000001                     ?_ExternalFlash_MediaInitialize:
  1956                           	opt stack 0
  1957  000001                     ?_ExternalFlash_SectorSizeRead:
  1958                           	opt stack 0
  1959  000001                     ?_bootloader_get_entries:
  1960                           	opt stack 0
  1961  000001                     ?_bootloader_get_total_entries:
  1962                           	opt stack 0
  1963  000001                     ?_bootloader_get_rec_address:
  1964                           	opt stack 0
  1965  000001                     ?_bootloader_get_flashPagesWritten:
  1966                           	opt stack 0
  1967  000001                     ?_strncmp:
  1968                           	opt stack 0
  1969  000001                     ?_internalFlash_pageFromAddress:
  1970                           	opt stack 0
  1971  000001                     ?_internalFlash_getBuffer:
  1972                           	opt stack 0
  1973  000001                     ?__get_time:
  1974                           	opt stack 0
  1975  000001                     ?__get_date:
  1976                           	opt stack 0
  1977  000001                     ?__sector_from_cluster:
  1978                           	opt stack 0
  1979  000001                     ?_bootloader_get_rec_dataLength:
  1980                           	opt stack 0
  1981  000001                     ?___lwdiv:
  1982                           	opt stack 0
  1983  000001                     ?___lwmod:
  1984                           	opt stack 0
  1985  000001                     ?_ExternalFlash_CapacityRead:
  1986                           	opt stack 0
  1987  000001                     ?_bootloader_get_file_size:
  1988                           	opt stack 0
  1989  000001                     ?_internalFlash_addressFromPage:
  1990                           	opt stack 0
  1991  000001                     ?___lldiv:
  1992                           	opt stack 0
  1993  000001                     ?___llmod:
  1994                           	opt stack 0
  1995  000001                     USBTransferOnePacket@dir:
  1996                           	opt stack 0
  1997  000001                     USBStallEndpoint@dir:
  1998                           	opt stack 0
  1999  000001                     USBConfigureEndpoint@direction:
  2000                           	opt stack 0
  2001  000001                     USBCtrlTrfTxService@byteToSend:
  2002                           	opt stack 0
  2003  000001                     USBCtrlTrfRxService@i:
  2004                           	opt stack 0
  2005  000001                     __i2c_send@dat:
  2006                           	opt stack 0
  2007  000001                     i2c_set_frequency@frequency:
  2008                           	opt stack 0
  2009  000001                     display_get_character@position:
  2010                           	opt stack 0
  2011  000001                     __display_start@cntr:
  2012                           	opt stack 0
  2013  000001                     hexCharToUint8@c:
  2014                           	opt stack 0
  2015  000001                     bootloader_get_rec_data@index:
  2016                           	opt stack 0
  2017  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2018                           	opt stack 0
  2019  000001                     spi_init@mode:
  2020                           	opt stack 0
  2021  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2022                           	opt stack 0
  2023  000001                     SYSTEM_Initialize@pll_startup_counter:
  2024                           	opt stack 0
  2025  000001                     ExternalFlash_MediaInitialize@config:
  2026                           	opt stack 0
  2027  000001                     ExternalFlash_SectorSizeRead@config:
  2028                           	opt stack 0
  2029  000001                     ExternalFlash_CapacityRead@config:
  2030                           	opt stack 0
  2031  000001                     ExternalFlash_MediaDetect@config:
  2032                           	opt stack 0
  2033  000001                     ExternalFlash_WriteProtectStateGet@config:
  2034                           	opt stack 0
  2035  000001                     __sector_from_cluster@fat_cluster:
  2036                           	opt stack 0
  2037  000001                     __get_mbr@idx:
  2038                           	opt stack 0
  2039  000001                     __get_fbr@idx:
  2040                           	opt stack 0
  2041  000001                     __get_fat@idx:
  2042                           	opt stack 0
  2043  000001                     __get_root@idx:
  2044                           	opt stack 0
  2045  000001                     __get_data@idx:
  2046                           	opt stack 0
  2047  000001                     internalFlash_addressFromPage@page:
  2048                           	opt stack 0
  2049  000001                     __fill_buffer_get_configuration@outBuffer:
  2050                           	opt stack 0
  2051  000001                     __parse_file_truncate@data:
  2052                           	opt stack 0
  2053  000001                     __parse_file_modify@data:
  2054                           	opt stack 0
  2055  000001                     spi_tx@data:
  2056                           	opt stack 0
  2057  000001                     spi_tx_tx@command:
  2058                           	opt stack 0
  2059  000001                     spi_tx_rx@command:
  2060                           	opt stack 0
  2061  000001                     ___lwdiv@dividend:
  2062                           	opt stack 0
  2063  000001                     ___lwmod@dividend:
  2064                           	opt stack 0
  2065  000001                     memcpy@d1:
  2066                           	opt stack 0
  2067  000001                     memset@p1:
  2068                           	opt stack 0
  2069  000001                     strncmp@s1:
  2070                           	opt stack 0
  2071  000001                     __bootloader_check_address@address:
  2072                           	opt stack 0
  2073  000001                     internalFlash_pageFromAddress@address:
  2074                           	opt stack 0
  2075  000001                     ___lldiv@dividend:
  2076                           	opt stack 0
  2077  000001                     ___llmod@dividend:
  2078                           	opt stack 0
  2079                           
  2080                           ; 4 bytes @ 0x0
  2081  000001                     	ds	1
  2082  000002                     ??_USBConfigureEndpoint:
  2083  000002                     ??_USBStallEndpoint:
  2084  000002                     ??_display_get_character:
  2085  000002                     USBCtrlTrfRxService@byteToRead:
  2086                           	opt stack 0
  2087  000002                     USBCtrlTrfInHandler@lastDTS:
  2088                           	opt stack 0
  2089  000002                     system_delay_ms@ms:
  2090                           	opt stack 0
  2091  000002                     hexCharToUint8@ascii:
  2092                           	opt stack 0
  2093  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2094                           	opt stack 0
  2095  000002                     USBTransferOnePacket@data:
  2096                           	opt stack 0
  2097  000002                     USBStdGetStatusHandler@p:
  2098                           	opt stack 0
  2099                           
  2100                           ; 2 bytes @ 0x1
  2101  000002                     	ds	1
  2102  000003                     ??_MSDComputeDeviceInAndResidue:
  2103  000003                     ??__get_mbr:
  2104  000003                     ??__get_fbr:
  2105  000003                     ??__get_fat:
  2106  000003                     ??__get_root:
  2107  000003                     ?_hexCharsToUint16:
  2108                           	opt stack 0
  2109  000003                     system_delay_ms@cntr:
  2110                           	opt stack 0
  2111  000003                     __display_clear@row:
  2112                           	opt stack 0
  2113  000003                     hexCharsToUint8@c2:
  2114                           	opt stack 0
  2115  000003                     hexCharsToUint16@c2:
  2116                           	opt stack 0
  2117  000003                     SYSTEM_Initialize@pll_startup_counter_2821:
  2118                           	opt stack 0
  2119  000003                     __get_time@time:
  2120                           	opt stack 0
  2121  000003                     __get_date@date:
  2122                           	opt stack 0
  2123  000003                     internalFlash_erasePage@page:
  2124                           	opt stack 0
  2125  000003                     internalFlash_writePage@page:
  2126                           	opt stack 0
  2127  000003                     spi_tx@length:
  2128                           	opt stack 0
  2129  000003                     spi_tx_tx@command_length:
  2130                           	opt stack 0
  2131  000003                     spi_tx_rx@command_length:
  2132                           	opt stack 0
  2133  000003                     ___lwdiv@divisor:
  2134                           	opt stack 0
  2135  000003                     ___lwmod@divisor:
  2136                           	opt stack 0
  2137  000003                     memset@c:
  2138                           	opt stack 0
  2139  000003                     strncmp@s2:
  2140                           	opt stack 0
  2141  000003                     memcpy@s1:
  2142                           	opt stack 0
  2143                           
  2144                           ; 3 bytes @ 0x2
  2145  000003                     	ds	1
  2146  000004                     ??_hexCharsToUint8:
  2147  000004                     USBTransferOnePacket@len:
  2148                           	opt stack 0
  2149  000004                     display_get_character@line:
  2150                           	opt stack 0
  2151  000004                     __display_clear@col:
  2152                           	opt stack 0
  2153  000004                     hexCharsToUint16@c3:
  2154                           	opt stack 0
  2155                           
  2156                           ; 1 bytes @ 0x3
  2157  000004                     	ds	1
  2158  000005                     ??_USBTransferOnePacket:
  2159  000005                     ??_spi_tx:
  2160  000005                     ??_internalFlash_pageFromAddress:
  2161  000005                     SYSTEM_Initialize@state:
  2162                           	opt stack 0
  2163  000005                     hexCharsToUint8@c1:
  2164                           	opt stack 0
  2165  000005                     hexCharsToUint16@c4:
  2166                           	opt stack 0
  2167  000005                     __bootloader_check_address@dataLength:
  2168                           	opt stack 0
  2169  000005                     ___lwmod@counter:
  2170                           	opt stack 0
  2171  000005                     __update_modified_time@root:
  2172                           	opt stack 0
  2173  000005                     __fill_buffer_get_display@outBuffer:
  2174                           	opt stack 0
  2175  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2176                           	opt stack 0
  2177  000005                     spi_tx_tx@data:
  2178                           	opt stack 0
  2179  000005                     spi_tx_rx@data:
  2180                           	opt stack 0
  2181  000005                     ___lwdiv@quotient:
  2182                           	opt stack 0
  2183  000005                     memset@n:
  2184                           	opt stack 0
  2185  000005                     strncmp@len:
  2186                           	opt stack 0
  2187  000005                     internalFlash_erasePage@address:
  2188                           	opt stack 0
  2189  000005                     internalFlash_writePage@address:
  2190                           	opt stack 0
  2191  000005                     internalFlash_addressFromPage@address:
  2192                           	opt stack 0
  2193  000005                     ___lldiv@divisor:
  2194                           	opt stack 0
  2195  000005                     ___llmod@divisor:
  2196                           	opt stack 0
  2197                           
  2198                           ; 4 bytes @ 0x4
  2199  000005                     	ds	1
  2200  000006                     ??_hexCharsToUint16:
  2201  000006                     ??__bootloader_check_address:
  2202  000006                     USBStallEndpoint@ep:
  2203                           	opt stack 0
  2204  000006                     USBConfigureEndpoint@EPNum:
  2205                           	opt stack 0
  2206  000006                     hexCharsToUint8@retVal:
  2207                           	opt stack 0
  2208  000006                     __i2c_write@data:
  2209                           	opt stack 0
  2210  000006                     __i2c_read@data:
  2211                           	opt stack 0
  2212  000006                     i2c_display_write_fixed@data:
  2213                           	opt stack 0
  2214  000006                     memcpy@n:
  2215                           	opt stack 0
  2216                           
  2217                           ; 2 bytes @ 0x5
  2218  000006                     	ds	1
  2219  000007                     ??_strncmp:
  2220  000007                     ??__fill_buffer_get_bootloader_details:
  2221  000007                     __fill_buffer_get_display@secondHalf:
  2222                           	opt stack 0
  2223  000007                     ___lwdiv@counter:
  2224                           	opt stack 0
  2225  000007                     USBStallEndpoint@p:
  2226                           	opt stack 0
  2227  000007                     USBConfigureEndpoint@handle:
  2228                           	opt stack 0
  2229  000007                     spi_tx_tx@data_length:
  2230                           	opt stack 0
  2231  000007                     spi_tx_rx@data_length:
  2232                           	opt stack 0
  2233  000007                     memset@p:
  2234                           	opt stack 0
  2235                           
  2236                           ; 2 bytes @ 0x6
  2237  000007                     	ds	1
  2238  000008                     ??__fill_buffer_get_display:
  2239  000008                     __i2c_write@length:
  2240                           	opt stack 0
  2241  000008                     __i2c_read@length:
  2242                           	opt stack 0
  2243  000008                     i2c_display_write_fixed@length:
  2244                           	opt stack 0
  2245  000008                     utoa@buf:
  2246                           	opt stack 0
  2247  000008                     memcpy@s:
  2248                           	opt stack 0
  2249                           
  2250                           ; 3 bytes @ 0x7
  2251  000008                     	ds	1
  2252  000009                     ??_spi_tx_rx:
  2253  000009                     ??_spi_tx_tx:
  2254  000009                     ??__i2c_read:
  2255  000009                     ?_internalFlash_addressWithinPage:
  2256                           	opt stack 0
  2257  000009                     USBDeviceInit@i:
  2258                           	opt stack 0
  2259  000009                     USBEnableEndpoint@options:
  2260                           	opt stack 0
  2261  000009                     USBTransferOnePacket@ep:
  2262                           	opt stack 0
  2263  000009                     MSDErrorHandler@ErrorCase:
  2264                           	opt stack 0
  2265  000009                     __i2c_write@slave_address:
  2266                           	opt stack 0
  2267  000009                     i2c_display_write_fixed@pos:
  2268                           	opt stack 0
  2269  000009                     __flash_wakeup@command:
  2270                           	opt stack 0
  2271  000009                     hexCharsToUint16@c1:
  2272                           	opt stack 0
  2273  000009                     ___llmod@counter:
  2274                           	opt stack 0
  2275  000009                     internalFlash_writePage@cntr:
  2276                           	opt stack 0
  2277  000009                     internalFlash_addressWithinPage@address:
  2278                           	opt stack 0
  2279  000009                     ___lldiv@quotient:
  2280                           	opt stack 0
  2281                           
  2282                           ; 4 bytes @ 0x8
  2283  000009                     	ds	1
  2284  00000A                     MSDErrorHandler@OldMSD_State:
  2285                           	opt stack 0
  2286  00000A                     __i2c_write@cntr:
  2287                           	opt stack 0
  2288  00000A                     __bootloader_check_address@worst_case:
  2289                           	opt stack 0
  2290  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2291                           	opt stack 0
  2292  00000A                     USBEnableEndpoint@p:
  2293                           	opt stack 0
  2294  00000A                     USBTransferOnePacket@handle:
  2295                           	opt stack 0
  2296  00000A                     hexCharsToUint16@retVal:
  2297                           	opt stack 0
  2298  00000A                     utoa@val:
  2299                           	opt stack 0
  2300                           
  2301                           ; 2 bytes @ 0x9
  2302  00000A                     	ds	1
  2303  00000B                     __ic2_display_set_address@address:
  2304                           	opt stack 0
  2305  00000B                     i2c_digipot_backlight@level:
  2306                           	opt stack 0
  2307  00000B                     __bootloader_check_address@byte_status:
  2308                           	opt stack 0
  2309  00000B                     internalFlash_writePage@block_cntr:
  2310                           	opt stack 0
  2311  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2312                           	opt stack 0
  2313  00000B                     i2c_digipot_reset_on@data_array:
  2314                           	opt stack 0
  2315  00000B                     i2c_digipot_reset_off@data_array:
  2316                           	opt stack 0
  2317  00000B                     i2c_eeprom_writeByte@address:
  2318                           	opt stack 0
  2319  00000B                     memcpy@d:
  2320                           	opt stack 0
  2321  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2322                           	opt stack 0
  2323  00000B                     i2c_display_send_init_sequence@init_sequence:
  2324                           	opt stack 0
  2325                           
  2326                           ; 9 bytes @ 0xA
  2327  00000B                     	ds	1
  2328  00000C                     ??_USBMSDInit:
  2329  00000C                     ?_parseHexFileEntry:
  2330                           	opt stack 0
  2331  00000C                     USBEnableEndpoint@ep:
  2332                           	opt stack 0
  2333  00000C                     __bootloader_check_address@cntr:
  2334                           	opt stack 0
  2335  00000C                     internalFlash_writePage@byte_cntr:
  2336                           	opt stack 0
  2337  00000C                     _USBCheckMSDRequest$2319:
  2338                           	opt stack 0
  2339  00000C                     MSDTransferTerminated@handle:
  2340                           	opt stack 0
  2341  00000C                     __ic2_display_set_address@data_array:
  2342                           	opt stack 0
  2343  00000C                     i2c_digipot_backlight@data_array:
  2344                           	opt stack 0
  2345  00000C                     parseHexFileEntry@data:
  2346                           	opt stack 0
  2347  00000C                     utoa@base:
  2348                           	opt stack 0
  2349  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2350                           	opt stack 0
  2351                           
  2352                           ; 4 bytes @ 0xB
  2353  00000C                     	ds	1
  2354  00000D                     ?__flash_get_status:
  2355                           	opt stack 0
  2356  00000D                     i2c_eeprom_writeByte@data:
  2357                           	opt stack 0
  2358  00000D                     __fill_buffer_get_display@cntr:
  2359                           	opt stack 0
  2360  00000D                     ___lldiv@counter:
  2361                           	opt stack 0
  2362  00000D                     memcpy@tmp:
  2363                           	opt stack 0
  2364  00000D                     internalFlash_addressWithinPage@page:
  2365                           	opt stack 0
  2366                           
  2367                           ; 2 bytes @ 0xC
  2368  00000D                     	ds	1
  2369  00000E                     ??_i2c_eeprom_writeByte:
  2370  00000E                     i2c_display_cursor@position:
  2371                           	opt stack 0
  2372  00000E                     __fill_buffer_get_display@line:
  2373                           	opt stack 0
  2374  00000E                     _USBCheckMSDRequest$2320:
  2375                           	opt stack 0
  2376  00000E                     _MSDTransferTerminated$2407:
  2377                           	opt stack 0
  2378  00000E                     utoa@v:
  2379                           	opt stack 0
  2380  00000E                     parseHexFileEntry@offset:
  2381                           	opt stack 0
  2382  00000E                     internalFlash_read@address:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0xD
  2386  00000E                     	ds	1
  2387  00000F                     ??_internalFlash_addressWithinPage:
  2388  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2389                           	opt stack 0
  2390  00000F                     i2c_display_cursor@line:
  2391                           	opt stack 0
  2392  00000F                     __flash_get_status@command:
  2393                           	opt stack 0
  2394  00000F                     __fill_buffer_get_display@start_line:
  2395                           	opt stack 0
  2396                           
  2397                           ; 1 bytes @ 0xE
  2398  00000F                     	ds	1
  2399  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2400                           	opt stack 0
  2401  000010                     __i2c_read@slave_address:
  2402                           	opt stack 0
  2403  000010                     i2c_display_cursor@address:
  2404                           	opt stack 0
  2405  000010                     __fill_buffer_get_display@position:
  2406                           	opt stack 0
  2407  000010                     utoa@c:
  2408                           	opt stack 0
  2409  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2410                           	opt stack 0
  2411  000010                     __flash_get_status@status:
  2412                           	opt stack 0
  2413  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2414                           	opt stack 0
  2415                           
  2416                           ; 2 bytes @ 0xF
  2417  000010                     	ds	1
  2418  000011                     MSDCheckForErrorCases@DeviceNoData:
  2419                           	opt stack 0
  2420  000011                     __i2c_read@cntr:
  2421                           	opt stack 0
  2422  000011                     i2c_eeprom_writeByte@dat:
  2423                           	opt stack 0
  2424  000011                     itoa@buf:
  2425                           	opt stack 0
  2426                           
  2427                           ; 2 bytes @ 0x10
  2428  000011                     	ds	1
  2429  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2430                           	opt stack 0
  2431  000012                     i2c_eeprom_readByte@address:
  2432                           	opt stack 0
  2433  000012                     flash_is_busy@status:
  2434                           	opt stack 0
  2435  000012                     parseHexFileEntry@hexEntry:
  2436                           	opt stack 0
  2437  000012                     internalFlash_read@data_length:
  2438                           	opt stack 0
  2439                           
  2440                           ; 2 bytes @ 0x11
  2441  000012                     	ds	1
  2442  000013                     i2c_eeprom_writeByte@slave_address:
  2443                           	opt stack 0
  2444  000013                     itoa@val:
  2445                           	opt stack 0
  2446  000013                     internalFlash_addressWithinPage@page_start_address:
  2447                           	opt stack 0
  2448                           
  2449                           ; 4 bytes @ 0x12
  2450  000013                     	ds	1
  2451  000014                     ??_i2c_eeprom_readByte:
  2452  000014                     ??_parseHexFileEntry:
  2453  000014                     __parse_command_short@cmd:
  2454                           	opt stack 0
  2455  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2456                           	opt stack 0
  2457  000014                     __flash_copy_page_to_buffer@page:
  2458                           	opt stack 0
  2459  000014                     __flash_compare_page_to_buffer@page:
  2460                           	opt stack 0
  2461  000014                     __flash_write_to_buffer@start:
  2462                           	opt stack 0
  2463  000014                     __flash_write_page_from_buffer@page:
  2464                           	opt stack 0
  2465  000014                     flash_partial_read@page:
  2466                           	opt stack 0
  2467  000014                     internalFlash_read@buffer:
  2468                           	opt stack 0
  2469  000014                     __fill_buffer_get_status@outBuffer:
  2470                           	opt stack 0
  2471  000014                     __flash_set_page_size@command:
  2472                           	opt stack 0
  2473                           
  2474                           ; 4 bytes @ 0x13
  2475  000014                     	ds	1
  2476  000015                     itoa@base:
  2477                           	opt stack 0
  2478                           
  2479                           ; 2 bytes @ 0x14
  2480  000015                     	ds	1
  2481  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2482  000016                     __flash_copy_page_to_buffer@buffer:
  2483                           	opt stack 0
  2484  000016                     __flash_compare_page_to_buffer@buffer:
  2485                           	opt stack 0
  2486  000016                     __flash_write_page_from_buffer@buffer:
  2487                           	opt stack 0
  2488  000016                     __flash_write_to_buffer@data:
  2489                           	opt stack 0
  2490  000016                     flash_partial_read@start:
  2491                           	opt stack 0
  2492  000016                     internalFlash_readPage@page:
  2493                           	opt stack 0
  2494                           
  2495                           ; 2 bytes @ 0x15
  2496  000016                     	ds	1
  2497  000017                     ??__flash_copy_page_to_buffer:
  2498  000017                     ??__flash_compare_page_to_buffer:
  2499  000017                     ??__flash_write_page_from_buffer:
  2500  000017                     i2c_eeprom_readByte@slave_address:
  2501                           	opt stack 0
  2502  000017                     itoa@cp:
  2503                           	opt stack 0
  2504                           
  2505                           ; 2 bytes @ 0x16
  2506  000017                     	ds	1
  2507  000018                     ??_USBStdFeatureReqHandler:
  2508  000018                     USBStdSetCfgHandler@i:
  2509                           	opt stack 0
  2510  000018                     i2c_eeprom_readByte@addr:
  2511                           	opt stack 0
  2512  000018                     __flash_set_page_size@size:
  2513                           	opt stack 0
  2514  000018                     __flash_write_to_buffer@data_length:
  2515                           	opt stack 0
  2516  000018                     flash_partial_read@length:
  2517                           	opt stack 0
  2518  000018                     internalFlash_readPage@address:
  2519                           	opt stack 0
  2520                           
  2521                           ; 4 bytes @ 0x17
  2522  000018                     	ds	1
  2523  000019                     USBStdFeatureReqHandler@pUEP:
  2524                           	opt stack 0
  2525  000019                     __display_itoa_u16@value:
  2526                           	opt stack 0
  2527                           
  2528                           ; 4 bytes @ 0x18
  2529  000019                     	ds	1
  2530  00001A                     __flash_write_to_buffer@buffer:
  2531                           	opt stack 0
  2532  00001A                     __flash_compare_page_to_buffer@status:
  2533                           	opt stack 0
  2534  00001A                     flash_partial_read@data:
  2535                           	opt stack 0
  2536  00001A                     __flash_copy_page_to_buffer@command:
  2537                           	opt stack 0
  2538  00001A                     __flash_write_page_from_buffer@command:
  2539                           	opt stack 0
  2540                           
  2541                           ; 4 bytes @ 0x19
  2542  00001A                     	ds	1
  2543  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2544                           	opt stack 0
  2545  00001B                     __flash_write_to_buffer@command:
  2546                           	opt stack 0
  2547                           
  2548                           ; 4 bytes @ 0x1A
  2549  00001B                     	ds	1
  2550  00001C                     ??_flash_partial_read:
  2551  00001C                     parseHexFileEntry@i:
  2552                           	opt stack 0
  2553  00001C                     USBStdFeatureReqHandler@p:
  2554                           	opt stack 0
  2555  00001C                     __flash_compare_page_to_buffer@command:
  2556                           	opt stack 0
  2557                           
  2558                           ; 4 bytes @ 0x1B
  2559  00001C                     	ds	1
  2560  00001D                     __display_itoa_u16@text:
  2561                           	opt stack 0
  2562                           
  2563                           ; 2 bytes @ 0x1C
  2564  00001D                     	ds	1
  2565  00001E                     ??_USBCtrlEPService:
  2566  00001E                     
  2567                           ; 1 bytes @ 0x1D
  2568  00001E                     	ds	1
  2569  00001F                     ??__display_verify:
  2570  00001F                     ??__display_checked:
  2571  00001F                     __display_programming@cntr:
  2572                           	opt stack 0
  2573  00001F                     __display_done@cntr:
  2574                           	opt stack 0
  2575  00001F                     __display_itoa_u32@value:
  2576                           	opt stack 0
  2577                           
  2578                           ; 4 bytes @ 0x1E
  2579  00001F                     	ds	1
  2580  000020                     USBDeviceTasks@i:
  2581                           	opt stack 0
  2582  000020                     flash_page_write@page:
  2583                           	opt stack 0
  2584  000020                     flash_partial_write@page:
  2585                           	opt stack 0
  2586  000020                     flash_partial_read@command:
  2587                           	opt stack 0
  2588                           
  2589                           ; 4 bytes @ 0x1F
  2590  000020                     	ds	1
  2591  000021                     __display_verify@cntr:
  2592                           	opt stack 0
  2593  000021                     __display_checked@start:
  2594                           	opt stack 0
  2595                           
  2596                           ; 1 bytes @ 0x20
  2597  000021                     	ds	1
  2598  000022                     __display_checked@cntr:
  2599                           	opt stack 0
  2600  000022                     flash_page_write@data:
  2601                           	opt stack 0
  2602  000022                     flash_partial_write@start:
  2603                           	opt stack 0
  2604                           
  2605                           ; 2 bytes @ 0x21
  2606  000022                     	ds	1
  2607  000023                     __display_itoa_u32@text:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0x22
  2611  000023                     	ds	1
  2612  000024                     flash_page_write@match:
  2613                           	opt stack 0
  2614  000024                     flash_partial_write@length:
  2615                           	opt stack 0
  2616  000024                     flash_partial_read@address:
  2617                           	opt stack 0
  2618                           
  2619                           ; 4 bytes @ 0x23
  2620  000024                     	ds	1
  2621  000025                     ??__display_found:
  2622  000025                     __display_failed@cntr:
  2623                           	opt stack 0
  2624  000025                     ExternalFlash_SectorWrite@config:
  2625                           	opt stack 0
  2626  000025                     fat_format@cntr:
  2627                           	opt stack 0
  2628                           
  2629                           ; 2 bytes @ 0x24
  2630  000025                     	ds	1
  2631  000026                     flash_partial_write@data:
  2632                           	opt stack 0
  2633                           
  2634                           ; 2 bytes @ 0x25
  2635  000026                     	ds	1
  2636  000027                     __display_found@start:
  2637                           	opt stack 0
  2638  000027                     ExternalFlash_SectorWrite@sector_addr:
  2639                           	opt stack 0
  2640                           
  2641                           ; 4 bytes @ 0x26
  2642  000027                     	ds	1
  2643  000028                     ??__root_is_available:
  2644  000028                     ?__get_empty_cluster:
  2645                           	opt stack 0
  2646  000028                     ?_fat_get_empty_clusters:
  2647                           	opt stack 0
  2648  000028                     ?__read_fat:
  2649                           	opt stack 0
  2650  000028                     ?__get_first_cluster:
  2651                           	opt stack 0
  2652  000028                     ?_fat_get_file_size:
  2653                           	opt stack 0
  2654  000028                     __display_found@cntr:
  2655                           	opt stack 0
  2656  000028                     flash_partial_write@match:
  2657                           	opt stack 0
  2658  000028                     flash_page_read@page:
  2659                           	opt stack 0
  2660  000028                     __get_empty_cluster@first_cluster:
  2661                           	opt stack 0
  2662  000028                     fat_get_empty_clusters@maximum:
  2663                           	opt stack 0
  2664  000028                     __read_fat@cluster:
  2665                           	opt stack 0
  2666  000028                     fat_find_file@name:
  2667                           	opt stack 0
  2668                           
  2669                           ; 2 bytes @ 0x27
  2670  000028                     	ds	1
  2671  000029                     ??_display_prepare:
  2672  000029                     ??__delete_root:
  2673  000029                     __root_is_available@root_sector:
  2674                           	opt stack 0
  2675  000029                     __write_fat@cluster:
  2676                           	opt stack 0
  2677  000029                     __write_root@data:
  2678                           	opt stack 0
  2679                           
  2680                           ; 2 bytes @ 0x28
  2681  000029                     	ds	1
  2682  00002A                     ??__get_first_cluster:
  2683  00002A                     flash_page_read@data:
  2684                           	opt stack 0
  2685  00002A                     __get_empty_cluster@fat_sector:
  2686                           	opt stack 0
  2687  00002A                     fat_get_empty_clusters@fat_sector:
  2688                           	opt stack 0
  2689  00002A                     __read_fat@fat_sector:
  2690                           	opt stack 0
  2691  00002A                     __delete_root@root_sector:
  2692                           	opt stack 0
  2693  00002A                     fat_find_file@extension:
  2694                           	opt stack 0
  2695                           
  2696                           ; 2 bytes @ 0x29
  2697  00002A                     	ds	1
  2698  00002B                     ??__write_root:
  2699  00002B                     display_prepare@mode:
  2700                           	opt stack 0
  2701  00002B                     ExternalFlash_SectorWrite@buffer:
  2702                           	opt stack 0
  2703  00002B                     __root_is_available@offset:
  2704                           	opt stack 0
  2705  00002B                     __write_fat@value:
  2706                           	opt stack 0
  2707  00002B                     __get_first_cluster@sector:
  2708                           	opt stack 0
  2709                           
  2710                           ; 2 bytes @ 0x2A
  2711  00002B                     	ds	1
  2712  00002C                     ??_fat_get_file_size:
  2713  00002C                     ??_fat_get_format_status:
  2714  00002C                     ExternalFlash_SectorRead@config:
  2715                           	opt stack 0
  2716  00002C                     __get_empty_cluster@offset:
  2717                           	opt stack 0
  2718  00002C                     fat_get_empty_clusters@offset:
  2719                           	opt stack 0
  2720  00002C                     __read_fat@offset:
  2721                           	opt stack 0
  2722  00002C                     __write_root@root_sector:
  2723                           	opt stack 0
  2724  00002C                     __delete_root@offset:
  2725                           	opt stack 0
  2726  00002C                     fat_find_file@buffer:
  2727                           	opt stack 0
  2728                           
  2729                           ; 11 bytes @ 0x2B
  2730  00002C                     	ds	1
  2731  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2732                           	opt stack 0
  2733  00002D                     __root_is_available@file_number:
  2734                           	opt stack 0
  2735  00002D                     __write_fat@fat_sector:
  2736                           	opt stack 0
  2737  00002D                     __get_first_cluster@offset:
  2738                           	opt stack 0
  2739  00002D                     fat_get_file_size@sector:
  2740                           	opt stack 0
  2741                           
  2742                           ; 2 bytes @ 0x2C
  2743  00002D                     	ds	1
  2744  00002E                     __root_is_available@first_byte:
  2745                           	opt stack 0
  2746  00002E                     __delete_root@deleted_value:
  2747                           	opt stack 0
  2748  00002E                     ExternalFlash_SectorWrite@page:
  2749                           	opt stack 0
  2750  00002E                     __get_empty_cluster@value:
  2751                           	opt stack 0
  2752  00002E                     fat_get_empty_clusters@value:
  2753                           	opt stack 0
  2754  00002E                     __read_fat@value:
  2755                           	opt stack 0
  2756  00002E                     __write_root@offset:
  2757                           	opt stack 0
  2758  00002E                     fat_get_format_status@cntr:
  2759                           	opt stack 0
  2760  00002E                     ExternalFlash_SectorRead@sector_addr:
  2761                           	opt stack 0
  2762                           
  2763                           ; 4 bytes @ 0x2D
  2764  00002E                     	ds	1
  2765  00002F                     __get_available_root_entry@file_number:
  2766                           	opt stack 0
  2767  00002F                     __delete_root@slot:
  2768                           	opt stack 0
  2769  00002F                     __write_fat@offset:
  2770                           	opt stack 0
  2771  00002F                     __get_first_cluster@first_cluster:
  2772                           	opt stack 0
  2773  00002F                     fat_get_file_information@data:
  2774                           	opt stack 0
  2775  00002F                     fat_get_file_size@file_size:
  2776                           	opt stack 0
  2777                           
  2778                           ; 4 bytes @ 0x2E
  2779  00002F                     	ds	1
  2780  000030                     ??_MSDWriteHandler:
  2781  000030                     __write_root@slot:
  2782                           	opt stack 0
  2783  000030                     __get_empty_cluster@cluster:
  2784                           	opt stack 0
  2785  000030                     fat_get_empty_clusters@empty_clusters:
  2786                           	opt stack 0
  2787                           
  2788                           ; 2 bytes @ 0x2F
  2789  000030                     	ds	1
  2790  000031                     ??_fat_get_file_information:
  2791  000031                     __get_first_cluster@slot:
  2792                           	opt stack 0
  2793                           
  2794                           ; 1 bytes @ 0x30
  2795  000031                     	ds	1
  2796  000032                     ExternalFlash_SectorRead@buffer:
  2797                           	opt stack 0
  2798  000032                     fat_get_empty_clusters@cluster:
  2799                           	opt stack 0
  2800  000032                     fat_delete_file@next_cluster:
  2801                           	opt stack 0
  2802  000032                     fat_get_file_information@root_sector:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x31
  2806  000032                     	ds	1
  2807  000033                     fat_get_file_size@offset:
  2808                           	opt stack 0
  2809                           
  2810                           ; 2 bytes @ 0x32
  2811  000033                     	ds	1
  2812  000034                     ExternalFlash_SectorRead@page:
  2813                           	opt stack 0
  2814  000034                     fat_delete_file@first_cluster:
  2815                           	opt stack 0
  2816  000034                     fat_get_file_information@offset:
  2817                           	opt stack 0
  2818                           
  2819                           ; 2 bytes @ 0x33
  2820  000034                     	ds	1
  2821  000035                     fat_get_file_size@file_number:
  2822                           	opt stack 0
  2823                           
  2824                           ; 1 bytes @ 0x34
  2825  000035                     	ds	1
  2826  000036                     ??_MSDReadHandler:
  2827  000036                     fat_delete_file@file_number:
  2828                           	opt stack 0
  2829  000036                     fat_get_file_information@file_number:
  2830                           	opt stack 0
  2831                           
  2832                           ; 1 bytes @ 0x35
  2833  000036                     	ds	1
  2834  000037                     fat_find_file@slot:
  2835                           	opt stack 0
  2836  000037                     fat_append_to_file@number_of_bytes:
  2837                           	opt stack 0
  2838  000037                     fat_rename_file@name:
  2839                           	opt stack 0
  2840  000037                     __fill_buffer_get_file_details@inBuffer:
  2841                           	opt stack 0
  2842  000037                     __parse_file_delete@data:
  2843                           	opt stack 0
  2844  000037                     fat_read_from_file@start_byte:
  2845                           	opt stack 0
  2846                           
  2847                           ; 4 bytes @ 0x36
  2848  000037                     	ds	1
  2849  000038                     fat_find_file@sector:
  2850                           	opt stack 0
  2851                           
  2852                           ; 2 bytes @ 0x37
  2853  000038                     	ds	1
  2854  000039                     fat_append_to_file@data:
  2855                           	opt stack 0
  2856  000039                     fat_rename_file@extension:
  2857                           	opt stack 0
  2858  000039                     __fill_buffer_get_file_details@outBuffer:
  2859                           	opt stack 0
  2860                           
  2861                           ; 2 bytes @ 0x38
  2862  000039                     	ds	1
  2863  00003A                     ??_MSDProcessCommandMediaPresent:
  2864  00003A                     fat_find_file@offset:
  2865                           	opt stack 0
  2866                           
  2867                           ; 2 bytes @ 0x39
  2868  00003A                     	ds	1
  2869  00003B                     ??_fat_append_to_file:
  2870  00003B                     fat_rename_file@file_number:
  2871                           	opt stack 0
  2872  00003B                     __fill_buffer_get_file_details@file_number:
  2873                           	opt stack 0
  2874  00003B                     fat_read_from_file@length:
  2875                           	opt stack 0
  2876                           
  2877                           ; 4 bytes @ 0x3A
  2878  00003B                     	ds	1
  2879  00003C                     _MSDProcessCommandMediaPresent$2390:
  2880                           	opt stack 0
  2881  00003C                     fat_create_file@name:
  2882                           	opt stack 0
  2883  00003C                     __fill_buffer_find_file@inBuffer:
  2884                           	opt stack 0
  2885  00003C                     fat_rename_file@root:
  2886                           	opt stack 0
  2887                           
  2888                           ; 32 bytes @ 0x3B
  2889  00003C                     	ds	2
  2890  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2891                           	opt stack 0
  2892  00003E                     fat_create_file@extension:
  2893                           	opt stack 0
  2894  00003E                     __fill_buffer_find_file@outBuffer:
  2895                           	opt stack 0
  2896                           
  2897                           ; 2 bytes @ 0x3D
  2898  00003E                     	ds	1
  2899  00003F                     fat_read_from_file@data:
  2900                           	opt stack 0
  2901  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  2902                           	opt stack 0
  2903                           
  2904                           ; 4 bytes @ 0x3E
  2905  00003F                     	ds	1
  2906  000040                     ??__fill_buffer_find_file:
  2907  000040                     fat_create_file@size:
  2908                           	opt stack 0
  2909                           
  2910                           ; 4 bytes @ 0x3F
  2911  000040                     	ds	1
  2912  000041                     ??_fat_read_from_file:
  2913                           
  2914                           ; 1 bytes @ 0x40
  2915  000041                     	ds	2
  2916  000043                     __parse_file_append@data:
  2917                           	opt stack 0
  2918  000043                     MSDProcessCommandMediaPresent@capacity:
  2919                           	opt stack 0
  2920                           
  2921                           ; 4 bytes @ 0x42
  2922  000043                     	ds	1
  2923  000044                     ??_fat_create_file:
  2924  000044                     __fill_buffer_find_file@cntr:
  2925                           	opt stack 0
  2926                           
  2927                           ; 1 bytes @ 0x43
  2928  000044                     	ds	1
  2929  000045                     ??__parse_file_append:
  2930                           
  2931                           ; 1 bytes @ 0x44
  2932  000045                     	ds	2
  2933  000047                     MSDProcessCommandMediaPresent@i:
  2934                           	opt stack 0
  2935                           
  2936                           ; 1 bytes @ 0x46
  2937  000047                     	ds	1
  2938  000048                     ??_MSDProcessCommand:
  2939  000048                     __parse_file_create@data:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x47
  2943  000048                     	ds	2
  2944  00004A                     
  2945                           ; 1 bytes @ 0x49
  2946  00004A                     	ds	3
  2947  00004D                     ??__bootloader_verify_file:
  2948  00004D                     ??__bootloader_program:
  2949  00004D                     ??_MSDTasks:
  2950  00004D                     __fill_buffer_read_file@inBuffer:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x4C
  2954  00004D                     	ds	1
  2955  00004E                     _MSDTasks$2372:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x4D
  2959  00004E                     	ds	1
  2960  00004F                     __fill_buffer_read_file@outBuffer:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x4E
  2964  00004F                     	ds	1
  2965  000050                     _MSDTasks$2373:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x4F
  2969  000050                     	ds	1
  2970  000051                     ??__fill_buffer_read_file:
  2971                           
  2972                           ; 1 bytes @ 0x50
  2973  000051                     	ds	1
  2974  000052                     MSDTasks@i:
  2975                           	opt stack 0
  2976                           
  2977                           ; 1 bytes @ 0x51
  2978  000052                     	ds	1
  2979  000053                     
  2980                           ; 1 bytes @ 0x52
  2981  000053                     	ds	2
  2982  000055                     __bootloader_verify_file@rec_counter:
  2983                           	opt stack 0
  2984  000055                     api_prepare@inBuffer:
  2985                           	opt stack 0
  2986                           
  2987                           ; 2 bytes @ 0x54
  2988  000055                     	ds	1
  2989  000056                     __bootloader_verify_file@return_value:
  2990                           	opt stack 0
  2991                           
  2992                           ; 4 bytes @ 0x55
  2993  000056                     	ds	1
  2994  000057                     api_prepare@outBuffer:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x56
  2998  000057                     	ds	2
  2999  000059                     api_prepare@command:
  3000                           	opt stack 0
  3001                           
  3002                           ; 1 bytes @ 0x58
  3003  000059                     	ds	1
  3004  00005A                     __bootloader_verify_file@address32:
  3005                           	opt stack 0
  3006                           
  3007                           ; 4 bytes @ 0x59
  3008  00005A                     	ds	2
  3009  00005C                     fat_rename_file@cntr:
  3010                           	opt stack 0
  3011                           
  3012                           ; 1 bytes @ 0x5B
  3013  00005C                     	ds	1
  3014  00005D                     __parse_file_rename@data:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x5C
  3018  00005D                     	ds	1
  3019  00005E                     bootloader_run@timeslot:
  3020                           	opt stack 0
  3021                           
  3022                           ; 1 bytes @ 0x5D
  3023  00005E                     	ds	1
  3024  00005F                     
  3025                           ; 1 bytes @ 0x5E
  3026  00005F                     	ds	1
  3027  000060                     tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           postdec1	equ	0xFE5
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           
  3037                           ; 1 bytes @ 0x5F
  3038 ;;
  3039 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3040 ;;
  3041 ;; *************** function _main *****************
  3042 ;; Defined at:
  3043 ;;		line 53 in file "main.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels required when called:   13
  3063 ;; This function calls:
  3064 ;;		_APP_DeviceCustomHIDTasks
  3065 ;;		_APP_DeviceMSDTasks
  3066 ;;		_SYSTEM_Initialize
  3067 ;;		_USBDeviceInit
  3068 ;;		_USBDeviceTasks
  3069 ;;		__normal_mode
  3070 ;;		_bootloader_run
  3071 ;;		_display_prepare
  3072 ;;		_display_update
  3073 ;;		_system_init
  3074 ;;		_timer_pseudo_isr
  3075 ;;		_ui_get_status
  3076 ;;		_ui_run
  3077 ;; This function is called by:
  3078 ;;		Startup code after reset
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text0
  3083  004CE0                     __ptext0:
  3084                           	opt stack 0
  3085  004CE0                     _main:
  3086                           	opt stack 18
  3087                           
  3088                           ;main.c: 57: system_init();
  3089                           
  3090                           ;incstack = 0
  3091  004CE0  ECBF  F033         	call	_system_init	;wreg free
  3092                           
  3093                           ;main.c: 60: if(_normal_mode())
  3094  004CE4  ECA9  F035         	call	__normal_mode	;wreg free
  3095  004CE8  0900               	iorlw	0
  3096  004CEA  A4D8               	btfss	status,2,c
  3097  004CEC  EF00 F048          	goto	36864	; ;# 
  3098                           
  3099                           ;main.c: 66: };main.c: 70: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3100  004CF0  0E00               	movlw	0
  3101  004CF2  EC31  F037         	call	_SYSTEM_Initialize
  3102                           
  3103                           ;main.c: 71: USBDeviceInit();
  3104  004CF6  ECD9  F01B         	call	_USBDeviceInit	;wreg free
  3105  004CFA                     
  3106                           ;main.c: 77: {;main.c: 81: USBDeviceTasks();
  3107  004CFA  ECF7  F018         	call	_USBDeviceTasks	;wreg free
  3108                           
  3109                           ;main.c: 82: APP_DeviceMSDTasks();
  3110  004CFE  ECA8  F03C         	call	_APP_DeviceMSDTasks	;wreg free
  3111                           
  3112                           ;main.c: 83: APP_DeviceCustomHIDTasks();
  3113  004D02  EC23  F02A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3114                           
  3115                           ;main.c: 87: timer_pseudo_isr();
  3116  004D06  ECD3  F039         	call	_timer_pseudo_isr	;wreg free
  3117                           
  3118                           ;main.c: 91: if(!os.done)
  3119  004D0A  0100               	movlb	0	; () banked
  3120  004D0C  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3121  004D0E  A4D8               	btfss	status,2,c
  3122  004D10  D7F4               	goto	l856
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;main.c: 92: {;main.c: 94: ui_run();
  3126  004D12  EC6E  F024         	call	_ui_run	;wreg free
  3127                           
  3128                           ;main.c: 99: switch(os.timeSlot)
  3129  004D16  D02A               	goto	l858
  3130  004D18                     
  3131                           ;main.c: 102: bootloader_run(0);
  3132  004D18  0E00               	movlw	0
  3133  004D1A  ECFD  F037         	call	_bootloader_run
  3134                           
  3135                           ;main.c: 103: break;
  3136  004D1E  D040               	goto	l860
  3137  004D20                     
  3138                           ;main.c: 106: bootloader_run(1);
  3139  004D20  0E01               	movlw	1
  3140  004D22  ECFD  F037         	call	_bootloader_run
  3141                           
  3142                           ;main.c: 107: break;
  3143  004D26  D03C               	goto	l860
  3144  004D28                     
  3145                           ;main.c: 110: bootloader_run(2);
  3146  004D28  0E02               	movlw	2
  3147  004D2A  ECFD  F037         	call	_bootloader_run
  3148                           
  3149                           ;main.c: 111: break;
  3150  004D2E  D038               	goto	l860
  3151  004D30                     
  3152                           ;main.c: 114: bootloader_run(3);
  3153  004D30  0E03               	movlw	3
  3154  004D32  ECFD  F037         	call	_bootloader_run
  3155                           
  3156                           ;main.c: 115: break;
  3157  004D36  D034               	goto	l860
  3158  004D38                     
  3159                           ;main.c: 118: bootloader_run(4);
  3160  004D38  0E04               	movlw	4
  3161  004D3A  ECFD  F037         	call	_bootloader_run
  3162                           
  3163                           ;main.c: 119: break;
  3164  004D3E  D030               	goto	l860
  3165  004D40                     
  3166                           ;main.c: 122: bootloader_run(5);
  3167  004D40  0E05               	movlw	5
  3168  004D42  ECFD  F037         	call	_bootloader_run
  3169                           
  3170                           ;main.c: 123: break;
  3171  004D46  D02C               	goto	l860
  3172  004D48                     
  3173                           ;main.c: 126: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3174  004D48  EC4A  F03D         	call	_ui_get_status	;wreg free
  3175  004D4C  0A05               	xorlw	5
  3176  004D4E  A4D8               	btfss	status,2,c
  3177  004D50  D027               	goto	l860
  3178                           
  3179                           ;main.c: 127: {;main.c: 128: display_prepare(os.display_mode);
  3180  004D52  0100               	movlb	0	; () banked
  3181  004D54  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3182  004D56  ECA4  F025         	call	_display_prepare
  3183                           
  3184                           ;main.c: 129: };main.c: 130: break;
  3185  004D5A  D022               	goto	l860
  3186  004D5C                     
  3187                           ;main.c: 133: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3188  004D5C  EC4A  F03D         	call	_ui_get_status	;wreg free
  3189  004D60  0A05               	xorlw	5
  3190  004D62  A4D8               	btfss	status,2,c
  3191  004D64  D01D               	goto	l860
  3192                           
  3193                           ;main.c: 134: {;main.c: 135: display_update();
  3194  004D66  ECEB  F032         	call	_display_update	;wreg free
  3195                           
  3196                           ;main.c: 138: }
  3197                           
  3198                           ;main.c: 136: };main.c: 137: break;
  3199  004D6A  D01A               	goto	l860
  3200  004D6C                     l858:
  3201  004D6C  0100               	movlb	0	; () banked
  3202  004D6E  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3203                           
  3204                           ; Switch size 1, requested type "space"
  3205                           ; Number of cases is 8, Range of values is 0 to 7
  3206                           ; switch strategies available:
  3207                           ; Name         Instructions Cycles
  3208                           ; simple_byte           25    13 (average)
  3209                           ;	Chosen strategy is simple_byte
  3210  004D70  0A00               	xorlw	0	; case 0
  3211  004D72  B4D8               	btfsc	status,2,c
  3212  004D74  D7D1               	goto	l859
  3213  004D76  0A01               	xorlw	1	; case 1
  3214  004D78  B4D8               	btfsc	status,2,c
  3215  004D7A  D7D2               	goto	l861
  3216  004D7C  0A03               	xorlw	3	; case 2
  3217  004D7E  B4D8               	btfsc	status,2,c
  3218  004D80  D7D3               	goto	l862
  3219  004D82  0A01               	xorlw	1	; case 3
  3220  004D84  B4D8               	btfsc	status,2,c
  3221  004D86  D7D4               	goto	l863
  3222  004D88  0A07               	xorlw	7	; case 4
  3223  004D8A  B4D8               	btfsc	status,2,c
  3224  004D8C  D7D5               	goto	l864
  3225  004D8E  0A01               	xorlw	1	; case 5
  3226  004D90  B4D8               	btfsc	status,2,c
  3227  004D92  D7D6               	goto	l865
  3228  004D94  0A03               	xorlw	3	; case 6
  3229  004D96  B4D8               	btfsc	status,2,c
  3230  004D98  D7D7               	goto	l866
  3231  004D9A  0A01               	xorlw	1	; case 7
  3232  004D9C  B4D8               	btfsc	status,2,c
  3233  004D9E  D7DE               	goto	l868
  3234  004DA0                     l860:
  3235                           
  3236                           ;main.c: 139: os.done = 1;
  3237                           
  3238                           ; BSR set to: 0
  3239  004DA0  0E01               	movlw	1
  3240  004DA2  0100               	movlb	0	; () banked
  3241  004DA4  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3242                           
  3243                           ; BSR set to: 0
  3244                           
  3245                           ; BSR set to: 0
  3246  004DA6  D7A9               	goto	l856
  3247  004DA8                     __end_of_main:
  3248                           	opt stack 0
  3249                           tblptru	equ	0xFF8
  3250                           tblptrh	equ	0xFF7
  3251                           tblptrl	equ	0xFF6
  3252                           tablat	equ	0xFF5
  3253                           postinc0	equ	0xFEE
  3254                           wreg	equ	0xFE8
  3255                           postdec1	equ	0xFE5
  3256                           fsr1h	equ	0xFE2
  3257                           fsr1l	equ	0xFE1
  3258                           status	equ	0xFD8
  3259                           
  3260 ;; *************** function _ui_run *****************
  3261 ;; Defined at:
  3262 ;;		line 87 in file "ui.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    3
  3283 ;; This function calls:
  3284 ;;		__ui_encoder
  3285 ;;		_i2c_digipot_backlight
  3286 ;;		_i2c_digipot_reset_off
  3287 ;;		_i2c_digipot_reset_on
  3288 ;;		_i2c_display_send_init_sequence
  3289 ;;		_system_encoder_enable
  3290 ;;		_ui_init
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text1
  3297  0048DC                     __ptext1:
  3298                           	opt stack 0
  3299  0048DC                     _ui_run:
  3300                           	opt stack 27
  3301                           
  3302                           ;ui.c: 89: switch(userInterfaceStatus)
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;incstack = 0
  3306  0048DC  D052               	goto	l1232
  3307  0048DE                     
  3308                           ;ui.c: 93: if (os.buttonCount!=0)
  3309  0048DE  0100               	movlb	0	; () banked
  3310  0048E0  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3311  0048E2  B4D8               	btfsc	status,2,c
  3312  0048E4  0012               	return	
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;ui.c: 94: {;ui.c: 95: ui_init();
  3316  0048E6  ECB2  F03C         	call	_ui_init	;wreg free
  3317                           
  3318                           ;ui.c: 96: os.buttonCount = 0;
  3319  0048EA  0E00               	movlw	0
  3320  0048EC  0100               	movlb	0	; () banked
  3321  0048EE  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;ui.c: 97: };ui.c: 98: break;
  3325  0048F0  0012               	return	
  3326  0048F2                     l1236:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;ui.c: 102: LATDbits.LD0 = 0;
  3330  0048F2  908C               	bcf	3980,0,c	;volatile
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;ui.c: 104: system_ui_inactive_count = 0;
  3334  0048F4  0E00               	movlw	0
  3335  0048F6  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3336  0048F8  0E00               	movlw	0
  3337  0048FA  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3338                           
  3339                           ;ui.c: 105: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3340  0048FC  0E02               	movlw	2
  3341  0048FE  6F9F               	movwf	_userInterfaceStatus& (0+255),b
  3342                           
  3343                           ;ui.c: 106: break;
  3344  004900  0012               	return	
  3345  004902                     
  3346                           ; BSR set to: 0
  3347                           ;ui.c: 110: i2c_digipot_reset_on();
  3348                           
  3349                           ; BSR set to: 0
  3350  004902  EC05  F03C         	call	_i2c_digipot_reset_on	;wreg free
  3351                           
  3352                           ;ui.c: 112: system_ui_inactive_count = 0;
  3353  004906  0E00               	movlw	0
  3354  004908  0100               	movlb	0	; () banked
  3355  00490A  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3356  00490C  0E00               	movlw	0
  3357  00490E  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;ui.c: 113: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3361  004910  0E03               	movlw	3
  3362  004912  6F9F               	movwf	_userInterfaceStatus& (0+255),b
  3363                           
  3364                           ;ui.c: 114: break;
  3365  004914  0012               	return	
  3366  004916                     
  3367                           ; BSR set to: 0
  3368                           ;ui.c: 117: ++system_ui_inactive_count;
  3369                           
  3370                           ; BSR set to: 0
  3371  004916  4B86               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3372  004918  2B87               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;ui.c: 119: if (system_ui_inactive_count>3)
  3376  00491A  5187               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3377  00491C  E104               	bnz	u11400
  3378  00491E  0E04               	movlw	4
  3379  004920  5D86               	subwf	_system_ui_inactive_count& (0+255),w,b
  3380  004922  A0D8               	btfss	status,0,c
  3381  004924  0012               	return	
  3382  004926                     u11400:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;ui.c: 120: {;ui.c: 121: i2c_digipot_reset_off();
  3386  004926  EC16  F03C         	call	_i2c_digipot_reset_off	;wreg free
  3387                           
  3388                           ;ui.c: 122: system_ui_inactive_count = 0;
  3389  00492A  0E00               	movlw	0
  3390  00492C  0100               	movlb	0	; () banked
  3391  00492E  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3392  004930  0E00               	movlw	0
  3393  004932  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;ui.c: 123: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3397  004934  0E04               	movlw	4
  3398  004936  6F9F               	movwf	_userInterfaceStatus& (0+255),b
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;ui.c: 124: };ui.c: 125: break;
  3402  004938  0012               	return	
  3403  00493A                     
  3404                           ; BSR set to: 0
  3405                           ;ui.c: 129: i2c_display_send_init_sequence();
  3406                           
  3407                           ; BSR set to: 0
  3408  00493A  ECED  F03A         	call	_i2c_display_send_init_sequence	;wreg free
  3409                           
  3410                           ;ui.c: 131: i2c_digipot_backlight(150);
  3411  00493E  0E96               	movlw	150
  3412  004940  EC96  F03B         	call	_i2c_digipot_backlight
  3413                           
  3414                           ;ui.c: 133: system_encoder_enable();
  3415  004944  ECD6  F03C         	call	_system_encoder_enable	;wreg free
  3416                           
  3417                           ;ui.c: 135: system_ui_inactive_count = 0;
  3418  004948  0E00               	movlw	0
  3419  00494A  0100               	movlb	0	; () banked
  3420  00494C  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3421  00494E  0E00               	movlw	0
  3422  004950  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3426  004952  0E05               	movlw	5
  3427  004954  6F9F               	movwf	_userInterfaceStatus& (0+255),b
  3428                           
  3429                           ;ui.c: 137: break;
  3430  004956  0012               	return	
  3431  004958                     
  3432                           ; BSR set to: 0
  3433                           ;ui.c: 140: if (os.encoderCount==0 && os.buttonCount==0)
  3434                           
  3435                           ; BSR set to: 0
  3436  004958  5160               	movf	_os& (0+255),w,b	;volatile
  3437  00495A  A4D8               	btfss	status,2,c
  3438  00495C  D00B               	goto	l1242
  3439                           
  3440                           ; BSR set to: 0
  3441  00495E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3442  004960  A4D8               	btfss	status,2,c
  3443  004962  D008               	goto	l1242
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;ui.c: 141: {;ui.c: 142: if(system_ui_inactive_count<0xFFFF)
  3447  004964  2986               	incf	_system_ui_inactive_count& (0+255),w,b
  3448  004966  E103               	bnz	u11430
  3449  004968  2987               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3450  00496A  B4D8               	btfsc	status,2,c
  3451  00496C  0012               	return	
  3452  00496E                     u11430:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;ui.c: 143: ++system_ui_inactive_count;
  3456  00496E  4B86               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3457  004970  2B87               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;ui.c: 144: }
  3461  004972  0012               	return	
  3462  004974                     l1242:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;ui.c: 145: else;ui.c: 146: {;ui.c: 147: system_ui_inactive_count = 0;
  3466                           
  3467                           ; BSR set to: 0
  3468  004974  0E00               	movlw	0
  3469  004976  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3470  004978  0E00               	movlw	0
  3471  00497A  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;ui.c: 148: _ui_encoder();
  3475  00497C  EC5F  F031         	call	__ui_encoder	;wreg free
  3476                           
  3477                           ;ui.c: 151: }
  3478                           
  3479                           ;ui.c: 149: };ui.c: 150: break;
  3480  004980  0012               	return	
  3481  004982                     l1232:
  3482  004982  0100               	movlb	0	; () banked
  3483  004984  519F               	movf	_userInterfaceStatus& (0+255),w,b
  3484                           
  3485                           ; Switch size 1, requested type "space"
  3486                           ; Number of cases is 6, Range of values is 0 to 5
  3487                           ; switch strategies available:
  3488                           ; Name         Instructions Cycles
  3489                           ; simple_byte           19    10 (average)
  3490                           ;	Chosen strategy is simple_byte
  3491  004986  0A00               	xorlw	0	; case 0
  3492  004988  B4D8               	btfsc	status,2,c
  3493  00498A  D7A9               	goto	l1233
  3494  00498C  0A01               	xorlw	1	; case 1
  3495  00498E  B4D8               	btfsc	status,2,c
  3496  004990  D7B0               	goto	l1236
  3497  004992  0A03               	xorlw	3	; case 2
  3498  004994  B4D8               	btfsc	status,2,c
  3499  004996  D7B5               	goto	l1237
  3500  004998  0A01               	xorlw	1	; case 3
  3501  00499A  B4D8               	btfsc	status,2,c
  3502  00499C  D7BC               	goto	l1238
  3503  00499E  0A07               	xorlw	7	; case 4
  3504  0049A0  B4D8               	btfsc	status,2,c
  3505  0049A2  D7CB               	goto	l1240
  3506  0049A4  0A01               	xorlw	1	; case 5
  3507  0049A6  A4D8               	btfss	status,2,c
  3508  0049A8  0012               	return	
  3509  0049AA  D7D6               	goto	l1241
  3510  0049AC                     __end_of_ui_run:
  3511                           	opt stack 0
  3512                           tblptru	equ	0xFF8
  3513                           tblptrh	equ	0xFF7
  3514                           tblptrl	equ	0xFF6
  3515                           tablat	equ	0xFF5
  3516                           postinc0	equ	0xFEE
  3517                           wreg	equ	0xFE8
  3518                           postdec1	equ	0xFE5
  3519                           fsr1h	equ	0xFE2
  3520                           fsr1l	equ	0xFE1
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function _system_encoder_enable *****************
  3524 ;; Defined at:
  3525 ;;		line 94 in file "os.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_ui_run
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text2
  3553  0079AC                     __ptext2:
  3554                           	opt stack 0
  3555  0079AC                     _system_encoder_enable:
  3556                           	opt stack 29
  3557                           
  3558                           ;os.c: 97: INTCON3bits.INT2IF = 0;
  3559                           
  3560                           ;incstack = 0
  3561  0079AC  92F0               	bcf	intcon3,1,c	;volatile
  3562                           
  3563                           ;os.c: 98: INTCON3bits.INT3IF = 0;
  3564  0079AE  94F0               	bcf	intcon3,2,c	;volatile
  3565                           
  3566                           ;os.c: 101: os.encoderCount = 0;
  3567  0079B0  0E00               	movlw	0
  3568  0079B2  0100               	movlb	0	; () banked
  3569  0079B4  6F60               	movwf	_os& (0+255),b	;volatile
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;os.c: 104: INTCON3bits.INT2IE = 1;
  3573  0079B6  88F0               	bsf	intcon3,4,c	;volatile
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;os.c: 105: INTCON3bits.INT3IE = 1;
  3577  0079B8  8AF0               	bsf	intcon3,5,c	;volatile
  3578                           
  3579                           ; BSR set to: 0
  3580  0079BA  0012               	return		;funcret
  3581  0079BC                     __end_of_system_encoder_enable:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           intcon3	equ	0xFF0
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           postdec1	equ	0xFE5
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           status	equ	0xFD8
  3594                           
  3595 ;; *************** function _i2c_display_send_init_sequence *****************
  3596 ;; Defined at:
  3597 ;;		line 199 in file "i2c.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3612 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;Total ram usage:        9 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    2
  3618 ;; This function calls:
  3619 ;;		__i2c_write
  3620 ;;		_i2c_set_frequency
  3621 ;; This function is called by:
  3622 ;;		_ui_run
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text3
  3627  0075DA                     __ptext3:
  3628                           	opt stack 0
  3629  0075DA                     _i2c_display_send_init_sequence:
  3630                           	opt stack 27
  3631                           
  3632                           ;i2c.c: 201: uint8_t init_sequence[9] = {;i2c.c: 202: 0x3A,;i2c.c: 204: 0b00011110,;i2c.
      +                          c: 205: 0x39,;i2c.c: 207: 0b00001100,;i2c.c: 208: 0x74,;i2c.c: 209: 0b1011100,;i2c.c: 21
      +                          0: 0x6d,;i2c.c: 211: 0x0c,;i2c.c: 212: 0x01;i2c.c: 213: };
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;incstack = 0
  3636  0075DA  EE21  F0E8         	lfsr	2,i2c_display_send_init_sequence@F6765
  3637  0075DE  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3638  0075E2  0E08               	movlw	8
  3639  0075E4                     u10371:
  3640  0075E4  CFDB FFE3          	movff	plusw2,plusw1
  3641  0075E8  06E8               	decf	wreg,f,c
  3642  0075EA  E2FC               	bc	u10371
  3643                           
  3644                           ;i2c.c: 216: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3645  0075EC  0E00               	movlw	0
  3646  0075EE  EC2F  F03B         	call	_i2c_set_frequency
  3647                           
  3648                           ;i2c.c: 219: _i2c_write(0b01111000, &init_sequence[0], 9);
  3649  0075F2  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3650  0075F4  6E06               	movwf	__i2c_write@data,c
  3651  0075F6  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3652  0075F8  6E07               	movwf	__i2c_write@data+1,c
  3653  0075FA  0E09               	movlw	9
  3654  0075FC  6E08               	movwf	__i2c_write@length,c
  3655  0075FE  0E78               	movlw	120
  3656  007600  EC6D  F038         	call	__i2c_write
  3657  007604  0012               	return		;funcret
  3658  007606                     __end_of_i2c_display_send_init_sequence:
  3659                           	opt stack 0
  3660                           tblptru	equ	0xFF8
  3661                           tblptrh	equ	0xFF7
  3662                           tblptrl	equ	0xFF6
  3663                           tablat	equ	0xFF5
  3664                           intcon3	equ	0xFF0
  3665                           postinc0	equ	0xFEE
  3666                           wreg	equ	0xFE8
  3667                           postdec1	equ	0xFE5
  3668                           plusw1	equ	0xFE3
  3669                           fsr1h	equ	0xFE2
  3670                           fsr1l	equ	0xFE1
  3671                           plusw2	equ	0xFDB
  3672                           status	equ	0xFD8
  3673                           
  3674 ;; *************** function _i2c_digipot_reset_on *****************
  3675 ;; Defined at:
  3676 ;;		line 302 in file "i2c.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;Total ram usage:        2 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    2
  3697 ;; This function calls:
  3698 ;;		__i2c_write
  3699 ;;		_i2c_set_frequency
  3700 ;; This function is called by:
  3701 ;;		_ui_run
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text4
  3706  00780A                     __ptext4:
  3707                           	opt stack 0
  3708  00780A                     _i2c_digipot_reset_on:
  3709                           	opt stack 27
  3710                           
  3711                           ;i2c.c: 304: uint8_t data_array[2];;i2c.c: 305: data_array[0] = 0x10 | 0x00;
  3712                           
  3713                           ;incstack = 0
  3714  00780A  0E10               	movlw	16
  3715  00780C  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  3716                           
  3717                           ;i2c.c: 307: data_array[1] = 0x00;
  3718  00780E  0E00               	movlw	0
  3719  007810  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  3720                           
  3721                           ;i2c.c: 310: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3722  007812  0E02               	movlw	2
  3723  007814  EC2F  F03B         	call	_i2c_set_frequency
  3724                           
  3725                           ;i2c.c: 312: _i2c_write(0b01011100, &data_array[0], 2);
  3726  007818  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  3727  00781A  6E06               	movwf	__i2c_write@data,c
  3728  00781C  0E00               	movlw	high i2c_digipot_reset_on@data_array
  3729  00781E  6E07               	movwf	__i2c_write@data+1,c
  3730  007820  0E02               	movlw	2
  3731  007822  6E08               	movwf	__i2c_write@length,c
  3732  007824  0E5C               	movlw	92
  3733  007826  EC6D  F038         	call	__i2c_write
  3734  00782A  0012               	return		;funcret
  3735  00782C                     __end_of_i2c_digipot_reset_on:
  3736                           	opt stack 0
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           intcon3	equ	0xFF0
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           plusw1	equ	0xFE3
  3746                           fsr1h	equ	0xFE2
  3747                           fsr1l	equ	0xFE1
  3748                           plusw2	equ	0xFDB
  3749                           status	equ	0xFD8
  3750                           
  3751 ;; *************** function _i2c_digipot_reset_off *****************
  3752 ;; Defined at:
  3753 ;;		line 315 in file "i2c.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;Total ram usage:        2 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    2
  3774 ;; This function calls:
  3775 ;;		__i2c_write
  3776 ;;		_i2c_set_frequency
  3777 ;; This function is called by:
  3778 ;;		_ui_run
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text5
  3783  00782C                     __ptext5:
  3784                           	opt stack 0
  3785  00782C                     _i2c_digipot_reset_off:
  3786                           	opt stack 27
  3787                           
  3788                           ;i2c.c: 317: uint8_t data_array[2];;i2c.c: 318: data_array[0] = 0x10 | 0x00;
  3789                           
  3790                           ;incstack = 0
  3791  00782C  0E10               	movlw	16
  3792  00782E  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  3793                           
  3794                           ;i2c.c: 319: data_array[1] = 0x80;
  3795  007830  0E80               	movlw	128
  3796  007832  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  3797                           
  3798                           ;i2c.c: 322: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3799  007834  0E02               	movlw	2
  3800  007836  EC2F  F03B         	call	_i2c_set_frequency
  3801                           
  3802                           ;i2c.c: 324: _i2c_write(0b01011100, &data_array[0], 2);
  3803  00783A  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  3804  00783C  6E06               	movwf	__i2c_write@data,c
  3805  00783E  0E00               	movlw	high i2c_digipot_reset_off@data_array
  3806  007840  6E07               	movwf	__i2c_write@data+1,c
  3807  007842  0E02               	movlw	2
  3808  007844  6E08               	movwf	__i2c_write@length,c
  3809  007846  0E5C               	movlw	92
  3810  007848  EC6D  F038         	call	__i2c_write
  3811  00784C  0012               	return		;funcret
  3812  00784E                     __end_of_i2c_digipot_reset_off:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           intcon3	equ	0xFF0
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           postdec1	equ	0xFE5
  3822                           plusw1	equ	0xFE3
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           plusw2	equ	0xFDB
  3826                           status	equ	0xFD8
  3827                           
  3828 ;; *************** function _i2c_digipot_backlight *****************
  3829 ;; Defined at:
  3830 ;;		line 327 in file "i2c.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  level           1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  level           1   10[COMRAM] unsigned char 
  3835 ;;  data_array      2   11[COMRAM] unsigned char [2]
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;Total ram usage:        3 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    2
  3852 ;; This function calls:
  3853 ;;		__i2c_write
  3854 ;;		_i2c_set_frequency
  3855 ;; This function is called by:
  3856 ;;		_ui_run
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text6
  3861  00772C                     __ptext6:
  3862                           	opt stack 0
  3863  00772C                     _i2c_digipot_backlight:
  3864                           	opt stack 27
  3865                           
  3866                           ;incstack = 0
  3867                           ;i2c_digipot_backlight@level stored from wreg
  3868  00772C  6E0B               	movwf	i2c_digipot_backlight@level,c
  3869                           
  3870                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0x00 | 0x00;
  3871  00772E  0E00               	movlw	0
  3872  007730  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  3873                           
  3874                           ;i2c.c: 331: data_array[1] = level>>1;
  3875  007732  90D8               	bcf	status,0,c
  3876  007734  300B               	rrcf	i2c_digipot_backlight@level,w,c
  3877  007736  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  3878                           
  3879                           ;i2c.c: 334: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3880  007738  0E02               	movlw	2
  3881  00773A  EC2F  F03B         	call	_i2c_set_frequency
  3882                           
  3883                           ;i2c.c: 336: _i2c_write(0b01011100, &data_array[0], 2);
  3884  00773E  0E0C               	movlw	low i2c_digipot_backlight@data_array
  3885  007740  6E06               	movwf	__i2c_write@data,c
  3886  007742  0E00               	movlw	high i2c_digipot_backlight@data_array
  3887  007744  6E07               	movwf	__i2c_write@data+1,c
  3888  007746  0E02               	movlw	2
  3889  007748  6E08               	movwf	__i2c_write@length,c
  3890  00774A  0E5C               	movlw	92
  3891  00774C  EC6D  F038         	call	__i2c_write
  3892  007750  0012               	return		;funcret
  3893  007752                     __end_of_i2c_digipot_backlight:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           tblptrh	equ	0xFF7
  3897                           tblptrl	equ	0xFF6
  3898                           tablat	equ	0xFF5
  3899                           intcon3	equ	0xFF0
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           postdec1	equ	0xFE5
  3903                           plusw1	equ	0xFE3
  3904                           fsr1h	equ	0xFE2
  3905                           fsr1l	equ	0xFE1
  3906                           plusw2	equ	0xFDB
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function __ui_encoder *****************
  3910 ;; Defined at:
  3911 ;;		line 21 in file "ui.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_ui_run
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text7
  3939  0062BE                     __ptext7:
  3940                           	opt stack 0
  3941  0062BE                     __ui_encoder:
  3942                           	opt stack 29
  3943                           
  3944                           ;ui.c: 23: switch(os.display_mode)
  3945                           
  3946                           ;incstack = 0
  3947  0062BE  D021               	goto	l1211
  3948  0062C0                     
  3949                           ;ui.c: 29: if(os.buttonCount>0)
  3950  0062C0  0100               	movlb	0	; () banked
  3951  0062C2  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3952  0062C4  0A80               	xorlw	128
  3953  0062C6  0F7F               	addlw	-129
  3954  0062C8  A0D8               	btfss	status,0,c
  3955  0062CA  0012               	return	
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;ui.c: 30: {;ui.c: 31: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  3959  0062CC  0E20               	movlw	32
  3960  0062CE  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  3961                           
  3962                           ;ui.c: 32: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  3963  0062D0  0E20               	movlw	32
  3964  0062D2  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  3965                           
  3966                           ;ui.c: 33: os.buttonCount = 0;
  3967  0062D4  0E00               	movlw	0
  3968  0062D6  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;ui.c: 41: break;
  3972                           
  3973                           ;ui.c: 40: case DISPLAY_MODE_BOOTLOADER_CHECK_FAILED:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;ui.c: 38: break;
  3977                           
  3978                           ;ui.c: 37: case DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;ui.c: 34: };ui.c: 35: break;
  3982  0062D8  0012               	return	
  3983  0062DA                     
  3984                           ; BSR set to: 0
  3985                           ;ui.c: 44: if(os.buttonCount>0)
  3986                           
  3987                           ; BSR set to: 0
  3988  0062DA  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3989  0062DC  0A80               	xorlw	128
  3990  0062DE  0F7F               	addlw	-129
  3991  0062E0  A0D8               	btfss	status,0,c
  3992  0062E2  0012               	return	
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;ui.c: 45: {;ui.c: 46: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  3996  0062E4  0E50               	movlw	80
  3997  0062E6  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  3998                           
  3999                           ;ui.c: 47: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4000  0062E8  0E50               	movlw	80
  4001  0062EA  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4002                           
  4003                           ;ui.c: 48: os.buttonCount = 0;
  4004  0062EC  0E00               	movlw	0
  4005  0062EE  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;ui.c: 53: break;
  4009                           
  4010                           ;ui.c: 52: case BOOTLOADER_MODE_PROGRAMMING:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;ui.c: 49: };ui.c: 50: break;
  4014  0062F0  0012               	return	
  4015  0062F2                     
  4016                           ; BSR set to: 0
  4017                           ;ui.c: 56: if(os.buttonCount>0)
  4018                           
  4019                           ; BSR set to: 0
  4020  0062F2  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4021  0062F4  0A80               	xorlw	128
  4022  0062F6  0F7F               	addlw	-129
  4023  0062F8  A0D8               	btfss	status,0,c
  4024  0062FA  0012               	return	
  4025                           
  4026                           ; BSR set to: 0
  4027  0062FC  EF00 F048          	goto	36864	; ;# 
  4028                           
  4029                           ;ui.c: 64: }
  4030                           
  4031                           ;ui.c: 62: };ui.c: 63: break;
  4032  006300  0012               	return	
  4033  006302                     l1211:
  4034  006302  0100               	movlb	0	; () banked
  4035  006304  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4036                           
  4037                           ; Switch size 1, requested type "space"
  4038                           ; Number of cases is 7, Range of values is 0 to 96
  4039                           ; switch strategies available:
  4040                           ; Name         Instructions Cycles
  4041                           ; simple_byte           22    12 (average)
  4042                           ;	Chosen strategy is simple_byte
  4043  006306  0A00               	xorlw	0	; case 0
  4044  006308  B4D8               	btfsc	status,2,c
  4045  00630A  0012               	return	
  4046  00630C  0A10               	xorlw	16	; case 16
  4047  00630E  B4D8               	btfsc	status,2,c
  4048  006310  D7D7               	goto	l1214
  4049  006312  0A30               	xorlw	48	; case 32
  4050  006314  B4D8               	btfsc	status,2,c
  4051  006316  0012               	return	
  4052  006318  0A10               	xorlw	16	; case 48
  4053  00631A  B4D8               	btfsc	status,2,c
  4054  00631C  D7DE               	goto	l1218
  4055  00631E  0A70               	xorlw	112	; case 64
  4056  006320  B4D8               	btfsc	status,2,c
  4057  006322  0012               	return	
  4058  006324  0A10               	xorlw	16	; case 80
  4059  006326  B4D8               	btfsc	status,2,c
  4060  006328  0012               	return	
  4061  00632A  0A30               	xorlw	48	; case 96
  4062  00632C  A4D8               	btfss	status,2,c
  4063  00632E  0012               	return	
  4064  006330  D7E0               	goto	l1221
  4065  006332                     __end_of__ui_encoder:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           intcon3	equ	0xFF0
  4072                           postinc0	equ	0xFEE
  4073                           wreg	equ	0xFE8
  4074                           postdec1	equ	0xFE5
  4075                           plusw1	equ	0xFE3
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           plusw2	equ	0xFDB
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function _timer_pseudo_isr *****************
  4082 ;; Defined at:
  4083 ;;		line 17 in file "os.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text8
  4111  0073A6                     __ptext8:
  4112                           	opt stack 0
  4113  0073A6                     _timer_pseudo_isr:
  4114                           	opt stack 30
  4115                           
  4116                           ;os.c: 20: if(INTCONbits.T0IF==0)
  4117                           
  4118                           ;incstack = 0
  4119  0073A6  A4F2               	btfss	intcon,2,c	;volatile
  4120  0073A8  0012               	return	
  4121                           
  4122                           ;os.c: 23: };os.c: 27: TMR0H = 0xD1;
  4123                           
  4124                           ;os.c: 21: {;os.c: 22: return;
  4125  0073AA  0ED1               	movlw	209
  4126  0073AC  6ED7               	movwf	4055,c	;volatile
  4127                           
  4128                           ;os.c: 28: TMR0L = 0x20;
  4129  0073AE  0E20               	movlw	32
  4130  0073B0  6ED6               	movwf	4054,c	;volatile
  4131                           
  4132                           ;os.c: 29: ++os.timeSlot;
  4133  0073B2  0100               	movlb	0	; () banked
  4134  0073B4  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;os.c: 30: os.timeSlot &= 0b00000111;
  4138  0073B6  0E07               	movlw	7
  4139  0073B8  1762               	andwf	(_os+2)& (0+255),f,b	;volatile
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;os.c: 31: os.done = 0;
  4143  0073BA  0E00               	movlw	0
  4144  0073BC  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;os.c: 32: INTCONbits.T0IF = 0;
  4148  0073BE  94F2               	bcf	intcon,2,c	;volatile
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;os.c: 35: if(INTCON3bits.INT1IF)
  4152  0073C0  A0F0               	btfss	intcon3,0,c	;volatile
  4153  0073C2  D002               	goto	l1035
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;os.c: 36: {;os.c: 37: ++os.buttonCount;
  4157  0073C4  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;os.c: 38: INTCON3bits.INT1IF = 0;
  4161  0073C6  90F0               	bcf	intcon3,0,c	;volatile
  4162  0073C8                     l1035:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;os.c: 39: };os.c: 42: if(INTCON3bits.INT2IF)
  4166                           
  4167                           ; BSR set to: 0
  4168  0073C8  A2F0               	btfss	intcon3,1,c	;volatile
  4169  0073CA  D003               	goto	l1036
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;os.c: 43: {;os.c: 44: if(!PORTBbits.RB6)
  4173  0073CC  AC81               	btfss	3969,6,c	;volatile
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;os.c: 45: {;os.c: 46: --os.encoderCount;
  4177  0073CE  0760               	decf	_os& (0+255),f,b	;volatile
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;os.c: 47: };os.c: 48: INTCON3bits.INT2IF = 0;
  4181                           
  4182                           ; BSR set to: 0
  4183  0073D0  92F0               	bcf	intcon3,1,c	;volatile
  4184  0073D2                     l1036:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;os.c: 49: };os.c: 50: if(INTCON3bits.INT3IF)
  4188                           
  4189                           ; BSR set to: 0
  4190  0073D2  A4F0               	btfss	intcon3,2,c	;volatile
  4191  0073D4  0012               	return	
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;os.c: 51: {;os.c: 52: if(!PORTBbits.RB7)
  4195  0073D6  AE81               	btfss	3969,7,c	;volatile
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;os.c: 53: {;os.c: 54: ++os.encoderCount;
  4199  0073D8  2B60               	incf	_os& (0+255),f,b	;volatile
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;os.c: 55: };os.c: 56: INTCON3bits.INT3IF = 0;
  4203                           
  4204                           ; BSR set to: 0
  4205  0073DA  94F0               	bcf	intcon3,2,c	;volatile
  4206  0073DC  0012               	return	
  4207  0073DE                     __end_of_timer_pseudo_isr:
  4208                           	opt stack 0
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           intcon	equ	0xFF2
  4214                           intcon3	equ	0xFF0
  4215                           postinc0	equ	0xFEE
  4216                           wreg	equ	0xFE8
  4217                           postdec1	equ	0xFE5
  4218                           plusw1	equ	0xFE3
  4219                           fsr1h	equ	0xFE2
  4220                           fsr1l	equ	0xFE1
  4221                           plusw2	equ	0xFDB
  4222                           status	equ	0xFD8
  4223                           
  4224 ;; *************** function _system_init *****************
  4225 ;; Defined at:
  4226 ;;		line 136 in file "os.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;Total ram usage:        0 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    8
  4247 ;; This function calls:
  4248 ;;		__system_encoder_init
  4249 ;;		__system_timer0_init
  4250 ;;		_fat_init
  4251 ;;		_flash_init
  4252 ;;		_i2c_init
  4253 ;;		_ui_init
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text9
  4260  00677E                     __ptext9:
  4261                           	opt stack 0
  4262  00677E                     _system_init:
  4263                           	opt stack 22
  4264                           
  4265                           ;os.c: 143: TRISCbits.TRISC2 = 0;
  4266                           
  4267                           ;incstack = 0
  4268  00677E  9494               	bcf	3988,2,c	;volatile
  4269                           
  4270                           ;os.c: 144: LATCbits.LC2 = 1;
  4271  006780  848B               	bsf	3979,2,c	;volatile
  4272                           
  4273                           ;os.c: 147: TRISDbits.TRISD0 = 0;
  4274  006782  9095               	bcf	3989,0,c	;volatile
  4275                           
  4276                           ;os.c: 148: LATDbits.LD0 = 0;
  4277  006784  908C               	bcf	3980,0,c	;volatile
  4278                           
  4279                           ;os.c: 151: TRISDbits.TRISD3 = 0;
  4280  006786  9695               	bcf	3989,3,c	;volatile
  4281                           
  4282                           ;os.c: 152: LATDbits.LD3 = 0;
  4283  006788  968C               	bcf	3980,3,c	;volatile
  4284                           
  4285                           ;os.c: 155: TRISDbits.TRISD1 = 0;
  4286  00678A  9295               	bcf	3989,1,c	;volatile
  4287                           
  4288                           ;os.c: 156: LATDbits.LD1 = 0;
  4289  00678C  928C               	bcf	3980,1,c	;volatile
  4290                           
  4291                           ;os.c: 159: TRISBbits.TRISB1 = 0;
  4292  00678E  9293               	bcf	3987,1,c	;volatile
  4293                           
  4294                           ;os.c: 160: LATBbits.LB1 = 0;
  4295  006790  928A               	bcf	3978,1,c	;volatile
  4296                           
  4297                           ;os.c: 163: TRISBbits.TRISB2 = 0;
  4298  006792  9493               	bcf	3987,2,c	;volatile
  4299                           
  4300                           ;os.c: 164: LATBbits.LB2 = 0;
  4301  006794  948A               	bcf	3978,2,c	;volatile
  4302                           
  4303                           ;os.c: 165: TRISBbits.TRISB3 = 0;
  4304  006796  9693               	bcf	3987,3,c	;volatile
  4305                           
  4306                           ;os.c: 166: LATBbits.LB3 = 0;
  4307  006798  968A               	bcf	3978,3,c	;volatile
  4308                           
  4309                           ;os.c: 169: TRISDbits.TRISD6 = 1;
  4310  00679A  8C95               	bsf	3989,6,c	;volatile
  4311                           
  4312                           ;os.c: 170: TRISDbits.TRISD4 = 0;
  4313  00679C  9895               	bcf	3989,4,c	;volatile
  4314                           
  4315                           ;os.c: 171: TRISDbits.TRISD5 = 0;
  4316  00679E  9A95               	bcf	3989,5,c	;volatile
  4317                           
  4318                           ;os.c: 172: TRISDbits.TRISD7 = 0;
  4319  0067A0  9E95               	bcf	3989,7,c	;volatile
  4320                           
  4321                           ;os.c: 173: LATDbits.LD7 = 1;
  4322  0067A2  8E8C               	bsf	3980,7,c	;volatile
  4323                           
  4324                           ;os.c: 176: TRISCbits.TRISC7 = 0;
  4325  0067A4  9E94               	bcf	3988,7,c	;volatile
  4326                           
  4327                           ;os.c: 177: LATCbits.LC7 = 0;
  4328  0067A6  9E8B               	bcf	3979,7,c	;volatile
  4329                           
  4330                           ;os.c: 180: TRISEbits.TRISE2 = 0;
  4331  0067A8  9496               	bcf	3990,2,c	;volatile
  4332                           
  4333                           ;os.c: 181: LATEbits.LE2 = 1;
  4334  0067AA  848D               	bsf	3981,2,c	;volatile
  4335                           
  4336                           ;os.c: 182: TRISEbits.TRISE1 = 0;
  4337  0067AC  9296               	bcf	3990,1,c	;volatile
  4338                           
  4339                           ;os.c: 183: LATEbits.LE1 = 1;
  4340  0067AE  828D               	bsf	3981,1,c	;volatile
  4341                           
  4342                           ;os.c: 184: TRISEbits.TRISE0 = 0;
  4343  0067B0  9096               	bcf	3990,0,c	;volatile
  4344                           
  4345                           ;os.c: 185: LATEbits.LE0 = 1;
  4346  0067B2  808D               	bsf	3981,0,c	;volatile
  4347                           
  4348                           ;os.c: 186: TRISAbits.TRISA5 = 0;
  4349  0067B4  9A92               	bcf	3986,5,c	;volatile
  4350                           
  4351                           ;os.c: 187: LATAbits.LA5 = 1;
  4352  0067B6  8A89               	bsf	3977,5,c	;volatile
  4353                           
  4354                           ;os.c: 190: TRISAbits.TRISA0 = 1;
  4355  0067B8  8092               	bsf	3986,0,c	;volatile
  4356                           
  4357                           ;os.c: 191: ANCON0bits.PCFG0 = 1;
  4358  0067BA  010F               	movlb	15	; () banked
  4359  0067BC  8148               	bsf	72,0,b	;volatile
  4360                           
  4361                           ;os.c: 192: TRISBbits.TRISB7 = 1;
  4362  0067BE  8E93               	bsf	3987,7,c	;volatile
  4363                           
  4364                           ;os.c: 193: TRISBbits.TRISB6 = 1;
  4365  0067C0  8C93               	bsf	3987,6,c	;volatile
  4366                           
  4367                           ; BSR set to: 15
  4368                           ;os.c: 196: os.bootloader_mode = BOOTLOADER_MODE_START;
  4369  0067C2  0E00               	movlw	0
  4370  0067C4  0100               	movlb	0	; () banked
  4371  0067C6  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4372                           
  4373                           ;os.c: 197: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4374  0067C8  0E00               	movlw	0
  4375  0067CA  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;os.c: 200: i2c_init();
  4379  0067CC  ECFC  F03C         	call	_i2c_init	;wreg free
  4380                           
  4381                           ;os.c: 203: flash_init();
  4382  0067D0  ECEE  F03C         	call	_flash_init	;wreg free
  4383                           
  4384                           ;os.c: 206: fat_init();
  4385  0067D4  ECDE  F03C         	call	_fat_init	;wreg free
  4386                           
  4387                           ;os.c: 209: _system_encoder_init();
  4388  0067D8  ECB6  F039         	call	__system_encoder_init	;wreg free
  4389                           
  4390                           ;os.c: 212: ui_init();
  4391  0067DC  ECB2  F03C         	call	_ui_init	;wreg free
  4392                           
  4393                           ;os.c: 215: _system_timer0_init();
  4394  0067E0  EC49  F03C         	call	__system_timer0_init	;wreg free
  4395  0067E4  0012               	return		;funcret
  4396  0067E6                     __end_of_system_init:
  4397                           	opt stack 0
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           intcon	equ	0xFF2
  4403                           intcon3	equ	0xFF0
  4404                           postinc0	equ	0xFEE
  4405                           wreg	equ	0xFE8
  4406                           postdec1	equ	0xFE5
  4407                           plusw1	equ	0xFE3
  4408                           fsr1h	equ	0xFE2
  4409                           fsr1l	equ	0xFE1
  4410                           plusw2	equ	0xFDB
  4411                           status	equ	0xFD8
  4412                           
  4413 ;; *************** function _ui_init *****************
  4414 ;; Defined at:
  4415 ;;		line 78 in file "ui.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;Total ram usage:        0 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_system_init
  4439 ;;		_ui_run
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text10
  4444  007964                     __ptext10:
  4445                           	opt stack 0
  4446  007964                     _ui_init:
  4447                           	opt stack 29
  4448                           
  4449                           ;ui.c: 80: system_ui_inactive_count = 0;
  4450                           
  4451                           ;incstack = 0
  4452  007964  0E00               	movlw	0
  4453  007966  0100               	movlb	0	; () banked
  4454  007968  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4455  00796A  0E00               	movlw	0
  4456  00796C  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;ui.c: 82: LATCbits.LC2 = 1;
  4460  00796E  848B               	bsf	3979,2,c	;volatile
  4461                           
  4462                           ;ui.c: 83: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4463  007970  0E01               	movlw	1
  4464  007972  6F9F               	movwf	_userInterfaceStatus& (0+255),b
  4465                           
  4466                           ; BSR set to: 0
  4467  007974  0012               	return		;funcret
  4468  007976                     __end_of_ui_init:
  4469                           	opt stack 0
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           intcon	equ	0xFF2
  4475                           intcon3	equ	0xFF0
  4476                           postinc0	equ	0xFEE
  4477                           wreg	equ	0xFE8
  4478                           postdec1	equ	0xFE5
  4479                           plusw1	equ	0xFE3
  4480                           fsr1h	equ	0xFE2
  4481                           fsr1l	equ	0xFE1
  4482                           plusw2	equ	0xFDB
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _i2c_init *****************
  4486 ;; Defined at:
  4487 ;;		line 102 in file "i2c.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;Total ram usage:        0 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    1
  4508 ;; This function calls:
  4509 ;;		__i2c_open_1
  4510 ;;		_i2c_set_frequency
  4511 ;; This function is called by:
  4512 ;;		_system_init
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text11
  4517  0079F8                     __ptext11:
  4518                           	opt stack 0
  4519  0079F8                     _i2c_init:
  4520                           	opt stack 28
  4521                           
  4522                           ;i2c.c: 105: _i2c_open_1();
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;incstack = 0
  4526  0079F8  EC91  F03C         	call	__i2c_open_1	;wreg free
  4527                           
  4528                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4529  0079FC  0E00               	movlw	0
  4530  0079FE  EC2F  F03B         	call	_i2c_set_frequency
  4531  007A02  0012               	return		;funcret
  4532  007A04                     __end_of_i2c_init:
  4533                           	opt stack 0
  4534                           tblptru	equ	0xFF8
  4535                           tblptrh	equ	0xFF7
  4536                           tblptrl	equ	0xFF6
  4537                           tablat	equ	0xFF5
  4538                           intcon	equ	0xFF2
  4539                           intcon3	equ	0xFF0
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           plusw1	equ	0xFE3
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           plusw2	equ	0xFDB
  4547                           status	equ	0xFD8
  4548                           
  4549 ;; *************** function __i2c_open_1 *****************
  4550 ;; Defined at:
  4551 ;;		line 36 in file "i2c.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_i2c_init
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text12
  4579  007922                     __ptext12:
  4580                           	opt stack 0
  4581  007922                     __i2c_open_1:
  4582                           	opt stack 28
  4583                           
  4584                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  4585                           
  4586                           ;incstack = 0
  4587  007922  9EC7               	bcf	4039,7,c	;volatile
  4588                           
  4589                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  4590  007924  9CC7               	bcf	4039,6,c	;volatile
  4591                           
  4592                           ;i2c.c: 40: SSP1ADD = 29;
  4593  007926  0E1D               	movlw	29
  4594  007928  6EC8               	movwf	4040,c	;volatile
  4595                           
  4596                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  4597  00792A  9EC6               	bcf	4038,7,c	;volatile
  4598                           
  4599                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  4600  00792C  9CC6               	bcf	4038,6,c	;volatile
  4601                           
  4602                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  4603  00792E  50C6               	movf	4038,w,c	;volatile
  4604  007930  0BF0               	andlw	-16
  4605  007932  0908               	iorlw	8
  4606  007934  6EC6               	movwf	4038,c	;volatile
  4607                           
  4608                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  4609  007936  8AC6               	bsf	4038,5,c	;volatile
  4610  007938  0012               	return		;funcret
  4611  00793A                     __end_of__i2c_open_1:
  4612                           	opt stack 0
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           intcon	equ	0xFF2
  4618                           intcon3	equ	0xFF0
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postdec1	equ	0xFE5
  4622                           plusw1	equ	0xFE3
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           plusw2	equ	0xFDB
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _flash_init *****************
  4629 ;; Defined at:
  4630 ;;		line 278 in file "flash.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;		None
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    5
  4651 ;; This function calls:
  4652 ;;		__flash_set_page_size
  4653 ;;		_spi_init
  4654 ;; This function is called by:
  4655 ;;		_system_init
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text13
  4660  0079DC                     __ptext13:
  4661                           	opt stack 0
  4662  0079DC                     _flash_init:
  4663                           	opt stack 24
  4664                           
  4665                           ;flash.c: 281: spi_init(SPI_MODE_MASTER);
  4666                           
  4667                           ;incstack = 0
  4668  0079DC  0E01               	movlw	1
  4669  0079DE  EC7A  F039         	call	_spi_init
  4670                           
  4671                           ;flash.c: 284: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  4672  0079E2  0E00               	movlw	0
  4673  0079E4  EC6F  F030         	call	__flash_set_page_size
  4674  0079E8  0012               	return		;funcret
  4675  0079EA                     __end_of_flash_init:
  4676                           	opt stack 0
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           intcon	equ	0xFF2
  4682                           intcon3	equ	0xFF0
  4683                           postinc0	equ	0xFEE
  4684                           wreg	equ	0xFE8
  4685                           postdec1	equ	0xFE5
  4686                           plusw1	equ	0xFE3
  4687                           fsr1h	equ	0xFE2
  4688                           fsr1l	equ	0xFE1
  4689                           plusw2	equ	0xFDB
  4690                           status	equ	0xFD8
  4691                           
  4692 ;; *************** function _spi_init *****************
  4693 ;; Defined at:
  4694 ;;		line 70 in file "spi.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  mode            1    wreg     enum E6707
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  mode            1    0[COMRAM] enum E6707
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4709 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;Total ram usage:        1 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    1
  4715 ;; This function calls:
  4716 ;;		__spi_init_master
  4717 ;;		__spi_init_pps
  4718 ;;		__spi_init_slave
  4719 ;; This function is called by:
  4720 ;;		_flash_init
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text14
  4725  0072F4                     __ptext14:
  4726                           	opt stack 0
  4727  0072F4                     _spi_init:
  4728                           	opt stack 27
  4729                           
  4730                           ;incstack = 0
  4731                           ;spi_init@mode stored from wreg
  4732  0072F4  6E01               	movwf	spi_init@mode,c
  4733                           
  4734                           ;spi.c: 73: if(spi_mode == mode)
  4735  0072F6  5001               	movf	spi_init@mode,w,c
  4736  0072F8  0100               	movlb	0	; () banked
  4737  0072FA  199B               	xorwf	_spi_mode& (0+255),w,b
  4738  0072FC  B4D8               	btfsc	status,2,c
  4739  0072FE  0012               	return	
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;spi.c: 76: };spi.c: 79: if(spi_mode == SPI_MODE_UNINITIALIZED)
  4743                           
  4744                           ; BSR set to: 0
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;spi.c: 74: {;spi.c: 75: return;
  4748  007300  519B               	movf	_spi_mode& (0+255),w,b
  4749  007302  A4D8               	btfss	status,2,c
  4750  007304  D00D               	goto	l2590
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;spi.c: 80: {;spi.c: 81: _spi_init_pps();
  4754  007306  EC5A  F03B         	call	__spi_init_pps	;wreg free
  4755                           
  4756                           ;spi.c: 82: };spi.c: 84: switch(mode)
  4757  00730A  D00A               	goto	l2590
  4758  00730C                     
  4759                           ;spi.c: 87: _spi_init_master();
  4760  00730C  ECBB  F03C         	call	__spi_init_master	;wreg free
  4761                           
  4762                           ;spi.c: 88: spi_mode = mode;
  4763  007310  C001  F09B         	movff	spi_init@mode,_spi_mode
  4764                           
  4765                           ;spi.c: 89: break;
  4766  007314  0012               	return	
  4767  007316                     
  4768                           ;spi.c: 92: _spi_init_slave();
  4769  007316  EC61  F03D         	call	__spi_init_slave	;wreg free
  4770                           
  4771                           ;spi.c: 93: spi_mode = mode;
  4772  00731A  C001  F09B         	movff	spi_init@mode,_spi_mode
  4773                           
  4774                           ;spi.c: 95: }
  4775                           
  4776                           ;spi.c: 94: break;
  4777  00731E  0012               	return	
  4778  007320                     l2590:
  4779  007320  5001               	movf	spi_init@mode,w,c
  4780                           
  4781                           ; Switch size 1, requested type "space"
  4782                           ; Number of cases is 2, Range of values is 1 to 2
  4783                           ; switch strategies available:
  4784                           ; Name         Instructions Cycles
  4785                           ; simple_byte            7     4 (average)
  4786                           ;	Chosen strategy is simple_byte
  4787  007322  0A01               	xorlw	1	; case 1
  4788  007324  B4D8               	btfsc	status,2,c
  4789  007326  D7F2               	goto	l2591
  4790  007328  0A03               	xorlw	3	; case 2
  4791  00732A  A4D8               	btfss	status,2,c
  4792  00732C  0012               	return	
  4793  00732E  D7F3               	goto	l2593
  4794  007330                     __end_of_spi_init:
  4795                           	opt stack 0
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           intcon	equ	0xFF2
  4801                           intcon3	equ	0xFF0
  4802                           postinc0	equ	0xFEE
  4803                           wreg	equ	0xFE8
  4804                           postdec1	equ	0xFE5
  4805                           plusw1	equ	0xFE3
  4806                           fsr1h	equ	0xFE2
  4807                           fsr1l	equ	0xFE1
  4808                           plusw2	equ	0xFDB
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function __spi_init_slave *****************
  4812 ;; Defined at:
  4813 ;;		line 48 in file "spi.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		None
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_spi_init
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text15
  4841  007AC2                     __ptext15:
  4842                           	opt stack 0
  4843  007AC2                     __spi_init_slave:
  4844                           	opt stack 27
  4845                           
  4846                           ;incstack = 0
  4847  007AC2  0012               	return		;funcret
  4848  007AC4                     __end_of__spi_init_slave:
  4849                           	opt stack 0
  4850                           tblptru	equ	0xFF8
  4851                           tblptrh	equ	0xFF7
  4852                           tblptrl	equ	0xFF6
  4853                           tablat	equ	0xFF5
  4854                           intcon	equ	0xFF2
  4855                           intcon3	equ	0xFF0
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           plusw1	equ	0xFE3
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           plusw2	equ	0xFDB
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function __spi_init_pps *****************
  4866 ;; Defined at:
  4867 ;;		line 25 in file "spi.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      void 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_spi_init
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text16
  4895  0076B4                     __ptext16:
  4896                           	opt stack 0
  4897  0076B4                     __spi_init_pps:
  4898                           	opt stack 27
  4899                           
  4900                           ;spi.c: 28: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  4901                           
  4902                           ;incstack = 0
  4903  0076B4  0E55               	movlw	85
  4904  0076B6  6EA7               	movwf	4007,c	;volsfr
  4905  0076B8  0EAA               	movlw	170
  4906  0076BA  6EA7               	movwf	4007,c	;volsfr
  4907  0076BC  010E               	movlb	14	; () banked
  4908  0076BE  91BF               	bcf	191,0,b	;volatile
  4909                           
  4910                           ;spi.c: 29: RPINR21 = 23;
  4911  0076C0  0E17               	movlw	23
  4912  0076C2  6FFC               	movwf	252,b	;volatile
  4913                           
  4914                           ;spi.c: 30: RPOR21 = 10;
  4915  0076C4  0E0A               	movlw	10
  4916  0076C6  6FD5               	movwf	213,b	;volatile
  4917                           
  4918                           ;spi.c: 32: RPOR22 = 11;
  4919  0076C8  0E0B               	movlw	11
  4920  0076CA  6FD6               	movwf	214,b	;volatile
  4921                           
  4922                           ;spi.c: 33: RPINR22 = 22;
  4923  0076CC  0E16               	movlw	22
  4924  0076CE  6FFD               	movwf	253,b	;volatile
  4925                           
  4926                           ;spi.c: 35: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  4927  0076D0  0E55               	movlw	85
  4928  0076D2  6EA7               	movwf	4007,c	;volsfr
  4929  0076D4  0EAA               	movlw	170
  4930  0076D6  6EA7               	movwf	4007,c	;volsfr
  4931                           
  4932                           ; BSR set to: 14
  4933  0076D8  81BF               	bsf	191,0,b	;volatile
  4934                           
  4935                           ; BSR set to: 14
  4936  0076DA  0012               	return		;funcret
  4937  0076DC                     __end_of__spi_init_pps:
  4938                           	opt stack 0
  4939                           tblptru	equ	0xFF8
  4940                           tblptrh	equ	0xFF7
  4941                           tblptrl	equ	0xFF6
  4942                           tablat	equ	0xFF5
  4943                           intcon	equ	0xFF2
  4944                           intcon3	equ	0xFF0
  4945                           postinc0	equ	0xFEE
  4946                           wreg	equ	0xFE8
  4947                           postdec1	equ	0xFE5
  4948                           plusw1	equ	0xFE3
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           plusw2	equ	0xFDB
  4952                           status	equ	0xFD8
  4953                           
  4954 ;; *************** function __spi_init_master *****************
  4955 ;; Defined at:
  4956 ;;		line 38 in file "spi.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		None
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;Total ram usage:        0 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_spi_init
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text17
  4984  007976                     __ptext17:
  4985                           	opt stack 0
  4986  007976                     __spi_init_master:
  4987                           	opt stack 27
  4988                           
  4989                           ;spi.c: 41: SSP2STATbits.SMP = 1;
  4990                           
  4991                           ; BSR set to: 14
  4992                           ;incstack = 0
  4993  007976  8E73               	bsf	3955,7,c	;volatile
  4994                           
  4995                           ;spi.c: 42: SSP2STATbits.CKE = 1;
  4996  007978  8C73               	bsf	3955,6,c	;volatile
  4997                           
  4998                           ;spi.c: 43: SSP2CON1bits.CKP = 0;
  4999  00797A  9872               	bcf	3954,4,c	;volatile
  5000                           
  5001                           ;spi.c: 44: SSP2CON1bits.SSPM =0b0000;
  5002  00797C  9072               	bcf	3954,0,c	;volatile
  5003  00797E  9272               	bcf	3954,1,c	;volatile
  5004  007980  9472               	bcf	3954,2,c	;volatile
  5005  007982  9672               	bcf	3954,3,c	;volatile
  5006                           
  5007                           ;spi.c: 45: SSP2CON1bits.SSPEN = 1;
  5008  007984  8A72               	bsf	3954,5,c	;volatile
  5009  007986  0012               	return		;funcret
  5010  007988                     __end_of__spi_init_master:
  5011                           	opt stack 0
  5012                           tblptru	equ	0xFF8
  5013                           tblptrh	equ	0xFF7
  5014                           tblptrl	equ	0xFF6
  5015                           tablat	equ	0xFF5
  5016                           intcon	equ	0xFF2
  5017                           intcon3	equ	0xFF0
  5018                           postinc0	equ	0xFEE
  5019                           wreg	equ	0xFE8
  5020                           postdec1	equ	0xFE5
  5021                           plusw1	equ	0xFE3
  5022                           fsr1h	equ	0xFE2
  5023                           fsr1l	equ	0xFE1
  5024                           plusw2	equ	0xFDB
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function __flash_set_page_size *****************
  5028 ;; Defined at:
  5029 ;;		line 91 in file "flash.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  size            1    wreg     enum E6844
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  size            1   23[COMRAM] enum E6844
  5034 ;;  command         4   19[COMRAM] unsigned char [4]
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;Total ram usage:        5 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    4
  5051 ;; This function calls:
  5052 ;;		_flash_is_busy
  5053 ;;		_memcpy
  5054 ;;		_spi_tx
  5055 ;; This function is called by:
  5056 ;;		_flash_init
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text18
  5061  0060DE                     __ptext18:
  5062                           	opt stack 0
  5063  0060DE                     __flash_set_page_size:
  5064                           	opt stack 24
  5065                           
  5066                           ;incstack = 0
  5067                           ;__flash_set_page_size@size stored from wreg
  5068  0060DE  6E18               	movwf	__flash_set_page_size@size,c
  5069  0060E0                     
  5070                           ;flash.c: 93: uint8_t command[4];;flash.c: 96: while(flash_is_busy());
  5071  0060E0  EC38  F03C         	call	_flash_is_busy	;wreg free
  5072  0060E4  0900               	iorlw	0
  5073  0060E6  A4D8               	btfss	status,2,c
  5074  0060E8  D7FB               	goto	l12041
  5075                           
  5076                           ;flash.c: 99: if(size==FLASH_PAGE_SIZE_512)
  5077  0060EA  5018               	movf	__flash_set_page_size@size,w,c
  5078  0060EC  A4D8               	btfss	status,2,c
  5079  0060EE  D013               	goto	l1586
  5080                           
  5081                           ;flash.c: 100: memcpy(command, flash_command_pagesize_512, 4);
  5082  0060F0  0E14               	movlw	low __flash_set_page_size@command
  5083  0060F2  6E01               	movwf	memcpy@d1,c
  5084  0060F4  0E00               	movlw	high __flash_set_page_size@command
  5085  0060F6  6E02               	movwf	memcpy@d1+1,c
  5086  0060F8  0EC3               	movlw	low _flash_command_pagesize_512
  5087  0060FA  6E03               	movwf	memcpy@s1,c
  5088  0060FC  0E8F               	movlw	high _flash_command_pagesize_512
  5089  0060FE  6E04               	movwf	memcpy@s1+1,c
  5090  006100  5003               	movf	memcpy@s1,w,c
  5091  006102  1004               	iorwf	memcpy@s1+1,w,c
  5092  006104  A4D8               	btfss	status,2,c
  5093  006106  0E00               	movlw	low (__mediumconst shr (0+16))
  5094  006108  6E05               	movwf	memcpy@s1+2,c
  5095  00610A  0E00               	movlw	0
  5096  00610C  6E07               	movwf	memcpy@n+1,c
  5097  00610E  0E04               	movlw	4
  5098  006110  6E06               	movwf	memcpy@n,c
  5099  006112  EC26  F034         	call	_memcpy	;wreg free
  5100  006116                     l1586:
  5101                           
  5102                           ;flash.c: 101: if(size==FLASH_PAGE_SIZE_528)
  5103  006116  0418               	decf	__flash_set_page_size@size,w,c
  5104  006118  A4D8               	btfss	status,2,c
  5105  00611A  D013               	goto	l1587
  5106                           
  5107                           ;flash.c: 102: memcpy(command, flash_command_pagesize_528, 4);
  5108  00611C  0E14               	movlw	low __flash_set_page_size@command
  5109  00611E  6E01               	movwf	memcpy@d1,c
  5110  006120  0E00               	movlw	high __flash_set_page_size@command
  5111  006122  6E02               	movwf	memcpy@d1+1,c
  5112  006124  0EBF               	movlw	low _flash_command_pagesize_528
  5113  006126  6E03               	movwf	memcpy@s1,c
  5114  006128  0E8F               	movlw	high _flash_command_pagesize_528
  5115  00612A  6E04               	movwf	memcpy@s1+1,c
  5116  00612C  5003               	movf	memcpy@s1,w,c
  5117  00612E  1004               	iorwf	memcpy@s1+1,w,c
  5118  006130  A4D8               	btfss	status,2,c
  5119  006132  0E00               	movlw	low (__mediumconst shr (0+16))
  5120  006134  6E05               	movwf	memcpy@s1+2,c
  5121  006136  0E00               	movlw	0
  5122  006138  6E07               	movwf	memcpy@n+1,c
  5123  00613A  0E04               	movlw	4
  5124  00613C  6E06               	movwf	memcpy@n,c
  5125  00613E  EC26  F034         	call	_memcpy	;wreg free
  5126  006142                     l1587:
  5127                           
  5128                           ;flash.c: 105: spi_tx(command, 4);
  5129  006142  0E14               	movlw	low __flash_set_page_size@command
  5130  006144  6E01               	movwf	spi_tx@data,c
  5131  006146  0E00               	movlw	high __flash_set_page_size@command
  5132  006148  6E02               	movwf	spi_tx@data+1,c
  5133  00614A  0E00               	movlw	0
  5134  00614C  6E04               	movwf	spi_tx@length+1,c
  5135  00614E  0E04               	movlw	4
  5136  006150  6E03               	movwf	spi_tx@length,c
  5137  006152  EC7B  F035         	call	_spi_tx	;wreg free
  5138  006156  0012               	return		;funcret
  5139  006158                     __end_of__flash_set_page_size:
  5140                           	opt stack 0
  5141                           tblptru	equ	0xFF8
  5142                           tblptrh	equ	0xFF7
  5143                           tblptrl	equ	0xFF6
  5144                           tablat	equ	0xFF5
  5145                           intcon	equ	0xFF2
  5146                           intcon3	equ	0xFF0
  5147                           postinc0	equ	0xFEE
  5148                           wreg	equ	0xFE8
  5149                           postdec1	equ	0xFE5
  5150                           plusw1	equ	0xFE3
  5151                           fsr1h	equ	0xFE2
  5152                           fsr1l	equ	0xFE1
  5153                           plusw2	equ	0xFDB
  5154                           status	equ	0xFD8
  5155                           
  5156 ;; *************** function _fat_init *****************
  5157 ;; Defined at:
  5158 ;;		line 1011 in file "fat16.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; Hardware stack levels required when called:    7
  5179 ;; This function calls:
  5180 ;;		_fat_format
  5181 ;;		_fat_get_format_status
  5182 ;; This function is called by:
  5183 ;;		_system_init
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text19
  5188  0079BC                     __ptext19:
  5189                           	opt stack 0
  5190  0079BC                     _fat_init:
  5191                           	opt stack 22
  5192                           
  5193                           ;fat16.c: 1014: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5194                           
  5195                           ;incstack = 0
  5196  0079BC  EC76  F02A         	call	_fat_get_format_status	;wreg free
  5197  0079C0  0900               	iorlw	0
  5198  0079C2  A4D8               	btfss	status,2,c
  5199  0079C4  0012               	return	
  5200                           
  5201                           ;fat16.c: 1015: {;fat16.c: 1016: fat_format();
  5202  0079C6  EC92  F012         	call	_fat_format	;wreg free
  5203  0079CA  0012               	return	
  5204  0079CC                     __end_of_fat_init:
  5205                           	opt stack 0
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           intcon	equ	0xFF2
  5211                           intcon3	equ	0xFF0
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           postdec1	equ	0xFE5
  5215                           plusw1	equ	0xFE3
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           plusw2	equ	0xFDB
  5219                           status	equ	0xFD8
  5220                           
  5221 ;; *************** function _fat_get_format_status *****************
  5222 ;; Defined at:
  5223 ;;		line 923 in file "fat16.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  cntr            2   45[COMRAM] unsigned int 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      enum E6830
  5230 ;; Registers used:
  5231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5239 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5241 ;;Total ram usage:        4 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    6
  5244 ;; This function calls:
  5245 ;;		__get_fbr
  5246 ;;		__get_mbr
  5247 ;;		_flash_page_read
  5248 ;; This function is called by:
  5249 ;;		_fat_init
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text20
  5254  0054EC                     __ptext20:
  5255                           	opt stack 0
  5256  0054EC                     _fat_get_format_status:
  5257                           	opt stack 22
  5258                           
  5259                           ;fat16.c: 925: uint16_t cntr;;fat16.c: 928: flash_page_read(0, buffer);
  5260                           
  5261                           ;incstack = 0
  5262  0054EC  0E00               	movlw	0
  5263  0054EE  6E29               	movwf	flash_page_read@page+1,c
  5264  0054F0  0E00               	movlw	0
  5265  0054F2  6E28               	movwf	flash_page_read@page,c
  5266  0054F4  0EB2               	movlw	low _buffer
  5267  0054F6  6E2A               	movwf	flash_page_read@data,c
  5268  0054F8  0E02               	movlw	high _buffer
  5269  0054FA  6E2B               	movwf	flash_page_read@data+1,c
  5270  0054FC  ECBC  F03B         	call	_flash_page_read	;wreg free
  5271                           
  5272                           ;fat16.c: 929: for(cntr=0; cntr<512; ++cntr)
  5273  005500  0E00               	movlw	0
  5274  005502  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5275  005504  0E00               	movlw	0
  5276  005506  6E2E               	movwf	fat_get_format_status@cntr,c
  5277  005508                     l12079:
  5278  005508  0E02               	movlw	2
  5279  00550A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5280  00550C  B0D8               	btfsc	status,0,c
  5281  00550E  D016               	goto	u9390
  5282                           
  5283                           ;fat16.c: 930: {;fat16.c: 931: if(buffer[cntr] != _get_mbr(cntr))
  5284  005510  0EB2               	movlw	low _buffer
  5285  005512  242E               	addwf	fat_get_format_status@cntr,w,c
  5286  005514  6ED9               	movwf	fsr2l,c
  5287  005516  0E02               	movlw	high _buffer
  5288  005518  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5289  00551A  6EDA               	movwf	fsr2h,c
  5290  00551C  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5291  005520  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5292  005524  ECD6  F024         	call	__get_mbr	;wreg free
  5293  005528  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5294  00552A  50DE               	movf	postinc2,w,c
  5295  00552C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5296  00552E  B4D8               	btfsc	status,2,c
  5297  005530  D002               	goto	l1996
  5298                           
  5299                           ;fat16.c: 932: {;fat16.c: 933: return DRIVE_NOT_FORMATED;
  5300  005532  0E00               	movlw	0
  5301  005534  0012               	return	
  5302  005536                     l1996:
  5303  005536  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5304  005538  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5305  00553A  D7E6               	goto	l12079
  5306  00553C                     u9390:
  5307                           
  5308                           ;fat16.c: 934: };fat16.c: 935: };fat16.c: 938: flash_page_read(1, buffer);
  5309  00553C  0E00               	movlw	0
  5310  00553E  6E29               	movwf	flash_page_read@page+1,c
  5311  005540  0E01               	movlw	1
  5312  005542  6E28               	movwf	flash_page_read@page,c
  5313  005544  0EB2               	movlw	low _buffer
  5314  005546  6E2A               	movwf	flash_page_read@data,c
  5315  005548  0E02               	movlw	high _buffer
  5316  00554A  6E2B               	movwf	flash_page_read@data+1,c
  5317  00554C  ECBC  F03B         	call	_flash_page_read	;wreg free
  5318                           
  5319                           ;fat16.c: 939: for(cntr=0; cntr<512; ++cntr)
  5320  005550  0E00               	movlw	0
  5321  005552  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5322  005554  0E00               	movlw	0
  5323  005556  6E2E               	movwf	fat_get_format_status@cntr,c
  5324  005558                     l12097:
  5325  005558  0E02               	movlw	2
  5326  00555A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5327  00555C  B0D8               	btfsc	status,0,c
  5328  00555E  D016               	goto	u9420
  5329                           
  5330                           ;fat16.c: 940: {;fat16.c: 941: if(buffer[cntr] != _get_fbr(cntr))
  5331  005560  0EB2               	movlw	low _buffer
  5332  005562  242E               	addwf	fat_get_format_status@cntr,w,c
  5333  005564  6ED9               	movwf	fsr2l,c
  5334  005566  0E02               	movlw	high _buffer
  5335  005568  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5336  00556A  6EDA               	movwf	fsr2h,c
  5337  00556C  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5338  005570  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5339  005574  EC04  F00D         	call	__get_fbr	;wreg free
  5340  005578  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5341  00557A  50DE               	movf	postinc2,w,c
  5342  00557C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5343  00557E  B4D8               	btfsc	status,2,c
  5344  005580  D002               	goto	l2000
  5345                           
  5346                           ;fat16.c: 942: {;fat16.c: 943: return DRIVE_NOT_FORMATED;
  5347  005582  0E00               	movlw	0
  5348  005584  0012               	return	
  5349  005586                     l2000:
  5350  005586  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5351  005588  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5352  00558A  D7E6               	goto	l12097
  5353  00558C                     u9420:
  5354                           
  5355                           ;fat16.c: 944: };fat16.c: 945: };fat16.c: 948: return DRIVE_FORMATED;
  5356  00558C  0E01               	movlw	1
  5357  00558E  0012               	return	
  5358  005590                     __end_of_fat_get_format_status:
  5359                           	opt stack 0
  5360                           tblptru	equ	0xFF8
  5361                           tblptrh	equ	0xFF7
  5362                           tblptrl	equ	0xFF6
  5363                           tablat	equ	0xFF5
  5364                           intcon	equ	0xFF2
  5365                           intcon3	equ	0xFF0
  5366                           postinc0	equ	0xFEE
  5367                           wreg	equ	0xFE8
  5368                           postdec1	equ	0xFE5
  5369                           plusw1	equ	0xFE3
  5370                           fsr1h	equ	0xFE2
  5371                           fsr1l	equ	0xFE1
  5372                           postinc2	equ	0xFDE
  5373                           plusw2	equ	0xFDB
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           
  5378 ;; *************** function _fat_format *****************
  5379 ;; Defined at:
  5380 ;;		line 951 in file "fat16.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  cntr            2   36[COMRAM] unsigned int 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;Total ram usage:        2 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    6
  5401 ;; This function calls:
  5402 ;;		__get_data
  5403 ;;		__get_fat
  5404 ;;		__get_fbr
  5405 ;;		__get_mbr
  5406 ;;		__get_root
  5407 ;;		_flash_page_write
  5408 ;; This function is called by:
  5409 ;;		_fat_init
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text21
  5414  002524                     __ptext21:
  5415                           	opt stack 0
  5416  002524                     _fat_format:
  5417                           	opt stack 22
  5418                           
  5419                           ;fat16.c: 953: uint16_t cntr;;fat16.c: 956: for(cntr=0; cntr<512; ++cntr)
  5420                           
  5421                           ;incstack = 0
  5422  002524  0E00               	movlw	0
  5423  002526  6E26               	movwf	fat_format@cntr+1,c
  5424  002528  0E00               	movlw	0
  5425  00252A  6E25               	movwf	fat_format@cntr,c
  5426  00252C                     l12117:
  5427  00252C  0E02               	movlw	2
  5428  00252E  5C26               	subwf	fat_format@cntr+1,w,c
  5429  002530  B0D8               	btfsc	status,0,c
  5430  002532  D010               	goto	u9440
  5431                           
  5432                           ;fat16.c: 957: {;fat16.c: 958: buffer[cntr] = _get_mbr(cntr);
  5433  002534  0EB2               	movlw	low _buffer
  5434  002536  2425               	addwf	fat_format@cntr,w,c
  5435  002538  6ED9               	movwf	fsr2l,c
  5436  00253A  0E02               	movlw	high _buffer
  5437  00253C  2026               	addwfc	fat_format@cntr+1,w,c
  5438  00253E  6EDA               	movwf	fsr2h,c
  5439  002540  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  5440  002544  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  5441  002548  ECD6  F024         	call	__get_mbr	;wreg free
  5442  00254C  6EDF               	movwf	indf2,c
  5443  00254E  4A25               	infsnz	fat_format@cntr,f,c
  5444  002550  2A26               	incf	fat_format@cntr+1,f,c
  5445  002552  D7EC               	goto	l12117
  5446  002554                     u9440:
  5447                           
  5448                           ;fat16.c: 959: };fat16.c: 960: flash_page_write(0, buffer);
  5449  002554  0E00               	movlw	0
  5450  002556  6E21               	movwf	flash_page_write@page+1,c
  5451  002558  0E00               	movlw	0
  5452  00255A  6E20               	movwf	flash_page_write@page,c
  5453  00255C  0EB2               	movlw	low _buffer
  5454  00255E  6E22               	movwf	flash_page_write@data,c
  5455  002560  0E02               	movlw	high _buffer
  5456  002562  6E23               	movwf	flash_page_write@data+1,c
  5457  002564  EC24  F038         	call	_flash_page_write	;wreg free
  5458                           
  5459                           ;fat16.c: 963: for(cntr=0; cntr<512; ++cntr)
  5460  002568  0E00               	movlw	0
  5461  00256A  6E26               	movwf	fat_format@cntr+1,c
  5462  00256C  0E00               	movlw	0
  5463  00256E  6E25               	movwf	fat_format@cntr,c
  5464  002570                     l12131:
  5465  002570  0E02               	movlw	2
  5466  002572  5C26               	subwf	fat_format@cntr+1,w,c
  5467  002574  B0D8               	btfsc	status,0,c
  5468  002576  D010               	goto	u9460
  5469                           
  5470                           ;fat16.c: 964: {;fat16.c: 965: buffer[cntr] = _get_fbr(cntr);
  5471  002578  0EB2               	movlw	low _buffer
  5472  00257A  2425               	addwf	fat_format@cntr,w,c
  5473  00257C  6ED9               	movwf	fsr2l,c
  5474  00257E  0E02               	movlw	high _buffer
  5475  002580  2026               	addwfc	fat_format@cntr+1,w,c
  5476  002582  6EDA               	movwf	fsr2h,c
  5477  002584  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  5478  002588  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  5479  00258C  EC04  F00D         	call	__get_fbr	;wreg free
  5480  002590  6EDF               	movwf	indf2,c
  5481  002592  4A25               	infsnz	fat_format@cntr,f,c
  5482  002594  2A26               	incf	fat_format@cntr+1,f,c
  5483  002596  D7EC               	goto	l12131
  5484  002598                     u9460:
  5485                           
  5486                           ;fat16.c: 966: };fat16.c: 967: flash_page_write(1, buffer);
  5487  002598  0E00               	movlw	0
  5488  00259A  6E21               	movwf	flash_page_write@page+1,c
  5489  00259C  0E01               	movlw	1
  5490  00259E  6E20               	movwf	flash_page_write@page,c
  5491  0025A0  0EB2               	movlw	low _buffer
  5492  0025A2  6E22               	movwf	flash_page_write@data,c
  5493  0025A4  0E02               	movlw	high _buffer
  5494  0025A6  6E23               	movwf	flash_page_write@data+1,c
  5495  0025A8  EC24  F038         	call	_flash_page_write	;wreg free
  5496                           
  5497                           ;fat16.c: 970: for(cntr=0; cntr<512; ++cntr)
  5498  0025AC  0E00               	movlw	0
  5499  0025AE  6E26               	movwf	fat_format@cntr+1,c
  5500  0025B0  0E00               	movlw	0
  5501  0025B2  6E25               	movwf	fat_format@cntr,c
  5502  0025B4                     l12145:
  5503  0025B4  0E02               	movlw	2
  5504  0025B6  5C26               	subwf	fat_format@cntr+1,w,c
  5505  0025B8  B0D8               	btfsc	status,0,c
  5506  0025BA  D010               	goto	u9480
  5507                           
  5508                           ;fat16.c: 971: {;fat16.c: 972: buffer[cntr] = _get_fat(cntr);
  5509  0025BC  0EB2               	movlw	low _buffer
  5510  0025BE  2425               	addwf	fat_format@cntr,w,c
  5511  0025C0  6ED9               	movwf	fsr2l,c
  5512  0025C2  0E02               	movlw	high _buffer
  5513  0025C4  2026               	addwfc	fat_format@cntr+1,w,c
  5514  0025C6  6EDA               	movwf	fsr2h,c
  5515  0025C8  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  5516  0025CC  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  5517  0025D0  EC85  F036         	call	__get_fat	;wreg free
  5518  0025D4  6EDF               	movwf	indf2,c
  5519  0025D6  4A25               	infsnz	fat_format@cntr,f,c
  5520  0025D8  2A26               	incf	fat_format@cntr+1,f,c
  5521  0025DA  D7EC               	goto	l12145
  5522  0025DC                     u9480:
  5523                           
  5524                           ;fat16.c: 973: };fat16.c: 974: flash_page_write(2, buffer);
  5525  0025DC  0E00               	movlw	0
  5526  0025DE  6E21               	movwf	flash_page_write@page+1,c
  5527  0025E0  0E02               	movlw	2
  5528  0025E2  6E20               	movwf	flash_page_write@page,c
  5529  0025E4  0EB2               	movlw	low _buffer
  5530  0025E6  6E22               	movwf	flash_page_write@data,c
  5531  0025E8  0E02               	movlw	high _buffer
  5532  0025EA  6E23               	movwf	flash_page_write@data+1,c
  5533  0025EC  EC24  F038         	call	_flash_page_write	;wreg free
  5534                           
  5535                           ;fat16.c: 977: for(cntr=0; cntr<512; ++cntr)
  5536  0025F0  0E00               	movlw	0
  5537  0025F2  6E26               	movwf	fat_format@cntr+1,c
  5538  0025F4  0E00               	movlw	0
  5539  0025F6  6E25               	movwf	fat_format@cntr,c
  5540  0025F8                     l12159:
  5541  0025F8  0E02               	movlw	2
  5542  0025FA  5C26               	subwf	fat_format@cntr+1,w,c
  5543  0025FC  B0D8               	btfsc	status,0,c
  5544  0025FE  D00B               	goto	u9500
  5545                           
  5546                           ;fat16.c: 978: {;fat16.c: 979: buffer[cntr] = 0x00;
  5547  002600  0EB2               	movlw	low _buffer
  5548  002602  2425               	addwf	fat_format@cntr,w,c
  5549  002604  6ED9               	movwf	fsr2l,c
  5550  002606  0E02               	movlw	high _buffer
  5551  002608  2026               	addwfc	fat_format@cntr+1,w,c
  5552  00260A  6EDA               	movwf	fsr2h,c
  5553  00260C  0E00               	movlw	0
  5554  00260E  6EDF               	movwf	indf2,c
  5555  002610  4A25               	infsnz	fat_format@cntr,f,c
  5556  002612  2A26               	incf	fat_format@cntr+1,f,c
  5557  002614  D7F1               	goto	l12159
  5558  002616                     u9500:
  5559                           
  5560                           ;fat16.c: 980: };fat16.c: 981: for(cntr=3; cntr<=17; ++cntr)
  5561  002616  0E00               	movlw	0
  5562  002618  6E26               	movwf	fat_format@cntr+1,c
  5563  00261A  0E03               	movlw	3
  5564  00261C  6E25               	movwf	fat_format@cntr,c
  5565  00261E                     l12171:
  5566  00261E  5026               	movf	fat_format@cntr+1,w,c
  5567  002620  E111               	bnz	l12181
  5568  002622  0E12               	movlw	18
  5569  002624  5C25               	subwf	fat_format@cntr,w,c
  5570  002626  B0D8               	btfsc	status,0,c
  5571  002628  D00D               	goto	u9520
  5572                           
  5573                           ;fat16.c: 982: {;fat16.c: 983: flash_page_write(cntr, buffer);
  5574  00262A  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5575  00262E  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5576  002632  0EB2               	movlw	low _buffer
  5577  002634  6E22               	movwf	flash_page_write@data,c
  5578  002636  0E02               	movlw	high _buffer
  5579  002638  6E23               	movwf	flash_page_write@data+1,c
  5580  00263A  EC24  F038         	call	_flash_page_write	;wreg free
  5581  00263E  4A25               	infsnz	fat_format@cntr,f,c
  5582  002640  2A26               	incf	fat_format@cntr+1,f,c
  5583  002642  D7ED               	goto	l12171
  5584  002644                     u9520:
  5585  002644                     l12181:
  5586                           
  5587                           ;fat16.c: 984: };fat16.c: 987: for(cntr=0; cntr<512; ++cntr)
  5588  002644  0E00               	movlw	0
  5589  002646  6E26               	movwf	fat_format@cntr+1,c
  5590  002648  0E00               	movlw	0
  5591  00264A  6E25               	movwf	fat_format@cntr,c
  5592  00264C                     l12183:
  5593  00264C  0E02               	movlw	2
  5594  00264E  5C26               	subwf	fat_format@cntr+1,w,c
  5595  002650  B0D8               	btfsc	status,0,c
  5596  002652  D010               	goto	u9540
  5597                           
  5598                           ;fat16.c: 988: {;fat16.c: 989: buffer[cntr] = _get_root(cntr);
  5599  002654  0EB2               	movlw	low _buffer
  5600  002656  2425               	addwf	fat_format@cntr,w,c
  5601  002658  6ED9               	movwf	fsr2l,c
  5602  00265A  0E02               	movlw	high _buffer
  5603  00265C  2026               	addwfc	fat_format@cntr+1,w,c
  5604  00265E  6EDA               	movwf	fsr2h,c
  5605  002660  C025  F001         	movff	fat_format@cntr,__get_root@idx
  5606  002664  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  5607  002668  EC2C  F018         	call	__get_root	;wreg free
  5608  00266C  6EDF               	movwf	indf2,c
  5609  00266E  4A25               	infsnz	fat_format@cntr,f,c
  5610  002670  2A26               	incf	fat_format@cntr+1,f,c
  5611  002672  D7EC               	goto	l12183
  5612  002674                     u9540:
  5613                           
  5614                           ;fat16.c: 990: };fat16.c: 991: flash_page_write(18, buffer);
  5615  002674  0E00               	movlw	0
  5616  002676  6E21               	movwf	flash_page_write@page+1,c
  5617  002678  0E12               	movlw	18
  5618  00267A  6E20               	movwf	flash_page_write@page,c
  5619  00267C  0EB2               	movlw	low _buffer
  5620  00267E  6E22               	movwf	flash_page_write@data,c
  5621  002680  0E02               	movlw	high _buffer
  5622  002682  6E23               	movwf	flash_page_write@data+1,c
  5623  002684  EC24  F038         	call	_flash_page_write	;wreg free
  5624                           
  5625                           ;fat16.c: 994: for(cntr=0; cntr<512; ++cntr)
  5626  002688  0E00               	movlw	0
  5627  00268A  6E26               	movwf	fat_format@cntr+1,c
  5628  00268C  0E00               	movlw	0
  5629  00268E  6E25               	movwf	fat_format@cntr,c
  5630  002690                     l12197:
  5631  002690  0E02               	movlw	2
  5632  002692  5C26               	subwf	fat_format@cntr+1,w,c
  5633  002694  B0D8               	btfsc	status,0,c
  5634  002696  D00B               	goto	u9560
  5635                           
  5636                           ;fat16.c: 995: {;fat16.c: 996: buffer[cntr] = 0x00;
  5637  002698  0EB2               	movlw	low _buffer
  5638  00269A  2425               	addwf	fat_format@cntr,w,c
  5639  00269C  6ED9               	movwf	fsr2l,c
  5640  00269E  0E02               	movlw	high _buffer
  5641  0026A0  2026               	addwfc	fat_format@cntr+1,w,c
  5642  0026A2  6EDA               	movwf	fsr2h,c
  5643  0026A4  0E00               	movlw	0
  5644  0026A6  6EDF               	movwf	indf2,c
  5645  0026A8  4A25               	infsnz	fat_format@cntr,f,c
  5646  0026AA  2A26               	incf	fat_format@cntr+1,f,c
  5647  0026AC  D7F1               	goto	l12197
  5648  0026AE                     u9560:
  5649                           
  5650                           ;fat16.c: 997: };fat16.c: 998: for(cntr=19; cntr<=21; ++cntr)
  5651  0026AE  0E00               	movlw	0
  5652  0026B0  6E26               	movwf	fat_format@cntr+1,c
  5653  0026B2  0E13               	movlw	19
  5654  0026B4  6E25               	movwf	fat_format@cntr,c
  5655  0026B6                     l12209:
  5656  0026B6  5026               	movf	fat_format@cntr+1,w,c
  5657  0026B8  E111               	bnz	l12219
  5658  0026BA  0E16               	movlw	22
  5659  0026BC  5C25               	subwf	fat_format@cntr,w,c
  5660  0026BE  B0D8               	btfsc	status,0,c
  5661  0026C0  D00D               	goto	u9580
  5662                           
  5663                           ;fat16.c: 999: {;fat16.c: 1000: flash_page_write(cntr, buffer);
  5664  0026C2  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5665  0026C6  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5666  0026CA  0EB2               	movlw	low _buffer
  5667  0026CC  6E22               	movwf	flash_page_write@data,c
  5668  0026CE  0E02               	movlw	high _buffer
  5669  0026D0  6E23               	movwf	flash_page_write@data+1,c
  5670  0026D2  EC24  F038         	call	_flash_page_write	;wreg free
  5671  0026D6  4A25               	infsnz	fat_format@cntr,f,c
  5672  0026D8  2A26               	incf	fat_format@cntr+1,f,c
  5673  0026DA  D7ED               	goto	l12209
  5674  0026DC                     u9580:
  5675  0026DC                     l12219:
  5676                           
  5677                           ;fat16.c: 1001: };fat16.c: 1004: for(cntr=0; cntr<512; ++cntr)
  5678  0026DC  0E00               	movlw	0
  5679  0026DE  6E26               	movwf	fat_format@cntr+1,c
  5680  0026E0  0E00               	movlw	0
  5681  0026E2  6E25               	movwf	fat_format@cntr,c
  5682  0026E4                     l12221:
  5683  0026E4  0E02               	movlw	2
  5684  0026E6  5C26               	subwf	fat_format@cntr+1,w,c
  5685  0026E8  B0D8               	btfsc	status,0,c
  5686  0026EA  D010               	goto	u9600
  5687                           
  5688                           ;fat16.c: 1005: {;fat16.c: 1006: buffer[cntr] = _get_data(cntr);
  5689  0026EC  0EB2               	movlw	low _buffer
  5690  0026EE  2425               	addwf	fat_format@cntr,w,c
  5691  0026F0  6ED9               	movwf	fsr2l,c
  5692  0026F2  0E02               	movlw	high _buffer
  5693  0026F4  2026               	addwfc	fat_format@cntr+1,w,c
  5694  0026F6  6EDA               	movwf	fsr2h,c
  5695  0026F8  C025  F001         	movff	fat_format@cntr,__get_data@idx
  5696  0026FC  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  5697  002700  EC6E  F03B         	call	__get_data	;wreg free
  5698  002704  6EDF               	movwf	indf2,c
  5699  002706  4A25               	infsnz	fat_format@cntr,f,c
  5700  002708  2A26               	incf	fat_format@cntr+1,f,c
  5701  00270A  D7EC               	goto	l12221
  5702  00270C                     u9600:
  5703                           
  5704                           ;fat16.c: 1007: };fat16.c: 1008: flash_page_write(22, buffer);
  5705  00270C  0E00               	movlw	0
  5706  00270E  6E21               	movwf	flash_page_write@page+1,c
  5707  002710  0E16               	movlw	22
  5708  002712  6E20               	movwf	flash_page_write@page,c
  5709  002714  0EB2               	movlw	low _buffer
  5710  002716  6E22               	movwf	flash_page_write@data,c
  5711  002718  0E02               	movlw	high _buffer
  5712  00271A  6E23               	movwf	flash_page_write@data+1,c
  5713  00271C  EC24  F038         	call	_flash_page_write	;wreg free
  5714  002720  0012               	return		;funcret
  5715  002722                     __end_of_fat_format:
  5716                           	opt stack 0
  5717                           tblptru	equ	0xFF8
  5718                           tblptrh	equ	0xFF7
  5719                           tblptrl	equ	0xFF6
  5720                           tablat	equ	0xFF5
  5721                           intcon	equ	0xFF2
  5722                           intcon3	equ	0xFF0
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           postdec1	equ	0xFE5
  5726                           plusw1	equ	0xFE3
  5727                           fsr1h	equ	0xFE2
  5728                           fsr1l	equ	0xFE1
  5729                           indf2	equ	0xFDF
  5730                           postinc2	equ	0xFDE
  5731                           plusw2	equ	0xFDB
  5732                           fsr2h	equ	0xFDA
  5733                           fsr2l	equ	0xFD9
  5734                           status	equ	0xFD8
  5735                           
  5736 ;; *************** function __get_root *****************
  5737 ;; Defined at:
  5738 ;;		line 837 in file "fat16.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  idx             2    0[COMRAM] unsigned int 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      unsigned char 
  5745 ;; Registers used:
  5746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5756 ;;Total ram usage:        6 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_fat_format
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text22
  5766  003058                     __ptext22:
  5767                           	opt stack 0
  5768  003058                     __get_root:
  5769                           	opt stack 27
  5770                           
  5771                           ;fat16.c: 839: if (idx < 0x20)
  5772                           
  5773                           ;incstack = 0
  5774  003058  5002               	movf	__get_root@idx+1,w,c
  5775  00305A  E11D               	bnz	l11525
  5776  00305C  0E20               	movlw	32
  5777  00305E  5C01               	subwf	__get_root@idx,w,c
  5778  003060  B0D8               	btfsc	status,0,c
  5779  003062  D019               	goto	l1961
  5780                           
  5781                           ;fat16.c: 840: {;fat16.c: 841: if (idx < 11)
  5782  003064  5002               	movf	__get_root@idx+1,w,c
  5783  003066  E110               	bnz	l11519
  5784  003068  0E0B               	movlw	11
  5785  00306A  5C01               	subwf	__get_root@idx,w,c
  5786  00306C  B0D8               	btfsc	status,0,c
  5787  00306E  D00C               	goto	l1959
  5788                           
  5789                           ;fat16.c: 842: {;fat16.c: 843: return "SolarChargr"[idx];
  5790  003070  0EDC               	movlw	low STR_9
  5791  003072  2401               	addwf	__get_root@idx,w,c
  5792  003074  6EF6               	movwf	tblptrl,c
  5793  003076  0E8F               	movlw	high STR_9
  5794  003078  2002               	addwfc	__get_root@idx+1,w,c
  5795  00307A  6EF7               	movwf	tblptrh,c
  5796  00307C                     	if	1	;There are 3 active tblptr bytes
  5797  00307C  6AF8               	clrf	tblptru,c
  5798  00307E  0E00               	movlw	low (__mediumconst shr (0+16))
  5799  003080  22F8               	addwfc	tblptru,f,c
  5800  003082                     	endif
  5801  003082  0008               	tblrd		*
  5802  003084  50F5               	movf	tablat,w,c
  5803  003086  0012               	return	
  5804  003088                     l1959:
  5805  003088                     l11519:
  5806                           
  5807                           ;fat16.c: 844: };fat16.c: 845: if(idx==11)
  5808  003088  0E0B               	movlw	11
  5809  00308A  1801               	xorwf	__get_root@idx,w,c
  5810  00308C  1002               	iorwf	__get_root@idx+1,w,c
  5811  00308E  A4D8               	btfss	status,2,c
  5812  003090  D002               	goto	l1961
  5813                           
  5814                           ;fat16.c: 846: {;fat16.c: 847: return 0x08;
  5815  003092  0E08               	movlw	8
  5816  003094  0012               	return	
  5817  003096                     l1961:
  5818  003096                     l11525:
  5819                           
  5820                           ;fat16.c: 848: };fat16.c: 849: };fat16.c: 850: if (idx < 0x40)
  5821  003096  5002               	movf	__get_root@idx+1,w,c
  5822  003098  E103               	bnz	u8821
  5823  00309A  0E40               	movlw	64
  5824  00309C  5C01               	subwf	__get_root@idx,w,c
  5825  00309E  B0D8               	btfsc	status,0,c
  5826  0030A0                     u8821:
  5827  0030A0  D0A4               	goto	l1987
  5828                           
  5829                           ;fat16.c: 851: {;fat16.c: 852: idx -= 0x20;
  5830  0030A2  0E20               	movlw	32
  5831  0030A4  5E01               	subwf	__get_root@idx,f,c
  5832  0030A6  0E00               	movlw	0
  5833  0030A8  5A02               	subwfb	__get_root@idx+1,f,c
  5834                           
  5835                           ;fat16.c: 853: if (idx < 0+8)
  5836  0030AA  5002               	movf	__get_root@idx+1,w,c
  5837  0030AC  E110               	bnz	l11533
  5838  0030AE  0E08               	movlw	8
  5839  0030B0  5C01               	subwf	__get_root@idx,w,c
  5840  0030B2  B0D8               	btfsc	status,0,c
  5841  0030B4  D00C               	goto	l1963
  5842                           
  5843                           ;fat16.c: 854: {;fat16.c: 855: return "FILE    "[idx];
  5844  0030B6  0EE8               	movlw	low STR_10
  5845  0030B8  2401               	addwf	__get_root@idx,w,c
  5846  0030BA  6EF6               	movwf	tblptrl,c
  5847  0030BC  0E8F               	movlw	high STR_10
  5848  0030BE  2002               	addwfc	__get_root@idx+1,w,c
  5849  0030C0  6EF7               	movwf	tblptrh,c
  5850  0030C2                     	if	1	;There are 3 active tblptr bytes
  5851  0030C2  6AF8               	clrf	tblptru,c
  5852  0030C4  0E00               	movlw	low (__mediumconst shr (0+16))
  5853  0030C6  22F8               	addwfc	tblptru,f,c
  5854  0030C8                     	endif
  5855  0030C8  0008               	tblrd		*
  5856  0030CA  50F5               	movf	tablat,w,c
  5857  0030CC  0012               	return	
  5858  0030CE                     l1963:
  5859  0030CE                     l11533:
  5860                           
  5861                           ;fat16.c: 856: };fat16.c: 857: if (idx < 11)
  5862  0030CE  5002               	movf	__get_root@idx+1,w,c
  5863  0030D0  E146               	bnz	l11625
  5864  0030D2  0E0B               	movlw	11
  5865  0030D4  5C01               	subwf	__get_root@idx,w,c
  5866  0030D6  B0D8               	btfsc	status,0,c
  5867  0030D8  D042               	goto	l1965
  5868                           
  5869                           ;fat16.c: 858: {;fat16.c: 859: return "TXT"[idx-8];
  5870  0030DA  0EF8               	movlw	248
  5871  0030DC  6E03               	movwf	??__get_root& (0+255),c
  5872  0030DE  0EFF               	movlw	255
  5873  0030E0  6E04               	movwf	(??__get_root+1)& (0+255),c
  5874  0030E2  C001  F005         	movff	__get_root@idx,??__get_root+2
  5875  0030E6  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  5876  0030EA  5003               	movf	??__get_root,w,c
  5877  0030EC  2605               	addwf	??__get_root+2,f,c
  5878  0030EE  5004               	movf	??__get_root+1,w,c
  5879  0030F0  2206               	addwfc	??__get_root+3,f,c
  5880  0030F2  0EFA               	movlw	low STR_11
  5881  0030F4  2405               	addwf	??__get_root+2,w,c
  5882  0030F6  6EF6               	movwf	tblptrl,c
  5883  0030F8  0E8F               	movlw	high STR_11
  5884  0030FA  2006               	addwfc	??__get_root+3,w,c
  5885  0030FC  6EF7               	movwf	tblptrh,c
  5886  0030FE                     	if	1	;There are 3 active tblptr bytes
  5887  0030FE  6AF8               	clrf	tblptru,c
  5888  003100  0E00               	movlw	low (__mediumconst shr (0+16))
  5889  003102  22F8               	addwfc	tblptru,f,c
  5890  003104                     	endif
  5891  003104  0008               	tblrd		*
  5892  003106  50F5               	movf	tablat,w,c
  5893  003108  0012               	return	
  5894  00310A                     
  5895                           ;fat16.c: 864: return 0x20;
  5896  00310A  0E20               	movlw	32
  5897  00310C  0012               	return	
  5898  00310E                     
  5899                           ;fat16.c: 866: return 0x06;
  5900  00310E  0E06               	movlw	6
  5901  003110  0012               	return	
  5902  003112                     
  5903                           ;fat16.c: 868: return 0x28;
  5904  003112  0E28               	movlw	40
  5905  003114  0012               	return	
  5906  003116                     
  5907                           ;fat16.c: 870: return 0x78;
  5908  003116  0E78               	movlw	120
  5909  003118  0012               	return	
  5910  00311A                     
  5911                           ;fat16.c: 872: return 0xDE;
  5912  00311A  0EDE               	movlw	222
  5913  00311C  0012               	return	
  5914  00311E                     
  5915                           ;fat16.c: 874: return 0x38;
  5916  00311E  0E38               	movlw	56
  5917  003120  0012               	return	
  5918  003122                     
  5919                           ;fat16.c: 876: return 0x5F;
  5920  003122  0E5F               	movlw	95
  5921  003124  0012               	return	
  5922  003126                     
  5923                           ;fat16.c: 878: return 0x4B;
  5924  003126  0E4B               	movlw	75
  5925  003128  0012               	return	
  5926  00312A                     
  5927                           ;fat16.c: 880: return 0x00;
  5928  00312A  0E00               	movlw	0
  5929  00312C  0012               	return	
  5930  00312E                     
  5931                           ;fat16.c: 882: return 0x00;
  5932  00312E  0E00               	movlw	0
  5933  003130  0012               	return	
  5934  003132                     
  5935                           ;fat16.c: 884: return 0x04;
  5936  003132  0E04               	movlw	4
  5937  003134  0012               	return	
  5938  003136                     
  5939                           ;fat16.c: 886: return 0x77;
  5940  003136  0E77               	movlw	119
  5941  003138  0012               	return	
  5942  00313A                     
  5943                           ;fat16.c: 888: return 0xDE;
  5944  00313A  0EDE               	movlw	222
  5945  00313C  0012               	return	
  5946  00313E                     
  5947                           ;fat16.c: 890: return 0x38;
  5948  00313E  0E38               	movlw	56
  5949  003140  0012               	return	
  5950  003142                     
  5951                           ;fat16.c: 892: return ((unsigned char)((((uint16_t)2))&0xFF));
  5952  003142  0E02               	movlw	2
  5953  003144  0012               	return	
  5954  003146                     
  5955                           ;fat16.c: 894: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  5956  003146  0E00               	movlw	0
  5957  003148  0012               	return	
  5958  00314A                     
  5959                           ;fat16.c: 896: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  5960  00314A  0E0C               	movlw	12
  5961  00314C  0012               	return	
  5962  00314E                     
  5963                           ;fat16.c: 899: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  5964  00314E  0E00               	movlw	0
  5965  003150  0012               	return	
  5966  003152                     
  5967                           ;fat16.c: 902: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  5968  003152  0E00               	movlw	0
  5969  003154  0012               	return	
  5970  003156                     
  5971                           ;fat16.c: 905: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  5972  003156  0E00               	movlw	0
  5973  003158  0012               	return	
  5974  00315A                     
  5975                           ;fat16.c: 908: return 0x00;
  5976  00315A  0E00               	movlw	0
  5977  00315C  0012               	return	
  5978  00315E                     l1965:
  5979  00315E                     l11625:
  5980  00315E  C001  F003         	movff	__get_root@idx,??__get_root
  5981  003162  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  5982                           
  5983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5984                           ; Switch size 1, requested type "space"
  5985                           ; Number of cases is 1, Range of values is 0 to 0
  5986                           ; switch strategies available:
  5987                           ; Name         Instructions Cycles
  5988                           ; simple_byte            4     3 (average)
  5989                           ;	Chosen strategy is simple_byte
  5990  003166  5004               	movf	??__get_root+1,w,c
  5991  003168  0A00               	xorlw	0	; case 0
  5992  00316A  A4D8               	btfss	status,2,c
  5993  00316C  D7F6               	goto	l1986
  5994                           
  5995                           ; Switch size 1, requested type "space"
  5996                           ; Number of cases is 20, Range of values is 11 to 31
  5997                           ; switch strategies available:
  5998                           ; Name         Instructions Cycles
  5999                           ; simple_byte           61    31 (average)
  6000                           ;	Chosen strategy is simple_byte
  6001  00316E  5003               	movf	??__get_root,w,c
  6002  003170  0A0B               	xorlw	11	; case 11
  6003  003172  B4D8               	btfsc	status,2,c
  6004  003174  D7CA               	goto	l1966
  6005  003176  0A06               	xorlw	6	; case 13
  6006  003178  B4D8               	btfsc	status,2,c
  6007  00317A  D7C9               	goto	l1967
  6008  00317C  0A03               	xorlw	3	; case 14
  6009  00317E  B4D8               	btfsc	status,2,c
  6010  003180  D7C8               	goto	l1968
  6011  003182  0A01               	xorlw	1	; case 15
  6012  003184  B4D8               	btfsc	status,2,c
  6013  003186  D7C7               	goto	l1969
  6014  003188  0A1F               	xorlw	31	; case 16
  6015  00318A  B4D8               	btfsc	status,2,c
  6016  00318C  D7C6               	goto	l1970
  6017  00318E  0A01               	xorlw	1	; case 17
  6018  003190  B4D8               	btfsc	status,2,c
  6019  003192  D7C5               	goto	l1971
  6020  003194  0A03               	xorlw	3	; case 18
  6021  003196  B4D8               	btfsc	status,2,c
  6022  003198  D7C4               	goto	l1972
  6023  00319A  0A01               	xorlw	1	; case 19
  6024  00319C  B4D8               	btfsc	status,2,c
  6025  00319E  D7C3               	goto	l1973
  6026  0031A0  0A07               	xorlw	7	; case 20
  6027  0031A2  B4D8               	btfsc	status,2,c
  6028  0031A4  D7C2               	goto	l1974
  6029  0031A6  0A01               	xorlw	1	; case 21
  6030  0031A8  B4D8               	btfsc	status,2,c
  6031  0031AA  D7C1               	goto	l1975
  6032  0031AC  0A03               	xorlw	3	; case 22
  6033  0031AE  B4D8               	btfsc	status,2,c
  6034  0031B0  D7C0               	goto	l1976
  6035  0031B2  0A01               	xorlw	1	; case 23
  6036  0031B4  B4D8               	btfsc	status,2,c
  6037  0031B6  D7BF               	goto	l1977
  6038  0031B8  0A0F               	xorlw	15	; case 24
  6039  0031BA  B4D8               	btfsc	status,2,c
  6040  0031BC  D7BE               	goto	l1978
  6041  0031BE  0A01               	xorlw	1	; case 25
  6042  0031C0  B4D8               	btfsc	status,2,c
  6043  0031C2  D7BD               	goto	l1979
  6044  0031C4  0A03               	xorlw	3	; case 26
  6045  0031C6  B4D8               	btfsc	status,2,c
  6046  0031C8  D7BC               	goto	l1980
  6047  0031CA  0A01               	xorlw	1	; case 27
  6048  0031CC  B4D8               	btfsc	status,2,c
  6049  0031CE  D7BB               	goto	l1981
  6050  0031D0  0A07               	xorlw	7	; case 28
  6051  0031D2  B4D8               	btfsc	status,2,c
  6052  0031D4  D7BA               	goto	l1982
  6053  0031D6  0A01               	xorlw	1	; case 29
  6054  0031D8  B4D8               	btfsc	status,2,c
  6055  0031DA  D7B9               	goto	l1983
  6056  0031DC  0A03               	xorlw	3	; case 30
  6057  0031DE  B4D8               	btfsc	status,2,c
  6058  0031E0  D7B8               	goto	l1984
  6059  0031E2  0A01               	xorlw	1	; case 31
  6060  0031E4  B4D8               	btfsc	status,2,c
  6061  0031E6  D7B7               	goto	l1985
  6062  0031E8  D7B8               	goto	l1986
  6063  0031EA                     l1987:
  6064                           
  6065                           ;fat16.c: 910: };fat16.c: 911: return 0X00;
  6066  0031EA  0E00               	movlw	0
  6067  0031EC  0012               	return	
  6068  0031EE                     __end_of__get_root:
  6069                           	opt stack 0
  6070                           tblptru	equ	0xFF8
  6071                           tblptrh	equ	0xFF7
  6072                           tblptrl	equ	0xFF6
  6073                           tablat	equ	0xFF5
  6074                           intcon	equ	0xFF2
  6075                           intcon3	equ	0xFF0
  6076                           postinc0	equ	0xFEE
  6077                           wreg	equ	0xFE8
  6078                           postdec1	equ	0xFE5
  6079                           plusw1	equ	0xFE3
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           indf2	equ	0xFDF
  6083                           postinc2	equ	0xFDE
  6084                           plusw2	equ	0xFDB
  6085                           fsr2h	equ	0xFDA
  6086                           fsr2l	equ	0xFD9
  6087                           status	equ	0xFD8
  6088                           
  6089 ;; *************** function __get_mbr *****************
  6090 ;; Defined at:
  6091 ;;		line 625 in file "fat16.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  idx             2    0[COMRAM] unsigned int 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      unsigned char 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;Total ram usage:        4 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_fat_get_format_status
  6115 ;;		_fat_format
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text23
  6120  0049AC                     __ptext23:
  6121                           	opt stack 0
  6122  0049AC                     __get_mbr:
  6123                           	opt stack 27
  6124                           
  6125                           ;fat16.c: 627: switch (idx)
  6126                           
  6127                           ;incstack = 0
  6128  0049AC  D026               	goto	l1868
  6129  0049AE                     
  6130                           ;fat16.c: 638: return 0x80;
  6131  0049AE  0E80               	movlw	128
  6132  0049B0  0012               	return	
  6133  0049B2                     
  6134                           ;fat16.c: 640: return ((1%63)+1);
  6135  0049B2  0E02               	movlw	2
  6136  0049B4  0012               	return	
  6137  0049B6                     
  6138                           ;fat16.c: 643: return (((1/(16*63)) & 0b00000011)<<6) | (((1/63)%16) & 0b00111111);
  6139  0049B6  0E00               	movlw	0
  6140  0049B8  0012               	return	
  6141  0049BA                     
  6142                           ;fat16.c: 646: return (1/(16*63)) >> 2;
  6143  0049BA  0E00               	movlw	0
  6144  0049BC  0012               	return	
  6145  0049BE                     
  6146                           ;fat16.c: 649: return 0x04;
  6147  0049BE  0E04               	movlw	4
  6148  0049C0  0012               	return	
  6149  0049C2                     
  6150                           ;fat16.c: 652: return (((1+5000-1)%63)+1);
  6151  0049C2  0E18               	movlw	24
  6152  0049C4  0012               	return	
  6153  0049C6                     
  6154                           ;fat16.c: 655: return ((((1+5000-1)/(16*63)) & 0b00000011) << 6) | ((((1+5000-1)/63)%16)
      +                           & 0b00111111);
  6155  0049C6  0E0F               	movlw	15
  6156  0049C8  0012               	return	
  6157  0049CA                     
  6158                           ;fat16.c: 658: return ((1+5000-1)/(16*63)) >> 2;
  6159  0049CA  0E01               	movlw	1
  6160  0049CC  0012               	return	
  6161  0049CE                     
  6162                           ;fat16.c: 661: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6163  0049CE  0E01               	movlw	1
  6164  0049D0  0012               	return	
  6165  0049D2                     
  6166                           ;fat16.c: 663: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6167  0049D2  0E00               	movlw	0
  6168  0049D4  0012               	return	
  6169  0049D6                     
  6170                           ;fat16.c: 665: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6171  0049D6  0E00               	movlw	0
  6172  0049D8  0012               	return	
  6173  0049DA                     
  6174                           ;fat16.c: 667: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6175  0049DA  0E00               	movlw	0
  6176  0049DC  0012               	return	
  6177  0049DE                     
  6178                           ;fat16.c: 669: return ((unsigned char)((((unsigned short)((((uint32_t)5000))&0xFFFF)))&0
      +                          xFF));
  6179  0049DE  0E88               	movlw	136
  6180  0049E0  0012               	return	
  6181  0049E2                     
  6182                           ;fat16.c: 671: return ((unsigned char)(((((unsigned short)((((uint32_t)5000))&0xFFFF)))>
      +                          >8)&0xFF));
  6183  0049E2  0E13               	movlw	19
  6184  0049E4  0012               	return	
  6185  0049E6                     
  6186                           ;fat16.c: 673: return ((unsigned char)((((unsigned short)(((((uint32_t)5000))>>16)&0xFFF
      +                          F)))&0xFF));
  6187  0049E6  0E00               	movlw	0
  6188  0049E8  0012               	return	
  6189  0049EA                     
  6190                           ;fat16.c: 675: return ((unsigned char)(((((unsigned short)(((((uint32_t)5000))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6191  0049EA  0E00               	movlw	0
  6192  0049EC  0012               	return	
  6193  0049EE                     
  6194                           ;fat16.c: 677: return 0X55AA >> 8;
  6195  0049EE  0E55               	movlw	85
  6196  0049F0  0012               	return	
  6197  0049F2                     
  6198                           ;fat16.c: 679: return 0X55AA & 0XFF;
  6199  0049F2  0EAA               	movlw	170
  6200  0049F4  0012               	return	
  6201  0049F6                     
  6202                           ;fat16.c: 681: return 0X00;
  6203  0049F6  0E00               	movlw	0
  6204                           
  6205                           ;fat16.c: 682: }
  6206  0049F8  0012               	return	
  6207  0049FA                     l1868:
  6208  0049FA  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6209  0049FE  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6210                           
  6211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6212                           ; Switch size 1, requested type "space"
  6213                           ; Number of cases is 1, Range of values is 1 to 1
  6214                           ; switch strategies available:
  6215                           ; Name         Instructions Cycles
  6216                           ; simple_byte            4     3 (average)
  6217                           ;	Chosen strategy is simple_byte
  6218  004A02  5004               	movf	??__get_mbr+1,w,c
  6219  004A04  0A01               	xorlw	1	; case 1
  6220  004A06  A4D8               	btfss	status,2,c
  6221  004A08  D7F6               	goto	l1888
  6222                           
  6223                           ; Switch size 1, requested type "space"
  6224                           ; Number of cases is 18, Range of values is 190 to 255
  6225                           ; switch strategies available:
  6226                           ; Name         Instructions Cycles
  6227                           ; simple_byte           55    28 (average)
  6228                           ;	Chosen strategy is simple_byte
  6229  004A0A  5003               	movf	??__get_mbr,w,c
  6230  004A0C  0ABE               	xorlw	190	; case 190
  6231  004A0E  B4D8               	btfsc	status,2,c
  6232  004A10  D7CE               	goto	l1869
  6233  004A12  0A01               	xorlw	1	; case 191
  6234  004A14  B4D8               	btfsc	status,2,c
  6235  004A16  D7CD               	goto	l1871
  6236  004A18  0A7F               	xorlw	127	; case 192
  6237  004A1A  B4D8               	btfsc	status,2,c
  6238  004A1C  D7CC               	goto	l1872
  6239  004A1E  0A01               	xorlw	1	; case 193
  6240  004A20  B4D8               	btfsc	status,2,c
  6241  004A22  D7CB               	goto	l1873
  6242  004A24  0A03               	xorlw	3	; case 194
  6243  004A26  B4D8               	btfsc	status,2,c
  6244  004A28  D7CA               	goto	l1874
  6245  004A2A  0A01               	xorlw	1	; case 195
  6246  004A2C  B4D8               	btfsc	status,2,c
  6247  004A2E  D7C9               	goto	l1875
  6248  004A30  0A07               	xorlw	7	; case 196
  6249  004A32  B4D8               	btfsc	status,2,c
  6250  004A34  D7C8               	goto	l1876
  6251  004A36  0A01               	xorlw	1	; case 197
  6252  004A38  B4D8               	btfsc	status,2,c
  6253  004A3A  D7C7               	goto	l1877
  6254  004A3C  0A03               	xorlw	3	; case 198
  6255  004A3E  B4D8               	btfsc	status,2,c
  6256  004A40  D7C6               	goto	l1878
  6257  004A42  0A01               	xorlw	1	; case 199
  6258  004A44  B4D8               	btfsc	status,2,c
  6259  004A46  D7C5               	goto	l1879
  6260  004A48  0A0F               	xorlw	15	; case 200
  6261  004A4A  B4D8               	btfsc	status,2,c
  6262  004A4C  D7C4               	goto	l1880
  6263  004A4E  0A01               	xorlw	1	; case 201
  6264  004A50  B4D8               	btfsc	status,2,c
  6265  004A52  D7C3               	goto	l1881
  6266  004A54  0A03               	xorlw	3	; case 202
  6267  004A56  B4D8               	btfsc	status,2,c
  6268  004A58  D7C2               	goto	l1882
  6269  004A5A  0A01               	xorlw	1	; case 203
  6270  004A5C  B4D8               	btfsc	status,2,c
  6271  004A5E  D7C1               	goto	l1883
  6272  004A60  0A07               	xorlw	7	; case 204
  6273  004A62  B4D8               	btfsc	status,2,c
  6274  004A64  D7C0               	goto	l1884
  6275  004A66  0A01               	xorlw	1	; case 205
  6276  004A68  B4D8               	btfsc	status,2,c
  6277  004A6A  D7BF               	goto	l1885
  6278  004A6C  0A33               	xorlw	51	; case 254
  6279  004A6E  B4D8               	btfsc	status,2,c
  6280  004A70  D7BE               	goto	l1886
  6281  004A72  0A01               	xorlw	1	; case 255
  6282  004A74  B4D8               	btfsc	status,2,c
  6283  004A76  D7BD               	goto	l1887
  6284  004A78  D7BE               	goto	l1888
  6285  004A7A                     __end_of__get_mbr:
  6286                           	opt stack 0
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           intcon	equ	0xFF2
  6292                           intcon3	equ	0xFF0
  6293                           postinc0	equ	0xFEE
  6294                           wreg	equ	0xFE8
  6295                           postdec1	equ	0xFE5
  6296                           plusw1	equ	0xFE3
  6297                           fsr1h	equ	0xFE2
  6298                           fsr1l	equ	0xFE1
  6299                           indf2	equ	0xFDF
  6300                           postinc2	equ	0xFDE
  6301                           plusw2	equ	0xFDB
  6302                           fsr2h	equ	0xFDA
  6303                           fsr2l	equ	0xFD9
  6304                           status	equ	0xFD8
  6305                           
  6306 ;; *************** function __get_fbr *****************
  6307 ;; Defined at:
  6308 ;;		line 685 in file "fat16.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  idx             2    0[COMRAM] unsigned int 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      unsigned char 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;Total ram usage:        4 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_fat_get_format_status
  6332 ;;		_fat_format
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text24
  6337  001A08                     __ptext24:
  6338                           	opt stack 0
  6339  001A08                     __get_fbr:
  6340                           	opt stack 27
  6341                           
  6342                           ;fat16.c: 687: switch (idx)
  6343                           
  6344                           ;incstack = 0
  6345  001A08  D093               	goto	l1892
  6346  001A0A                     
  6347                           ;fat16.c: 690: return 0xEB;
  6348  001A0A  0EEB               	movlw	235
  6349  001A0C  0012               	return	
  6350  001A0E                     
  6351                           ;fat16.c: 692: return 0x3C;
  6352  001A0E  0E3C               	movlw	60
  6353  001A10  0012               	return	
  6354  001A12                     
  6355                           ;fat16.c: 694: return 0x90;
  6356  001A12  0E90               	movlw	144
  6357  001A14  0012               	return	
  6358  001A16                     
  6359                           ;fat16.c: 696: return "MSDOS5.0"[0];
  6360  001A16  0EF1               	movlw	low STR_1
  6361  001A18  6EF6               	movwf	tblptrl,c
  6362  001A1A                     	if	1	;There is more than 1 active tblptr byte
  6363  001A1A  0E8F               	movlw	high STR_1
  6364  001A1C  6EF7               	movwf	tblptrh,c
  6365  001A1E                     	endif
  6366  001A1E                     	if	1	;There are 3 active tblptr bytes
  6367  001A1E  0E00               	movlw	low (STR_1 shr (0+16))
  6368  001A20  6EF8               	movwf	tblptru,c
  6369  001A22                     	endif
  6370  001A22  0008               	tblrd		*
  6371  001A24  50F5               	movf	tablat,w,c
  6372  001A26  0012               	return	
  6373  001A28                     
  6374                           ;fat16.c: 698: return "MSDOS5.0"[1];
  6375  001A28  0EF2               	movlw	low (STR_1+1)
  6376  001A2A  6EF6               	movwf	tblptrl,c
  6377  001A2C  0E8F               	movlw	high (STR_1+1)
  6378  001A2E  6EF7               	movwf	tblptrh,c
  6379  001A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6380  001A30  6AF8               	clrf	tblptru,c
  6381  001A32                     	endif
  6382  001A32                     	if	0	;tblptru may be non-zero
  6383  001A32                     	endif
  6384  001A32  0008               	tblrd		*
  6385  001A34  50F5               	movf	tablat,w,c
  6386  001A36  0012               	return	
  6387  001A38                     
  6388                           ;fat16.c: 700: return "MSDOS5.0"[2];
  6389  001A38  0EF3               	movlw	low (STR_1+2)
  6390  001A3A  6EF6               	movwf	tblptrl,c
  6391  001A3C  0E8F               	movlw	high (STR_1+2)
  6392  001A3E  6EF7               	movwf	tblptrh,c
  6393  001A40                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6394  001A40  6AF8               	clrf	tblptru,c
  6395  001A42                     	endif
  6396  001A42                     	if	0	;tblptru may be non-zero
  6397  001A42                     	endif
  6398  001A42  0008               	tblrd		*
  6399  001A44  50F5               	movf	tablat,w,c
  6400  001A46  0012               	return	
  6401  001A48                     
  6402                           ;fat16.c: 702: return "MSDOS5.0"[3];
  6403  001A48  0EF4               	movlw	low (STR_1+3)
  6404  001A4A  6EF6               	movwf	tblptrl,c
  6405  001A4C  0E8F               	movlw	high (STR_1+3)
  6406  001A4E  6EF7               	movwf	tblptrh,c
  6407  001A50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6408  001A50  6AF8               	clrf	tblptru,c
  6409  001A52                     	endif
  6410  001A52                     	if	0	;tblptru may be non-zero
  6411  001A52                     	endif
  6412  001A52  0008               	tblrd		*
  6413  001A54  50F5               	movf	tablat,w,c
  6414  001A56  0012               	return	
  6415  001A58                     
  6416                           ;fat16.c: 704: return "MSDOS5.0"[4];
  6417  001A58  0EF5               	movlw	low (STR_1+4)
  6418  001A5A  6EF6               	movwf	tblptrl,c
  6419  001A5C  0E8F               	movlw	high (STR_1+4)
  6420  001A5E  6EF7               	movwf	tblptrh,c
  6421  001A60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6422  001A60  6AF8               	clrf	tblptru,c
  6423  001A62                     	endif
  6424  001A62                     	if	0	;tblptru may be non-zero
  6425  001A62                     	endif
  6426  001A62  0008               	tblrd		*
  6427  001A64  50F5               	movf	tablat,w,c
  6428  001A66  0012               	return	
  6429  001A68                     
  6430                           ;fat16.c: 706: return "MSDOS5.0"[5];
  6431  001A68  0EF6               	movlw	low (STR_1+5)
  6432  001A6A  6EF6               	movwf	tblptrl,c
  6433  001A6C  0E8F               	movlw	high (STR_1+5)
  6434  001A6E  6EF7               	movwf	tblptrh,c
  6435  001A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6436  001A70  6AF8               	clrf	tblptru,c
  6437  001A72                     	endif
  6438  001A72                     	if	0	;tblptru may be non-zero
  6439  001A72                     	endif
  6440  001A72  0008               	tblrd		*
  6441  001A74  50F5               	movf	tablat,w,c
  6442  001A76  0012               	return	
  6443  001A78                     
  6444                           ;fat16.c: 708: return "MSDOS5.0"[6];
  6445  001A78  0EF7               	movlw	low (STR_1+6)
  6446  001A7A  6EF6               	movwf	tblptrl,c
  6447  001A7C  0E8F               	movlw	high (STR_1+6)
  6448  001A7E  6EF7               	movwf	tblptrh,c
  6449  001A80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6450  001A80  6AF8               	clrf	tblptru,c
  6451  001A82                     	endif
  6452  001A82                     	if	0	;tblptru may be non-zero
  6453  001A82                     	endif
  6454  001A82  0008               	tblrd		*
  6455  001A84  50F5               	movf	tablat,w,c
  6456  001A86  0012               	return	
  6457  001A88                     
  6458                           ;fat16.c: 710: return "MSDOS5.0"[7];
  6459  001A88  0EF8               	movlw	low (STR_1+7)
  6460  001A8A  6EF6               	movwf	tblptrl,c
  6461  001A8C  0E8F               	movlw	high (STR_1+7)
  6462  001A8E  6EF7               	movwf	tblptrh,c
  6463  001A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6464  001A90  6AF8               	clrf	tblptru,c
  6465  001A92                     	endif
  6466  001A92                     	if	0	;tblptru may be non-zero
  6467  001A92                     	endif
  6468  001A92  0008               	tblrd		*
  6469  001A94  50F5               	movf	tablat,w,c
  6470  001A96  0012               	return	
  6471  001A98                     
  6472                           ;fat16.c: 712: return ((unsigned char)((((uint16_t)512))&0xFF));
  6473  001A98  0E00               	movlw	0
  6474  001A9A  0012               	return	
  6475  001A9C                     
  6476                           ;fat16.c: 714: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  6477  001A9C  0E02               	movlw	2
  6478  001A9E  0012               	return	
  6479  001AA0                     
  6480                           ;fat16.c: 716: return 1;
  6481  001AA0  0E01               	movlw	1
  6482  001AA2  0012               	return	
  6483  001AA4                     
  6484                           ;fat16.c: 718: return ((unsigned char)((((uint16_t)1))&0xFF));
  6485  001AA4  0E01               	movlw	1
  6486  001AA6  0012               	return	
  6487  001AA8                     
  6488                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  6489  001AA8  0E00               	movlw	0
  6490  001AAA  0012               	return	
  6491  001AAC                     
  6492                           ;fat16.c: 724: return 1;
  6493  001AAC  0E01               	movlw	1
  6494  001AAE  0012               	return	
  6495  001AB0                     
  6496                           ;fat16.c: 726: return ((unsigned char)((((uint16_t)64))&0xFF));
  6497  001AB0  0E40               	movlw	64
  6498  001AB2  0012               	return	
  6499  001AB4                     
  6500                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  6501  001AB4  0E00               	movlw	0
  6502  001AB6  0012               	return	
  6503  001AB8                     
  6504                           ;fat16.c: 732: return ((unsigned char)((((uint16_t)4114))&0xFF));
  6505  001AB8  0E12               	movlw	18
  6506  001ABA  0012               	return	
  6507  001ABC                     
  6508                           ;fat16.c: 735: return ((unsigned char)(((((uint16_t)4114))>>8)&0xFF));
  6509  001ABC  0E10               	movlw	16
  6510  001ABE  0012               	return	
  6511  001AC0                     
  6512                           ;fat16.c: 738: return 0XF8;
  6513  001AC0  0EF8               	movlw	248
  6514  001AC2  0012               	return	
  6515  001AC4                     
  6516                           ;fat16.c: 740: return ((unsigned char)((((uint16_t)16))&0xFF));
  6517  001AC4  0E10               	movlw	16
  6518  001AC6  0012               	return	
  6519  001AC8                     
  6520                           ;fat16.c: 743: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6521  001AC8  0E00               	movlw	0
  6522  001ACA  0012               	return	
  6523  001ACC                     
  6524                           ;fat16.c: 746: return ((unsigned char)((((uint16_t)63))&0xFF));
  6525  001ACC  0E3F               	movlw	63
  6526  001ACE  0012               	return	
  6527  001AD0                     
  6528                           ;fat16.c: 749: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  6529  001AD0  0E00               	movlw	0
  6530  001AD2  0012               	return	
  6531  001AD4                     
  6532                           ;fat16.c: 752: return ((unsigned char)((((uint16_t)16))&0xFF));
  6533  001AD4  0E10               	movlw	16
  6534  001AD6  0012               	return	
  6535  001AD8                     
  6536                           ;fat16.c: 755: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6537  001AD8  0E00               	movlw	0
  6538  001ADA  0012               	return	
  6539  001ADC                     
  6540                           ;fat16.c: 758: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  6541  001ADC  0E00               	movlw	0
  6542  001ADE  0012               	return	
  6543  001AE0                     
  6544                           ;fat16.c: 761: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  6545  001AE0  0E00               	movlw	0
  6546  001AE2  0012               	return	
  6547  001AE4                     
  6548                           ;fat16.c: 764: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  6549  001AE4  0E00               	movlw	0
  6550  001AE6  0012               	return	
  6551  001AE8                     
  6552                           ;fat16.c: 767: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6553  001AE8  0E00               	movlw	0
  6554  001AEA  0012               	return	
  6555  001AEC                     
  6556                           ;fat16.c: 770: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  6557  001AEC  0E01               	movlw	1
  6558  001AEE  0012               	return	
  6559  001AF0                     
  6560                           ;fat16.c: 773: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  6561  001AF0  0E00               	movlw	0
  6562  001AF2  0012               	return	
  6563  001AF4                     
  6564                           ;fat16.c: 776: return ((unsigned char)((((unsigned short)((((uint32_t)((16*1)+1)))&0xFFF
      +                          F)))&0xFF));
  6565  001AF4  0E11               	movlw	17
  6566  001AF6  0012               	return	
  6567  001AF8                     
  6568                           ;fat16.c: 779: return ((unsigned char)(((((unsigned short)((((uint32_t)((16*1)+1)))&0xFF
      +                          FF)))>>8)&0xFF));
  6569  001AF8  0E00               	movlw	0
  6570  001AFA  0012               	return	
  6571  001AFC                     
  6572                           ;fat16.c: 782: return ((unsigned char)((((unsigned short)(((((uint32_t)((16*1)+1)))>>16)
      +                          &0xFFFF)))&0xFF));
  6573  001AFC  0E11               	movlw	17
  6574  001AFE  0012               	return	
  6575  001B00                     
  6576                           ;fat16.c: 785: return ((unsigned char)(((((unsigned short)(((((uint32_t)((16*1)+1)))>>16
      +                          )&0xFFFF)))>>8)&0xFF));
  6577  001B00  0E00               	movlw	0
  6578  001B02  0012               	return	
  6579  001B04                     
  6580                           ;fat16.c: 788: return 'F';
  6581  001B04  0E46               	movlw	70
  6582  001B06  0012               	return	
  6583  001B08                     
  6584                           ;fat16.c: 790: return 'A';
  6585  001B08  0E41               	movlw	65
  6586  001B0A  0012               	return	
  6587  001B0C                     
  6588                           ;fat16.c: 792: return 'T';
  6589  001B0C  0E54               	movlw	84
  6590  001B0E  0012               	return	
  6591  001B10                     
  6592                           ;fat16.c: 794: return '1';
  6593  001B10  0E31               	movlw	49
  6594  001B12  0012               	return	
  6595  001B14                     
  6596                           ;fat16.c: 796: return '6';
  6597  001B14  0E36               	movlw	54
  6598  001B16  0012               	return	
  6599  001B18                     
  6600                           ;fat16.c: 798: return ' ';
  6601  001B18  0E20               	movlw	32
  6602  001B1A  0012               	return	
  6603  001B1C                     
  6604                           ;fat16.c: 800: return ' ';
  6605  001B1C  0E20               	movlw	32
  6606  001B1E  0012               	return	
  6607  001B20                     
  6608                           ;fat16.c: 802: return ' ';
  6609  001B20  0E20               	movlw	32
  6610  001B22  0012               	return	
  6611  001B24                     
  6612                           ;fat16.c: 804: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  6613  001B24  0E55               	movlw	85
  6614  001B26  0012               	return	
  6615  001B28                     
  6616                           ;fat16.c: 807: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  6617  001B28  0EAA               	movlw	170
  6618  001B2A  0012               	return	
  6619  001B2C                     
  6620                           ;fat16.c: 810: return 0X00;
  6621  001B2C  0E00               	movlw	0
  6622                           
  6623                           ;fat16.c: 811: }
  6624  001B2E  0012               	return	
  6625  001B30                     l1892:
  6626  001B30  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  6627  001B34  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  6628                           
  6629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6630                           ; Switch size 1, requested type "space"
  6631                           ; Number of cases is 2, Range of values is 0 to 1
  6632                           ; switch strategies available:
  6633                           ; Name         Instructions Cycles
  6634                           ; simple_byte            7     4 (average)
  6635                           ;	Chosen strategy is simple_byte
  6636  001B38  5004               	movf	??__get_fbr+1,w,c
  6637  001B3A  0A00               	xorlw	0	; case 0
  6638  001B3C  B4D8               	btfsc	status,2,c
  6639  001B3E  D004               	goto	l14387
  6640  001B40  0A01               	xorlw	1	; case 1
  6641  001B42  B4D8               	btfsc	status,2,c
  6642  001B44  D08D               	goto	l14389
  6643  001B46  D7F2               	goto	l1942
  6644  001B48                     l14387:
  6645                           
  6646                           ; Switch size 1, requested type "space"
  6647                           ; Number of cases is 46, Range of values is 0 to 61
  6648                           ; switch strategies available:
  6649                           ; Name         Instructions Cycles
  6650                           ; simple_byte          139    70 (average)
  6651                           ;	Chosen strategy is simple_byte
  6652  001B48  5003               	movf	??__get_fbr,w,c
  6653  001B4A  0A00               	xorlw	0	; case 0
  6654  001B4C  B4D8               	btfsc	status,2,c
  6655  001B4E  D75D               	goto	l1893
  6656  001B50  0A01               	xorlw	1	; case 1
  6657  001B52  B4D8               	btfsc	status,2,c
  6658  001B54  D75C               	goto	l1895
  6659  001B56  0A03               	xorlw	3	; case 2
  6660  001B58  B4D8               	btfsc	status,2,c
  6661  001B5A  D75B               	goto	l1896
  6662  001B5C  0A01               	xorlw	1	; case 3
  6663  001B5E  B4D8               	btfsc	status,2,c
  6664  001B60  D75A               	goto	l1897
  6665  001B62  0A07               	xorlw	7	; case 4
  6666  001B64  B4D8               	btfsc	status,2,c
  6667  001B66  D760               	goto	l1898
  6668  001B68  0A01               	xorlw	1	; case 5
  6669  001B6A  B4D8               	btfsc	status,2,c
  6670  001B6C  D765               	goto	l1899
  6671  001B6E  0A03               	xorlw	3	; case 6
  6672  001B70  B4D8               	btfsc	status,2,c
  6673  001B72  D76A               	goto	l1900
  6674  001B74  0A01               	xorlw	1	; case 7
  6675  001B76  B4D8               	btfsc	status,2,c
  6676  001B78  D76F               	goto	l1901
  6677  001B7A  0A0F               	xorlw	15	; case 8
  6678  001B7C  B4D8               	btfsc	status,2,c
  6679  001B7E  D774               	goto	l1902
  6680  001B80  0A01               	xorlw	1	; case 9
  6681  001B82  B4D8               	btfsc	status,2,c
  6682  001B84  D779               	goto	l1903
  6683  001B86  0A03               	xorlw	3	; case 10
  6684  001B88  B4D8               	btfsc	status,2,c
  6685  001B8A  D77E               	goto	l1904
  6686  001B8C  0A01               	xorlw	1	; case 11
  6687  001B8E  B4D8               	btfsc	status,2,c
  6688  001B90  D783               	goto	l1905
  6689  001B92  0A07               	xorlw	7	; case 12
  6690  001B94  B4D8               	btfsc	status,2,c
  6691  001B96  D782               	goto	l1906
  6692  001B98  0A01               	xorlw	1	; case 13
  6693  001B9A  B4D8               	btfsc	status,2,c
  6694  001B9C  D781               	goto	l1907
  6695  001B9E  0A03               	xorlw	3	; case 14
  6696  001BA0  B4D8               	btfsc	status,2,c
  6697  001BA2  D780               	goto	l1908
  6698  001BA4  0A01               	xorlw	1	; case 15
  6699  001BA6  B4D8               	btfsc	status,2,c
  6700  001BA8  D77F               	goto	l1909
  6701  001BAA  0A1F               	xorlw	31	; case 16
  6702  001BAC  B4D8               	btfsc	status,2,c
  6703  001BAE  D77E               	goto	l1910
  6704  001BB0  0A01               	xorlw	1	; case 17
  6705  001BB2  B4D8               	btfsc	status,2,c
  6706  001BB4  D77D               	goto	l1911
  6707  001BB6  0A03               	xorlw	3	; case 18
  6708  001BB8  B4D8               	btfsc	status,2,c
  6709  001BBA  D77C               	goto	l1912
  6710  001BBC  0A01               	xorlw	1	; case 19
  6711  001BBE  B4D8               	btfsc	status,2,c
  6712  001BC0  D77B               	goto	l1913
  6713  001BC2  0A07               	xorlw	7	; case 20
  6714  001BC4  B4D8               	btfsc	status,2,c
  6715  001BC6  D77A               	goto	l1914
  6716  001BC8  0A01               	xorlw	1	; case 21
  6717  001BCA  B4D8               	btfsc	status,2,c
  6718  001BCC  D779               	goto	l1915
  6719  001BCE  0A03               	xorlw	3	; case 22
  6720  001BD0  B4D8               	btfsc	status,2,c
  6721  001BD2  D778               	goto	l1916
  6722  001BD4  0A01               	xorlw	1	; case 23
  6723  001BD6  B4D8               	btfsc	status,2,c
  6724  001BD8  D777               	goto	l1917
  6725  001BDA  0A0F               	xorlw	15	; case 24
  6726  001BDC  B4D8               	btfsc	status,2,c
  6727  001BDE  D776               	goto	l1918
  6728  001BE0  0A01               	xorlw	1	; case 25
  6729  001BE2  B4D8               	btfsc	status,2,c
  6730  001BE4  D775               	goto	l1919
  6731  001BE6  0A03               	xorlw	3	; case 26
  6732  001BE8  B4D8               	btfsc	status,2,c
  6733  001BEA  D774               	goto	l1920
  6734  001BEC  0A01               	xorlw	1	; case 27
  6735  001BEE  B4D8               	btfsc	status,2,c
  6736  001BF0  D773               	goto	l1921
  6737  001BF2  0A07               	xorlw	7	; case 28
  6738  001BF4  B4D8               	btfsc	status,2,c
  6739  001BF6  D772               	goto	l1922
  6740  001BF8  0A01               	xorlw	1	; case 29
  6741  001BFA  B4D8               	btfsc	status,2,c
  6742  001BFC  D771               	goto	l1923
  6743  001BFE  0A03               	xorlw	3	; case 30
  6744  001C00  B4D8               	btfsc	status,2,c
  6745  001C02  D770               	goto	l1924
  6746  001C04  0A01               	xorlw	1	; case 31
  6747  001C06  B4D8               	btfsc	status,2,c
  6748  001C08  D76F               	goto	l1925
  6749  001C0A  0A37               	xorlw	55	; case 40
  6750  001C0C  B4D8               	btfsc	status,2,c
  6751  001C0E  D76E               	goto	l1926
  6752  001C10  0A01               	xorlw	1	; case 41
  6753  001C12  B4D8               	btfsc	status,2,c
  6754  001C14  D76D               	goto	l1927
  6755  001C16  0A05               	xorlw	5	; case 44
  6756  001C18  B4D8               	btfsc	status,2,c
  6757  001C1A  D76C               	goto	l1928
  6758  001C1C  0A01               	xorlw	1	; case 45
  6759  001C1E  B4D8               	btfsc	status,2,c
  6760  001C20  D76B               	goto	l1929
  6761  001C22  0A03               	xorlw	3	; case 46
  6762  001C24  B4D8               	btfsc	status,2,c
  6763  001C26  D76A               	goto	l1930
  6764  001C28  0A01               	xorlw	1	; case 47
  6765  001C2A  B4D8               	btfsc	status,2,c
  6766  001C2C  D769               	goto	l1931
  6767  001C2E  0A19               	xorlw	25	; case 54
  6768  001C30  B4D8               	btfsc	status,2,c
  6769  001C32  D768               	goto	l1932
  6770  001C34  0A01               	xorlw	1	; case 55
  6771  001C36  B4D8               	btfsc	status,2,c
  6772  001C38  D767               	goto	l1933
  6773  001C3A  0A0F               	xorlw	15	; case 56
  6774  001C3C  B4D8               	btfsc	status,2,c
  6775  001C3E  D766               	goto	l1934
  6776  001C40  0A01               	xorlw	1	; case 57
  6777  001C42  B4D8               	btfsc	status,2,c
  6778  001C44  D765               	goto	l1935
  6779  001C46  0A03               	xorlw	3	; case 58
  6780  001C48  B4D8               	btfsc	status,2,c
  6781  001C4A  D764               	goto	l1936
  6782  001C4C  0A01               	xorlw	1	; case 59
  6783  001C4E  B4D8               	btfsc	status,2,c
  6784  001C50  D763               	goto	l1937
  6785  001C52  0A07               	xorlw	7	; case 60
  6786  001C54  B4D8               	btfsc	status,2,c
  6787  001C56  D762               	goto	l1938
  6788  001C58  0A01               	xorlw	1	; case 61
  6789  001C5A  B4D8               	btfsc	status,2,c
  6790  001C5C  D761               	goto	l1939
  6791  001C5E  D766               	goto	l1942
  6792  001C60                     l14389:
  6793                           
  6794                           ; Switch size 1, requested type "space"
  6795                           ; Number of cases is 2, Range of values is 254 to 255
  6796                           ; switch strategies available:
  6797                           ; Name         Instructions Cycles
  6798                           ; simple_byte            7     4 (average)
  6799                           ;	Chosen strategy is simple_byte
  6800  001C60  5003               	movf	??__get_fbr,w,c
  6801  001C62  0AFE               	xorlw	254	; case 254
  6802  001C64  B4D8               	btfsc	status,2,c
  6803  001C66  D75E               	goto	l1940
  6804  001C68  0A01               	xorlw	1	; case 255
  6805  001C6A  B4D8               	btfsc	status,2,c
  6806  001C6C  D75D               	goto	l1941
  6807  001C6E  D75E               	goto	l1942
  6808  001C70                     __end_of__get_fbr:
  6809                           	opt stack 0
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           intcon	equ	0xFF2
  6815                           intcon3	equ	0xFF0
  6816                           postinc0	equ	0xFEE
  6817                           wreg	equ	0xFE8
  6818                           postdec1	equ	0xFE5
  6819                           plusw1	equ	0xFE3
  6820                           fsr1h	equ	0xFE2
  6821                           fsr1l	equ	0xFE1
  6822                           indf2	equ	0xFDF
  6823                           postinc2	equ	0xFDE
  6824                           plusw2	equ	0xFDB
  6825                           fsr2h	equ	0xFDA
  6826                           fsr2l	equ	0xFD9
  6827                           status	equ	0xFD8
  6828                           
  6829 ;; *************** function __get_fat *****************
  6830 ;; Defined at:
  6831 ;;		line 814 in file "fat16.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  idx             2    0[COMRAM] unsigned int 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      unsigned char 
  6838 ;; Registers used:
  6839 ;;		wreg, status,2, status,0
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;Total ram usage:        4 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_fat_format
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text25
  6859  006D0A                     __ptext25:
  6860                           	opt stack 0
  6861  006D0A                     __get_fat:
  6862                           	opt stack 27
  6863                           
  6864                           ;fat16.c: 816: switch (idx)
  6865                           
  6866                           ;incstack = 0
  6867  006D0A  D00E               	goto	l1946
  6868  006D0C                     
  6869                           ;fat16.c: 820: return 0xF8;
  6870  006D0C  0EF8               	movlw	248
  6871  006D0E  0012               	return	
  6872  006D10                     
  6873                           ;fat16.c: 822: return 0xFF;
  6874  006D10  0EFF               	movlw	255
  6875  006D12  0012               	return	
  6876  006D14                     
  6877                           ;fat16.c: 824: return 0xFF;
  6878  006D14  0EFF               	movlw	255
  6879  006D16  0012               	return	
  6880  006D18                     
  6881                           ;fat16.c: 826: return 0xFF;
  6882  006D18  0EFF               	movlw	255
  6883  006D1A  0012               	return	
  6884  006D1C                     
  6885                           ;fat16.c: 829: return 0xFF;
  6886  006D1C  0EFF               	movlw	255
  6887  006D1E  0012               	return	
  6888  006D20                     
  6889                           ;fat16.c: 831: return 0xFF;
  6890  006D20  0EFF               	movlw	255
  6891  006D22  0012               	return	
  6892  006D24                     
  6893                           ;fat16.c: 833: return 0X00;
  6894  006D24  0E00               	movlw	0
  6895                           
  6896                           ;fat16.c: 834: }
  6897  006D26  0012               	return	
  6898  006D28                     l1946:
  6899  006D28  C001  F003         	movff	__get_fat@idx,??__get_fat
  6900  006D2C  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  6901                           
  6902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6903                           ; Switch size 1, requested type "space"
  6904                           ; Number of cases is 1, Range of values is 0 to 0
  6905                           ; switch strategies available:
  6906                           ; Name         Instructions Cycles
  6907                           ; simple_byte            4     3 (average)
  6908                           ;	Chosen strategy is simple_byte
  6909  006D30  5004               	movf	??__get_fat+1,w,c
  6910  006D32  0A00               	xorlw	0	; case 0
  6911  006D34  A4D8               	btfss	status,2,c
  6912  006D36  D7F6               	goto	l1954
  6913                           
  6914                           ; Switch size 1, requested type "space"
  6915                           ; Number of cases is 6, Range of values is 0 to 5
  6916                           ; switch strategies available:
  6917                           ; Name         Instructions Cycles
  6918                           ; simple_byte           19    10 (average)
  6919                           ;	Chosen strategy is simple_byte
  6920  006D38  5003               	movf	??__get_fat,w,c
  6921  006D3A  0A00               	xorlw	0	; case 0
  6922  006D3C  B4D8               	btfsc	status,2,c
  6923  006D3E  D7E6               	goto	l1947
  6924  006D40  0A01               	xorlw	1	; case 1
  6925  006D42  B4D8               	btfsc	status,2,c
  6926  006D44  D7E5               	goto	l1949
  6927  006D46  0A03               	xorlw	3	; case 2
  6928  006D48  B4D8               	btfsc	status,2,c
  6929  006D4A  D7E4               	goto	l1950
  6930  006D4C  0A01               	xorlw	1	; case 3
  6931  006D4E  B4D8               	btfsc	status,2,c
  6932  006D50  D7E3               	goto	l1951
  6933  006D52  0A07               	xorlw	7	; case 4
  6934  006D54  B4D8               	btfsc	status,2,c
  6935  006D56  D7E2               	goto	l1952
  6936  006D58  0A01               	xorlw	1	; case 5
  6937  006D5A  B4D8               	btfsc	status,2,c
  6938  006D5C  D7E1               	goto	l1953
  6939  006D5E  D7E2               	goto	l1954
  6940  006D60                     __end_of__get_fat:
  6941                           	opt stack 0
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           intcon	equ	0xFF2
  6947                           intcon3	equ	0xFF0
  6948                           postinc0	equ	0xFEE
  6949                           wreg	equ	0xFE8
  6950                           postdec1	equ	0xFE5
  6951                           plusw1	equ	0xFE3
  6952                           fsr1h	equ	0xFE2
  6953                           fsr1l	equ	0xFE1
  6954                           indf2	equ	0xFDF
  6955                           postinc2	equ	0xFDE
  6956                           plusw2	equ	0xFDB
  6957                           fsr2h	equ	0xFDA
  6958                           fsr2l	equ	0xFD9
  6959                           status	equ	0xFD8
  6960                           
  6961 ;; *************** function __get_data *****************
  6962 ;; Defined at:
  6963 ;;		line 914 in file "fat16.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  idx             2    0[COMRAM] unsigned int 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      unsigned char 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;Total ram usage:        2 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_fat_format
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text26
  6991  0076DC                     __ptext26:
  6992                           	opt stack 0
  6993  0076DC                     __get_data:
  6994                           	opt stack 27
  6995                           
  6996                           ;fat16.c: 916: if (idx < 12)
  6997                           
  6998                           ;incstack = 0
  6999  0076DC  5002               	movf	__get_data@idx+1,w,c
  7000  0076DE  E110               	bnz	l11641
  7001  0076E0  0E0C               	movlw	12
  7002  0076E2  5C01               	subwf	__get_data@idx,w,c
  7003  0076E4  B0D8               	btfsc	status,0,c
  7004  0076E6  D00C               	goto	l1990
  7005                           
  7006                           ;fat16.c: 917: {;fat16.c: 918: return "Hello World!"[idx];
  7007  0076E8  0ECF               	movlw	low STR_12
  7008  0076EA  2401               	addwf	__get_data@idx,w,c
  7009  0076EC  6EF6               	movwf	tblptrl,c
  7010  0076EE  0E8F               	movlw	high STR_12
  7011  0076F0  2002               	addwfc	__get_data@idx+1,w,c
  7012  0076F2  6EF7               	movwf	tblptrh,c
  7013  0076F4                     	if	1	;There are 3 active tblptr bytes
  7014  0076F4  6AF8               	clrf	tblptru,c
  7015  0076F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7016  0076F8  22F8               	addwfc	tblptru,f,c
  7017  0076FA                     	endif
  7018  0076FA  0008               	tblrd		*
  7019  0076FC  50F5               	movf	tablat,w,c
  7020  0076FE  0012               	return	
  7021  007700                     l1990:
  7022  007700                     l11641:
  7023                           
  7024                           ;fat16.c: 919: };fat16.c: 920: return 0X00;
  7025  007700  0E00               	movlw	0
  7026  007702  0012               	return	
  7027  007704                     __end_of__get_data:
  7028                           	opt stack 0
  7029                           tblptru	equ	0xFF8
  7030                           tblptrh	equ	0xFF7
  7031                           tblptrl	equ	0xFF6
  7032                           tablat	equ	0xFF5
  7033                           intcon	equ	0xFF2
  7034                           intcon3	equ	0xFF0
  7035                           postinc0	equ	0xFEE
  7036                           wreg	equ	0xFE8
  7037                           postdec1	equ	0xFE5
  7038                           plusw1	equ	0xFE3
  7039                           fsr1h	equ	0xFE2
  7040                           fsr1l	equ	0xFE1
  7041                           indf2	equ	0xFDF
  7042                           postinc2	equ	0xFDE
  7043                           plusw2	equ	0xFDB
  7044                           fsr2h	equ	0xFDA
  7045                           fsr2l	equ	0xFD9
  7046                           status	equ	0xFD8
  7047                           
  7048 ;; *************** function __system_timer0_init *****************
  7049 ;; Defined at:
  7050 ;;		line 110 in file "os.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;Total ram usage:        0 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_system_init
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text27
  7078  007892                     __ptext27:
  7079                           	opt stack 0
  7080  007892                     __system_timer0_init:
  7081                           	opt stack 29
  7082                           
  7083                           ;os.c: 113: T0CONbits.T0CS = 0;
  7084                           
  7085                           ;incstack = 0
  7086  007892  9AD5               	bcf	4053,5,c	;volatile
  7087                           
  7088                           ;os.c: 115: T0CONbits.T08BIT = 0;
  7089  007894  9CD5               	bcf	4053,6,c	;volatile
  7090                           
  7091                           ;os.c: 117: T0CONbits.T0PS2 = 0;
  7092  007896  94D5               	bcf	4053,2,c	;volatile
  7093                           
  7094                           ;os.c: 118: T0CONbits.T0PS1 = 1;
  7095  007898  82D5               	bsf	4053,1,c	;volatile
  7096                           
  7097                           ;os.c: 119: T0CONbits.T0PS0 = 0;
  7098  00789A  90D5               	bcf	4053,0,c	;volatile
  7099                           
  7100                           ;os.c: 121: T0CONbits.PSA = 0;
  7101  00789C  96D5               	bcf	4053,3,c	;volatile
  7102                           
  7103                           ;os.c: 123: TMR0H = 0xD1;
  7104  00789E  0ED1               	movlw	209
  7105  0078A0  6ED7               	movwf	4055,c	;volatile
  7106                           
  7107                           ;os.c: 124: TMR0L = 0x20;
  7108  0078A2  0E20               	movlw	32
  7109  0078A4  6ED6               	movwf	4054,c	;volatile
  7110                           
  7111                           ;os.c: 126: T0CONbits.TMR0ON = 1;
  7112  0078A6  8ED5               	bsf	4053,7,c	;volatile
  7113                           
  7114                           ;os.c: 130: INTCONbits.TMR0IF = 0;
  7115  0078A8  94F2               	bcf	intcon,2,c	;volatile
  7116                           
  7117                           ;os.c: 133: os.timeSlot = 0;
  7118  0078AA  0E00               	movlw	0
  7119  0078AC  0100               	movlb	0	; () banked
  7120  0078AE  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7121                           
  7122                           ; BSR set to: 0
  7123  0078B0  0012               	return		;funcret
  7124  0078B2                     __end_of__system_timer0_init:
  7125                           	opt stack 0
  7126                           tblptru	equ	0xFF8
  7127                           tblptrh	equ	0xFF7
  7128                           tblptrl	equ	0xFF6
  7129                           tablat	equ	0xFF5
  7130                           intcon	equ	0xFF2
  7131                           intcon3	equ	0xFF0
  7132                           postinc0	equ	0xFEE
  7133                           wreg	equ	0xFE8
  7134                           postdec1	equ	0xFE5
  7135                           plusw1	equ	0xFE3
  7136                           fsr1h	equ	0xFE2
  7137                           fsr1l	equ	0xFE1
  7138                           indf2	equ	0xFDF
  7139                           postinc2	equ	0xFDE
  7140                           plusw2	equ	0xFDB
  7141                           fsr2h	equ	0xFDA
  7142                           fsr2l	equ	0xFD9
  7143                           status	equ	0xFD8
  7144                           
  7145 ;; *************** function __system_encoder_init *****************
  7146 ;; Defined at:
  7147 ;;		line 71 in file "os.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;		None
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7165 ;;Total ram usage:        0 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_system_init
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text28
  7175  00736C                     __ptext28:
  7176                           	opt stack 0
  7177  00736C                     __system_encoder_init:
  7178                           	opt stack 29
  7179                           
  7180                           ;os.c: 73: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;incstack = 0
  7184  00736C  0E55               	movlw	85
  7185  00736E  6EA7               	movwf	4007,c	;volsfr
  7186  007370  0EAA               	movlw	170
  7187  007372  6EA7               	movwf	4007,c	;volsfr
  7188  007374  010E               	movlb	14	; () banked
  7189  007376  91BF               	bcf	191,0,b	;volatile
  7190                           
  7191                           ;os.c: 74: RPINR1 = 0;
  7192  007378  0E00               	movlw	0
  7193  00737A  6FE1               	movwf	225,b	;volatile
  7194                           
  7195                           ;os.c: 75: RPINR3 = 9;
  7196  00737C  0E09               	movlw	9
  7197  00737E  6FE3               	movwf	227,b	;volatile
  7198                           
  7199                           ;os.c: 76: RPINR2 = 10;
  7200  007380  0E0A               	movlw	10
  7201  007382  6FE2               	movwf	226,b	;volatile
  7202                           
  7203                           ;os.c: 77: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7204  007384  0E55               	movlw	85
  7205  007386  6EA7               	movwf	4007,c	;volsfr
  7206  007388  0EAA               	movlw	170
  7207  00738A  6EA7               	movwf	4007,c	;volsfr
  7208                           
  7209                           ; BSR set to: 14
  7210  00738C  91BF               	bcf	191,0,b	;volatile
  7211                           
  7212                           ; BSR set to: 14
  7213                           ;os.c: 80: INTCON2bits.INTEDG1 = 0;
  7214  00738E  9AF1               	bcf	intcon2,5,c	;volatile
  7215                           
  7216                           ; BSR set to: 14
  7217                           ;os.c: 81: INTCON3bits.INT1IF = 0;
  7218  007390  90F0               	bcf	intcon3,0,c	;volatile
  7219                           
  7220                           ; BSR set to: 14
  7221                           ;os.c: 83: INTCON2bits.INTEDG2 = 1;
  7222  007392  88F1               	bsf	intcon2,4,c	;volatile
  7223                           
  7224                           ; BSR set to: 14
  7225                           ;os.c: 84: INTCON3bits.INT2IF = 0;
  7226  007394  92F0               	bcf	intcon3,1,c	;volatile
  7227                           
  7228                           ; BSR set to: 14
  7229                           ;os.c: 86: INTCON2bits.INTEDG3 = 1;
  7230  007396  86F1               	bsf	intcon2,3,c	;volatile
  7231                           
  7232                           ; BSR set to: 14
  7233                           ;os.c: 87: INTCON3bits.INT3IF = 0;
  7234  007398  94F0               	bcf	intcon3,2,c	;volatile
  7235                           
  7236                           ;os.c: 89: os.encoderCount = 0;
  7237  00739A  0E00               	movlw	0
  7238  00739C  0100               	movlb	0	; () banked
  7239  00739E  6F60               	movwf	_os& (0+255),b	;volatile
  7240                           
  7241                           ;os.c: 90: os.buttonCount = 0;
  7242  0073A0  0E00               	movlw	0
  7243  0073A2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7244                           
  7245                           ; BSR set to: 0
  7246  0073A4  0012               	return		;funcret
  7247  0073A6                     __end_of__system_encoder_init:
  7248                           	opt stack 0
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           intcon	equ	0xFF2
  7254                           intcon2	equ	0xFF1
  7255                           intcon3	equ	0xFF0
  7256                           postinc0	equ	0xFEE
  7257                           wreg	equ	0xFE8
  7258                           postdec1	equ	0xFE5
  7259                           plusw1	equ	0xFE3
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           indf2	equ	0xFDF
  7263                           postinc2	equ	0xFDE
  7264                           plusw2	equ	0xFDB
  7265                           fsr2h	equ	0xFDA
  7266                           fsr2l	equ	0xFD9
  7267                           status	equ	0xFD8
  7268                           
  7269 ;; *************** function _display_update *****************
  7270 ;; Defined at:
  7271 ;;		line 458 in file "display.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7289 ;;Total ram usage:        0 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    4
  7292 ;; This function calls:
  7293 ;;		_i2c_display_cursor
  7294 ;;		_i2c_display_write_fixed
  7295 ;; This function is called by:
  7296 ;;		_main
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text29
  7301  0065D6                     __ptext29:
  7302                           	opt stack 0
  7303  0065D6                     _display_update:
  7304                           	opt stack 26
  7305                           
  7306                           ;display.c: 460: i2c_display_cursor(0, 0);
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;incstack = 0
  7310  0065D6  0E00               	movlw	0
  7311  0065D8  6E0E               	movwf	i2c_display_cursor@position,c
  7312  0065DA  0E00               	movlw	0
  7313  0065DC  ECCF  F03B         	call	_i2c_display_cursor
  7314                           
  7315                           ;display.c: 461: i2c_display_write_fixed(&display_content[0][0], 20);
  7316  0065E0  0E68               	movlw	low _display_content
  7317  0065E2  6E06               	movwf	i2c_display_write_fixed@data,c
  7318  0065E4  0E01               	movlw	high _display_content
  7319  0065E6  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7320  0065E8  0E14               	movlw	20
  7321  0065EA  6E08               	movwf	i2c_display_write_fixed@length,c
  7322  0065EC  ECB0  F036         	call	_i2c_display_write_fixed	;wreg free
  7323                           
  7324                           ;display.c: 462: i2c_display_cursor(1, 0);
  7325  0065F0  0E00               	movlw	0
  7326  0065F2  6E0E               	movwf	i2c_display_cursor@position,c
  7327  0065F4  0E01               	movlw	1
  7328  0065F6  ECCF  F03B         	call	_i2c_display_cursor
  7329                           
  7330                           ;display.c: 463: i2c_display_write_fixed(&display_content[1][0], 20);
  7331  0065FA  0E7C               	movlw	low (_display_content+20)
  7332  0065FC  6E06               	movwf	i2c_display_write_fixed@data,c
  7333  0065FE  0E01               	movlw	high (_display_content+20)
  7334  006600  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7335  006602  0E14               	movlw	20
  7336  006604  6E08               	movwf	i2c_display_write_fixed@length,c
  7337  006606  ECB0  F036         	call	_i2c_display_write_fixed	;wreg free
  7338                           
  7339                           ;display.c: 464: i2c_display_cursor(2, 0);
  7340  00660A  0E00               	movlw	0
  7341  00660C  6E0E               	movwf	i2c_display_cursor@position,c
  7342  00660E  0E02               	movlw	2
  7343  006610  ECCF  F03B         	call	_i2c_display_cursor
  7344                           
  7345                           ;display.c: 465: i2c_display_write_fixed(&display_content[2][0], 20);
  7346  006614  0E90               	movlw	low (_display_content+40)
  7347  006616  6E06               	movwf	i2c_display_write_fixed@data,c
  7348  006618  0E01               	movlw	high (_display_content+40)
  7349  00661A  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7350  00661C  0E14               	movlw	20
  7351  00661E  6E08               	movwf	i2c_display_write_fixed@length,c
  7352  006620  ECB0  F036         	call	_i2c_display_write_fixed	;wreg free
  7353                           
  7354                           ;display.c: 466: i2c_display_cursor(3, 0);
  7355  006624  0E00               	movlw	0
  7356  006626  6E0E               	movwf	i2c_display_cursor@position,c
  7357  006628  0E03               	movlw	3
  7358  00662A  ECCF  F03B         	call	_i2c_display_cursor
  7359                           
  7360                           ;display.c: 467: i2c_display_write_fixed(&display_content[3][0], 20);
  7361  00662E  0EA4               	movlw	low (_display_content+60)
  7362  006630  6E06               	movwf	i2c_display_write_fixed@data,c
  7363  006632  0E01               	movlw	high (_display_content+60)
  7364  006634  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7365  006636  0E14               	movlw	20
  7366  006638  6E08               	movwf	i2c_display_write_fixed@length,c
  7367  00663A  ECB0  F036         	call	_i2c_display_write_fixed	;wreg free
  7368  00663E  0012               	return		;funcret
  7369  006640                     __end_of_display_update:
  7370                           	opt stack 0
  7371                           tblptru	equ	0xFF8
  7372                           tblptrh	equ	0xFF7
  7373                           tblptrl	equ	0xFF6
  7374                           tablat	equ	0xFF5
  7375                           intcon	equ	0xFF2
  7376                           intcon2	equ	0xFF1
  7377                           intcon3	equ	0xFF0
  7378                           postinc0	equ	0xFEE
  7379                           wreg	equ	0xFE8
  7380                           postdec1	equ	0xFE5
  7381                           plusw1	equ	0xFE3
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           postinc2	equ	0xFDE
  7386                           plusw2	equ	0xFDB
  7387                           fsr2h	equ	0xFDA
  7388                           fsr2l	equ	0xFD9
  7389                           status	equ	0xFD8
  7390                           
  7391 ;; *************** function _i2c_display_write_fixed *****************
  7392 ;; Defined at:
  7393 ;;		line 262 in file "i2c.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  data            2    5[COMRAM] PTR unsigned char 
  7396 ;;		 -> display_content(80), 
  7397 ;;  length          1    7[COMRAM] unsigned char 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  pos             1    8[COMRAM] unsigned char 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7409 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;Total ram usage:        4 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    1
  7416 ;; This function calls:
  7417 ;;		__i2c_send
  7418 ;;		__i2c_start
  7419 ;;		__i2c_stop
  7420 ;;		__i2c_wait_idle
  7421 ;;		_i2c_set_frequency
  7422 ;; This function is called by:
  7423 ;;		_display_update
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text30
  7428  006D60                     __ptext30:
  7429                           	opt stack 0
  7430  006D60                     _i2c_display_write_fixed:
  7431                           	opt stack 28
  7432                           
  7433                           ;i2c.c: 264: uint8_t pos;;i2c.c: 267: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7434                           
  7435                           ;incstack = 0
  7436  006D60  0E02               	movlw	2
  7437  006D62  EC2F  F03B         	call	_i2c_set_frequency
  7438                           
  7439                           ;i2c.c: 269: _i2c_wait_idle();
  7440  006D66  ECD5  F035         	call	__i2c_wait_idle	;wreg free
  7441                           
  7442                           ;i2c.c: 270: _i2c_start();
  7443  006D6A  EC42  F03D         	call	__i2c_start	;wreg free
  7444                           
  7445                           ;i2c.c: 271: _i2c_wait_idle();
  7446  006D6E  ECD5  F035         	call	__i2c_wait_idle	;wreg free
  7447                           
  7448                           ;i2c.c: 272: _i2c_send(0b01111000);
  7449  006D72  0E78               	movlw	120
  7450  006D74  EC46  F03D         	call	__i2c_send
  7451                           
  7452                           ;i2c.c: 273: _i2c_wait_idle();
  7453  006D78  ECD5  F035         	call	__i2c_wait_idle	;wreg free
  7454                           
  7455                           ;i2c.c: 274: _i2c_send(0b01000000);
  7456  006D7C  0E40               	movlw	64
  7457  006D7E  EC46  F03D         	call	__i2c_send
  7458                           
  7459                           ;i2c.c: 275: _i2c_wait_idle();
  7460  006D82  ECD5  F035         	call	__i2c_wait_idle	;wreg free
  7461                           
  7462                           ;i2c.c: 278: for(pos=0; pos<length; ++pos)
  7463  006D86  0E00               	movlw	0
  7464  006D88  6E09               	movwf	i2c_display_write_fixed@pos,c
  7465  006D8A  D00E               	goto	l1161
  7466  006D8C                     
  7467                           ;i2c.c: 279: {;i2c.c: 280: _i2c_send(data[pos]);
  7468  006D8C  5009               	movf	i2c_display_write_fixed@pos,w,c
  7469  006D8E  0D01               	mullw	1
  7470  006D90  50F3               	movf	prodl,w,c
  7471  006D92  2406               	addwf	i2c_display_write_fixed@data,w,c
  7472  006D94  6ED9               	movwf	fsr2l,c
  7473  006D96  50F4               	movf	prodh,w,c
  7474  006D98  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  7475  006D9A  6EDA               	movwf	fsr2h,c
  7476  006D9C  50DF               	movf	indf2,w,c
  7477  006D9E  EC46  F03D         	call	__i2c_send
  7478                           
  7479                           ;i2c.c: 281: _i2c_wait_idle();
  7480  006DA2  ECD5  F035         	call	__i2c_wait_idle	;wreg free
  7481  006DA6  2A09               	incf	i2c_display_write_fixed@pos,f,c
  7482  006DA8                     l1161:
  7483  006DA8  5008               	movf	i2c_display_write_fixed@length,w,c
  7484  006DAA  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  7485  006DAC  A0D8               	btfss	status,0,c
  7486  006DAE  D7EE               	goto	l1162
  7487                           
  7488                           ;i2c.c: 282: };i2c.c: 284: _i2c_stop();
  7489  006DB0  EC3E  F03D         	call	__i2c_stop	;wreg free
  7490  006DB4  0012               	return		;funcret
  7491  006DB6                     __end_of_i2c_display_write_fixed:
  7492                           	opt stack 0
  7493                           tblptru	equ	0xFF8
  7494                           tblptrh	equ	0xFF7
  7495                           tblptrl	equ	0xFF6
  7496                           tablat	equ	0xFF5
  7497                           prodh	equ	0xFF4
  7498                           prodl	equ	0xFF3
  7499                           intcon	equ	0xFF2
  7500                           intcon2	equ	0xFF1
  7501                           intcon3	equ	0xFF0
  7502                           postinc0	equ	0xFEE
  7503                           wreg	equ	0xFE8
  7504                           postdec1	equ	0xFE5
  7505                           plusw1	equ	0xFE3
  7506                           fsr1h	equ	0xFE2
  7507                           fsr1l	equ	0xFE1
  7508                           indf2	equ	0xFDF
  7509                           postinc2	equ	0xFDE
  7510                           plusw2	equ	0xFDB
  7511                           fsr2h	equ	0xFDA
  7512                           fsr2l	equ	0xFD9
  7513                           status	equ	0xFD8
  7514                           
  7515 ;; *************** function _i2c_display_cursor *****************
  7516 ;; Defined at:
  7517 ;;		line 222 in file "i2c.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  line            1    wreg     unsigned char 
  7520 ;;  position        1   13[COMRAM] unsigned char 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  line            1   14[COMRAM] unsigned char 
  7523 ;;  address         1   15[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  1    wreg      void 
  7526 ;; Registers used:
  7527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7533 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;Total ram usage:        3 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    3
  7540 ;; This function calls:
  7541 ;;		__ic2_display_set_address
  7542 ;;		_i2c_set_frequency
  7543 ;; This function is called by:
  7544 ;;		_display_update
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text31
  7549  00779E                     __ptext31:
  7550                           	opt stack 0
  7551  00779E                     _i2c_display_cursor:
  7552                           	opt stack 26
  7553                           
  7554                           ;incstack = 0
  7555                           ;i2c_display_cursor@line stored from wreg
  7556  00779E  6E0F               	movwf	i2c_display_cursor@line,c
  7557                           
  7558                           ;i2c.c: 224: uint8_t address;;i2c.c: 227: line &= 0b11;
  7559  0077A0  0E03               	movlw	3
  7560  0077A2  160F               	andwf	i2c_display_cursor@line,f,c
  7561                           
  7562                           ;i2c.c: 228: address = line<<5;
  7563  0077A4  380F               	swapf	i2c_display_cursor@line,w,c
  7564  0077A6  46E8               	rlncf	wreg,f,c
  7565  0077A8  0BE0               	andlw	224
  7566  0077AA  6E10               	movwf	i2c_display_cursor@address,c
  7567                           
  7568                           ;i2c.c: 229: position &= 0b11111;
  7569  0077AC  0E1F               	movlw	31
  7570  0077AE  160E               	andwf	i2c_display_cursor@position,f,c
  7571                           
  7572                           ;i2c.c: 230: address |= position;
  7573  0077B0  500E               	movf	i2c_display_cursor@position,w,c
  7574  0077B2  1210               	iorwf	i2c_display_cursor@address,f,c
  7575                           
  7576                           ;i2c.c: 233: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7577  0077B4  0E02               	movlw	2
  7578  0077B6  EC2F  F03B         	call	_i2c_set_frequency
  7579                           
  7580                           ;i2c.c: 236: _ic2_display_set_address(address);
  7581  0077BA  5010               	movf	i2c_display_cursor@address,w,c
  7582  0077BC  ECA9  F03B         	call	__ic2_display_set_address
  7583  0077C0  0012               	return		;funcret
  7584  0077C2                     __end_of_i2c_display_cursor:
  7585                           	opt stack 0
  7586                           tblptru	equ	0xFF8
  7587                           tblptrh	equ	0xFF7
  7588                           tblptrl	equ	0xFF6
  7589                           tablat	equ	0xFF5
  7590                           prodh	equ	0xFF4
  7591                           prodl	equ	0xFF3
  7592                           intcon	equ	0xFF2
  7593                           intcon2	equ	0xFF1
  7594                           intcon3	equ	0xFF0
  7595                           postinc0	equ	0xFEE
  7596                           wreg	equ	0xFE8
  7597                           postdec1	equ	0xFE5
  7598                           plusw1	equ	0xFE3
  7599                           fsr1h	equ	0xFE2
  7600                           fsr1l	equ	0xFE1
  7601                           indf2	equ	0xFDF
  7602                           postinc2	equ	0xFDE
  7603                           plusw2	equ	0xFDB
  7604                           fsr2h	equ	0xFDA
  7605                           fsr2l	equ	0xFD9
  7606                           status	equ	0xFD8
  7607                           
  7608 ;; *************** function __ic2_display_set_address *****************
  7609 ;; Defined at:
  7610 ;;		line 186 in file "i2c.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;  address         1    wreg     unsigned char 
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  address         1   10[COMRAM] unsigned char 
  7615 ;;  data_array      2   11[COMRAM] unsigned char [2]
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7626 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;Total ram usage:        3 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    2
  7632 ;; This function calls:
  7633 ;;		__i2c_write
  7634 ;;		_i2c_set_frequency
  7635 ;; This function is called by:
  7636 ;;		_i2c_display_cursor
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text32
  7641  007752                     __ptext32:
  7642                           	opt stack 0
  7643  007752                     __ic2_display_set_address:
  7644                           	opt stack 26
  7645                           
  7646                           ;incstack = 0
  7647                           ;__ic2_display_set_address@address stored from wreg
  7648  007752  6E0B               	movwf	__ic2_display_set_address@address,c
  7649                           
  7650                           ;i2c.c: 188: uint8_t data_array[2];;i2c.c: 189: data_array[0] = 0b00000000;
  7651  007754  0E00               	movlw	0
  7652  007756  6E0C               	movwf	__ic2_display_set_address@data_array,c
  7653                           
  7654                           ;i2c.c: 190: data_array[1] = 0b10000000 | address;
  7655  007758  500B               	movf	__ic2_display_set_address@address,w,c
  7656  00775A  0980               	iorlw	128
  7657  00775C  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  7658                           
  7659                           ;i2c.c: 193: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7660  00775E  0E02               	movlw	2
  7661  007760  EC2F  F03B         	call	_i2c_set_frequency
  7662                           
  7663                           ;i2c.c: 196: _i2c_write(0b01111000, &data_array[0], 2);
  7664  007764  0E0C               	movlw	low __ic2_display_set_address@data_array
  7665  007766  6E06               	movwf	__i2c_write@data,c
  7666  007768  0E00               	movlw	high __ic2_display_set_address@data_array
  7667  00776A  6E07               	movwf	__i2c_write@data+1,c
  7668  00776C  0E02               	movlw	2
  7669  00776E  6E08               	movwf	__i2c_write@length,c
  7670  007770  0E78               	movlw	120
  7671  007772  EC6D  F038         	call	__i2c_write
  7672  007776  0012               	return		;funcret
  7673  007778                     __end_of__ic2_display_set_address:
  7674                           	opt stack 0
  7675                           tblptru	equ	0xFF8
  7676                           tblptrh	equ	0xFF7
  7677                           tblptrl	equ	0xFF6
  7678                           tablat	equ	0xFF5
  7679                           prodh	equ	0xFF4
  7680                           prodl	equ	0xFF3
  7681                           intcon	equ	0xFF2
  7682                           intcon2	equ	0xFF1
  7683                           intcon3	equ	0xFF0
  7684                           postinc0	equ	0xFEE
  7685                           wreg	equ	0xFE8
  7686                           postdec1	equ	0xFE5
  7687                           plusw1	equ	0xFE3
  7688                           fsr1h	equ	0xFE2
  7689                           fsr1l	equ	0xFE1
  7690                           indf2	equ	0xFDF
  7691                           postinc2	equ	0xFDE
  7692                           plusw2	equ	0xFDB
  7693                           fsr2h	equ	0xFDA
  7694                           fsr2l	equ	0xFD9
  7695                           status	equ	0xFD8
  7696                           
  7697 ;; *************** function _display_prepare *****************
  7698 ;; Defined at:
  7699 ;;		line 221 in file "display.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  mode            1    wreg     unsigned char 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  mode            1   42[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7716 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;Total ram usage:        3 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    6
  7720 ;; This function calls:
  7721 ;;		__display_checked
  7722 ;;		__display_clear
  7723 ;;		__display_done
  7724 ;;		__display_failed
  7725 ;;		__display_found
  7726 ;;		__display_programming
  7727 ;;		__display_start
  7728 ;;		__display_verify
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text33
  7735  004B48                     __ptext33:
  7736                           	opt stack 0
  7737  004B48                     _display_prepare:
  7738                           	opt stack 24
  7739                           
  7740                           ;incstack = 0
  7741                           ;display_prepare@mode stored from wreg
  7742  004B48  6E2B               	movwf	display_prepare@mode,c
  7743                           
  7744                           ;display.c: 223: _display_clear();
  7745  004B4A  EC49  F038         	call	__display_clear	;wreg free
  7746                           
  7747                           ;display.c: 225: switch(mode&0xF0)
  7748  004B4E  D015               	goto	l1411
  7749  004B50                     
  7750                           ;display.c: 228: _display_start();
  7751  004B50  EC30  F01B         	call	__display_start	;wreg free
  7752                           
  7753                           ;display.c: 229: break;
  7754  004B54  D03B               	goto	l1420
  7755  004B56                     
  7756                           ;display.c: 232: _display_found();
  7757  004B56  EC88  F014         	call	__display_found	;wreg free
  7758                           
  7759                           ;display.c: 233: break;
  7760  004B5A  D038               	goto	l1420
  7761  004B5C                     
  7762                           ;display.c: 236: _display_verify();
  7763  004B5C  EC1D  F01D         	call	__display_verify	;wreg free
  7764                           
  7765                           ;display.c: 237: break;
  7766  004B60  D035               	goto	l1420
  7767  004B62                     
  7768                           ;display.c: 240: _display_checked();
  7769  004B62  ECB7  F019         	call	__display_checked	;wreg free
  7770                           
  7771                           ;display.c: 241: break;
  7772  004B66  D032               	goto	l1420
  7773  004B68                     
  7774                           ;display.c: 244: _display_failed();
  7775  004B68  EC98  F007         	call	__display_failed	;wreg free
  7776                           
  7777                           ;display.c: 245: break;
  7778  004B6C  D02F               	goto	l1420
  7779  004B6E                     
  7780                           ;display.c: 248: _display_programming();
  7781  004B6E  EC63  F016         	call	__display_programming	;wreg free
  7782                           
  7783                           ;display.c: 249: break;
  7784  004B72  D02C               	goto	l1420
  7785  004B74                     
  7786                           ;display.c: 252: _display_done();
  7787  004B74  EC75  F01A         	call	__display_done	;wreg free
  7788                           
  7789                           ;display.c: 254: }
  7790                           
  7791                           ;display.c: 253: break;
  7792  004B78  D029               	goto	l1420
  7793  004B7A                     l1411:
  7794  004B7A  502B               	movf	display_prepare@mode,w,c
  7795  004B7C  0BF0               	andlw	240
  7796  004B7E  6E29               	movwf	??_display_prepare& (0+255),c
  7797  004B80  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  7798                           
  7799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7800                           ; Switch size 1, requested type "space"
  7801                           ; Number of cases is 1, Range of values is 0 to 0
  7802                           ; switch strategies available:
  7803                           ; Name         Instructions Cycles
  7804                           ; simple_byte            4     3 (average)
  7805                           ;	Chosen strategy is simple_byte
  7806  004B82  502A               	movf	??_display_prepare+1,w,c
  7807  004B84  0A00               	xorlw	0	; case 0
  7808  004B86  A4D8               	btfss	status,2,c
  7809  004B88  D021               	goto	l1420
  7810                           
  7811                           ; Switch size 1, requested type "space"
  7812                           ; Number of cases is 7, Range of values is 0 to 96
  7813                           ; switch strategies available:
  7814                           ; Name         Instructions Cycles
  7815                           ; simple_byte           22    12 (average)
  7816                           ;	Chosen strategy is simple_byte
  7817  004B8A  5029               	movf	??_display_prepare,w,c
  7818  004B8C  0A00               	xorlw	0	; case 0
  7819  004B8E  B4D8               	btfsc	status,2,c
  7820  004B90  D7DF               	goto	l1412
  7821  004B92  0A10               	xorlw	16	; case 16
  7822  004B94  B4D8               	btfsc	status,2,c
  7823  004B96  D7DF               	goto	l1414
  7824  004B98  0A30               	xorlw	48	; case 32
  7825  004B9A  B4D8               	btfsc	status,2,c
  7826  004B9C  D7DF               	goto	l1415
  7827  004B9E  0A10               	xorlw	16	; case 48
  7828  004BA0  B4D8               	btfsc	status,2,c
  7829  004BA2  D7DF               	goto	l1416
  7830  004BA4  0A70               	xorlw	112	; case 64
  7831  004BA6  B4D8               	btfsc	status,2,c
  7832  004BA8  D7DF               	goto	l1417
  7833  004BAA  0A10               	xorlw	16	; case 80
  7834  004BAC  B4D8               	btfsc	status,2,c
  7835  004BAE  D7DF               	goto	l1418
  7836  004BB0  0A30               	xorlw	48	; case 96
  7837  004BB2  B4D8               	btfsc	status,2,c
  7838  004BB4  D7DF               	goto	l1419
  7839                           
  7840                           ;display.c: 257: switch((os.timeSlot>>5)&0b11)
  7841  004BB6  D00A               	goto	l1420
  7842  004BB8                     
  7843                           ;display.c: 260: display_content[0][17] = '.';
  7844  004BB8  0E2E               	movlw	46
  7845  004BBA  0101               	movlb	1	; () banked
  7846  004BBC  6F79               	movwf	(_display_content+17)& (0+255),b
  7847  004BBE                     l1422:
  7848                           
  7849                           ;display.c: 263: display_content[0][16] = '.';
  7850  004BBE  0E2E               	movlw	46
  7851  004BC0  0101               	movlb	1	; () banked
  7852  004BC2  6F78               	movwf	(_display_content+16)& (0+255),b
  7853  004BC4                     l1423:
  7854                           
  7855                           ;display.c: 266: display_content[0][15] = '.';
  7856  004BC4  0E2E               	movlw	46
  7857  004BC6  0101               	movlb	1	; () banked
  7858  004BC8  6F77               	movwf	(_display_content+15)& (0+255),b
  7859                           
  7860                           ;display.c: 268: }
  7861  004BCA  D015               	goto	l1424
  7862  004BCC                     l1420:
  7863                           
  7864                           ; BSR set to: 1
  7865  004BCC  0100               	movlb	0	; () banked
  7866  004BCE  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
  7867  004BD0  42E8               	rrncf	wreg,f,c
  7868  004BD2  0B07               	andlw	7
  7869  004BD4  0B03               	andlw	3
  7870  004BD6  6E29               	movwf	??_display_prepare& (0+255),c
  7871  004BD8  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  7872                           
  7873                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7874                           ; Switch size 1, requested type "space"
  7875                           ; Number of cases is 1, Range of values is 0 to 0
  7876                           ; switch strategies available:
  7877                           ; Name         Instructions Cycles
  7878                           ; simple_byte            4     3 (average)
  7879                           ;	Chosen strategy is simple_byte
  7880  004BDA  502A               	movf	??_display_prepare+1,w,c
  7881  004BDC  0A00               	xorlw	0	; case 0
  7882  004BDE  A4D8               	btfss	status,2,c
  7883  004BE0  D00A               	goto	l1424
  7884                           
  7885                           ; BSR set to: 0
  7886                           ; Switch size 1, requested type "space"
  7887                           ; Number of cases is 3, Range of values is 1 to 3
  7888                           ; switch strategies available:
  7889                           ; Name         Instructions Cycles
  7890                           ; simple_byte           10     6 (average)
  7891                           ;	Chosen strategy is simple_byte
  7892  004BE2  5029               	movf	??_display_prepare,w,c
  7893  004BE4  0A01               	xorlw	1	; case 1
  7894  004BE6  B4D8               	btfsc	status,2,c
  7895  004BE8  D7ED               	goto	l1423
  7896  004BEA  0A03               	xorlw	3	; case 2
  7897  004BEC  B4D8               	btfsc	status,2,c
  7898  004BEE  D7E7               	goto	l1422
  7899  004BF0  0A01               	xorlw	1	; case 3
  7900  004BF2  B4D8               	btfsc	status,2,c
  7901  004BF4  D7E1               	goto	l1421
  7902  004BF6                     l1424:
  7903                           
  7904                           ;display.c: 273: if(INTCONbits.GIE)
  7905  004BF6  AEF2               	btfss	intcon,7,c	;volatile
  7906  004BF8  D003               	goto	l1425
  7907                           
  7908                           ;display.c: 274: {;display.c: 275: display_content[0][18] = 'I';
  7909  004BFA  0E49               	movlw	73
  7910  004BFC  0101               	movlb	1	; () banked
  7911  004BFE  6F7A               	movwf	(_display_content+18)& (0+255),b
  7912  004C00                     l1425:
  7913                           
  7914                           ;display.c: 276: };display.c: 278: if(os.buttonCount>0)
  7915                           
  7916                           ; BSR set to: 1
  7917  004C00  0100               	movlb	0	; () banked
  7918  004C02  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  7919  004C04  0A80               	xorlw	128
  7920  004C06  0F7F               	addlw	-129
  7921  004C08  A0D8               	btfss	status,0,c
  7922  004C0A  0012               	return	
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;display.c: 279: {;display.c: 280: display_content[3][19] = 'X';
  7926  004C0C  0E58               	movlw	88
  7927  004C0E  0101               	movlb	1	; () banked
  7928  004C10  6FB7               	movwf	(_display_content+79)& (0+255),b
  7929  004C12  0012               	return	
  7930  004C14                     __end_of_display_prepare:
  7931                           	opt stack 0
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           intcon	equ	0xFF2
  7939                           intcon2	equ	0xFF1
  7940                           intcon3	equ	0xFF0
  7941                           postinc0	equ	0xFEE
  7942                           wreg	equ	0xFE8
  7943                           postdec1	equ	0xFE5
  7944                           plusw1	equ	0xFE3
  7945                           fsr1h	equ	0xFE2
  7946                           fsr1l	equ	0xFE1
  7947                           indf2	equ	0xFDF
  7948                           postinc2	equ	0xFDE
  7949                           plusw2	equ	0xFDB
  7950                           fsr2h	equ	0xFDA
  7951                           fsr2l	equ	0xFD9
  7952                           status	equ	0xFD8
  7953                           
  7954 ;; *************** function __display_verify *****************
  7955 ;; Defined at:
  7956 ;;		line 328 in file "display.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;		None
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  cntr            1   32[COMRAM] unsigned char 
  7961 ;;  start           1    0        unsigned char 
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      void 
  7964 ;; Registers used:
  7965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7974 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7975 ;;Total ram usage:        3 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    4
  7978 ;; This function calls:
  7979 ;;		__display_itoa_u16
  7980 ;;		_bootloader_get_entries
  7981 ;; This function is called by:
  7982 ;;		_display_prepare
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text34
  7987  003A3A                     __ptext34:
  7988                           	opt stack 0
  7989  003A3A                     __display_verify:
  7990                           	opt stack 25
  7991                           
  7992                           ;display.c: 330: uint8_t cntr;;display.c: 331: uint8_t start;;display.c: 332: cntr = 0;
  7993                           
  7994                           ;incstack = 0
  7995  003A3A  0E00               	movlw	0
  7996  003A3C  6E21               	movwf	__display_verify@cntr,c
  7997                           
  7998                           ;display.c: 333: while(verify_line1[cntr])
  7999  003A3E  D017               	goto	l1463
  8000  003A40                     
  8001                           ;display.c: 334: display_content[0][cntr] = verify_line1[cntr++];
  8002  003A40  5021               	movf	__display_verify@cntr,w,c
  8003  003A42  0D01               	mullw	1
  8004  003A44  0E09               	movlw	low _verify_line1
  8005  003A46  24F3               	addwf	prodl,w,c
  8006  003A48  6EF6               	movwf	tblptrl,c
  8007  003A4A  0E8E               	movlw	high _verify_line1
  8008  003A4C  20F4               	addwfc	prodh,w,c
  8009  003A4E  6EF7               	movwf	tblptrh,c
  8010  003A50                     	if	1	;There are 3 active tblptr bytes
  8011  003A50  6AF8               	clrf	tblptru,c
  8012  003A52  0E00               	movlw	low (__mediumconst shr (0+16))
  8013  003A54  22F8               	addwfc	tblptru,f,c
  8014  003A56                     	endif
  8015  003A56  5021               	movf	__display_verify@cntr,w,c
  8016  003A58  0D01               	mullw	1
  8017  003A5A  0E68               	movlw	low _display_content
  8018  003A5C  24F3               	addwf	prodl,w,c
  8019  003A5E  6ED9               	movwf	fsr2l,c
  8020  003A60  0E01               	movlw	high _display_content
  8021  003A62  20F4               	addwfc	prodh,w,c
  8022  003A64  6EDA               	movwf	fsr2h,c
  8023  003A66  0008               	tblrd		*
  8024  003A68  CFF5 FFDF          	movff	tablat,indf2
  8025  003A6C  2A21               	incf	__display_verify@cntr,f,c
  8026  003A6E                     l1463:
  8027  003A6E  5021               	movf	__display_verify@cntr,w,c
  8028  003A70  0D01               	mullw	1
  8029  003A72  0E09               	movlw	low _verify_line1
  8030  003A74  24F3               	addwf	prodl,w,c
  8031  003A76  6EF6               	movwf	tblptrl,c
  8032  003A78  0E8E               	movlw	high _verify_line1
  8033  003A7A  20F4               	addwfc	prodh,w,c
  8034  003A7C  6EF7               	movwf	tblptrh,c
  8035  003A7E                     	if	1	;There are 3 active tblptr bytes
  8036  003A7E  6AF8               	clrf	tblptru,c
  8037  003A80  0E00               	movlw	low (__mediumconst shr (0+16))
  8038  003A82  22F8               	addwfc	tblptru,f,c
  8039  003A84                     	endif
  8040  003A84  0008               	tblrd		*
  8041  003A86  50F5               	movf	tablat,w,c
  8042  003A88  0900               	iorlw	0
  8043  003A8A  A4D8               	btfss	status,2,c
  8044  003A8C  D7D9               	goto	l1464
  8045                           
  8046                           ;display.c: 335: cntr = 0;
  8047  003A8E  0E00               	movlw	0
  8048  003A90  6E21               	movwf	__display_verify@cntr,c
  8049                           
  8050                           ;display.c: 336: while(verify_line2[cntr])
  8051  003A92  D017               	goto	l1466
  8052  003A94                     
  8053                           ;display.c: 337: display_content[1][cntr] = verify_line2[cntr++];
  8054  003A94  5021               	movf	__display_verify@cntr,w,c
  8055  003A96  0D01               	mullw	1
  8056  003A98  0E55               	movlw	low _verify_line2
  8057  003A9A  24F3               	addwf	prodl,w,c
  8058  003A9C  6EF6               	movwf	tblptrl,c
  8059  003A9E  0E8E               	movlw	high _verify_line2
  8060  003AA0  20F4               	addwfc	prodh,w,c
  8061  003AA2  6EF7               	movwf	tblptrh,c
  8062  003AA4                     	if	1	;There are 3 active tblptr bytes
  8063  003AA4  6AF8               	clrf	tblptru,c
  8064  003AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8065  003AA8  22F8               	addwfc	tblptru,f,c
  8066  003AAA                     	endif
  8067  003AAA  5021               	movf	__display_verify@cntr,w,c
  8068  003AAC  0D01               	mullw	1
  8069  003AAE  0E7C               	movlw	low (_display_content+20)
  8070  003AB0  24F3               	addwf	prodl,w,c
  8071  003AB2  6ED9               	movwf	fsr2l,c
  8072  003AB4  0E01               	movlw	high (_display_content+20)
  8073  003AB6  20F4               	addwfc	prodh,w,c
  8074  003AB8  6EDA               	movwf	fsr2h,c
  8075  003ABA  0008               	tblrd		*
  8076  003ABC  CFF5 FFDF          	movff	tablat,indf2
  8077  003AC0  2A21               	incf	__display_verify@cntr,f,c
  8078  003AC2                     l1466:
  8079  003AC2  5021               	movf	__display_verify@cntr,w,c
  8080  003AC4  0D01               	mullw	1
  8081  003AC6  0E55               	movlw	low _verify_line2
  8082  003AC8  24F3               	addwf	prodl,w,c
  8083  003ACA  6EF6               	movwf	tblptrl,c
  8084  003ACC  0E8E               	movlw	high _verify_line2
  8085  003ACE  20F4               	addwfc	prodh,w,c
  8086  003AD0  6EF7               	movwf	tblptrh,c
  8087  003AD2                     	if	1	;There are 3 active tblptr bytes
  8088  003AD2  6AF8               	clrf	tblptru,c
  8089  003AD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8090  003AD6  22F8               	addwfc	tblptru,f,c
  8091  003AD8                     	endif
  8092  003AD8  0008               	tblrd		*
  8093  003ADA  50F5               	movf	tablat,w,c
  8094  003ADC  0900               	iorlw	0
  8095  003ADE  A4D8               	btfss	status,2,c
  8096  003AE0  D7D9               	goto	l1467
  8097                           
  8098                           ;display.c: 338: cntr = 0;
  8099  003AE2  0E00               	movlw	0
  8100  003AE4  6E21               	movwf	__display_verify@cntr,c
  8101                           
  8102                           ;display.c: 339: while(verify_line3[cntr])
  8103  003AE6  D017               	goto	l1469
  8104  003AE8                     
  8105                           ;display.c: 340: display_content[2][cntr] = verify_line3[cntr++];
  8106  003AE8  5021               	movf	__display_verify@cntr,w,c
  8107  003AEA  0D01               	mullw	1
  8108  003AEC  0E8A               	movlw	low _verify_line3
  8109  003AEE  24F3               	addwf	prodl,w,c
  8110  003AF0  6EF6               	movwf	tblptrl,c
  8111  003AF2  0E8E               	movlw	high _verify_line3
  8112  003AF4  20F4               	addwfc	prodh,w,c
  8113  003AF6  6EF7               	movwf	tblptrh,c
  8114  003AF8                     	if	1	;There are 3 active tblptr bytes
  8115  003AF8  6AF8               	clrf	tblptru,c
  8116  003AFA  0E00               	movlw	low (__mediumconst shr (0+16))
  8117  003AFC  22F8               	addwfc	tblptru,f,c
  8118  003AFE                     	endif
  8119  003AFE  5021               	movf	__display_verify@cntr,w,c
  8120  003B00  0D01               	mullw	1
  8121  003B02  0E90               	movlw	low (_display_content+40)
  8122  003B04  24F3               	addwf	prodl,w,c
  8123  003B06  6ED9               	movwf	fsr2l,c
  8124  003B08  0E01               	movlw	high (_display_content+40)
  8125  003B0A  20F4               	addwfc	prodh,w,c
  8126  003B0C  6EDA               	movwf	fsr2h,c
  8127  003B0E  0008               	tblrd		*
  8128  003B10  CFF5 FFDF          	movff	tablat,indf2
  8129  003B14  2A21               	incf	__display_verify@cntr,f,c
  8130  003B16                     l1469:
  8131  003B16  5021               	movf	__display_verify@cntr,w,c
  8132  003B18  0D01               	mullw	1
  8133  003B1A  0E8A               	movlw	low _verify_line3
  8134  003B1C  24F3               	addwf	prodl,w,c
  8135  003B1E  6EF6               	movwf	tblptrl,c
  8136  003B20  0E8E               	movlw	high _verify_line3
  8137  003B22  20F4               	addwfc	prodh,w,c
  8138  003B24  6EF7               	movwf	tblptrh,c
  8139  003B26                     	if	1	;There are 3 active tblptr bytes
  8140  003B26  6AF8               	clrf	tblptru,c
  8141  003B28  0E00               	movlw	low (__mediumconst shr (0+16))
  8142  003B2A  22F8               	addwfc	tblptru,f,c
  8143  003B2C                     	endif
  8144  003B2C  0008               	tblrd		*
  8145  003B2E  50F5               	movf	tablat,w,c
  8146  003B30  0900               	iorlw	0
  8147  003B32  A4D8               	btfss	status,2,c
  8148  003B34  D7D9               	goto	l1470
  8149                           
  8150                           ;display.c: 341: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
  8151  003B36  EC2F  F03D         	call	_bootloader_get_entries	;wreg free
  8152  003B3A  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8153  003B3E  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8154  003B42  6A1B               	clrf	__display_itoa_u16@value+2,c
  8155  003B44  6A1C               	clrf	__display_itoa_u16@value+3,c
  8156  003B46  5021               	movf	__display_verify@cntr,w,c
  8157  003B48  6E1F               	movwf	??__display_verify& (0+255),c
  8158  003B4A  6A20               	clrf	(??__display_verify+1)& (0+255),c
  8159  003B4C  0E01               	movlw	1
  8160  003B4E  261F               	addwf	??__display_verify,f,c
  8161  003B50  0E00               	movlw	0
  8162  003B52  2220               	addwfc	??__display_verify+1,f,c
  8163  003B54  0E90               	movlw	low (_display_content+40)
  8164  003B56  241F               	addwf	??__display_verify,w,c
  8165  003B58  6E1D               	movwf	__display_itoa_u16@text,c
  8166  003B5A  0E01               	movlw	high (_display_content+40)
  8167  003B5C  2020               	addwfc	??__display_verify+1,w,c
  8168  003B5E  6E1E               	movwf	__display_itoa_u16@text+1,c
  8169  003B60  EC38  F027         	call	__display_itoa_u16	;wreg free
  8170  003B64  0012               	return		;funcret
  8171  003B66                     __end_of__display_verify:
  8172                           	opt stack 0
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           intcon2	equ	0xFF1
  8181                           intcon3	equ	0xFF0
  8182                           postinc0	equ	0xFEE
  8183                           wreg	equ	0xFE8
  8184                           postdec1	equ	0xFE5
  8185                           plusw1	equ	0xFE3
  8186                           fsr1h	equ	0xFE2
  8187                           fsr1l	equ	0xFE1
  8188                           indf2	equ	0xFDF
  8189                           postinc2	equ	0xFDE
  8190                           plusw2	equ	0xFDB
  8191                           fsr2h	equ	0xFDA
  8192                           fsr2l	equ	0xFD9
  8193                           status	equ	0xFD8
  8194                           
  8195 ;; *************** function __display_start *****************
  8196 ;; Defined at:
  8197 ;;		line 284 in file "display.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;  cntr            1    0[COMRAM] unsigned char 
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8215 ;;Total ram usage:        1 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_display_prepare
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text35
  8225  003660                     __ptext35:
  8226                           	opt stack 0
  8227  003660                     __display_start:
  8228                           	opt stack 29
  8229                           
  8230                           ;display.c: 286: uint8_t cntr;;display.c: 287: cntr = 0;
  8231                           
  8232                           ;incstack = 0
  8233  003660  0E00               	movlw	0
  8234  003662  6E01               	movwf	__display_start@cntr,c
  8235                           
  8236                           ;display.c: 288: while(start_line1[cntr])
  8237  003664  D017               	goto	l1430
  8238  003666                     
  8239                           ;display.c: 289: display_content[0][cntr] = start_line1[cntr++];
  8240  003666  5001               	movf	__display_start@cntr,w,c
  8241  003668  0D01               	mullw	1
  8242  00366A  0E88               	movlw	low _start_line1
  8243  00366C  24F3               	addwf	prodl,w,c
  8244  00366E  6EF6               	movwf	tblptrl,c
  8245  003670  0E8D               	movlw	high _start_line1
  8246  003672  20F4               	addwfc	prodh,w,c
  8247  003674  6EF7               	movwf	tblptrh,c
  8248  003676                     	if	1	;There are 3 active tblptr bytes
  8249  003676  6AF8               	clrf	tblptru,c
  8250  003678  0E00               	movlw	low (__mediumconst shr (0+16))
  8251  00367A  22F8               	addwfc	tblptru,f,c
  8252  00367C                     	endif
  8253  00367C  5001               	movf	__display_start@cntr,w,c
  8254  00367E  0D01               	mullw	1
  8255  003680  0E68               	movlw	low _display_content
  8256  003682  24F3               	addwf	prodl,w,c
  8257  003684  6ED9               	movwf	fsr2l,c
  8258  003686  0E01               	movlw	high _display_content
  8259  003688  20F4               	addwfc	prodh,w,c
  8260  00368A  6EDA               	movwf	fsr2h,c
  8261  00368C  0008               	tblrd		*
  8262  00368E  CFF5 FFDF          	movff	tablat,indf2
  8263  003692  2A01               	incf	__display_start@cntr,f,c
  8264  003694                     l1430:
  8265  003694  5001               	movf	__display_start@cntr,w,c
  8266  003696  0D01               	mullw	1
  8267  003698  0E88               	movlw	low _start_line1
  8268  00369A  24F3               	addwf	prodl,w,c
  8269  00369C  6EF6               	movwf	tblptrl,c
  8270  00369E  0E8D               	movlw	high _start_line1
  8271  0036A0  20F4               	addwfc	prodh,w,c
  8272  0036A2  6EF7               	movwf	tblptrh,c
  8273  0036A4                     	if	1	;There are 3 active tblptr bytes
  8274  0036A4  6AF8               	clrf	tblptru,c
  8275  0036A6  0E00               	movlw	low (__mediumconst shr (0+16))
  8276  0036A8  22F8               	addwfc	tblptru,f,c
  8277  0036AA                     	endif
  8278  0036AA  0008               	tblrd		*
  8279  0036AC  50F5               	movf	tablat,w,c
  8280  0036AE  0900               	iorlw	0
  8281  0036B0  A4D8               	btfss	status,2,c
  8282  0036B2  D7D9               	goto	l1431
  8283                           
  8284                           ;display.c: 290: cntr = 0;
  8285  0036B4  0E00               	movlw	0
  8286  0036B6  6E01               	movwf	__display_start@cntr,c
  8287                           
  8288                           ;display.c: 291: while(start_line2[cntr])
  8289  0036B8  D017               	goto	l1433
  8290  0036BA                     
  8291                           ;display.c: 292: display_content[1][cntr] = start_line2[cntr++];
  8292  0036BA  5001               	movf	__display_start@cntr,w,c
  8293  0036BC  0D01               	mullw	1
  8294  0036BE  0E77               	movlw	low _start_line2
  8295  0036C0  24F3               	addwf	prodl,w,c
  8296  0036C2  6EF6               	movwf	tblptrl,c
  8297  0036C4  0E8D               	movlw	high _start_line2
  8298  0036C6  20F4               	addwfc	prodh,w,c
  8299  0036C8  6EF7               	movwf	tblptrh,c
  8300  0036CA                     	if	1	;There are 3 active tblptr bytes
  8301  0036CA  6AF8               	clrf	tblptru,c
  8302  0036CC  0E00               	movlw	low (__mediumconst shr (0+16))
  8303  0036CE  22F8               	addwfc	tblptru,f,c
  8304  0036D0                     	endif
  8305  0036D0  5001               	movf	__display_start@cntr,w,c
  8306  0036D2  0D01               	mullw	1
  8307  0036D4  0E7C               	movlw	low (_display_content+20)
  8308  0036D6  24F3               	addwf	prodl,w,c
  8309  0036D8  6ED9               	movwf	fsr2l,c
  8310  0036DA  0E01               	movlw	high (_display_content+20)
  8311  0036DC  20F4               	addwfc	prodh,w,c
  8312  0036DE  6EDA               	movwf	fsr2h,c
  8313  0036E0  0008               	tblrd		*
  8314  0036E2  CFF5 FFDF          	movff	tablat,indf2
  8315  0036E6  2A01               	incf	__display_start@cntr,f,c
  8316  0036E8                     l1433:
  8317  0036E8  5001               	movf	__display_start@cntr,w,c
  8318  0036EA  0D01               	mullw	1
  8319  0036EC  0E77               	movlw	low _start_line2
  8320  0036EE  24F3               	addwf	prodl,w,c
  8321  0036F0  6EF6               	movwf	tblptrl,c
  8322  0036F2  0E8D               	movlw	high _start_line2
  8323  0036F4  20F4               	addwfc	prodh,w,c
  8324  0036F6  6EF7               	movwf	tblptrh,c
  8325  0036F8                     	if	1	;There are 3 active tblptr bytes
  8326  0036F8  6AF8               	clrf	tblptru,c
  8327  0036FA  0E00               	movlw	low (__mediumconst shr (0+16))
  8328  0036FC  22F8               	addwfc	tblptru,f,c
  8329  0036FE                     	endif
  8330  0036FE  0008               	tblrd		*
  8331  003700  50F5               	movf	tablat,w,c
  8332  003702  0900               	iorlw	0
  8333  003704  A4D8               	btfss	status,2,c
  8334  003706  D7D9               	goto	l1434
  8335                           
  8336                           ;display.c: 293: cntr = 0;
  8337  003708  0E00               	movlw	0
  8338  00370A  6E01               	movwf	__display_start@cntr,c
  8339                           
  8340                           ;display.c: 294: while(start_line3[cntr])
  8341  00370C  D017               	goto	l1436
  8342  00370E                     
  8343                           ;display.c: 295: display_content[2][cntr] = start_line3[cntr++];
  8344  00370E  5001               	movf	__display_start@cntr,w,c
  8345  003710  0D01               	mullw	1
  8346  003712  0EF6               	movlw	low _start_line3
  8347  003714  24F3               	addwf	prodl,w,c
  8348  003716  6EF6               	movwf	tblptrl,c
  8349  003718  0E8C               	movlw	high _start_line3
  8350  00371A  20F4               	addwfc	prodh,w,c
  8351  00371C  6EF7               	movwf	tblptrh,c
  8352  00371E                     	if	1	;There are 3 active tblptr bytes
  8353  00371E  6AF8               	clrf	tblptru,c
  8354  003720  0E00               	movlw	low (__mediumconst shr (0+16))
  8355  003722  22F8               	addwfc	tblptru,f,c
  8356  003724                     	endif
  8357  003724  5001               	movf	__display_start@cntr,w,c
  8358  003726  0D01               	mullw	1
  8359  003728  0E90               	movlw	low (_display_content+40)
  8360  00372A  24F3               	addwf	prodl,w,c
  8361  00372C  6ED9               	movwf	fsr2l,c
  8362  00372E  0E01               	movlw	high (_display_content+40)
  8363  003730  20F4               	addwfc	prodh,w,c
  8364  003732  6EDA               	movwf	fsr2h,c
  8365  003734  0008               	tblrd		*
  8366  003736  CFF5 FFDF          	movff	tablat,indf2
  8367  00373A  2A01               	incf	__display_start@cntr,f,c
  8368  00373C                     l1436:
  8369  00373C  5001               	movf	__display_start@cntr,w,c
  8370  00373E  0D01               	mullw	1
  8371  003740  0EF6               	movlw	low _start_line3
  8372  003742  24F3               	addwf	prodl,w,c
  8373  003744  6EF6               	movwf	tblptrl,c
  8374  003746  0E8C               	movlw	high _start_line3
  8375  003748  20F4               	addwfc	prodh,w,c
  8376  00374A  6EF7               	movwf	tblptrh,c
  8377  00374C                     	if	1	;There are 3 active tblptr bytes
  8378  00374C  6AF8               	clrf	tblptru,c
  8379  00374E  0E00               	movlw	low (__mediumconst shr (0+16))
  8380  003750  22F8               	addwfc	tblptru,f,c
  8381  003752                     	endif
  8382  003752  0008               	tblrd		*
  8383  003754  50F5               	movf	tablat,w,c
  8384  003756  0900               	iorlw	0
  8385  003758  A4D8               	btfss	status,2,c
  8386  00375A  D7D9               	goto	l1437
  8387                           
  8388                           ;display.c: 296: cntr = 0;
  8389  00375C  0E00               	movlw	0
  8390  00375E  6E01               	movwf	__display_start@cntr,c
  8391                           
  8392                           ;display.c: 297: while(start_line4[cntr])
  8393  003760  D017               	goto	l1439
  8394  003762                     
  8395                           ;display.c: 298: display_content[3][cntr] = start_line4[cntr++];
  8396  003762  5001               	movf	__display_start@cntr,w,c
  8397  003764  0D01               	mullw	1
  8398  003766  0E62               	movlw	low _start_line4
  8399  003768  24F3               	addwf	prodl,w,c
  8400  00376A  6EF6               	movwf	tblptrl,c
  8401  00376C  0E8E               	movlw	high _start_line4
  8402  00376E  20F4               	addwfc	prodh,w,c
  8403  003770  6EF7               	movwf	tblptrh,c
  8404  003772                     	if	1	;There are 3 active tblptr bytes
  8405  003772  6AF8               	clrf	tblptru,c
  8406  003774  0E00               	movlw	low (__mediumconst shr (0+16))
  8407  003776  22F8               	addwfc	tblptru,f,c
  8408  003778                     	endif
  8409  003778  5001               	movf	__display_start@cntr,w,c
  8410  00377A  0D01               	mullw	1
  8411  00377C  0EA4               	movlw	low (_display_content+60)
  8412  00377E  24F3               	addwf	prodl,w,c
  8413  003780  6ED9               	movwf	fsr2l,c
  8414  003782  0E01               	movlw	high (_display_content+60)
  8415  003784  20F4               	addwfc	prodh,w,c
  8416  003786  6EDA               	movwf	fsr2h,c
  8417  003788  0008               	tblrd		*
  8418  00378A  CFF5 FFDF          	movff	tablat,indf2
  8419  00378E  2A01               	incf	__display_start@cntr,f,c
  8420  003790                     l1439:
  8421  003790  5001               	movf	__display_start@cntr,w,c
  8422  003792  0D01               	mullw	1
  8423  003794  0E62               	movlw	low _start_line4
  8424  003796  24F3               	addwf	prodl,w,c
  8425  003798  6EF6               	movwf	tblptrl,c
  8426  00379A  0E8E               	movlw	high _start_line4
  8427  00379C  20F4               	addwfc	prodh,w,c
  8428  00379E  6EF7               	movwf	tblptrh,c
  8429  0037A0                     	if	1	;There are 3 active tblptr bytes
  8430  0037A0  6AF8               	clrf	tblptru,c
  8431  0037A2  0E00               	movlw	low (__mediumconst shr (0+16))
  8432  0037A4  22F8               	addwfc	tblptru,f,c
  8433  0037A6                     	endif
  8434  0037A6  0008               	tblrd		*
  8435  0037A8  50F5               	movf	tablat,w,c
  8436  0037AA  0900               	iorlw	0
  8437  0037AC  B4D8               	btfsc	status,2,c
  8438  0037AE  0012               	return	
  8439  0037B0  D7D8               	goto	l1440
  8440  0037B2                     __end_of__display_start:
  8441                           	opt stack 0
  8442                           tblptru	equ	0xFF8
  8443                           tblptrh	equ	0xFF7
  8444                           tblptrl	equ	0xFF6
  8445                           tablat	equ	0xFF5
  8446                           prodh	equ	0xFF4
  8447                           prodl	equ	0xFF3
  8448                           intcon	equ	0xFF2
  8449                           intcon2	equ	0xFF1
  8450                           intcon3	equ	0xFF0
  8451                           postinc0	equ	0xFEE
  8452                           wreg	equ	0xFE8
  8453                           postdec1	equ	0xFE5
  8454                           plusw1	equ	0xFE3
  8455                           fsr1h	equ	0xFE2
  8456                           fsr1l	equ	0xFE1
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           plusw2	equ	0xFDB
  8460                           fsr2h	equ	0xFDA
  8461                           fsr2l	equ	0xFD9
  8462                           status	equ	0xFD8
  8463                           
  8464 ;; *************** function __display_programming *****************
  8465 ;; Defined at:
  8466 ;;		line 416 in file "display.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;		None
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  cntr            1   30[COMRAM] unsigned char 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  1    wreg      void 
  8473 ;; Registers used:
  8474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8484 ;;Total ram usage:        1 bytes
  8485 ;; Hardware stack levels used:    1
  8486 ;; Hardware stack levels required when called:    4
  8487 ;; This function calls:
  8488 ;;		__display_itoa_u16
  8489 ;;		_bootloader_get_entries
  8490 ;;		_bootloader_get_flashPagesWritten
  8491 ;;		_bootloader_get_total_entries
  8492 ;; This function is called by:
  8493 ;;		_display_prepare
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text36
  8498  002CC6                     __ptext36:
  8499                           	opt stack 0
  8500  002CC6                     __display_programming:
  8501                           	opt stack 25
  8502                           
  8503                           ;display.c: 418: uint8_t cntr;;display.c: 419: cntr = 0;
  8504                           
  8505                           ;incstack = 0
  8506  002CC6  0E00               	movlw	0
  8507  002CC8  6E1F               	movwf	__display_programming@cntr,c
  8508                           
  8509                           ;display.c: 420: while(programming_line1[cntr])
  8510  002CCA  D017               	goto	l1524
  8511  002CCC                     
  8512                           ;display.c: 421: display_content[0][cntr] = programming_line1[cntr++];
  8513  002CCC  501F               	movf	__display_programming@cntr,w,c
  8514  002CCE  0D01               	mullw	1
  8515  002CD0  0ED9               	movlw	low _programming_line1
  8516  002CD2  24F3               	addwf	prodl,w,c
  8517  002CD4  6EF6               	movwf	tblptrl,c
  8518  002CD6  0E8D               	movlw	high _programming_line1
  8519  002CD8  20F4               	addwfc	prodh,w,c
  8520  002CDA  6EF7               	movwf	tblptrh,c
  8521  002CDC                     	if	1	;There are 3 active tblptr bytes
  8522  002CDC  6AF8               	clrf	tblptru,c
  8523  002CDE  0E00               	movlw	low (__mediumconst shr (0+16))
  8524  002CE0  22F8               	addwfc	tblptru,f,c
  8525  002CE2                     	endif
  8526  002CE2  501F               	movf	__display_programming@cntr,w,c
  8527  002CE4  0D01               	mullw	1
  8528  002CE6  0E68               	movlw	low _display_content
  8529  002CE8  24F3               	addwf	prodl,w,c
  8530  002CEA  6ED9               	movwf	fsr2l,c
  8531  002CEC  0E01               	movlw	high _display_content
  8532  002CEE  20F4               	addwfc	prodh,w,c
  8533  002CF0  6EDA               	movwf	fsr2h,c
  8534  002CF2  0008               	tblrd		*
  8535  002CF4  CFF5 FFDF          	movff	tablat,indf2
  8536  002CF8  2A1F               	incf	__display_programming@cntr,f,c
  8537  002CFA                     l1524:
  8538  002CFA  501F               	movf	__display_programming@cntr,w,c
  8539  002CFC  0D01               	mullw	1
  8540  002CFE  0ED9               	movlw	low _programming_line1
  8541  002D00  24F3               	addwf	prodl,w,c
  8542  002D02  6EF6               	movwf	tblptrl,c
  8543  002D04  0E8D               	movlw	high _programming_line1
  8544  002D06  20F4               	addwfc	prodh,w,c
  8545  002D08  6EF7               	movwf	tblptrh,c
  8546  002D0A                     	if	1	;There are 3 active tblptr bytes
  8547  002D0A  6AF8               	clrf	tblptru,c
  8548  002D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  8549  002D0E  22F8               	addwfc	tblptru,f,c
  8550  002D10                     	endif
  8551  002D10  0008               	tblrd		*
  8552  002D12  50F5               	movf	tablat,w,c
  8553  002D14  0900               	iorlw	0
  8554  002D16  A4D8               	btfss	status,2,c
  8555  002D18  D7D9               	goto	l1525
  8556                           
  8557                           ;display.c: 423: cntr = 0;
  8558  002D1A  0E00               	movlw	0
  8559  002D1C  6E1F               	movwf	__display_programming@cntr,c
  8560                           
  8561                           ;display.c: 424: while(programming_line2[cntr])
  8562  002D1E  D017               	goto	l1527
  8563  002D20                     
  8564                           ;display.c: 425: display_content[1][cntr] = programming_line2[cntr++];
  8565  002D20  501F               	movf	__display_programming@cntr,w,c
  8566  002D22  0D01               	mullw	1
  8567  002D24  0E30               	movlw	low _programming_line2
  8568  002D26  24F3               	addwf	prodl,w,c
  8569  002D28  6EF6               	movwf	tblptrl,c
  8570  002D2A  0E8D               	movlw	high _programming_line2
  8571  002D2C  20F4               	addwfc	prodh,w,c
  8572  002D2E  6EF7               	movwf	tblptrh,c
  8573  002D30                     	if	1	;There are 3 active tblptr bytes
  8574  002D30  6AF8               	clrf	tblptru,c
  8575  002D32  0E00               	movlw	low (__mediumconst shr (0+16))
  8576  002D34  22F8               	addwfc	tblptru,f,c
  8577  002D36                     	endif
  8578  002D36  501F               	movf	__display_programming@cntr,w,c
  8579  002D38  0D01               	mullw	1
  8580  002D3A  0E7C               	movlw	low (_display_content+20)
  8581  002D3C  24F3               	addwf	prodl,w,c
  8582  002D3E  6ED9               	movwf	fsr2l,c
  8583  002D40  0E01               	movlw	high (_display_content+20)
  8584  002D42  20F4               	addwfc	prodh,w,c
  8585  002D44  6EDA               	movwf	fsr2h,c
  8586  002D46  0008               	tblrd		*
  8587  002D48  CFF5 FFDF          	movff	tablat,indf2
  8588  002D4C  2A1F               	incf	__display_programming@cntr,f,c
  8589  002D4E                     l1527:
  8590  002D4E  501F               	movf	__display_programming@cntr,w,c
  8591  002D50  0D01               	mullw	1
  8592  002D52  0E30               	movlw	low _programming_line2
  8593  002D54  24F3               	addwf	prodl,w,c
  8594  002D56  6EF6               	movwf	tblptrl,c
  8595  002D58  0E8D               	movlw	high _programming_line2
  8596  002D5A  20F4               	addwfc	prodh,w,c
  8597  002D5C  6EF7               	movwf	tblptrh,c
  8598  002D5E                     	if	1	;There are 3 active tblptr bytes
  8599  002D5E  6AF8               	clrf	tblptru,c
  8600  002D60  0E00               	movlw	low (__mediumconst shr (0+16))
  8601  002D62  22F8               	addwfc	tblptru,f,c
  8602  002D64                     	endif
  8603  002D64  0008               	tblrd		*
  8604  002D66  50F5               	movf	tablat,w,c
  8605  002D68  0900               	iorlw	0
  8606  002D6A  A4D8               	btfss	status,2,c
  8607  002D6C  D7D9               	goto	l1528
  8608                           
  8609                           ;display.c: 427: cntr = 0;
  8610  002D6E  0E00               	movlw	0
  8611  002D70  6E1F               	movwf	__display_programming@cntr,c
  8612                           
  8613                           ;display.c: 428: while(programming_line3[cntr])
  8614  002D72  D017               	goto	l1530
  8615  002D74                     
  8616                           ;display.c: 429: display_content[2][cntr] = programming_line3[cntr++];
  8617  002D74  501F               	movf	__display_programming@cntr,w,c
  8618  002D76  0D01               	mullw	1
  8619  002D78  0E83               	movlw	low _programming_line3
  8620  002D7A  24F3               	addwf	prodl,w,c
  8621  002D7C  6EF6               	movwf	tblptrl,c
  8622  002D7E  0E8E               	movlw	high _programming_line3
  8623  002D80  20F4               	addwfc	prodh,w,c
  8624  002D82  6EF7               	movwf	tblptrh,c
  8625  002D84                     	if	1	;There are 3 active tblptr bytes
  8626  002D84  6AF8               	clrf	tblptru,c
  8627  002D86  0E00               	movlw	low (__mediumconst shr (0+16))
  8628  002D88  22F8               	addwfc	tblptru,f,c
  8629  002D8A                     	endif
  8630  002D8A  501F               	movf	__display_programming@cntr,w,c
  8631  002D8C  0D01               	mullw	1
  8632  002D8E  0E90               	movlw	low (_display_content+40)
  8633  002D90  24F3               	addwf	prodl,w,c
  8634  002D92  6ED9               	movwf	fsr2l,c
  8635  002D94  0E01               	movlw	high (_display_content+40)
  8636  002D96  20F4               	addwfc	prodh,w,c
  8637  002D98  6EDA               	movwf	fsr2h,c
  8638  002D9A  0008               	tblrd		*
  8639  002D9C  CFF5 FFDF          	movff	tablat,indf2
  8640  002DA0  2A1F               	incf	__display_programming@cntr,f,c
  8641  002DA2                     l1530:
  8642  002DA2  501F               	movf	__display_programming@cntr,w,c
  8643  002DA4  0D01               	mullw	1
  8644  002DA6  0E83               	movlw	low _programming_line3
  8645  002DA8  24F3               	addwf	prodl,w,c
  8646  002DAA  6EF6               	movwf	tblptrl,c
  8647  002DAC  0E8E               	movlw	high _programming_line3
  8648  002DAE  20F4               	addwfc	prodh,w,c
  8649  002DB0  6EF7               	movwf	tblptrh,c
  8650  002DB2                     	if	1	;There are 3 active tblptr bytes
  8651  002DB2  6AF8               	clrf	tblptru,c
  8652  002DB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8653  002DB6  22F8               	addwfc	tblptru,f,c
  8654  002DB8                     	endif
  8655  002DB8  0008               	tblrd		*
  8656  002DBA  50F5               	movf	tablat,w,c
  8657  002DBC  0900               	iorlw	0
  8658  002DBE  A4D8               	btfss	status,2,c
  8659  002DC0  D7D9               	goto	l1531
  8660                           
  8661                           ;display.c: 430: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
  8662  002DC2  EC2F  F03D         	call	_bootloader_get_entries	;wreg free
  8663  002DC6  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8664  002DCA  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8665  002DCE  6A1B               	clrf	__display_itoa_u16@value+2,c
  8666  002DD0  6A1C               	clrf	__display_itoa_u16@value+3,c
  8667  002DD2  501F               	movf	__display_programming@cntr,w,c
  8668  002DD4  0D01               	mullw	1
  8669  002DD6  0E90               	movlw	low (_display_content+40)
  8670  002DD8  24F3               	addwf	prodl,w,c
  8671  002DDA  6E1D               	movwf	__display_itoa_u16@text,c
  8672  002DDC  0E01               	movlw	high (_display_content+40)
  8673  002DDE  20F4               	addwfc	prodh,w,c
  8674  002DE0  6E1E               	movwf	__display_itoa_u16@text+1,c
  8675  002DE2  EC38  F027         	call	__display_itoa_u16	;wreg free
  8676  002DE6  261F               	addwf	__display_programming@cntr,f,c
  8677                           
  8678                           ;display.c: 431: display_content[2][cntr++] = '/';
  8679  002DE8  501F               	movf	__display_programming@cntr,w,c
  8680  002DEA  0D01               	mullw	1
  8681  002DEC  0E90               	movlw	low (_display_content+40)
  8682  002DEE  24F3               	addwf	prodl,w,c
  8683  002DF0  6ED9               	movwf	fsr2l,c
  8684  002DF2  0E01               	movlw	high (_display_content+40)
  8685  002DF4  20F4               	addwfc	prodh,w,c
  8686  002DF6  6EDA               	movwf	fsr2h,c
  8687  002DF8  0E2F               	movlw	47
  8688  002DFA  6EDF               	movwf	indf2,c
  8689  002DFC  2A1F               	incf	__display_programming@cntr,f,c
  8690                           
  8691                           ;display.c: 432: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
  8692  002DFE  EC1B  F03D         	call	_bootloader_get_total_entries	;wreg free
  8693  002E02  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
  8694  002E06  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
  8695  002E0A  6A1B               	clrf	__display_itoa_u16@value+2,c
  8696  002E0C  6A1C               	clrf	__display_itoa_u16@value+3,c
  8697  002E0E  501F               	movf	__display_programming@cntr,w,c
  8698  002E10  0D01               	mullw	1
  8699  002E12  0E90               	movlw	low (_display_content+40)
  8700  002E14  24F3               	addwf	prodl,w,c
  8701  002E16  6E1D               	movwf	__display_itoa_u16@text,c
  8702  002E18  0E01               	movlw	high (_display_content+40)
  8703  002E1A  20F4               	addwfc	prodh,w,c
  8704  002E1C  6E1E               	movwf	__display_itoa_u16@text+1,c
  8705  002E1E  EC38  F027         	call	__display_itoa_u16	;wreg free
  8706                           
  8707                           ;display.c: 434: cntr = 0;
  8708  002E22  0E00               	movlw	0
  8709  002E24  6E1F               	movwf	__display_programming@cntr,c
  8710                           
  8711                           ;display.c: 435: while(programming_line4[cntr])
  8712  002E26  D017               	goto	l1533
  8713  002E28                     
  8714                           ;display.c: 436: display_content[3][cntr] = programming_line4[cntr++];
  8715  002E28  501F               	movf	__display_programming@cntr,w,c
  8716  002E2A  0D01               	mullw	1
  8717  002E2C  0EC9               	movlw	low _programming_line4
  8718  002E2E  24F3               	addwf	prodl,w,c
  8719  002E30  6EF6               	movwf	tblptrl,c
  8720  002E32  0E8D               	movlw	high _programming_line4
  8721  002E34  20F4               	addwfc	prodh,w,c
  8722  002E36  6EF7               	movwf	tblptrh,c
  8723  002E38                     	if	1	;There are 3 active tblptr bytes
  8724  002E38  6AF8               	clrf	tblptru,c
  8725  002E3A  0E00               	movlw	low (__mediumconst shr (0+16))
  8726  002E3C  22F8               	addwfc	tblptru,f,c
  8727  002E3E                     	endif
  8728  002E3E  501F               	movf	__display_programming@cntr,w,c
  8729  002E40  0D01               	mullw	1
  8730  002E42  0EA4               	movlw	low (_display_content+60)
  8731  002E44  24F3               	addwf	prodl,w,c
  8732  002E46  6ED9               	movwf	fsr2l,c
  8733  002E48  0E01               	movlw	high (_display_content+60)
  8734  002E4A  20F4               	addwfc	prodh,w,c
  8735  002E4C  6EDA               	movwf	fsr2h,c
  8736  002E4E  0008               	tblrd		*
  8737  002E50  CFF5 FFDF          	movff	tablat,indf2
  8738  002E54  2A1F               	incf	__display_programming@cntr,f,c
  8739  002E56                     l1533:
  8740  002E56  501F               	movf	__display_programming@cntr,w,c
  8741  002E58  0D01               	mullw	1
  8742  002E5A  0EC9               	movlw	low _programming_line4
  8743  002E5C  24F3               	addwf	prodl,w,c
  8744  002E5E  6EF6               	movwf	tblptrl,c
  8745  002E60  0E8D               	movlw	high _programming_line4
  8746  002E62  20F4               	addwfc	prodh,w,c
  8747  002E64  6EF7               	movwf	tblptrh,c
  8748  002E66                     	if	1	;There are 3 active tblptr bytes
  8749  002E66  6AF8               	clrf	tblptru,c
  8750  002E68  0E00               	movlw	low (__mediumconst shr (0+16))
  8751  002E6A  22F8               	addwfc	tblptru,f,c
  8752  002E6C                     	endif
  8753  002E6C  0008               	tblrd		*
  8754  002E6E  50F5               	movf	tablat,w,c
  8755  002E70  0900               	iorlw	0
  8756  002E72  A4D8               	btfss	status,2,c
  8757  002E74  D7D9               	goto	l1534
  8758                           
  8759                           ;display.c: 437: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
  8760  002E76  EC2A  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
  8761  002E7A  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
  8762  002E7E  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
  8763  002E82  6A1B               	clrf	__display_itoa_u16@value+2,c
  8764  002E84  6A1C               	clrf	__display_itoa_u16@value+3,c
  8765  002E86  501F               	movf	__display_programming@cntr,w,c
  8766  002E88  0D01               	mullw	1
  8767  002E8A  0EA4               	movlw	low (_display_content+60)
  8768  002E8C  24F3               	addwf	prodl,w,c
  8769  002E8E  6E1D               	movwf	__display_itoa_u16@text,c
  8770  002E90  0E01               	movlw	high (_display_content+60)
  8771  002E92  20F4               	addwfc	prodh,w,c
  8772  002E94  6E1E               	movwf	__display_itoa_u16@text+1,c
  8773  002E96  EC38  F027         	call	__display_itoa_u16	;wreg free
  8774  002E9A  0012               	return		;funcret
  8775  002E9C                     __end_of__display_programming:
  8776                           	opt stack 0
  8777                           tblptru	equ	0xFF8
  8778                           tblptrh	equ	0xFF7
  8779                           tblptrl	equ	0xFF6
  8780                           tablat	equ	0xFF5
  8781                           prodh	equ	0xFF4
  8782                           prodl	equ	0xFF3
  8783                           intcon	equ	0xFF2
  8784                           intcon2	equ	0xFF1
  8785                           intcon3	equ	0xFF0
  8786                           postinc0	equ	0xFEE
  8787                           wreg	equ	0xFE8
  8788                           postdec1	equ	0xFE5
  8789                           plusw1	equ	0xFE3
  8790                           fsr1h	equ	0xFE2
  8791                           fsr1l	equ	0xFE1
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           plusw2	equ	0xFDB
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function __display_found *****************
  8800 ;; Defined at:
  8801 ;;		line 301 in file "display.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  cntr            1   39[COMRAM] unsigned char 
  8806 ;;  start           1   38[COMRAM] unsigned char 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;Total ram usage:        4 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:    5
  8823 ;; This function calls:
  8824 ;;		__display_itoa_u32
  8825 ;;		_bootloader_get_file_size
  8826 ;; This function is called by:
  8827 ;;		_display_prepare
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text37
  8832  002910                     __ptext37:
  8833                           	opt stack 0
  8834  002910                     __display_found:
  8835                           	opt stack 24
  8836                           
  8837                           ;display.c: 303: uint8_t cntr;;display.c: 304: uint8_t start;;display.c: 306: cntr = 0;
  8838                           
  8839                           ;incstack = 0
  8840  002910  0E00               	movlw	0
  8841  002912  6E28               	movwf	__display_found@cntr,c
  8842                           
  8843                           ;display.c: 307: while(found_line1[cntr])
  8844  002914  D017               	goto	l1445
  8845  002916                     
  8846                           ;display.c: 308: display_content[0][cntr] = found_line1[cntr++];
  8847  002916  5028               	movf	__display_found@cntr,w,c
  8848  002918  0D01               	mullw	1
  8849  00291A  0E19               	movlw	low _found_line1
  8850  00291C  24F3               	addwf	prodl,w,c
  8851  00291E  6EF6               	movwf	tblptrl,c
  8852  002920  0E8E               	movlw	high _found_line1
  8853  002922  20F4               	addwfc	prodh,w,c
  8854  002924  6EF7               	movwf	tblptrh,c
  8855  002926                     	if	1	;There are 3 active tblptr bytes
  8856  002926  6AF8               	clrf	tblptru,c
  8857  002928  0E00               	movlw	low (__mediumconst shr (0+16))
  8858  00292A  22F8               	addwfc	tblptru,f,c
  8859  00292C                     	endif
  8860  00292C  5028               	movf	__display_found@cntr,w,c
  8861  00292E  0D01               	mullw	1
  8862  002930  0E68               	movlw	low _display_content
  8863  002932  24F3               	addwf	prodl,w,c
  8864  002934  6ED9               	movwf	fsr2l,c
  8865  002936  0E01               	movlw	high _display_content
  8866  002938  20F4               	addwfc	prodh,w,c
  8867  00293A  6EDA               	movwf	fsr2h,c
  8868  00293C  0008               	tblrd		*
  8869  00293E  CFF5 FFDF          	movff	tablat,indf2
  8870  002942  2A28               	incf	__display_found@cntr,f,c
  8871  002944                     l1445:
  8872  002944  5028               	movf	__display_found@cntr,w,c
  8873  002946  0D01               	mullw	1
  8874  002948  0E19               	movlw	low _found_line1
  8875  00294A  24F3               	addwf	prodl,w,c
  8876  00294C  6EF6               	movwf	tblptrl,c
  8877  00294E  0E8E               	movlw	high _found_line1
  8878  002950  20F4               	addwfc	prodh,w,c
  8879  002952  6EF7               	movwf	tblptrh,c
  8880  002954                     	if	1	;There are 3 active tblptr bytes
  8881  002954  6AF8               	clrf	tblptru,c
  8882  002956  0E00               	movlw	low (__mediumconst shr (0+16))
  8883  002958  22F8               	addwfc	tblptru,f,c
  8884  00295A                     	endif
  8885  00295A  0008               	tblrd		*
  8886  00295C  50F5               	movf	tablat,w,c
  8887  00295E  0900               	iorlw	0
  8888  002960  A4D8               	btfss	status,2,c
  8889  002962  D7D9               	goto	l1446
  8890                           
  8891                           ;display.c: 310: cntr = 0;
  8892  002964  0E00               	movlw	0
  8893  002966  6E28               	movwf	__display_found@cntr,c
  8894                           
  8895                           ;display.c: 311: while(found_line2[cntr])
  8896  002968  D017               	goto	l1448
  8897  00296A                     
  8898                           ;display.c: 312: display_content[1][cntr] = found_line2[cntr++];
  8899  00296A  5028               	movf	__display_found@cntr,w,c
  8900  00296C  0D01               	mullw	1
  8901  00296E  0E1D               	movlw	low _found_line2
  8902  002970  24F3               	addwf	prodl,w,c
  8903  002972  6EF6               	movwf	tblptrl,c
  8904  002974  0E8D               	movlw	high _found_line2
  8905  002976  20F4               	addwfc	prodh,w,c
  8906  002978  6EF7               	movwf	tblptrh,c
  8907  00297A                     	if	1	;There are 3 active tblptr bytes
  8908  00297A  6AF8               	clrf	tblptru,c
  8909  00297C  0E00               	movlw	low (__mediumconst shr (0+16))
  8910  00297E  22F8               	addwfc	tblptru,f,c
  8911  002980                     	endif
  8912  002980  5028               	movf	__display_found@cntr,w,c
  8913  002982  0D01               	mullw	1
  8914  002984  0E7C               	movlw	low (_display_content+20)
  8915  002986  24F3               	addwf	prodl,w,c
  8916  002988  6ED9               	movwf	fsr2l,c
  8917  00298A  0E01               	movlw	high (_display_content+20)
  8918  00298C  20F4               	addwfc	prodh,w,c
  8919  00298E  6EDA               	movwf	fsr2h,c
  8920  002990  0008               	tblrd		*
  8921  002992  CFF5 FFDF          	movff	tablat,indf2
  8922  002996  2A28               	incf	__display_found@cntr,f,c
  8923  002998                     l1448:
  8924  002998  5028               	movf	__display_found@cntr,w,c
  8925  00299A  0D01               	mullw	1
  8926  00299C  0E1D               	movlw	low _found_line2
  8927  00299E  24F3               	addwf	prodl,w,c
  8928  0029A0  6EF6               	movwf	tblptrl,c
  8929  0029A2  0E8D               	movlw	high _found_line2
  8930  0029A4  20F4               	addwfc	prodh,w,c
  8931  0029A6  6EF7               	movwf	tblptrh,c
  8932  0029A8                     	if	1	;There are 3 active tblptr bytes
  8933  0029A8  6AF8               	clrf	tblptru,c
  8934  0029AA  0E00               	movlw	low (__mediumconst shr (0+16))
  8935  0029AC  22F8               	addwfc	tblptru,f,c
  8936  0029AE                     	endif
  8937  0029AE  0008               	tblrd		*
  8938  0029B0  50F5               	movf	tablat,w,c
  8939  0029B2  0900               	iorlw	0
  8940  0029B4  A4D8               	btfss	status,2,c
  8941  0029B6  D7D9               	goto	l1449
  8942                           
  8943                           ;display.c: 314: cntr = 0;
  8944  0029B8  0E00               	movlw	0
  8945  0029BA  6E28               	movwf	__display_found@cntr,c
  8946                           
  8947                           ;display.c: 315: while(found_line3[cntr])
  8948  0029BC  D017               	goto	l1451
  8949  0029BE                     
  8950                           ;display.c: 316: display_content[2][cntr] = found_line3[cntr++];
  8951  0029BE  5028               	movf	__display_found@cntr,w,c
  8952  0029C0  0D01               	mullw	1
  8953  0029C2  0E98               	movlw	low _found_line3
  8954  0029C4  24F3               	addwf	prodl,w,c
  8955  0029C6  6EF6               	movwf	tblptrl,c
  8956  0029C8  0E8E               	movlw	high _found_line3
  8957  0029CA  20F4               	addwfc	prodh,w,c
  8958  0029CC  6EF7               	movwf	tblptrh,c
  8959  0029CE                     	if	1	;There are 3 active tblptr bytes
  8960  0029CE  6AF8               	clrf	tblptru,c
  8961  0029D0  0E00               	movlw	low (__mediumconst shr (0+16))
  8962  0029D2  22F8               	addwfc	tblptru,f,c
  8963  0029D4                     	endif
  8964  0029D4  5028               	movf	__display_found@cntr,w,c
  8965  0029D6  0D01               	mullw	1
  8966  0029D8  0E90               	movlw	low (_display_content+40)
  8967  0029DA  24F3               	addwf	prodl,w,c
  8968  0029DC  6ED9               	movwf	fsr2l,c
  8969  0029DE  0E01               	movlw	high (_display_content+40)
  8970  0029E0  20F4               	addwfc	prodh,w,c
  8971  0029E2  6EDA               	movwf	fsr2h,c
  8972  0029E4  0008               	tblrd		*
  8973  0029E6  CFF5 FFDF          	movff	tablat,indf2
  8974  0029EA  2A28               	incf	__display_found@cntr,f,c
  8975  0029EC                     l1451:
  8976  0029EC  5028               	movf	__display_found@cntr,w,c
  8977  0029EE  0D01               	mullw	1
  8978  0029F0  0E98               	movlw	low _found_line3
  8979  0029F2  24F3               	addwf	prodl,w,c
  8980  0029F4  6EF6               	movwf	tblptrl,c
  8981  0029F6  0E8E               	movlw	high _found_line3
  8982  0029F8  20F4               	addwfc	prodh,w,c
  8983  0029FA  6EF7               	movwf	tblptrh,c
  8984  0029FC                     	if	1	;There are 3 active tblptr bytes
  8985  0029FC  6AF8               	clrf	tblptru,c
  8986  0029FE  0E00               	movlw	low (__mediumconst shr (0+16))
  8987  002A00  22F8               	addwfc	tblptru,f,c
  8988  002A02                     	endif
  8989  002A02  0008               	tblrd		*
  8990  002A04  50F5               	movf	tablat,w,c
  8991  002A06  0900               	iorlw	0
  8992  002A08  A4D8               	btfss	status,2,c
  8993  002A0A  D7D9               	goto	l1452
  8994                           
  8995                           ;display.c: 317: start = cntr;
  8996  002A0C  C028  F027         	movff	__display_found@cntr,__display_found@start
  8997                           
  8998                           ;display.c: 318: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
  8999  002A10  ECCD  F03C         	call	_bootloader_get_file_size	;wreg free
  9000  002A14  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
  9001  002A18  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
  9002  002A1C  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
  9003  002A20  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
  9004  002A24  5028               	movf	__display_found@cntr,w,c
  9005  002A26  0D01               	mullw	1
  9006  002A28  0E90               	movlw	low (_display_content+40)
  9007  002A2A  24F3               	addwf	prodl,w,c
  9008  002A2C  6E23               	movwf	__display_itoa_u32@text,c
  9009  002A2E  0E01               	movlw	high (_display_content+40)
  9010  002A30  20F4               	addwfc	prodh,w,c
  9011  002A32  6E24               	movwf	__display_itoa_u32@text+1,c
  9012  002A34  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9013  002A38  2627               	addwf	__display_found@start,f,c
  9014                           
  9015                           ;display.c: 319: cntr = 0;
  9016  002A3A  0E00               	movlw	0
  9017  002A3C  6E28               	movwf	__display_found@cntr,c
  9018                           
  9019                           ;display.c: 320: while(found_line3b[cntr])
  9020  002A3E  D01C               	goto	l1454
  9021  002A40                     
  9022                           ;display.c: 321: display_content[2][start+cntr] = found_line3b[cntr++];
  9023  002A40  5028               	movf	__display_found@cntr,w,c
  9024  002A42  0D01               	mullw	1
  9025  002A44  0E91               	movlw	low _found_line3b
  9026  002A46  24F3               	addwf	prodl,w,c
  9027  002A48  6EF6               	movwf	tblptrl,c
  9028  002A4A  0E8E               	movlw	high _found_line3b
  9029  002A4C  20F4               	addwfc	prodh,w,c
  9030  002A4E  6EF7               	movwf	tblptrh,c
  9031  002A50                     	if	1	;There are 3 active tblptr bytes
  9032  002A50  6AF8               	clrf	tblptru,c
  9033  002A52  0E00               	movlw	low (__mediumconst shr (0+16))
  9034  002A54  22F8               	addwfc	tblptru,f,c
  9035  002A56                     	endif
  9036  002A56  5028               	movf	__display_found@cntr,w,c
  9037  002A58  C027  F025         	movff	__display_found@start,??__display_found
  9038  002A5C  6A26               	clrf	(??__display_found+1)& (0+255),c
  9039  002A5E  2625               	addwf	??__display_found,f,c
  9040  002A60  0E00               	movlw	0
  9041  002A62  2226               	addwfc	??__display_found+1,f,c
  9042  002A64  0E90               	movlw	low (_display_content+40)
  9043  002A66  2425               	addwf	??__display_found,w,c
  9044  002A68  6ED9               	movwf	fsr2l,c
  9045  002A6A  0E01               	movlw	high (_display_content+40)
  9046  002A6C  2026               	addwfc	??__display_found+1,w,c
  9047  002A6E  6EDA               	movwf	fsr2h,c
  9048  002A70  0008               	tblrd		*
  9049  002A72  CFF5 FFDF          	movff	tablat,indf2
  9050  002A76  2A28               	incf	__display_found@cntr,f,c
  9051  002A78                     l1454:
  9052  002A78  5028               	movf	__display_found@cntr,w,c
  9053  002A7A  0D01               	mullw	1
  9054  002A7C  0E91               	movlw	low _found_line3b
  9055  002A7E  24F3               	addwf	prodl,w,c
  9056  002A80  6EF6               	movwf	tblptrl,c
  9057  002A82  0E8E               	movlw	high _found_line3b
  9058  002A84  20F4               	addwfc	prodh,w,c
  9059  002A86  6EF7               	movwf	tblptrh,c
  9060  002A88                     	if	1	;There are 3 active tblptr bytes
  9061  002A88  6AF8               	clrf	tblptru,c
  9062  002A8A  0E00               	movlw	low (__mediumconst shr (0+16))
  9063  002A8C  22F8               	addwfc	tblptru,f,c
  9064  002A8E                     	endif
  9065  002A8E  0008               	tblrd		*
  9066  002A90  50F5               	movf	tablat,w,c
  9067  002A92  0900               	iorlw	0
  9068  002A94  A4D8               	btfss	status,2,c
  9069  002A96  D7D4               	goto	l1455
  9070                           
  9071                           ;display.c: 323: cntr = 0;
  9072  002A98  0E00               	movlw	0
  9073  002A9A  6E28               	movwf	__display_found@cntr,c
  9074                           
  9075                           ;display.c: 324: while(found_line4[cntr])
  9076  002A9C  D017               	goto	l1457
  9077  002A9E                     
  9078                           ;display.c: 325: display_content[3][cntr] = found_line4[cntr++];
  9079  002A9E  5028               	movf	__display_found@cntr,w,c
  9080  002AA0  0D01               	mullw	1
  9081  002AA2  0E54               	movlw	low _found_line4
  9082  002AA4  24F3               	addwf	prodl,w,c
  9083  002AA6  6EF6               	movwf	tblptrl,c
  9084  002AA8  0E8D               	movlw	high _found_line4
  9085  002AAA  20F4               	addwfc	prodh,w,c
  9086  002AAC  6EF7               	movwf	tblptrh,c
  9087  002AAE                     	if	1	;There are 3 active tblptr bytes
  9088  002AAE  6AF8               	clrf	tblptru,c
  9089  002AB0  0E00               	movlw	low (__mediumconst shr (0+16))
  9090  002AB2  22F8               	addwfc	tblptru,f,c
  9091  002AB4                     	endif
  9092  002AB4  5028               	movf	__display_found@cntr,w,c
  9093  002AB6  0D01               	mullw	1
  9094  002AB8  0EA4               	movlw	low (_display_content+60)
  9095  002ABA  24F3               	addwf	prodl,w,c
  9096  002ABC  6ED9               	movwf	fsr2l,c
  9097  002ABE  0E01               	movlw	high (_display_content+60)
  9098  002AC0  20F4               	addwfc	prodh,w,c
  9099  002AC2  6EDA               	movwf	fsr2h,c
  9100  002AC4  0008               	tblrd		*
  9101  002AC6  CFF5 FFDF          	movff	tablat,indf2
  9102  002ACA  2A28               	incf	__display_found@cntr,f,c
  9103  002ACC                     l1457:
  9104  002ACC  5028               	movf	__display_found@cntr,w,c
  9105  002ACE  0D01               	mullw	1
  9106  002AD0  0E54               	movlw	low _found_line4
  9107  002AD2  24F3               	addwf	prodl,w,c
  9108  002AD4  6EF6               	movwf	tblptrl,c
  9109  002AD6  0E8D               	movlw	high _found_line4
  9110  002AD8  20F4               	addwfc	prodh,w,c
  9111  002ADA  6EF7               	movwf	tblptrh,c
  9112  002ADC                     	if	1	;There are 3 active tblptr bytes
  9113  002ADC  6AF8               	clrf	tblptru,c
  9114  002ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  9115  002AE0  22F8               	addwfc	tblptru,f,c
  9116  002AE2                     	endif
  9117  002AE2  0008               	tblrd		*
  9118  002AE4  50F5               	movf	tablat,w,c
  9119  002AE6  0900               	iorlw	0
  9120  002AE8  B4D8               	btfsc	status,2,c
  9121  002AEA  0012               	return	
  9122  002AEC  D7D8               	goto	l1458
  9123  002AEE                     __end_of__display_found:
  9124                           	opt stack 0
  9125                           tblptru	equ	0xFF8
  9126                           tblptrh	equ	0xFF7
  9127                           tblptrl	equ	0xFF6
  9128                           tablat	equ	0xFF5
  9129                           prodh	equ	0xFF4
  9130                           prodl	equ	0xFF3
  9131                           intcon	equ	0xFF2
  9132                           intcon2	equ	0xFF1
  9133                           intcon3	equ	0xFF0
  9134                           postinc0	equ	0xFEE
  9135                           wreg	equ	0xFE8
  9136                           postdec1	equ	0xFE5
  9137                           plusw1	equ	0xFE3
  9138                           fsr1h	equ	0xFE2
  9139                           fsr1l	equ	0xFE1
  9140                           indf2	equ	0xFDF
  9141                           postinc2	equ	0xFDE
  9142                           plusw2	equ	0xFDB
  9143                           fsr2h	equ	0xFDA
  9144                           fsr2l	equ	0xFD9
  9145                           status	equ	0xFD8
  9146                           
  9147 ;; *************** function __display_failed *****************
  9148 ;; Defined at:
  9149 ;;		line 366 in file "display.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;  cntr            1   36[COMRAM] unsigned char 
  9154 ;;  start           1    0        unsigned char 
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      void 
  9157 ;; Registers used:
  9158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;Total ram usage:        1 bytes
  9169 ;; Hardware stack levels used:    1
  9170 ;; Hardware stack levels required when called:    5
  9171 ;; This function calls:
  9172 ;;		__display_itoa_u16
  9173 ;;		__display_itoa_u32
  9174 ;;		_bootloader_get_entries
  9175 ;;		_bootloader_get_error
  9176 ;;		_bootloader_get_rec_address
  9177 ;; This function is called by:
  9178 ;;		_display_prepare
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           	psect	text38
  9183  000F30                     __ptext38:
  9184                           	opt stack 0
  9185  000F30                     __display_failed:
  9186                           	opt stack 24
  9187                           
  9188                           ;display.c: 368: uint8_t cntr;;display.c: 369: uint8_t start;;display.c: 370: cntr = 0;
  9189                           
  9190                           ;incstack = 0
  9191  000F30  0E00               	movlw	0
  9192  000F32  6E25               	movwf	__display_failed@cntr,c
  9193                           
  9194                           ;display.c: 371: while(failed_line1[cntr])
  9195  000F34  D017               	goto	l1490
  9196  000F36                     
  9197                           ;display.c: 372: display_content[0][cntr] = failed_line1[cntr++];
  9198  000F36  5025               	movf	__display_failed@cntr,w,c
  9199  000F38  0D01               	mullw	1
  9200  000F3A  0EE9               	movlw	low _failed_line1
  9201  000F3C  24F3               	addwf	prodl,w,c
  9202  000F3E  6EF6               	movwf	tblptrl,c
  9203  000F40  0E8D               	movlw	high _failed_line1
  9204  000F42  20F4               	addwfc	prodh,w,c
  9205  000F44  6EF7               	movwf	tblptrh,c
  9206  000F46                     	if	1	;There are 3 active tblptr bytes
  9207  000F46  6AF8               	clrf	tblptru,c
  9208  000F48  0E00               	movlw	low (__mediumconst shr (0+16))
  9209  000F4A  22F8               	addwfc	tblptru,f,c
  9210  000F4C                     	endif
  9211  000F4C  5025               	movf	__display_failed@cntr,w,c
  9212  000F4E  0D01               	mullw	1
  9213  000F50  0E68               	movlw	low _display_content
  9214  000F52  24F3               	addwf	prodl,w,c
  9215  000F54  6ED9               	movwf	fsr2l,c
  9216  000F56  0E01               	movlw	high _display_content
  9217  000F58  20F4               	addwfc	prodh,w,c
  9218  000F5A  6EDA               	movwf	fsr2h,c
  9219  000F5C  0008               	tblrd		*
  9220  000F5E  CFF5 FFDF          	movff	tablat,indf2
  9221  000F62  2A25               	incf	__display_failed@cntr,f,c
  9222  000F64                     l1490:
  9223  000F64  5025               	movf	__display_failed@cntr,w,c
  9224  000F66  0D01               	mullw	1
  9225  000F68  0EE9               	movlw	low _failed_line1
  9226  000F6A  24F3               	addwf	prodl,w,c
  9227  000F6C  6EF6               	movwf	tblptrl,c
  9228  000F6E  0E8D               	movlw	high _failed_line1
  9229  000F70  20F4               	addwfc	prodh,w,c
  9230  000F72  6EF7               	movwf	tblptrh,c
  9231  000F74                     	if	1	;There are 3 active tblptr bytes
  9232  000F74  6AF8               	clrf	tblptru,c
  9233  000F76  0E00               	movlw	low (__mediumconst shr (0+16))
  9234  000F78  22F8               	addwfc	tblptru,f,c
  9235  000F7A                     	endif
  9236  000F7A  0008               	tblrd		*
  9237  000F7C  50F5               	movf	tablat,w,c
  9238  000F7E  0900               	iorlw	0
  9239  000F80  A4D8               	btfss	status,2,c
  9240  000F82  D7D9               	goto	l1491
  9241                           
  9242                           ;display.c: 373: cntr = 0;
  9243  000F84  0E00               	movlw	0
  9244  000F86  6E25               	movwf	__display_failed@cntr,c
  9245                           
  9246                           ;display.c: 374: while(failed_line2[cntr])
  9247  000F88  D017               	goto	l1493
  9248  000F8A                     
  9249                           ;display.c: 375: display_content[1][cntr] = failed_line2[cntr++];
  9250  000F8A  5025               	movf	__display_failed@cntr,w,c
  9251  000F8C  0D01               	mullw	1
  9252  000F8E  0E42               	movlw	low _failed_line2
  9253  000F90  24F3               	addwf	prodl,w,c
  9254  000F92  6EF6               	movwf	tblptrl,c
  9255  000F94  0E8D               	movlw	high _failed_line2
  9256  000F96  20F4               	addwfc	prodh,w,c
  9257  000F98  6EF7               	movwf	tblptrh,c
  9258  000F9A                     	if	1	;There are 3 active tblptr bytes
  9259  000F9A  6AF8               	clrf	tblptru,c
  9260  000F9C  0E00               	movlw	low (__mediumconst shr (0+16))
  9261  000F9E  22F8               	addwfc	tblptru,f,c
  9262  000FA0                     	endif
  9263  000FA0  5025               	movf	__display_failed@cntr,w,c
  9264  000FA2  0D01               	mullw	1
  9265  000FA4  0E7C               	movlw	low (_display_content+20)
  9266  000FA6  24F3               	addwf	prodl,w,c
  9267  000FA8  6ED9               	movwf	fsr2l,c
  9268  000FAA  0E01               	movlw	high (_display_content+20)
  9269  000FAC  20F4               	addwfc	prodh,w,c
  9270  000FAE  6EDA               	movwf	fsr2h,c
  9271  000FB0  0008               	tblrd		*
  9272  000FB2  CFF5 FFDF          	movff	tablat,indf2
  9273  000FB6  2A25               	incf	__display_failed@cntr,f,c
  9274  000FB8                     l1493:
  9275  000FB8  5025               	movf	__display_failed@cntr,w,c
  9276  000FBA  0D01               	mullw	1
  9277  000FBC  0E42               	movlw	low _failed_line2
  9278  000FBE  24F3               	addwf	prodl,w,c
  9279  000FC0  6EF6               	movwf	tblptrl,c
  9280  000FC2  0E8D               	movlw	high _failed_line2
  9281  000FC4  20F4               	addwfc	prodh,w,c
  9282  000FC6  6EF7               	movwf	tblptrh,c
  9283  000FC8                     	if	1	;There are 3 active tblptr bytes
  9284  000FC8  6AF8               	clrf	tblptru,c
  9285  000FCA  0E00               	movlw	low (__mediumconst shr (0+16))
  9286  000FCC  22F8               	addwfc	tblptru,f,c
  9287  000FCE                     	endif
  9288  000FCE  0008               	tblrd		*
  9289  000FD0  50F5               	movf	tablat,w,c
  9290  000FD2  0900               	iorlw	0
  9291  000FD4  A4D8               	btfss	status,2,c
  9292  000FD6  D7D9               	goto	l1494
  9293                           
  9294                           ;display.c: 377: cntr = 0;
  9295  000FD8  0E00               	movlw	0
  9296  000FDA  6E25               	movwf	__display_failed@cntr,c
  9297                           
  9298                           ;display.c: 378: switch(bootloader_get_error())
  9299  000FDC  D0D6               	goto	l1496
  9300  000FDE                     
  9301                           ;display.c: 382: display_content[2][cntr] = failed_line3_startCode[cntr++];
  9302  000FDE  5025               	movf	__display_failed@cntr,w,c
  9303  000FE0  0D01               	mullw	1
  9304  000FE2  0E0A               	movlw	low _failed_line3_startCode
  9305  000FE4  24F3               	addwf	prodl,w,c
  9306  000FE6  6EF6               	movwf	tblptrl,c
  9307  000FE8  0E8D               	movlw	high _failed_line3_startCode
  9308  000FEA  20F4               	addwfc	prodh,w,c
  9309  000FEC  6EF7               	movwf	tblptrh,c
  9310  000FEE                     	if	1	;There are 3 active tblptr bytes
  9311  000FEE  6AF8               	clrf	tblptru,c
  9312  000FF0  0E00               	movlw	low (__mediumconst shr (0+16))
  9313  000FF2  22F8               	addwfc	tblptru,f,c
  9314  000FF4                     	endif
  9315  000FF4  5025               	movf	__display_failed@cntr,w,c
  9316  000FF6  0D01               	mullw	1
  9317  000FF8  0E90               	movlw	low (_display_content+40)
  9318  000FFA  24F3               	addwf	prodl,w,c
  9319  000FFC  6ED9               	movwf	fsr2l,c
  9320  000FFE  0E01               	movlw	high (_display_content+40)
  9321  001000  20F4               	addwfc	prodh,w,c
  9322  001002  6EDA               	movwf	fsr2h,c
  9323  001004  0008               	tblrd		*
  9324  001006  CFF5 FFDF          	movff	tablat,indf2
  9325  00100A  2A25               	incf	__display_failed@cntr,f,c
  9326  00100C  5025               	movf	__display_failed@cntr,w,c
  9327  00100E  0D01               	mullw	1
  9328  001010  0E0A               	movlw	low _failed_line3_startCode
  9329  001012  24F3               	addwf	prodl,w,c
  9330  001014  6EF6               	movwf	tblptrl,c
  9331  001016  0E8D               	movlw	high _failed_line3_startCode
  9332  001018  20F4               	addwfc	prodh,w,c
  9333  00101A  6EF7               	movwf	tblptrh,c
  9334  00101C                     	if	1	;There are 3 active tblptr bytes
  9335  00101C  6AF8               	clrf	tblptru,c
  9336  00101E  0E00               	movlw	low (__mediumconst shr (0+16))
  9337  001020  22F8               	addwfc	tblptru,f,c
  9338  001022                     	endif
  9339  001022  0008               	tblrd		*
  9340  001024  50F5               	movf	tablat,w,c
  9341  001026  0900               	iorlw	0
  9342  001028  B4D8               	btfsc	status,2,c
  9343  00102A  D0C0               	goto	l1501
  9344  00102C  D7D8               	goto	l1499
  9345  00102E                     
  9346                           ;display.c: 387: display_content[2][cntr] = failed_line3_checksum[cntr++];
  9347  00102E  5025               	movf	__display_failed@cntr,w,c
  9348  001030  0D01               	mullw	1
  9349  001032  0E29               	movlw	low _failed_line3_checksum
  9350  001034  24F3               	addwf	prodl,w,c
  9351  001036  6EF6               	movwf	tblptrl,c
  9352  001038  0E8E               	movlw	high _failed_line3_checksum
  9353  00103A  20F4               	addwfc	prodh,w,c
  9354  00103C  6EF7               	movwf	tblptrh,c
  9355  00103E                     	if	1	;There are 3 active tblptr bytes
  9356  00103E  6AF8               	clrf	tblptru,c
  9357  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  9358  001042  22F8               	addwfc	tblptru,f,c
  9359  001044                     	endif
  9360  001044  5025               	movf	__display_failed@cntr,w,c
  9361  001046  0D01               	mullw	1
  9362  001048  0E90               	movlw	low (_display_content+40)
  9363  00104A  24F3               	addwf	prodl,w,c
  9364  00104C  6ED9               	movwf	fsr2l,c
  9365  00104E  0E01               	movlw	high (_display_content+40)
  9366  001050  20F4               	addwfc	prodh,w,c
  9367  001052  6EDA               	movwf	fsr2h,c
  9368  001054  0008               	tblrd		*
  9369  001056  CFF5 FFDF          	movff	tablat,indf2
  9370  00105A  2A25               	incf	__display_failed@cntr,f,c
  9371  00105C  5025               	movf	__display_failed@cntr,w,c
  9372  00105E  0D01               	mullw	1
  9373  001060  0E29               	movlw	low _failed_line3_checksum
  9374  001062  24F3               	addwf	prodl,w,c
  9375  001064  6EF6               	movwf	tblptrl,c
  9376  001066  0E8E               	movlw	high _failed_line3_checksum
  9377  001068  20F4               	addwfc	prodh,w,c
  9378  00106A  6EF7               	movwf	tblptrh,c
  9379  00106C                     	if	1	;There are 3 active tblptr bytes
  9380  00106C  6AF8               	clrf	tblptru,c
  9381  00106E  0E00               	movlw	low (__mediumconst shr (0+16))
  9382  001070  22F8               	addwfc	tblptru,f,c
  9383  001072                     	endif
  9384  001072  0008               	tblrd		*
  9385  001074  50F5               	movf	tablat,w,c
  9386  001076  0900               	iorlw	0
  9387  001078  B4D8               	btfsc	status,2,c
  9388  00107A  D098               	goto	l1501
  9389  00107C  D7D8               	goto	l1504
  9390  00107E                     
  9391                           ;display.c: 394: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
  9392  00107E  5025               	movf	__display_failed@cntr,w,c
  9393  001080  0D01               	mullw	1
  9394  001082  0E38               	movlw	low _failed_line3_noNextRecord
  9395  001084  24F3               	addwf	prodl,w,c
  9396  001086  6EF6               	movwf	tblptrl,c
  9397  001088  0E8E               	movlw	high _failed_line3_noNextRecord
  9398  00108A  20F4               	addwfc	prodh,w,c
  9399  00108C  6EF7               	movwf	tblptrh,c
  9400  00108E                     	if	1	;There are 3 active tblptr bytes
  9401  00108E  6AF8               	clrf	tblptru,c
  9402  001090  0E00               	movlw	low (__mediumconst shr (0+16))
  9403  001092  22F8               	addwfc	tblptru,f,c
  9404  001094                     	endif
  9405  001094  5025               	movf	__display_failed@cntr,w,c
  9406  001096  0D01               	mullw	1
  9407  001098  0E90               	movlw	low (_display_content+40)
  9408  00109A  24F3               	addwf	prodl,w,c
  9409  00109C  6ED9               	movwf	fsr2l,c
  9410  00109E  0E01               	movlw	high (_display_content+40)
  9411  0010A0  20F4               	addwfc	prodh,w,c
  9412  0010A2  6EDA               	movwf	fsr2h,c
  9413  0010A4  0008               	tblrd		*
  9414  0010A6  CFF5 FFDF          	movff	tablat,indf2
  9415  0010AA  2A25               	incf	__display_failed@cntr,f,c
  9416  0010AC  5025               	movf	__display_failed@cntr,w,c
  9417  0010AE  0D01               	mullw	1
  9418  0010B0  0E38               	movlw	low _failed_line3_noNextRecord
  9419  0010B2  24F3               	addwf	prodl,w,c
  9420  0010B4  6EF6               	movwf	tblptrl,c
  9421  0010B6  0E8E               	movlw	high _failed_line3_noNextRecord
  9422  0010B8  20F4               	addwfc	prodh,w,c
  9423  0010BA  6EF7               	movwf	tblptrh,c
  9424  0010BC                     	if	1	;There are 3 active tblptr bytes
  9425  0010BC  6AF8               	clrf	tblptru,c
  9426  0010BE  0E00               	movlw	low (__mediumconst shr (0+16))
  9427  0010C0  22F8               	addwfc	tblptru,f,c
  9428  0010C2                     	endif
  9429  0010C2  0008               	tblrd		*
  9430  0010C4  50F5               	movf	tablat,w,c
  9431  0010C6  0900               	iorlw	0
  9432  0010C8  B4D8               	btfsc	status,2,c
  9433  0010CA  D070               	goto	l1501
  9434  0010CC  D7D8               	goto	l1508
  9435  0010CE                     
  9436                           ;display.c: 399: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
  9437  0010CE  5025               	movf	__display_failed@cntr,w,c
  9438  0010D0  0D01               	mullw	1
  9439  0010D2  0E47               	movlw	low _failed_line3_dataTooLong
  9440  0010D4  24F3               	addwf	prodl,w,c
  9441  0010D6  6EF6               	movwf	tblptrl,c
  9442  0010D8  0E8E               	movlw	high _failed_line3_dataTooLong
  9443  0010DA  20F4               	addwfc	prodh,w,c
  9444  0010DC  6EF7               	movwf	tblptrh,c
  9445  0010DE                     	if	1	;There are 3 active tblptr bytes
  9446  0010DE  6AF8               	clrf	tblptru,c
  9447  0010E0  0E00               	movlw	low (__mediumconst shr (0+16))
  9448  0010E2  22F8               	addwfc	tblptru,f,c
  9449  0010E4                     	endif
  9450  0010E4  5025               	movf	__display_failed@cntr,w,c
  9451  0010E6  0D01               	mullw	1
  9452  0010E8  0E90               	movlw	low (_display_content+40)
  9453  0010EA  24F3               	addwf	prodl,w,c
  9454  0010EC  6ED9               	movwf	fsr2l,c
  9455  0010EE  0E01               	movlw	high (_display_content+40)
  9456  0010F0  20F4               	addwfc	prodh,w,c
  9457  0010F2  6EDA               	movwf	fsr2h,c
  9458  0010F4  0008               	tblrd		*
  9459  0010F6  CFF5 FFDF          	movff	tablat,indf2
  9460  0010FA  2A25               	incf	__display_failed@cntr,f,c
  9461  0010FC  5025               	movf	__display_failed@cntr,w,c
  9462  0010FE  0D01               	mullw	1
  9463  001100  0E47               	movlw	low _failed_line3_dataTooLong
  9464  001102  24F3               	addwf	prodl,w,c
  9465  001104  6EF6               	movwf	tblptrl,c
  9466  001106  0E8E               	movlw	high _failed_line3_dataTooLong
  9467  001108  20F4               	addwfc	prodh,w,c
  9468  00110A  6EF7               	movwf	tblptrh,c
  9469  00110C                     	if	1	;There are 3 active tblptr bytes
  9470  00110C  6AF8               	clrf	tblptru,c
  9471  00110E  0E00               	movlw	low (__mediumconst shr (0+16))
  9472  001110  22F8               	addwfc	tblptru,f,c
  9473  001112                     	endif
  9474  001112  0008               	tblrd		*
  9475  001114  50F5               	movf	tablat,w,c
  9476  001116  0900               	iorlw	0
  9477  001118  B4D8               	btfsc	status,2,c
  9478  00111A  D048               	goto	l1501
  9479  00111C  D7D8               	goto	l1512
  9480  00111E                     
  9481                           ;display.c: 404: display_content[2][cntr] = failed_line3_addressRange[cntr++];
  9482  00111E  5025               	movf	__display_failed@cntr,w,c
  9483  001120  0D01               	mullw	1
  9484  001122  0EE2               	movlw	low _failed_line3_addressRange
  9485  001124  24F3               	addwf	prodl,w,c
  9486  001126  6EF6               	movwf	tblptrl,c
  9487  001128  0E8C               	movlw	high _failed_line3_addressRange
  9488  00112A  20F4               	addwfc	prodh,w,c
  9489  00112C  6EF7               	movwf	tblptrh,c
  9490  00112E                     	if	1	;There are 3 active tblptr bytes
  9491  00112E  6AF8               	clrf	tblptru,c
  9492  001130  0E00               	movlw	low (__mediumconst shr (0+16))
  9493  001132  22F8               	addwfc	tblptru,f,c
  9494  001134                     	endif
  9495  001134  5025               	movf	__display_failed@cntr,w,c
  9496  001136  0D01               	mullw	1
  9497  001138  0E90               	movlw	low (_display_content+40)
  9498  00113A  24F3               	addwf	prodl,w,c
  9499  00113C  6ED9               	movwf	fsr2l,c
  9500  00113E  0E01               	movlw	high (_display_content+40)
  9501  001140  20F4               	addwfc	prodh,w,c
  9502  001142  6EDA               	movwf	fsr2h,c
  9503  001144  0008               	tblrd		*
  9504  001146  CFF5 FFDF          	movff	tablat,indf2
  9505  00114A  2A25               	incf	__display_failed@cntr,f,c
  9506  00114C  5025               	movf	__display_failed@cntr,w,c
  9507  00114E  0D01               	mullw	1
  9508  001150  0EE2               	movlw	low _failed_line3_addressRange
  9509  001152  24F3               	addwf	prodl,w,c
  9510  001154  6EF6               	movwf	tblptrl,c
  9511  001156  0E8C               	movlw	high _failed_line3_addressRange
  9512  001158  20F4               	addwfc	prodh,w,c
  9513  00115A  6EF7               	movwf	tblptrh,c
  9514  00115C                     	if	1	;There are 3 active tblptr bytes
  9515  00115C  6AF8               	clrf	tblptru,c
  9516  00115E  0E00               	movlw	low (__mediumconst shr (0+16))
  9517  001160  22F8               	addwfc	tblptru,f,c
  9518  001162                     	endif
  9519  001162  0008               	tblrd		*
  9520  001164  50F5               	movf	tablat,w,c
  9521  001166  0900               	iorlw	0
  9522  001168  A4D8               	btfss	status,2,c
  9523  00116A  D7D9               	goto	l1516
  9524                           
  9525                           ;display.c: 405: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
  9526  00116C  EC25  F03D         	call	_bootloader_get_rec_address	;wreg free
  9527  001170  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
  9528  001174  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
  9529  001178  6A21               	clrf	__display_itoa_u32@value+2,c
  9530  00117A  6A22               	clrf	__display_itoa_u32@value+3,c
  9531  00117C  0EB2               	movlw	low (_display_content+74)
  9532  00117E  6E23               	movwf	__display_itoa_u32@text,c
  9533  001180  0E01               	movlw	high (_display_content+74)
  9534  001182  6E24               	movwf	__display_itoa_u32@text+1,c
  9535  001184  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9536                           
  9537                           ;display.c: 408: }
  9538                           
  9539                           ;display.c: 406: break;
  9540  001188  D011               	goto	l1501
  9541  00118A                     l1496:
  9542  00118A  EC56  F03D         	call	_bootloader_get_error	;wreg free
  9543                           
  9544                           ; Switch size 1, requested type "space"
  9545                           ; Number of cases is 5, Range of values is 11 to 15
  9546                           ; switch strategies available:
  9547                           ; Name         Instructions Cycles
  9548                           ; simple_byte           16     9 (average)
  9549                           ;	Chosen strategy is simple_byte
  9550  00118E  0A0B               	xorlw	11	; case 11
  9551  001190  B4D8               	btfsc	status,2,c
  9552  001192  D7DC               	goto	l1515
  9553  001194  0A07               	xorlw	7	; case 12
  9554  001196  B4D8               	btfsc	status,2,c
  9555  001198  D7B1               	goto	l1511
  9556  00119A  0A01               	xorlw	1	; case 13
  9557  00119C  B4D8               	btfsc	status,2,c
  9558  00119E  D786               	goto	l1507
  9559  0011A0  0A03               	xorlw	3	; case 14
  9560  0011A2  B4D8               	btfsc	status,2,c
  9561  0011A4  D75B               	goto	l1503
  9562  0011A6  0A01               	xorlw	1	; case 15
  9563  0011A8  B4D8               	btfsc	status,2,c
  9564  0011AA  D730               	goto	l1498
  9565  0011AC                     l1501:
  9566                           
  9567                           ;display.c: 410: cntr = 0;
  9568  0011AC  0E00               	movlw	0
  9569  0011AE  6E25               	movwf	__display_failed@cntr,c
  9570                           
  9571                           ;display.c: 411: while(failed_line4[cntr])
  9572  0011B0  D017               	goto	l1518
  9573  0011B2                     
  9574                           ;display.c: 412: display_content[3][cntr] = failed_line4[cntr++];
  9575  0011B2  5025               	movf	__display_failed@cntr,w,c
  9576  0011B4  0D01               	mullw	1
  9577  0011B6  0E6B               	movlw	low _failed_line4
  9578  0011B8  24F3               	addwf	prodl,w,c
  9579  0011BA  6EF6               	movwf	tblptrl,c
  9580  0011BC  0E8E               	movlw	high _failed_line4
  9581  0011BE  20F4               	addwfc	prodh,w,c
  9582  0011C0  6EF7               	movwf	tblptrh,c
  9583  0011C2                     	if	1	;There are 3 active tblptr bytes
  9584  0011C2  6AF8               	clrf	tblptru,c
  9585  0011C4  0E00               	movlw	low (__mediumconst shr (0+16))
  9586  0011C6  22F8               	addwfc	tblptru,f,c
  9587  0011C8                     	endif
  9588  0011C8  5025               	movf	__display_failed@cntr,w,c
  9589  0011CA  0D01               	mullw	1
  9590  0011CC  0EA4               	movlw	low (_display_content+60)
  9591  0011CE  24F3               	addwf	prodl,w,c
  9592  0011D0  6ED9               	movwf	fsr2l,c
  9593  0011D2  0E01               	movlw	high (_display_content+60)
  9594  0011D4  20F4               	addwfc	prodh,w,c
  9595  0011D6  6EDA               	movwf	fsr2h,c
  9596  0011D8  0008               	tblrd		*
  9597  0011DA  CFF5 FFDF          	movff	tablat,indf2
  9598  0011DE  2A25               	incf	__display_failed@cntr,f,c
  9599  0011E0                     l1518:
  9600  0011E0  5025               	movf	__display_failed@cntr,w,c
  9601  0011E2  0D01               	mullw	1
  9602  0011E4  0E6B               	movlw	low _failed_line4
  9603  0011E6  24F3               	addwf	prodl,w,c
  9604  0011E8  6EF6               	movwf	tblptrl,c
  9605  0011EA  0E8E               	movlw	high _failed_line4
  9606  0011EC  20F4               	addwfc	prodh,w,c
  9607  0011EE  6EF7               	movwf	tblptrh,c
  9608  0011F0                     	if	1	;There are 3 active tblptr bytes
  9609  0011F0  6AF8               	clrf	tblptru,c
  9610  0011F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9611  0011F4  22F8               	addwfc	tblptru,f,c
  9612  0011F6                     	endif
  9613  0011F6  0008               	tblrd		*
  9614  0011F8  50F5               	movf	tablat,w,c
  9615  0011FA  0900               	iorlw	0
  9616  0011FC  A4D8               	btfss	status,2,c
  9617  0011FE  D7D9               	goto	l1519
  9618                           
  9619                           ;display.c: 413: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
  9620  001200  EC2F  F03D         	call	_bootloader_get_entries	;wreg free
  9621  001204  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9622  001208  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9623  00120C  6A1B               	clrf	__display_itoa_u16@value+2,c
  9624  00120E  6A1C               	clrf	__display_itoa_u16@value+3,c
  9625  001210  5025               	movf	__display_failed@cntr,w,c
  9626  001212  0D01               	mullw	1
  9627  001214  0EA4               	movlw	low (_display_content+60)
  9628  001216  24F3               	addwf	prodl,w,c
  9629  001218  6E1D               	movwf	__display_itoa_u16@text,c
  9630  00121A  0E01               	movlw	high (_display_content+60)
  9631  00121C  20F4               	addwfc	prodh,w,c
  9632  00121E  6E1E               	movwf	__display_itoa_u16@text+1,c
  9633  001220  EC38  F027         	call	__display_itoa_u16	;wreg free
  9634  001224  0012               	return		;funcret
  9635  001226                     __end_of__display_failed:
  9636                           	opt stack 0
  9637                           tblptru	equ	0xFF8
  9638                           tblptrh	equ	0xFF7
  9639                           tblptrl	equ	0xFF6
  9640                           tablat	equ	0xFF5
  9641                           prodh	equ	0xFF4
  9642                           prodl	equ	0xFF3
  9643                           intcon	equ	0xFF2
  9644                           intcon2	equ	0xFF1
  9645                           intcon3	equ	0xFF0
  9646                           postinc0	equ	0xFEE
  9647                           wreg	equ	0xFE8
  9648                           postdec1	equ	0xFE5
  9649                           plusw1	equ	0xFE3
  9650                           fsr1h	equ	0xFE2
  9651                           fsr1l	equ	0xFE1
  9652                           indf2	equ	0xFDF
  9653                           postinc2	equ	0xFDE
  9654                           plusw2	equ	0xFDB
  9655                           fsr2h	equ	0xFDA
  9656                           fsr2l	equ	0xFD9
  9657                           status	equ	0xFD8
  9658                           
  9659 ;; *************** function __display_itoa_u32 *****************
  9660 ;; Defined at:
  9661 ;;		line 108 in file "display.c"
  9662 ;; Parameters:    Size  Location     Type
  9663 ;;  value           4   30[COMRAM] unsigned long 
  9664 ;;  text            2   34[COMRAM] PTR unsigned char 
  9665 ;;		 -> display_content(80), 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;		None
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      unsigned char 
  9670 ;; Registers used:
  9671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9677 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9681 ;;Total ram usage:        6 bytes
  9682 ;; Hardware stack levels used:    1
  9683 ;; Hardware stack levels required when called:    4
  9684 ;; This function calls:
  9685 ;;		___lldiv
  9686 ;;		___llmod
  9687 ;;		__display_itoa_u16
  9688 ;;		_itoa
  9689 ;; This function is called by:
  9690 ;;		__display_found
  9691 ;;		__display_failed
  9692 ;; This function uses a non-reentrant model
  9693 ;;
  9694                           
  9695                           	psect	text39
  9696  00085A                     __ptext39:
  9697                           	opt stack 0
  9698  00085A                     __display_itoa_u32:
  9699                           	opt stack 24
  9700                           
  9701                           ;display.c: 111: if(value<=0x7FFF)
  9702                           
  9703                           ;incstack = 0
  9704  00085A  5022               	movf	__display_itoa_u32@value+3,w,c
  9705  00085C  1021               	iorwf	__display_itoa_u32@value+2,w,c
  9706  00085E  E111               	bnz	l11985
  9707  000860  0E80               	movlw	128
  9708  000862  5C20               	subwf	__display_itoa_u32@value+1,w,c
  9709  000864  B0D8               	btfsc	status,0,c
  9710  000866  D00D               	goto	l1377
  9711                           
  9712                           ;display.c: 112: {;display.c: 113: return _display_itoa_u16((uint16_t) value, text);
  9713  000868  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
  9714  00086C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
  9715  000870  6A1B               	clrf	__display_itoa_u16@value+2,c
  9716  000872  6A1C               	clrf	__display_itoa_u16@value+3,c
  9717  000874  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
  9718  000878  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
  9719  00087C  EC38  F027         	call	__display_itoa_u16	;wreg free
  9720  000880  0012               	return	
  9721  000882                     l1377:
  9722  000882                     l11985:
  9723                           
  9724                           ;display.c: 114: };display.c: 117: if(value>100000000)
  9725  000882  041F               	decf	__display_itoa_u32@value,w,c
  9726  000884  0EE1               	movlw	225
  9727  000886  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9728  000888  0EF5               	movlw	245
  9729  00088A  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9730  00088C  0E05               	movlw	5
  9731  00088E  5822               	subwfb	__display_itoa_u32@value+3,w,c
  9732  000890  A0D8               	btfss	status,0,c
  9733  000892  D04C               	goto	l1379
  9734                           
  9735                           ;display.c: 118: {;display.c: 119: itoa(text, (uint16_t)(value/10000), 10);
  9736  000894  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9737  000898  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9738  00089C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9739  0008A0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9740  0008A4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9741  0008A8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9742  0008AC  0E10               	movlw	16
  9743  0008AE  6E05               	movwf	___lldiv@divisor,c
  9744  0008B0  0E27               	movlw	39
  9745  0008B2  6E06               	movwf	___lldiv@divisor+1,c
  9746  0008B4  0E00               	movlw	0
  9747  0008B6  6E07               	movwf	___lldiv@divisor+2,c
  9748  0008B8  0E00               	movlw	0
  9749  0008BA  6E08               	movwf	___lldiv@divisor+3,c
  9750  0008BC  EC70  F02F         	call	___lldiv	;wreg free
  9751  0008C0  C001  F013         	movff	?___lldiv,itoa@val
  9752  0008C4  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9753  0008C8  0E00               	movlw	0
  9754  0008CA  6E16               	movwf	itoa@base+1,c
  9755  0008CC  0E0A               	movlw	10
  9756  0008CE  6E15               	movwf	itoa@base,c
  9757  0008D0  ECD7  F038         	call	_itoa	;wreg free
  9758                           
  9759                           ;display.c: 120: itoa(text+5, (uint16_t)(value%10000), 10);
  9760  0008D4  0E05               	movlw	5
  9761  0008D6  2423               	addwf	__display_itoa_u32@text,w,c
  9762  0008D8  6E11               	movwf	itoa@buf,c
  9763  0008DA  0E00               	movlw	0
  9764  0008DC  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9765  0008DE  6E12               	movwf	itoa@buf+1,c
  9766  0008E0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9767  0008E4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9768  0008E8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9769  0008EC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9770  0008F0  0E10               	movlw	16
  9771  0008F2  6E05               	movwf	___llmod@divisor,c
  9772  0008F4  0E27               	movlw	39
  9773  0008F6  6E06               	movwf	___llmod@divisor+1,c
  9774  0008F8  0E00               	movlw	0
  9775  0008FA  6E07               	movwf	___llmod@divisor+2,c
  9776  0008FC  0E00               	movlw	0
  9777  0008FE  6E08               	movwf	___llmod@divisor+3,c
  9778  000900  ECF3  F033         	call	___llmod	;wreg free
  9779  000904  C001  F013         	movff	?___llmod,itoa@val
  9780  000908  C002  F014         	movff	?___llmod+1,itoa@val+1
  9781  00090C  0E00               	movlw	0
  9782  00090E  6E16               	movwf	itoa@base+1,c
  9783  000910  0E0A               	movlw	10
  9784  000912  6E15               	movwf	itoa@base,c
  9785  000914  ECD7  F038         	call	_itoa	;wreg free
  9786                           
  9787                           ;display.c: 121: *(text+9) = ' ';
  9788  000918  EE20 F009          	lfsr	2,9
  9789  00091C  5023               	movf	__display_itoa_u32@text,w,c
  9790  00091E  26D9               	addwf	fsr2l,f,c
  9791  000920  5024               	movf	__display_itoa_u32@text+1,w,c
  9792  000922  22DA               	addwfc	fsr2h,f,c
  9793  000924  0E20               	movlw	32
  9794  000926  6EDF               	movwf	indf2,c
  9795                           
  9796                           ;display.c: 122: return 9;
  9797  000928  0E09               	movlw	9
  9798                           
  9799                           ;display.c: 123: }
  9800  00092A  0012               	return	
  9801  00092C                     l1379:
  9802                           
  9803                           ;display.c: 124: else if(value>10000000)
  9804  00092C  5022               	movf	__display_itoa_u32@value+3,w,c
  9805  00092E  E108               	bnz	u9290
  9806  000930  0E81               	movlw	129
  9807  000932  5C1F               	subwf	__display_itoa_u32@value,w,c
  9808  000934  0E96               	movlw	150
  9809  000936  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9810  000938  0E98               	movlw	152
  9811  00093A  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9812  00093C  A0D8               	btfss	status,0,c
  9813  00093E  D04C               	goto	l1381
  9814  000940                     u9290:
  9815                           
  9816                           ;display.c: 125: {;display.c: 126: itoa(text, (uint16_t)(value/10000), 10);
  9817  000940  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9818  000944  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9819  000948  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9820  00094C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9821  000950  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9822  000954  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9823  000958  0E10               	movlw	16
  9824  00095A  6E05               	movwf	___lldiv@divisor,c
  9825  00095C  0E27               	movlw	39
  9826  00095E  6E06               	movwf	___lldiv@divisor+1,c
  9827  000960  0E00               	movlw	0
  9828  000962  6E07               	movwf	___lldiv@divisor+2,c
  9829  000964  0E00               	movlw	0
  9830  000966  6E08               	movwf	___lldiv@divisor+3,c
  9831  000968  EC70  F02F         	call	___lldiv	;wreg free
  9832  00096C  C001  F013         	movff	?___lldiv,itoa@val
  9833  000970  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9834  000974  0E00               	movlw	0
  9835  000976  6E16               	movwf	itoa@base+1,c
  9836  000978  0E0A               	movlw	10
  9837  00097A  6E15               	movwf	itoa@base,c
  9838  00097C  ECD7  F038         	call	_itoa	;wreg free
  9839                           
  9840                           ;display.c: 127: itoa(text+4, (uint16_t)(value%10000), 10);
  9841  000980  0E04               	movlw	4
  9842  000982  2423               	addwf	__display_itoa_u32@text,w,c
  9843  000984  6E11               	movwf	itoa@buf,c
  9844  000986  0E00               	movlw	0
  9845  000988  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9846  00098A  6E12               	movwf	itoa@buf+1,c
  9847  00098C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9848  000990  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9849  000994  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9850  000998  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9851  00099C  0E10               	movlw	16
  9852  00099E  6E05               	movwf	___llmod@divisor,c
  9853  0009A0  0E27               	movlw	39
  9854  0009A2  6E06               	movwf	___llmod@divisor+1,c
  9855  0009A4  0E00               	movlw	0
  9856  0009A6  6E07               	movwf	___llmod@divisor+2,c
  9857  0009A8  0E00               	movlw	0
  9858  0009AA  6E08               	movwf	___llmod@divisor+3,c
  9859  0009AC  ECF3  F033         	call	___llmod	;wreg free
  9860  0009B0  C001  F013         	movff	?___llmod,itoa@val
  9861  0009B4  C002  F014         	movff	?___llmod+1,itoa@val+1
  9862  0009B8  0E00               	movlw	0
  9863  0009BA  6E16               	movwf	itoa@base+1,c
  9864  0009BC  0E0A               	movlw	10
  9865  0009BE  6E15               	movwf	itoa@base,c
  9866  0009C0  ECD7  F038         	call	_itoa	;wreg free
  9867                           
  9868                           ;display.c: 128: *(text+8) = ' ';
  9869  0009C4  EE20 F008          	lfsr	2,8
  9870  0009C8  5023               	movf	__display_itoa_u32@text,w,c
  9871  0009CA  26D9               	addwf	fsr2l,f,c
  9872  0009CC  5024               	movf	__display_itoa_u32@text+1,w,c
  9873  0009CE  22DA               	addwfc	fsr2h,f,c
  9874  0009D0  0E20               	movlw	32
  9875  0009D2  6EDF               	movwf	indf2,c
  9876                           
  9877                           ;display.c: 129: return 8;
  9878  0009D4  0E08               	movlw	8
  9879                           
  9880                           ;display.c: 130: }
  9881  0009D6  0012               	return	
  9882  0009D8                     l1381:
  9883                           
  9884                           ;display.c: 131: else if(value>1000000)
  9885  0009D8  5022               	movf	__display_itoa_u32@value+3,w,c
  9886  0009DA  E108               	bnz	u9300
  9887  0009DC  0E41               	movlw	65
  9888  0009DE  5C1F               	subwf	__display_itoa_u32@value,w,c
  9889  0009E0  0E42               	movlw	66
  9890  0009E2  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9891  0009E4  0E0F               	movlw	15
  9892  0009E6  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9893  0009E8  A0D8               	btfss	status,0,c
  9894  0009EA  D04C               	goto	l1383
  9895  0009EC                     u9300:
  9896                           
  9897                           ;display.c: 132: {;display.c: 133: itoa(text, (uint16_t)(value/10000), 10);
  9898  0009EC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9899  0009F0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9900  0009F4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9901  0009F8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9902  0009FC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9903  000A00  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9904  000A04  0E10               	movlw	16
  9905  000A06  6E05               	movwf	___lldiv@divisor,c
  9906  000A08  0E27               	movlw	39
  9907  000A0A  6E06               	movwf	___lldiv@divisor+1,c
  9908  000A0C  0E00               	movlw	0
  9909  000A0E  6E07               	movwf	___lldiv@divisor+2,c
  9910  000A10  0E00               	movlw	0
  9911  000A12  6E08               	movwf	___lldiv@divisor+3,c
  9912  000A14  EC70  F02F         	call	___lldiv	;wreg free
  9913  000A18  C001  F013         	movff	?___lldiv,itoa@val
  9914  000A1C  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9915  000A20  0E00               	movlw	0
  9916  000A22  6E16               	movwf	itoa@base+1,c
  9917  000A24  0E0A               	movlw	10
  9918  000A26  6E15               	movwf	itoa@base,c
  9919  000A28  ECD7  F038         	call	_itoa	;wreg free
  9920                           
  9921                           ;display.c: 134: itoa(text+3, (uint16_t)(value%10000), 10);
  9922  000A2C  0E03               	movlw	3
  9923  000A2E  2423               	addwf	__display_itoa_u32@text,w,c
  9924  000A30  6E11               	movwf	itoa@buf,c
  9925  000A32  0E00               	movlw	0
  9926  000A34  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9927  000A36  6E12               	movwf	itoa@buf+1,c
  9928  000A38  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9929  000A3C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9930  000A40  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9931  000A44  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9932  000A48  0E10               	movlw	16
  9933  000A4A  6E05               	movwf	___llmod@divisor,c
  9934  000A4C  0E27               	movlw	39
  9935  000A4E  6E06               	movwf	___llmod@divisor+1,c
  9936  000A50  0E00               	movlw	0
  9937  000A52  6E07               	movwf	___llmod@divisor+2,c
  9938  000A54  0E00               	movlw	0
  9939  000A56  6E08               	movwf	___llmod@divisor+3,c
  9940  000A58  ECF3  F033         	call	___llmod	;wreg free
  9941  000A5C  C001  F013         	movff	?___llmod,itoa@val
  9942  000A60  C002  F014         	movff	?___llmod+1,itoa@val+1
  9943  000A64  0E00               	movlw	0
  9944  000A66  6E16               	movwf	itoa@base+1,c
  9945  000A68  0E0A               	movlw	10
  9946  000A6A  6E15               	movwf	itoa@base,c
  9947  000A6C  ECD7  F038         	call	_itoa	;wreg free
  9948                           
  9949                           ;display.c: 135: *(text+7) = ' ';
  9950  000A70  EE20 F007          	lfsr	2,7
  9951  000A74  5023               	movf	__display_itoa_u32@text,w,c
  9952  000A76  26D9               	addwf	fsr2l,f,c
  9953  000A78  5024               	movf	__display_itoa_u32@text+1,w,c
  9954  000A7A  22DA               	addwfc	fsr2h,f,c
  9955  000A7C  0E20               	movlw	32
  9956  000A7E  6EDF               	movwf	indf2,c
  9957                           
  9958                           ;display.c: 136: return 7;
  9959  000A80  0E07               	movlw	7
  9960                           
  9961                           ;display.c: 137: }
  9962  000A82  0012               	return	
  9963  000A84                     l1383:
  9964                           
  9965                           ;display.c: 138: else if(value>100000)
  9966  000A84  5022               	movf	__display_itoa_u32@value+3,w,c
  9967  000A86  E108               	bnz	u9310
  9968  000A88  0EA1               	movlw	161
  9969  000A8A  5C1F               	subwf	__display_itoa_u32@value,w,c
  9970  000A8C  0E86               	movlw	134
  9971  000A8E  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9972  000A90  0E01               	movlw	1
  9973  000A92  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9974  000A94  A0D8               	btfss	status,0,c
  9975  000A96  D04C               	goto	l1385
  9976  000A98                     u9310:
  9977                           
  9978                           ;display.c: 139: {;display.c: 140: itoa(text, (uint16_t)(value/10000), 10);
  9979  000A98  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9980  000A9C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9981  000AA0  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9982  000AA4  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9983  000AA8  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9984  000AAC  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9985  000AB0  0E10               	movlw	16
  9986  000AB2  6E05               	movwf	___lldiv@divisor,c
  9987  000AB4  0E27               	movlw	39
  9988  000AB6  6E06               	movwf	___lldiv@divisor+1,c
  9989  000AB8  0E00               	movlw	0
  9990  000ABA  6E07               	movwf	___lldiv@divisor+2,c
  9991  000ABC  0E00               	movlw	0
  9992  000ABE  6E08               	movwf	___lldiv@divisor+3,c
  9993  000AC0  EC70  F02F         	call	___lldiv	;wreg free
  9994  000AC4  C001  F013         	movff	?___lldiv,itoa@val
  9995  000AC8  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9996  000ACC  0E00               	movlw	0
  9997  000ACE  6E16               	movwf	itoa@base+1,c
  9998  000AD0  0E0A               	movlw	10
  9999  000AD2  6E15               	movwf	itoa@base,c
 10000  000AD4  ECD7  F038         	call	_itoa	;wreg free
 10001                           
 10002                           ;display.c: 141: itoa(text+2, (uint16_t)(value%10000), 10);
 10003  000AD8  0E02               	movlw	2
 10004  000ADA  2423               	addwf	__display_itoa_u32@text,w,c
 10005  000ADC  6E11               	movwf	itoa@buf,c
 10006  000ADE  0E00               	movlw	0
 10007  000AE0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10008  000AE2  6E12               	movwf	itoa@buf+1,c
 10009  000AE4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10010  000AE8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10011  000AEC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10012  000AF0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10013  000AF4  0E10               	movlw	16
 10014  000AF6  6E05               	movwf	___llmod@divisor,c
 10015  000AF8  0E27               	movlw	39
 10016  000AFA  6E06               	movwf	___llmod@divisor+1,c
 10017  000AFC  0E00               	movlw	0
 10018  000AFE  6E07               	movwf	___llmod@divisor+2,c
 10019  000B00  0E00               	movlw	0
 10020  000B02  6E08               	movwf	___llmod@divisor+3,c
 10021  000B04  ECF3  F033         	call	___llmod	;wreg free
 10022  000B08  C001  F013         	movff	?___llmod,itoa@val
 10023  000B0C  C002  F014         	movff	?___llmod+1,itoa@val+1
 10024  000B10  0E00               	movlw	0
 10025  000B12  6E16               	movwf	itoa@base+1,c
 10026  000B14  0E0A               	movlw	10
 10027  000B16  6E15               	movwf	itoa@base,c
 10028  000B18  ECD7  F038         	call	_itoa	;wreg free
 10029                           
 10030                           ;display.c: 142: *(text+6) = ' ';
 10031  000B1C  EE20 F006          	lfsr	2,6
 10032  000B20  5023               	movf	__display_itoa_u32@text,w,c
 10033  000B22  26D9               	addwf	fsr2l,f,c
 10034  000B24  5024               	movf	__display_itoa_u32@text+1,w,c
 10035  000B26  22DA               	addwfc	fsr2h,f,c
 10036  000B28  0E20               	movlw	32
 10037  000B2A  6EDF               	movwf	indf2,c
 10038                           
 10039                           ;display.c: 143: return 6;
 10040  000B2C  0E06               	movlw	6
 10041                           
 10042                           ;display.c: 144: }
 10043  000B2E  0012               	return	
 10044  000B30                     l1385:
 10045                           
 10046                           ;display.c: 145: else;display.c: 146: {;display.c: 147: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 10047  000B30  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10048  000B34  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10049  000B38  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10050  000B3C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10051  000B40  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10052  000B44  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10053  000B48  0E10               	movlw	16
 10054  000B4A  6E05               	movwf	___lldiv@divisor,c
 10055  000B4C  0E27               	movlw	39
 10056  000B4E  6E06               	movwf	___lldiv@divisor+1,c
 10057  000B50  0E00               	movlw	0
 10058  000B52  6E07               	movwf	___lldiv@divisor+2,c
 10059  000B54  0E00               	movlw	0
 10060  000B56  6E08               	movwf	___lldiv@divisor+3,c
 10061  000B58  EC70  F02F         	call	___lldiv	;wreg free
 10062  000B5C  C001  F013         	movff	?___lldiv,itoa@val
 10063  000B60  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10064  000B64  0E00               	movlw	0
 10065  000B66  6E16               	movwf	itoa@base+1,c
 10066  000B68  0E0A               	movlw	10
 10067  000B6A  6E15               	movwf	itoa@base,c
 10068  000B6C  ECD7  F038         	call	_itoa	;wreg free
 10069                           
 10070                           ;display.c: 148: itoa(text+1, (uint16_t)(value%10000), 10);
 10071  000B70  0E01               	movlw	1
 10072  000B72  2423               	addwf	__display_itoa_u32@text,w,c
 10073  000B74  6E11               	movwf	itoa@buf,c
 10074  000B76  0E00               	movlw	0
 10075  000B78  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10076  000B7A  6E12               	movwf	itoa@buf+1,c
 10077  000B7C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10078  000B80  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10079  000B84  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10080  000B88  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10081  000B8C  0E10               	movlw	16
 10082  000B8E  6E05               	movwf	___llmod@divisor,c
 10083  000B90  0E27               	movlw	39
 10084  000B92  6E06               	movwf	___llmod@divisor+1,c
 10085  000B94  0E00               	movlw	0
 10086  000B96  6E07               	movwf	___llmod@divisor+2,c
 10087  000B98  0E00               	movlw	0
 10088  000B9A  6E08               	movwf	___llmod@divisor+3,c
 10089  000B9C  ECF3  F033         	call	___llmod	;wreg free
 10090  000BA0  C001  F013         	movff	?___llmod,itoa@val
 10091  000BA4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10092  000BA8  0E00               	movlw	0
 10093  000BAA  6E16               	movwf	itoa@base+1,c
 10094  000BAC  0E0A               	movlw	10
 10095  000BAE  6E15               	movwf	itoa@base,c
 10096  000BB0  ECD7  F038         	call	_itoa	;wreg free
 10097                           
 10098                           ;display.c: 149: *(text+5) = ' ';
 10099  000BB4  EE20 F005          	lfsr	2,5
 10100  000BB8  5023               	movf	__display_itoa_u32@text,w,c
 10101  000BBA  26D9               	addwf	fsr2l,f,c
 10102  000BBC  5024               	movf	__display_itoa_u32@text+1,w,c
 10103  000BBE  22DA               	addwfc	fsr2h,f,c
 10104  000BC0  0E20               	movlw	32
 10105  000BC2  6EDF               	movwf	indf2,c
 10106                           
 10107                           ;display.c: 150: return 5;
 10108  000BC4  0E05               	movlw	5
 10109  000BC6  0012               	return	
 10110  000BC8                     __end_of__display_itoa_u32:
 10111                           	opt stack 0
 10112                           tblptru	equ	0xFF8
 10113                           tblptrh	equ	0xFF7
 10114                           tblptrl	equ	0xFF6
 10115                           tablat	equ	0xFF5
 10116                           prodh	equ	0xFF4
 10117                           prodl	equ	0xFF3
 10118                           intcon	equ	0xFF2
 10119                           intcon2	equ	0xFF1
 10120                           intcon3	equ	0xFF0
 10121                           postinc0	equ	0xFEE
 10122                           wreg	equ	0xFE8
 10123                           postdec1	equ	0xFE5
 10124                           plusw1	equ	0xFE3
 10125                           fsr1h	equ	0xFE2
 10126                           fsr1l	equ	0xFE1
 10127                           indf2	equ	0xFDF
 10128                           postinc2	equ	0xFDE
 10129                           plusw2	equ	0xFDB
 10130                           fsr2h	equ	0xFDA
 10131                           fsr2l	equ	0xFD9
 10132                           status	equ	0xFD8
 10133                           
 10134 ;; *************** function ___llmod *****************
 10135 ;; Defined at:
 10136 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  dividend        4    0[COMRAM] unsigned long 
 10139 ;;  divisor         4    4[COMRAM] unsigned long 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  counter         1    8[COMRAM] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  4    0[COMRAM] unsigned long 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10151 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10154 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10155 ;;Total ram usage:        9 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; This function calls:
 10158 ;;		Nothing
 10159 ;; This function is called by:
 10160 ;;		__display_itoa_u32
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text40
 10165  0067E6                     __ptext40:
 10166                           	opt stack 0
 10167  0067E6                     ___llmod:
 10168                           	opt stack 27
 10169                           
 10170                           ;incstack = 0
 10171  0067E6  5005               	movf	___llmod@divisor,w,c
 10172  0067E8  1006               	iorwf	___llmod@divisor+1,w,c
 10173  0067EA  1007               	iorwf	___llmod@divisor+2,w,c
 10174  0067EC  1008               	iorwf	___llmod@divisor+3,w,c
 10175  0067EE  B4D8               	btfsc	status,2,c
 10176  0067F0  D024               	goto	l3037
 10177  0067F2  0E01               	movlw	1
 10178  0067F4  6E09               	movwf	___llmod@counter,c
 10179  0067F6  D006               	goto	l3032
 10180  0067F8  90D8               	bcf	status,0,c
 10181  0067FA  3605               	rlcf	___llmod@divisor,f,c
 10182  0067FC  3606               	rlcf	___llmod@divisor+1,f,c
 10183  0067FE  3607               	rlcf	___llmod@divisor+2,f,c
 10184  006800  3608               	rlcf	___llmod@divisor+3,f,c
 10185  006802  2A09               	incf	___llmod@counter,f,c
 10186  006804                     l3032:
 10187  006804  AE08               	btfss	___llmod@divisor+3,7,c
 10188  006806  D7F8               	goto	l3033
 10189  006808                     u9070:
 10190  006808  5005               	movf	___llmod@divisor,w,c
 10191  00680A  5C01               	subwf	___llmod@dividend,w,c
 10192  00680C  5006               	movf	___llmod@divisor+1,w,c
 10193  00680E  5802               	subwfb	___llmod@dividend+1,w,c
 10194  006810  5007               	movf	___llmod@divisor+2,w,c
 10195  006812  5803               	subwfb	___llmod@dividend+2,w,c
 10196  006814  5008               	movf	___llmod@divisor+3,w,c
 10197  006816  5804               	subwfb	___llmod@dividend+3,w,c
 10198  006818  A0D8               	btfss	status,0,c
 10199  00681A  D008               	goto	l3036
 10200  00681C  5005               	movf	___llmod@divisor,w,c
 10201  00681E  5E01               	subwf	___llmod@dividend,f,c
 10202  006820  5006               	movf	___llmod@divisor+1,w,c
 10203  006822  5A02               	subwfb	___llmod@dividend+1,f,c
 10204  006824  5007               	movf	___llmod@divisor+2,w,c
 10205  006826  5A03               	subwfb	___llmod@dividend+2,f,c
 10206  006828  5008               	movf	___llmod@divisor+3,w,c
 10207  00682A  5A04               	subwfb	___llmod@dividend+3,f,c
 10208  00682C                     l3036:
 10209  00682C  90D8               	bcf	status,0,c
 10210  00682E  3208               	rrcf	___llmod@divisor+3,f,c
 10211  006830  3207               	rrcf	___llmod@divisor+2,f,c
 10212  006832  3206               	rrcf	___llmod@divisor+1,f,c
 10213  006834  3205               	rrcf	___llmod@divisor,f,c
 10214  006836  2E09               	decfsz	___llmod@counter,f,c
 10215  006838  D7E7               	goto	u9070
 10216  00683A                     l3037:
 10217  00683A  C001  F001         	movff	___llmod@dividend,?___llmod
 10218  00683E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10219  006842  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10220  006846  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10221  00684A  0012               	return		;funcret
 10222  00684C                     __end_of___llmod:
 10223                           	opt stack 0
 10224                           tblptru	equ	0xFF8
 10225                           tblptrh	equ	0xFF7
 10226                           tblptrl	equ	0xFF6
 10227                           tablat	equ	0xFF5
 10228                           prodh	equ	0xFF4
 10229                           prodl	equ	0xFF3
 10230                           intcon	equ	0xFF2
 10231                           intcon2	equ	0xFF1
 10232                           intcon3	equ	0xFF0
 10233                           postinc0	equ	0xFEE
 10234                           wreg	equ	0xFE8
 10235                           postdec1	equ	0xFE5
 10236                           plusw1	equ	0xFE3
 10237                           fsr1h	equ	0xFE2
 10238                           fsr1l	equ	0xFE1
 10239                           indf2	equ	0xFDF
 10240                           postinc2	equ	0xFDE
 10241                           plusw2	equ	0xFDB
 10242                           fsr2h	equ	0xFDA
 10243                           fsr2l	equ	0xFD9
 10244                           status	equ	0xFD8
 10245                           
 10246 ;; *************** function ___lldiv *****************
 10247 ;; Defined at:
 10248 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10249 ;; Parameters:    Size  Location     Type
 10250 ;;  dividend        4    0[COMRAM] unsigned long 
 10251 ;;  divisor         4    4[COMRAM] unsigned long 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  quotient        4    8[COMRAM] unsigned long 
 10254 ;;  counter         1   12[COMRAM] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  4    0[COMRAM] unsigned long 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10265 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10267 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10268 ;;Total ram usage:       13 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		__display_itoa_u32
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text41
 10278  005EE0                     __ptext41:
 10279                           	opt stack 0
 10280  005EE0                     ___lldiv:
 10281                           	opt stack 27
 10282                           
 10283                           ;incstack = 0
 10284  005EE0  0E00               	movlw	0
 10285  005EE2  6E09               	movwf	___lldiv@quotient,c
 10286  005EE4  0E00               	movlw	0
 10287  005EE6  6E0A               	movwf	___lldiv@quotient+1,c
 10288  005EE8  0E00               	movlw	0
 10289  005EEA  6E0B               	movwf	___lldiv@quotient+2,c
 10290  005EEC  0E00               	movlw	0
 10291  005EEE  6E0C               	movwf	___lldiv@quotient+3,c
 10292  005EF0  5005               	movf	___lldiv@divisor,w,c
 10293  005EF2  1006               	iorwf	___lldiv@divisor+1,w,c
 10294  005EF4  1007               	iorwf	___lldiv@divisor+2,w,c
 10295  005EF6  1008               	iorwf	___lldiv@divisor+3,w,c
 10296  005EF8  B4D8               	btfsc	status,2,c
 10297  005EFA  D02A               	goto	l2656
 10298  005EFC  0E01               	movlw	1
 10299  005EFE  6E0D               	movwf	___lldiv@counter,c
 10300  005F00  D006               	goto	l2651
 10301  005F02  90D8               	bcf	status,0,c
 10302  005F04  3605               	rlcf	___lldiv@divisor,f,c
 10303  005F06  3606               	rlcf	___lldiv@divisor+1,f,c
 10304  005F08  3607               	rlcf	___lldiv@divisor+2,f,c
 10305  005F0A  3608               	rlcf	___lldiv@divisor+3,f,c
 10306  005F0C  2A0D               	incf	___lldiv@counter,f,c
 10307  005F0E                     l2651:
 10308  005F0E  AE08               	btfss	___lldiv@divisor+3,7,c
 10309  005F10  D7F8               	goto	l2652
 10310  005F12                     u9040:
 10311  005F12  90D8               	bcf	status,0,c
 10312  005F14  3609               	rlcf	___lldiv@quotient,f,c
 10313  005F16  360A               	rlcf	___lldiv@quotient+1,f,c
 10314  005F18  360B               	rlcf	___lldiv@quotient+2,f,c
 10315  005F1A  360C               	rlcf	___lldiv@quotient+3,f,c
 10316  005F1C  5005               	movf	___lldiv@divisor,w,c
 10317  005F1E  5C01               	subwf	___lldiv@dividend,w,c
 10318  005F20  5006               	movf	___lldiv@divisor+1,w,c
 10319  005F22  5802               	subwfb	___lldiv@dividend+1,w,c
 10320  005F24  5007               	movf	___lldiv@divisor+2,w,c
 10321  005F26  5803               	subwfb	___lldiv@dividend+2,w,c
 10322  005F28  5008               	movf	___lldiv@divisor+3,w,c
 10323  005F2A  5804               	subwfb	___lldiv@dividend+3,w,c
 10324  005F2C  A0D8               	btfss	status,0,c
 10325  005F2E  D009               	goto	l2655
 10326  005F30  5005               	movf	___lldiv@divisor,w,c
 10327  005F32  5E01               	subwf	___lldiv@dividend,f,c
 10328  005F34  5006               	movf	___lldiv@divisor+1,w,c
 10329  005F36  5A02               	subwfb	___lldiv@dividend+1,f,c
 10330  005F38  5007               	movf	___lldiv@divisor+2,w,c
 10331  005F3A  5A03               	subwfb	___lldiv@dividend+2,f,c
 10332  005F3C  5008               	movf	___lldiv@divisor+3,w,c
 10333  005F3E  5A04               	subwfb	___lldiv@dividend+3,f,c
 10334  005F40  8009               	bsf	___lldiv@quotient,0,c
 10335  005F42                     l2655:
 10336  005F42  90D8               	bcf	status,0,c
 10337  005F44  3208               	rrcf	___lldiv@divisor+3,f,c
 10338  005F46  3207               	rrcf	___lldiv@divisor+2,f,c
 10339  005F48  3206               	rrcf	___lldiv@divisor+1,f,c
 10340  005F4A  3205               	rrcf	___lldiv@divisor,f,c
 10341  005F4C  2E0D               	decfsz	___lldiv@counter,f,c
 10342  005F4E  D7E1               	goto	u9040
 10343  005F50                     l2656:
 10344  005F50  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10345  005F54  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10346  005F58  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10347  005F5C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10348  005F60  0012               	return		;funcret
 10349  005F62                     __end_of___lldiv:
 10350                           	opt stack 0
 10351                           tblptru	equ	0xFF8
 10352                           tblptrh	equ	0xFF7
 10353                           tblptrl	equ	0xFF6
 10354                           tablat	equ	0xFF5
 10355                           prodh	equ	0xFF4
 10356                           prodl	equ	0xFF3
 10357                           intcon	equ	0xFF2
 10358                           intcon2	equ	0xFF1
 10359                           intcon3	equ	0xFF0
 10360                           postinc0	equ	0xFEE
 10361                           wreg	equ	0xFE8
 10362                           postdec1	equ	0xFE5
 10363                           plusw1	equ	0xFE3
 10364                           fsr1h	equ	0xFE2
 10365                           fsr1l	equ	0xFE1
 10366                           indf2	equ	0xFDF
 10367                           postinc2	equ	0xFDE
 10368                           plusw2	equ	0xFDB
 10369                           fsr2h	equ	0xFDA
 10370                           fsr2l	equ	0xFD9
 10371                           status	equ	0xFD8
 10372                           
 10373 ;; *************** function __display_done *****************
 10374 ;; Defined at:
 10375 ;;		line 440 in file "display.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;		None
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  cntr            1   30[COMRAM] unsigned char 
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  1    wreg      void 
 10382 ;; Registers used:
 10383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;Total ram usage:        1 bytes
 10394 ;; Hardware stack levels used:    1
 10395 ;; Hardware stack levels required when called:    4
 10396 ;; This function calls:
 10397 ;;		__display_itoa_u16
 10398 ;;		_bootloader_get_flashPagesWritten
 10399 ;; This function is called by:
 10400 ;;		_display_prepare
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text42
 10405  0034EA                     __ptext42:
 10406                           	opt stack 0
 10407  0034EA                     __display_done:
 10408                           	opt stack 25
 10409                           
 10410                           ;display.c: 442: uint8_t cntr;;display.c: 443: cntr = 0;
 10411                           
 10412                           ;incstack = 0
 10413  0034EA  0E00               	movlw	0
 10414  0034EC  6E1F               	movwf	__display_done@cntr,c
 10415                           
 10416                           ;display.c: 444: while(done_line1[cntr])
 10417  0034EE  D017               	goto	l1539
 10418  0034F0                     
 10419                           ;display.c: 445: display_content[0][cntr] = done_line1[cntr++];
 10420  0034F0  501F               	movf	__display_done@cntr,w,c
 10421  0034F2  0D01               	mullw	1
 10422  0034F4  0EB9               	movlw	low _done_line1
 10423  0034F6  24F3               	addwf	prodl,w,c
 10424  0034F8  6EF6               	movwf	tblptrl,c
 10425  0034FA  0E8D               	movlw	high _done_line1
 10426  0034FC  20F4               	addwfc	prodh,w,c
 10427  0034FE  6EF7               	movwf	tblptrh,c
 10428  003500                     	if	1	;There are 3 active tblptr bytes
 10429  003500  6AF8               	clrf	tblptru,c
 10430  003502  0E00               	movlw	low (__mediumconst shr (0+16))
 10431  003504  22F8               	addwfc	tblptru,f,c
 10432  003506                     	endif
 10433  003506  501F               	movf	__display_done@cntr,w,c
 10434  003508  0D01               	mullw	1
 10435  00350A  0E68               	movlw	low _display_content
 10436  00350C  24F3               	addwf	prodl,w,c
 10437  00350E  6ED9               	movwf	fsr2l,c
 10438  003510  0E01               	movlw	high _display_content
 10439  003512  20F4               	addwfc	prodh,w,c
 10440  003514  6EDA               	movwf	fsr2h,c
 10441  003516  0008               	tblrd		*
 10442  003518  CFF5 FFDF          	movff	tablat,indf2
 10443  00351C  2A1F               	incf	__display_done@cntr,f,c
 10444  00351E                     l1539:
 10445  00351E  501F               	movf	__display_done@cntr,w,c
 10446  003520  0D01               	mullw	1
 10447  003522  0EB9               	movlw	low _done_line1
 10448  003524  24F3               	addwf	prodl,w,c
 10449  003526  6EF6               	movwf	tblptrl,c
 10450  003528  0E8D               	movlw	high _done_line1
 10451  00352A  20F4               	addwfc	prodh,w,c
 10452  00352C  6EF7               	movwf	tblptrh,c
 10453  00352E                     	if	1	;There are 3 active tblptr bytes
 10454  00352E  6AF8               	clrf	tblptru,c
 10455  003530  0E00               	movlw	low (__mediumconst shr (0+16))
 10456  003532  22F8               	addwfc	tblptru,f,c
 10457  003534                     	endif
 10458  003534  0008               	tblrd		*
 10459  003536  50F5               	movf	tablat,w,c
 10460  003538  0900               	iorlw	0
 10461  00353A  A4D8               	btfss	status,2,c
 10462  00353C  D7D9               	goto	l1540
 10463                           
 10464                           ;display.c: 446: cntr = 0;
 10465  00353E  0E00               	movlw	0
 10466  003540  6E1F               	movwf	__display_done@cntr,c
 10467                           
 10468                           ;display.c: 447: while(done_line2[cntr])
 10469  003542  D017               	goto	l1542
 10470  003544                     
 10471                           ;display.c: 448: display_content[1][cntr] = done_line2[cntr++];
 10472  003544  501F               	movf	__display_done@cntr,w,c
 10473  003546  0D01               	mullw	1
 10474  003548  0E9F               	movlw	low _done_line2
 10475  00354A  24F3               	addwf	prodl,w,c
 10476  00354C  6EF6               	movwf	tblptrl,c
 10477  00354E  0E8E               	movlw	high _done_line2
 10478  003550  20F4               	addwfc	prodh,w,c
 10479  003552  6EF7               	movwf	tblptrh,c
 10480  003554                     	if	1	;There are 3 active tblptr bytes
 10481  003554  6AF8               	clrf	tblptru,c
 10482  003556  0E00               	movlw	low (__mediumconst shr (0+16))
 10483  003558  22F8               	addwfc	tblptru,f,c
 10484  00355A                     	endif
 10485  00355A  501F               	movf	__display_done@cntr,w,c
 10486  00355C  0D01               	mullw	1
 10487  00355E  0E7C               	movlw	low (_display_content+20)
 10488  003560  24F3               	addwf	prodl,w,c
 10489  003562  6ED9               	movwf	fsr2l,c
 10490  003564  0E01               	movlw	high (_display_content+20)
 10491  003566  20F4               	addwfc	prodh,w,c
 10492  003568  6EDA               	movwf	fsr2h,c
 10493  00356A  0008               	tblrd		*
 10494  00356C  CFF5 FFDF          	movff	tablat,indf2
 10495  003570  2A1F               	incf	__display_done@cntr,f,c
 10496  003572                     l1542:
 10497  003572  501F               	movf	__display_done@cntr,w,c
 10498  003574  0D01               	mullw	1
 10499  003576  0E9F               	movlw	low _done_line2
 10500  003578  24F3               	addwf	prodl,w,c
 10501  00357A  6EF6               	movwf	tblptrl,c
 10502  00357C  0E8E               	movlw	high _done_line2
 10503  00357E  20F4               	addwfc	prodh,w,c
 10504  003580  6EF7               	movwf	tblptrh,c
 10505  003582                     	if	1	;There are 3 active tblptr bytes
 10506  003582  6AF8               	clrf	tblptru,c
 10507  003584  0E00               	movlw	low (__mediumconst shr (0+16))
 10508  003586  22F8               	addwfc	tblptru,f,c
 10509  003588                     	endif
 10510  003588  0008               	tblrd		*
 10511  00358A  50F5               	movf	tablat,w,c
 10512  00358C  0900               	iorlw	0
 10513  00358E  A4D8               	btfss	status,2,c
 10514  003590  D7D9               	goto	l1543
 10515                           
 10516                           ;display.c: 449: cntr = 0;
 10517  003592  0E00               	movlw	0
 10518  003594  6E1F               	movwf	__display_done@cntr,c
 10519                           
 10520                           ;display.c: 450: while(done_line3[cntr])
 10521  003596  D017               	goto	l1545
 10522  003598                     
 10523                           ;display.c: 451: display_content[2][cntr] = done_line3[cntr++];
 10524  003598  501F               	movf	__display_done@cntr,w,c
 10525  00359A  0D01               	mullw	1
 10526  00359C  0EA9               	movlw	low _done_line3
 10527  00359E  24F3               	addwf	prodl,w,c
 10528  0035A0  6EF6               	movwf	tblptrl,c
 10529  0035A2  0E8D               	movlw	high _done_line3
 10530  0035A4  20F4               	addwfc	prodh,w,c
 10531  0035A6  6EF7               	movwf	tblptrh,c
 10532  0035A8                     	if	1	;There are 3 active tblptr bytes
 10533  0035A8  6AF8               	clrf	tblptru,c
 10534  0035AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10535  0035AC  22F8               	addwfc	tblptru,f,c
 10536  0035AE                     	endif
 10537  0035AE  501F               	movf	__display_done@cntr,w,c
 10538  0035B0  0D01               	mullw	1
 10539  0035B2  0E90               	movlw	low (_display_content+40)
 10540  0035B4  24F3               	addwf	prodl,w,c
 10541  0035B6  6ED9               	movwf	fsr2l,c
 10542  0035B8  0E01               	movlw	high (_display_content+40)
 10543  0035BA  20F4               	addwfc	prodh,w,c
 10544  0035BC  6EDA               	movwf	fsr2h,c
 10545  0035BE  0008               	tblrd		*
 10546  0035C0  CFF5 FFDF          	movff	tablat,indf2
 10547  0035C4  2A1F               	incf	__display_done@cntr,f,c
 10548  0035C6                     l1545:
 10549  0035C6  501F               	movf	__display_done@cntr,w,c
 10550  0035C8  0D01               	mullw	1
 10551  0035CA  0EA9               	movlw	low _done_line3
 10552  0035CC  24F3               	addwf	prodl,w,c
 10553  0035CE  6EF6               	movwf	tblptrl,c
 10554  0035D0  0E8D               	movlw	high _done_line3
 10555  0035D2  20F4               	addwfc	prodh,w,c
 10556  0035D4  6EF7               	movwf	tblptrh,c
 10557  0035D6                     	if	1	;There are 3 active tblptr bytes
 10558  0035D6  6AF8               	clrf	tblptru,c
 10559  0035D8  0E00               	movlw	low (__mediumconst shr (0+16))
 10560  0035DA  22F8               	addwfc	tblptru,f,c
 10561  0035DC                     	endif
 10562  0035DC  0008               	tblrd		*
 10563  0035DE  50F5               	movf	tablat,w,c
 10564  0035E0  0900               	iorlw	0
 10565  0035E2  A4D8               	btfss	status,2,c
 10566  0035E4  D7D9               	goto	l1546
 10567                           
 10568                           ;display.c: 452: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 10569  0035E6  EC2A  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
 10570  0035EA  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 10571  0035EE  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 10572  0035F2  6A1B               	clrf	__display_itoa_u16@value+2,c
 10573  0035F4  6A1C               	clrf	__display_itoa_u16@value+3,c
 10574  0035F6  501F               	movf	__display_done@cntr,w,c
 10575  0035F8  0D01               	mullw	1
 10576  0035FA  0E90               	movlw	low (_display_content+40)
 10577  0035FC  24F3               	addwf	prodl,w,c
 10578  0035FE  6E1D               	movwf	__display_itoa_u16@text,c
 10579  003600  0E01               	movlw	high (_display_content+40)
 10580  003602  20F4               	addwfc	prodh,w,c
 10581  003604  6E1E               	movwf	__display_itoa_u16@text+1,c
 10582  003606  EC38  F027         	call	__display_itoa_u16	;wreg free
 10583                           
 10584                           ;display.c: 453: cntr = 0;
 10585  00360A  0E00               	movlw	0
 10586  00360C  6E1F               	movwf	__display_done@cntr,c
 10587                           
 10588                           ;display.c: 454: while(done_line4[cntr])
 10589  00360E  D017               	goto	l1548
 10590  003610                     
 10591                           ;display.c: 455: display_content[3][cntr] = done_line4[cntr++];
 10592  003610  501F               	movf	__display_done@cntr,w,c
 10593  003612  0D01               	mullw	1
 10594  003614  0E99               	movlw	low _done_line4
 10595  003616  24F3               	addwf	prodl,w,c
 10596  003618  6EF6               	movwf	tblptrl,c
 10597  00361A  0E8D               	movlw	high _done_line4
 10598  00361C  20F4               	addwfc	prodh,w,c
 10599  00361E  6EF7               	movwf	tblptrh,c
 10600  003620                     	if	1	;There are 3 active tblptr bytes
 10601  003620  6AF8               	clrf	tblptru,c
 10602  003622  0E00               	movlw	low (__mediumconst shr (0+16))
 10603  003624  22F8               	addwfc	tblptru,f,c
 10604  003626                     	endif
 10605  003626  501F               	movf	__display_done@cntr,w,c
 10606  003628  0D01               	mullw	1
 10607  00362A  0EA4               	movlw	low (_display_content+60)
 10608  00362C  24F3               	addwf	prodl,w,c
 10609  00362E  6ED9               	movwf	fsr2l,c
 10610  003630  0E01               	movlw	high (_display_content+60)
 10611  003632  20F4               	addwfc	prodh,w,c
 10612  003634  6EDA               	movwf	fsr2h,c
 10613  003636  0008               	tblrd		*
 10614  003638  CFF5 FFDF          	movff	tablat,indf2
 10615  00363C  2A1F               	incf	__display_done@cntr,f,c
 10616  00363E                     l1548:
 10617  00363E  501F               	movf	__display_done@cntr,w,c
 10618  003640  0D01               	mullw	1
 10619  003642  0E99               	movlw	low _done_line4
 10620  003644  24F3               	addwf	prodl,w,c
 10621  003646  6EF6               	movwf	tblptrl,c
 10622  003648  0E8D               	movlw	high _done_line4
 10623  00364A  20F4               	addwfc	prodh,w,c
 10624  00364C  6EF7               	movwf	tblptrh,c
 10625  00364E                     	if	1	;There are 3 active tblptr bytes
 10626  00364E  6AF8               	clrf	tblptru,c
 10627  003650  0E00               	movlw	low (__mediumconst shr (0+16))
 10628  003652  22F8               	addwfc	tblptru,f,c
 10629  003654                     	endif
 10630  003654  0008               	tblrd		*
 10631  003656  50F5               	movf	tablat,w,c
 10632  003658  0900               	iorlw	0
 10633  00365A  B4D8               	btfsc	status,2,c
 10634  00365C  0012               	return	
 10635  00365E  D7D8               	goto	l1549
 10636  003660                     __end_of__display_done:
 10637                           	opt stack 0
 10638                           tblptru	equ	0xFF8
 10639                           tblptrh	equ	0xFF7
 10640                           tblptrl	equ	0xFF6
 10641                           tablat	equ	0xFF5
 10642                           prodh	equ	0xFF4
 10643                           prodl	equ	0xFF3
 10644                           intcon	equ	0xFF2
 10645                           intcon2	equ	0xFF1
 10646                           intcon3	equ	0xFF0
 10647                           postinc0	equ	0xFEE
 10648                           wreg	equ	0xFE8
 10649                           postdec1	equ	0xFE5
 10650                           plusw1	equ	0xFE3
 10651                           fsr1h	equ	0xFE2
 10652                           fsr1l	equ	0xFE1
 10653                           indf2	equ	0xFDF
 10654                           postinc2	equ	0xFDE
 10655                           plusw2	equ	0xFDB
 10656                           fsr2h	equ	0xFDA
 10657                           fsr2l	equ	0xFD9
 10658                           status	equ	0xFD8
 10659                           
 10660 ;; *************** function __display_clear *****************
 10661 ;; Defined at:
 10662 ;;		line 65 in file "display.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;		None
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;  col             1    3[COMRAM] unsigned char 
 10667 ;;  row             1    2[COMRAM] unsigned char 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  1    wreg      void 
 10670 ;; Registers used:
 10671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10680 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10681 ;;Total ram usage:        4 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; This function calls:
 10684 ;;		Nothing
 10685 ;; This function is called by:
 10686 ;;		_display_prepare
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text43
 10691  007092                     __ptext43:
 10692                           	opt stack 0
 10693  007092                     __display_clear:
 10694                           	opt stack 29
 10695                           
 10696                           ;display.c: 67: uint8_t row;;display.c: 68: uint8_t col;;display.c: 69: for(row=0;row<4;
      +                          ++row)
 10697                           
 10698                           ;incstack = 0
 10699  007092  0E00               	movlw	0
 10700  007094  6E03               	movwf	__display_clear@row,c
 10701  007096                     l13137:
 10702  007096  0E03               	movlw	3
 10703  007098  6403               	cpfsgt	__display_clear@row,c
 10704  00709A  D001               	goto	l1359
 10705  00709C  0012               	return	
 10706  00709E                     l1359:
 10707                           
 10708                           ;display.c: 70: {;display.c: 71: for(col=0;col<20;++col)
 10709  00709E  0E00               	movlw	0
 10710  0070A0  6E04               	movwf	__display_clear@col,c
 10711  0070A2                     l13143:
 10712  0070A2  0E13               	movlw	19
 10713  0070A4  6404               	cpfsgt	__display_clear@col,c
 10714  0070A6  D001               	goto	l1361
 10715  0070A8  D016               	goto	u10440
 10716  0070AA                     l1361:
 10717                           
 10718                           ;display.c: 72: {;display.c: 73: display_content[row][col] = ' ';
 10719  0070AA  5003               	movf	__display_clear@row,w,c
 10720  0070AC  0D14               	mullw	20
 10721  0070AE  0E68               	movlw	low _display_content
 10722  0070B0  6E01               	movwf	??__display_clear& (0+255),c
 10723  0070B2  0E01               	movlw	high _display_content
 10724  0070B4  6E02               	movwf	(??__display_clear+1)& (0+255),c
 10725  0070B6  50F3               	movf	prodl,w,c
 10726  0070B8  2601               	addwf	??__display_clear,f,c
 10727  0070BA  50F4               	movf	prodh,w,c
 10728  0070BC  2202               	addwfc	??__display_clear+1,f,c
 10729  0070BE  5004               	movf	__display_clear@col,w,c
 10730  0070C0  0D01               	mullw	1
 10731  0070C2  50F3               	movf	prodl,w,c
 10732  0070C4  2401               	addwf	??__display_clear,w,c
 10733  0070C6  6ED9               	movwf	fsr2l,c
 10734  0070C8  50F4               	movf	prodh,w,c
 10735  0070CA  2002               	addwfc	??__display_clear+1,w,c
 10736  0070CC  6EDA               	movwf	fsr2h,c
 10737  0070CE  0E20               	movlw	32
 10738  0070D0  6EDF               	movwf	indf2,c
 10739  0070D2  2A04               	incf	__display_clear@col,f,c
 10740  0070D4  D7E6               	goto	l13143
 10741  0070D6                     u10440:
 10742  0070D6  2A03               	incf	__display_clear@row,f,c
 10743  0070D8  D7DE               	goto	l13137
 10744  0070DA                     __end_of__display_clear:
 10745                           	opt stack 0
 10746                           tblptru	equ	0xFF8
 10747                           tblptrh	equ	0xFF7
 10748                           tblptrl	equ	0xFF6
 10749                           tablat	equ	0xFF5
 10750                           prodh	equ	0xFF4
 10751                           prodl	equ	0xFF3
 10752                           intcon	equ	0xFF2
 10753                           intcon2	equ	0xFF1
 10754                           intcon3	equ	0xFF0
 10755                           postinc0	equ	0xFEE
 10756                           wreg	equ	0xFE8
 10757                           postdec1	equ	0xFE5
 10758                           plusw1	equ	0xFE3
 10759                           fsr1h	equ	0xFE2
 10760                           fsr1l	equ	0xFE1
 10761                           indf2	equ	0xFDF
 10762                           postinc2	equ	0xFDE
 10763                           plusw2	equ	0xFDB
 10764                           fsr2h	equ	0xFDA
 10765                           fsr2l	equ	0xFD9
 10766                           status	equ	0xFD8
 10767                           
 10768 ;; *************** function __display_checked *****************
 10769 ;; Defined at:
 10770 ;;		line 344 in file "display.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;		None
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;  cntr            1   33[COMRAM] unsigned char 
 10775 ;;  start           1   32[COMRAM] unsigned char 
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;Total ram usage:        4 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; Hardware stack levels required when called:    4
 10792 ;; This function calls:
 10793 ;;		__display_itoa_u16
 10794 ;;		_bootloader_get_total_entries
 10795 ;; This function is called by:
 10796 ;;		_display_prepare
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text44
 10801  00336E                     __ptext44:
 10802                           	opt stack 0
 10803  00336E                     __display_checked:
 10804                           	opt stack 25
 10805                           
 10806                           ;display.c: 346: uint8_t cntr;;display.c: 347: uint8_t start;;display.c: 348: cntr = 0;
 10807                           
 10808                           ;incstack = 0
 10809  00336E  0E00               	movlw	0
 10810  003370  6E22               	movwf	__display_checked@cntr,c
 10811                           
 10812                           ;display.c: 349: while(checked_line1[cntr])
 10813  003372  D017               	goto	l1475
 10814  003374                     
 10815                           ;display.c: 350: display_content[0][cntr] = checked_line1[cntr++];
 10816  003374  5022               	movf	__display_checked@cntr,w,c
 10817  003376  0D01               	mullw	1
 10818  003378  0EF9               	movlw	low _checked_line1
 10819  00337A  24F3               	addwf	prodl,w,c
 10820  00337C  6EF6               	movwf	tblptrl,c
 10821  00337E  0E8D               	movlw	high _checked_line1
 10822  003380  20F4               	addwfc	prodh,w,c
 10823  003382  6EF7               	movwf	tblptrh,c
 10824  003384                     	if	1	;There are 3 active tblptr bytes
 10825  003384  6AF8               	clrf	tblptru,c
 10826  003386  0E00               	movlw	low (__mediumconst shr (0+16))
 10827  003388  22F8               	addwfc	tblptru,f,c
 10828  00338A                     	endif
 10829  00338A  5022               	movf	__display_checked@cntr,w,c
 10830  00338C  0D01               	mullw	1
 10831  00338E  0E68               	movlw	low _display_content
 10832  003390  24F3               	addwf	prodl,w,c
 10833  003392  6ED9               	movwf	fsr2l,c
 10834  003394  0E01               	movlw	high _display_content
 10835  003396  20F4               	addwfc	prodh,w,c
 10836  003398  6EDA               	movwf	fsr2h,c
 10837  00339A  0008               	tblrd		*
 10838  00339C  CFF5 FFDF          	movff	tablat,indf2
 10839  0033A0  2A22               	incf	__display_checked@cntr,f,c
 10840  0033A2                     l1475:
 10841  0033A2  5022               	movf	__display_checked@cntr,w,c
 10842  0033A4  0D01               	mullw	1
 10843  0033A6  0EF9               	movlw	low _checked_line1
 10844  0033A8  24F3               	addwf	prodl,w,c
 10845  0033AA  6EF6               	movwf	tblptrl,c
 10846  0033AC  0E8D               	movlw	high _checked_line1
 10847  0033AE  20F4               	addwfc	prodh,w,c
 10848  0033B0  6EF7               	movwf	tblptrh,c
 10849  0033B2                     	if	1	;There are 3 active tblptr bytes
 10850  0033B2  6AF8               	clrf	tblptru,c
 10851  0033B4  0E00               	movlw	low (__mediumconst shr (0+16))
 10852  0033B6  22F8               	addwfc	tblptru,f,c
 10853  0033B8                     	endif
 10854  0033B8  0008               	tblrd		*
 10855  0033BA  50F5               	movf	tablat,w,c
 10856  0033BC  0900               	iorlw	0
 10857  0033BE  A4D8               	btfss	status,2,c
 10858  0033C0  D7D9               	goto	l1476
 10859                           
 10860                           ;display.c: 351: cntr = 0;
 10861  0033C2  0E00               	movlw	0
 10862  0033C4  6E22               	movwf	__display_checked@cntr,c
 10863                           
 10864                           ;display.c: 352: while(checked_line2[cntr])
 10865  0033C6  D017               	goto	l1478
 10866  0033C8                     
 10867                           ;display.c: 353: display_content[1][cntr] = checked_line2[cntr++];
 10868  0033C8  5022               	movf	__display_checked@cntr,w,c
 10869  0033CA  0D01               	mullw	1
 10870  0033CC  0ECD               	movlw	low _checked_line2
 10871  0033CE  24F3               	addwf	prodl,w,c
 10872  0033D0  6EF6               	movwf	tblptrl,c
 10873  0033D2  0E8C               	movlw	high _checked_line2
 10874  0033D4  20F4               	addwfc	prodh,w,c
 10875  0033D6  6EF7               	movwf	tblptrh,c
 10876  0033D8                     	if	1	;There are 3 active tblptr bytes
 10877  0033D8  6AF8               	clrf	tblptru,c
 10878  0033DA  0E00               	movlw	low (__mediumconst shr (0+16))
 10879  0033DC  22F8               	addwfc	tblptru,f,c
 10880  0033DE                     	endif
 10881  0033DE  5022               	movf	__display_checked@cntr,w,c
 10882  0033E0  0D01               	mullw	1
 10883  0033E2  0E7C               	movlw	low (_display_content+20)
 10884  0033E4  24F3               	addwf	prodl,w,c
 10885  0033E6  6ED9               	movwf	fsr2l,c
 10886  0033E8  0E01               	movlw	high (_display_content+20)
 10887  0033EA  20F4               	addwfc	prodh,w,c
 10888  0033EC  6EDA               	movwf	fsr2h,c
 10889  0033EE  0008               	tblrd		*
 10890  0033F0  CFF5 FFDF          	movff	tablat,indf2
 10891  0033F4  2A22               	incf	__display_checked@cntr,f,c
 10892  0033F6                     l1478:
 10893  0033F6  5022               	movf	__display_checked@cntr,w,c
 10894  0033F8  0D01               	mullw	1
 10895  0033FA  0ECD               	movlw	low _checked_line2
 10896  0033FC  24F3               	addwf	prodl,w,c
 10897  0033FE  6EF6               	movwf	tblptrl,c
 10898  003400  0E8C               	movlw	high _checked_line2
 10899  003402  20F4               	addwfc	prodh,w,c
 10900  003404  6EF7               	movwf	tblptrh,c
 10901  003406                     	if	1	;There are 3 active tblptr bytes
 10902  003406  6AF8               	clrf	tblptru,c
 10903  003408  0E00               	movlw	low (__mediumconst shr (0+16))
 10904  00340A  22F8               	addwfc	tblptru,f,c
 10905  00340C                     	endif
 10906  00340C  0008               	tblrd		*
 10907  00340E  50F5               	movf	tablat,w,c
 10908  003410  0900               	iorlw	0
 10909  003412  A4D8               	btfss	status,2,c
 10910  003414  D7D9               	goto	l1479
 10911                           
 10912                           ;display.c: 355: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 10913  003416  EC1B  F03D         	call	_bootloader_get_total_entries	;wreg free
 10914  00341A  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 10915  00341E  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 10916  003422  6A1B               	clrf	__display_itoa_u16@value+2,c
 10917  003424  6A1C               	clrf	__display_itoa_u16@value+3,c
 10918  003426  0E90               	movlw	low (_display_content+40)
 10919  003428  6E1D               	movwf	__display_itoa_u16@text,c
 10920  00342A  0E01               	movlw	high (_display_content+40)
 10921  00342C  6E1E               	movwf	__display_itoa_u16@text+1,c
 10922  00342E  EC38  F027         	call	__display_itoa_u16	;wreg free
 10923  003432  6E21               	movwf	__display_checked@start,c
 10924                           
 10925                           ;display.c: 356: start++;
 10926  003434  2A21               	incf	__display_checked@start,f,c
 10927                           
 10928                           ;display.c: 357: cntr = 0;
 10929  003436  0E00               	movlw	0
 10930  003438  6E22               	movwf	__display_checked@cntr,c
 10931                           
 10932                           ;display.c: 358: while(checked_line3[cntr])
 10933  00343A  D01C               	goto	l1481
 10934  00343C                     
 10935                           ;display.c: 359: display_content[2][start+cntr] = checked_line3[cntr++];
 10936  00343C  5022               	movf	__display_checked@cntr,w,c
 10937  00343E  0D01               	mullw	1
 10938  003440  0E73               	movlw	low _checked_line3
 10939  003442  24F3               	addwf	prodl,w,c
 10940  003444  6EF6               	movwf	tblptrl,c
 10941  003446  0E8E               	movlw	high _checked_line3
 10942  003448  20F4               	addwfc	prodh,w,c
 10943  00344A  6EF7               	movwf	tblptrh,c
 10944  00344C                     	if	1	;There are 3 active tblptr bytes
 10945  00344C  6AF8               	clrf	tblptru,c
 10946  00344E  0E00               	movlw	low (__mediumconst shr (0+16))
 10947  003450  22F8               	addwfc	tblptru,f,c
 10948  003452                     	endif
 10949  003452  5022               	movf	__display_checked@cntr,w,c
 10950  003454  C021  F01F         	movff	__display_checked@start,??__display_checked
 10951  003458  6A20               	clrf	(??__display_checked+1)& (0+255),c
 10952  00345A  261F               	addwf	??__display_checked,f,c
 10953  00345C  0E00               	movlw	0
 10954  00345E  2220               	addwfc	??__display_checked+1,f,c
 10955  003460  0E90               	movlw	low (_display_content+40)
 10956  003462  241F               	addwf	??__display_checked,w,c
 10957  003464  6ED9               	movwf	fsr2l,c
 10958  003466  0E01               	movlw	high (_display_content+40)
 10959  003468  2020               	addwfc	??__display_checked+1,w,c
 10960  00346A  6EDA               	movwf	fsr2h,c
 10961  00346C  0008               	tblrd		*
 10962  00346E  CFF5 FFDF          	movff	tablat,indf2
 10963  003472  2A22               	incf	__display_checked@cntr,f,c
 10964  003474                     l1481:
 10965  003474  5022               	movf	__display_checked@cntr,w,c
 10966  003476  0D01               	mullw	1
 10967  003478  0E73               	movlw	low _checked_line3
 10968  00347A  24F3               	addwf	prodl,w,c
 10969  00347C  6EF6               	movwf	tblptrl,c
 10970  00347E  0E8E               	movlw	high _checked_line3
 10971  003480  20F4               	addwfc	prodh,w,c
 10972  003482  6EF7               	movwf	tblptrh,c
 10973  003484                     	if	1	;There are 3 active tblptr bytes
 10974  003484  6AF8               	clrf	tblptru,c
 10975  003486  0E00               	movlw	low (__mediumconst shr (0+16))
 10976  003488  22F8               	addwfc	tblptru,f,c
 10977  00348A                     	endif
 10978  00348A  0008               	tblrd		*
 10979  00348C  50F5               	movf	tablat,w,c
 10980  00348E  0900               	iorlw	0
 10981  003490  A4D8               	btfss	status,2,c
 10982  003492  D7D4               	goto	l1482
 10983                           
 10984                           ;display.c: 361: cntr = 0;
 10985  003494  0E00               	movlw	0
 10986  003496  6E22               	movwf	__display_checked@cntr,c
 10987                           
 10988                           ;display.c: 362: while(checked_line4[cntr])
 10989  003498  D017               	goto	l1484
 10990  00349A                     
 10991                           ;display.c: 363: display_content[3][cntr] = checked_line4[cntr++];
 10992  00349A  5022               	movf	__display_checked@cntr,w,c
 10993  00349C  0D01               	mullw	1
 10994  00349E  0E66               	movlw	low _checked_line4
 10995  0034A0  24F3               	addwf	prodl,w,c
 10996  0034A2  6EF6               	movwf	tblptrl,c
 10997  0034A4  0E8D               	movlw	high _checked_line4
 10998  0034A6  20F4               	addwfc	prodh,w,c
 10999  0034A8  6EF7               	movwf	tblptrh,c
 11000  0034AA                     	if	1	;There are 3 active tblptr bytes
 11001  0034AA  6AF8               	clrf	tblptru,c
 11002  0034AC  0E00               	movlw	low (__mediumconst shr (0+16))
 11003  0034AE  22F8               	addwfc	tblptru,f,c
 11004  0034B0                     	endif
 11005  0034B0  5022               	movf	__display_checked@cntr,w,c
 11006  0034B2  0D01               	mullw	1
 11007  0034B4  0EA4               	movlw	low (_display_content+60)
 11008  0034B6  24F3               	addwf	prodl,w,c
 11009  0034B8  6ED9               	movwf	fsr2l,c
 11010  0034BA  0E01               	movlw	high (_display_content+60)
 11011  0034BC  20F4               	addwfc	prodh,w,c
 11012  0034BE  6EDA               	movwf	fsr2h,c
 11013  0034C0  0008               	tblrd		*
 11014  0034C2  CFF5 FFDF          	movff	tablat,indf2
 11015  0034C6  2A22               	incf	__display_checked@cntr,f,c
 11016  0034C8                     l1484:
 11017  0034C8  5022               	movf	__display_checked@cntr,w,c
 11018  0034CA  0D01               	mullw	1
 11019  0034CC  0E66               	movlw	low _checked_line4
 11020  0034CE  24F3               	addwf	prodl,w,c
 11021  0034D0  6EF6               	movwf	tblptrl,c
 11022  0034D2  0E8D               	movlw	high _checked_line4
 11023  0034D4  20F4               	addwfc	prodh,w,c
 11024  0034D6  6EF7               	movwf	tblptrh,c
 11025  0034D8                     	if	1	;There are 3 active tblptr bytes
 11026  0034D8  6AF8               	clrf	tblptru,c
 11027  0034DA  0E00               	movlw	low (__mediumconst shr (0+16))
 11028  0034DC  22F8               	addwfc	tblptru,f,c
 11029  0034DE                     	endif
 11030  0034DE  0008               	tblrd		*
 11031  0034E0  50F5               	movf	tablat,w,c
 11032  0034E2  0900               	iorlw	0
 11033  0034E4  B4D8               	btfsc	status,2,c
 11034  0034E6  0012               	return	
 11035  0034E8  D7D8               	goto	l1485
 11036  0034EA                     __end_of__display_checked:
 11037                           	opt stack 0
 11038                           tblptru	equ	0xFF8
 11039                           tblptrh	equ	0xFF7
 11040                           tblptrl	equ	0xFF6
 11041                           tablat	equ	0xFF5
 11042                           prodh	equ	0xFF4
 11043                           prodl	equ	0xFF3
 11044                           intcon	equ	0xFF2
 11045                           intcon2	equ	0xFF1
 11046                           intcon3	equ	0xFF0
 11047                           postinc0	equ	0xFEE
 11048                           wreg	equ	0xFE8
 11049                           postdec1	equ	0xFE5
 11050                           plusw1	equ	0xFE3
 11051                           fsr1h	equ	0xFE2
 11052                           fsr1l	equ	0xFE1
 11053                           indf2	equ	0xFDF
 11054                           postinc2	equ	0xFDE
 11055                           plusw2	equ	0xFDB
 11056                           fsr2h	equ	0xFDA
 11057                           fsr2l	equ	0xFD9
 11058                           status	equ	0xFD8
 11059                           
 11060 ;; *************** function __display_itoa_u16 *****************
 11061 ;; Defined at:
 11062 ;;		line 78 in file "display.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;  value           4   24[COMRAM] unsigned long 
 11065 ;;  text            2   28[COMRAM] PTR unsigned char 
 11066 ;;		 -> display_content(80), 
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;		None
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      unsigned char 
 11071 ;; Registers used:
 11072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11078 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11081 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11082 ;;Total ram usage:        6 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:    3
 11085 ;; This function calls:
 11086 ;;		_itoa
 11087 ;; This function is called by:
 11088 ;;		__display_itoa_u32
 11089 ;;		__display_verify
 11090 ;;		__display_checked
 11091 ;;		__display_failed
 11092 ;;		__display_programming
 11093 ;;		__display_done
 11094 ;; This function uses a non-reentrant model
 11095 ;;
 11096                           
 11097                           	psect	text45
 11098  004E70                     __ptext45:
 11099                           	opt stack 0
 11100  004E70                     __display_itoa_u16:
 11101                           	opt stack 25
 11102                           
 11103                           ;display.c: 80: itoa(text, value, 10);
 11104                           
 11105                           ;incstack = 0
 11106  004E70  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 11107  004E74  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11108  004E78  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 11109  004E7C  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 11110  004E80  0E00               	movlw	0
 11111  004E82  6E16               	movwf	itoa@base+1,c
 11112  004E84  0E0A               	movlw	10
 11113  004E86  6E15               	movwf	itoa@base,c
 11114  004E88  ECD7  F038         	call	_itoa	;wreg free
 11115                           
 11116                           ;display.c: 81: if(value>9999)
 11117  004E8C  501C               	movf	__display_itoa_u16@value+3,w,c
 11118  004E8E  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11119  004E90  E106               	bnz	u8690
 11120  004E92  0E10               	movlw	16
 11121  004E94  5C19               	subwf	__display_itoa_u16@value,w,c
 11122  004E96  0E27               	movlw	39
 11123  004E98  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11124  004E9A  A0D8               	btfss	status,0,c
 11125  004E9C  D00A               	goto	l1366
 11126  004E9E                     u8690:
 11127                           
 11128                           ;display.c: 82: {;display.c: 83: *(text+5) = ' ';
 11129  004E9E  EE20 F005          	lfsr	2,5
 11130  004EA2  501D               	movf	__display_itoa_u16@text,w,c
 11131  004EA4  26D9               	addwf	fsr2l,f,c
 11132  004EA6  501E               	movf	__display_itoa_u16@text+1,w,c
 11133  004EA8  22DA               	addwfc	fsr2h,f,c
 11134  004EAA  0E20               	movlw	32
 11135  004EAC  6EDF               	movwf	indf2,c
 11136                           
 11137                           ;display.c: 84: return 5;
 11138  004EAE  0E05               	movlw	5
 11139                           
 11140                           ;display.c: 85: }
 11141  004EB0  0012               	return	
 11142  004EB2                     l1366:
 11143                           
 11144                           ;display.c: 86: else if (value>999)
 11145  004EB2  501C               	movf	__display_itoa_u16@value+3,w,c
 11146  004EB4  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11147  004EB6  E106               	bnz	u8700
 11148  004EB8  0EE8               	movlw	232
 11149  004EBA  5C19               	subwf	__display_itoa_u16@value,w,c
 11150  004EBC  0E03               	movlw	3
 11151  004EBE  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11152  004EC0  A0D8               	btfss	status,0,c
 11153  004EC2  D00A               	goto	l1369
 11154  004EC4                     u8700:
 11155                           
 11156                           ;display.c: 87: {;display.c: 88: *(text+4) = ' ';
 11157  004EC4  EE20 F004          	lfsr	2,4
 11158  004EC8  501D               	movf	__display_itoa_u16@text,w,c
 11159  004ECA  26D9               	addwf	fsr2l,f,c
 11160  004ECC  501E               	movf	__display_itoa_u16@text+1,w,c
 11161  004ECE  22DA               	addwfc	fsr2h,f,c
 11162  004ED0  0E20               	movlw	32
 11163  004ED2  6EDF               	movwf	indf2,c
 11164                           
 11165                           ;display.c: 89: return 4;
 11166  004ED4  0E04               	movlw	4
 11167                           
 11168                           ;display.c: 90: }
 11169  004ED6  0012               	return	
 11170  004ED8                     l1369:
 11171                           
 11172                           ;display.c: 91: else if (value>99)
 11173  004ED8  501C               	movf	__display_itoa_u16@value+3,w,c
 11174  004EDA  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11175  004EDC  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11176  004EDE  E104               	bnz	u8710
 11177  004EE0  0E64               	movlw	100
 11178  004EE2  5C19               	subwf	__display_itoa_u16@value,w,c
 11179  004EE4  A0D8               	btfss	status,0,c
 11180  004EE6  D00A               	goto	l1371
 11181  004EE8                     u8710:
 11182                           
 11183                           ;display.c: 92: {;display.c: 93: *(text+3) = ' ';
 11184  004EE8  EE20 F003          	lfsr	2,3
 11185  004EEC  501D               	movf	__display_itoa_u16@text,w,c
 11186  004EEE  26D9               	addwf	fsr2l,f,c
 11187  004EF0  501E               	movf	__display_itoa_u16@text+1,w,c
 11188  004EF2  22DA               	addwfc	fsr2h,f,c
 11189  004EF4  0E20               	movlw	32
 11190  004EF6  6EDF               	movwf	indf2,c
 11191                           
 11192                           ;display.c: 94: return 3;
 11193  004EF8  0E03               	movlw	3
 11194                           
 11195                           ;display.c: 95: }
 11196  004EFA  0012               	return	
 11197  004EFC                     l1371:
 11198                           
 11199                           ;display.c: 96: else if (value>9)
 11200  004EFC  501C               	movf	__display_itoa_u16@value+3,w,c
 11201  004EFE  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11202  004F00  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11203  004F02  E104               	bnz	u8720
 11204  004F04  0E0A               	movlw	10
 11205  004F06  5C19               	subwf	__display_itoa_u16@value,w,c
 11206  004F08  A0D8               	btfss	status,0,c
 11207  004F0A  D00A               	goto	l1373
 11208  004F0C                     u8720:
 11209                           
 11210                           ;display.c: 97: {;display.c: 98: *(text+2) = ' ';
 11211  004F0C  EE20 F002          	lfsr	2,2
 11212  004F10  501D               	movf	__display_itoa_u16@text,w,c
 11213  004F12  26D9               	addwf	fsr2l,f,c
 11214  004F14  501E               	movf	__display_itoa_u16@text+1,w,c
 11215  004F16  22DA               	addwfc	fsr2h,f,c
 11216  004F18  0E20               	movlw	32
 11217  004F1A  6EDF               	movwf	indf2,c
 11218                           
 11219                           ;display.c: 99: return 2;
 11220  004F1C  0E02               	movlw	2
 11221                           
 11222                           ;display.c: 100: }
 11223  004F1E  0012               	return	
 11224  004F20                     l1373:
 11225                           
 11226                           ;display.c: 101: else;display.c: 102: {;display.c: 103: *(text+1) = ' ';
 11227  004F20  EE20 F001          	lfsr	2,1
 11228  004F24  501D               	movf	__display_itoa_u16@text,w,c
 11229  004F26  26D9               	addwf	fsr2l,f,c
 11230  004F28  501E               	movf	__display_itoa_u16@text+1,w,c
 11231  004F2A  22DA               	addwfc	fsr2h,f,c
 11232  004F2C  0E20               	movlw	32
 11233  004F2E  6EDF               	movwf	indf2,c
 11234                           
 11235                           ;display.c: 104: return 1;
 11236  004F30  0E01               	movlw	1
 11237  004F32  0012               	return	
 11238  004F34                     __end_of__display_itoa_u16:
 11239                           	opt stack 0
 11240                           tblptru	equ	0xFF8
 11241                           tblptrh	equ	0xFF7
 11242                           tblptrl	equ	0xFF6
 11243                           tablat	equ	0xFF5
 11244                           prodh	equ	0xFF4
 11245                           prodl	equ	0xFF3
 11246                           intcon	equ	0xFF2
 11247                           intcon2	equ	0xFF1
 11248                           intcon3	equ	0xFF0
 11249                           postinc0	equ	0xFEE
 11250                           wreg	equ	0xFE8
 11251                           postdec1	equ	0xFE5
 11252                           plusw1	equ	0xFE3
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           indf2	equ	0xFDF
 11256                           postinc2	equ	0xFDE
 11257                           plusw2	equ	0xFDB
 11258                           fsr2h	equ	0xFDA
 11259                           fsr2l	equ	0xFD9
 11260                           status	equ	0xFD8
 11261                           
 11262 ;; *************** function _itoa *****************
 11263 ;; Defined at:
 11264 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;  buf             2   16[COMRAM] PTR unsigned char 
 11267 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11268 ;;  val             2   18[COMRAM] int 
 11269 ;;  base            2   20[COMRAM] int 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11272 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  2   16[COMRAM] PTR unsigned char 
 11275 ;; Registers used:
 11276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11282 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11283 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;Total ram usage:        8 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    2
 11289 ;; This function calls:
 11290 ;;		_utoa
 11291 ;; This function is called by:
 11292 ;;		__display_itoa_u16
 11293 ;;		__display_itoa_u32
 11294 ;;		__display_itoa
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text46
 11299  0071AE                     __ptext46:
 11300                           	opt stack 0
 11301  0071AE                     _itoa:
 11302                           	opt stack 25
 11303                           
 11304                           ;incstack = 0
 11305  0071AE  C011  F017         	movff	itoa@buf,itoa@cp
 11306  0071B2  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 11307  0071B6  AE14               	btfss	itoa@val+1,7,c
 11308  0071B8  D00C               	goto	l3287
 11309  0071BA  C011  FFD9         	movff	itoa@buf,fsr2l
 11310  0071BE  C012  FFDA         	movff	itoa@buf+1,fsr2h
 11311  0071C2  0E2D               	movlw	45
 11312  0071C4  6EDF               	movwf	indf2,c
 11313  0071C6  4A11               	infsnz	itoa@buf,f,c
 11314  0071C8  2A12               	incf	itoa@buf+1,f,c
 11315  0071CA  6C13               	negf	itoa@val,c
 11316  0071CC  1E14               	comf	itoa@val+1,f,c
 11317  0071CE  B0D8               	btfsc	status,0,c
 11318  0071D0  2A14               	incf	itoa@val+1,f,c
 11319  0071D2                     l3287:
 11320  0071D2  C011  F008         	movff	itoa@buf,utoa@buf
 11321  0071D6  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 11322  0071DA  C013  F00A         	movff	itoa@val,utoa@val
 11323  0071DE  C014  F00B         	movff	itoa@val+1,utoa@val+1
 11324  0071E2  C015  F00C         	movff	itoa@base,utoa@base
 11325  0071E6  C016  F00D         	movff	itoa@base+1,utoa@base+1
 11326  0071EA  ECC8  F02A         	call	_utoa	;wreg free
 11327  0071EE  0012               	return	
 11328  0071F0                     __end_of_itoa:
 11329                           	opt stack 0
 11330                           tblptru	equ	0xFF8
 11331                           tblptrh	equ	0xFF7
 11332                           tblptrl	equ	0xFF6
 11333                           tablat	equ	0xFF5
 11334                           prodh	equ	0xFF4
 11335                           prodl	equ	0xFF3
 11336                           intcon	equ	0xFF2
 11337                           intcon2	equ	0xFF1
 11338                           intcon3	equ	0xFF0
 11339                           postinc0	equ	0xFEE
 11340                           wreg	equ	0xFE8
 11341                           postdec1	equ	0xFE5
 11342                           plusw1	equ	0xFE3
 11343                           fsr1h	equ	0xFE2
 11344                           fsr1l	equ	0xFE1
 11345                           indf2	equ	0xFDF
 11346                           postinc2	equ	0xFDE
 11347                           plusw2	equ	0xFDB
 11348                           fsr2h	equ	0xFDA
 11349                           fsr2l	equ	0xFD9
 11350                           status	equ	0xFD8
 11351                           
 11352 ;; *************** function _utoa *****************
 11353 ;; Defined at:
 11354 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  buf             2    7[COMRAM] PTR unsigned char 
 11357 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11358 ;;  val             2    9[COMRAM] unsigned int 
 11359 ;;  base            2   11[COMRAM] int 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;  v               2   13[COMRAM] unsigned int 
 11362 ;;  c               1   15[COMRAM] unsigned char 
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  2    7[COMRAM] PTR unsigned char 
 11365 ;; Registers used:
 11366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11372 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11373 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11376 ;;Total ram usage:        9 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; Hardware stack levels required when called:    1
 11379 ;; This function calls:
 11380 ;;		___lwdiv
 11381 ;;		___lwmod
 11382 ;; This function is called by:
 11383 ;;		_itoa
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           	psect	text47
 11388  005590                     __ptext47:
 11389                           	opt stack 0
 11390  005590                     _utoa:
 11391                           	opt stack 25
 11392                           
 11393                           ;incstack = 0
 11394  005590  C00A  F00E         	movff	utoa@val,utoa@v
 11395  005594  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 11396  005598  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 11397  00559C  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 11398  0055A0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11399  0055A4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11400  0055A8  EC5B  F037         	call	___lwdiv	;wreg free
 11401  0055AC  C001  F00E         	movff	?___lwdiv,utoa@v
 11402  0055B0  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 11403  0055B4  4A08               	infsnz	utoa@buf,f,c
 11404  0055B6  2A09               	incf	utoa@buf+1,f,c
 11405  0055B8  500E               	movf	utoa@v,w,c
 11406  0055BA  100F               	iorwf	utoa@v+1,w,c
 11407  0055BC  A4D8               	btfss	status,2,c
 11408  0055BE  D7EC               	goto	l3291
 11409  0055C0  C008  FFD9         	movff	utoa@buf,fsr2l
 11410  0055C4  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11411  0055C8  0E00               	movlw	0
 11412  0055CA  6EDF               	movwf	indf2,c
 11413  0055CC  0608               	decf	utoa@buf,f,c
 11414  0055CE  A0D8               	btfss	status,0,c
 11415  0055D0  0609               	decf	utoa@buf+1,f,c
 11416  0055D2  C00A  F001         	movff	utoa@val,___lwmod@dividend
 11417  0055D6  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 11418  0055DA  C00C  F003         	movff	utoa@base,___lwmod@divisor
 11419  0055DE  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 11420  0055E2  ECF8  F038         	call	___lwmod	;wreg free
 11421  0055E6  5001               	movf	?___lwmod,w,c
 11422  0055E8  6E10               	movwf	utoa@c,c
 11423  0055EA  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 11424  0055EE  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 11425  0055F2  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11426  0055F6  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11427  0055FA  EC5B  F037         	call	___lwdiv	;wreg free
 11428  0055FE  C001  F00A         	movff	?___lwdiv,utoa@val
 11429  005602  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 11430  005606  0E09               	movlw	9
 11431  005608  6410               	cpfsgt	utoa@c,c
 11432  00560A  D002               	goto	l3294
 11433  00560C  0E07               	movlw	7
 11434  00560E  2610               	addwf	utoa@c,f,c
 11435  005610                     l3294:
 11436  005610  0E30               	movlw	48
 11437  005612  2610               	addwf	utoa@c,f,c
 11438  005614  C008  FFD9         	movff	utoa@buf,fsr2l
 11439  005618  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11440  00561C  C010  FFDF         	movff	utoa@c,indf2
 11441  005620  0608               	decf	utoa@buf,f,c
 11442  005622  A0D8               	btfss	status,0,c
 11443  005624  0609               	decf	utoa@buf+1,f,c
 11444  005626  500A               	movf	utoa@val,w,c
 11445  005628  100B               	iorwf	utoa@val+1,w,c
 11446  00562A  A4D8               	btfss	status,2,c
 11447  00562C  D7D2               	goto	l3293
 11448                           
 11449                           ;	Return value of _utoa is never used
 11450  00562E  4A08               	infsnz	utoa@buf,f,c
 11451  005630  2A09               	incf	utoa@buf+1,f,c
 11452  005632  0012               	return	
 11453  005634                     __end_of_utoa:
 11454                           	opt stack 0
 11455                           tblptru	equ	0xFF8
 11456                           tblptrh	equ	0xFF7
 11457                           tblptrl	equ	0xFF6
 11458                           tablat	equ	0xFF5
 11459                           prodh	equ	0xFF4
 11460                           prodl	equ	0xFF3
 11461                           intcon	equ	0xFF2
 11462                           intcon2	equ	0xFF1
 11463                           intcon3	equ	0xFF0
 11464                           postinc0	equ	0xFEE
 11465                           wreg	equ	0xFE8
 11466                           postdec1	equ	0xFE5
 11467                           plusw1	equ	0xFE3
 11468                           fsr1h	equ	0xFE2
 11469                           fsr1l	equ	0xFE1
 11470                           indf2	equ	0xFDF
 11471                           postinc2	equ	0xFDE
 11472                           plusw2	equ	0xFDB
 11473                           fsr2h	equ	0xFDA
 11474                           fsr2l	equ	0xFD9
 11475                           status	equ	0xFD8
 11476                           
 11477 ;; *************** function ___lwmod *****************
 11478 ;; Defined at:
 11479 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11480 ;; Parameters:    Size  Location     Type
 11481 ;;  dividend        2    0[COMRAM] unsigned int 
 11482 ;;  divisor         2    2[COMRAM] unsigned int 
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;  counter         1    4[COMRAM] unsigned char 
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  2    0[COMRAM] unsigned int 
 11487 ;; Registers used:
 11488 ;;		wreg, status,2, status,0
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;Total ram usage:        5 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; This function calls:
 11501 ;;		Nothing
 11502 ;; This function is called by:
 11503 ;;		_utoa
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text48
 11508  0071F0                     __ptext48:
 11509                           	opt stack 0
 11510  0071F0                     ___lwmod:
 11511                           	opt stack 25
 11512                           
 11513                           ;incstack = 0
 11514  0071F0  5003               	movf	___lwmod@divisor,w,c
 11515  0071F2  1004               	iorwf	___lwmod@divisor+1,w,c
 11516  0071F4  B4D8               	btfsc	status,2,c
 11517  0071F6  D018               	goto	l3118
 11518  0071F8  0E01               	movlw	1
 11519  0071FA  6E05               	movwf	___lwmod@counter,c
 11520  0071FC  D004               	goto	l3113
 11521  0071FE  90D8               	bcf	status,0,c
 11522  007200  3603               	rlcf	___lwmod@divisor,f,c
 11523  007202  3604               	rlcf	___lwmod@divisor+1,f,c
 11524  007204  2A05               	incf	___lwmod@counter,f,c
 11525  007206                     l3113:
 11526  007206  AE04               	btfss	___lwmod@divisor+1,7,c
 11527  007208  D7FA               	goto	l3114
 11528  00720A                     u6880:
 11529  00720A  5003               	movf	___lwmod@divisor,w,c
 11530  00720C  5C01               	subwf	___lwmod@dividend,w,c
 11531  00720E  5004               	movf	___lwmod@divisor+1,w,c
 11532  007210  5802               	subwfb	___lwmod@dividend+1,w,c
 11533  007212  A0D8               	btfss	status,0,c
 11534  007214  D004               	goto	l3117
 11535  007216  5003               	movf	___lwmod@divisor,w,c
 11536  007218  5E01               	subwf	___lwmod@dividend,f,c
 11537  00721A  5004               	movf	___lwmod@divisor+1,w,c
 11538  00721C  5A02               	subwfb	___lwmod@dividend+1,f,c
 11539  00721E                     l3117:
 11540  00721E  90D8               	bcf	status,0,c
 11541  007220  3204               	rrcf	___lwmod@divisor+1,f,c
 11542  007222  3203               	rrcf	___lwmod@divisor,f,c
 11543  007224  2E05               	decfsz	___lwmod@counter,f,c
 11544  007226  D7F1               	goto	u6880
 11545  007228                     l3118:
 11546  007228  C001  F001         	movff	___lwmod@dividend,?___lwmod
 11547  00722C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 11548  007230  0012               	return		;funcret
 11549  007232                     __end_of___lwmod:
 11550                           	opt stack 0
 11551                           tblptru	equ	0xFF8
 11552                           tblptrh	equ	0xFF7
 11553                           tblptrl	equ	0xFF6
 11554                           tablat	equ	0xFF5
 11555                           prodh	equ	0xFF4
 11556                           prodl	equ	0xFF3
 11557                           intcon	equ	0xFF2
 11558                           intcon2	equ	0xFF1
 11559                           intcon3	equ	0xFF0
 11560                           postinc0	equ	0xFEE
 11561                           wreg	equ	0xFE8
 11562                           postdec1	equ	0xFE5
 11563                           plusw1	equ	0xFE3
 11564                           fsr1h	equ	0xFE2
 11565                           fsr1l	equ	0xFE1
 11566                           indf2	equ	0xFDF
 11567                           postinc2	equ	0xFDE
 11568                           plusw2	equ	0xFDB
 11569                           fsr2h	equ	0xFDA
 11570                           fsr2l	equ	0xFD9
 11571                           status	equ	0xFD8
 11572                           
 11573 ;; *************** function ___lwdiv *****************
 11574 ;; Defined at:
 11575 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11576 ;; Parameters:    Size  Location     Type
 11577 ;;  dividend        2    0[COMRAM] unsigned int 
 11578 ;;  divisor         2    2[COMRAM] unsigned int 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;  quotient        2    4[COMRAM] unsigned int 
 11581 ;;  counter         1    6[COMRAM] unsigned char 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  2    0[COMRAM] unsigned int 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11592 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11594 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11595 ;;Total ram usage:        7 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_utoa
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text49
 11605  006EB6                     __ptext49:
 11606                           	opt stack 0
 11607  006EB6                     ___lwdiv:
 11608                           	opt stack 25
 11609                           
 11610                           ;incstack = 0
 11611  006EB6  0E00               	movlw	0
 11612  006EB8  6E06               	movwf	___lwdiv@quotient+1,c
 11613  006EBA  0E00               	movlw	0
 11614  006EBC  6E05               	movwf	___lwdiv@quotient,c
 11615  006EBE  5003               	movf	___lwdiv@divisor,w,c
 11616  006EC0  1004               	iorwf	___lwdiv@divisor+1,w,c
 11617  006EC2  B4D8               	btfsc	status,2,c
 11618  006EC4  D01C               	goto	l3108
 11619  006EC6  0E01               	movlw	1
 11620  006EC8  6E07               	movwf	___lwdiv@counter,c
 11621  006ECA  D004               	goto	l3103
 11622  006ECC  90D8               	bcf	status,0,c
 11623  006ECE  3603               	rlcf	___lwdiv@divisor,f,c
 11624  006ED0  3604               	rlcf	___lwdiv@divisor+1,f,c
 11625  006ED2  2A07               	incf	___lwdiv@counter,f,c
 11626  006ED4                     l3103:
 11627  006ED4  AE04               	btfss	___lwdiv@divisor+1,7,c
 11628  006ED6  D7FA               	goto	l3104
 11629  006ED8                     u6850:
 11630  006ED8  90D8               	bcf	status,0,c
 11631  006EDA  3605               	rlcf	___lwdiv@quotient,f,c
 11632  006EDC  3606               	rlcf	___lwdiv@quotient+1,f,c
 11633  006EDE  5003               	movf	___lwdiv@divisor,w,c
 11634  006EE0  5C01               	subwf	___lwdiv@dividend,w,c
 11635  006EE2  5004               	movf	___lwdiv@divisor+1,w,c
 11636  006EE4  5802               	subwfb	___lwdiv@dividend+1,w,c
 11637  006EE6  A0D8               	btfss	status,0,c
 11638  006EE8  D005               	goto	l3107
 11639  006EEA  5003               	movf	___lwdiv@divisor,w,c
 11640  006EEC  5E01               	subwf	___lwdiv@dividend,f,c
 11641  006EEE  5004               	movf	___lwdiv@divisor+1,w,c
 11642  006EF0  5A02               	subwfb	___lwdiv@dividend+1,f,c
 11643  006EF2  8005               	bsf	___lwdiv@quotient,0,c
 11644  006EF4                     l3107:
 11645  006EF4  90D8               	bcf	status,0,c
 11646  006EF6  3204               	rrcf	___lwdiv@divisor+1,f,c
 11647  006EF8  3203               	rrcf	___lwdiv@divisor,f,c
 11648  006EFA  2E07               	decfsz	___lwdiv@counter,f,c
 11649  006EFC  D7ED               	goto	u6850
 11650  006EFE                     l3108:
 11651  006EFE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 11652  006F02  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11653  006F06  0012               	return		;funcret
 11654  006F08                     __end_of___lwdiv:
 11655                           	opt stack 0
 11656                           tblptru	equ	0xFF8
 11657                           tblptrh	equ	0xFF7
 11658                           tblptrl	equ	0xFF6
 11659                           tablat	equ	0xFF5
 11660                           prodh	equ	0xFF4
 11661                           prodl	equ	0xFF3
 11662                           intcon	equ	0xFF2
 11663                           intcon2	equ	0xFF1
 11664                           intcon3	equ	0xFF0
 11665                           postinc0	equ	0xFEE
 11666                           wreg	equ	0xFE8
 11667                           postdec1	equ	0xFE5
 11668                           plusw1	equ	0xFE3
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           plusw2	equ	0xFDB
 11674                           fsr2h	equ	0xFDA
 11675                           fsr2l	equ	0xFD9
 11676                           status	equ	0xFD8
 11677                           
 11678 ;; *************** function _bootloader_run *****************
 11679 ;; Defined at:
 11680 ;;		line 60 in file "bootloader.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;  timeslot        1    wreg     unsigned char 
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  timeslot        1   93[COMRAM] unsigned char 
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      void 
 11687 ;; Registers used:
 11688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;Total ram usage:        1 bytes
 11699 ;; Hardware stack levels used:    1
 11700 ;; Hardware stack levels required when called:    9
 11701 ;; This function calls:
 11702 ;;		__bootloader_find_file
 11703 ;;		__bootloader_program
 11704 ;;		__bootloader_verify_file
 11705 ;; This function is called by:
 11706 ;;		_main
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text50
 11711  006FFA                     __ptext50:
 11712                           	opt stack 0
 11713  006FFA                     _bootloader_run:
 11714                           	opt stack 21
 11715                           
 11716                           ;incstack = 0
 11717                           ;bootloader_run@timeslot stored from wreg
 11718  006FFA  6E5E               	movwf	bootloader_run@timeslot,c
 11719                           
 11720                           ;bootloader.c: 62: switch(os.bootloader_mode)
 11721  006FFC  D00F               	goto	l2128
 11722  006FFE                     
 11723                           ;bootloader.c: 65: _bootloader_find_file();
 11724  006FFE  EC6B  F02B         	call	__bootloader_find_file	;wreg free
 11725                           
 11726                           ;bootloader.c: 66: break;
 11727  007002  0012               	return	
 11728  007004                     
 11729                           ;bootloader.c: 69: _bootloader_find_file();
 11730  007004  EC6B  F02B         	call	__bootloader_find_file	;wreg free
 11731                           
 11732                           ;bootloader.c: 70: break;
 11733  007008  0012               	return	
 11734  00700A                     
 11735                           ;bootloader.c: 73: _bootloader_verify_file();
 11736  00700A  EC6D  F00A         	call	__bootloader_verify_file	;wreg free
 11737                           
 11738                           ;bootloader.c: 80: break;
 11739                           
 11740                           ;bootloader.c: 79: case BOOTLOADER_MODE_CHECK_FAILED:
 11741                           
 11742                           ;bootloader.c: 77: break;
 11743                           
 11744                           ;bootloader.c: 76: case BOOTLOADER_MODE_CHECK_COMPLETE:
 11745                           
 11746                           ;bootloader.c: 74: break;
 11747  00700E  0012               	return	
 11748  007010                     
 11749                           ;bootloader.c: 83: if(timeslot==0)
 11750  007010  505E               	movf	bootloader_run@timeslot,w,c
 11751  007012  A4D8               	btfss	status,2,c
 11752  007014  0012               	return	
 11753                           
 11754                           ;bootloader.c: 84: {;bootloader.c: 85: _bootloader_program();
 11755  007016  ECE4  F005         	call	__bootloader_program	;wreg free
 11756                           
 11757                           ;bootloader.c: 91: }
 11758                           
 11759                           ;bootloader.c: 90: break;
 11760                           
 11761                           ;bootloader.c: 89: case BOOTLOADER_MODE_DONE:
 11762                           
 11763                           ;bootloader.c: 86: };bootloader.c: 87: break;
 11764  00701A  0012               	return	
 11765  00701C                     l2128:
 11766  00701C  0100               	movlb	0	; () banked
 11767  00701E  5164               	movf	(_os+4)& (0+255),w,b	;volatile
 11768                           
 11769                           ; Switch size 1, requested type "space"
 11770                           ; Number of cases is 7, Range of values is 0 to 96
 11771                           ; switch strategies available:
 11772                           ; Name         Instructions Cycles
 11773                           ; simple_byte           22    12 (average)
 11774                           ;	Chosen strategy is simple_byte
 11775  007020  0A00               	xorlw	0	; case 0
 11776  007022  B4D8               	btfsc	status,2,c
 11777  007024  D7EC               	goto	l2129
 11778  007026  0A10               	xorlw	16	; case 16
 11779  007028  B4D8               	btfsc	status,2,c
 11780  00702A  D7EC               	goto	l2131
 11781  00702C  0A30               	xorlw	48	; case 32
 11782  00702E  B4D8               	btfsc	status,2,c
 11783  007030  D7EC               	goto	l2132
 11784  007032  0A10               	xorlw	16	; case 48
 11785  007034  B4D8               	btfsc	status,2,c
 11786  007036  0012               	return	
 11787  007038  0A70               	xorlw	112	; case 64
 11788  00703A  B4D8               	btfsc	status,2,c
 11789  00703C  0012               	return	
 11790  00703E  0A10               	xorlw	16	; case 80
 11791  007040  B4D8               	btfsc	status,2,c
 11792  007042  D7E6               	goto	l2135
 11793  007044  0A30               	xorlw	48	; case 96
 11794  007046  0012               	return	
 11795  007048                     __end_of_bootloader_run:
 11796                           	opt stack 0
 11797                           tblptru	equ	0xFF8
 11798                           tblptrh	equ	0xFF7
 11799                           tblptrl	equ	0xFF6
 11800                           tablat	equ	0xFF5
 11801                           prodh	equ	0xFF4
 11802                           prodl	equ	0xFF3
 11803                           intcon	equ	0xFF2
 11804                           intcon2	equ	0xFF1
 11805                           intcon3	equ	0xFF0
 11806                           postinc0	equ	0xFEE
 11807                           wreg	equ	0xFE8
 11808                           postdec1	equ	0xFE5
 11809                           plusw1	equ	0xFE3
 11810                           fsr1h	equ	0xFE2
 11811                           fsr1l	equ	0xFE1
 11812                           indf2	equ	0xFDF
 11813                           postinc2	equ	0xFDE
 11814                           plusw2	equ	0xFDB
 11815                           fsr2h	equ	0xFDA
 11816                           fsr2l	equ	0xFD9
 11817                           status	equ	0xFD8
 11818                           
 11819 ;; *************** function __bootloader_verify_file *****************
 11820 ;; Defined at:
 11821 ;;		line 167 in file "bootloader.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;		None
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  address32       4   89[COMRAM] unsigned long 
 11826 ;;  return_value    4   85[COMRAM] unsigned long 
 11827 ;;  rec_counter     1   84[COMRAM] unsigned char 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  1    wreg      void 
 11830 ;; Registers used:
 11831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11838 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11839 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11840 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11841 ;;Total ram usage:       17 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:    8
 11844 ;; This function calls:
 11845 ;;		__bootloader_check_address
 11846 ;;		_fat_get_file_size
 11847 ;;		_fat_read_from_file
 11848 ;;		_parseHexFileEntry
 11849 ;; This function is called by:
 11850 ;;		_bootloader_run
 11851 ;; This function uses a non-reentrant model
 11852 ;;
 11853                           
 11854                           	psect	text51
 11855  0014DA                     __ptext51:
 11856                           	opt stack 0
 11857  0014DA                     __bootloader_verify_file:
 11858                           	opt stack 21
 11859                           
 11860                           ;bootloader.c: 169: uint8_t rec_counter;;bootloader.c: 170: uint32_t return_value = 0;
 11861                           
 11862                           ;incstack = 0
 11863  0014DA  0E00               	movlw	0
 11864  0014DC  6E56               	movwf	__bootloader_verify_file@return_value,c
 11865  0014DE  0E00               	movlw	0
 11866  0014E0  6E57               	movwf	__bootloader_verify_file@return_value+1,c
 11867  0014E2  0E00               	movlw	0
 11868  0014E4  6E58               	movwf	__bootloader_verify_file@return_value+2,c
 11869  0014E6  0E00               	movlw	0
 11870  0014E8  6E59               	movwf	__bootloader_verify_file@return_value+3,c
 11871                           
 11872                           ;bootloader.c: 171: uint32_t address32;;bootloader.c: 174: hex_file_size = fat_get_file_
      +                          size(file_number);
 11873  0014EA  0100               	movlb	0	; () banked
 11874  0014EC  51FE               	movf	_file_number& (0+255),w,b
 11875  0014EE  EC0D  F032         	call	_fat_get_file_size
 11876  0014F2  C028  F078         	movff	?_fat_get_file_size,_hex_file_size
 11877  0014F6  C029  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11878  0014FA  C02A  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11879  0014FE  C02B  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11880                           
 11881                           ;bootloader.c: 177: for(rec_counter=0; rec_counter<1; ++rec_counter)
 11882  001502  0E00               	movlw	0
 11883  001504  6E55               	movwf	__bootloader_verify_file@rec_counter,c
 11884  001506                     l13461:
 11885  001506  5055               	movf	__bootloader_verify_file@rec_counter,w,c
 11886  001508  A4D8               	btfss	status,2,c
 11887  00150A  0012               	return	
 11888                           
 11889                           ;bootloader.c: 178: {;bootloader.c: 180: if((hex_file_size-hex_file_offset)>=50)
 11890  00150C  C07C  F04D         	movff	_hex_file_offset,??__bootloader_verify_file
 11891  001510  C07D  F04E         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 11892  001514  C07E  F04F         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 11893  001518  C07F  F050         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 11894  00151C  1E4D               	comf	??__bootloader_verify_file,f,c
 11895  00151E  1E4E               	comf	??__bootloader_verify_file+1,f,c
 11896  001520  1E4F               	comf	??__bootloader_verify_file+2,f,c
 11897  001522  1E50               	comf	??__bootloader_verify_file+3,f,c
 11898  001524  2A4D               	incf	??__bootloader_verify_file,f,c
 11899  001526  0E00               	movlw	0
 11900  001528  224E               	addwfc	??__bootloader_verify_file+1,f,c
 11901  00152A  224F               	addwfc	??__bootloader_verify_file+2,f,c
 11902  00152C  2250               	addwfc	??__bootloader_verify_file+3,f,c
 11903  00152E  0100               	movlb	0	; () banked
 11904  001530  5178               	movf	_hex_file_size& (0+255),w,b
 11905  001532  244D               	addwf	??__bootloader_verify_file,w,c
 11906  001534  6E51               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 11907  001536  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 11908  001538  204E               	addwfc	??__bootloader_verify_file+1,w,c
 11909  00153A  6E52               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 11910  00153C  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 11911  00153E  204F               	addwfc	??__bootloader_verify_file+2,w,c
 11912  001540  6E53               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 11913  001542  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 11914  001544  2050               	addwfc	??__bootloader_verify_file+3,w,c
 11915  001546  6E54               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 11916  001548  5054               	movf	??__bootloader_verify_file+7,w,c
 11917  00154A  1053               	iorwf	??__bootloader_verify_file+6,w,c
 11918  00154C  1052               	iorwf	??__bootloader_verify_file+5,w,c
 11919  00154E  E104               	bnz	u10800
 11920  001550  0E32               	movlw	50
 11921  001552  5C51               	subwf	??__bootloader_verify_file+4,w,c
 11922  001554  A0D8               	btfss	status,0,c
 11923  001556  D018               	goto	l2160
 11924  001558                     u10800:
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;bootloader.c: 181: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 11928  001558  C07C  F037         	movff	_hex_file_offset,fat_read_from_file@start_byte
 11929  00155C  C07D  F038         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 11930  001560  C07E  F039         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 11931  001564  C07F  F03A         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 11932  001568  0E32               	movlw	50
 11933  00156A  6E3B               	movwf	fat_read_from_file@length,c
 11934  00156C  0E00               	movlw	0
 11935  00156E  6E3C               	movwf	fat_read_from_file@length+1,c
 11936  001570  0E00               	movlw	0
 11937  001572  6E3D               	movwf	fat_read_from_file@length+2,c
 11938  001574  0E00               	movlw	0
 11939  001576  6E3E               	movwf	fat_read_from_file@length+3,c
 11940  001578  0E80               	movlw	low _file_buffer
 11941  00157A  6E3F               	movwf	fat_read_from_file@data,c
 11942  00157C  0E02               	movlw	high _file_buffer
 11943  00157E  6E40               	movwf	fat_read_from_file@data+1,c
 11944  001580  51FE               	movf	_file_number& (0+255),w,b
 11945  001582  EC64  F00F         	call	_fat_read_from_file
 11946  001586  D02D               	goto	l2161
 11947  001588                     l2160:
 11948                           
 11949                           ;bootloader.c: 182: else;bootloader.c: 183: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
 11950  001588  C07C  F037         	movff	_hex_file_offset,fat_read_from_file@start_byte
 11951  00158C  C07D  F038         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 11952  001590  C07E  F039         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 11953  001594  C07F  F03A         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 11954  001598  C07C  F04D         	movff	_hex_file_offset,??__bootloader_verify_file
 11955  00159C  C07D  F04E         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 11956  0015A0  C07E  F04F         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 11957  0015A4  C07F  F050         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 11958  0015A8  1E4D               	comf	??__bootloader_verify_file,f,c
 11959  0015AA  1E4E               	comf	??__bootloader_verify_file+1,f,c
 11960  0015AC  1E4F               	comf	??__bootloader_verify_file+2,f,c
 11961  0015AE  1E50               	comf	??__bootloader_verify_file+3,f,c
 11962  0015B0  2A4D               	incf	??__bootloader_verify_file,f,c
 11963  0015B2  0E00               	movlw	0
 11964  0015B4  224E               	addwfc	??__bootloader_verify_file+1,f,c
 11965  0015B6  224F               	addwfc	??__bootloader_verify_file+2,f,c
 11966  0015B8  2250               	addwfc	??__bootloader_verify_file+3,f,c
 11967  0015BA  0100               	movlb	0	; () banked
 11968  0015BC  5178               	movf	_hex_file_size& (0+255),w,b
 11969  0015BE  244D               	addwf	??__bootloader_verify_file,w,c
 11970  0015C0  6E3B               	movwf	fat_read_from_file@length,c
 11971  0015C2  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 11972  0015C4  204E               	addwfc	??__bootloader_verify_file+1,w,c
 11973  0015C6  6E3C               	movwf	fat_read_from_file@length+1,c
 11974  0015C8  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 11975  0015CA  204F               	addwfc	??__bootloader_verify_file+2,w,c
 11976  0015CC  6E3D               	movwf	fat_read_from_file@length+2,c
 11977  0015CE  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 11978  0015D0  2050               	addwfc	??__bootloader_verify_file+3,w,c
 11979  0015D2  6E3E               	movwf	fat_read_from_file@length+3,c
 11980  0015D4  0E80               	movlw	low _file_buffer
 11981  0015D6  6E3F               	movwf	fat_read_from_file@data,c
 11982  0015D8  0E02               	movlw	high _file_buffer
 11983  0015DA  6E40               	movwf	fat_read_from_file@data+1,c
 11984  0015DC  51FE               	movf	_file_number& (0+255),w,b
 11985  0015DE  EC64  F00F         	call	_fat_read_from_file
 11986  0015E2                     l2161:
 11987                           
 11988                           ;bootloader.c: 185: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 11989  0015E2  0E80               	movlw	low _file_buffer
 11990  0015E4  6E0C               	movwf	parseHexFileEntry@data,c
 11991  0015E6  0E02               	movlw	high _file_buffer
 11992  0015E8  6E0D               	movwf	parseHexFileEntry@data+1,c
 11993  0015EA  0E00               	movlw	0
 11994  0015EC  6E0E               	movwf	parseHexFileEntry@offset,c
 11995  0015EE  0E00               	movlw	0
 11996  0015F0  6E0F               	movwf	parseHexFileEntry@offset+1,c
 11997  0015F2  0E00               	movlw	0
 11998  0015F4  6E10               	movwf	parseHexFileEntry@offset+2,c
 11999  0015F6  0E00               	movlw	0
 12000  0015F8  6E11               	movwf	parseHexFileEntry@offset+3,c
 12001  0015FA  0EB8               	movlw	low _hex_file_entry
 12002  0015FC  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12003  0015FE  0E01               	movlw	high _hex_file_entry
 12004  001600  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12005  001602  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12006  001606  C00C  F056         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 12007  00160A  C00D  F057         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 12008  00160E  C00E  F058         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 12009  001612  C00F  F059         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 12010                           
 12011                           ;bootloader.c: 188: ++hex_file_entries;
 12012  001616  0100               	movlb	0	; () banked
 12013  001618  4B84               	infsnz	_hex_file_entries& (0+255),f,b
 12014  00161A  2B85               	incf	(_hex_file_entries+1)& (0+255),f,b
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;bootloader.c: 191: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 12018  00161C  0E04               	movlw	4
 12019  00161E  0101               	movlb	1	; () banked
 12020  001620  19BC               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 12021  001622  A4D8               	btfss	status,2,c
 12022  001624  D01C               	goto	l2162
 12023                           
 12024                           ; BSR set to: 1
 12025                           ;bootloader.c: 192: {;bootloader.c: 193: extended_linear_address = hex_file_entry.data[0
      +                          ];
 12026  001626  51BD               	movf	(_hex_file_entry+5)& (0+255),w,b
 12027  001628  6F40               	movwf	_extended_linear_address& (0+255),b
 12028  00162A  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12029  00162C  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12030  00162E  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12031                           
 12032                           ; BSR set to: 1
 12033                           ;bootloader.c: 194: extended_linear_address <<= 8;
 12034  001630  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12035  001634  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12036  001638  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12037  00163C  6B40               	clrf	_extended_linear_address& (0+255),b
 12038                           
 12039                           ; BSR set to: 1
 12040                           ;bootloader.c: 195: extended_linear_address |= hex_file_entry.data[1];
 12041  00163E  51BE               	movf	(_hex_file_entry+6)& (0+255),w,b
 12042  001640  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12043                           
 12044                           ; BSR set to: 1
 12045                           ;bootloader.c: 196: extended_linear_address <<= 8;
 12046  001642  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12047  001646  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12048  00164A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12049  00164E  6B40               	clrf	_extended_linear_address& (0+255),b
 12050                           
 12051                           ; BSR set to: 1
 12052                           ;bootloader.c: 197: extended_linear_address <<= 8;
 12053  001650  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12054  001654  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12055  001658  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12056  00165C  6B40               	clrf	_extended_linear_address& (0+255),b
 12057  00165E                     l2162:
 12058                           
 12059                           ; BSR set to: 1
 12060                           ;bootloader.c: 198: };bootloader.c: 201: if(hex_file_entry.recordType==RecordTypeData)
 12061                           
 12062                           ; BSR set to: 1
 12063  00165E  51BC               	movf	(_hex_file_entry+4)& (0+255),w,b
 12064  001660  A4D8               	btfss	status,2,c
 12065  001662  D047               	goto	l2166
 12066                           
 12067                           ; BSR set to: 1
 12068                           ;bootloader.c: 202: {;bootloader.c: 204: address32 = extended_linear_address + hex_file_
      +                          entry.address;
 12069  001664  51BA               	movf	(_hex_file_entry+2)& (0+255),w,b
 12070  001666  2540               	addwf	_extended_linear_address& (0+255),w,b
 12071  001668  6E5A               	movwf	__bootloader_verify_file@address32,c
 12072  00166A  51BB               	movf	(_hex_file_entry+3)& (0+255),w,b
 12073  00166C  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12074  00166E  6E5B               	movwf	__bootloader_verify_file@address32+1,c
 12075  001670  0E00               	movlw	0
 12076  001672  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12077  001674  6E5C               	movwf	__bootloader_verify_file@address32+2,c
 12078  001676  0E00               	movlw	0
 12079  001678  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12080  00167A  6E5D               	movwf	__bootloader_verify_file@address32+3,c
 12081                           
 12082                           ;bootloader.c: 207: if(address32<file_minimum_address)
 12083  00167C  5148               	movf	_file_minimum_address& (0+255),w,b
 12084  00167E  5C5A               	subwf	__bootloader_verify_file@address32,w,c
 12085  001680  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
 12086  001682  585B               	subwfb	__bootloader_verify_file@address32+1,w,c
 12087  001684  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
 12088  001686  585C               	subwfb	__bootloader_verify_file@address32+2,w,c
 12089  001688  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
 12090  00168A  585D               	subwfb	__bootloader_verify_file@address32+3,w,c
 12091  00168C  B0D8               	btfsc	status,0,c
 12092  00168E  D008               	goto	l2164
 12093                           
 12094                           ; BSR set to: 1
 12095                           ;bootloader.c: 208: {;bootloader.c: 209: file_minimum_address = address32;
 12096  001690  C05A  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
 12097  001694  C05B  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 12098  001698  C05C  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 12099  00169C  C05D  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 12100  0016A0                     l2164:
 12101                           
 12102                           ; BSR set to: 1
 12103                           ;bootloader.c: 210: };bootloader.c: 211: if(address32>file_maximum_address)
 12104                           
 12105                           ; BSR set to: 1
 12106  0016A0  505A               	movf	__bootloader_verify_file@address32,w,c
 12107  0016A2  5D44               	subwf	_file_maximum_address& (0+255),w,b
 12108  0016A4  505B               	movf	__bootloader_verify_file@address32+1,w,c
 12109  0016A6  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 12110  0016A8  505C               	movf	__bootloader_verify_file@address32+2,w,c
 12111  0016AA  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 12112  0016AC  505D               	movf	__bootloader_verify_file@address32+3,w,c
 12113  0016AE  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 12114  0016B0  B0D8               	btfsc	status,0,c
 12115  0016B2  D008               	goto	l2165
 12116                           
 12117                           ; BSR set to: 1
 12118                           ;bootloader.c: 212: {;bootloader.c: 213: file_maximum_address = address32;
 12119  0016B4  C05A  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
 12120  0016B8  C05B  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 12121  0016BC  C05C  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 12122  0016C0  C05D  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 12123  0016C4                     l2165:
 12124                           
 12125                           ; BSR set to: 1
 12126                           ;bootloader.c: 214: };bootloader.c: 217: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
 12127                           
 12128                           ; BSR set to: 1
 12129  0016C4  C05A  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 12130  0016C8  C05B  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 12131  0016CC  C05C  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 12132  0016D0  C05D  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 12133  0016D4  C1B8  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 12134  0016D8  EC01  F024         	call	__bootloader_check_address	;wreg free
 12135  0016DC  0AFF               	xorlw	255
 12136  0016DE  A4D8               	btfss	status,2,c
 12137  0016E0  D008               	goto	l2166
 12138                           
 12139                           ;bootloader.c: 218: {;bootloader.c: 220: last_error = ShortRecordErrorAddressRange;
 12140  0016E2  0E0B               	movlw	11
 12141  0016E4  0100               	movlb	0	; () banked
 12142  0016E6  6F9D               	movwf	_last_error& (0+255),b
 12143                           
 12144                           ;bootloader.c: 222: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12145  0016E8  0E40               	movlw	64
 12146  0016EA  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12147                           
 12148                           ;bootloader.c: 223: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12149  0016EC  0E40               	movlw	64
 12150  0016EE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12151                           
 12152                           ;bootloader.c: 224: break;
 12153  0016F0  0012               	return	
 12154  0016F2                     l2166:
 12155                           
 12156                           ;bootloader.c: 225: };bootloader.c: 226: };bootloader.c: 228: if(return_value==0)
 12157                           
 12158                           ; BSR set to: 0
 12159                           
 12160                           ; BSR set to: 0
 12161  0016F2  5056               	movf	__bootloader_verify_file@return_value,w,c
 12162  0016F4  1057               	iorwf	__bootloader_verify_file@return_value+1,w,c
 12163  0016F6  1058               	iorwf	__bootloader_verify_file@return_value+2,w,c
 12164  0016F8  1059               	iorwf	__bootloader_verify_file@return_value+3,w,c
 12165  0016FA  A4D8               	btfss	status,2,c
 12166  0016FC  D026               	goto	l2167
 12167                           
 12168                           ;bootloader.c: 229: {;bootloader.c: 232: total_hex_file_entries = hex_file_entries;
 12169  0016FE  C084  F162         	movff	_hex_file_entries,_total_hex_file_entries
 12170  001702  C085  F163         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 12171                           
 12172                           ;bootloader.c: 233: hex_file_entries = 0;
 12173  001706  0E00               	movlw	0
 12174  001708  0100               	movlb	0	; () banked
 12175  00170A  6F85               	movwf	(_hex_file_entries+1)& (0+255),b
 12176  00170C  0E00               	movlw	0
 12177  00170E  6F84               	movwf	_hex_file_entries& (0+255),b
 12178                           
 12179                           ;bootloader.c: 234: hex_file_offset = 0;
 12180  001710  0E00               	movlw	0
 12181  001712  6F7C               	movwf	_hex_file_offset& (0+255),b
 12182  001714  0E00               	movlw	0
 12183  001716  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 12184  001718  0E00               	movlw	0
 12185  00171A  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 12186  00171C  0E00               	movlw	0
 12187  00171E  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 12188                           
 12189                           ;bootloader.c: 235: extended_linear_address = 0;
 12190  001720  0E00               	movlw	0
 12191  001722  0101               	movlb	1	; () banked
 12192  001724  6F40               	movwf	_extended_linear_address& (0+255),b
 12193  001726  0E00               	movlw	0
 12194  001728  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 12195  00172A  0E00               	movlw	0
 12196  00172C  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 12197  00172E  0E00               	movlw	0
 12198  001730  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 12199                           
 12200                           ;bootloader.c: 236: flash_pages_written = 0;
 12201  001732  0E00               	movlw	0
 12202  001734  6F61               	movwf	(_flash_pages_written+1)& (0+255),b
 12203  001736  0E00               	movlw	0
 12204  001738  6F60               	movwf	_flash_pages_written& (0+255),b
 12205                           
 12206                           ;bootloader.c: 237: start_from_byte_next = 0;
 12207  00173A  0E00               	movlw	0
 12208  00173C  0100               	movlb	0	; () banked
 12209  00173E  6F9C               	movwf	_start_from_byte_next& (0+255),b
 12210                           
 12211                           ;bootloader.c: 239: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 12212  001740  0E30               	movlw	48
 12213  001742  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12214                           
 12215                           ;bootloader.c: 240: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 12216  001744  0E30               	movlw	48
 12217  001746  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12218                           
 12219                           ;bootloader.c: 241: break;
 12220  001748  0012               	return	
 12221  00174A                     l2167:
 12222                           
 12223                           ;bootloader.c: 243: else if(return_value>0xFFFFFFF0)
 12224                           
 12225                           ; BSR set to: 0
 12226  00174A  0EF1               	movlw	241
 12227  00174C  5C56               	subwf	__bootloader_verify_file@return_value,w,c
 12228  00174E  0EFF               	movlw	255
 12229  001750  5857               	subwfb	__bootloader_verify_file@return_value+1,w,c
 12230  001752  0EFF               	movlw	255
 12231  001754  5858               	subwfb	__bootloader_verify_file@return_value+2,w,c
 12232  001756  0EFF               	movlw	255
 12233  001758  5859               	subwfb	__bootloader_verify_file@return_value+3,w,c
 12234  00175A  A0D8               	btfss	status,0,c
 12235  00175C  D008               	goto	l2169
 12236                           
 12237                           ;bootloader.c: 244: {;bootloader.c: 246: last_error = return_value & 0xF;
 12238  00175E  5056               	movf	__bootloader_verify_file@return_value,w,c
 12239  001760  0B0F               	andlw	15
 12240  001762  0100               	movlb	0	; () banked
 12241  001764  6F9D               	movwf	_last_error& (0+255),b
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;bootloader.c: 248: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12245  001766  0E40               	movlw	64
 12246  001768  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12247                           
 12248                           ; BSR set to: 0
 12249                           ;bootloader.c: 249: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12250  00176A  0E40               	movlw	64
 12251  00176C  D7EC               	goto	L1
 12252  00176E                     l2169:
 12253                           
 12254                           ;bootloader.c: 252: else;bootloader.c: 253: {;bootloader.c: 255: hex_file_offset += retu
      +                          rn_value;
 12255                           
 12256                           ; BSR set to: 0
 12257  00176E  5056               	movf	__bootloader_verify_file@return_value,w,c
 12258  001770  0100               	movlb	0	; () banked
 12259  001772  277C               	addwf	_hex_file_offset& (0+255),f,b
 12260  001774  5057               	movf	__bootloader_verify_file@return_value+1,w,c
 12261  001776  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12262  001778  5058               	movf	__bootloader_verify_file@return_value+2,w,c
 12263  00177A  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12264  00177C  5059               	movf	__bootloader_verify_file@return_value+3,w,c
 12265  00177E  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12266                           
 12267                           ; BSR set to: 0
 12268                           
 12269                           ; BSR set to: 0
 12270                           
 12271                           ; BSR set to: 0
 12272  001780  2A55               	incf	__bootloader_verify_file@rec_counter,f,c
 12273  001782  D6C1               	goto	l13461
 12274  001784                     __end_of__bootloader_verify_file:
 12275                           	opt stack 0
 12276                           tblptru	equ	0xFF8
 12277                           tblptrh	equ	0xFF7
 12278                           tblptrl	equ	0xFF6
 12279                           tablat	equ	0xFF5
 12280                           prodh	equ	0xFF4
 12281                           prodl	equ	0xFF3
 12282                           intcon	equ	0xFF2
 12283                           intcon2	equ	0xFF1
 12284                           intcon3	equ	0xFF0
 12285                           postinc0	equ	0xFEE
 12286                           wreg	equ	0xFE8
 12287                           postdec1	equ	0xFE5
 12288                           plusw1	equ	0xFE3
 12289                           fsr1h	equ	0xFE2
 12290                           fsr1l	equ	0xFE1
 12291                           indf2	equ	0xFDF
 12292                           postinc2	equ	0xFDE
 12293                           plusw2	equ	0xFDB
 12294                           fsr2h	equ	0xFDA
 12295                           fsr2l	equ	0xFD9
 12296                           status	equ	0xFD8
 12297                           
 12298 ;; *************** function __bootloader_program *****************
 12299 ;; Defined at:
 12300 ;;		line 260 in file "bootloader.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  address32       4   55[BANK0 ] unsigned long 
 12305 ;;  return_value    4   51[BANK0 ] unsigned long 
 12306 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 12307 ;;  cntr            2   60[BANK0 ] unsigned int 
 12308 ;;  address_with    2   49[BANK0 ] unsigned int 
 12309 ;;  entry_page      2   47[BANK0 ] unsigned int 
 12310 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 12311 ;;		 -> pageBuffer(1024), 
 12312 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1    wreg      void 
 12315 ;; Registers used:
 12316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12317 ;; Tracked objects:
 12318 ;;		On entry : 0/0
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12323 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12324 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12325 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12326 ;;Total ram usage:       27 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    8
 12329 ;; This function calls:
 12330 ;;		__bootloader_check_address
 12331 ;;		_fat_read_from_file
 12332 ;;		_internalFlash_addressWithinPage
 12333 ;;		_internalFlash_erasePage
 12334 ;;		_internalFlash_getBuffer
 12335 ;;		_internalFlash_pageFromAddress
 12336 ;;		_internalFlash_readPage
 12337 ;;		_internalFlash_writePage
 12338 ;;		_parseHexFileEntry
 12339 ;; This function is called by:
 12340 ;;		_bootloader_run
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text52
 12345  000BC8                     __ptext52:
 12346                           	opt stack 0
 12347  000BC8                     __bootloader_program:
 12348                           	opt stack 21
 12349                           
 12350                           ;bootloader.c: 262: uint16_t cntr;;bootloader.c: 263: uint8_t* buffer;;bootloader.c: 264
      +                          : uint16_t entry_page;;bootloader.c: 265: uint16_t page_to_write = 0;
 12351                           
 12352                           ;incstack = 0
 12353  000BC8  0E00               	movlw	0
 12354  000BCA  0100               	movlb	0	; () banked
 12355  000BCC  6FFD               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 12356  000BCE  0E00               	movlw	0
 12357  000BD0  6FFC               	movwf	__bootloader_program@page_to_write& (0+255),b
 12358                           
 12359                           ;bootloader.c: 266: uint8_t start_from_byte;;bootloader.c: 267: uint32_t address32;;boot
      +                          loader.c: 268: uint32_t return_value = 0;
 12360  000BD2  0E00               	movlw	0
 12361  000BD4  6FF1               	movwf	__bootloader_program@return_value& (0+255),b
 12362  000BD6  0E00               	movlw	0
 12363  000BD8  6FF2               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 12364  000BDA  0E00               	movlw	0
 12365  000BDC  6FF3               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 12366  000BDE  0E00               	movlw	0
 12367  000BE0  6FF4               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 12368  000BE2                     
 12369                           ;bootloader.c: 274: {;bootloader.c: 276: if((hex_file_size-hex_file_offset)>=50)
 12370                           
 12371                           ; BSR set to: 0
 12372  000BE2  C07C  F04D         	movff	_hex_file_offset,??__bootloader_program
 12373  000BE6  C07D  F04E         	movff	_hex_file_offset+1,??__bootloader_program+1
 12374  000BEA  C07E  F04F         	movff	_hex_file_offset+2,??__bootloader_program+2
 12375  000BEE  C07F  F050         	movff	_hex_file_offset+3,??__bootloader_program+3
 12376  000BF2  1E4D               	comf	??__bootloader_program,f,c
 12377  000BF4  1E4E               	comf	??__bootloader_program+1,f,c
 12378  000BF6  1E4F               	comf	??__bootloader_program+2,f,c
 12379  000BF8  1E50               	comf	??__bootloader_program+3,f,c
 12380  000BFA  2A4D               	incf	??__bootloader_program,f,c
 12381  000BFC  0E00               	movlw	0
 12382  000BFE  224E               	addwfc	??__bootloader_program+1,f,c
 12383  000C00  224F               	addwfc	??__bootloader_program+2,f,c
 12384  000C02  2250               	addwfc	??__bootloader_program+3,f,c
 12385  000C04  0100               	movlb	0	; () banked
 12386  000C06  5178               	movf	_hex_file_size& (0+255),w,b
 12387  000C08  244D               	addwf	??__bootloader_program,w,c
 12388  000C0A  6E51               	movwf	(??__bootloader_program+4)& (0+255),c
 12389  000C0C  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12390  000C0E  204E               	addwfc	??__bootloader_program+1,w,c
 12391  000C10  6E52               	movwf	(??__bootloader_program+5)& (0+255),c
 12392  000C12  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12393  000C14  204F               	addwfc	??__bootloader_program+2,w,c
 12394  000C16  6E53               	movwf	(??__bootloader_program+6)& (0+255),c
 12395  000C18  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12396  000C1A  2050               	addwfc	??__bootloader_program+3,w,c
 12397  000C1C  6E54               	movwf	(??__bootloader_program+7)& (0+255),c
 12398  000C1E  5054               	movf	??__bootloader_program+7,w,c
 12399  000C20  1053               	iorwf	??__bootloader_program+6,w,c
 12400  000C22  1052               	iorwf	??__bootloader_program+5,w,c
 12401  000C24  E104               	bnz	u10890
 12402  000C26  0E32               	movlw	50
 12403  000C28  5C51               	subwf	??__bootloader_program+4,w,c
 12404  000C2A  A0D8               	btfss	status,0,c
 12405  000C2C  D018               	goto	l2175
 12406  000C2E                     u10890:
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;bootloader.c: 277: {;bootloader.c: 278: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
 12410  000C2E  C07C  F037         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12411  000C32  C07D  F038         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12412  000C36  C07E  F039         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12413  000C3A  C07F  F03A         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12414  000C3E  0E32               	movlw	50
 12415  000C40  6E3B               	movwf	fat_read_from_file@length,c
 12416  000C42  0E00               	movlw	0
 12417  000C44  6E3C               	movwf	fat_read_from_file@length+1,c
 12418  000C46  0E00               	movlw	0
 12419  000C48  6E3D               	movwf	fat_read_from_file@length+2,c
 12420  000C4A  0E00               	movlw	0
 12421  000C4C  6E3E               	movwf	fat_read_from_file@length+3,c
 12422  000C4E  0E80               	movlw	low _file_buffer
 12423  000C50  6E3F               	movwf	fat_read_from_file@data,c
 12424  000C52  0E02               	movlw	high _file_buffer
 12425  000C54  6E40               	movwf	fat_read_from_file@data+1,c
 12426  000C56  51FE               	movf	_file_number& (0+255),w,b
 12427  000C58  EC64  F00F         	call	_fat_read_from_file
 12428                           
 12429                           ;bootloader.c: 279: }
 12430  000C5C  D02D               	goto	l2176
 12431  000C5E                     l2175:
 12432                           
 12433                           ;bootloader.c: 280: else;bootloader.c: 281: {;bootloader.c: 282: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
 12434  000C5E  C07C  F037         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12435  000C62  C07D  F038         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12436  000C66  C07E  F039         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12437  000C6A  C07F  F03A         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12438  000C6E  C07C  F04D         	movff	_hex_file_offset,??__bootloader_program
 12439  000C72  C07D  F04E         	movff	_hex_file_offset+1,??__bootloader_program+1
 12440  000C76  C07E  F04F         	movff	_hex_file_offset+2,??__bootloader_program+2
 12441  000C7A  C07F  F050         	movff	_hex_file_offset+3,??__bootloader_program+3
 12442  000C7E  1E4D               	comf	??__bootloader_program,f,c
 12443  000C80  1E4E               	comf	??__bootloader_program+1,f,c
 12444  000C82  1E4F               	comf	??__bootloader_program+2,f,c
 12445  000C84  1E50               	comf	??__bootloader_program+3,f,c
 12446  000C86  2A4D               	incf	??__bootloader_program,f,c
 12447  000C88  0E00               	movlw	0
 12448  000C8A  224E               	addwfc	??__bootloader_program+1,f,c
 12449  000C8C  224F               	addwfc	??__bootloader_program+2,f,c
 12450  000C8E  2250               	addwfc	??__bootloader_program+3,f,c
 12451  000C90  0100               	movlb	0	; () banked
 12452  000C92  5178               	movf	_hex_file_size& (0+255),w,b
 12453  000C94  244D               	addwf	??__bootloader_program,w,c
 12454  000C96  6E3B               	movwf	fat_read_from_file@length,c
 12455  000C98  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12456  000C9A  204E               	addwfc	??__bootloader_program+1,w,c
 12457  000C9C  6E3C               	movwf	fat_read_from_file@length+1,c
 12458  000C9E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12459  000CA0  204F               	addwfc	??__bootloader_program+2,w,c
 12460  000CA2  6E3D               	movwf	fat_read_from_file@length+2,c
 12461  000CA4  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12462  000CA6  2050               	addwfc	??__bootloader_program+3,w,c
 12463  000CA8  6E3E               	movwf	fat_read_from_file@length+3,c
 12464  000CAA  0E80               	movlw	low _file_buffer
 12465  000CAC  6E3F               	movwf	fat_read_from_file@data,c
 12466  000CAE  0E02               	movlw	high _file_buffer
 12467  000CB0  6E40               	movwf	fat_read_from_file@data+1,c
 12468  000CB2  51FE               	movf	_file_number& (0+255),w,b
 12469  000CB4  EC64  F00F         	call	_fat_read_from_file
 12470  000CB8                     l2176:
 12471                           
 12472                           ;bootloader.c: 283: };bootloader.c: 286: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
 12473  000CB8  0E80               	movlw	low _file_buffer
 12474  000CBA  6E0C               	movwf	parseHexFileEntry@data,c
 12475  000CBC  0E02               	movlw	high _file_buffer
 12476  000CBE  6E0D               	movwf	parseHexFileEntry@data+1,c
 12477  000CC0  0E00               	movlw	0
 12478  000CC2  6E0E               	movwf	parseHexFileEntry@offset,c
 12479  000CC4  0E00               	movlw	0
 12480  000CC6  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12481  000CC8  0E00               	movlw	0
 12482  000CCA  6E10               	movwf	parseHexFileEntry@offset+2,c
 12483  000CCC  0E00               	movlw	0
 12484  000CCE  6E11               	movwf	parseHexFileEntry@offset+3,c
 12485  000CD0  0EB8               	movlw	low _hex_file_entry
 12486  000CD2  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12487  000CD4  0E01               	movlw	high _hex_file_entry
 12488  000CD6  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12489  000CD8  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12490  000CDC  C00C  F0F1         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 12491  000CE0  C00D  F0F2         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 12492  000CE4  C00E  F0F3         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 12493  000CE8  C00F  F0F4         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 12494                           
 12495                           ;bootloader.c: 289: ++hex_file_entries;
 12496  000CEC  0100               	movlb	0	; () banked
 12497  000CEE  4B84               	infsnz	_hex_file_entries& (0+255),f,b
 12498  000CF0  2B85               	incf	(_hex_file_entries+1)& (0+255),f,b
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;bootloader.c: 292: if(return_value>RecordErrorNoError)
 12502  000CF2  0EF1               	movlw	241
 12503  000CF4  5DF1               	subwf	__bootloader_program@return_value& (0+255),w,b
 12504  000CF6  0EFF               	movlw	255
 12505  000CF8  59F2               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 12506  000CFA  0EFF               	movlw	255
 12507  000CFC  59F3               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 12508  000CFE  0EFF               	movlw	255
 12509  000D00  59F4               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 12510  000D02  A0D8               	btfss	status,0,c
 12511  000D04  D005               	goto	l2177
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;bootloader.c: 293: {;bootloader.c: 295: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
 12515  000D06  0E40               	movlw	64
 12516  000D08  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12517                           
 12518                           ;bootloader.c: 296: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12519  000D0A  0E40               	movlw	64
 12520  000D0C  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12521                           
 12522                           ; BSR set to: 0
 12523                           ;bootloader.c: 297: return;
 12524  000D0E  0012               	return	
 12525  000D10                     l2177:
 12526                           
 12527                           ; BSR set to: 0
 12528                           ;bootloader.c: 305: else;bootloader.c: 306: {;bootloader.c: 308: hex_file_offset += retu
      +                          rn_value;
 12529                           
 12530                           ; BSR set to: 0
 12531  000D10  51F1               	movf	__bootloader_program@return_value& (0+255),w,b
 12532  000D12  277C               	addwf	_hex_file_offset& (0+255),f,b
 12533  000D14  51F2               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12534  000D16  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12535  000D18  51F3               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12536  000D1A  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12537  000D1C  51F4               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12538  000D1E  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12539                           
 12540                           ; BSR set to: 0
 12541                           ;bootloader.c: 309: };bootloader.c: 311: switch(hex_file_entry.recordType)
 12542  000D20  D0FB               	goto	l2180
 12543  000D22                     
 12544                           ;bootloader.c: 317: extended_linear_address = hex_file_entry.data[0];
 12545                           
 12546                           ; BSR set to: 0
 12547  000D22  0101               	movlb	1	; () banked
 12548  000D24  51BD               	movf	(_hex_file_entry+5)& (0+255),w,b
 12549  000D26  6F40               	movwf	_extended_linear_address& (0+255),b
 12550  000D28  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12551  000D2A  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12552  000D2C  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12553                           
 12554                           ; BSR set to: 1
 12555                           ;bootloader.c: 318: extended_linear_address <<= 8;
 12556  000D2E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12557  000D32  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12558  000D36  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12559  000D3A  6B40               	clrf	_extended_linear_address& (0+255),b
 12560                           
 12561                           ; BSR set to: 1
 12562                           ;bootloader.c: 319: extended_linear_address |= hex_file_entry.data[1];
 12563  000D3C  51BE               	movf	(_hex_file_entry+6)& (0+255),w,b
 12564  000D3E  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12565                           
 12566                           ; BSR set to: 1
 12567                           ;bootloader.c: 320: extended_linear_address <<= 8;
 12568  000D40  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12569  000D44  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12570  000D48  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12571  000D4C  6B40               	clrf	_extended_linear_address& (0+255),b
 12572                           
 12573                           ; BSR set to: 1
 12574                           ;bootloader.c: 321: extended_linear_address <<= 8;
 12575  000D4E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12576  000D52  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12577  000D56  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12578  000D5A  6B40               	clrf	_extended_linear_address& (0+255),b
 12579                           
 12580                           ; BSR set to: 1
 12581                           ;bootloader.c: 323: break;
 12582                           
 12583                           ;bootloader.c: 322: continue;
 12584  000D5C  D742               	goto	l2174
 12585  000D5E                     l2184:
 12586                           
 12587                           ; BSR set to: 1
 12588                           ;bootloader.c: 328: start_from_byte = start_from_byte_next;
 12589  000D5E  C09C  F0F9         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 12590                           
 12591                           ; BSR set to: 1
 12592                           ;bootloader.c: 330: start_from_byte_next = 0;
 12593  000D62  0E00               	movlw	0
 12594  000D64  0100               	movlb	0	; () banked
 12595  000D66  6F9C               	movwf	_start_from_byte_next& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;bootloader.c: 333: address32 = extended_linear_address + hex_file_entry.address;
 12599  000D68  0101               	movlb	1	; () banked
 12600  000D6A  51BA               	movf	(_hex_file_entry+2)& (0+255),w,b
 12601  000D6C  2540               	addwf	_extended_linear_address& (0+255),w,b
 12602  000D6E  0100               	movlb	0	; () banked
 12603  000D70  6FF5               	movwf	__bootloader_program@address32& (0+255),b
 12604  000D72  0101               	movlb	1	; () banked
 12605  000D74  51BB               	movf	(_hex_file_entry+3)& (0+255),w,b
 12606  000D76  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12607  000D78  0100               	movlb	0	; () banked
 12608  000D7A  6FF6               	movwf	(__bootloader_program@address32+1)& (0+255),b
 12609  000D7C  0E00               	movlw	0
 12610  000D7E  0101               	movlb	1	; () banked
 12611  000D80  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12612  000D82  0100               	movlb	0	; () banked
 12613  000D84  6FF7               	movwf	(__bootloader_program@address32+2)& (0+255),b
 12614  000D86  0E00               	movlw	0
 12615  000D88  0101               	movlb	1	; () banked
 12616  000D8A  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12617  000D8C  0100               	movlb	0	; () banked
 12618  000D8E  6FF8               	movwf	(__bootloader_program@address32+3)& (0+255),b
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;bootloader.c: 334: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 12622  000D90  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12623  000D92  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12624  000D94  6E01               	movwf	internalFlash_pageFromAddress@address,c
 12625  000D96  0E00               	movlw	0
 12626  000D98  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12627  000D9A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 12628  000D9C  0E00               	movlw	0
 12629  000D9E  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12630  000DA0  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 12631  000DA2  0E00               	movlw	0
 12632  000DA4  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12633  000DA6  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 12634  000DA8  EC76  F03C         	call	_internalFlash_pageFromAddress	;wreg free
 12635  000DAC  C001  F0ED         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 12636  000DB0  C002  F0EE         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 12637                           
 12638                           ;bootloader.c: 337: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 12639  000DB4  0100               	movlb	0	; () banked
 12640  000DB6  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12641  000DB8  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12642  000DBA  6E01               	movwf	__bootloader_check_address@address,c
 12643  000DBC  0E00               	movlw	0
 12644  000DBE  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12645  000DC0  6E02               	movwf	__bootloader_check_address@address+1,c
 12646  000DC2  0E00               	movlw	0
 12647  000DC4  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12648  000DC6  6E03               	movwf	__bootloader_check_address@address+2,c
 12649  000DC8  0E00               	movlw	0
 12650  000DCA  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12651  000DCC  6E04               	movwf	__bootloader_check_address@address+3,c
 12652  000DCE  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12653  000DD0  0800               	sublw	0
 12654  000DD2  0101               	movlb	1	; () banked
 12655  000DD4  25B8               	addwf	_hex_file_entry& (0+255),w,b
 12656  000DD6  6E05               	movwf	__bootloader_check_address@dataLength,c
 12657  000DD8  EC01  F024         	call	__bootloader_check_address	;wreg free
 12658  000DDC  0900               	iorlw	0
 12659  000DDE  A4D8               	btfss	status,2,c
 12660  000DE0  D700               	goto	l2174
 12661                           
 12662                           ;bootloader.c: 340: };bootloader.c: 342: if(page_to_write==0)
 12663                           
 12664                           ;bootloader.c: 338: {;bootloader.c: 339: break;
 12665  000DE2  0100               	movlb	0	; () banked
 12666  000DE4  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12667  000DE6  11FD               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12668  000DE8  A4D8               	btfss	status,2,c
 12669  000DEA  D010               	goto	l2186
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;bootloader.c: 343: {;bootloader.c: 347: page_to_write = entry_page;
 12673  000DEC  C0ED  F0FC         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 12674  000DF0  C0EE  F0FD         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;bootloader.c: 348: internalFlash_readPage(page_to_write);
 12678  000DF4  C0FC  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 12679  000DF8  C0FD  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 12680  000DFC  EC19  F039         	call	_internalFlash_readPage	;wreg free
 12681                           
 12682                           ;bootloader.c: 349: buffer = internalFlash_getBuffer();
 12683  000E00  EC02  F03D         	call	_internalFlash_getBuffer	;wreg free
 12684  000E04  C001  F0EB         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 12685  000E08  C002  F0EC         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 12686  000E0C                     l2186:
 12687                           
 12688                           ;bootloader.c: 350: };bootloader.c: 352: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
 12689  000E0C  C0F9  F0FA         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 12690  000E10  0100               	movlb	0	; () banked
 12691  000E12  6BFB               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 12692  000E14  D05C               	goto	l2187
 12693  000E16                     
 12694                           ; BSR set to: 0
 12695                           ;bootloader.c: 353: {;bootloader.c: 356: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
 12696                           
 12697                           ; BSR set to: 0
 12698  000E16  51FA               	movf	__bootloader_program@cntr& (0+255),w,b
 12699  000E18  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12700  000E1A  6E01               	movwf	internalFlash_pageFromAddress@address,c
 12701  000E1C  51FB               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 12702  000E1E  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12703  000E20  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 12704  000E22  0E00               	movlw	0
 12705  000E24  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12706  000E26  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 12707  000E28  0E00               	movlw	0
 12708  000E2A  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12709  000E2C  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 12710  000E2E  EC76  F03C         	call	_internalFlash_pageFromAddress	;wreg free
 12711  000E32  0100               	movlb	0	; () banked
 12712  000E34  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12713  000E36  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 12714  000E38  E12A               	bnz	l13585
 12715  000E3A  51FD               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12716  000E3C  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 12717  000E3E  A4D8               	btfss	status,2,c
 12718  000E40  D026               	goto	l2189
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;bootloader.c: 357: {;bootloader.c: 358: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
 12722  000E42  51FA               	movf	__bootloader_program@cntr& (0+255),w,b
 12723  000E44  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12724  000E46  6E09               	movwf	internalFlash_addressWithinPage@address,c
 12725  000E48  51FB               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 12726  000E4A  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12727  000E4C  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 12728  000E4E  0E00               	movlw	0
 12729  000E50  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12730  000E52  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 12731  000E54  0E00               	movlw	0
 12732  000E56  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12733  000E58  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 12734  000E5A  C0FC  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 12735  000E5E  C0FD  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 12736  000E62  ECED  F034         	call	_internalFlash_addressWithinPage	;wreg free
 12737  000E66  C009  F0EF         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 12738  000E6A  C00A  F0F0         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 12739                           
 12740                           ;bootloader.c: 359: buffer[address_within_page] = hex_file_entry.data[cntr];
 12741  000E6E  0EBD               	movlw	low (_hex_file_entry+5)
 12742  000E70  0100               	movlb	0	; () banked
 12743  000E72  25FA               	addwf	__bootloader_program@cntr& (0+255),w,b
 12744  000E74  6ED9               	movwf	fsr2l,c
 12745  000E76  0E01               	movlw	high (_hex_file_entry+5)
 12746  000E78  21FB               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 12747  000E7A  6EDA               	movwf	fsr2h,c
 12748  000E7C  51EF               	movf	__bootloader_program@address_within_page& (0+255),w,b
 12749  000E7E  25EB               	addwf	__bootloader_program@buffer& (0+255),w,b
 12750  000E80  6EE1               	movwf	fsr1l,c
 12751  000E82  51F0               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 12752  000E84  21EC               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 12753  000E86  6EE2               	movwf	fsr1h,c
 12754  000E88  CFDF FFE7          	movff	indf2,indf1
 12755                           
 12756                           ;bootloader.c: 360: }
 12757  000E8C  D01D               	goto	l2190
 12758  000E8E                     l2189:
 12759  000E8E                     l13585:
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;bootloader.c: 361: else;bootloader.c: 362: {;bootloader.c: 364: hex_file_offset -= retu
      +                          rn_value;
 12763  000E8E  51F1               	movf	__bootloader_program@return_value& (0+255),w,b
 12764  000E90  5F7C               	subwf	_hex_file_offset& (0+255),f,b
 12765  000E92  51F2               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12766  000E94  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 12767  000E96  51F3               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12768  000E98  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 12769  000E9A  51F4               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12770  000E9C  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;bootloader.c: 365: --hex_file_entries;
 12774  000E9E  0784               	decf	_hex_file_entries& (0+255),f,b
 12775  000EA0  A0D8               	btfss	status,0,c
 12776  000EA2  0785               	decf	(_hex_file_entries+1)& (0+255),f,b
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;bootloader.c: 367: start_from_byte_next = cntr;
 12780  000EA4  C0FA  F09C         	movff	__bootloader_program@cntr,_start_from_byte_next
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;bootloader.c: 369: internalFlash_erasePage(page_to_write);
 12784  000EA8  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 12785  000EAC  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 12786  000EB0  EC26  F03A         	call	_internalFlash_erasePage	;wreg free
 12787                           
 12788                           ;bootloader.c: 370: internalFlash_writePage(page_to_write);
 12789  000EB4  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 12790  000EB8  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 12791  000EBC  ECF2  F02F         	call	_internalFlash_writePage	;wreg free
 12792                           
 12793                           ;bootloader.c: 371: ++flash_pages_written;
 12794  000EC0  0101               	movlb	1	; () banked
 12795  000EC2  4B60               	infsnz	_flash_pages_written& (0+255),f,b
 12796  000EC4  2B61               	incf	(_flash_pages_written+1)& (0+255),f,b
 12797                           
 12798                           ; BSR set to: 1
 12799                           ;bootloader.c: 373: return;
 12800  000EC6  0012               	return	
 12801  000EC8                     l2190:
 12802                           
 12803                           ; BSR set to: 1
 12804  000EC8  0100               	movlb	0	; () banked
 12805  000ECA  4BFA               	infsnz	__bootloader_program@cntr& (0+255),f,b
 12806  000ECC  2BFB               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 12807  000ECE                     l2187:
 12808                           
 12809                           ; BSR set to: 0
 12810                           
 12811                           ; BSR set to: 0
 12812  000ECE  0101               	movlb	1	; () banked
 12813  000ED0  51B8               	movf	_hex_file_entry& (0+255),w,b
 12814  000ED2  0100               	movlb	0	; () banked
 12815  000ED4  5DFA               	subwf	__bootloader_program@cntr& (0+255),w,b
 12816  000ED6  0101               	movlb	1	; () banked
 12817  000ED8  51B9               	movf	(_hex_file_entry+1)& (0+255),w,b
 12818  000EDA  0100               	movlb	0	; () banked
 12819  000EDC  59FB               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 12820  000EDE  B0D8               	btfsc	status,0,c
 12821  000EE0  D680               	goto	l2174
 12822  000EE2  D799               	goto	l2188
 12823  000EE4                     
 12824                           ;bootloader.c: 381: if(page_to_write!=0)
 12825                           
 12826                           ; BSR set to: 0
 12827  000EE4  0100               	movlb	0	; () banked
 12828  000EE6  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12829  000EE8  11FD               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12830  000EEA  B4D8               	btfsc	status,2,c
 12831  000EEC  0012               	return	
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;bootloader.c: 382: {;bootloader.c: 384: internalFlash_erasePage(page_to_write);
 12835  000EEE  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 12836  000EF2  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 12837  000EF6  EC26  F03A         	call	_internalFlash_erasePage	;wreg free
 12838                           
 12839                           ;bootloader.c: 385: internalFlash_writePage(page_to_write);
 12840  000EFA  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 12841  000EFE  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 12842  000F02  ECF2  F02F         	call	_internalFlash_writePage	;wreg free
 12843                           
 12844                           ;bootloader.c: 386: ++flash_pages_written;
 12845  000F06  0101               	movlb	1	; () banked
 12846  000F08  4B60               	infsnz	_flash_pages_written& (0+255),f,b
 12847  000F0A  2B61               	incf	(_flash_pages_written+1)& (0+255),f,b
 12848                           
 12849                           ; BSR set to: 1
 12850                           ;bootloader.c: 388: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 12851  000F0C  0E60               	movlw	96
 12852  000F0E  0100               	movlb	0	; () banked
 12853  000F10  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12854                           
 12855                           ; BSR set to: 0
 12856                           ;bootloader.c: 389: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 12857  000F12  0E60               	movlw	96
 12858  000F14  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;bootloader.c: 390: };bootloader.c: 392: return;
 12862                           
 12863                           ; BSR set to: 0
 12864  000F16  0012               	return	
 12865  000F18                     l2180:
 12866                           
 12867                           ; BSR set to: 0
 12868                           
 12869                           ; BSR set to: 0
 12870  000F18  0101               	movlb	1	; () banked
 12871  000F1A  51BC               	movf	(_hex_file_entry+4)& (0+255),w,b
 12872                           
 12873                           ; Switch size 1, requested type "space"
 12874                           ; Number of cases is 3, Range of values is 0 to 4
 12875                           ; switch strategies available:
 12876                           ; Name         Instructions Cycles
 12877                           ; simple_byte           10     6 (average)
 12878                           ;	Chosen strategy is simple_byte
 12879  000F1C  0A00               	xorlw	0	; case 0
 12880  000F1E  B4D8               	btfsc	status,2,c
 12881  000F20  D71E               	goto	l2184
 12882  000F22  0A01               	xorlw	1	; case 1
 12883  000F24  B4D8               	btfsc	status,2,c
 12884  000F26  D7DE               	goto	l2192
 12885  000F28  0A05               	xorlw	5	; case 4
 12886  000F2A  B4D8               	btfsc	status,2,c
 12887  000F2C  D6FA               	goto	l2181
 12888                           
 12889                           ; BSR set to: 1
 12890                           
 12891                           ; BSR set to: 1
 12892  000F2E  D659               	goto	l2174
 12893  000F30                     __end_of__bootloader_program:
 12894                           	opt stack 0
 12895                           tblptru	equ	0xFF8
 12896                           tblptrh	equ	0xFF7
 12897                           tblptrl	equ	0xFF6
 12898                           tablat	equ	0xFF5
 12899                           prodh	equ	0xFF4
 12900                           prodl	equ	0xFF3
 12901                           intcon	equ	0xFF2
 12902                           intcon2	equ	0xFF1
 12903                           intcon3	equ	0xFF0
 12904                           postinc0	equ	0xFEE
 12905                           wreg	equ	0xFE8
 12906                           indf1	equ	0xFE7
 12907                           postdec1	equ	0xFE5
 12908                           plusw1	equ	0xFE3
 12909                           fsr1h	equ	0xFE2
 12910                           fsr1l	equ	0xFE1
 12911                           indf2	equ	0xFDF
 12912                           postinc2	equ	0xFDE
 12913                           plusw2	equ	0xFDB
 12914                           fsr2h	equ	0xFDA
 12915                           fsr2l	equ	0xFD9
 12916                           status	equ	0xFD8
 12917                           
 12918 ;; *************** function _parseHexFileEntry *****************
 12919 ;; Defined at:
 12920 ;;		line 59 in file "hex.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;  data            2   11[COMRAM] PTR unsigned char 
 12923 ;;		 -> file_buffer(50), 
 12924 ;;  offset          4   13[COMRAM] unsigned long 
 12925 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 12926 ;;		 -> hex_file_entry(23), 
 12927 ;; Auto vars:     Size  Location     Type
 12928 ;;  i               1   27[COMRAM] unsigned char 
 12929 ;; Return value:  Size  Location     Type
 12930 ;;                  4   11[COMRAM] unsigned long 
 12931 ;; Registers used:
 12932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12933 ;; Tracked objects:
 12934 ;;		On entry : 0/0
 12935 ;;		On exit  : 0/0
 12936 ;;		Unchanged: 0/0
 12937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12938 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12940 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12941 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12942 ;;Total ram usage:       17 bytes
 12943 ;; Hardware stack levels used:    1
 12944 ;; Hardware stack levels required when called:    2
 12945 ;; This function calls:
 12946 ;;		_hexCharsToUint16
 12947 ;;		_hexCharsToUint8
 12948 ;; This function is called by:
 12949 ;;		__bootloader_verify_file
 12950 ;;		__bootloader_program
 12951 ;; This function uses a non-reentrant model
 12952 ;;
 12953                           
 12954                           	psect	text53
 12955  000020                     __ptext53:
 12956                           	opt stack 0
 12957  000020                     _parseHexFileEntry:
 12958                           	opt stack 26
 12959                           
 12960                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
 12961                           
 12962                           ;incstack = 0
 12963  000020  500E               	movf	parseHexFileEntry@offset,w,c
 12964  000022  240C               	addwf	parseHexFileEntry@data,w,c
 12965  000024  6ED9               	movwf	fsr2l,c
 12966  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 12967  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12968  00002A  6EDA               	movwf	fsr2h,c
 12969  00002C  0E3A               	movlw	58
 12970  00002E  18DE               	xorwf	postinc2,w,c
 12971  000030  B4D8               	btfsc	status,2,c
 12972  000032  D005               	goto	l2048
 12973                           
 12974                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 12975  000034  680C               	setf	?_parseHexFileEntry,c
 12976  000036  680D               	setf	?_parseHexFileEntry+1,c
 12977  000038  680E               	setf	?_parseHexFileEntry+2,c
 12978  00003A  680F               	setf	?_parseHexFileEntry+3,c
 12979  00003C  0012               	return	
 12980  00003E                     l2048:
 12981                           
 12982                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
 12983  00003E  0E02               	movlw	2
 12984  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 12985  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 12986  000044  0E00               	movlw	0
 12987  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 12988  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 12989  00004A  5014               	movf	??_parseHexFileEntry,w,c
 12990  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 12991  00004E  6ED9               	movwf	fsr2l,c
 12992  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 12993  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12994  000054  6EDA               	movwf	fsr2h,c
 12995  000056  50DF               	movf	indf2,w,c
 12996  000058  6E03               	movwf	hexCharsToUint8@c2,c
 12997  00005A  0E01               	movlw	1
 12998  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 12999  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13000  000060  0E00               	movlw	0
 13001  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13002  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13003  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 13004  000068  240C               	addwf	parseHexFileEntry@data,w,c
 13005  00006A  6ED9               	movwf	fsr2l,c
 13006  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 13007  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13008  000070  6EDA               	movwf	fsr2h,c
 13009  000072  50DF               	movf	indf2,w,c
 13010  000074  EC68  F03C         	call	_hexCharsToUint8
 13011  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13012  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 13013  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13014  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13015  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 13016  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 13017                           
 13018                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 13019  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13020  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13021  000094  0E01               	movlw	1
 13022  000096  50DB               	movf	plusw2,w,c
 13023  000098  E104               	bnz	u9620
 13024  00009A  0E11               	movlw	17
 13025  00009C  5CDE               	subwf	postinc2,w,c
 13026  00009E  A0D8               	btfss	status,0,c
 13027  0000A0  D009               	goto	l2050
 13028  0000A2                     u9620:
 13029                           
 13030                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 13031  0000A2  0EFC               	movlw	252
 13032  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 13033  0000A6  0EFF               	movlw	255
 13034  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 13035  0000AA  0EFF               	movlw	255
 13036  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 13037  0000AE  0EFF               	movlw	255
 13038  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 13039  0000B2  0012               	return	
 13040  0000B4                     l2050:
 13041                           
 13042                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
 13043  0000B4  0E04               	movlw	4
 13044  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 13045  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13046  0000BA  0E00               	movlw	0
 13047  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13048  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13049  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 13050  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 13051  0000C4  6ED9               	movwf	fsr2l,c
 13052  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 13053  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13054  0000CA  6EDA               	movwf	fsr2h,c
 13055  0000CC  50DF               	movf	indf2,w,c
 13056  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 13057  0000D0  0E05               	movlw	5
 13058  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 13059  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13060  0000D6  0E00               	movlw	0
 13061  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13062  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13063  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 13064  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 13065  0000E0  6ED9               	movwf	fsr2l,c
 13066  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 13067  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13068  0000E6  6EDA               	movwf	fsr2h,c
 13069  0000E8  50DF               	movf	indf2,w,c
 13070  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 13071  0000EC  0E06               	movlw	6
 13072  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 13073  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13074  0000F2  0E00               	movlw	0
 13075  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13076  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13077  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 13078  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 13079  0000FC  6ED9               	movwf	fsr2l,c
 13080  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 13081  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13082  000102  6EDA               	movwf	fsr2h,c
 13083  000104  50DF               	movf	indf2,w,c
 13084  000106  6E05               	movwf	hexCharsToUint16@c4,c
 13085  000108  0E03               	movlw	3
 13086  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 13087  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 13088  00010E  0E00               	movlw	0
 13089  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13090  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 13091  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 13092  000116  240C               	addwf	parseHexFileEntry@data,w,c
 13093  000118  6ED9               	movwf	fsr2l,c
 13094  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 13095  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13096  00011E  6EDA               	movwf	fsr2h,c
 13097  000120  50DF               	movf	indf2,w,c
 13098  000122  EC46  F032         	call	_hexCharsToUint16
 13099  000126  EE20 F002          	lfsr	2,2
 13100  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13101  00012C  26D9               	addwf	fsr2l,f,c
 13102  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13103  000130  22DA               	addwfc	fsr2h,f,c
 13104  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 13105  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 13106                           
 13107                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 13108  00013A  EE20 F004          	lfsr	2,4
 13109  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13110  000140  26D9               	addwf	fsr2l,f,c
 13111  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13112  000144  22DA               	addwfc	fsr2h,f,c
 13113  000146  0E08               	movlw	8
 13114  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 13115  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13116  00014C  0E00               	movlw	0
 13117  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13118  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13119  000152  5014               	movf	??_parseHexFileEntry,w,c
 13120  000154  240C               	addwf	parseHexFileEntry@data,w,c
 13121  000156  6EE1               	movwf	fsr1l,c
 13122  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 13123  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13124  00015C  6EE2               	movwf	fsr1h,c
 13125  00015E  50E7               	movf	indf1,w,c
 13126  000160  6E03               	movwf	hexCharsToUint8@c2,c
 13127  000162  0E07               	movlw	7
 13128  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 13129  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13130  000168  0E00               	movlw	0
 13131  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13132  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13133  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 13134  000170  240C               	addwf	parseHexFileEntry@data,w,c
 13135  000172  6EE1               	movwf	fsr1l,c
 13136  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 13137  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13138  000178  6EE2               	movwf	fsr1h,c
 13139  00017A  50E7               	movf	indf1,w,c
 13140  00017C  EC68  F03C         	call	_hexCharsToUint8
 13141  000180  6EDF               	movwf	indf2,c
 13142                           
 13143                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 13144  000182  0E00               	movlw	0
 13145  000184  6E1C               	movwf	parseHexFileEntry@i,c
 13146  000186  D03D               	goto	l2051
 13147  000188                     
 13148                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
 13149  000188  501C               	movf	parseHexFileEntry@i,w,c
 13150  00018A  0D01               	mullw	1
 13151  00018C  0E05               	movlw	5
 13152  00018E  26F3               	addwf	prodl,f,c
 13153  000190  0E00               	movlw	0
 13154  000192  22F4               	addwfc	prodh,f,c
 13155  000194  50F3               	movf	prodl,w,c
 13156  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13157  000198  6ED9               	movwf	fsr2l,c
 13158  00019A  50F4               	movf	prodh,w,c
 13159  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13160  00019E  6EDA               	movwf	fsr2h,c
 13161  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 13162  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13163  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13164  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 13165  0001AA  0E00               	movlw	0
 13166  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13167  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 13168  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 13169  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 13170  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13171  0001B6  0E0A               	movlw	10
 13172  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 13173  0001BA  0E00               	movlw	0
 13174  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13175  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 13176  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 13177  0001C2  6EE1               	movwf	fsr1l,c
 13178  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 13179  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13180  0001C8  6EE2               	movwf	fsr1h,c
 13181  0001CA  50E7               	movf	indf1,w,c
 13182  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 13183  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 13184  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13185  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13186  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13187  0001D8  0E00               	movlw	0
 13188  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13189  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 13190  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 13191  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 13192  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13193  0001E4  0E09               	movlw	9
 13194  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13195  0001E8  0E00               	movlw	0
 13196  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13197  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 13198  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 13199  0001F0  6EE1               	movwf	fsr1l,c
 13200  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 13201  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13202  0001F6  6EE2               	movwf	fsr1h,c
 13203  0001F8  50E7               	movf	indf1,w,c
 13204  0001FA  EC68  F03C         	call	_hexCharsToUint8
 13205  0001FE  6EDF               	movwf	indf2,c
 13206  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 13207  000202                     l2051:
 13208  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13209  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13210  00020A  501C               	movf	parseHexFileEntry@i,w,c
 13211  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13212  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13213  000210  50DE               	movf	postinc2,w,c
 13214  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13215  000214  50DE               	movf	postinc2,w,c
 13216  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13217  000218  A0D8               	btfss	status,0,c
 13218  00021A  D7B6               	goto	l2052
 13219                           
 13220                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
 13221  00021C  EE20 F015          	lfsr	2,21
 13222  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13223  000222  26D9               	addwf	fsr2l,f,c
 13224  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13225  000226  22DA               	addwfc	fsr2h,f,c
 13226  000228  501C               	movf	parseHexFileEntry@i,w,c
 13227  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13228  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13229  000230  2614               	addwf	??_parseHexFileEntry,f,c
 13230  000232  0E00               	movlw	0
 13231  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13232  000236  500E               	movf	parseHexFileEntry@offset,w,c
 13233  000238  2614               	addwf	??_parseHexFileEntry,f,c
 13234  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13235  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13236  00023E  0E0A               	movlw	10
 13237  000240  2614               	addwf	??_parseHexFileEntry,f,c
 13238  000242  0E00               	movlw	0
 13239  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13240  000246  5014               	movf	??_parseHexFileEntry,w,c
 13241  000248  240C               	addwf	parseHexFileEntry@data,w,c
 13242  00024A  6EE1               	movwf	fsr1l,c
 13243  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 13244  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13245  000250  6EE2               	movwf	fsr1h,c
 13246  000252  50E7               	movf	indf1,w,c
 13247  000254  6E03               	movwf	hexCharsToUint8@c2,c
 13248  000256  501C               	movf	parseHexFileEntry@i,w,c
 13249  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13250  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13251  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13252  000260  0E00               	movlw	0
 13253  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13254  000264  500E               	movf	parseHexFileEntry@offset,w,c
 13255  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 13256  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 13257  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13258  00026C  0E09               	movlw	9
 13259  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13260  000270  0E00               	movlw	0
 13261  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13262  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 13263  000276  240C               	addwf	parseHexFileEntry@data,w,c
 13264  000278  6EE1               	movwf	fsr1l,c
 13265  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 13266  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13267  00027E  6EE2               	movwf	fsr1h,c
 13268  000280  50E7               	movf	indf1,w,c
 13269  000282  EC68  F03C         	call	_hexCharsToUint8
 13270  000286  6EDF               	movwf	indf2,c
 13271                           
 13272                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 13273  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13274  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13275  000290  EE10 F016          	lfsr	1,22
 13276  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13277  000296  26E1               	addwf	fsr1l,f,c
 13278  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13279  00029A  22E2               	addwfc	fsr1h,f,c
 13280  00029C  CFDF FFE7          	movff	indf2,indf1
 13281                           
 13282                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 13283  0002A0  EE20 F002          	lfsr	2,2
 13284  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13285  0002A6  26D9               	addwf	fsr2l,f,c
 13286  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13287  0002AA  22DA               	addwfc	fsr2h,f,c
 13288  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 13289  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 13290  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 13291  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 13292  0002BA  EE20 F016          	lfsr	2,22
 13293  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13294  0002C0  26D9               	addwf	fsr2l,f,c
 13295  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13296  0002C4  22DA               	addwfc	fsr2h,f,c
 13297  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 13298  0002C8  26DF               	addwf	indf2,f,c
 13299                           
 13300                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 13301  0002CA  EE20 F002          	lfsr	2,2
 13302  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13303  0002D0  26D9               	addwf	fsr2l,f,c
 13304  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13305  0002D4  22DA               	addwfc	fsr2h,f,c
 13306  0002D6  50DF               	movf	indf2,w,c
 13307  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13308  0002DA  EE20 F016          	lfsr	2,22
 13309  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13310  0002E0  26D9               	addwf	fsr2l,f,c
 13311  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13312  0002E4  22DA               	addwfc	fsr2h,f,c
 13313  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 13314  0002E8  26DF               	addwf	indf2,f,c
 13315                           
 13316                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 13317  0002EA  EE20 F004          	lfsr	2,4
 13318  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13319  0002F0  26D9               	addwf	fsr2l,f,c
 13320  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13321  0002F4  22DA               	addwfc	fsr2h,f,c
 13322  0002F6  50DF               	movf	indf2,w,c
 13323  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13324  0002FA  EE20 F016          	lfsr	2,22
 13325  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13326  000300  26D9               	addwf	fsr2l,f,c
 13327  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13328  000304  22DA               	addwfc	fsr2h,f,c
 13329  000306  5014               	movf	??_parseHexFileEntry,w,c
 13330  000308  26DF               	addwf	indf2,f,c
 13331                           
 13332                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 13333  00030A  0E00               	movlw	0
 13334  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 13335  00030E  D017               	goto	l2054
 13336  000310                     
 13337                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 13338  000310  501C               	movf	parseHexFileEntry@i,w,c
 13339  000312  0D01               	mullw	1
 13340  000314  0E05               	movlw	5
 13341  000316  26F3               	addwf	prodl,f,c
 13342  000318  0E00               	movlw	0
 13343  00031A  22F4               	addwfc	prodh,f,c
 13344  00031C  50F3               	movf	prodl,w,c
 13345  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13346  000320  6ED9               	movwf	fsr2l,c
 13347  000322  50F4               	movf	prodh,w,c
 13348  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13349  000326  6EDA               	movwf	fsr2h,c
 13350  000328  50DF               	movf	indf2,w,c
 13351  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13352  00032C  EE20 F016          	lfsr	2,22
 13353  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13354  000332  26D9               	addwf	fsr2l,f,c
 13355  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13356  000336  22DA               	addwfc	fsr2h,f,c
 13357  000338  5014               	movf	??_parseHexFileEntry,w,c
 13358  00033A  26DF               	addwf	indf2,f,c
 13359  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 13360  00033E                     l2054:
 13361  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13362  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13363  000346  501C               	movf	parseHexFileEntry@i,w,c
 13364  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13365  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13366  00034C  50DE               	movf	postinc2,w,c
 13367  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13368  000350  50DE               	movf	postinc2,w,c
 13369  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13370  000354  A0D8               	btfss	status,0,c
 13371  000356  D7DC               	goto	l2055
 13372                           
 13373                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 13374  000358  EE20 F015          	lfsr	2,21
 13375  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13376  00035E  26D9               	addwf	fsr2l,f,c
 13377  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13378  000362  22DA               	addwfc	fsr2h,f,c
 13379  000364  50DF               	movf	indf2,w,c
 13380  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13381  000368  EE20 F016          	lfsr	2,22
 13382  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13383  00036E  26D9               	addwf	fsr2l,f,c
 13384  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13385  000372  22DA               	addwfc	fsr2h,f,c
 13386  000374  5014               	movf	??_parseHexFileEntry,w,c
 13387  000376  26DF               	addwf	indf2,f,c
 13388                           
 13389                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 13390  000378  EE20 F016          	lfsr	2,22
 13391  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13392  00037E  26D9               	addwf	fsr2l,f,c
 13393  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13394  000382  22DA               	addwfc	fsr2h,f,c
 13395  000384  50DF               	movf	indf2,w,c
 13396  000386  B4D8               	btfsc	status,2,c
 13397  000388  D009               	goto	l2057
 13398                           
 13399                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 13400  00038A  0EFE               	movlw	254
 13401  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 13402  00038E  0EFF               	movlw	255
 13403  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 13404  000392  0EFF               	movlw	255
 13405  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 13406  000396  0EFF               	movlw	255
 13407  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 13408  00039A  0012               	return	
 13409  00039C                     l2057:
 13410                           
 13411                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 13412  00039C  EE20 F004          	lfsr	2,4
 13413  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13414  0003A2  26D9               	addwf	fsr2l,f,c
 13415  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13416  0003A6  22DA               	addwfc	fsr2h,f,c
 13417  0003A8  04DE               	decf	postinc2,w,c
 13418  0003AA  A4D8               	btfss	status,2,c
 13419  0003AC  D009               	goto	l2058
 13420                           
 13421                           ;hex.c: 110: {;hex.c: 112: return 0;
 13422  0003AE  0E00               	movlw	0
 13423  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 13424  0003B2  0E00               	movlw	0
 13425  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 13426  0003B6  0E00               	movlw	0
 13427  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 13428  0003BA  0E00               	movlw	0
 13429  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 13430                           
 13431                           ;hex.c: 113: }
 13432  0003BE  0012               	return	
 13433  0003C0                     l2058:
 13434                           
 13435                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
 13436  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 13437  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13438  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13439  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 13440  0003CA  0E00               	movlw	0
 13441  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13442  0003CE  0E0B               	movlw	11
 13443  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 13444  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13445  0003D4  0E00               	movlw	0
 13446  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 13447  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13448  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 13449  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 13450  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 13451  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 13452  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13453  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 13454  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 13455  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 13456  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13457  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 13458  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13459  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 13460  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13461                           
 13462                           ;hex.c: 117: if (data[++offset] == ':')
 13463  0003F4  0E01               	movlw	1
 13464  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 13465  0003F8  0E00               	movlw	0
 13466  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13467  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13468  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13469  000400  500E               	movf	parseHexFileEntry@offset,w,c
 13470  000402  240C               	addwf	parseHexFileEntry@data,w,c
 13471  000404  6ED9               	movwf	fsr2l,c
 13472  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 13473  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13474  00040A  6EDA               	movwf	fsr2h,c
 13475  00040C  0E3A               	movlw	58
 13476  00040E  18DE               	xorwf	postinc2,w,c
 13477  000410  A4D8               	btfss	status,2,c
 13478  000412  D009               	goto	l2060
 13479                           
 13480                           ;hex.c: 118: {;hex.c: 119: return offset;
 13481  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13482  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13483  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13484  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13485                           
 13486                           ;hex.c: 120: }
 13487  000424  0012               	return	
 13488  000426                     l2060:
 13489                           
 13490                           ;hex.c: 121: else if (data[++offset] == ':')
 13491  000426  0E01               	movlw	1
 13492  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 13493  00042A  0E00               	movlw	0
 13494  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13495  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13496  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13497  000432  500E               	movf	parseHexFileEntry@offset,w,c
 13498  000434  240C               	addwf	parseHexFileEntry@data,w,c
 13499  000436  6ED9               	movwf	fsr2l,c
 13500  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 13501  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13502  00043C  6EDA               	movwf	fsr2h,c
 13503  00043E  0E3A               	movlw	58
 13504  000440  18DE               	xorwf	postinc2,w,c
 13505  000442  A4D8               	btfss	status,2,c
 13506  000444  D009               	goto	l2062
 13507                           
 13508                           ;hex.c: 122: {;hex.c: 123: return offset;
 13509  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13510  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13511  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13512  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13513                           
 13514                           ;hex.c: 124: }
 13515  000456  0012               	return	
 13516  000458                     l2062:
 13517                           
 13518                           ;hex.c: 125: else if (data[++offset] == ':')
 13519  000458  0E01               	movlw	1
 13520  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 13521  00045C  0E00               	movlw	0
 13522  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13523  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13524  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13525  000464  500E               	movf	parseHexFileEntry@offset,w,c
 13526  000466  240C               	addwf	parseHexFileEntry@data,w,c
 13527  000468  6ED9               	movwf	fsr2l,c
 13528  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13529  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13530  00046E  6EDA               	movwf	fsr2h,c
 13531  000470  0E3A               	movlw	58
 13532  000472  18DE               	xorwf	postinc2,w,c
 13533  000474  A4D8               	btfss	status,2,c
 13534  000476  D009               	goto	l2064
 13535                           
 13536                           ;hex.c: 126: {;hex.c: 127: return offset;
 13537  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13538  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13539  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13540  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13541                           
 13542                           ;hex.c: 128: }
 13543  000488  0012               	return	
 13544  00048A                     l2064:
 13545                           
 13546                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 13547  00048A  0EFD               	movlw	253
 13548  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 13549  00048E  0EFF               	movlw	255
 13550  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 13551  000492  0EFF               	movlw	255
 13552  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 13553  000496  0EFF               	movlw	255
 13554  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 13555  00049A  0012               	return	
 13556  00049C                     __end_of_parseHexFileEntry:
 13557                           	opt stack 0
 13558                           tblptru	equ	0xFF8
 13559                           tblptrh	equ	0xFF7
 13560                           tblptrl	equ	0xFF6
 13561                           tablat	equ	0xFF5
 13562                           prodh	equ	0xFF4
 13563                           prodl	equ	0xFF3
 13564                           intcon	equ	0xFF2
 13565                           intcon2	equ	0xFF1
 13566                           intcon3	equ	0xFF0
 13567                           postinc0	equ	0xFEE
 13568                           wreg	equ	0xFE8
 13569                           indf1	equ	0xFE7
 13570                           postdec1	equ	0xFE5
 13571                           plusw1	equ	0xFE3
 13572                           fsr1h	equ	0xFE2
 13573                           fsr1l	equ	0xFE1
 13574                           indf2	equ	0xFDF
 13575                           postinc2	equ	0xFDE
 13576                           postdec2	equ	0xFDD
 13577                           plusw2	equ	0xFDB
 13578                           fsr2h	equ	0xFDA
 13579                           fsr2l	equ	0xFD9
 13580                           status	equ	0xFD8
 13581                           
 13582 ;; *************** function _hexCharsToUint8 *****************
 13583 ;; Defined at:
 13584 ;;		line 42 in file "hex.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  c1              1    wreg     unsigned char 
 13587 ;;  c2              1    2[COMRAM] unsigned char 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;  c1              1    4[COMRAM] unsigned char 
 13590 ;;  retVal          1    5[COMRAM] unsigned char 
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  1    wreg      unsigned char 
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0, cstack
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13600 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13604 ;;Total ram usage:        4 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; Hardware stack levels required when called:    1
 13607 ;; This function calls:
 13608 ;;		_hexCharToUint8
 13609 ;; This function is called by:
 13610 ;;		_parseHexFileEntry
 13611 ;; This function uses a non-reentrant model
 13612 ;;
 13613                           
 13614                           	psect	text54
 13615  0078D0                     __ptext54:
 13616                           	opt stack 0
 13617  0078D0                     _hexCharsToUint8:
 13618                           	opt stack 26
 13619                           
 13620                           ;incstack = 0
 13621                           ;hexCharsToUint8@c1 stored from wreg
 13622  0078D0  6E05               	movwf	hexCharsToUint8@c1,c
 13623                           
 13624                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 13625  0078D2  5005               	movf	hexCharsToUint8@c1,w,c
 13626  0078D4  EC03  F03B         	call	_hexCharToUint8
 13627  0078D8  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 13628  0078DA  3804               	swapf	??_hexCharsToUint8,w,c
 13629  0078DC  0BF0               	andlw	240
 13630  0078DE  6E06               	movwf	hexCharsToUint8@retVal,c
 13631                           
 13632                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 13633  0078E0  5003               	movf	hexCharsToUint8@c2,w,c
 13634  0078E2  EC03  F03B         	call	_hexCharToUint8
 13635  0078E6  1206               	iorwf	hexCharsToUint8@retVal,f,c
 13636                           
 13637                           ;hex.c: 46: return retVal;
 13638  0078E8  5006               	movf	hexCharsToUint8@retVal,w,c
 13639  0078EA  0012               	return	
 13640  0078EC                     __end_of_hexCharsToUint8:
 13641                           	opt stack 0
 13642                           tblptru	equ	0xFF8
 13643                           tblptrh	equ	0xFF7
 13644                           tblptrl	equ	0xFF6
 13645                           tablat	equ	0xFF5
 13646                           prodh	equ	0xFF4
 13647                           prodl	equ	0xFF3
 13648                           intcon	equ	0xFF2
 13649                           intcon2	equ	0xFF1
 13650                           intcon3	equ	0xFF0
 13651                           postinc0	equ	0xFEE
 13652                           wreg	equ	0xFE8
 13653                           indf1	equ	0xFE7
 13654                           postdec1	equ	0xFE5
 13655                           plusw1	equ	0xFE3
 13656                           fsr1h	equ	0xFE2
 13657                           fsr1l	equ	0xFE1
 13658                           indf2	equ	0xFDF
 13659                           postinc2	equ	0xFDE
 13660                           postdec2	equ	0xFDD
 13661                           plusw2	equ	0xFDB
 13662                           fsr2h	equ	0xFDA
 13663                           fsr2l	equ	0xFD9
 13664                           status	equ	0xFD8
 13665                           
 13666 ;; *************** function _hexCharsToUint16 *****************
 13667 ;; Defined at:
 13668 ;;		line 49 in file "hex.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  c1              1    wreg     unsigned char 
 13671 ;;  c2              1    2[COMRAM] unsigned char 
 13672 ;;  c3              1    3[COMRAM] unsigned char 
 13673 ;;  c4              1    4[COMRAM] unsigned char 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  c1              1    8[COMRAM] unsigned char 
 13676 ;;  retVal          2    9[COMRAM] unsigned int 
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  2    2[COMRAM] unsigned int 
 13679 ;; Registers used:
 13680 ;;		wreg, status,2, status,0, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13686 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13687 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13688 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13689 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13690 ;;Total ram usage:        9 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:    1
 13693 ;; This function calls:
 13694 ;;		_hexCharToUint8
 13695 ;; This function is called by:
 13696 ;;		_parseHexFileEntry
 13697 ;; This function uses a non-reentrant model
 13698 ;;
 13699                           
 13700                           	psect	text55
 13701  00648C                     __ptext55:
 13702                           	opt stack 0
 13703  00648C                     _hexCharsToUint16:
 13704                           	opt stack 26
 13705                           
 13706                           ;incstack = 0
 13707                           ;hexCharsToUint16@c1 stored from wreg
 13708  00648C  6E09               	movwf	hexCharsToUint16@c1,c
 13709                           
 13710                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 13711  00648E  5009               	movf	hexCharsToUint16@c1,w,c
 13712  006490  EC03  F03B         	call	_hexCharToUint8
 13713  006494  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13714  006496  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13715  006498  0E0C               	movlw	12
 13716  00649A                     u8865:
 13717  00649A  90D8               	bcf	status,0,c
 13718  00649C  3606               	rlcf	??_hexCharsToUint16,f,c
 13719  00649E  3607               	rlcf	??_hexCharsToUint16+1,f,c
 13720  0064A0  2EE8               	decfsz	wreg,f,c
 13721  0064A2  D7FB               	goto	u8865
 13722  0064A4  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 13723  0064A8  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 13724                           
 13725                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 13726  0064AC  5003               	movf	hexCharsToUint16@c2,w,c
 13727  0064AE  EC03  F03B         	call	_hexCharToUint8
 13728  0064B2  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13729  0064B4  5006               	movf	??_hexCharsToUint16,w,c
 13730  0064B6  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 13731  0064B8  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13732  0064BA  5007               	movf	??_hexCharsToUint16+1,w,c
 13733  0064BC  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13734  0064BE  5008               	movf	??_hexCharsToUint16+2,w,c
 13735  0064C0  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 13736                           
 13737                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 13738  0064C2  5004               	movf	hexCharsToUint16@c3,w,c
 13739  0064C4  EC03  F03B         	call	_hexCharToUint8
 13740  0064C8  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13741  0064CA  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13742  0064CC  3A06               	swapf	??_hexCharsToUint16,f,c
 13743  0064CE  3A07               	swapf	??_hexCharsToUint16+1,f,c
 13744  0064D0  0EF0               	movlw	240
 13745  0064D2  1607               	andwf	??_hexCharsToUint16+1,f,c
 13746  0064D4  5006               	movf	??_hexCharsToUint16,w,c
 13747  0064D6  0B0F               	andlw	15
 13748  0064D8  1207               	iorwf	??_hexCharsToUint16+1,f,c
 13749  0064DA  0EF0               	movlw	240
 13750  0064DC  1606               	andwf	??_hexCharsToUint16,f,c
 13751  0064DE  5006               	movf	??_hexCharsToUint16,w,c
 13752  0064E0  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13753  0064E2  5007               	movf	??_hexCharsToUint16+1,w,c
 13754  0064E4  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 13755                           
 13756                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 13757  0064E6  5005               	movf	hexCharsToUint16@c4,w,c
 13758  0064E8  EC03  F03B         	call	_hexCharToUint8
 13759  0064EC  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13760  0064EE  5006               	movf	??_hexCharsToUint16,w,c
 13761  0064F0  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13762                           
 13763                           ;hex.c: 55: return retVal;
 13764  0064F2  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 13765  0064F6  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 13766  0064FA  0012               	return	
 13767  0064FC                     __end_of_hexCharsToUint16:
 13768                           	opt stack 0
 13769                           tblptru	equ	0xFF8
 13770                           tblptrh	equ	0xFF7
 13771                           tblptrl	equ	0xFF6
 13772                           tablat	equ	0xFF5
 13773                           prodh	equ	0xFF4
 13774                           prodl	equ	0xFF3
 13775                           intcon	equ	0xFF2
 13776                           intcon2	equ	0xFF1
 13777                           intcon3	equ	0xFF0
 13778                           postinc0	equ	0xFEE
 13779                           wreg	equ	0xFE8
 13780                           indf1	equ	0xFE7
 13781                           postdec1	equ	0xFE5
 13782                           plusw1	equ	0xFE3
 13783                           fsr1h	equ	0xFE2
 13784                           fsr1l	equ	0xFE1
 13785                           indf2	equ	0xFDF
 13786                           postinc2	equ	0xFDE
 13787                           postdec2	equ	0xFDD
 13788                           plusw2	equ	0xFDB
 13789                           fsr2h	equ	0xFDA
 13790                           fsr2l	equ	0xFD9
 13791                           status	equ	0xFD8
 13792                           
 13793 ;; *************** function _hexCharToUint8 *****************
 13794 ;; Defined at:
 13795 ;;		line 11 in file "hex.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;  c               1    wreg     unsigned char 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;  c               1    0[COMRAM] unsigned char 
 13800 ;;  ascii           1    1[COMRAM] unsigned char 
 13801 ;; Return value:  Size  Location     Type
 13802 ;;                  1    wreg      unsigned char 
 13803 ;; Registers used:
 13804 ;;		wreg, status,2, status,0
 13805 ;; Tracked objects:
 13806 ;;		On entry : 0/0
 13807 ;;		On exit  : 0/0
 13808 ;;		Unchanged: 0/0
 13809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13814 ;;Total ram usage:        2 bytes
 13815 ;; Hardware stack levels used:    1
 13816 ;; This function calls:
 13817 ;;		Nothing
 13818 ;; This function is called by:
 13819 ;;		_hexCharsToUint8
 13820 ;;		_hexCharsToUint16
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           
 13824                           	psect	text56
 13825  007606                     __ptext56:
 13826                           	opt stack 0
 13827  007606                     _hexCharToUint8:
 13828                           	opt stack 26
 13829                           
 13830                           ;incstack = 0
 13831                           ;hexCharToUint8@c stored from wreg
 13832  007606  6E01               	movwf	hexCharToUint8@c,c
 13833                           
 13834                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 13835  007608  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 13836                           
 13837                           ;hex.c: 16: if (ascii >= 97)
 13838  00760C  0E60               	movlw	96
 13839  00760E  6402               	cpfsgt	hexCharToUint8@ascii,c
 13840  007610  D002               	goto	l2033
 13841                           
 13842                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 13843  007612  0E57               	movlw	87
 13844  007614  D006               	goto	L3
 13845  007616                     l2033:
 13846                           
 13847                           ;hex.c: 21: else if (ascii >= 65)
 13848  007616  0E40               	movlw	64
 13849  007618  6402               	cpfsgt	hexCharToUint8@ascii,c
 13850  00761A  D002               	goto	l2035
 13851                           
 13852                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 13853  00761C  0E37               	movlw	55
 13854  00761E  D001               	goto	L3
 13855  007620                     l2035:
 13856                           
 13857                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 13858  007620  0E30               	movlw	48
 13859  007622                     L3:
 13860  007622  5E02               	subwf	hexCharToUint8@ascii,f,c
 13861                           
 13862                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 13863  007624  0E0F               	movlw	15
 13864  007626  6402               	cpfsgt	hexCharToUint8@ascii,c
 13865  007628  D002               	goto	l2037
 13866                           
 13867                           ;hex.c: 32: {;hex.c: 33: return 0;
 13868  00762A  0E00               	movlw	0
 13869                           
 13870                           ;hex.c: 34: }
 13871  00762C  0012               	return	
 13872  00762E                     l2037:
 13873                           
 13874                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 13875  00762E  5002               	movf	hexCharToUint8@ascii,w,c
 13876  007630  0012               	return	
 13877  007632                     __end_of_hexCharToUint8:
 13878                           	opt stack 0
 13879                           tblptru	equ	0xFF8
 13880                           tblptrh	equ	0xFF7
 13881                           tblptrl	equ	0xFF6
 13882                           tablat	equ	0xFF5
 13883                           prodh	equ	0xFF4
 13884                           prodl	equ	0xFF3
 13885                           intcon	equ	0xFF2
 13886                           intcon2	equ	0xFF1
 13887                           intcon3	equ	0xFF0
 13888                           postinc0	equ	0xFEE
 13889                           wreg	equ	0xFE8
 13890                           indf1	equ	0xFE7
 13891                           postdec1	equ	0xFE5
 13892                           plusw1	equ	0xFE3
 13893                           fsr1h	equ	0xFE2
 13894                           fsr1l	equ	0xFE1
 13895                           indf2	equ	0xFDF
 13896                           postinc2	equ	0xFDE
 13897                           postdec2	equ	0xFDD
 13898                           plusw2	equ	0xFDB
 13899                           fsr2h	equ	0xFDA
 13900                           fsr2l	equ	0xFD9
 13901                           status	equ	0xFD8
 13902                           
 13903 ;; *************** function _internalFlash_writePage *****************
 13904 ;; Defined at:
 13905 ;;		line 63 in file "internal_flash.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;  page            2    2[COMRAM] unsigned int 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  address         4    4[COMRAM] unsigned long 
 13910 ;;  cntr            2    8[COMRAM] unsigned int 
 13911 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 13912 ;;  block_cntr      1   10[COMRAM] unsigned char 
 13913 ;;  i               1    0        unsigned char 
 13914 ;;  gie             1    0        unsigned char 
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1    wreg      void 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13919 ;; Tracked objects:
 13920 ;;		On entry : 0/0
 13921 ;;		On exit  : 0/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13925 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13927 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13928 ;;Total ram usage:       10 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    1
 13931 ;; This function calls:
 13932 ;;		__internalFlash_unlockAndActivate
 13933 ;; This function is called by:
 13934 ;;		__bootloader_program
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           	psect	text57
 13939  005FE4                     __ptext57:
 13940                           	opt stack 0
 13941  005FE4                     _internalFlash_writePage:
 13942                           	opt stack 27
 13943                           
 13944                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 13945                           
 13946                           ;incstack = 0
 13947  005FE4  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 13948  005FE8  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 13949  005FEC  6A07               	clrf	internalFlash_writePage@address+2,c
 13950  005FEE  6A08               	clrf	internalFlash_writePage@address+3,c
 13951                           
 13952                           ;internal_flash.c: 74: address <<= 10;
 13953  005FF0  0E0A               	movlw	10
 13954  005FF2                     u9795:
 13955  005FF2  90D8               	bcf	status,0,c
 13956  005FF4  3605               	rlcf	internalFlash_writePage@address,f,c
 13957  005FF6  3606               	rlcf	internalFlash_writePage@address+1,f,c
 13958  005FF8  3607               	rlcf	internalFlash_writePage@address+2,f,c
 13959  005FFA  3608               	rlcf	internalFlash_writePage@address+3,f,c
 13960  005FFC  2EE8               	decfsz	wreg,f,c
 13961  005FFE  D7F9               	goto	u9795
 13962                           
 13963                           ;internal_flash.c: 76: TBLPTR = address;
 13964  006000  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 13965  006004  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 13966  006008  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 13967                           
 13968                           ;internal_flash.c: 79: cntr = 0;
 13969  00600C  0E00               	movlw	0
 13970  00600E  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 13971  006010  0E00               	movlw	0
 13972  006012  6E09               	movwf	internalFlash_writePage@cntr,c
 13973                           
 13974                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 13975  006014  0E00               	movlw	0
 13976  006016  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 13977  006018                     l12389:
 13978  006018  0E0F               	movlw	15
 13979  00601A  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 13980  00601C  D001               	goto	l2272
 13981  00601E  0012               	return	
 13982  006020                     l2272:
 13983                           
 13984                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 13985  006020  0E00               	movlw	0
 13986  006022  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 13987  006024                     l12395:
 13988  006024  0E3F               	movlw	63
 13989  006026  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 13990  006028  D001               	goto	l2274
 13991  00602A  D00D               	goto	u9820
 13992  00602C                     l2274:
 13993                           
 13994                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 13995  00602C  0E00               	movlw	low _pageBuffer
 13996  00602E  2409               	addwf	internalFlash_writePage@cntr,w,c
 13997  006030  6ED9               	movwf	fsr2l,c
 13998  006032  0E08               	movlw	high _pageBuffer
 13999  006034  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 14000  006036  6EDA               	movwf	fsr2h,c
 14001  006038  50DF               	movf	indf2,w,c
 14002  00603A  6EF5               	movwf	tablat,c	;volatile
 14003  00603C  000D               	tblwt		*+	;# 
 14004                           
 14005                           ;internal_flash.c: 91: ++cntr;
 14006  00603E  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 14007  006040  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 14008  006042  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 14009  006044  D7EF               	goto	l12395
 14010  006046                     u9820:
 14011  006046  000A               	tblrd		*-	;# 
 14012                           
 14013                           ;internal_flash.c: 98: EECON1 = 0x84;
 14014  006048  0E84               	movlw	132
 14015  00604A  6EA6               	movwf	4006,c	;volsfr
 14016                           
 14017                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14018  00604C  0EB5               	movlw	181
 14019  00604E  EC82  F03B         	call	__internalFlash_unlockAndActivate
 14020                           
 14021                           ;internal_flash.c: 100: TBLPTR++;
 14022  006052  0E01               	movlw	1
 14023  006054  26F6               	addwf	tblptrl,f,c	;volatile
 14024  006056  0E00               	movlw	0
 14025  006058  22F7               	addwfc	tblptrh,f,c	;volatile
 14026  00605A  0E00               	movlw	0
 14027  00605C  22F8               	addwfc	tblptru,f,c	;volatile
 14028  00605E  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 14029  006060  D7DB               	goto	l12389
 14030  006062                     __end_of_internalFlash_writePage:
 14031                           	opt stack 0
 14032                           tblptru	equ	0xFF8
 14033                           tblptrh	equ	0xFF7
 14034                           tblptrl	equ	0xFF6
 14035                           tablat	equ	0xFF5
 14036                           prodh	equ	0xFF4
 14037                           prodl	equ	0xFF3
 14038                           intcon	equ	0xFF2
 14039                           intcon2	equ	0xFF1
 14040                           intcon3	equ	0xFF0
 14041                           postinc0	equ	0xFEE
 14042                           wreg	equ	0xFE8
 14043                           indf1	equ	0xFE7
 14044                           postdec1	equ	0xFE5
 14045                           plusw1	equ	0xFE3
 14046                           fsr1h	equ	0xFE2
 14047                           fsr1l	equ	0xFE1
 14048                           indf2	equ	0xFDF
 14049                           postinc2	equ	0xFDE
 14050                           postdec2	equ	0xFDD
 14051                           plusw2	equ	0xFDB
 14052                           fsr2h	equ	0xFDA
 14053                           fsr2l	equ	0xFD9
 14054                           status	equ	0xFD8
 14055                           
 14056 ;; *************** function _internalFlash_readPage *****************
 14057 ;; Defined at:
 14058 ;;		line 37 in file "internal_flash.c"
 14059 ;; Parameters:    Size  Location     Type
 14060 ;;  page            2   21[COMRAM] unsigned int 
 14061 ;; Auto vars:     Size  Location     Type
 14062 ;;  address         4   23[COMRAM] unsigned long 
 14063 ;; Return value:  Size  Location     Type
 14064 ;;                  1    wreg      void 
 14065 ;; Registers used:
 14066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14067 ;; Tracked objects:
 14068 ;;		On entry : 0/0
 14069 ;;		On exit  : 0/0
 14070 ;;		Unchanged: 0/0
 14071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14073 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14075 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14076 ;;Total ram usage:        6 bytes
 14077 ;; Hardware stack levels used:    1
 14078 ;; Hardware stack levels required when called:    2
 14079 ;; This function calls:
 14080 ;;		_internalFlash_addressFromPage
 14081 ;;		_internalFlash_read
 14082 ;; This function is called by:
 14083 ;;		__bootloader_program
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text58
 14088  007232                     __ptext58:
 14089                           	opt stack 0
 14090  007232                     _internalFlash_readPage:
 14091                           	opt stack 26
 14092                           
 14093                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 14094                           
 14095                           ;incstack = 0
 14096  007232  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 14097  007236  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 14098  00723A  ECD6  F03A         	call	_internalFlash_addressFromPage	;wreg free
 14099  00723E  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 14100  007242  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 14101  007246  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 14102  00724A  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 14103                           
 14104                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 14105  00724E  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 14106  007252  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 14107  007256  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 14108  00725A  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 14109  00725E  0E04               	movlw	4
 14110  007260  6E13               	movwf	internalFlash_read@data_length+1,c
 14111  007262  0E00               	movlw	0
 14112  007264  6E12               	movwf	internalFlash_read@data_length,c
 14113  007266  0E00               	movlw	low _pageBuffer
 14114  007268  6E14               	movwf	internalFlash_read@buffer,c
 14115  00726A  0E08               	movlw	high _pageBuffer
 14116  00726C  6E15               	movwf	internalFlash_read@buffer+1,c
 14117  00726E  EC0B  F03A         	call	_internalFlash_read	;wreg free
 14118  007272  0012               	return		;funcret
 14119  007274                     __end_of_internalFlash_readPage:
 14120                           	opt stack 0
 14121                           tblptru	equ	0xFF8
 14122                           tblptrh	equ	0xFF7
 14123                           tblptrl	equ	0xFF6
 14124                           tablat	equ	0xFF5
 14125                           prodh	equ	0xFF4
 14126                           prodl	equ	0xFF3
 14127                           intcon	equ	0xFF2
 14128                           intcon2	equ	0xFF1
 14129                           intcon3	equ	0xFF0
 14130                           postinc0	equ	0xFEE
 14131                           wreg	equ	0xFE8
 14132                           indf1	equ	0xFE7
 14133                           postdec1	equ	0xFE5
 14134                           plusw1	equ	0xFE3
 14135                           fsr1h	equ	0xFE2
 14136                           fsr1l	equ	0xFE1
 14137                           indf2	equ	0xFDF
 14138                           postinc2	equ	0xFDE
 14139                           postdec2	equ	0xFDD
 14140                           plusw2	equ	0xFDB
 14141                           fsr2h	equ	0xFDA
 14142                           fsr2l	equ	0xFD9
 14143                           status	equ	0xFD8
 14144                           
 14145 ;; *************** function _internalFlash_read *****************
 14146 ;; Defined at:
 14147 ;;		line 144 in file "internal_flash.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;  address         4   13[COMRAM] unsigned long 
 14150 ;;  data_length     2   17[COMRAM] unsigned int 
 14151 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 14152 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      unsigned char 
 14157 ;; Registers used:
 14158 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14167 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14168 ;;Total ram usage:        8 bytes
 14169 ;; Hardware stack levels used:    1
 14170 ;; Hardware stack levels required when called:    1
 14171 ;; This function calls:
 14172 ;;		_memcpy
 14173 ;; This function is called by:
 14174 ;;		_internalFlash_readPage
 14175 ;;		__bootloader_verify_program_memory
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           	psect	text59
 14180  007416                     __ptext59:
 14181                           	opt stack 0
 14182  007416                     _internalFlash_read:
 14183                           	opt stack 26
 14184                           
 14185                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 14186                           
 14187                           ;incstack = 0
 14188  007416  5011               	movf	internalFlash_read@address+3,w,c
 14189  007418  E118               	bnz	l2288
 14190  00741A  280E               	incf	internalFlash_read@address,w,c
 14191  00741C  0EFF               	movlw	255
 14192  00741E  580F               	subwfb	internalFlash_read@address+1,w,c
 14193  007420  0E01               	movlw	1
 14194  007422  5810               	subwfb	internalFlash_read@address+2,w,c
 14195  007424  B0D8               	btfsc	status,0,c
 14196  007426  0012               	return	
 14197                           
 14198                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 14199                           
 14200                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 14201  007428  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 14202  00742C  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 14203  007430  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 14204  007434  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 14205  007438  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 14206  00743C  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 14207  007440  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 14208  007444  EC26  F034         	call	_memcpy	;wreg free
 14209  007448  0012               	return	
 14210  00744A                     l2288:
 14211  00744A  0012               	return		;funcret
 14212  00744C                     __end_of_internalFlash_read:
 14213                           	opt stack 0
 14214                           tblptru	equ	0xFF8
 14215                           tblptrh	equ	0xFF7
 14216                           tblptrl	equ	0xFF6
 14217                           tablat	equ	0xFF5
 14218                           prodh	equ	0xFF4
 14219                           prodl	equ	0xFF3
 14220                           intcon	equ	0xFF2
 14221                           intcon2	equ	0xFF1
 14222                           intcon3	equ	0xFF0
 14223                           postinc0	equ	0xFEE
 14224                           wreg	equ	0xFE8
 14225                           indf1	equ	0xFE7
 14226                           postdec1	equ	0xFE5
 14227                           plusw1	equ	0xFE3
 14228                           fsr1h	equ	0xFE2
 14229                           fsr1l	equ	0xFE1
 14230                           indf2	equ	0xFDF
 14231                           postinc2	equ	0xFDE
 14232                           postdec2	equ	0xFDD
 14233                           plusw2	equ	0xFDB
 14234                           fsr2h	equ	0xFDA
 14235                           fsr2l	equ	0xFD9
 14236                           status	equ	0xFD8
 14237                           
 14238 ;; *************** function _internalFlash_pageFromAddress *****************
 14239 ;; Defined at:
 14240 ;;		line 308 in file "internal_flash.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  address         4    0[COMRAM] unsigned long 
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;		None
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  2    0[COMRAM] unsigned int 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14257 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14258 ;;Total ram usage:        5 bytes
 14259 ;; Hardware stack levels used:    1
 14260 ;; This function calls:
 14261 ;;		Nothing
 14262 ;; This function is called by:
 14263 ;;		__bootloader_program
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           	psect	text60
 14268  0078EC                     __ptext60:
 14269                           	opt stack 0
 14270  0078EC                     _internalFlash_pageFromAddress:
 14271                           	opt stack 28
 14272                           
 14273                           ;internal_flash.c: 310: address >>= 10;
 14274                           
 14275                           ;incstack = 0
 14276  0078EC  0E0A               	movlw	10
 14277  0078EE  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 14278  0078F0                     u9775:
 14279  0078F0  90D8               	bcf	status,0,c
 14280  0078F2  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 14281  0078F4  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 14282  0078F6  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 14283  0078F8  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 14284  0078FA  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 14285  0078FC  D7F9               	goto	u9775
 14286                           
 14287                           ;internal_flash.c: 311: return (uint16_t) address;
 14288  0078FE  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 14289  007902  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 14290  007906  0012               	return	
 14291  007908                     __end_of_internalFlash_pageFromAddress:
 14292                           	opt stack 0
 14293                           tblptru	equ	0xFF8
 14294                           tblptrh	equ	0xFF7
 14295                           tblptrl	equ	0xFF6
 14296                           tablat	equ	0xFF5
 14297                           prodh	equ	0xFF4
 14298                           prodl	equ	0xFF3
 14299                           intcon	equ	0xFF2
 14300                           intcon2	equ	0xFF1
 14301                           intcon3	equ	0xFF0
 14302                           postinc0	equ	0xFEE
 14303                           wreg	equ	0xFE8
 14304                           indf1	equ	0xFE7
 14305                           postdec1	equ	0xFE5
 14306                           plusw1	equ	0xFE3
 14307                           fsr1h	equ	0xFE2
 14308                           fsr1l	equ	0xFE1
 14309                           indf2	equ	0xFDF
 14310                           postinc2	equ	0xFDE
 14311                           postdec2	equ	0xFDD
 14312                           plusw2	equ	0xFDB
 14313                           fsr2h	equ	0xFDA
 14314                           fsr2l	equ	0xFD9
 14315                           status	equ	0xFD8
 14316                           
 14317 ;; *************** function _internalFlash_getBuffer *****************
 14318 ;; Defined at:
 14319 ;;		line 32 in file "internal_flash.c"
 14320 ;; Parameters:    Size  Location     Type
 14321 ;;		None
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;		None
 14324 ;; Return value:  Size  Location     Type
 14325 ;;                  2    0[COMRAM] PTR unsigned char 
 14326 ;; Registers used:
 14327 ;;		wreg, status,2, status,0
 14328 ;; Tracked objects:
 14329 ;;		On entry : 0/0
 14330 ;;		On exit  : 0/0
 14331 ;;		Unchanged: 0/0
 14332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14337 ;;Total ram usage:        2 bytes
 14338 ;; Hardware stack levels used:    1
 14339 ;; This function calls:
 14340 ;;		Nothing
 14341 ;; This function is called by:
 14342 ;;		__bootloader_program
 14343 ;; This function uses a non-reentrant model
 14344 ;;
 14345                           
 14346                           	psect	text61
 14347  007A04                     __ptext61:
 14348                           	opt stack 0
 14349  007A04                     _internalFlash_getBuffer:
 14350                           	opt stack 28
 14351                           
 14352                           ;internal_flash.c: 34: return pageBuffer;
 14353                           
 14354                           ;incstack = 0
 14355  007A04  0E00               	movlw	low _pageBuffer
 14356  007A06  6E01               	movwf	?_internalFlash_getBuffer,c
 14357  007A08  0E08               	movlw	high _pageBuffer
 14358  007A0A  6E02               	movwf	?_internalFlash_getBuffer+1,c
 14359  007A0C  0012               	return	
 14360  007A0E                     __end_of_internalFlash_getBuffer:
 14361                           	opt stack 0
 14362                           tblptru	equ	0xFF8
 14363                           tblptrh	equ	0xFF7
 14364                           tblptrl	equ	0xFF6
 14365                           tablat	equ	0xFF5
 14366                           prodh	equ	0xFF4
 14367                           prodl	equ	0xFF3
 14368                           intcon	equ	0xFF2
 14369                           intcon2	equ	0xFF1
 14370                           intcon3	equ	0xFF0
 14371                           postinc0	equ	0xFEE
 14372                           wreg	equ	0xFE8
 14373                           indf1	equ	0xFE7
 14374                           postdec1	equ	0xFE5
 14375                           plusw1	equ	0xFE3
 14376                           fsr1h	equ	0xFE2
 14377                           fsr1l	equ	0xFE1
 14378                           indf2	equ	0xFDF
 14379                           postinc2	equ	0xFDE
 14380                           postdec2	equ	0xFDD
 14381                           plusw2	equ	0xFDB
 14382                           fsr2h	equ	0xFDA
 14383                           fsr2l	equ	0xFD9
 14384                           status	equ	0xFD8
 14385                           
 14386 ;; *************** function _internalFlash_erasePage *****************
 14387 ;; Defined at:
 14388 ;;		line 44 in file "internal_flash.c"
 14389 ;; Parameters:    Size  Location     Type
 14390 ;;  page            2    2[COMRAM] unsigned int 
 14391 ;; Auto vars:     Size  Location     Type
 14392 ;;  address         4    4[COMRAM] unsigned long 
 14393 ;; Return value:  Size  Location     Type
 14394 ;;                  1    wreg      void 
 14395 ;; Registers used:
 14396 ;;		wreg, status,2, status,0, cstack
 14397 ;; Tracked objects:
 14398 ;;		On entry : 0/0
 14399 ;;		On exit  : 0/0
 14400 ;;		Unchanged: 0/0
 14401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14403 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14406 ;;Total ram usage:        6 bytes
 14407 ;; Hardware stack levels used:    1
 14408 ;; Hardware stack levels required when called:    1
 14409 ;; This function calls:
 14410 ;;		__internalFlash_unlockAndActivate
 14411 ;; This function is called by:
 14412 ;;		__bootloader_program
 14413 ;; This function uses a non-reentrant model
 14414 ;;
 14415                           
 14416                           	psect	text62
 14417  00744C                     __ptext62:
 14418                           	opt stack 0
 14419  00744C                     _internalFlash_erasePage:
 14420                           	opt stack 27
 14421                           
 14422                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 14423                           
 14424                           ;incstack = 0
 14425  00744C  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 14426  007450  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 14427  007454  6A07               	clrf	internalFlash_erasePage@address+2,c
 14428  007456  6A08               	clrf	internalFlash_erasePage@address+3,c
 14429                           
 14430                           ;internal_flash.c: 50: address <<= 10;
 14431  007458  0E0A               	movlw	10
 14432  00745A                     u9785:
 14433  00745A  90D8               	bcf	status,0,c
 14434  00745C  3605               	rlcf	internalFlash_erasePage@address,f,c
 14435  00745E  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 14436  007460  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 14437  007462  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 14438  007464  2EE8               	decfsz	wreg,f,c
 14439  007466  D7F9               	goto	u9785
 14440                           
 14441                           ;internal_flash.c: 51: TBLPTR = address;
 14442  007468  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 14443  00746C  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 14444  007470  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 14445                           
 14446                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 14447  007474  84A6               	bsf	4006,2,c	;volsfr
 14448                           
 14449                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 14450  007476  88A6               	bsf	4006,4,c	;volsfr
 14451                           
 14452                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14453  007478  0EB5               	movlw	181
 14454  00747A  EC82  F03B         	call	__internalFlash_unlockAndActivate
 14455  00747E  0012               	return		;funcret
 14456  007480                     __end_of_internalFlash_erasePage:
 14457                           	opt stack 0
 14458                           tblptru	equ	0xFF8
 14459                           tblptrh	equ	0xFF7
 14460                           tblptrl	equ	0xFF6
 14461                           tablat	equ	0xFF5
 14462                           prodh	equ	0xFF4
 14463                           prodl	equ	0xFF3
 14464                           intcon	equ	0xFF2
 14465                           intcon2	equ	0xFF1
 14466                           intcon3	equ	0xFF0
 14467                           postinc0	equ	0xFEE
 14468                           wreg	equ	0xFE8
 14469                           indf1	equ	0xFE7
 14470                           postdec1	equ	0xFE5
 14471                           plusw1	equ	0xFE3
 14472                           fsr1h	equ	0xFE2
 14473                           fsr1l	equ	0xFE1
 14474                           indf2	equ	0xFDF
 14475                           postinc2	equ	0xFDE
 14476                           postdec2	equ	0xFDD
 14477                           plusw2	equ	0xFDB
 14478                           fsr2h	equ	0xFDA
 14479                           fsr2l	equ	0xFD9
 14480                           status	equ	0xFD8
 14481                           
 14482 ;; *************** function __internalFlash_unlockAndActivate *****************
 14483 ;; Defined at:
 14484 ;;		line 106 in file "internal_flash.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;  UnlockKey       1    wreg     unsigned char 
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 14489 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      void 
 14492 ;; Registers used:
 14493 ;;		wreg, status,2, status,0
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14503 ;;Total ram usage:        2 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_internalFlash_erasePage
 14509 ;;		_internalFlash_writePage
 14510 ;;		_EraseBlock
 14511 ;; This function uses a non-reentrant model
 14512 ;;
 14513                           
 14514                           	psect	text63
 14515  007704                     __ptext63:
 14516                           	opt stack 0
 14517  007704                     __internalFlash_unlockAndActivate:
 14518                           	opt stack 27
 14519                           
 14520                           ;incstack = 0
 14521                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 14522  007704  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 14523                           
 14524                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 14525  007706  0EB5               	movlw	181
 14526  007708  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 14527  00770A  B4D8               	btfsc	status,2,c
 14528  00770C  D002               	goto	l2279
 14529                           
 14530                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 14531  00770E  94A6               	bcf	4006,2,c	;volsfr
 14532                           
 14533                           ;internal_flash.c: 118: return;
 14534  007710  0012               	return	
 14535  007712                     l2279:
 14536                           
 14537                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 14538  007712  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 14539                           
 14540                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 14541  007716  9EF2               	bcf	intcon,7,c	;volatile
 14542                           
 14543                           ;internal_flash.c: 123: EECON2 = 0x55;
 14544  007718  0E55               	movlw	85
 14545  00771A  6EA7               	movwf	4007,c	;volsfr
 14546                           
 14547                           ;internal_flash.c: 124: EECON2 = 0xAA;
 14548  00771C  0EAA               	movlw	170
 14549  00771E  6EA7               	movwf	4007,c	;volsfr
 14550                           
 14551                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 14552  007720  82A6               	bsf	4006,1,c	;volsfr
 14553                           
 14554                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 14555  007722  94A6               	bcf	4006,2,c	;volsfr
 14556                           
 14557                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 14558  007724  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 14559  007726  0012               	return	
 14560                           
 14561                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 14562  007728  8EF2               	bsf	intcon,7,c	;volatile
 14563  00772A  0012               	return	
 14564  00772C                     __end_of__internalFlash_unlockAndActivate:
 14565                           	opt stack 0
 14566                           tblptru	equ	0xFF8
 14567                           tblptrh	equ	0xFF7
 14568                           tblptrl	equ	0xFF6
 14569                           tablat	equ	0xFF5
 14570                           prodh	equ	0xFF4
 14571                           prodl	equ	0xFF3
 14572                           intcon	equ	0xFF2
 14573                           intcon2	equ	0xFF1
 14574                           intcon3	equ	0xFF0
 14575                           postinc0	equ	0xFEE
 14576                           wreg	equ	0xFE8
 14577                           indf1	equ	0xFE7
 14578                           postdec1	equ	0xFE5
 14579                           plusw1	equ	0xFE3
 14580                           fsr1h	equ	0xFE2
 14581                           fsr1l	equ	0xFE1
 14582                           indf2	equ	0xFDF
 14583                           postinc2	equ	0xFDE
 14584                           postdec2	equ	0xFDD
 14585                           plusw2	equ	0xFDB
 14586                           fsr2h	equ	0xFDA
 14587                           fsr2l	equ	0xFD9
 14588                           status	equ	0xFD8
 14589                           
 14590 ;; *************** function _internalFlash_addressWithinPage *****************
 14591 ;; Defined at:
 14592 ;;		line 322 in file "internal_flash.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;  address         4    8[COMRAM] unsigned long 
 14595 ;;  page            2   12[COMRAM] unsigned int 
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;  page_start_a    4   18[COMRAM] unsigned long 
 14598 ;; Return value:  Size  Location     Type
 14599 ;;                  2    8[COMRAM] unsigned int 
 14600 ;; Registers used:
 14601 ;;		wreg, status,2, status,0, cstack
 14602 ;; Tracked objects:
 14603 ;;		On entry : 0/0
 14604 ;;		On exit  : 0/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14607 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14608 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14610 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14611 ;;Total ram usage:       14 bytes
 14612 ;; Hardware stack levels used:    1
 14613 ;; Hardware stack levels required when called:    1
 14614 ;; This function calls:
 14615 ;;		_internalFlash_addressFromPage
 14616 ;; This function is called by:
 14617 ;;		__bootloader_program
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           	psect	text64
 14622  0069DA                     __ptext64:
 14623                           	opt stack 0
 14624  0069DA                     _internalFlash_addressWithinPage:
 14625                           	opt stack 27
 14626                           
 14627                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 14628                           
 14629                           ;incstack = 0
 14630  0069DA  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 14631  0069DE  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 14632  0069E2  ECD6  F03A         	call	_internalFlash_addressFromPage	;wreg free
 14633  0069E6  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 14634  0069EA  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 14635  0069EE  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 14636  0069F2  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 14637                           
 14638                           ;internal_flash.c: 326: address = address - page_start_address;
 14639  0069F6  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 14640  0069FA  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 14641  0069FE  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 14642  006A02  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 14643  006A06  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 14644  006A08  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 14645  006A0A  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 14646  006A0C  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 14647  006A0E  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 14648  006A10  0E00               	movlw	0
 14649  006A12  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 14650  006A14  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 14651  006A16  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 14652  006A18  5009               	movf	internalFlash_addressWithinPage@address,w,c
 14653  006A1A  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 14654  006A1C  6E09               	movwf	internalFlash_addressWithinPage@address,c
 14655  006A1E  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 14656  006A20  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 14657  006A22  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 14658  006A24  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 14659  006A26  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 14660  006A28  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 14661  006A2A  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 14662  006A2C  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 14663  006A2E  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 14664                           
 14665                           ;internal_flash.c: 327: return (uint16_t) address;
 14666  006A30  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 14667  006A34  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 14668  006A38  0012               	return	
 14669  006A3A                     __end_of_internalFlash_addressWithinPage:
 14670                           	opt stack 0
 14671                           tblptru	equ	0xFF8
 14672                           tblptrh	equ	0xFF7
 14673                           tblptrl	equ	0xFF6
 14674                           tablat	equ	0xFF5
 14675                           prodh	equ	0xFF4
 14676                           prodl	equ	0xFF3
 14677                           intcon	equ	0xFF2
 14678                           intcon2	equ	0xFF1
 14679                           intcon3	equ	0xFF0
 14680                           postinc0	equ	0xFEE
 14681                           wreg	equ	0xFE8
 14682                           indf1	equ	0xFE7
 14683                           postdec1	equ	0xFE5
 14684                           plusw1	equ	0xFE3
 14685                           fsr1h	equ	0xFE2
 14686                           fsr1l	equ	0xFE1
 14687                           indf2	equ	0xFDF
 14688                           postinc2	equ	0xFDE
 14689                           postdec2	equ	0xFDD
 14690                           plusw2	equ	0xFDB
 14691                           fsr2h	equ	0xFDA
 14692                           fsr2l	equ	0xFD9
 14693                           status	equ	0xFD8
 14694                           
 14695 ;; *************** function _internalFlash_addressFromPage *****************
 14696 ;; Defined at:
 14697 ;;		line 314 in file "internal_flash.c"
 14698 ;; Parameters:    Size  Location     Type
 14699 ;;  page            2    0[COMRAM] unsigned int 
 14700 ;; Auto vars:     Size  Location     Type
 14701 ;;  address         4    4[COMRAM] unsigned long 
 14702 ;; Return value:  Size  Location     Type
 14703 ;;                  4    0[COMRAM] unsigned long 
 14704 ;; Registers used:
 14705 ;;		wreg, status,2, status,0
 14706 ;; Tracked objects:
 14707 ;;		On entry : 0/0
 14708 ;;		On exit  : 0/0
 14709 ;;		Unchanged: 0/0
 14710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14714 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14715 ;;Total ram usage:        8 bytes
 14716 ;; Hardware stack levels used:    1
 14717 ;; This function calls:
 14718 ;;		Nothing
 14719 ;; This function is called by:
 14720 ;;		_internalFlash_readPage
 14721 ;;		_internalFlash_addressWithinPage
 14722 ;; This function uses a non-reentrant model
 14723 ;;
 14724                           
 14725                           	psect	text65
 14726  0075AC                     __ptext65:
 14727                           	opt stack 0
 14728  0075AC                     _internalFlash_addressFromPage:
 14729                           	opt stack 27
 14730                           
 14731                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 14732                           
 14733                           ;incstack = 0
 14734  0075AC  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 14735  0075B0  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 14736  0075B4  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 14737  0075B6  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 14738                           
 14739                           ;internal_flash.c: 318: address <<= 10;
 14740  0075B8  0E0A               	movlw	10
 14741  0075BA                     u8885:
 14742  0075BA  90D8               	bcf	status,0,c
 14743  0075BC  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 14744  0075BE  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 14745  0075C0  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 14746  0075C2  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 14747  0075C4  2EE8               	decfsz	wreg,f,c
 14748  0075C6  D7F9               	goto	u8885
 14749                           
 14750                           ;internal_flash.c: 319: return address;
 14751  0075C8  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 14752  0075CC  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 14753  0075D0  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 14754  0075D4  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 14755  0075D8  0012               	return	
 14756  0075DA                     __end_of_internalFlash_addressFromPage:
 14757                           	opt stack 0
 14758                           tblptru	equ	0xFF8
 14759                           tblptrh	equ	0xFF7
 14760                           tblptrl	equ	0xFF6
 14761                           tablat	equ	0xFF5
 14762                           prodh	equ	0xFF4
 14763                           prodl	equ	0xFF3
 14764                           intcon	equ	0xFF2
 14765                           intcon2	equ	0xFF1
 14766                           intcon3	equ	0xFF0
 14767                           postinc0	equ	0xFEE
 14768                           wreg	equ	0xFE8
 14769                           indf1	equ	0xFE7
 14770                           postdec1	equ	0xFE5
 14771                           plusw1	equ	0xFE3
 14772                           fsr1h	equ	0xFE2
 14773                           fsr1l	equ	0xFE1
 14774                           indf2	equ	0xFDF
 14775                           postinc2	equ	0xFDE
 14776                           postdec2	equ	0xFDD
 14777                           plusw2	equ	0xFDB
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function __bootloader_check_address *****************
 14783 ;; Defined at:
 14784 ;;		line 94 in file "bootloader.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  address         4    0[COMRAM] unsigned long 
 14787 ;;  dataLength      1    4[COMRAM] unsigned char 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  cntr            1   11[COMRAM] unsigned char 
 14790 ;;  byte_status     1   10[COMRAM] enum E6893
 14791 ;;  worst_case      1    9[COMRAM] enum E6893
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  1    wreg      enum E6893
 14794 ;; Registers used:
 14795 ;;		wreg, status,2, status,0
 14796 ;; Tracked objects:
 14797 ;;		On entry : 0/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14801 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14802 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;Total ram usage:       12 bytes
 14806 ;; Hardware stack levels used:    1
 14807 ;; This function calls:
 14808 ;;		Nothing
 14809 ;; This function is called by:
 14810 ;;		__bootloader_verify_file
 14811 ;;		__bootloader_program
 14812 ;; This function uses a non-reentrant model
 14813 ;;
 14814                           
 14815                           	psect	text66
 14816  004802                     __ptext66:
 14817                           	opt stack 0
 14818  004802                     __bootloader_check_address:
 14819                           	opt stack 28
 14820                           
 14821                           ;bootloader.c: 96: addressCheckResult_t byte_status;;bootloader.c: 97: addressCheckResul
      +                          t_t worst_case;;bootloader.c: 98: uint8_t cntr;;bootloader.c: 100: worst_case = ADDRESS_
      +                          CHECK_RESULT_OK;
 14822                           
 14823                           ;incstack = 0
 14824  004802  0E00               	movlw	0
 14825  004804  6E0A               	movwf	__bootloader_check_address@worst_case,c
 14826                           
 14827                           ;bootloader.c: 103: for(cntr=0; cntr<dataLength; ++cntr)
 14828  004806  0E00               	movlw	0
 14829  004808  6E0C               	movwf	__bootloader_check_address@cntr,c
 14830  00480A  D062               	goto	l2141
 14831  00480C                     
 14832                           ;bootloader.c: 104: {;bootloader.c: 106: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 14833  00480C  500C               	movf	__bootloader_check_address@cntr,w,c
 14834  00480E  2401               	addwf	__bootloader_check_address@address,w,c
 14835  004810  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14836  004812  0E00               	movlw	0
 14837  004814  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14838  004816  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14839  004818  0E00               	movlw	0
 14840  00481A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14841  00481C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14842  00481E  0E00               	movlw	0
 14843  004820  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14844  004822  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14845  004824  5009               	movf	??__bootloader_check_address+3,w,c
 14846  004826  1008               	iorwf	??__bootloader_check_address+2,w,c
 14847  004828  E104               	bnz	u9700
 14848  00482A  0E90               	movlw	144
 14849  00482C  5C07               	subwf	??__bootloader_check_address+1,w,c
 14850  00482E  A0D8               	btfss	status,0,c
 14851  004830  D018               	goto	l2143
 14852  004832                     u9700:
 14853  004832  500C               	movf	__bootloader_check_address@cntr,w,c
 14854  004834  2401               	addwf	__bootloader_check_address@address,w,c
 14855  004836  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14856  004838  0E00               	movlw	0
 14857  00483A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14858  00483C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14859  00483E  0E00               	movlw	0
 14860  004840  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14861  004842  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14862  004844  0E00               	movlw	0
 14863  004846  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14864  004848  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14865  00484A  5009               	movf	??__bootloader_check_address+3,w,c
 14866  00484C  E10A               	bnz	l12321
 14867  00484E  0EF8               	movlw	248
 14868  004850  5C06               	subwf	??__bootloader_check_address,w,c
 14869  004852  0EFF               	movlw	255
 14870  004854  5807               	subwfb	??__bootloader_check_address+1,w,c
 14871  004856  0E01               	movlw	1
 14872  004858  5808               	subwfb	??__bootloader_check_address+2,w,c
 14873  00485A  B0D8               	btfsc	status,0,c
 14874  00485C  D002               	goto	l2143
 14875                           
 14876                           ;bootloader.c: 107: {;bootloader.c: 108: byte_status = ADDRESS_CHECK_RESULT_OK;
 14877  00485E  0E00               	movlw	0
 14878  004860  D029               	goto	L4
 14879  004862                     l2143:
 14880  004862                     l12321:
 14881                           
 14882                           ;bootloader.c: 112: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 14883  004862  500C               	movf	__bootloader_check_address@cntr,w,c
 14884  004864  2401               	addwf	__bootloader_check_address@address,w,c
 14885  004866  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14886  004868  0E00               	movlw	0
 14887  00486A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14888  00486C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14889  00486E  0E00               	movlw	0
 14890  004870  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14891  004872  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14892  004874  0E00               	movlw	0
 14893  004876  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14894  004878  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14895  00487A  5009               	movf	??__bootloader_check_address+3,w,c
 14896  00487C  E108               	bnz	u9720
 14897  00487E  0EF8               	movlw	248
 14898  004880  5C06               	subwf	??__bootloader_check_address,w,c
 14899  004882  0EFF               	movlw	255
 14900  004884  5807               	subwfb	??__bootloader_check_address+1,w,c
 14901  004886  0E01               	movlw	1
 14902  004888  5808               	subwfb	??__bootloader_check_address+2,w,c
 14903  00488A  A0D8               	btfss	status,0,c
 14904  00488C  D015               	goto	l2145
 14905  00488E                     u9720:
 14906  00488E  500C               	movf	__bootloader_check_address@cntr,w,c
 14907  004890  2401               	addwf	__bootloader_check_address@address,w,c
 14908  004892  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14909  004894  0E00               	movlw	0
 14910  004896  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14911  004898  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14912  00489A  0E00               	movlw	0
 14913  00489C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14914  00489E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14915  0048A0  0E00               	movlw	0
 14916  0048A2  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14917  0048A4  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14918  0048A6  5009               	movf	??__bootloader_check_address+3,w,c
 14919  0048A8  E107               	bnz	l2145
 14920  0048AA  0E02               	movlw	2
 14921  0048AC  5C08               	subwf	??__bootloader_check_address+2,w,c
 14922  0048AE  B0D8               	btfsc	status,0,c
 14923  0048B0  D003               	goto	l2145
 14924                           
 14925                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 14926  0048B2  0E01               	movlw	1
 14927  0048B4                     L4:
 14928  0048B4  6E0B               	movwf	__bootloader_check_address@byte_status,c
 14929                           
 14930                           ;bootloader.c: 115: }
 14931  0048B6  D001               	goto	l2146
 14932  0048B8                     l2145:
 14933                           
 14934                           ;bootloader.c: 116: else;bootloader.c: 117: {;bootloader.c: 118: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 14935  0048B8  680B               	setf	__bootloader_check_address@byte_status,c
 14936  0048BA                     l2146:
 14937                           
 14938                           ;bootloader.c: 119: };bootloader.c: 122: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 14939  0048BA  280B               	incf	__bootloader_check_address@byte_status,w,c
 14940  0048BC  A4D8               	btfss	status,2,c
 14941  0048BE  D002               	goto	l2147
 14942                           
 14943                           ;bootloader.c: 123: {;bootloader.c: 124: return ADDRESS_CHECK_RESULT_ERROR;
 14944  0048C0  0EFF               	movlw	255
 14945  0048C2  0012               	return	
 14946  0048C4                     l2147:
 14947                           
 14948                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status > worst_case)
 14949  0048C4  500B               	movf	__bootloader_check_address@byte_status,w,c
 14950  0048C6  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 14951  0048C8  A0D8               	btfss	status,0,c
 14952                           
 14953                           ;bootloader.c: 129: {;bootloader.c: 130: worst_case = byte_status;
 14954  0048CA  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 14955  0048CE  2A0C               	incf	__bootloader_check_address@cntr,f,c
 14956  0048D0                     l2141:
 14957  0048D0  5005               	movf	__bootloader_check_address@dataLength,w,c
 14958  0048D2  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 14959  0048D4  A0D8               	btfss	status,0,c
 14960  0048D6  D79A               	goto	l2142
 14961                           
 14962                           ;bootloader.c: 131: };bootloader.c: 132: };bootloader.c: 134: return worst_case;
 14963  0048D8  500A               	movf	__bootloader_check_address@worst_case,w,c
 14964  0048DA  0012               	return	
 14965  0048DC                     __end_of__bootloader_check_address:
 14966                           	opt stack 0
 14967                           tblptru	equ	0xFF8
 14968                           tblptrh	equ	0xFF7
 14969                           tblptrl	equ	0xFF6
 14970                           tablat	equ	0xFF5
 14971                           prodh	equ	0xFF4
 14972                           prodl	equ	0xFF3
 14973                           intcon	equ	0xFF2
 14974                           intcon2	equ	0xFF1
 14975                           intcon3	equ	0xFF0
 14976                           postinc0	equ	0xFEE
 14977                           wreg	equ	0xFE8
 14978                           indf1	equ	0xFE7
 14979                           postdec1	equ	0xFE5
 14980                           plusw1	equ	0xFE3
 14981                           fsr1h	equ	0xFE2
 14982                           fsr1l	equ	0xFE1
 14983                           indf2	equ	0xFDF
 14984                           postinc2	equ	0xFDE
 14985                           postdec2	equ	0xFDD
 14986                           plusw2	equ	0xFDB
 14987                           fsr2h	equ	0xFDA
 14988                           fsr2l	equ	0xFD9
 14989                           status	equ	0xFD8
 14990                           
 14991 ;; *************** function __bootloader_find_file *****************
 14992 ;; Defined at:
 14993 ;;		line 137 in file "bootloader.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;		None
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;		None
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  1    wreg      void 
 15000 ;; Registers used:
 15001 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15002 ;; Tracked objects:
 15003 ;;		On entry : 0/0
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;Total ram usage:        0 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:    6
 15014 ;; This function calls:
 15015 ;;		_fat_find_file
 15016 ;;		_fat_get_file_size
 15017 ;; This function is called by:
 15018 ;;		_bootloader_run
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           
 15022                           	psect	text67
 15023  0056D6                     __ptext67:
 15024                           	opt stack 0
 15025  0056D6                     __bootloader_find_file:
 15026                           	opt stack 23
 15027                           
 15028                           ;bootloader.c: 140: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 15029                           
 15030                           ;incstack = 0
 15031  0056D6  0EB6               	movlw	low _bootloader_filename
 15032  0056D8  6E28               	movwf	fat_find_file@name,c
 15033  0056DA  0E8F               	movlw	high _bootloader_filename
 15034  0056DC  6E29               	movwf	fat_find_file@name+1,c
 15035  0056DE  0EC7               	movlw	low _bootloader_extension
 15036  0056E0  6E2A               	movwf	fat_find_file@extension,c
 15037  0056E2  0E8F               	movlw	high _bootloader_extension
 15038  0056E4  6E2B               	movwf	fat_find_file@extension+1,c
 15039  0056E6  ECBE  F028         	call	_fat_find_file	;wreg free
 15040  0056EA  0100               	movlb	0	; () banked
 15041  0056EC  6FFE               	movwf	_file_number& (0+255),b
 15042                           
 15043                           ; BSR set to: 0
 15044                           ;bootloader.c: 143: if(file_number!=0xFF)
 15045  0056EE  29FE               	incf	_file_number& (0+255),w,b
 15046  0056F0  B4D8               	btfsc	status,2,c
 15047  0056F2  D033               	goto	l2153
 15048                           
 15049                           ; BSR set to: 0
 15050                           ;bootloader.c: 144: {;bootloader.c: 146: hex_file_size = fat_get_file_size(file_number);
 15051  0056F4  51FE               	movf	_file_number& (0+255),w,b
 15052  0056F6  EC0D  F032         	call	_fat_get_file_size
 15053  0056FA  C028  F078         	movff	?_fat_get_file_size,_hex_file_size
 15054  0056FE  C029  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 15055  005702  C02A  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 15056  005706  C02B  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 15057                           
 15058                           ;bootloader.c: 148: hex_file_entries = 0;
 15059  00570A  0E00               	movlw	0
 15060  00570C  0100               	movlb	0	; () banked
 15061  00570E  6F85               	movwf	(_hex_file_entries+1)& (0+255),b
 15062  005710  0E00               	movlw	0
 15063  005712  6F84               	movwf	_hex_file_entries& (0+255),b
 15064                           
 15065                           ; BSR set to: 0
 15066                           ;bootloader.c: 149: hex_file_offset = 0;
 15067  005714  0E00               	movlw	0
 15068  005716  6F7C               	movwf	_hex_file_offset& (0+255),b
 15069  005718  0E00               	movlw	0
 15070  00571A  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 15071  00571C  0E00               	movlw	0
 15072  00571E  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 15073  005720  0E00               	movlw	0
 15074  005722  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 15075                           
 15076                           ; BSR set to: 0
 15077                           ;bootloader.c: 150: file_minimum_address = 0xFFFFFFFF;
 15078  005724  0101               	movlb	1	; () banked
 15079  005726  6948               	setf	_file_minimum_address& (0+255),b
 15080  005728  6949               	setf	(_file_minimum_address+1)& (0+255),b
 15081  00572A  694A               	setf	(_file_minimum_address+2)& (0+255),b
 15082  00572C  694B               	setf	(_file_minimum_address+3)& (0+255),b
 15083                           
 15084                           ; BSR set to: 1
 15085                           ;bootloader.c: 151: file_maximum_address = 0x00000000;
 15086  00572E  0E00               	movlw	0
 15087  005730  6F44               	movwf	_file_maximum_address& (0+255),b
 15088  005732  0E00               	movlw	0
 15089  005734  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 15090  005736  0E00               	movlw	0
 15091  005738  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 15092  00573A  0E00               	movlw	0
 15093  00573C  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 15094                           
 15095                           ; BSR set to: 1
 15096                           ;bootloader.c: 152: extended_linear_address = 0x00000000;
 15097  00573E  0E00               	movlw	0
 15098  005740  6F40               	movwf	_extended_linear_address& (0+255),b
 15099  005742  0E00               	movlw	0
 15100  005744  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 15101  005746  0E00               	movlw	0
 15102  005748  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 15103  00574A  0E00               	movlw	0
 15104  00574C  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 15105                           
 15106                           ; BSR set to: 1
 15107                           ;bootloader.c: 153: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 15108  00574E  0E10               	movlw	16
 15109  005750  0100               	movlb	0	; () banked
 15110  005752  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;bootloader.c: 154: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 15114  005754  0E10               	movlw	16
 15115  005756  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15116                           
 15117                           ;bootloader.c: 155: }
 15118  005758  0012               	return	
 15119  00575A                     l2153:
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;bootloader.c: 157: else;bootloader.c: 158: {;bootloader.c: 160: hex_file_size = 0;
 15123                           
 15124                           ; BSR set to: 0
 15125  00575A  0E00               	movlw	0
 15126  00575C  6F78               	movwf	_hex_file_size& (0+255),b
 15127  00575E  0E00               	movlw	0
 15128  005760  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 15129  005762  0E00               	movlw	0
 15130  005764  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 15131  005766  0E00               	movlw	0
 15132  005768  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 15133                           
 15134                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_START;
 15135  00576A  0E00               	movlw	0
 15136  00576C  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15137                           
 15138                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 15139  00576E  0E00               	movlw	0
 15140  005770  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15141  005772  0012               	return	
 15142  005774                     __end_of__bootloader_find_file:
 15143                           	opt stack 0
 15144                           tblptru	equ	0xFF8
 15145                           tblptrh	equ	0xFF7
 15146                           tblptrl	equ	0xFF6
 15147                           tablat	equ	0xFF5
 15148                           prodh	equ	0xFF4
 15149                           prodl	equ	0xFF3
 15150                           intcon	equ	0xFF2
 15151                           intcon2	equ	0xFF1
 15152                           intcon3	equ	0xFF0
 15153                           postinc0	equ	0xFEE
 15154                           wreg	equ	0xFE8
 15155                           indf1	equ	0xFE7
 15156                           postdec1	equ	0xFE5
 15157                           plusw1	equ	0xFE3
 15158                           fsr1h	equ	0xFE2
 15159                           fsr1l	equ	0xFE1
 15160                           indf2	equ	0xFDF
 15161                           postinc2	equ	0xFDE
 15162                           postdec2	equ	0xFDD
 15163                           plusw2	equ	0xFDB
 15164                           fsr2h	equ	0xFDA
 15165                           fsr2l	equ	0xFD9
 15166                           status	equ	0xFD8
 15167                           
 15168 ;; *************** function __normal_mode *****************
 15169 ;; Defined at:
 15170 ;;		line 151 in file "main.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;		None
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;		None
 15175 ;; Return value:  Size  Location     Type
 15176 ;;                  1    wreg      unsigned char 
 15177 ;; Registers used:
 15178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15179 ;; Tracked objects:
 15180 ;;		On entry : 0/0
 15181 ;;		On exit  : 0/0
 15182 ;;		Unchanged: 0/0
 15183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15188 ;;Total ram usage:        0 bytes
 15189 ;; Hardware stack levels used:    1
 15190 ;; Hardware stack levels required when called:    3
 15191 ;; This function calls:
 15192 ;;		_i2c_eeprom_readByte
 15193 ;;		_i2c_eeprom_writeByte
 15194 ;; This function is called by:
 15195 ;;		_main
 15196 ;; This function uses a non-reentrant model
 15197 ;;
 15198                           
 15199                           	psect	text68
 15200  006B52                     __ptext68:
 15201                           	opt stack 0
 15202  006B52                     __normal_mode:
 15203                           	opt stack 27
 15204                           
 15205                           ;main.c: 153: if(i2c_eeprom_readByte(0x100)==0x94)
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;incstack = 0
 15209  006B52  0E01               	movlw	1
 15210  006B54  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15211  006B56  0E00               	movlw	0
 15212  006B58  6E12               	movwf	i2c_eeprom_readByte@address,c
 15213  006B5A  ECAD  F037         	call	_i2c_eeprom_readByte	;wreg free
 15214  006B5E  0A94               	xorlw	148
 15215  006B60  A4D8               	btfss	status,2,c
 15216  006B62  D00A               	goto	l875
 15217                           
 15218                           ;main.c: 154: {;main.c: 156: i2c_eeprom_writeByte(0x100, 0x00);
 15219  006B64  0E01               	movlw	1
 15220  006B66  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15221  006B68  0E00               	movlw	0
 15222  006B6A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15223  006B6C  0E00               	movlw	0
 15224  006B6E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15225  006B70  EC3A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 15226                           
 15227                           ;main.c: 158: return 0;
 15228  006B74  0E00               	movlw	0
 15229                           
 15230                           ;main.c: 159: }
 15231  006B76  0012               	return	
 15232  006B78                     l875:
 15233                           
 15234                           ;main.c: 160: else if(i2c_eeprom_readByte(0x100)==0x78)
 15235  006B78  0E01               	movlw	1
 15236  006B7A  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15237  006B7C  0E00               	movlw	0
 15238  006B7E  6E12               	movwf	i2c_eeprom_readByte@address,c
 15239  006B80  ECAD  F037         	call	_i2c_eeprom_readByte	;wreg free
 15240  006B84  0A78               	xorlw	120
 15241  006B86  A4D8               	btfss	status,2,c
 15242  006B88  D00A               	goto	l878
 15243                           
 15244                           ;main.c: 161: {;main.c: 163: i2c_eeprom_writeByte(0x100, 0x00);
 15245  006B8A  0E01               	movlw	1
 15246  006B8C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15247  006B8E  0E00               	movlw	0
 15248  006B90  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15249  006B92  0E00               	movlw	0
 15250  006B94  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15251  006B96  EC3A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 15252                           
 15253                           ;main.c: 165: return 1;
 15254  006B9A  0E01               	movlw	1
 15255                           
 15256                           ;main.c: 166: }
 15257  006B9C  0012               	return	
 15258  006B9E                     l878:
 15259                           
 15260                           ;main.c: 167: else if(!PORTAbits.RA0)
 15261  006B9E  B080               	btfsc	3968,0,c	;volatile
 15262  006BA0  D002               	goto	l880
 15263                           
 15264                           ;main.c: 168: {;main.c: 170: return 0;
 15265  006BA2  0E00               	movlw	0
 15266                           
 15267                           ;main.c: 171: }
 15268  006BA4  0012               	return	
 15269  006BA6                     l880:
 15270                           
 15271                           ;main.c: 172: else;main.c: 173: {;main.c: 175: return 1;
 15272  006BA6  0E01               	movlw	1
 15273  006BA8  0012               	return	
 15274  006BAA                     __end_of__normal_mode:
 15275                           	opt stack 0
 15276                           tblptru	equ	0xFF8
 15277                           tblptrh	equ	0xFF7
 15278                           tblptrl	equ	0xFF6
 15279                           tablat	equ	0xFF5
 15280                           prodh	equ	0xFF4
 15281                           prodl	equ	0xFF3
 15282                           intcon	equ	0xFF2
 15283                           intcon2	equ	0xFF1
 15284                           intcon3	equ	0xFF0
 15285                           postinc0	equ	0xFEE
 15286                           wreg	equ	0xFE8
 15287                           indf1	equ	0xFE7
 15288                           postdec1	equ	0xFE5
 15289                           plusw1	equ	0xFE3
 15290                           fsr1h	equ	0xFE2
 15291                           fsr1l	equ	0xFE1
 15292                           indf2	equ	0xFDF
 15293                           postinc2	equ	0xFDE
 15294                           postdec2	equ	0xFDD
 15295                           plusw2	equ	0xFDB
 15296                           fsr2h	equ	0xFDA
 15297                           fsr2l	equ	0xFD9
 15298                           status	equ	0xFD8
 15299                           
 15300 ;; *************** function _i2c_eeprom_readByte *****************
 15301 ;; Defined at:
 15302 ;;		line 359 in file "i2c.c"
 15303 ;; Parameters:    Size  Location     Type
 15304 ;;  address         2   17[COMRAM] unsigned int 
 15305 ;; Auto vars:     Size  Location     Type
 15306 ;;  addr            1   23[COMRAM] unsigned char 
 15307 ;;  slave_addres    1   22[COMRAM] unsigned char 
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      unsigned char 
 15310 ;; Registers used:
 15311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15319 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15321 ;;Total ram usage:        7 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    2
 15324 ;; This function calls:
 15325 ;;		__i2c_read
 15326 ;;		__i2c_write
 15327 ;;		_i2c_set_frequency
 15328 ;; This function is called by:
 15329 ;;		__normal_mode
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           	psect	text69
 15334  006F5A                     __ptext69:
 15335                           	opt stack 0
 15336  006F5A                     _i2c_eeprom_readByte:
 15337                           	opt stack 27
 15338                           
 15339                           ;i2c.c: 361: uint8_t slave_address;;i2c.c: 362: uint8_t addr;;i2c.c: 363: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 15340                           
 15341                           ;incstack = 0
 15342  006F5A  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 15343  006F5E  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 15344  006F62  0E07               	movlw	7
 15345  006F64  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 15346  006F66                     u10305:
 15347  006F66  90D8               	bcf	status,0,c
 15348  006F68  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 15349  006F6A  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 15350  006F6C  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 15351  006F6E  D7FB               	goto	u10305
 15352  006F70  5014               	movf	??_i2c_eeprom_readByte,w,c
 15353  006F72  0B0E               	andlw	14
 15354  006F74  09A0               	iorlw	160
 15355  006F76  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 15356                           
 15357                           ;i2c.c: 364: addr = address & 0xFF;
 15358  006F78  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 15359                           
 15360                           ;i2c.c: 367: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15361  006F7C  0E02               	movlw	2
 15362  006F7E  EC2F  F03B         	call	_i2c_set_frequency
 15363                           
 15364                           ;i2c.c: 369: _i2c_write(slave_address, &addr, 1);
 15365  006F82  0E18               	movlw	low i2c_eeprom_readByte@addr
 15366  006F84  6E06               	movwf	__i2c_write@data,c
 15367  006F86  0E00               	movlw	high i2c_eeprom_readByte@addr
 15368  006F88  6E07               	movwf	__i2c_write@data+1,c
 15369  006F8A  0E01               	movlw	1
 15370  006F8C  6E08               	movwf	__i2c_write@length,c
 15371  006F8E  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15372  006F90  EC6D  F038         	call	__i2c_write
 15373                           
 15374                           ;i2c.c: 370: _i2c_read(slave_address, &addr, 1);
 15375  006F94  0E18               	movlw	low i2c_eeprom_readByte@addr
 15376  006F96  6E06               	movwf	__i2c_read@data,c
 15377  006F98  0E00               	movlw	high i2c_eeprom_readByte@addr
 15378  006F9A  6E07               	movwf	__i2c_read@data+1,c
 15379  006F9C  0E01               	movlw	1
 15380  006F9E  6E08               	movwf	__i2c_read@length,c
 15381  006FA0  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15382  006FA2  ECA5  F02E         	call	__i2c_read
 15383                           
 15384                           ;i2c.c: 371: return addr;
 15385  006FA6  5018               	movf	i2c_eeprom_readByte@addr,w,c
 15386  006FA8  0012               	return	
 15387  006FAA                     __end_of_i2c_eeprom_readByte:
 15388                           	opt stack 0
 15389                           tblptru	equ	0xFF8
 15390                           tblptrh	equ	0xFF7
 15391                           tblptrl	equ	0xFF6
 15392                           tablat	equ	0xFF5
 15393                           prodh	equ	0xFF4
 15394                           prodl	equ	0xFF3
 15395                           intcon	equ	0xFF2
 15396                           intcon2	equ	0xFF1
 15397                           intcon3	equ	0xFF0
 15398                           postinc0	equ	0xFEE
 15399                           wreg	equ	0xFE8
 15400                           indf1	equ	0xFE7
 15401                           postdec1	equ	0xFE5
 15402                           plusw1	equ	0xFE3
 15403                           fsr1h	equ	0xFE2
 15404                           fsr1l	equ	0xFE1
 15405                           indf2	equ	0xFDF
 15406                           postinc2	equ	0xFDE
 15407                           postdec2	equ	0xFDD
 15408                           plusw2	equ	0xFDB
 15409                           fsr2h	equ	0xFDA
 15410                           fsr2l	equ	0xFD9
 15411                           status	equ	0xFD8
 15412                           
 15413 ;; *************** function __i2c_read *****************
 15414 ;; Defined at:
 15415 ;;		line 153 in file "i2c.c"
 15416 ;; Parameters:    Size  Location     Type
 15417 ;;  slave_addres    1    wreg     unsigned char 
 15418 ;;  data            2    5[COMRAM] PTR unsigned char 
 15419 ;;		 -> i2c_eeprom_readByte@addr(1), 
 15420 ;;  length          1    7[COMRAM] unsigned char 
 15421 ;; Auto vars:     Size  Location     Type
 15422 ;;  slave_addres    1   15[COMRAM] unsigned char 
 15423 ;;  cntr            1   16[COMRAM] unsigned char 
 15424 ;; Return value:  Size  Location     Type
 15425 ;;                  1    wreg      void 
 15426 ;; Registers used:
 15427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15428 ;; Tracked objects:
 15429 ;;		On entry : 0/0
 15430 ;;		On exit  : 0/0
 15431 ;;		Unchanged: 0/0
 15432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15433 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15435 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15436 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15437 ;;Total ram usage:       12 bytes
 15438 ;; Hardware stack levels used:    1
 15439 ;; Hardware stack levels required when called:    1
 15440 ;; This function calls:
 15441 ;;		__i2c_acknowledge
 15442 ;;		__i2c_get
 15443 ;;		__i2c_not_acknowledge
 15444 ;;		__i2c_send
 15445 ;;		__i2c_start
 15446 ;;		__i2c_stop
 15447 ;;		__i2c_wait_idle
 15448 ;; This function is called by:
 15449 ;;		_i2c_eeprom_readByte
 15450 ;;		_i2c_eeprom_read
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           	psect	text70
 15455  005D4A                     __ptext70:
 15456                           	opt stack 0
 15457  005D4A                     __i2c_read:
 15458                           	opt stack 27
 15459                           
 15460                           ;incstack = 0
 15461                           ;__i2c_read@slave_address stored from wreg
 15462  005D4A  6E10               	movwf	__i2c_read@slave_address,c
 15463                           
 15464                           ;i2c.c: 155: uint8_t cntr;;i2c.c: 157: _i2c_wait_idle();
 15465  005D4C  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 15466                           
 15467                           ;i2c.c: 158: _i2c_start();
 15468  005D50  EC42  F03D         	call	__i2c_start	;wreg free
 15469                           
 15470                           ;i2c.c: 159: _i2c_wait_idle();
 15471  005D54  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 15472                           
 15473                           ;i2c.c: 160: _i2c_send(slave_address | 0x01);
 15474  005D58  5010               	movf	__i2c_read@slave_address,w,c
 15475  005D5A  0901               	iorlw	1
 15476  005D5C  EC46  F03D         	call	__i2c_send
 15477                           
 15478                           ;i2c.c: 161: _i2c_wait_idle();
 15479  005D60  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 15480                           
 15481                           ;i2c.c: 163: for(cntr=0; cntr<length-1; ++cntr)
 15482  005D64  0E00               	movlw	0
 15483  005D66  6E11               	movwf	__i2c_read@cntr,c
 15484  005D68  D00E               	goto	l1138
 15485  005D6A                     
 15486                           ;i2c.c: 164: {;i2c.c: 165: data[cntr] = _i2c_get();
 15487  005D6A  5011               	movf	__i2c_read@cntr,w,c
 15488  005D6C  0D01               	mullw	1
 15489  005D6E  50F3               	movf	prodl,w,c
 15490  005D70  2406               	addwf	__i2c_read@data,w,c
 15491  005D72  6ED9               	movwf	fsr2l,c
 15492  005D74  50F4               	movf	prodh,w,c
 15493  005D76  2007               	addwfc	__i2c_read@data+1,w,c
 15494  005D78  6EDA               	movwf	fsr2h,c
 15495  005D7A  EC0C  F03D         	call	__i2c_get	;wreg free
 15496  005D7E  6EDF               	movwf	indf2,c
 15497                           
 15498                           ;i2c.c: 166: _i2c_acknowledge();
 15499  005D80  EC11  F03D         	call	__i2c_acknowledge	;wreg free
 15500  005D84  2A11               	incf	__i2c_read@cntr,f,c
 15501  005D86                     l1138:
 15502  005D86  0EFF               	movlw	255
 15503  005D88  6E09               	movwf	??__i2c_read& (0+255),c
 15504  005D8A  0EFF               	movlw	255
 15505  005D8C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 15506  005D8E  5008               	movf	__i2c_read@length,w,c
 15507  005D90  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 15508  005D92  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 15509  005D94  5009               	movf	??__i2c_read,w,c
 15510  005D96  260B               	addwf	??__i2c_read+2,f,c
 15511  005D98  500A               	movf	??__i2c_read+1,w,c
 15512  005D9A  220C               	addwfc	??__i2c_read+3,f,c
 15513  005D9C  5011               	movf	__i2c_read@cntr,w,c
 15514  005D9E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 15515  005DA0  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 15516  005DA2  500B               	movf	??__i2c_read+2,w,c
 15517  005DA4  5C0D               	subwf	??__i2c_read+4,w,c
 15518  005DA6  500E               	movf	??__i2c_read+5,w,c
 15519  005DA8  0A80               	xorlw	128
 15520  005DAA  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 15521  005DAC  500C               	movf	??__i2c_read+3,w,c
 15522  005DAE  0A80               	xorlw	128
 15523  005DB0  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 15524  005DB2  A0D8               	btfss	status,0,c
 15525  005DB4  D7DA               	goto	l1139
 15526                           
 15527                           ;i2c.c: 167: };i2c.c: 168: data[cntr] = _i2c_get();
 15528  005DB6  5011               	movf	__i2c_read@cntr,w,c
 15529  005DB8  0D01               	mullw	1
 15530  005DBA  50F3               	movf	prodl,w,c
 15531  005DBC  2406               	addwf	__i2c_read@data,w,c
 15532  005DBE  6ED9               	movwf	fsr2l,c
 15533  005DC0  50F4               	movf	prodh,w,c
 15534  005DC2  2007               	addwfc	__i2c_read@data+1,w,c
 15535  005DC4  6EDA               	movwf	fsr2h,c
 15536  005DC6  EC0C  F03D         	call	__i2c_get	;wreg free
 15537  005DCA  6EDF               	movwf	indf2,c
 15538                           
 15539                           ;i2c.c: 169: _i2c_not_acknowledge();
 15540  005DCC  EC07  F03D         	call	__i2c_not_acknowledge	;wreg free
 15541                           
 15542                           ;i2c.c: 171: _i2c_stop();
 15543  005DD0  EC3E  F03D         	call	__i2c_stop	;wreg free
 15544  005DD4  0012               	return		;funcret
 15545  005DD6                     __end_of__i2c_read:
 15546                           	opt stack 0
 15547                           tblptru	equ	0xFF8
 15548                           tblptrh	equ	0xFF7
 15549                           tblptrl	equ	0xFF6
 15550                           tablat	equ	0xFF5
 15551                           prodh	equ	0xFF4
 15552                           prodl	equ	0xFF3
 15553                           intcon	equ	0xFF2
 15554                           intcon2	equ	0xFF1
 15555                           intcon3	equ	0xFF0
 15556                           postinc0	equ	0xFEE
 15557                           wreg	equ	0xFE8
 15558                           indf1	equ	0xFE7
 15559                           postdec1	equ	0xFE5
 15560                           plusw1	equ	0xFE3
 15561                           fsr1h	equ	0xFE2
 15562                           fsr1l	equ	0xFE1
 15563                           indf2	equ	0xFDF
 15564                           postinc2	equ	0xFDE
 15565                           postdec2	equ	0xFDD
 15566                           plusw2	equ	0xFDB
 15567                           fsr2h	equ	0xFDA
 15568                           fsr2l	equ	0xFD9
 15569                           status	equ	0xFD8
 15570                           
 15571 ;; *************** function __i2c_not_acknowledge *****************
 15572 ;; Defined at:
 15573 ;;		line 90 in file "i2c.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;		None
 15576 ;; Auto vars:     Size  Location     Type
 15577 ;;		None
 15578 ;; Return value:  Size  Location     Type
 15579 ;;                  1    wreg      void 
 15580 ;; Registers used:
 15581 ;;		None
 15582 ;; Tracked objects:
 15583 ;;		On entry : 0/0
 15584 ;;		On exit  : 0/0
 15585 ;;		Unchanged: 0/0
 15586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15591 ;;Total ram usage:        0 bytes
 15592 ;; Hardware stack levels used:    1
 15593 ;; This function calls:
 15594 ;;		Nothing
 15595 ;; This function is called by:
 15596 ;;		__i2c_read
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           	psect	text71
 15601  007A0E                     __ptext71:
 15602                           	opt stack 0
 15603  007A0E                     __i2c_not_acknowledge:
 15604                           	opt stack 27
 15605                           
 15606                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 15607                           
 15608                           ;incstack = 0
 15609  007A0E  8AC5               	bsf	4037,5,c	;volatile
 15610                           
 15611                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 15612  007A10  88C5               	bsf	4037,4,c	;volatile
 15613  007A12  A8C5               	btfss	4037,4,c	;volatile
 15614  007A14  0012               	return	
 15615  007A16  D7FD               	goto	l1113
 15616  007A18                     __end_of__i2c_not_acknowledge:
 15617                           	opt stack 0
 15618                           tblptru	equ	0xFF8
 15619                           tblptrh	equ	0xFF7
 15620                           tblptrl	equ	0xFF6
 15621                           tablat	equ	0xFF5
 15622                           prodh	equ	0xFF4
 15623                           prodl	equ	0xFF3
 15624                           intcon	equ	0xFF2
 15625                           intcon2	equ	0xFF1
 15626                           intcon3	equ	0xFF0
 15627                           postinc0	equ	0xFEE
 15628                           wreg	equ	0xFE8
 15629                           indf1	equ	0xFE7
 15630                           postdec1	equ	0xFE5
 15631                           plusw1	equ	0xFE3
 15632                           fsr1h	equ	0xFE2
 15633                           fsr1l	equ	0xFE1
 15634                           indf2	equ	0xFDF
 15635                           postinc2	equ	0xFDE
 15636                           postdec2	equ	0xFDD
 15637                           plusw2	equ	0xFDB
 15638                           fsr2h	equ	0xFDA
 15639                           fsr2l	equ	0xFD9
 15640                           status	equ	0xFD8
 15641                           
 15642 ;; *************** function __i2c_get *****************
 15643 ;; Defined at:
 15644 ;;		line 67 in file "i2c.c"
 15645 ;; Parameters:    Size  Location     Type
 15646 ;;		None
 15647 ;; Auto vars:     Size  Location     Type
 15648 ;;		None
 15649 ;; Return value:  Size  Location     Type
 15650 ;;                  1    wreg      unsigned char 
 15651 ;; Registers used:
 15652 ;;		wreg, status,2
 15653 ;; Tracked objects:
 15654 ;;		On entry : 0/0
 15655 ;;		On exit  : 0/0
 15656 ;;		Unchanged: 0/0
 15657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15662 ;;Total ram usage:        0 bytes
 15663 ;; Hardware stack levels used:    1
 15664 ;; This function calls:
 15665 ;;		Nothing
 15666 ;; This function is called by:
 15667 ;;		__i2c_read
 15668 ;; This function uses a non-reentrant model
 15669 ;;
 15670                           
 15671                           	psect	text72
 15672  007A18                     __ptext72:
 15673                           	opt stack 0
 15674  007A18                     __i2c_get:
 15675                           	opt stack 27
 15676                           
 15677                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 15678                           
 15679                           ;incstack = 0
 15680  007A18  86C5               	bsf	4037,3,c	;volatile
 15681  007A1A  B6C5               	btfsc	4037,3,c	;volatile
 15682  007A1C  D7FE               	goto	l1095
 15683                           
 15684                           ;i2c.c: 71: return SSP1BUF;
 15685  007A1E  50C9               	movf	4041,w,c	;volatile
 15686  007A20  0012               	return	
 15687  007A22                     __end_of__i2c_get:
 15688                           	opt stack 0
 15689                           tblptru	equ	0xFF8
 15690                           tblptrh	equ	0xFF7
 15691                           tblptrl	equ	0xFF6
 15692                           tablat	equ	0xFF5
 15693                           prodh	equ	0xFF4
 15694                           prodl	equ	0xFF3
 15695                           intcon	equ	0xFF2
 15696                           intcon2	equ	0xFF1
 15697                           intcon3	equ	0xFF0
 15698                           postinc0	equ	0xFEE
 15699                           wreg	equ	0xFE8
 15700                           indf1	equ	0xFE7
 15701                           postdec1	equ	0xFE5
 15702                           plusw1	equ	0xFE3
 15703                           fsr1h	equ	0xFE2
 15704                           fsr1l	equ	0xFE1
 15705                           indf2	equ	0xFDF
 15706                           postinc2	equ	0xFDE
 15707                           postdec2	equ	0xFDD
 15708                           plusw2	equ	0xFDB
 15709                           fsr2h	equ	0xFDA
 15710                           fsr2l	equ	0xFD9
 15711                           status	equ	0xFD8
 15712                           
 15713 ;; *************** function __i2c_acknowledge *****************
 15714 ;; Defined at:
 15715 ;;		line 82 in file "i2c.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;		None
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;		None
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  1    wreg      void 
 15722 ;; Registers used:
 15723 ;;		None
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/0
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15733 ;;Total ram usage:        0 bytes
 15734 ;; Hardware stack levels used:    1
 15735 ;; This function calls:
 15736 ;;		Nothing
 15737 ;; This function is called by:
 15738 ;;		__i2c_read
 15739 ;; This function uses a non-reentrant model
 15740 ;;
 15741                           
 15742                           	psect	text73
 15743  007A22                     __ptext73:
 15744                           	opt stack 0
 15745  007A22                     __i2c_acknowledge:
 15746                           	opt stack 27
 15747                           
 15748                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 15749                           
 15750                           ;incstack = 0
 15751  007A22  9AC5               	bcf	4037,5,c	;volatile
 15752                           
 15753                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 15754  007A24  88C5               	bsf	4037,4,c	;volatile
 15755  007A26  A8C5               	btfss	4037,4,c	;volatile
 15756  007A28  0012               	return	
 15757  007A2A  D7FD               	goto	l1107
 15758  007A2C                     __end_of__i2c_acknowledge:
 15759                           	opt stack 0
 15760                           tblptru	equ	0xFF8
 15761                           tblptrh	equ	0xFF7
 15762                           tblptrl	equ	0xFF6
 15763                           tablat	equ	0xFF5
 15764                           prodh	equ	0xFF4
 15765                           prodl	equ	0xFF3
 15766                           intcon	equ	0xFF2
 15767                           intcon2	equ	0xFF1
 15768                           intcon3	equ	0xFF0
 15769                           postinc0	equ	0xFEE
 15770                           wreg	equ	0xFE8
 15771                           indf1	equ	0xFE7
 15772                           postdec1	equ	0xFE5
 15773                           plusw1	equ	0xFE3
 15774                           fsr1h	equ	0xFE2
 15775                           fsr1l	equ	0xFE1
 15776                           indf2	equ	0xFDF
 15777                           postinc2	equ	0xFDE
 15778                           postdec2	equ	0xFDD
 15779                           plusw2	equ	0xFDB
 15780                           fsr2h	equ	0xFDA
 15781                           fsr2l	equ	0xFD9
 15782                           status	equ	0xFD8
 15783                           
 15784 ;; *************** function _USBDeviceTasks *****************
 15785 ;; Defined at:
 15786 ;;		line 477 in file "usb_device.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;		None
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;  i               1   31[COMRAM] unsigned char 
 15791 ;; Return value:  Size  Location     Type
 15792 ;;                  1    wreg      void 
 15793 ;; Registers used:
 15794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15804 ;;Total ram usage:        1 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    8
 15807 ;; This function calls:
 15808 ;;		_USBCtrlEPAllowStatusStage
 15809 ;;		_USBCtrlEPService
 15810 ;;		_USBDeviceInit
 15811 ;;		_USBIncrement1msInternalTimers
 15812 ;;		_USBStallHandler
 15813 ;;		_USBSuspend
 15814 ;;		_USBWakeFromSuspend
 15815 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15816 ;; This function is called by:
 15817 ;;		_main
 15818 ;; This function uses a non-reentrant model
 15819 ;;
 15820                           
 15821                           	psect	text74
 15822  0031EE                     __ptext74:
 15823                           	opt stack 0
 15824  0031EE                     _USBDeviceTasks:
 15825                           	opt stack 22
 15826                           
 15827                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 15828                           
 15829                           ; BSR set to: 0
 15830                           
 15831                           ; BSR set to: 0
 15832                           ;usb_device.c: 543: return;
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 15836                           
 15837                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 15838                           
 15839                           ;usb_device.c: 511: UIE = 0;
 15840                           
 15841                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 15842                           
 15843                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 15844                           
 15845                           ;incstack = 0
 15846  0031EE  0100               	movlb	0	; () banked
 15847  0031F0  51B7               	movf	_USBDeviceState& (0+255),w,b
 15848  0031F2  A4D8               	btfss	status,2,c
 15849  0031F4  D012               	goto	l150
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 15853  0031F6  0E00               	movlw	0
 15854  0031F8  6E65               	movwf	3941,c	;volatile
 15855                           
 15856                           ;usb_device.c: 572: UIE = 0;
 15857  0031FA  0E00               	movlw	0
 15858  0031FC  010F               	movlb	15	; () banked
 15859  0031FE  6F36               	movwf	54,b	;volatile
 15860                           
 15861                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15862  003200  0E16               	movlw	22
 15863  003202  6F39               	movwf	57,b	;volatile
 15864  003204  0E9F               	movlw	159
 15865  003206  6F37               	movwf	55,b	;volatile
 15866  003208  0E7B               	movlw	123
 15867  00320A  6F36               	movwf	54,b	;volatile
 15868                           
 15869                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15870  00320C  D001               	goto	l151
 15871  00320E                     l152:
 15872  00320E  8665               	bsf	3941,3,c	;volatile
 15873  003210                     l151:
 15874  003210  A665               	btfss	3941,3,c	;volatile
 15875  003212  D7FD               	goto	l152
 15876                           
 15877                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 15878  003214  0E01               	movlw	1
 15879  003216  0100               	movlb	0	; () banked
 15880  003218  6FB7               	movwf	_USBDeviceState& (0+255),b
 15881  00321A                     l150:
 15882                           
 15883                           ; BSR set to: 0
 15884                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 15885                           
 15886                           ; BSR set to: 0
 15887  00321A  05B7               	decf	_USBDeviceState& (0+255),w,b
 15888  00321C  B4D8               	btfsc	status,2,c
 15889                           
 15890                           ; BSR set to: 0
 15891                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 15892  00321E  BA65               	btfsc	3941,5,c	;volatile
 15893  003220  D00A               	goto	l155
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 15897  003222  0E00               	movlw	0
 15898  003224  6E62               	movwf	3938,c	;volatile
 15899                           
 15900                           ;usb_device.c: 612: UIE=0;
 15901  003226  0E00               	movlw	0
 15902  003228  010F               	movlb	15	; () banked
 15903  00322A  6F36               	movwf	54,b	;volatile
 15904                           
 15905                           ; BSR set to: 15
 15906                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 15907  00322C  8136               	bsf	54,0,b	;volatile
 15908                           
 15909                           ; BSR set to: 15
 15910                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 15911  00322E  8936               	bsf	54,4,b	;volatile
 15912                           
 15913                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 15914  003230  0E02               	movlw	2
 15915  003232  0100               	movlb	0	; () banked
 15916  003234  6FB7               	movwf	_USBDeviceState& (0+255),b
 15917  003236                     l155:
 15918                           
 15919                           ; BSR set to: 0
 15920                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 15921                           
 15922                           ; BSR set to: 0
 15923                           
 15924                           ; BSR set to: 0
 15925  003236  A462               	btfss	3938,2,c	;volatile
 15926  003238  D006               	goto	l156
 15927                           
 15928                           ; BSR set to: 0
 15929  00323A  010F               	movlb	15	; () banked
 15930  00323C  A536               	btfss	54,2,b	;volatile
 15931  00323E  D003               	goto	l156
 15932                           
 15933                           ; BSR set to: 15
 15934                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 15935  003240  9462               	bcf	3938,2,c	;volatile
 15936                           
 15937                           ; BSR set to: 15
 15938                           ;usb_device.c: 640: USBWakeFromSuspend();
 15939  003242  ECEF  F039         	call	_USBWakeFromSuspend	;wreg free
 15940  003246                     l156:
 15941                           
 15942                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 15943  003246  A265               	btfss	3941,1,c	;volatile
 15944  003248  D002               	goto	l157
 15945                           
 15946                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 15947  00324A  98A1               	bcf	4001,4,c	;volatile
 15948                           
 15949                           ;usb_device.c: 650: return;
 15950  00324C  0012               	return	
 15951  00324E                     l157:
 15952                           
 15953                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 15954  00324E  A062               	btfss	3938,0,c	;volatile
 15955  003250  D009               	goto	l158
 15956  003252  010F               	movlb	15	; () banked
 15957  003254  A136               	btfss	54,0,b	;volatile
 15958  003256  D006               	goto	l158
 15959                           
 15960                           ; BSR set to: 15
 15961                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 15962  003258  ECD9  F01B         	call	_USBDeviceInit	;wreg free
 15963                           
 15964                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 15965  00325C  0E04               	movlw	4
 15966  00325E  0100               	movlb	0	; () banked
 15967  003260  6FB7               	movwf	_USBDeviceState& (0+255),b
 15968                           
 15969                           ; BSR set to: 0
 15970                           ;usb_device.c: 681: (UIR &= 0xFE);
 15971  003262  9062               	bcf	3938,0,c	;volatile
 15972  003264                     l158:
 15973                           
 15974                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 15975                           
 15976                           ; BSR set to: 0
 15977  003264  A862               	btfss	3938,4,c	;volatile
 15978  003266  D004               	goto	l159
 15979  003268  010F               	movlb	15	; () banked
 15980  00326A  B936               	btfsc	54,4,b	;volatile
 15981                           
 15982                           ; BSR set to: 15
 15983                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 15984  00326C  ECBE  F03A         	call	_USBSuspend	;wreg free
 15985  003270                     l159:
 15986                           
 15987                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 15988  003270  AC62               	btfss	3938,6,c	;volatile
 15989  003272  D01C               	goto	l163
 15990                           
 15991                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 15992  003274  010F               	movlb	15	; () banked
 15993  003276  AD36               	btfss	54,6,b	;volatile
 15994  003278  D00E               	goto	l161
 15995                           
 15996                           ; BSR set to: 15
 15997                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15998  00327A  0E00               	movlw	0
 15999  00327C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16000  00327E  0E73               	movlw	115
 16001  003280  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16002  003282  0E00               	movlw	0
 16003  003284  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16004  003286  0E00               	movlw	0
 16005  003288  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16006  00328A  0E00               	movlw	0
 16007  00328C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16008  00328E  0E01               	movlw	1
 16009  003290  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16010  003292  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16011  003296                     l161:
 16012                           
 16013                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 16014  003296  9C62               	bcf	3938,6,c	;volatile
 16015                           
 16016                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 16017  003298  EC27  F03C         	call	_USBIncrement1msInternalTimers	;wreg free
 16018                           
 16019                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 16020  00329C  0100               	movlb	0	; () banked
 16021  00329E  51B0               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16022  0032A0  A4D8               	btfss	status,2,c
 16023                           
 16024                           ; BSR set to: 0
 16025                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 16026  0032A2  07B0               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 16027                           
 16028                           ; BSR set to: 0
 16029                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 16030                           
 16031                           ; BSR set to: 0
 16032  0032A4  51B0               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16033  0032A6  B4D8               	btfsc	status,2,c
 16034                           
 16035                           ; BSR set to: 0
 16036                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 16037  0032A8  EC9A  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16038  0032AC                     l163:
 16039                           
 16040                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 16041  0032AC  AA62               	btfss	3938,5,c	;volatile
 16042  0032AE  D004               	goto	l164
 16043  0032B0  010F               	movlb	15	; () banked
 16044  0032B2  BB36               	btfsc	54,5,b	;volatile
 16045                           
 16046                           ; BSR set to: 15
 16047                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 16048  0032B4  ECB5  F038         	call	_USBStallHandler	;wreg free
 16049  0032B8                     l164:
 16050                           
 16051                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 16052  0032B8  A262               	btfss	3938,1,c	;volatile
 16053  0032BA  D012               	goto	l165
 16054  0032BC  010F               	movlb	15	; () banked
 16055  0032BE  A336               	btfss	54,1,b	;volatile
 16056  0032C0  D00F               	goto	l165
 16057                           
 16058                           ; BSR set to: 15
 16059                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 16060  0032C2  0E7F               	movlw	127
 16061  0032C4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16062  0032C6  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16063  0032C8  0E00               	movlw	0
 16064  0032CA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16065  0032CC  0E00               	movlw	0
 16066  0032CE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16067  0032D0  0E00               	movlw	0
 16068  0032D2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16069  0032D4  0E01               	movlw	1
 16070  0032D6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16071  0032D8  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16072                           
 16073                           ;usb_device.c: 759: {UEIR = 0;};
 16074  0032DC  0E00               	movlw	0
 16075  0032DE  6E63               	movwf	3939,c	;volatile
 16076  0032E0                     l165:
 16077                           
 16078                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16079  0032E0  0E04               	movlw	4
 16080  0032E2  0100               	movlb	0	; () banked
 16081  0032E4  61B7               	cpfslt	_USBDeviceState& (0+255),b
 16082  0032E6  D002               	goto	l166
 16083                           
 16084                           ; BSR set to: 0
 16085                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16086  0032E8  98A1               	bcf	4001,4,c	;volatile
 16087                           
 16088                           ;usb_device.c: 777: return;
 16089  0032EA  0012               	return	
 16090  0032EC                     l166:
 16091                           
 16092                           ; BSR set to: 0
 16093                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 16094  0032EC  010F               	movlb	15	; () banked
 16095  0032EE  A736               	btfss	54,3,b	;volatile
 16096  0032F0  D03C               	goto	u11210
 16097                           
 16098                           ; BSR set to: 15
 16099                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16100  0032F2  0E00               	movlw	0
 16101  0032F4  6E20               	movwf	USBDeviceTasks@i,c
 16102  0032F6                     l13711:
 16103                           
 16104                           ; BSR set to: 15
 16105  0032F6  0E03               	movlw	3
 16106  0032F8  6420               	cpfsgt	USBDeviceTasks@i,c
 16107  0032FA  D001               	goto	l168
 16108  0032FC  D036               	goto	u11210
 16109  0032FE                     l168:
 16110                           
 16111                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 16112  0032FE  A662               	btfss	3938,3,c	;volatile
 16113  003300  D034               	goto	u11210
 16114                           
 16115                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 16116  003302  CF64 F0BC          	movff	3940,_USTATcopy	;volatile
 16117                           
 16118                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16119  003306  0100               	movlb	0	; () banked
 16120  003308  31BC               	rrcf	_USTATcopy& (0+255),w,b
 16121  00330A  32E8               	rrcf	wreg,f,c
 16122  00330C  32E8               	rrcf	wreg,f,c
 16123  00330E  0B0F               	andlw	15
 16124  003310  6FB2               	movwf	_endpoint_number& (0+255),b
 16125                           
 16126                           ; BSR set to: 0
 16127                           ;usb_device.c: 793: (UIR &= 0xF7);
 16128  003312  9662               	bcf	3938,3,c	;volatile
 16129                           
 16130                           ; BSR set to: 0
 16131                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 16132  003314  B5BC               	btfsc	_USTATcopy& (0+255),2,b
 16133  003316  D007               	goto	l171
 16134                           
 16135                           ; BSR set to: 0
 16136                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 16137  003318  51B2               	movf	_endpoint_number& (0+255),w,b
 16138  00331A  0D01               	mullw	1
 16139  00331C  0E58               	movlw	low _ep_data_out
 16140  00331E  24F3               	addwf	prodl,w,c
 16141  003320  6ED9               	movwf	fsr2l,c
 16142  003322  0E01               	movlw	high _ep_data_out
 16143  003324  D007               	goto	L5
 16144  003326                     l171:
 16145                           
 16146                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 16147                           
 16148                           ; BSR set to: 1
 16149  003326  0100               	movlb	0	; () banked
 16150  003328  51B2               	movf	_endpoint_number& (0+255),w,b
 16151  00332A  0D01               	mullw	1
 16152  00332C  0E5B               	movlw	low _ep_data_in
 16153  00332E  24F3               	addwf	prodl,w,c
 16154  003330  6ED9               	movwf	fsr2l,c
 16155  003332  0E01               	movlw	high _ep_data_in
 16156  003334                     L5:
 16157  003334  20F4               	addwfc	prodh,w,c
 16158  003336  6EDA               	movwf	fsr2h,c
 16159  003338  0101               	movlb	1	; () banked
 16160  00333A  70DF               	btg	indf2,0,c
 16161                           
 16162                           ; BSR set to: 1
 16163                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 16164                           
 16165                           ; BSR set to: 1
 16166  00333C  0100               	movlb	0	; () banked
 16167  00333E  51B2               	movf	_endpoint_number& (0+255),w,b
 16168  003340  A4D8               	btfss	status,2,c
 16169  003342  D003               	goto	l173
 16170                           
 16171                           ; BSR set to: 0
 16172                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 16173  003344  EC78  F029         	call	_USBCtrlEPService	;wreg free
 16174                           
 16175                           ;usb_device.c: 813: }
 16176  003348  D00E               	goto	l175
 16177  00334A                     l173:
 16178                           
 16179                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 16180  00334A  0E00               	movlw	0
 16181  00334C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16182  00334E  0E72               	movlw	114
 16183  003350  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16184  003352  0EBC               	movlw	low _USTATcopy
 16185  003354  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16186  003356  0E00               	movlw	high _USTATcopy
 16187  003358  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16188  00335A  0E00               	movlw	0
 16189  00335C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16190  00335E  0E00               	movlw	0
 16191  003360  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16192  003362  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16193  003366                     l175:
 16194  003366  2A20               	incf	USBDeviceTasks@i,f,c
 16195  003368  D7C6               	goto	l13711
 16196  00336A                     u11210:
 16197                           
 16198                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 16199  00336A  98A1               	bcf	4001,4,c	;volatile
 16200  00336C  0012               	return		;funcret
 16201  00336E                     __end_of_USBDeviceTasks:
 16202                           	opt stack 0
 16203                           tblptru	equ	0xFF8
 16204                           tblptrh	equ	0xFF7
 16205                           tblptrl	equ	0xFF6
 16206                           tablat	equ	0xFF5
 16207                           prodh	equ	0xFF4
 16208                           prodl	equ	0xFF3
 16209                           intcon	equ	0xFF2
 16210                           intcon2	equ	0xFF1
 16211                           intcon3	equ	0xFF0
 16212                           postinc0	equ	0xFEE
 16213                           wreg	equ	0xFE8
 16214                           indf1	equ	0xFE7
 16215                           postdec1	equ	0xFE5
 16216                           plusw1	equ	0xFE3
 16217                           fsr1h	equ	0xFE2
 16218                           fsr1l	equ	0xFE1
 16219                           indf2	equ	0xFDF
 16220                           postinc2	equ	0xFDE
 16221                           postdec2	equ	0xFDD
 16222                           plusw2	equ	0xFDB
 16223                           fsr2h	equ	0xFDA
 16224                           fsr2l	equ	0xFD9
 16225                           status	equ	0xFD8
 16226                           
 16227 ;; *************** function _USBWakeFromSuspend *****************
 16228 ;; Defined at:
 16229 ;;		line 2305 in file "usb_device.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;		None
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  1    wreg      void 
 16236 ;; Registers used:
 16237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16247 ;;Total ram usage:        0 bytes
 16248 ;; Hardware stack levels used:    1
 16249 ;; Hardware stack levels required when called:    4
 16250 ;; This function calls:
 16251 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16252 ;; This function is called by:
 16253 ;;		_USBDeviceTasks
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text75
 16258  0073DE                     __ptext75:
 16259                           	opt stack 0
 16260  0073DE                     _USBWakeFromSuspend:
 16261                           	opt stack 25
 16262                           
 16263                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 16264                           
 16265                           ;incstack = 0
 16266  0073DE  0E00               	movlw	0
 16267  0073E0  0100               	movlb	0	; () banked
 16268  0073E2  6FB3               	movwf	_USBBusIsSuspended& (0+255),b
 16269                           
 16270                           ; BSR set to: 0
 16271                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16272  0073E4  0E00               	movlw	0
 16273  0073E6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16274  0073E8  0E74               	movlw	116
 16275  0073EA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16276  0073EC  0E00               	movlw	0
 16277  0073EE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16278  0073F0  0E00               	movlw	0
 16279  0073F2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16280  0073F4  0E00               	movlw	0
 16281  0073F6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16282  0073F8  0E00               	movlw	0
 16283  0073FA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16284  0073FC  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16285                           
 16286                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 16287  007400  9265               	bcf	3941,1,c	;volatile
 16288                           
 16289                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 16290  007402  010F               	movlb	15	; () banked
 16291  007404  9536               	bcf	54,2,b	;volatile
 16292                           
 16293                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 16294  007406  D001               	goto	l303
 16295  007408                     
 16296                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 16297                           
 16298                           ; BSR set to: 15
 16299  007408  9462               	bcf	3938,2,c	;volatile
 16300  00740A                     l303:
 16301  00740A  B462               	btfsc	3938,2,c	;volatile
 16302  00740C  D7FD               	goto	l304
 16303                           
 16304                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 16305  00740E  0E00               	movlw	0
 16306  007410  0100               	movlb	0	; () banked
 16307  007412  6FAA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16308                           
 16309                           ; BSR set to: 0
 16310  007414  0012               	return		;funcret
 16311  007416                     __end_of_USBWakeFromSuspend:
 16312                           	opt stack 0
 16313                           tblptru	equ	0xFF8
 16314                           tblptrh	equ	0xFF7
 16315                           tblptrl	equ	0xFF6
 16316                           tablat	equ	0xFF5
 16317                           prodh	equ	0xFF4
 16318                           prodl	equ	0xFF3
 16319                           intcon	equ	0xFF2
 16320                           intcon2	equ	0xFF1
 16321                           intcon3	equ	0xFF0
 16322                           postinc0	equ	0xFEE
 16323                           wreg	equ	0xFE8
 16324                           indf1	equ	0xFE7
 16325                           postdec1	equ	0xFE5
 16326                           plusw1	equ	0xFE3
 16327                           fsr1h	equ	0xFE2
 16328                           fsr1l	equ	0xFE1
 16329                           indf2	equ	0xFDF
 16330                           postinc2	equ	0xFDE
 16331                           postdec2	equ	0xFDD
 16332                           plusw2	equ	0xFDB
 16333                           fsr2h	equ	0xFDA
 16334                           fsr2l	equ	0xFD9
 16335                           status	equ	0xFD8
 16336                           
 16337 ;; *************** function _USBSuspend *****************
 16338 ;; Defined at:
 16339 ;;		line 2247 in file "usb_device.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;		None
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;		None
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  1    wreg      void 
 16346 ;; Registers used:
 16347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16357 ;;Total ram usage:        0 bytes
 16358 ;; Hardware stack levels used:    1
 16359 ;; Hardware stack levels required when called:    4
 16360 ;; This function calls:
 16361 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16362 ;; This function is called by:
 16363 ;;		_USBDeviceTasks
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text76
 16368  00757C                     __ptext76:
 16369                           	opt stack 0
 16370  00757C                     _USBSuspend:
 16371                           	opt stack 25
 16372                           
 16373                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 16374                           
 16375                           ; BSR set to: 0
 16376                           ;incstack = 0
 16377  00757C  010F               	movlb	15	; () banked
 16378  00757E  8536               	bsf	54,2,b	;volatile
 16379                           
 16380                           ; BSR set to: 15
 16381                           ;usb_device.c: 2273: (UIR &= 0xEF);
 16382  007580  9862               	bcf	3938,4,c	;volatile
 16383                           
 16384                           ; BSR set to: 15
 16385                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 16386  007582  8265               	bsf	3941,1,c	;volatile
 16387                           
 16388                           ; BSR set to: 15
 16389                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 16390  007584  0E01               	movlw	1
 16391  007586  0100               	movlb	0	; () banked
 16392  007588  6FB3               	movwf	_USBBusIsSuspended& (0+255),b
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 16396  00758A  0E00               	movlw	0
 16397  00758C  6FAA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16398                           
 16399                           ; BSR set to: 0
 16400                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16401  00758E  0E00               	movlw	0
 16402  007590  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16403  007592  0E75               	movlw	117
 16404  007594  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16405  007596  0E00               	movlw	0
 16406  007598  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16407  00759A  0E00               	movlw	0
 16408  00759C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16409  00759E  0E00               	movlw	0
 16410  0075A0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16411  0075A2  0E00               	movlw	0
 16412  0075A4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16413  0075A6  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16414  0075AA  0012               	return		;funcret
 16415  0075AC                     __end_of_USBSuspend:
 16416                           	opt stack 0
 16417                           tblptru	equ	0xFF8
 16418                           tblptrh	equ	0xFF7
 16419                           tblptrl	equ	0xFF6
 16420                           tablat	equ	0xFF5
 16421                           prodh	equ	0xFF4
 16422                           prodl	equ	0xFF3
 16423                           intcon	equ	0xFF2
 16424                           intcon2	equ	0xFF1
 16425                           intcon3	equ	0xFF0
 16426                           postinc0	equ	0xFEE
 16427                           wreg	equ	0xFE8
 16428                           indf1	equ	0xFE7
 16429                           postdec1	equ	0xFE5
 16430                           plusw1	equ	0xFE3
 16431                           fsr1h	equ	0xFE2
 16432                           fsr1l	equ	0xFE1
 16433                           indf2	equ	0xFDF
 16434                           postinc2	equ	0xFDE
 16435                           postdec2	equ	0xFDD
 16436                           plusw2	equ	0xFDB
 16437                           fsr2h	equ	0xFDA
 16438                           fsr2l	equ	0xFD9
 16439                           status	equ	0xFD8
 16440                           
 16441 ;; *************** function _USBStallHandler *****************
 16442 ;; Defined at:
 16443 ;;		line 2204 in file "usb_device.c"
 16444 ;; Parameters:    Size  Location     Type
 16445 ;;		None
 16446 ;; Auto vars:     Size  Location     Type
 16447 ;;		None
 16448 ;; Return value:  Size  Location     Type
 16449 ;;                  1    wreg      void 
 16450 ;; Registers used:
 16451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16452 ;; Tracked objects:
 16453 ;;		On entry : 0/0
 16454 ;;		On exit  : 0/0
 16455 ;;		Unchanged: 0/0
 16456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16461 ;;Total ram usage:        1 bytes
 16462 ;; Hardware stack levels used:    1
 16463 ;; This function calls:
 16464 ;;		Nothing
 16465 ;; This function is called by:
 16466 ;;		_USBDeviceTasks
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           	psect	text77
 16471  00716A                     __ptext77:
 16472                           	opt stack 0
 16473  00716A                     _USBStallHandler:
 16474                           	opt stack 29
 16475                           
 16476                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 16477                           
 16478                           ;incstack = 0
 16479  00716A  010F               	movlb	15	; () banked
 16480  00716C  A126               	btfss	38,0,b	;volatile
 16481  00716E  D01D               	goto	l295
 16482                           
 16483                           ; BSR set to: 15
 16484                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 16485  007170  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16486  007174  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16487  007178  0E80               	movlw	128
 16488  00717A  18DE               	xorwf	postinc2,w,c
 16489  00717C  A4D8               	btfss	status,2,c
 16490  00717E  D014               	goto	l296
 16491                           
 16492                           ; BSR set to: 15
 16493  007180  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 16494  007184  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16495  007188  0E84               	movlw	132
 16496  00718A  18DE               	xorwf	postinc2,w,c
 16497  00718C  A4D8               	btfss	status,2,c
 16498  00718E  D00C               	goto	l296
 16499                           
 16500                           ; BSR set to: 15
 16501                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 16502  007190  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16503  007194  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16504  007198  0E0C               	movlw	12
 16505  00719A  6EDF               	movwf	indf2,c
 16506                           
 16507                           ; BSR set to: 15
 16508                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16509  00719C  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16510  0071A0  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16511  0071A4  0E00               	movlw	0
 16512  0071A6  8EDB               	bsf	plusw2,7,c
 16513  0071A8                     l296:
 16514                           
 16515                           ; BSR set to: 15
 16516                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 16517                           
 16518                           ; BSR set to: 15
 16519  0071A8  9126               	bcf	38,0,b	;volatile
 16520  0071AA                     l295:
 16521                           
 16522                           ; BSR set to: 15
 16523                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 16524  0071AA  9A62               	bcf	3938,5,c	;volatile
 16525                           
 16526                           ; BSR set to: 15
 16527  0071AC  0012               	return		;funcret
 16528  0071AE                     __end_of_USBStallHandler:
 16529                           	opt stack 0
 16530                           tblptru	equ	0xFF8
 16531                           tblptrh	equ	0xFF7
 16532                           tblptrl	equ	0xFF6
 16533                           tablat	equ	0xFF5
 16534                           prodh	equ	0xFF4
 16535                           prodl	equ	0xFF3
 16536                           intcon	equ	0xFF2
 16537                           intcon2	equ	0xFF1
 16538                           intcon3	equ	0xFF0
 16539                           postinc0	equ	0xFEE
 16540                           wreg	equ	0xFE8
 16541                           indf1	equ	0xFE7
 16542                           postdec1	equ	0xFE5
 16543                           plusw1	equ	0xFE3
 16544                           fsr1h	equ	0xFE2
 16545                           fsr1l	equ	0xFE1
 16546                           indf2	equ	0xFDF
 16547                           postinc2	equ	0xFDE
 16548                           postdec2	equ	0xFDD
 16549                           plusw2	equ	0xFDB
 16550                           fsr2h	equ	0xFDA
 16551                           fsr2l	equ	0xFD9
 16552                           status	equ	0xFD8
 16553                           
 16554 ;; *************** function _USBIncrement1msInternalTimers *****************
 16555 ;; Defined at:
 16556 ;;		line 3027 in file "usb_device.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;		None
 16559 ;; Auto vars:     Size  Location     Type
 16560 ;;		None
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  1    wreg      void 
 16563 ;; Registers used:
 16564 ;;		wreg, status,2, status,0
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16574 ;;Total ram usage:        0 bytes
 16575 ;; Hardware stack levels used:    1
 16576 ;; This function calls:
 16577 ;;		Nothing
 16578 ;; This function is called by:
 16579 ;;		_USBDeviceTasks
 16580 ;; This function uses a non-reentrant model
 16581 ;;
 16582                           
 16583                           	psect	text78
 16584  00784E                     __ptext78:
 16585                           	opt stack 0
 16586  00784E                     _USBIncrement1msInternalTimers:
 16587                           	opt stack 29
 16588                           
 16589                           ;usb_device.c: 3035: USB1msTickCount++;
 16590                           
 16591                           ; BSR set to: 15
 16592                           ;incstack = 0
 16593  00784E  0E01               	movlw	1
 16594  007850  0101               	movlb	1	; () banked
 16595  007852  2754               	addwf	_USB1msTickCount& (0+255),f,b
 16596  007854  0E00               	movlw	0
 16597  007856  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 16598  007858  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 16599  00785A  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 16600                           
 16601                           ; BSR set to: 1
 16602                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 16603  00785C  0100               	movlb	0	; () banked
 16604  00785E  51B3               	movf	_USBBusIsSuspended& (0+255),w,b
 16605  007860  A4D8               	btfss	status,2,c
 16606  007862  0012               	return	
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 16610  007864  2BAA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 16614  007866  51AA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 16615  007868  A4D8               	btfss	status,2,c
 16616  00786A  0012               	return	
 16617                           
 16618                           ; BSR set to: 0
 16619                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 16620  00786C  69AA               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 16621                           
 16622                           ; BSR set to: 0
 16623  00786E  0012               	return	
 16624  007870                     __end_of_USBIncrement1msInternalTimers:
 16625                           	opt stack 0
 16626                           tblptru	equ	0xFF8
 16627                           tblptrh	equ	0xFF7
 16628                           tblptrl	equ	0xFF6
 16629                           tablat	equ	0xFF5
 16630                           prodh	equ	0xFF4
 16631                           prodl	equ	0xFF3
 16632                           intcon	equ	0xFF2
 16633                           intcon2	equ	0xFF1
 16634                           intcon3	equ	0xFF0
 16635                           postinc0	equ	0xFEE
 16636                           wreg	equ	0xFE8
 16637                           indf1	equ	0xFE7
 16638                           postdec1	equ	0xFE5
 16639                           plusw1	equ	0xFE3
 16640                           fsr1h	equ	0xFE2
 16641                           fsr1l	equ	0xFE1
 16642                           indf2	equ	0xFDF
 16643                           postinc2	equ	0xFDE
 16644                           postdec2	equ	0xFDD
 16645                           plusw2	equ	0xFDB
 16646                           fsr2h	equ	0xFDA
 16647                           fsr2l	equ	0xFD9
 16648                           status	equ	0xFD8
 16649                           
 16650 ;; *************** function _USBDeviceInit *****************
 16651 ;; Defined at:
 16652 ;;		line 277 in file "usb_device.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;		None
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;  i               1    8[COMRAM] unsigned char 
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  1    wreg      void 
 16659 ;; Registers used:
 16660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16670 ;;Total ram usage:        1 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; Hardware stack levels required when called:    1
 16673 ;; This function calls:
 16674 ;;		_memset
 16675 ;; This function is called by:
 16676 ;;		_USBDeviceTasks
 16677 ;;		_main
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           	psect	text79
 16682  0037B2                     __ptext79:
 16683                           	opt stack 0
 16684  0037B2                     _USBDeviceInit:
 16685                           	opt stack 28
 16686                           
 16687                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;incstack = 0
 16691  0037B2  98A0               	bcf	4000,4,c	;volatile
 16692                           
 16693                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 16694  0037B4  0E00               	movlw	0
 16695  0037B6  6E63               	movwf	3939,c	;volatile
 16696                           
 16697                           ;usb_device.c: 291: {UIR = 0;};
 16698  0037B8  0E00               	movlw	0
 16699  0037BA  6E62               	movwf	3938,c	;volatile
 16700                           
 16701                           ;usb_device.c: 294: UEP0 = 0;
 16702  0037BC  0E00               	movlw	0
 16703  0037BE  010F               	movlb	15	; () banked
 16704  0037C0  6F26               	movwf	38,b	;volatile
 16705                           
 16706                           ; BSR set to: 15
 16707                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 16708  0037C2  0E27               	movlw	39
 16709  0037C4  6E01               	movwf	memset@p1,c
 16710  0037C6  0E0F               	movlw	15
 16711  0037C8  6E02               	movwf	memset@p1+1,c
 16712  0037CA  0E00               	movlw	0
 16713  0037CC  6E04               	movwf	memset@c+1,c
 16714  0037CE  0E00               	movlw	0
 16715  0037D0  6E03               	movwf	memset@c,c
 16716  0037D2  0E00               	movlw	0
 16717  0037D4  6E06               	movwf	memset@n+1,c
 16718  0037D6  0E02               	movlw	2
 16719  0037D8  6E05               	movwf	memset@n,c
 16720  0037DA  EC19  F03B         	call	_memset	;wreg free
 16721                           
 16722                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16723  0037DE  0E16               	movlw	22
 16724  0037E0  010F               	movlb	15	; () banked
 16725  0037E2  6F39               	movwf	57,b	;volatile
 16726                           
 16727                           ; BSR set to: 15
 16728  0037E4  0E9F               	movlw	159
 16729  0037E6  6F37               	movwf	55,b	;volatile
 16730                           
 16731                           ; BSR set to: 15
 16732  0037E8  0E7B               	movlw	123
 16733  0037EA  6F36               	movwf	54,b	;volatile
 16734                           
 16735                           ; BSR set to: 15
 16736                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 16737  0037EC  0E00               	movlw	0
 16738  0037EE  6E09               	movwf	USBDeviceInit@i,c
 16739  0037F0                     l12699:
 16740                           
 16741                           ; BSR set to: 15
 16742  0037F0  0E0B               	movlw	11
 16743  0037F2  6409               	cpfsgt	USBDeviceInit@i,c
 16744  0037F4  D001               	goto	l139
 16745  0037F6  D00E               	goto	u9950
 16746  0037F8                     l139:
 16747                           
 16748                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 16749                           
 16750                           ; BSR set to: 15
 16751  0037F8  5009               	movf	USBDeviceInit@i,w,c
 16752  0037FA  0D04               	mullw	4
 16753  0037FC  0E00               	movlw	0
 16754  0037FE  24F3               	addwf	prodl,w,c
 16755  003800  6ED9               	movwf	fsr2l,c
 16756  003802  0E0D               	movlw	13
 16757  003804  20F4               	addwfc	prodh,w,c
 16758  003806  6EDA               	movwf	fsr2h,c
 16759  003808  6ADE               	clrf	postinc2,c
 16760  00380A  6ADE               	clrf	postinc2,c
 16761  00380C  6ADE               	clrf	postinc2,c
 16762  00380E  6ADD               	clrf	postdec2,c
 16763  003810  2A09               	incf	USBDeviceInit@i,f,c
 16764  003812  D7EE               	goto	l12699
 16765  003814                     u9950:
 16766                           
 16767                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 16768  003814  8C65               	bsf	3941,6,c	;volatile
 16769                           
 16770                           ;usb_device.c: 316: UADDR = 0x00;
 16771  003816  0E00               	movlw	0
 16772  003818  010F               	movlb	15	; () banked
 16773  00381A  6F38               	movwf	56,b	;volatile
 16774                           
 16775                           ; BSR set to: 15
 16776                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 16777  00381C  9865               	bcf	3941,4,c	;volatile
 16778                           
 16779                           ; BSR set to: 15
 16780                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 16781  00381E  9C65               	bcf	3941,6,c	;volatile
 16782  003820                     
 16783                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 16784                           
 16785                           ; BSR set to: 15
 16786  003820  9662               	bcf	3938,3,c	;volatile
 16787                           
 16788                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 16789  003822  0E00               	movlw	0
 16790  003824  0100               	movlb	0	; () banked
 16791  003826  6F69               	movwf	(_inPipes+3)& (0+255),b
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 16795  003828  0E00               	movlw	0
 16796  00382A  0101               	movlb	1	; () banked
 16797  00382C  6F34               	movwf	(_outPipes+3)& (0+255),b
 16798                           
 16799                           ; BSR set to: 1
 16800                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 16801  00382E  0E00               	movlw	0
 16802  003830  6F36               	movwf	(_outPipes+5)& (0+255),b
 16803  003832  0E00               	movlw	0
 16804  003834  6F35               	movwf	(_outPipes+4)& (0+255),b
 16805                           
 16806                           ; BSR set to: 1
 16807                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 16808  003836  B662               	btfsc	3938,3,c	;volatile
 16809  003838  D7F3               	goto	l141
 16810                           
 16811                           ; BSR set to: 1
 16812                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 16813                           
 16814                           ; BSR set to: 1
 16815  00383A  0E01               	movlw	1
 16816  00383C  0100               	movlb	0	; () banked
 16817  00383E  6FAE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16818                           
 16819                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 16820  003840  0E01               	movlw	1
 16821  003842  6FAD               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16822                           
 16823                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 16824  003844  0E00               	movlw	0
 16825  003846  6FAC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16826                           
 16827                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 16828  003848  0E00               	movlw	0
 16829  00384A  6FAB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16830                           
 16831                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 16832  00384C  0E00               	movlw	0
 16833  00384E  6FB3               	movwf	_USBBusIsSuspended& (0+255),b
 16834                           
 16835                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 16836  003850  0E00               	movlw	0
 16837  003852  6E09               	movwf	USBDeviceInit@i,c
 16838  003854                     l12727:
 16839                           
 16840                           ; BSR set to: 0
 16841  003854  0E02               	movlw	2
 16842  003856  6409               	cpfsgt	USBDeviceInit@i,c
 16843  003858  D001               	goto	l143
 16844  00385A  D02E               	goto	u9980
 16845  00385C                     l143:
 16846                           
 16847                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 16848                           
 16849                           ; BSR set to: 0
 16850  00385C  5009               	movf	USBDeviceInit@i,w,c
 16851  00385E  0D02               	mullw	2
 16852  003860  0E6C               	movlw	low _pBDTEntryIn
 16853  003862  24F3               	addwf	prodl,w,c
 16854  003864  6ED9               	movwf	fsr2l,c
 16855  003866  0E00               	movlw	high _pBDTEntryIn
 16856  003868  20F4               	addwfc	prodh,w,c
 16857  00386A  6EDA               	movwf	fsr2h,c
 16858  00386C  0E00               	movlw	0
 16859  00386E  6EDE               	movwf	postinc2,c
 16860  003870  0E00               	movlw	0
 16861  003872  6EDD               	movwf	postdec2,c
 16862                           
 16863                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 16864  003874  5009               	movf	USBDeviceInit@i,w,c
 16865  003876  0D02               	mullw	2
 16866  003878  0E72               	movlw	low _pBDTEntryOut
 16867  00387A  24F3               	addwf	prodl,w,c
 16868  00387C  6ED9               	movwf	fsr2l,c
 16869  00387E  0E00               	movlw	high _pBDTEntryOut
 16870  003880  20F4               	addwfc	prodh,w,c
 16871  003882  6EDA               	movwf	fsr2h,c
 16872  003884  0E00               	movlw	0
 16873  003886  6EDE               	movwf	postinc2,c
 16874  003888  0E00               	movlw	0
 16875  00388A  6EDD               	movwf	postdec2,c
 16876                           
 16877                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 16878  00388C  5009               	movf	USBDeviceInit@i,w,c
 16879  00388E  0D01               	mullw	1
 16880  003890  0E5B               	movlw	low _ep_data_in
 16881  003892  24F3               	addwf	prodl,w,c
 16882  003894  6ED9               	movwf	fsr2l,c
 16883  003896  0E01               	movlw	high _ep_data_in
 16884  003898  20F4               	addwfc	prodh,w,c
 16885  00389A  6EDA               	movwf	fsr2h,c
 16886  00389C  0E00               	movlw	0
 16887  00389E  6EDF               	movwf	indf2,c
 16888                           
 16889                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 16890  0038A0  5009               	movf	USBDeviceInit@i,w,c
 16891  0038A2  0D01               	mullw	1
 16892  0038A4  0E58               	movlw	low _ep_data_out
 16893  0038A6  24F3               	addwf	prodl,w,c
 16894  0038A8  6ED9               	movwf	fsr2l,c
 16895  0038AA  0E01               	movlw	high _ep_data_out
 16896  0038AC  20F4               	addwfc	prodh,w,c
 16897  0038AE  6EDA               	movwf	fsr2h,c
 16898  0038B0  0E00               	movlw	0
 16899  0038B2  6EDF               	movwf	indf2,c
 16900  0038B4  2A09               	incf	USBDeviceInit@i,f,c
 16901  0038B6  D7CE               	goto	l12727
 16902  0038B8                     u9980:
 16903                           
 16904                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16905  0038B8  0E08               	movlw	8
 16906  0038BA  0100               	movlb	0	; () banked
 16907  0038BC  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 16908  0038BE  0E0D               	movlw	13
 16909  0038C0  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 16913  0038C2  0E16               	movlw	22
 16914  0038C4  010F               	movlb	15	; () banked
 16915  0038C6  6F26               	movwf	38,b	;volatile
 16916                           
 16917                           ; BSR set to: 15
 16918                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16919  0038C8  0E0D               	movlw	13
 16920  0038CA  010D               	movlb	13	; () banked
 16921  0038CC  6F03               	movwf	3,b	;volatile
 16922  0038CE  0E30               	movlw	48
 16923  0038D0  6F02               	movwf	2,b	;volatile
 16924                           
 16925                           ; BSR set to: 13
 16926                           ;usb_device.c: 359: BDT[0].CNT = 8;
 16927  0038D2  0E08               	movlw	8
 16928  0038D4  6F01               	movwf	1,b	;volatile
 16929                           
 16930                           ; BSR set to: 13
 16931                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 16932  0038D6  0E04               	movlw	4
 16933  0038D8  6F00               	movwf	0,b	;volatile
 16934                           
 16935                           ; BSR set to: 13
 16936                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 16937  0038DA  8F00               	bsf	0,7,b	;volatile
 16938                           
 16939                           ; BSR set to: 13
 16940                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 16941  0038DC  0E00               	movlw	0
 16942  0038DE  0100               	movlb	0	; () banked
 16943  0038E0  6FBD               	movwf	_USBActiveConfiguration& (0+255),b
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;usb_device.c: 366: USB1msTickCount = 0;
 16947  0038E2  0E00               	movlw	0
 16948  0038E4  0101               	movlb	1	; () banked
 16949  0038E6  6F54               	movwf	_USB1msTickCount& (0+255),b
 16950  0038E8  0E00               	movlw	0
 16951  0038EA  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 16952  0038EC  0E00               	movlw	0
 16953  0038EE  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 16954  0038F0  0E00               	movlw	0
 16955  0038F2  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 16956                           
 16957                           ; BSR set to: 1
 16958                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 16959  0038F4  0E00               	movlw	0
 16960  0038F6  0100               	movlb	0	; () banked
 16961  0038F8  6FAA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 16965  0038FA  0E00               	movlw	0
 16966  0038FC  6FB7               	movwf	_USBDeviceState& (0+255),b
 16967                           
 16968                           ; BSR set to: 0
 16969  0038FE  0012               	return		;funcret
 16970  003900                     __end_of_USBDeviceInit:
 16971                           	opt stack 0
 16972                           tblptru	equ	0xFF8
 16973                           tblptrh	equ	0xFF7
 16974                           tblptrl	equ	0xFF6
 16975                           tablat	equ	0xFF5
 16976                           prodh	equ	0xFF4
 16977                           prodl	equ	0xFF3
 16978                           intcon	equ	0xFF2
 16979                           intcon2	equ	0xFF1
 16980                           intcon3	equ	0xFF0
 16981                           postinc0	equ	0xFEE
 16982                           wreg	equ	0xFE8
 16983                           indf1	equ	0xFE7
 16984                           postdec1	equ	0xFE5
 16985                           plusw1	equ	0xFE3
 16986                           fsr1h	equ	0xFE2
 16987                           fsr1l	equ	0xFE1
 16988                           indf2	equ	0xFDF
 16989                           postinc2	equ	0xFDE
 16990                           postdec2	equ	0xFDD
 16991                           plusw2	equ	0xFDB
 16992                           fsr2h	equ	0xFDA
 16993                           fsr2l	equ	0xFD9
 16994                           status	equ	0xFD8
 16995                           
 16996 ;; *************** function _USBCtrlEPService *****************
 16997 ;; Defined at:
 16998 ;;		line 2374 in file "usb_device.c"
 16999 ;; Parameters:    Size  Location     Type
 17000 ;;		None
 17001 ;; Auto vars:     Size  Location     Type
 17002 ;;		None
 17003 ;; Return value:  Size  Location     Type
 17004 ;;                  1    wreg      void 
 17005 ;; Registers used:
 17006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17007 ;; Tracked objects:
 17008 ;;		On entry : 0/0
 17009 ;;		On exit  : 0/0
 17010 ;;		Unchanged: 0/0
 17011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17016 ;;Total ram usage:        2 bytes
 17017 ;; Hardware stack levels used:    1
 17018 ;; Hardware stack levels required when called:    7
 17019 ;; This function calls:
 17020 ;;		_USBCtrlTrfInHandler
 17021 ;;		_USBCtrlTrfOutHandler
 17022 ;;		_USBCtrlTrfSetupHandler
 17023 ;;		_memcpy
 17024 ;; This function is called by:
 17025 ;;		_USBDeviceTasks
 17026 ;; This function uses a non-reentrant model
 17027 ;;
 17028                           
 17029                           	psect	text80
 17030  0052F0                     __ptext80:
 17031                           	opt stack 0
 17032  0052F0                     _USBCtrlEPService:
 17033                           	opt stack 22
 17034                           
 17035                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;incstack = 0
 17039  0052F0  0E2D               	movlw	45
 17040  0052F2  0100               	movlb	0	; () banked
 17041  0052F4  6FB0               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 17045  0052F6  C0BC  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17046  0052FA  0EFD               	movlw	253
 17047  0052FC  161E               	andwf	??_USBCtrlEPService,f,c
 17048  0052FE  A4D8               	btfss	status,2,c
 17049  005300  D044               	goto	l309
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 17053  005302  C0BC  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17054  005306  90D8               	bcf	status,0,c
 17055  005308  321E               	rrcf	??_USBCtrlEPService,f,c
 17056  00530A  0E3F               	movlw	63
 17057  00530C  161E               	andwf	??_USBCtrlEPService,f,c
 17058  00530E  501E               	movf	??_USBCtrlEPService,w,c
 17059  005310  0D04               	mullw	4
 17060  005312  0E00               	movlw	0
 17061  005314  24F3               	addwf	prodl,w,c
 17062  005316  6F98               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 17063  005318  0E0D               	movlw	13
 17064  00531A  20F4               	addwfc	prodh,w,c
 17065  00531C  6F99               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17069  00531E  C098  F096         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17070  005322  C099  F097         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17074  005326  0E04               	movlw	4
 17075  005328  1996               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 17076  00532A  6F96               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 17077  00532C  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17078  00532E  6F97               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 17079                           
 17080                           ; BSR set to: 0
 17081                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17082  005330  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17083  005334  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17084  005338  30DF               	rrcf	223,w,c
 17085  00533A  32E8               	rrcf	wreg,f,c
 17086  00533C  0B0F               	andlw	15
 17087  00533E  0A0D               	xorlw	13
 17088  005340  A4D8               	btfss	status,2,c
 17089  005342  D020               	goto	l310
 17090                           
 17091                           ; BSR set to: 0
 17092                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 17093  005344  0E30               	movlw	48
 17094  005346  6E01               	movwf	memcpy@d1,c
 17095  005348  0E0D               	movlw	13
 17096  00534A  6E02               	movwf	memcpy@d1+1,c
 17097  00534C  EE20 F002          	lfsr	2,2
 17098  005350  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17099  005352  26D9               	addwf	fsr2l,f,c
 17100  005354  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17101  005356  22DA               	addwfc	fsr2h,f,c
 17102  005358  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 17103  00535C  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 17104  005360  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 17105  005364  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 17106  005368  5003               	movf	memcpy@s1,w,c
 17107  00536A  1004               	iorwf	memcpy@s1+1,w,c
 17108  00536C  A4D8               	btfss	status,2,c
 17109  00536E  0E20               	movlw	32
 17110  005370  6E05               	movwf	memcpy@s1+2,c
 17111  005372  0E00               	movlw	0
 17112  005374  6E07               	movwf	memcpy@n+1,c
 17113  005376  0E08               	movlw	8
 17114  005378  6E06               	movwf	memcpy@n,c
 17115  00537A  EC26  F034         	call	_memcpy	;wreg free
 17116                           
 17117                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 17118  00537E  EC3C  F02D         	call	_USBCtrlTrfSetupHandler	;wreg free
 17119                           
 17120                           ;usb_device.c: 2411: }
 17121  005382  0012               	return	
 17122  005384                     l310:
 17123                           
 17124                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 17125  005384  EC1D  F035         	call	_USBCtrlTrfOutHandler	;wreg free
 17126                           
 17127                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 17128  005388  0012               	return	
 17129  00538A                     l309:
 17130                           
 17131                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 17132  00538A  0100               	movlb	0	; () banked
 17133  00538C  51BC               	movf	_USTATcopy& (0+255),w,b
 17134  00538E  0BFD               	andlw	253
 17135  005390  0A04               	xorlw	4
 17136  005392  A4D8               	btfss	status,2,c
 17137  005394  0012               	return	
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 17141  005396  ECD4  F026         	call	_USBCtrlTrfInHandler	;wreg free
 17142  00539A  0012               	return	
 17143  00539C                     __end_of_USBCtrlEPService:
 17144                           	opt stack 0
 17145                           tblptru	equ	0xFF8
 17146                           tblptrh	equ	0xFF7
 17147                           tblptrl	equ	0xFF6
 17148                           tablat	equ	0xFF5
 17149                           prodh	equ	0xFF4
 17150                           prodl	equ	0xFF3
 17151                           intcon	equ	0xFF2
 17152                           intcon2	equ	0xFF1
 17153                           intcon3	equ	0xFF0
 17154                           postinc0	equ	0xFEE
 17155                           wreg	equ	0xFE8
 17156                           indf1	equ	0xFE7
 17157                           postdec1	equ	0xFE5
 17158                           plusw1	equ	0xFE3
 17159                           fsr1h	equ	0xFE2
 17160                           fsr1l	equ	0xFE1
 17161                           indf2	equ	0xFDF
 17162                           postinc2	equ	0xFDE
 17163                           postdec2	equ	0xFDD
 17164                           plusw2	equ	0xFDB
 17165                           fsr2h	equ	0xFDA
 17166                           fsr2l	equ	0xFD9
 17167                           status	equ	0xFD8
 17168                           
 17169 ;; *************** function _USBCtrlTrfSetupHandler *****************
 17170 ;; Defined at:
 17171 ;;		line 2467 in file "usb_device.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;		None
 17174 ;; Auto vars:     Size  Location     Type
 17175 ;;		None
 17176 ;; Return value:  Size  Location     Type
 17177 ;;                  1    wreg      void 
 17178 ;; Registers used:
 17179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17180 ;; Tracked objects:
 17181 ;;		On entry : 0/0
 17182 ;;		On exit  : 0/0
 17183 ;;		Unchanged: 0/0
 17184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17189 ;;Total ram usage:        0 bytes
 17190 ;; Hardware stack levels used:    1
 17191 ;; Hardware stack levels required when called:    6
 17192 ;; This function calls:
 17193 ;;		_USBCheckStdRequest
 17194 ;;		_USBCtrlEPServiceComplete
 17195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17196 ;; This function is called by:
 17197 ;;		_USBCtrlEPService
 17198 ;; This function uses a non-reentrant model
 17199 ;;
 17200                           
 17201                           	psect	text81
 17202  005A78                     __ptext81:
 17203                           	opt stack 0
 17204  005A78                     _USBCtrlTrfSetupHandler:
 17205                           	opt stack 22
 17206                           
 17207                           ;usb_device.c: 2472: shortPacketStatus = 0;
 17208                           
 17209                           ;incstack = 0
 17210  005A78  0E00               	movlw	0
 17211  005A7A  0100               	movlb	0	; () banked
 17212  005A7C  6FB6               	movwf	_shortPacketStatus& (0+255),b
 17213                           
 17214                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 17215  005A7E  0E00               	movlw	0
 17216  005A80  6FAF               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 17217                           
 17218                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 17219  005A82  0E00               	movlw	0
 17220  005A84  6FAC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17221                           
 17222                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 17223  005A86  0E00               	movlw	0
 17224  005A88  6FAB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17225                           
 17226                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 17227  005A8A  0E00               	movlw	0
 17228  005A8C  6FB1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17229                           
 17230                           ;usb_device.c: 2477: controlTransferState = 0;
 17231  005A8E  0E00               	movlw	0
 17232  005A90  6FB5               	movwf	_controlTransferState& (0+255),b
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17236  005A92  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17237  005A96  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17238  005A9A  0E7F               	movlw	127
 17239  005A9C  16DF               	andwf	indf2,f,c
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17243  005A9E  0E04               	movlw	4
 17244  005AA0  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17245  005AA2  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17246  005AA4  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17247  005AA6  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17251  005AA8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17252  005AAC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17253  005AB0  0E7F               	movlw	127
 17254  005AB2  16DF               	andwf	indf2,f,c
 17255                           
 17256                           ; BSR set to: 0
 17257                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17258  005AB4  0E04               	movlw	4
 17259  005AB6  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17260  005AB8  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17261  005ABA  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17262  005ABC  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17263                           
 17264                           ; BSR set to: 0
 17265                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 17266  005ABE  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17267  005AC2  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17268  005AC6  0E7F               	movlw	127
 17269  005AC8  16DF               	andwf	indf2,f,c
 17270                           
 17271                           ; BSR set to: 0
 17272                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 17273  005ACA  0E00               	movlw	0
 17274  005ACC  6F69               	movwf	(_inPipes+3)& (0+255),b
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 17278  005ACE  0E00               	movlw	0
 17279  005AD0  6F6B               	movwf	(_inPipes+5)& (0+255),b
 17280  005AD2  0E00               	movlw	0
 17281  005AD4  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 17285  005AD6  0E00               	movlw	0
 17286  005AD8  0101               	movlb	1	; () banked
 17287  005ADA  6F34               	movwf	(_outPipes+3)& (0+255),b
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 17291  005ADC  0E00               	movlw	0
 17292  005ADE  6F36               	movwf	(_outPipes+5)& (0+255),b
 17293  005AE0  0E00               	movlw	0
 17294  005AE2  6F35               	movwf	(_outPipes+4)& (0+255),b
 17295                           
 17296                           ; BSR set to: 1
 17297                           ;usb_device.c: 2502: USBCheckStdRequest();
 17298  005AE4  ECCC  F021         	call	_USBCheckStdRequest	;wreg free
 17299                           
 17300                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 17301  005AE8  0E00               	movlw	0
 17302  005AEA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17303  005AEC  0E03               	movlw	3
 17304  005AEE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17305  005AF0  0E00               	movlw	0
 17306  005AF2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17307  005AF4  0E00               	movlw	0
 17308  005AF6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17309  005AF8  0E00               	movlw	0
 17310  005AFA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17311  005AFC  0E00               	movlw	0
 17312  005AFE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17313  005B00  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17314                           
 17315                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 17316  005B04  ECD3  F020         	call	_USBCtrlEPServiceComplete	;wreg free
 17317  005B08  0012               	return		;funcret
 17318  005B0A                     __end_of_USBCtrlTrfSetupHandler:
 17319                           	opt stack 0
 17320                           tblptru	equ	0xFF8
 17321                           tblptrh	equ	0xFF7
 17322                           tblptrl	equ	0xFF6
 17323                           tablat	equ	0xFF5
 17324                           prodh	equ	0xFF4
 17325                           prodl	equ	0xFF3
 17326                           intcon	equ	0xFF2
 17327                           intcon2	equ	0xFF1
 17328                           intcon3	equ	0xFF0
 17329                           postinc0	equ	0xFEE
 17330                           wreg	equ	0xFE8
 17331                           indf1	equ	0xFE7
 17332                           postdec1	equ	0xFE5
 17333                           plusw1	equ	0xFE3
 17334                           fsr1h	equ	0xFE2
 17335                           fsr1l	equ	0xFE1
 17336                           indf2	equ	0xFDF
 17337                           postinc2	equ	0xFDE
 17338                           postdec2	equ	0xFDD
 17339                           plusw2	equ	0xFDB
 17340                           fsr2h	equ	0xFDA
 17341                           fsr2l	equ	0xFD9
 17342                           status	equ	0xFD8
 17343                           
 17344 ;; *************** function _USBCtrlEPServiceComplete *****************
 17345 ;; Defined at:
 17346 ;;		line 1618 in file "usb_device.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;		None
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;		None
 17351 ;; Return value:  Size  Location     Type
 17352 ;;                  1    wreg      void 
 17353 ;; Registers used:
 17354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17355 ;; Tracked objects:
 17356 ;;		On entry : 0/0
 17357 ;;		On exit  : 0/0
 17358 ;;		Unchanged: 0/0
 17359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17364 ;;Total ram usage:        0 bytes
 17365 ;; Hardware stack levels used:    1
 17366 ;; Hardware stack levels required when called:    2
 17367 ;; This function calls:
 17368 ;;		_USBCtrlEPAllowDataStage
 17369 ;;		_USBCtrlEPAllowStatusStage
 17370 ;; This function is called by:
 17371 ;;		_USBCtrlTrfSetupHandler
 17372 ;; This function uses a non-reentrant model
 17373 ;;
 17374                           
 17375                           	psect	text82
 17376  0041A6                     __ptext82:
 17377                           	opt stack 0
 17378  0041A6                     _USBCtrlEPServiceComplete:
 17379                           	opt stack 25
 17380                           
 17381                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 17382                           
 17383                           ;incstack = 0
 17384  0041A6  9865               	bcf	3941,4,c	;volatile
 17385                           
 17386                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 17387  0041A8  0100               	movlb	0	; () banked
 17388  0041AA  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 17389  0041AC  D03C               	goto	l219
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 17393  0041AE  0101               	movlb	1	; () banked
 17394  0041B0  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 17395  0041B2  D00D               	goto	l220
 17396                           
 17397                           ; BSR set to: 1
 17398                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 17399  0041B4  0E02               	movlw	2
 17400  0041B6  0100               	movlb	0	; () banked
 17401  0041B8  6FB5               	movwf	_controlTransferState& (0+255),b
 17402                           
 17403                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 17404  0041BA  51AB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 17405  0041BC  B4D8               	btfsc	status,2,c
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 17409  0041BE  ECBA  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 17410                           
 17411                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 17412  0041C2  0E00               	movlw	0
 17413  0041C4  0100               	movlb	0	; () banked
 17414  0041C6  6FAD               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17415                           
 17416                           ; BSR set to: 0
 17417                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 17418  0041C8  0E00               	movlw	0
 17419  0041CA  6FAE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17420                           
 17421                           ;usb_device.c: 1654: }
 17422  0041CC  0012               	return	
 17423  0041CE                     l220:
 17424                           
 17425                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17426                           
 17427                           ; BSR set to: 0
 17428  0041CE  0100               	movlb	0	; () banked
 17429  0041D0  EE20 F001          	lfsr	2,1
 17430  0041D4  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17431  0041D6  26D9               	addwf	fsr2l,f,c
 17432  0041D8  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17433  0041DA  22DA               	addwfc	fsr2h,f,c
 17434  0041DC  0E08               	movlw	8
 17435  0041DE  6EDF               	movwf	indf2,c
 17436                           
 17437                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17438  0041E0  EE20 F002          	lfsr	2,2
 17439  0041E4  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17440  0041E6  26D9               	addwf	fsr2l,f,c
 17441  0041E8  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17442  0041EA  22DA               	addwfc	fsr2h,f,c
 17443  0041EC  0E30               	movlw	48
 17444  0041EE  6EDE               	movwf	postinc2,c
 17445  0041F0  0E0D               	movlw	13
 17446  0041F2  6EDD               	movwf	postdec2,c
 17447                           
 17448                           ; BSR set to: 0
 17449                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17450  0041F4  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17451  0041F8  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17452  0041FC  0E0C               	movlw	12
 17453  0041FE  6EDF               	movwf	indf2,c
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17457  004200  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17458  004204  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17459  004208  0E00               	movlw	0
 17460  00420A  8EDB               	bsf	plusw2,7,c
 17461                           
 17462                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 17463  00420C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17464  004210  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17465  004214  0E04               	movlw	4
 17466  004216  6EDF               	movwf	indf2,c
 17467                           
 17468                           ; BSR set to: 0
 17469                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17470  004218  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17471  00421C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17472  004220  0E00               	movlw	0
 17473  004222  8EDB               	bsf	plusw2,7,c
 17474                           
 17475                           ; BSR set to: 0
 17476                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 17477  004224  0012               	return	
 17478  004226                     l219:
 17479                           
 17480                           ; BSR set to: 0
 17481                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 17482  004226  010D               	movlb	13	; () banked
 17483  004228  AF30               	btfss	48,7,b	;volatile
 17484  00422A  D012               	goto	l224
 17485                           
 17486                           ; BSR set to: 13
 17487                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 17488  00422C  0E01               	movlw	1
 17489  00422E  0100               	movlb	0	; () banked
 17490  004230  6FB5               	movwf	_controlTransferState& (0+255),b
 17491                           
 17492                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 17493  004232  51AC               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17494  004234  B4D8               	btfsc	status,2,c
 17495                           
 17496                           ; BSR set to: 0
 17497                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 17498  004236  ECBA  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 17499                           
 17500                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 17501  00423A  0E00               	movlw	0
 17502  00423C  0100               	movlb	0	; () banked
 17503  00423E  6FAD               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 17507  004240  0E00               	movlw	0
 17508  004242  6FAE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17509                           
 17510                           ; BSR set to: 0
 17511                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 17512  004244  51AF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17513  004246  A4D8               	btfss	status,2,c
 17514  004248  0012               	return	
 17515                           
 17516                           ; BSR set to: 0
 17517                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 17518  00424A  EC9A  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17519                           
 17520                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 17521  00424E  0012               	return	
 17522  004250                     l224:
 17523                           
 17524                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 17525  004250  0E02               	movlw	2
 17526  004252  0100               	movlb	0	; () banked
 17527  004254  6FB5               	movwf	_controlTransferState& (0+255),b
 17528                           
 17529                           ; BSR set to: 0
 17530                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 17531  004256  EE20 F001          	lfsr	2,1
 17532  00425A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17533  00425C  26D9               	addwf	fsr2l,f,c
 17534  00425E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17535  004260  22DA               	addwfc	fsr2h,f,c
 17536  004262  0E08               	movlw	8
 17537  004264  6EDF               	movwf	indf2,c
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17541  004266  EE20 F002          	lfsr	2,2
 17542  00426A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17543  00426C  26D9               	addwf	fsr2l,f,c
 17544  00426E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17545  004270  22DA               	addwfc	fsr2h,f,c
 17546  004272  0E30               	movlw	48
 17547  004274  6EDE               	movwf	postinc2,c
 17548  004276  0E0D               	movlw	13
 17549  004278  6EDD               	movwf	postdec2,c
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17553  00427A  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17554  00427E  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17555  004282  0E04               	movlw	4
 17556  004284  6EDF               	movwf	indf2,c
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17560  004286  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17561  00428A  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17562  00428E  0E00               	movlw	0
 17563  004290  8EDB               	bsf	plusw2,7,c
 17564                           
 17565                           ; BSR set to: 0
 17566                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 17567  004292  0E00               	movlw	0
 17568  004294  6FAD               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17569                           
 17570                           ; BSR set to: 0
 17571                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 17572  004296  0E00               	movlw	0
 17573  004298  6FAE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 17577  00429A  51AF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17578  00429C  A4D8               	btfss	status,2,c
 17579  00429E  0012               	return	
 17580                           
 17581                           ; BSR set to: 0
 17582                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 17583  0042A0  EC9A  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17584  0042A4  0012               	return	
 17585  0042A6                     __end_of_USBCtrlEPServiceComplete:
 17586                           	opt stack 0
 17587                           tblptru	equ	0xFF8
 17588                           tblptrh	equ	0xFF7
 17589                           tblptrl	equ	0xFF6
 17590                           tablat	equ	0xFF5
 17591                           prodh	equ	0xFF4
 17592                           prodl	equ	0xFF3
 17593                           intcon	equ	0xFF2
 17594                           intcon2	equ	0xFF1
 17595                           intcon3	equ	0xFF0
 17596                           postinc0	equ	0xFEE
 17597                           wreg	equ	0xFE8
 17598                           indf1	equ	0xFE7
 17599                           postdec1	equ	0xFE5
 17600                           plusw1	equ	0xFE3
 17601                           fsr1h	equ	0xFE2
 17602                           fsr1l	equ	0xFE1
 17603                           indf2	equ	0xFDF
 17604                           postinc2	equ	0xFDE
 17605                           postdec2	equ	0xFDD
 17606                           plusw2	equ	0xFDB
 17607                           fsr2h	equ	0xFDA
 17608                           fsr2l	equ	0xFD9
 17609                           status	equ	0xFD8
 17610                           
 17611 ;; *************** function _USBCtrlEPAllowDataStage *****************
 17612 ;; Defined at:
 17613 ;;		line 1490 in file "usb_device.c"
 17614 ;; Parameters:    Size  Location     Type
 17615 ;;		None
 17616 ;; Auto vars:     Size  Location     Type
 17617 ;;		None
 17618 ;; Return value:  Size  Location     Type
 17619 ;;                  1    wreg      void 
 17620 ;; Registers used:
 17621 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17622 ;; Tracked objects:
 17623 ;;		On entry : 0/0
 17624 ;;		On exit  : 0/0
 17625 ;;		Unchanged: 0/0
 17626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17631 ;;Total ram usage:        0 bytes
 17632 ;; Hardware stack levels used:    1
 17633 ;; Hardware stack levels required when called:    1
 17634 ;; This function calls:
 17635 ;;		_USBCtrlTrfTxService
 17636 ;; This function is called by:
 17637 ;;		_USBCtrlEPServiceComplete
 17638 ;; This function uses a non-reentrant model
 17639 ;;
 17640                           
 17641                           	psect	text83
 17642  005774                     __ptext83:
 17643                           	opt stack 0
 17644  005774                     _USBCtrlEPAllowDataStage:
 17645                           	opt stack 25
 17646                           
 17647                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 17648                           
 17649                           ;incstack = 0
 17650  005774  0E00               	movlw	0
 17651  005776  0100               	movlb	0	; () banked
 17652  005778  6FAC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17653                           
 17654                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 17655  00577A  0E00               	movlw	0
 17656  00577C  6FAB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;usb_device.c: 1495: if(controlTransferState == 2)
 17660  00577E  0E02               	movlw	2
 17661  005780  19B5               	xorwf	_controlTransferState& (0+255),w,b
 17662  005782  A4D8               	btfss	status,2,c
 17663  005784  D01F               	goto	l208
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 17667  005786  EE20 F001          	lfsr	2,1
 17668  00578A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17669  00578C  26D9               	addwf	fsr2l,f,c
 17670  00578E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17671  005790  22DA               	addwfc	fsr2h,f,c
 17672  005792  0E08               	movlw	8
 17673  005794  6EDF               	movwf	indf2,c
 17674                           
 17675                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17676  005796  EE20 F002          	lfsr	2,2
 17677  00579A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17678  00579C  26D9               	addwf	fsr2l,f,c
 17679  00579E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17680  0057A0  22DA               	addwfc	fsr2h,f,c
 17681  0057A2  0E38               	movlw	56
 17682  0057A4  6EDE               	movwf	postinc2,c
 17683  0057A6  0E0D               	movlw	13
 17684  0057A8  6EDD               	movwf	postdec2,c
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 17688  0057AA  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17689  0057AE  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17690  0057B2  0E48               	movlw	72
 17691  0057B4  6EDF               	movwf	indf2,c
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17695  0057B6  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17696  0057BA  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17697  0057BE  0E00               	movlw	0
 17698  0057C0  8EDB               	bsf	plusw2,7,c
 17699                           
 17700                           ;usb_device.c: 1502: }
 17701  0057C2  0012               	return	
 17702  0057C4                     l208:
 17703                           
 17704                           ; BSR set to: 0
 17705                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 17706                           
 17707                           ; BSR set to: 0
 17708  0057C4  516A               	movf	(_inPipes+4)& (0+255),w,b
 17709  0057C6  010D               	movlb	13	; () banked
 17710  0057C8  5D36               	subwf	54,w,b	;volatile
 17711  0057CA  0100               	movlb	0	; () banked
 17712  0057CC  516B               	movf	(_inPipes+5)& (0+255),w,b
 17713  0057CE  010D               	movlb	13	; () banked
 17714  0057D0  5937               	subwfb	55,w,b	;volatile
 17715  0057D2  B0D8               	btfsc	status,0,c
 17716  0057D4  D004               	goto	l210
 17717                           
 17718                           ; BSR set to: 13
 17719                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 17720  0057D6  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 17721  0057DA  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 17722  0057DE                     l210:
 17723                           
 17724                           ; BSR set to: 13
 17725                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 17726                           
 17727                           ; BSR set to: 13
 17728  0057DE  EC0A  F026         	call	_USBCtrlTrfTxService	;wreg free
 17729                           
 17730                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 17731  0057E2  0100               	movlb	0	; () banked
 17732  0057E4  EE20 F002          	lfsr	2,2
 17733  0057E8  516C               	movf	_pBDTEntryIn& (0+255),w,b
 17734  0057EA  26D9               	addwf	fsr2l,f,c
 17735  0057EC  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17736  0057EE  22DA               	addwfc	fsr2h,f,c
 17737  0057F0  0E38               	movlw	56
 17738  0057F2  6EDE               	movwf	postinc2,c
 17739  0057F4  0E0D               	movlw	13
 17740  0057F6  6EDD               	movwf	postdec2,c
 17741                           
 17742                           ; BSR set to: 0
 17743                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17744  0057F8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17745  0057FC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17746  005800  0E48               	movlw	72
 17747  005802  6EDF               	movwf	indf2,c
 17748                           
 17749                           ; BSR set to: 0
 17750                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17751  005804  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17752  005808  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17753  00580C  0E00               	movlw	0
 17754  00580E  8EDB               	bsf	plusw2,7,c
 17755  005810  0012               	return	
 17756  005812                     __end_of_USBCtrlEPAllowDataStage:
 17757                           	opt stack 0
 17758                           tblptru	equ	0xFF8
 17759                           tblptrh	equ	0xFF7
 17760                           tblptrl	equ	0xFF6
 17761                           tablat	equ	0xFF5
 17762                           prodh	equ	0xFF4
 17763                           prodl	equ	0xFF3
 17764                           intcon	equ	0xFF2
 17765                           intcon2	equ	0xFF1
 17766                           intcon3	equ	0xFF0
 17767                           postinc0	equ	0xFEE
 17768                           wreg	equ	0xFE8
 17769                           indf1	equ	0xFE7
 17770                           postdec1	equ	0xFE5
 17771                           plusw1	equ	0xFE3
 17772                           fsr1h	equ	0xFE2
 17773                           fsr1l	equ	0xFE1
 17774                           indf2	equ	0xFDF
 17775                           postinc2	equ	0xFDE
 17776                           postdec2	equ	0xFDD
 17777                           plusw2	equ	0xFDB
 17778                           fsr2h	equ	0xFDA
 17779                           fsr2l	equ	0xFD9
 17780                           status	equ	0xFD8
 17781                           
 17782 ;; *************** function _USBCheckStdRequest *****************
 17783 ;; Defined at:
 17784 ;;		line 2688 in file "usb_device.c"
 17785 ;; Parameters:    Size  Location     Type
 17786 ;;		None
 17787 ;; Auto vars:     Size  Location     Type
 17788 ;;		None
 17789 ;; Return value:  Size  Location     Type
 17790 ;;                  1    wreg      void 
 17791 ;; Registers used:
 17792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17793 ;; Tracked objects:
 17794 ;;		On entry : 0/0
 17795 ;;		On exit  : 0/0
 17796 ;;		Unchanged: 0/0
 17797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17802 ;;Total ram usage:        0 bytes
 17803 ;; Hardware stack levels used:    1
 17804 ;; Hardware stack levels required when called:    5
 17805 ;; This function calls:
 17806 ;;		_USBStdFeatureReqHandler
 17807 ;;		_USBStdGetDscHandler
 17808 ;;		_USBStdGetStatusHandler
 17809 ;;		_USBStdSetCfgHandler
 17810 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17811 ;; This function is called by:
 17812 ;;		_USBCtrlTrfSetupHandler
 17813 ;; This function uses a non-reentrant model
 17814 ;;
 17815                           
 17816                           	psect	text84
 17817  004398                     __ptext84:
 17818                           	opt stack 0
 17819  004398                     _USBCheckStdRequest:
 17820                           	opt stack 22
 17821                           
 17822                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 17823                           
 17824                           ; BSR set to: 0
 17825                           ;incstack = 0
 17826  004398  010D               	movlb	13	; () banked
 17827  00439A  3930               	swapf	48,w,b	;volatile
 17828  00439C  32E8               	rrcf	wreg,f,c
 17829  00439E  0B03               	andlw	3
 17830  0043A0  0900               	iorlw	0
 17831  0043A2  A4D8               	btfss	status,2,c
 17832  0043A4  0012               	return	
 17833  0043A6  D047               	goto	l343
 17834  0043A8                     l344:
 17835                           
 17836                           ; BSR set to: 13
 17837                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 17838  0043A8  0100               	movlb	0	; () banked
 17839  0043AA  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 17843  0043AC  0E08               	movlw	8
 17844  0043AE  6FB7               	movwf	_USBDeviceState& (0+255),b
 17845                           
 17846                           ;usb_device.c: 2698: break;
 17847  0043B0  0012               	return	
 17848  0043B2                     
 17849                           ;usb_device.c: 2700: USBStdGetDscHandler();
 17850                           
 17851                           ; BSR set to: 0
 17852  0043B2  EC80  F01C         	call	_USBStdGetDscHandler	;wreg free
 17853                           
 17854                           ;usb_device.c: 2701: break;
 17855  0043B6  0012               	return	
 17856  0043B8                     
 17857                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 17858  0043B8  EC3D  F022         	call	_USBStdSetCfgHandler	;wreg free
 17859                           
 17860                           ;usb_device.c: 2704: break;
 17861  0043BC  0012               	return	
 17862  0043BE                     
 17863                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 17864  0043BE  0EBD               	movlw	low _USBActiveConfiguration
 17865  0043C0  0100               	movlb	0	; () banked
 17866  0043C2  6F66               	movwf	_inPipes& (0+255),b
 17867  0043C4  0E00               	movlw	high _USBActiveConfiguration
 17868  0043C6  6F67               	movwf	(_inPipes+1)& (0+255),b
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17872  0043C8  8169               	bsf	(_inPipes+3)& (0+255),0,b
 17873                           
 17874                           ; BSR set to: 0
 17875                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 17876  0043CA  0E01               	movlw	1
 17877  0043CC  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17878                           
 17879                           ; BSR set to: 0
 17880                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 17881  0043CE  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17882                           
 17883                           ;usb_device.c: 2710: break;
 17884  0043D0  0012               	return	
 17885  0043D2                     
 17886                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 17887                           
 17888                           ; BSR set to: 0
 17889  0043D2  ECCE  F029         	call	_USBStdGetStatusHandler	;wreg free
 17890                           
 17891                           ;usb_device.c: 2713: break;
 17892  0043D6  0012               	return	
 17893  0043D8                     
 17894                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 17895  0043D8  ECC2  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 17896                           
 17897                           ;usb_device.c: 2717: break;
 17898  0043DC  0012               	return	
 17899  0043DE                     
 17900                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 17901  0043DE  010D               	movlb	13	; () banked
 17902  0043E0  5134               	movf	52,w,b	;volatile
 17903  0043E2  0D01               	mullw	1
 17904  0043E4  0EB8               	movlw	low _USBAlternateInterface
 17905  0043E6  24F3               	addwf	prodl,w,c
 17906  0043E8  0100               	movlb	0	; () banked
 17907  0043EA  6F66               	movwf	_inPipes& (0+255),b
 17908  0043EC  0E00               	movlw	high _USBAlternateInterface
 17909  0043EE  20F4               	addwfc	prodh,w,c
 17910  0043F0  6F67               	movwf	(_inPipes+1)& (0+255),b
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17914  0043F2  8169               	bsf	(_inPipes+3)& (0+255),0,b
 17915                           
 17916                           ; BSR set to: 0
 17917                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 17918  0043F4  0E01               	movlw	1
 17919  0043F6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 17923  0043F8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17924                           
 17925                           ;usb_device.c: 2723: break;
 17926  0043FA  0012               	return	
 17927  0043FC                     l353:
 17928                           
 17929                           ; BSR set to: 13
 17930                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 17931  0043FC  0100               	movlb	0	; () banked
 17932  0043FE  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17933                           
 17934                           ; BSR set to: 0
 17935                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 17936  004400  010D               	movlb	13	; () banked
 17937  004402  5134               	movf	52,w,b	;volatile
 17938  004404  0D01               	mullw	1
 17939  004406  0EB8               	movlw	low _USBAlternateInterface
 17940  004408  24F3               	addwf	prodl,w,c
 17941  00440A  6ED9               	movwf	fsr2l,c
 17942  00440C  0E00               	movlw	high _USBAlternateInterface
 17943  00440E  20F4               	addwfc	prodh,w,c
 17944  004410  6EDA               	movwf	fsr2h,c
 17945  004412  CD32 FFDF          	movff	3378,indf2	;volatile
 17946                           
 17947                           ;usb_device.c: 2727: break;
 17948  004416  0012               	return	
 17949  004418                     
 17950                           ; BSR set to: 13
 17951                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 17952                           
 17953                           ; BSR set to: 13
 17954  004418  0E00               	movlw	0
 17955  00441A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17956  00441C  0E02               	movlw	2
 17957  00441E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17958  004420  0E00               	movlw	0
 17959  004422  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17960  004424  0E00               	movlw	0
 17961  004426  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17962  004428  0E00               	movlw	0
 17963  00442A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17964  00442C  0E00               	movlw	0
 17965  00442E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17966  004430  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17967                           
 17968                           ;usb_device.c: 2734: }
 17969                           
 17970                           ;usb_device.c: 2733: break;
 17971                           
 17972                           ;usb_device.c: 2732: default:
 17973                           
 17974                           ;usb_device.c: 2731: case 12:
 17975                           
 17976                           ;usb_device.c: 2730: break;
 17977  004434  0012               	return	
 17978  004436                     l343:
 17979  004436  010D               	movlb	13	; () banked
 17980  004438  5131               	movf	49,w,b	;volatile
 17981                           
 17982                           ; Switch size 1, requested type "space"
 17983                           ; Number of cases is 11, Range of values is 0 to 12
 17984                           ; switch strategies available:
 17985                           ; Name         Instructions Cycles
 17986                           ; simple_byte           34    18 (average)
 17987                           ;	Chosen strategy is simple_byte
 17988  00443A  0A00               	xorlw	0	; case 0
 17989  00443C  B4D8               	btfsc	status,2,c
 17990  00443E  D7C9               	goto	l349
 17991  004440  0A01               	xorlw	1	; case 1
 17992  004442  B4D8               	btfsc	status,2,c
 17993  004444  D7C9               	goto	l350
 17994  004446  0A02               	xorlw	2	; case 3
 17995  004448  B4D8               	btfsc	status,2,c
 17996  00444A  D7C6               	goto	l350
 17997  00444C  0A06               	xorlw	6	; case 5
 17998  00444E  B4D8               	btfsc	status,2,c
 17999  004450  D7AB               	goto	l344
 18000  004452  0A03               	xorlw	3	; case 6
 18001  004454  B4D8               	btfsc	status,2,c
 18002  004456  D7AD               	goto	l346
 18003  004458  0A01               	xorlw	1	; case 7
 18004  00445A  B4D8               	btfsc	status,2,c
 18005  00445C  D7DD               	goto	l354
 18006  00445E  0A0F               	xorlw	15	; case 8
 18007  004460  B4D8               	btfsc	status,2,c
 18008  004462  D7AD               	goto	l348
 18009  004464  0A01               	xorlw	1	; case 9
 18010  004466  B4D8               	btfsc	status,2,c
 18011  004468  D7A7               	goto	l347
 18012  00446A  0A03               	xorlw	3	; case 10
 18013  00446C  B4D8               	btfsc	status,2,c
 18014  00446E  D7B7               	goto	l352
 18015  004470  0A01               	xorlw	1	; case 11
 18016  004472  B4D8               	btfsc	status,2,c
 18017  004474  D7C3               	goto	l353
 18018  004476  0A07               	xorlw	7	; case 12
 18019  004478  0012               	return	
 18020  00447A                     __end_of_USBCheckStdRequest:
 18021                           	opt stack 0
 18022                           tblptru	equ	0xFF8
 18023                           tblptrh	equ	0xFF7
 18024                           tblptrl	equ	0xFF6
 18025                           tablat	equ	0xFF5
 18026                           prodh	equ	0xFF4
 18027                           prodl	equ	0xFF3
 18028                           intcon	equ	0xFF2
 18029                           intcon2	equ	0xFF1
 18030                           intcon3	equ	0xFF0
 18031                           postinc0	equ	0xFEE
 18032                           wreg	equ	0xFE8
 18033                           indf1	equ	0xFE7
 18034                           postdec1	equ	0xFE5
 18035                           plusw1	equ	0xFE3
 18036                           fsr1h	equ	0xFE2
 18037                           fsr1l	equ	0xFE1
 18038                           indf2	equ	0xFDF
 18039                           postinc2	equ	0xFDE
 18040                           postdec2	equ	0xFDD
 18041                           plusw2	equ	0xFDB
 18042                           fsr2h	equ	0xFDA
 18043                           fsr2l	equ	0xFD9
 18044                           status	equ	0xFD8
 18045                           
 18046 ;; *************** function _USBStdSetCfgHandler *****************
 18047 ;; Defined at:
 18048 ;;		line 1970 in file "usb_device.c"
 18049 ;; Parameters:    Size  Location     Type
 18050 ;;		None
 18051 ;; Auto vars:     Size  Location     Type
 18052 ;;  i               1   23[COMRAM] unsigned char 
 18053 ;; Return value:  Size  Location     Type
 18054 ;;                  1    wreg      void 
 18055 ;; Registers used:
 18056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18057 ;; Tracked objects:
 18058 ;;		On entry : 0/0
 18059 ;;		On exit  : 0/0
 18060 ;;		Unchanged: 0/0
 18061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18066 ;;Total ram usage:        1 bytes
 18067 ;; Hardware stack levels used:    1
 18068 ;; Hardware stack levels required when called:    4
 18069 ;; This function calls:
 18070 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18071 ;;		_memset
 18072 ;; This function is called by:
 18073 ;;		_USBCheckStdRequest
 18074 ;; This function uses a non-reentrant model
 18075 ;;
 18076                           
 18077                           	psect	text85
 18078  00447A                     __ptext85:
 18079                           	opt stack 0
 18080  00447A                     _USBStdSetCfgHandler:
 18081                           	opt stack 22
 18082                           
 18083                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 18084                           
 18085                           ;incstack = 0
 18086  00447A  0100               	movlb	0	; () banked
 18087  00447C  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 18091  00447E  0E27               	movlw	39
 18092  004480  6E01               	movwf	memset@p1,c
 18093  004482  0E0F               	movlw	15
 18094  004484  6E02               	movwf	memset@p1+1,c
 18095  004486  0E00               	movlw	0
 18096  004488  6E04               	movwf	memset@c+1,c
 18097  00448A  0E00               	movlw	0
 18098  00448C  6E03               	movwf	memset@c,c
 18099  00448E  0E00               	movlw	0
 18100  004490  6E06               	movwf	memset@n+1,c
 18101  004492  0E02               	movlw	2
 18102  004494  6E05               	movwf	memset@n,c
 18103  004496  EC19  F03B         	call	_memset	;wreg free
 18104                           
 18105                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18106  00449A  0E00               	movlw	0
 18107  00449C  6E01               	movwf	memset@p1,c
 18108  00449E  0E0D               	movlw	13
 18109  0044A0  6E02               	movwf	memset@p1+1,c
 18110  0044A2  0E00               	movlw	0
 18111  0044A4  6E04               	movwf	memset@c+1,c
 18112  0044A6  0E00               	movlw	0
 18113  0044A8  6E03               	movwf	memset@c,c
 18114  0044AA  0E00               	movlw	0
 18115  0044AC  6E06               	movwf	memset@n+1,c
 18116  0044AE  0E30               	movlw	48
 18117  0044B0  6E05               	movwf	memset@n,c
 18118  0044B2  EC19  F03B         	call	_memset	;wreg free
 18119                           
 18120                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 18121  0044B6  8C65               	bsf	3941,6,c	;volatile
 18122                           
 18123                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 18124  0044B8  0E00               	movlw	0
 18125  0044BA  6E18               	movwf	USBStdSetCfgHandler@i,c
 18126  0044BC                     l10307:
 18127  0044BC  0E02               	movlw	2
 18128  0044BE  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 18129  0044C0  D001               	goto	l260
 18130  0044C2  D016               	goto	u7750
 18131  0044C4                     l260:
 18132                           
 18133                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 18134  0044C4  5018               	movf	USBStdSetCfgHandler@i,w,c
 18135  0044C6  0D01               	mullw	1
 18136  0044C8  0E5B               	movlw	low _ep_data_in
 18137  0044CA  24F3               	addwf	prodl,w,c
 18138  0044CC  6ED9               	movwf	fsr2l,c
 18139  0044CE  0E01               	movlw	high _ep_data_in
 18140  0044D0  20F4               	addwfc	prodh,w,c
 18141  0044D2  6EDA               	movwf	fsr2h,c
 18142  0044D4  0E00               	movlw	0
 18143  0044D6  6EDF               	movwf	indf2,c
 18144                           
 18145                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 18146  0044D8  5018               	movf	USBStdSetCfgHandler@i,w,c
 18147  0044DA  0D01               	mullw	1
 18148  0044DC  0E58               	movlw	low _ep_data_out
 18149  0044DE  24F3               	addwf	prodl,w,c
 18150  0044E0  6ED9               	movwf	fsr2l,c
 18151  0044E2  0E01               	movlw	high _ep_data_out
 18152  0044E4  20F4               	addwfc	prodh,w,c
 18153  0044E6  6EDA               	movwf	fsr2h,c
 18154  0044E8  0E00               	movlw	0
 18155  0044EA  6EDF               	movwf	indf2,c
 18156  0044EC  2A18               	incf	USBStdSetCfgHandler@i,f,c
 18157  0044EE  D7E6               	goto	l10307
 18158  0044F0                     u7750:
 18159                           
 18160                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 18161  0044F0  0EB8               	movlw	low _USBAlternateInterface
 18162  0044F2  6E01               	movwf	memset@p1,c
 18163  0044F4  0E00               	movlw	high _USBAlternateInterface
 18164  0044F6  6E02               	movwf	memset@p1+1,c
 18165  0044F8  0E00               	movlw	0
 18166  0044FA  6E04               	movwf	memset@c+1,c
 18167  0044FC  0E00               	movlw	0
 18168  0044FE  6E03               	movwf	memset@c,c
 18169  004500  0E00               	movlw	0
 18170  004502  6E06               	movwf	memset@n+1,c
 18171  004504  0E02               	movlw	2
 18172  004506  6E05               	movwf	memset@n,c
 18173  004508  EC19  F03B         	call	_memset	;wreg free
 18174                           
 18175                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 18176  00450C  9C65               	bcf	3941,6,c	;volatile
 18177                           
 18178                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18179  00450E  0E08               	movlw	8
 18180  004510  0100               	movlb	0	; () banked
 18181  004512  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18182  004514  0E0D               	movlw	13
 18183  004516  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18184                           
 18185                           ; BSR set to: 0
 18186                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 18187  004518  0E00               	movlw	0
 18188  00451A  6F98               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 18189  00451C  0E0D               	movlw	13
 18190  00451E  6F99               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18194  004520  C098  F096         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18195  004524  C099  F097         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 18199  004528  CD32 F0BD          	movff	3378,_USBActiveConfiguration	;volatile
 18200                           
 18201                           ; BSR set to: 0
 18202                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 18203  00452C  51BD               	movf	_USBActiveConfiguration& (0+255),w,b
 18204  00452E  A4D8               	btfss	status,2,c
 18205  004530  D003               	goto	l262
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 18209  004532  0E10               	movlw	16
 18210  004534  6FB7               	movwf	_USBDeviceState& (0+255),b
 18211                           
 18212                           ;usb_device.c: 2015: }
 18213  004536  0012               	return	
 18214  004538                     l262:
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 18218                           
 18219                           ; BSR set to: 0
 18220  004538  0E00               	movlw	0
 18221  00453A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18222  00453C  0E01               	movlw	1
 18223  00453E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18224  004540  0EBD               	movlw	low _USBActiveConfiguration
 18225  004542  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18226  004544  0E00               	movlw	high _USBActiveConfiguration
 18227  004546  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18228  004548  0E00               	movlw	0
 18229  00454A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18230  00454C  0E01               	movlw	1
 18231  00454E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18232  004550  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18233                           
 18234                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 18235  004554  0E20               	movlw	32
 18236  004556  0100               	movlb	0	; () banked
 18237  004558  6FB7               	movwf	_USBDeviceState& (0+255),b
 18238  00455A  0012               	return	
 18239  00455C                     __end_of_USBStdSetCfgHandler:
 18240                           	opt stack 0
 18241                           tblptru	equ	0xFF8
 18242                           tblptrh	equ	0xFF7
 18243                           tblptrl	equ	0xFF6
 18244                           tablat	equ	0xFF5
 18245                           prodh	equ	0xFF4
 18246                           prodl	equ	0xFF3
 18247                           intcon	equ	0xFF2
 18248                           intcon2	equ	0xFF1
 18249                           intcon3	equ	0xFF0
 18250                           postinc0	equ	0xFEE
 18251                           wreg	equ	0xFE8
 18252                           indf1	equ	0xFE7
 18253                           postdec1	equ	0xFE5
 18254                           plusw1	equ	0xFE3
 18255                           fsr1h	equ	0xFE2
 18256                           fsr1l	equ	0xFE1
 18257                           indf2	equ	0xFDF
 18258                           postinc2	equ	0xFDE
 18259                           postdec2	equ	0xFDD
 18260                           plusw2	equ	0xFDB
 18261                           fsr2h	equ	0xFDA
 18262                           fsr2l	equ	0xFD9
 18263                           status	equ	0xFD8
 18264                           
 18265 ;; *************** function _memset *****************
 18266 ;; Defined at:
 18267 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;  p1              2    0[COMRAM] PTR void 
 18270 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18271 ;;  c               2    2[COMRAM] int 
 18272 ;;  n               2    4[COMRAM] unsigned int 
 18273 ;; Auto vars:     Size  Location     Type
 18274 ;;  p               2    6[COMRAM] PTR unsigned char 
 18275 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  2    0[COMRAM] PTR void 
 18278 ;; Registers used:
 18279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18285 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18288 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18289 ;;Total ram usage:        8 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; This function calls:
 18292 ;;		Nothing
 18293 ;; This function is called by:
 18294 ;;		_USBDeviceInit
 18295 ;;		_USBStdSetCfgHandler
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           	psect	text86
 18300  007632                     __ptext86:
 18301                           	opt stack 0
 18302  007632                     _memset:
 18303                           	opt stack 28
 18304                           
 18305                           ; BSR set to: 0
 18306                           ;incstack = 0
 18307  007632  C001  F007         	movff	memset@p1,memset@p
 18308  007636  C002  F008         	movff	memset@p1+1,memset@p+1
 18309  00763A  D008               	goto	l3305
 18310  00763C                     l9735:
 18311  00763C  C007  FFD9         	movff	memset@p,fsr2l
 18312  007640  C008  FFDA         	movff	memset@p+1,fsr2h
 18313  007644  C003  FFDF         	movff	memset@c,indf2
 18314  007648  4A07               	infsnz	memset@p,f,c
 18315  00764A  2A08               	incf	memset@p+1,f,c
 18316  00764C                     l3305:
 18317  00764C  0605               	decf	memset@n,f,c
 18318  00764E  A0D8               	btfss	status,0,c
 18319  007650  0606               	decf	memset@n+1,f,c
 18320  007652  2805               	incf	memset@n,w,c
 18321  007654  E1F3               	bnz	l9735
 18322  007656  2806               	incf	memset@n+1,w,c
 18323  007658  B4D8               	btfsc	status,2,c
 18324  00765A  0012               	return	
 18325  00765C  D7EF               	goto	l3306
 18326  00765E                     __end_of_memset:
 18327                           	opt stack 0
 18328                           tblptru	equ	0xFF8
 18329                           tblptrh	equ	0xFF7
 18330                           tblptrl	equ	0xFF6
 18331                           tablat	equ	0xFF5
 18332                           prodh	equ	0xFF4
 18333                           prodl	equ	0xFF3
 18334                           intcon	equ	0xFF2
 18335                           intcon2	equ	0xFF1
 18336                           intcon3	equ	0xFF0
 18337                           postinc0	equ	0xFEE
 18338                           wreg	equ	0xFE8
 18339                           indf1	equ	0xFE7
 18340                           postdec1	equ	0xFE5
 18341                           plusw1	equ	0xFE3
 18342                           fsr1h	equ	0xFE2
 18343                           fsr1l	equ	0xFE1
 18344                           indf2	equ	0xFDF
 18345                           postinc2	equ	0xFDE
 18346                           postdec2	equ	0xFDD
 18347                           plusw2	equ	0xFDB
 18348                           fsr2h	equ	0xFDA
 18349                           fsr2l	equ	0xFD9
 18350                           status	equ	0xFD8
 18351                           
 18352 ;; *************** function _USBStdGetStatusHandler *****************
 18353 ;; Defined at:
 18354 ;;		line 2131 in file "usb_device.c"
 18355 ;; Parameters:    Size  Location     Type
 18356 ;;		None
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;  p               2    1[COMRAM] PTR struct __BDT
 18359 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18360 ;; Return value:  Size  Location     Type
 18361 ;;                  1    wreg      void 
 18362 ;; Registers used:
 18363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18364 ;; Tracked objects:
 18365 ;;		On entry : 0/0
 18366 ;;		On exit  : 0/0
 18367 ;;		Unchanged: 0/0
 18368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18373 ;;Total ram usage:        3 bytes
 18374 ;; Hardware stack levels used:    1
 18375 ;; This function calls:
 18376 ;;		Nothing
 18377 ;; This function is called by:
 18378 ;;		_USBCheckStdRequest
 18379 ;; This function uses a non-reentrant model
 18380 ;;
 18381                           
 18382                           	psect	text87
 18383  00539C                     __ptext87:
 18384                           	opt stack 0
 18385  00539C                     _USBStdGetStatusHandler:
 18386                           	opt stack 26
 18387                           
 18388                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 18389                           
 18390                           ;incstack = 0
 18391  00539C  0E00               	movlw	0
 18392  00539E  010D               	movlb	13	; () banked
 18393  0053A0  6F38               	movwf	56,b	;volatile
 18394                           
 18395                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 18396  0053A2  0E00               	movlw	0
 18397  0053A4  6F39               	movwf	57,b	;volatile
 18398                           
 18399                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 18400  0053A6  D039               	goto	l281
 18401  0053A8                     l282:
 18402                           
 18403                           ; BSR set to: 13
 18404                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 18405  0053A8  0100               	movlb	0	; () banked
 18406  0053AA  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18407                           
 18408                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 18409                           
 18410                           ; BSR set to: 13
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 18414                           
 18415                           ;usb_device.c: 2144: if(0 == 1)
 18416  0053AC  0100               	movlb	0	; () banked
 18417  0053AE  05B4               	decf	_RemoteWakeup& (0+255),w,b
 18418  0053B0  A4D8               	btfss	status,2,c
 18419  0053B2  D03E               	goto	l285
 18420                           
 18421                           ; BSR set to: 0
 18422                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 18423  0053B4  010D               	movlb	13	; () banked
 18424  0053B6  8338               	bsf	56,1,b	;volatile
 18425                           
 18426                           ; BSR set to: 13
 18427                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 18428  0053B8  D03B               	goto	l285
 18429  0053BA                     l286:
 18430                           
 18431                           ; BSR set to: 13
 18432                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 18433  0053BA  0100               	movlb	0	; () banked
 18434  0053BC  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18435                           
 18436                           ;usb_device.c: 2156: break;
 18437  0053BE  D038               	goto	l285
 18438  0053C0                     l287:
 18439                           
 18440                           ; BSR set to: 13
 18441                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 18442  0053C0  0100               	movlb	0	; () banked
 18443  0053C2  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18444                           
 18445                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 18446  0053C4  010D               	movlb	13	; () banked
 18447  0053C6  BF34               	btfsc	52,7,b	;volatile
 18448  0053C8  D00A               	goto	l288
 18449                           
 18450                           ; BSR set to: 13
 18451                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18452  0053CA  5134               	movf	52,w,b	;volatile
 18453  0053CC  0B0F               	andlw	15
 18454  0053CE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18455  0053D0  5001               	movf	??_USBStdGetStatusHandler,w,c
 18456  0053D2  0D02               	mullw	2
 18457  0053D4  0E72               	movlw	low _pBDTEntryOut
 18458  0053D6  24F3               	addwf	prodl,w,c
 18459  0053D8  6ED9               	movwf	fsr2l,c
 18460  0053DA  0E00               	movlw	high _pBDTEntryOut
 18461  0053DC  D009               	goto	L6
 18462  0053DE                     l288:
 18463                           
 18464                           ; BSR set to: 13
 18465                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 18466                           
 18467                           ; BSR set to: 13
 18468  0053DE  5134               	movf	52,w,b	;volatile
 18469  0053E0  0B0F               	andlw	15
 18470  0053E2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18471  0053E4  5001               	movf	??_USBStdGetStatusHandler,w,c
 18472  0053E6  0D02               	mullw	2
 18473  0053E8  0E6C               	movlw	low _pBDTEntryIn
 18474  0053EA  24F3               	addwf	prodl,w,c
 18475  0053EC  6ED9               	movwf	fsr2l,c
 18476  0053EE  0E00               	movlw	high _pBDTEntryIn
 18477  0053F0                     L6:
 18478  0053F0  20F4               	addwfc	prodh,w,c
 18479  0053F2  6EDA               	movwf	fsr2h,c
 18480  0053F4  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 18481  0053F8  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 18482                           
 18483                           ; BSR set to: 13
 18484                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 18485                           
 18486                           ; BSR set to: 13
 18487  0053FC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18488  005400  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18489  005404  AEDF               	btfss	indf2,7,c
 18490  005406  D014               	goto	l285
 18491                           
 18492                           ; BSR set to: 13
 18493  005408  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18494  00540C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18495  005410  A4DF               	btfss	indf2,2,c
 18496  005412  D00E               	goto	l285
 18497                           
 18498                           ; BSR set to: 13
 18499                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 18500  005414  0E01               	movlw	1
 18501  005416  6F38               	movwf	56,b	;volatile
 18502                           
 18503                           ; BSR set to: 13
 18504                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 18505                           
 18506                           ; BSR set to: 13
 18507                           ;usb_device.c: 2176: break;
 18508  005418  D00B               	goto	l285
 18509  00541A                     l281:
 18510                           
 18511                           ; BSR set to: 13
 18512                           
 18513                           ; BSR set to: 13
 18514  00541A  5130               	movf	48,w,b	;volatile
 18515  00541C  0B1F               	andlw	31
 18516                           
 18517                           ; Switch size 1, requested type "space"
 18518                           ; Number of cases is 3, Range of values is 0 to 2
 18519                           ; switch strategies available:
 18520                           ; Name         Instructions Cycles
 18521                           ; simple_byte           10     6 (average)
 18522                           ;	Chosen strategy is simple_byte
 18523  00541E  0A00               	xorlw	0	; case 0
 18524  005420  B4D8               	btfsc	status,2,c
 18525  005422  D7C2               	goto	l282
 18526  005424  0A01               	xorlw	1	; case 1
 18527  005426  B4D8               	btfsc	status,2,c
 18528  005428  D7C8               	goto	l286
 18529  00542A  0A03               	xorlw	3	; case 2
 18530  00542C  B4D8               	btfsc	status,2,c
 18531  00542E  D7C8               	goto	l287
 18532  005430                     l285:
 18533                           
 18534                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 18535  005430  0100               	movlb	0	; () banked
 18536  005432  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 18537  005434  0012               	return	
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 18541  005436  0E38               	movlw	56
 18542  005438  6F66               	movwf	_inPipes& (0+255),b
 18543  00543A  0E0D               	movlw	13
 18544  00543C  6F67               	movwf	(_inPipes+1)& (0+255),b
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18548  00543E  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 18552  005440  0E02               	movlw	2
 18553  005442  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18554  005444  0012               	return	
 18555  005446                     __end_of_USBStdGetStatusHandler:
 18556                           	opt stack 0
 18557                           tblptru	equ	0xFF8
 18558                           tblptrh	equ	0xFF7
 18559                           tblptrl	equ	0xFF6
 18560                           tablat	equ	0xFF5
 18561                           prodh	equ	0xFF4
 18562                           prodl	equ	0xFF3
 18563                           intcon	equ	0xFF2
 18564                           intcon2	equ	0xFF1
 18565                           intcon3	equ	0xFF0
 18566                           postinc0	equ	0xFEE
 18567                           wreg	equ	0xFE8
 18568                           indf1	equ	0xFE7
 18569                           postdec1	equ	0xFE5
 18570                           plusw1	equ	0xFE3
 18571                           fsr1h	equ	0xFE2
 18572                           fsr1l	equ	0xFE1
 18573                           indf2	equ	0xFDF
 18574                           postinc2	equ	0xFDE
 18575                           postdec2	equ	0xFDD
 18576                           plusw2	equ	0xFDB
 18577                           fsr2h	equ	0xFDA
 18578                           fsr2l	equ	0xFD9
 18579                           status	equ	0xFD8
 18580                           
 18581 ;; *************** function _USBStdGetDscHandler *****************
 18582 ;; Defined at:
 18583 ;;		line 2045 in file "usb_device.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18600 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18601 ;;Total ram usage:        2 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_USBCheckStdRequest
 18607 ;; This function uses a non-reentrant model
 18608 ;;
 18609                           
 18610                           	psect	text88
 18611  003900                     __ptext88:
 18612                           	opt stack 0
 18613  003900                     _USBStdGetDscHandler:
 18614                           	opt stack 26
 18615                           
 18616                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 18617                           
 18618                           ; BSR set to: 0
 18619                           ;incstack = 0
 18620  003900  0E80               	movlw	128
 18621  003902  010D               	movlb	13	; () banked
 18622  003904  1930               	xorwf	48,w,b	;volatile
 18623  003906  A4D8               	btfss	status,2,c
 18624  003908  0012               	return	
 18625                           
 18626                           ; BSR set to: 13
 18627                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 18628  00390A  0EC0               	movlw	192
 18629  00390C  0100               	movlb	0	; () banked
 18630  00390E  6F69               	movwf	(_inPipes+3)& (0+255),b
 18631                           
 18632                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 18633  003910  D088               	goto	l268
 18634  003912                     
 18635                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 18636                           
 18637                           ; BSR set to: 0
 18638  003912  0EA4               	movlw	low _device_dsc
 18639  003914  0100               	movlb	0	; () banked
 18640  003916  6F66               	movwf	_inPipes& (0+255),b
 18641  003918  0E8F               	movlw	high _device_dsc
 18642  00391A  6F67               	movwf	(_inPipes+1)& (0+255),b
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 18646  00391C  0E00               	movlw	0
 18647  00391E  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18648  003920  0E12               	movlw	18
 18649  003922  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18650                           
 18651                           ;usb_device.c: 2060: break;
 18652  003924  0012               	return	
 18653  003926                     
 18654                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 18655                           
 18656                           ; BSR set to: 0
 18657  003926  010D               	movlb	13	; () banked
 18658  003928  5132               	movf	50,w,b	;volatile
 18659  00392A  A4D8               	btfss	status,2,c
 18660  00392C  D043               	goto	l272
 18661                           
 18662                           ; BSR set to: 13
 18663                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 18664  00392E  5132               	movf	50,w,b	;volatile
 18665  003930  0D02               	mullw	2
 18666  003932  0EA5               	movlw	low _USB_CD_Ptr
 18667  003934  24F3               	addwf	prodl,w,c
 18668  003936  6EF6               	movwf	tblptrl,c
 18669  003938  0E8E               	movlw	high _USB_CD_Ptr
 18670  00393A  20F4               	addwfc	prodh,w,c
 18671  00393C  6EF7               	movwf	tblptrh,c
 18672  00393E                     	if	1	;There are 3 active tblptr bytes
 18673  00393E  6AF8               	clrf	tblptru,c
 18674  003940  0E00               	movlw	low (__mediumconst shr (0+16))
 18675  003942  22F8               	addwfc	tblptru,f,c
 18676  003944                     	endif
 18677  003944  0009               	tblrd		*+
 18678  003946  CFF5 F066          	movff	tablat,_inPipes
 18679  00394A  000A               	tblrd		*-
 18680  00394C  CFF5 F067          	movff	tablat,_inPipes+1
 18681                           
 18682                           ; BSR set to: 13
 18683                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 18684  003950  0E02               	movlw	2
 18685  003952  0100               	movlb	0	; () banked
 18686  003954  2566               	addwf	_inPipes& (0+255),w,b
 18687  003956  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18688  003958  0E00               	movlw	0
 18689  00395A  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 18690  00395C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18691  00395E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18692  003962  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18693  003966  6AF8               	clrf	tblptru,c
 18694  003968  0E0E               	movlw	(high __ramtop+-1)
 18695  00396A  64F7               	cpfsgt	tblptrh,c
 18696  00396C  D003               	bra	u7797
 18697  00396E  0008               	tblrd		*
 18698  003970  50F5               	movf	tablat,w,c
 18699  003972  D005               	bra	u7790
 18700  003974                     u7797:
 18701  003974  CFF6 FFE9          	movff	tblptrl,fsr0l
 18702  003978  CFF7 FFEA          	movff	tblptrh,fsr0h
 18703  00397C  50EF               	movf	indf0,w,c
 18704  00397E                     u7790:
 18705  00397E  0100               	movlb	0	; () banked
 18706  003980  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 18710  003982  0E03               	movlw	3
 18711  003984  2566               	addwf	_inPipes& (0+255),w,b
 18712  003986  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18713  003988  0E00               	movlw	0
 18714  00398A  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 18715  00398C  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18716  00398E  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18717  003992  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18718  003996  6AF8               	clrf	tblptru,c
 18719  003998  0E0E               	movlw	(high __ramtop+-1)
 18720  00399A  64F7               	cpfsgt	tblptrh,c
 18721  00399C  D003               	bra	u7807
 18722  00399E  0008               	tblrd		*
 18723  0039A0  50F5               	movf	tablat,w,c
 18724  0039A2  D005               	bra	u7800
 18725  0039A4                     u7807:
 18726  0039A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 18727  0039A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 18728  0039AC  50EF               	movf	indf0,w,c
 18729  0039AE                     u7800:
 18730  0039AE  0100               	movlb	0	; () banked
 18731  0039B0  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18732                           
 18733                           ;usb_device.c: 2078: }
 18734  0039B2  0012               	return	
 18735  0039B4                     l272:
 18736                           
 18737                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 18738                           
 18739                           ; BSR set to: 0
 18740  0039B4  0E00               	movlw	0
 18741  0039B6  0100               	movlb	0	; () banked
 18742  0039B8  6F69               	movwf	(_inPipes+3)& (0+255),b
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 18746  0039BA  0012               	return	
 18747  0039BC                     
 18748                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 18749                           
 18750                           ; BSR set to: 0
 18751  0039BC  0E04               	movlw	4
 18752  0039BE  010D               	movlb	13	; () banked
 18753  0039C0  6132               	cpfslt	50,b	;volatile
 18754  0039C2  D027               	goto	l275
 18755                           
 18756                           ; BSR set to: 13
 18757                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 18758  0039C4  5132               	movf	50,w,b	;volatile
 18759  0039C6  0D02               	mullw	2
 18760  0039C8  0E7B               	movlw	low _USB_SD_Ptr
 18761  0039CA  24F3               	addwf	prodl,w,c
 18762  0039CC  6EF6               	movwf	tblptrl,c
 18763  0039CE  0E8E               	movlw	high _USB_SD_Ptr
 18764  0039D0  20F4               	addwfc	prodh,w,c
 18765  0039D2  6EF7               	movwf	tblptrh,c
 18766  0039D4                     	if	1	;There are 3 active tblptr bytes
 18767  0039D4  6AF8               	clrf	tblptru,c
 18768  0039D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18769  0039D8  22F8               	addwfc	tblptru,f,c
 18770  0039DA                     	endif
 18771  0039DA  0009               	tblrd		*+
 18772  0039DC  CFF5 F066          	movff	tablat,_inPipes
 18773  0039E0  000A               	tblrd		*-
 18774  0039E2  CFF5 F067          	movff	tablat,_inPipes+1
 18775                           
 18776                           ; BSR set to: 13
 18777                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 18778  0039E6  C066  FFF6         	movff	_inPipes,tblptrl
 18779  0039EA  C067  FFF7         	movff	_inPipes+1,tblptrh
 18780  0039EE  6AF8               	clrf	tblptru,c
 18781  0039F0  0E0E               	movlw	(high __ramtop+-1)
 18782  0039F2  64F7               	cpfsgt	tblptrh,c
 18783  0039F4  D003               	bra	u7827
 18784  0039F6  0008               	tblrd		*
 18785  0039F8  50F5               	movf	tablat,w,c
 18786  0039FA  D005               	bra	u7820
 18787  0039FC                     u7827:
 18788  0039FC  CFF6 FFE9          	movff	tblptrl,fsr0l
 18789  003A00  CFF7 FFEA          	movff	tblptrh,fsr0h
 18790  003A04  50EF               	movf	indf0,w,c
 18791  003A06                     u7820:
 18792  003A06  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18793  003A08  5001               	movf	??_USBStdGetDscHandler,w,c
 18794  003A0A  0100               	movlb	0	; () banked
 18795  003A0C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18796  003A0E  6B6B               	clrf	(_inPipes+5)& (0+255),b
 18797                           
 18798                           ;usb_device.c: 2094: }
 18799  003A10  0012               	return	
 18800  003A12                     l275:
 18801                           
 18802                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 18803                           
 18804                           ; BSR set to: 0
 18805  003A12  0E00               	movlw	0
 18806  003A14  0100               	movlb	0	; () banked
 18807  003A16  6F69               	movwf	(_inPipes+3)& (0+255),b
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 18811  003A18  0012               	return	
 18812  003A1A                     
 18813                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 18814                           
 18815                           ; BSR set to: 0
 18816  003A1A  0E00               	movlw	0
 18817  003A1C  0100               	movlb	0	; () banked
 18818  003A1E  6F69               	movwf	(_inPipes+3)& (0+255),b
 18819                           
 18820                           ; BSR set to: 0
 18821                           ;usb_device.c: 2112: }
 18822                           
 18823                           ;usb_device.c: 2111: break;
 18824  003A20  0012               	return	
 18825  003A22                     l268:
 18826                           
 18827                           ; BSR set to: 0
 18828                           
 18829                           ; BSR set to: 0
 18830  003A22  010D               	movlb	13	; () banked
 18831  003A24  5133               	movf	51,w,b	;volatile
 18832                           
 18833                           ; Switch size 1, requested type "space"
 18834                           ; Number of cases is 3, Range of values is 1 to 3
 18835                           ; switch strategies available:
 18836                           ; Name         Instructions Cycles
 18837                           ; simple_byte           10     6 (average)
 18838                           ;	Chosen strategy is simple_byte
 18839  003A26  0A01               	xorlw	1	; case 1
 18840  003A28  B4D8               	btfsc	status,2,c
 18841  003A2A  D773               	goto	l269
 18842  003A2C  0A03               	xorlw	3	; case 2
 18843  003A2E  B4D8               	btfsc	status,2,c
 18844  003A30  D77A               	goto	l271
 18845  003A32  0A01               	xorlw	1	; case 3
 18846  003A34  B4D8               	btfsc	status,2,c
 18847  003A36  D7C2               	goto	l274
 18848  003A38  D7F0               	goto	l277
 18849  003A3A                     __end_of_USBStdGetDscHandler:
 18850                           	opt stack 0
 18851                           tblptru	equ	0xFF8
 18852                           tblptrh	equ	0xFF7
 18853                           tblptrl	equ	0xFF6
 18854                           tablat	equ	0xFF5
 18855                           prodh	equ	0xFF4
 18856                           prodl	equ	0xFF3
 18857                           intcon	equ	0xFF2
 18858                           intcon2	equ	0xFF1
 18859                           intcon3	equ	0xFF0
 18860                           indf0	equ	0xFEF
 18861                           postinc0	equ	0xFEE
 18862                           fsr0h	equ	0xFEA
 18863                           fsr0l	equ	0xFE9
 18864                           wreg	equ	0xFE8
 18865                           indf1	equ	0xFE7
 18866                           postdec1	equ	0xFE5
 18867                           plusw1	equ	0xFE3
 18868                           fsr1h	equ	0xFE2
 18869                           fsr1l	equ	0xFE1
 18870                           indf2	equ	0xFDF
 18871                           postinc2	equ	0xFDE
 18872                           postdec2	equ	0xFDD
 18873                           plusw2	equ	0xFDB
 18874                           fsr2h	equ	0xFDA
 18875                           fsr2l	equ	0xFD9
 18876                           status	equ	0xFD8
 18877                           
 18878 ;; *************** function _USBStdFeatureReqHandler *****************
 18879 ;; Defined at:
 18880 ;;		line 2756 in file "usb_device.c"
 18881 ;; Parameters:    Size  Location     Type
 18882 ;;		None
 18883 ;; Auto vars:     Size  Location     Type
 18884 ;;  p               2   27[COMRAM] PTR struct __BDT
 18885 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18886 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 18887 ;;		 -> UEP0(1), 
 18888 ;;  current_ep_d    1   26[COMRAM] struct .
 18889 ;; Return value:  Size  Location     Type
 18890 ;;                  1    wreg      void 
 18891 ;; Registers used:
 18892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18893 ;; Tracked objects:
 18894 ;;		On entry : 0/0
 18895 ;;		On exit  : 0/0
 18896 ;;		Unchanged: 0/0
 18897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18899 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18901 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18902 ;;Total ram usage:        6 bytes
 18903 ;; Hardware stack levels used:    1
 18904 ;; Hardware stack levels required when called:    4
 18905 ;; This function calls:
 18906 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18907 ;; This function is called by:
 18908 ;;		_USBCheckStdRequest
 18909 ;; This function uses a non-reentrant model
 18910 ;;
 18911                           
 18912                           	psect	text89
 18913  001784                     __ptext89:
 18914                           	opt stack 0
 18915  001784                     _USBStdFeatureReqHandler:
 18916                           	opt stack 22
 18917                           
 18918                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 18919                           
 18920                           ;incstack = 0
 18921  001784  010D               	movlb	13	; () banked
 18922  001786  0532               	decf	50,w,b	;volatile
 18923  001788  A4D8               	btfss	status,2,c
 18924  00178A  D011               	goto	l361
 18925                           
 18926                           ; BSR set to: 13
 18927  00178C  5130               	movf	48,w,b	;volatile
 18928  00178E  0B1F               	andlw	31
 18929  001790  0900               	iorlw	0
 18930  001792  A4D8               	btfss	status,2,c
 18931  001794  D00C               	goto	l361
 18932                           
 18933                           ; BSR set to: 13
 18934                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 18935  001796  0100               	movlb	0	; () banked
 18936  001798  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 18940  00179A  0E03               	movlw	3
 18941  00179C  010D               	movlb	13	; () banked
 18942  00179E  1931               	xorwf	49,w,b	;volatile
 18943  0017A0  A4D8               	btfss	status,2,c
 18944  0017A2  D002               	goto	l360
 18945                           
 18946                           ; BSR set to: 13
 18947                           ;usb_device.c: 2806: RemoteWakeup = 1;
 18948  0017A4  0E01               	movlw	1
 18949  0017A6  D001               	goto	L7
 18950  0017A8                     l360:
 18951                           
 18952                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 18953                           
 18954                           ; BSR set to: 0
 18955  0017A8  0E00               	movlw	0
 18956  0017AA                     L7:
 18957  0017AA  0100               	movlb	0	; () banked
 18958  0017AC  6FB4               	movwf	_RemoteWakeup& (0+255),b
 18959  0017AE                     l361:
 18960                           
 18961                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 18962                           
 18963                           ; BSR set to: 0
 18964  0017AE  010D               	movlb	13	; () banked
 18965  0017B0  5132               	movf	50,w,b	;volatile
 18966  0017B2  A4D8               	btfss	status,2,c
 18967  0017B4  0012               	return	
 18968                           
 18969                           ; BSR set to: 13
 18970  0017B6  5130               	movf	48,w,b	;volatile
 18971  0017B8  0B1F               	andlw	31
 18972  0017BA  0A02               	xorlw	2
 18973  0017BC  A4D8               	btfss	status,2,c
 18974  0017BE  0012               	return	
 18975                           
 18976                           ; BSR set to: 13
 18977  0017C0  5134               	movf	52,w,b	;volatile
 18978  0017C2  0B0F               	andlw	15
 18979  0017C4  0900               	iorlw	0
 18980  0017C6  B4D8               	btfsc	status,2,c
 18981  0017C8  0012               	return	
 18982                           
 18983                           ; BSR set to: 13
 18984  0017CA  5134               	movf	52,w,b	;volatile
 18985  0017CC  0B0F               	andlw	15
 18986  0017CE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18987  0017D0  0E03               	movlw	3
 18988  0017D2  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 18989  0017D4  0012               	return	
 18990                           
 18991                           ; BSR set to: 13
 18992  0017D6  0E20               	movlw	32
 18993  0017D8  0100               	movlb	0	; () banked
 18994  0017DA  19B7               	xorwf	_USBDeviceState& (0+255),w,b
 18995  0017DC  A4D8               	btfss	status,2,c
 18996  0017DE  0012               	return	
 18997                           
 18998                           ; BSR set to: 0
 18999                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 19000  0017E0  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19001                           
 19002                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 19003  0017E2  010D               	movlb	13	; () banked
 19004  0017E4  BF34               	btfsc	52,7,b	;volatile
 19005  0017E6  D019               	goto	l363
 19006                           
 19007                           ; BSR set to: 13
 19008                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19009  0017E8  5134               	movf	52,w,b	;volatile
 19010  0017EA  0B0F               	andlw	15
 19011  0017EC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19012  0017EE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19013  0017F0  0D02               	mullw	2
 19014  0017F2  0E72               	movlw	low _pBDTEntryOut
 19015  0017F4  24F3               	addwf	prodl,w,c
 19016  0017F6  6ED9               	movwf	fsr2l,c
 19017  0017F8  0E00               	movlw	high _pBDTEntryOut
 19018  0017FA  20F4               	addwfc	prodh,w,c
 19019  0017FC  6EDA               	movwf	fsr2h,c
 19020  0017FE  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19021  001802  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19022                           
 19023                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19024  001806  5134               	movf	52,w,b	;volatile
 19025  001808  0B0F               	andlw	15
 19026  00180A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19027  00180C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19028  00180E  0D01               	mullw	1
 19029  001810  0E58               	movlw	low _ep_data_out
 19030  001812  24F3               	addwf	prodl,w,c
 19031  001814  6ED9               	movwf	fsr2l,c
 19032  001816  0E01               	movlw	high _ep_data_out
 19033  001818  D018               	goto	L8
 19034  00181A                     l363:
 19035                           
 19036                           ; BSR set to: 13
 19037                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 19038                           
 19039                           ; BSR set to: 13
 19040  00181A  5134               	movf	52,w,b	;volatile
 19041  00181C  0B0F               	andlw	15
 19042  00181E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19043  001820  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19044  001822  0D02               	mullw	2
 19045  001824  0E6C               	movlw	low _pBDTEntryIn
 19046  001826  24F3               	addwf	prodl,w,c
 19047  001828  6ED9               	movwf	fsr2l,c
 19048  00182A  0E00               	movlw	high _pBDTEntryIn
 19049  00182C  20F4               	addwfc	prodh,w,c
 19050  00182E  6EDA               	movwf	fsr2h,c
 19051  001830  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19052  001834  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19053                           
 19054                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19055  001838  5134               	movf	52,w,b	;volatile
 19056  00183A  0B0F               	andlw	15
 19057  00183C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19058  00183E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19059  001840  0D01               	mullw	1
 19060  001842  0E5B               	movlw	low _ep_data_in
 19061  001844  24F3               	addwf	prodl,w,c
 19062  001846  6ED9               	movwf	fsr2l,c
 19063  001848  0E01               	movlw	high _ep_data_in
 19064  00184A                     L8:
 19065  00184A  20F4               	addwfc	prodh,w,c
 19066  00184C  6EDA               	movwf	fsr2h,c
 19067  00184E  50DF               	movf	indf2,w,c
 19068  001850  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19069                           
 19070                           ; BSR set to: 13
 19071                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 19072                           
 19073                           ; BSR set to: 13
 19074  001852  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19075  001854  D006               	goto	l365
 19076                           
 19077                           ; BSR set to: 13
 19078                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19079  001856  0EFB               	movlw	251
 19080  001858  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 19081  00185A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19082  00185C  0EFF               	movlw	255
 19083  00185E  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19084  001860  D004               	goto	L9
 19085  001862                     l365:
 19086                           
 19087                           ; BSR set to: 13
 19088                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 19089                           
 19090                           ; BSR set to: 13
 19091  001862  0E04               	movlw	4
 19092  001864  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 19093  001866  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19094  001868  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19095  00186A                     L9:
 19096  00186A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19097                           
 19098                           ; BSR set to: 13
 19099                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 19100                           
 19101                           ; BSR set to: 13
 19102  00186C  BF34               	btfsc	52,7,b	;volatile
 19103  00186E  D00A               	goto	l367
 19104                           
 19105                           ; BSR set to: 13
 19106                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 19107  001870  5134               	movf	52,w,b	;volatile
 19108  001872  0B0F               	andlw	15
 19109  001874  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19110  001876  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19111  001878  0D02               	mullw	2
 19112  00187A  0E72               	movlw	low _pBDTEntryOut
 19113  00187C  24F3               	addwf	prodl,w,c
 19114  00187E  6ED9               	movwf	fsr2l,c
 19115  001880  0E00               	movlw	high _pBDTEntryOut
 19116  001882  D009               	goto	L10
 19117  001884                     l367:
 19118                           
 19119                           ; BSR set to: 13
 19120                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 19121                           
 19122                           ; BSR set to: 13
 19123  001884  5134               	movf	52,w,b	;volatile
 19124  001886  0B0F               	andlw	15
 19125  001888  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19126  00188A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19127  00188C  0D02               	mullw	2
 19128  00188E  0E6C               	movlw	low _pBDTEntryIn
 19129  001890  24F3               	addwf	prodl,w,c
 19130  001892  6ED9               	movwf	fsr2l,c
 19131  001894  0E00               	movlw	high _pBDTEntryIn
 19132  001896                     L10:
 19133  001896  20F4               	addwfc	prodh,w,c
 19134  001898  6EDA               	movwf	fsr2h,c
 19135  00189A  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19136  00189E  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19137                           
 19138                           ; BSR set to: 13
 19139                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 19140                           
 19141                           ; BSR set to: 13
 19142  0018A2  0E03               	movlw	3
 19143  0018A4  1931               	xorwf	49,w,b	;volatile
 19144  0018A6  A4D8               	btfss	status,2,c
 19145  0018A8  D02D               	goto	l369
 19146                           
 19147                           ; BSR set to: 13
 19148                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 19149  0018AA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19150  0018AE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19151  0018B2  AEDF               	btfss	indf2,7,c
 19152  0018B4  D01A               	goto	l372
 19153                           
 19154                           ; BSR set to: 13
 19155                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 19156  0018B6  BF34               	btfsc	52,7,b	;volatile
 19157  0018B8  D00A               	goto	l371
 19158                           
 19159                           ; BSR set to: 13
 19160                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 19161  0018BA  5134               	movf	52,w,b	;volatile
 19162  0018BC  0B0F               	andlw	15
 19163  0018BE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19164  0018C0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19165  0018C2  0D01               	mullw	1
 19166  0018C4  0E58               	movlw	low _ep_data_out
 19167  0018C6  24F3               	addwf	prodl,w,c
 19168  0018C8  6ED9               	movwf	fsr2l,c
 19169  0018CA  0E01               	movlw	high _ep_data_out
 19170  0018CC  D00A               	goto	L11
 19171  0018CE                     l371:
 19172                           
 19173                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 19174                           
 19175                           ; BSR set to: 1
 19176  0018CE  010D               	movlb	13	; () banked
 19177  0018D0  5134               	movf	52,w,b	;volatile
 19178  0018D2  0B0F               	andlw	15
 19179  0018D4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19180  0018D6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19181  0018D8  0D01               	mullw	1
 19182  0018DA  0E5B               	movlw	low _ep_data_in
 19183  0018DC  24F3               	addwf	prodl,w,c
 19184  0018DE  6ED9               	movwf	fsr2l,c
 19185  0018E0  0E01               	movlw	high _ep_data_in
 19186  0018E2                     L11:
 19187  0018E2  20F4               	addwfc	prodh,w,c
 19188  0018E4  6EDA               	movwf	fsr2h,c
 19189  0018E6  0101               	movlb	1	; () banked
 19190  0018E8  82DF               	bsf	indf2,1,c
 19191  0018EA                     l372:
 19192                           
 19193                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 19194                           
 19195                           ; BSR set to: 1
 19196                           
 19197                           ; BSR set to: 1
 19198  0018EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19199  0018EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19200  0018F2  0E00               	movlw	0
 19201  0018F4  84DB               	bsf	plusw2,2,c
 19202                           
 19203                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 19204  0018F6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19205  0018FA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19206  0018FE  0E00               	movlw	0
 19207  001900  8EDB               	bsf	plusw2,7,c
 19208                           
 19209                           ;usb_device.c: 2878: }
 19210  001902  0012               	return	
 19211  001904                     l369:
 19212                           
 19213                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 19214  001904  0E04               	movlw	4
 19215  001906  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19216  001908  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19217  00190A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19218  00190C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19219                           
 19220                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 19221  00190E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19222  001912  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19223  001916  AEDF               	btfss	indf2,7,c
 19224  001918  D01B               	goto	l374
 19225                           
 19226                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 19227  00191A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19228  00191E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19229  001922  0E7F               	movlw	127
 19230  001924  16DF               	andwf	indf2,f,c
 19231                           
 19232                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 19233  001926  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19234  00192A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19235  00192E  0E00               	movlw	0
 19236  001930  8CDB               	bsf	plusw2,6,c
 19237                           
 19238                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19239  001932  0E00               	movlw	0
 19240  001934  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19241  001936  0E05               	movlw	5
 19242  001938  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19243  00193A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19244  00193E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19245  001942  0E00               	movlw	0
 19246  001944  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19247  001946  0E02               	movlw	2
 19248  001948  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19249  00194A  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19250                           
 19251                           ;usb_device.c: 2893: }
 19252  00194E  D006               	goto	l375
 19253  001950                     l374:
 19254                           
 19255                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 19256  001950  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19257  001954  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19258  001958  0E00               	movlw	0
 19259  00195A  8CDB               	bsf	plusw2,6,c
 19260  00195C                     l375:
 19261                           
 19262                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19263  00195C  0E04               	movlw	4
 19264  00195E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19265  001960  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19266  001962  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19267  001964  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19268                           
 19269                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 19270  001966  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 19271  001968  D006               	goto	u8040
 19272  00196A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19273  00196E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19274  001972  AEDF               	btfss	indf2,7,c
 19275  001974  D030               	goto	l376
 19276  001976                     u8040:
 19277                           
 19278                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 19279  001976  010D               	movlb	13	; () banked
 19280  001978  BF34               	btfsc	52,7,b	;volatile
 19281  00197A  D00A               	goto	l379
 19282                           
 19283                           ; BSR set to: 13
 19284                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 19285  00197C  5134               	movf	52,w,b	;volatile
 19286  00197E  0B0F               	andlw	15
 19287  001980  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19288  001982  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19289  001984  0D01               	mullw	1
 19290  001986  0E58               	movlw	low _ep_data_out
 19291  001988  24F3               	addwf	prodl,w,c
 19292  00198A  6ED9               	movwf	fsr2l,c
 19293  00198C  0E01               	movlw	high _ep_data_out
 19294  00198E  D00A               	goto	L12
 19295  001990                     l379:
 19296                           
 19297                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 19298                           
 19299                           ; BSR set to: 1
 19300  001990  010D               	movlb	13	; () banked
 19301  001992  5134               	movf	52,w,b	;volatile
 19302  001994  0B0F               	andlw	15
 19303  001996  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19304  001998  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19305  00199A  0D01               	mullw	1
 19306  00199C  0E5B               	movlw	low _ep_data_in
 19307  00199E  24F3               	addwf	prodl,w,c
 19308  0019A0  6ED9               	movwf	fsr2l,c
 19309  0019A2  0E01               	movlw	high _ep_data_in
 19310  0019A4                     L12:
 19311  0019A4  20F4               	addwfc	prodh,w,c
 19312  0019A6  6EDA               	movwf	fsr2h,c
 19313  0019A8  0101               	movlb	1	; () banked
 19314  0019AA  92DF               	bcf	indf2,1,c
 19315                           
 19316                           ; BSR set to: 1
 19317                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19318                           
 19319                           ; BSR set to: 1
 19320  0019AC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19321  0019B0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19322  0019B4  0E3B               	movlw	59
 19323  0019B6  16DF               	andwf	indf2,f,c
 19324                           
 19325                           ; BSR set to: 1
 19326                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19327  0019B8  0E00               	movlw	0
 19328  0019BA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19329  0019BC  0E05               	movlw	5
 19330  0019BE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19331  0019C0  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19332  0019C4  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19333  0019C8  0E00               	movlw	0
 19334  0019CA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19335  0019CC  0E02               	movlw	2
 19336  0019CE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19337  0019D0  ECEB  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19338                           
 19339                           ;usb_device.c: 2923: }
 19340  0019D4  D006               	goto	l381
 19341  0019D6                     l376:
 19342                           
 19343                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 19344  0019D6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19345  0019DA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19346  0019DE  0E3B               	movlw	59
 19347  0019E0  16DF               	andwf	indf2,f,c
 19348  0019E2                     l381:
 19349                           
 19350                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 19351  0019E2  010D               	movlb	13	; () banked
 19352  0019E4  5134               	movf	52,w,b	;volatile
 19353  0019E6  0B0F               	andlw	15
 19354  0019E8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19355  0019EA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19356  0019EC  0D01               	mullw	1
 19357  0019EE  0E26               	movlw	38
 19358  0019F0  24F3               	addwf	prodl,w,c
 19359  0019F2  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 19360  0019F4  0E0F               	movlw	15
 19361  0019F6  20F4               	addwfc	prodh,w,c
 19362  0019F8  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 19363                           
 19364                           ; BSR set to: 13
 19365                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 19366  0019FA  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 19367  0019FE  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 19368  001A02  0EFE               	movlw	254
 19369  001A04  16DF               	andwf	indf2,f,c
 19370                           
 19371                           ; BSR set to: 13
 19372  001A06  0012               	return	
 19373  001A08                     __end_of_USBStdFeatureReqHandler:
 19374                           	opt stack 0
 19375                           tblptru	equ	0xFF8
 19376                           tblptrh	equ	0xFF7
 19377                           tblptrl	equ	0xFF6
 19378                           tablat	equ	0xFF5
 19379                           prodh	equ	0xFF4
 19380                           prodl	equ	0xFF3
 19381                           intcon	equ	0xFF2
 19382                           intcon2	equ	0xFF1
 19383                           intcon3	equ	0xFF0
 19384                           indf0	equ	0xFEF
 19385                           postinc0	equ	0xFEE
 19386                           fsr0h	equ	0xFEA
 19387                           fsr0l	equ	0xFE9
 19388                           wreg	equ	0xFE8
 19389                           indf1	equ	0xFE7
 19390                           postdec1	equ	0xFE5
 19391                           plusw1	equ	0xFE3
 19392                           fsr1h	equ	0xFE2
 19393                           fsr1l	equ	0xFE1
 19394                           indf2	equ	0xFDF
 19395                           postinc2	equ	0xFDE
 19396                           postdec2	equ	0xFDD
 19397                           plusw2	equ	0xFDB
 19398                           fsr2h	equ	0xFDA
 19399                           fsr2l	equ	0xFD9
 19400                           status	equ	0xFD8
 19401                           
 19402 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 19403 ;; Defined at:
 19404 ;;		line 54 in file "usb_events.c"
 19405 ;; Parameters:    Size  Location     Type
 19406 ;;  event           2   15[COMRAM] enum E6832
 19407 ;;  pdata           2   17[COMRAM] PTR void 
 19408 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 19409 ;;		 -> BDT(48), 
 19410 ;;  size            2   19[COMRAM] unsigned int 
 19411 ;; Auto vars:     Size  Location     Type
 19412 ;;		None
 19413 ;; Return value:  Size  Location     Type
 19414 ;;                  1    wreg      unsigned char 
 19415 ;; Registers used:
 19416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19417 ;; Tracked objects:
 19418 ;;		On entry : 0/0
 19419 ;;		On exit  : 0/0
 19420 ;;		Unchanged: 0/0
 19421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19422 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19425 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19426 ;;Total ram usage:        8 bytes
 19427 ;; Hardware stack levels used:    1
 19428 ;; Hardware stack levels required when called:    3
 19429 ;; This function calls:
 19430 ;;		_APP_DeviceCustomHIDInitialize
 19431 ;;		_APP_DeviceMSDInitialize
 19432 ;;		_MSDTransferTerminated
 19433 ;;		_SYSTEM_Initialize
 19434 ;;		_USBCheckHIDRequest
 19435 ;;		_USBCheckMSDRequest
 19436 ;; This function is called by:
 19437 ;;		_USBDeviceTasks
 19438 ;;		_USBStdSetCfgHandler
 19439 ;;		_USBSuspend
 19440 ;;		_USBWakeFromSuspend
 19441 ;;		_USBCtrlTrfSetupHandler
 19442 ;;		_USBCheckStdRequest
 19443 ;;		_USBStdFeatureReqHandler
 19444 ;; This function uses a non-reentrant model
 19445 ;;
 19446                           
 19447                           	psect	text90
 19448  005DD6                     __ptext90:
 19449                           	opt stack 0
 19450  005DD6                     _USER_USB_CALLBACK_EVENT_HANDLER:
 19451                           	opt stack 26
 19452                           
 19453                           ;usb_events.c: 56: switch((int)event)
 19454                           
 19455                           ;incstack = 0
 19456  005DD6  D019               	goto	l800
 19457  005DD8                     
 19458                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 19459  005DD8  0E01               	movlw	1
 19460  005DDA  EC31  F037         	call	_SYSTEM_Initialize
 19461                           
 19462                           ;usb_events.c: 79: break;
 19463  005DDE  0012               	return	
 19464  005DE0                     
 19465                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 19466  005DE0  0E02               	movlw	2
 19467  005DE2  EC31  F037         	call	_SYSTEM_Initialize
 19468                           
 19469                           ;usb_events.c: 90: break;
 19470  005DE6  0012               	return	
 19471  005DE8                     
 19472                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 19473  005DE8  EC40  F03A         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 19474                           
 19475                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 19476  005DEC  ECE6  F03C         	call	_APP_DeviceMSDInitialize	;wreg free
 19477                           
 19478                           ;usb_events.c: 100: break;
 19479                           
 19480                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 19481                           
 19482                           ;usb_events.c: 97: break;
 19483  005DF0  0012               	return	
 19484  005DF2                     
 19485                           ;usb_events.c: 105: USBCheckHIDRequest();
 19486  005DF2  ECAE  F022         	call	_USBCheckHIDRequest	;wreg free
 19487                           
 19488                           ;usb_events.c: 108: USBCheckMSDRequest();
 19489  005DF6  ECFC  F027         	call	_USBCheckMSDRequest	;wreg free
 19490                           
 19491                           ;usb_events.c: 112: break;
 19492                           
 19493                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 19494                           
 19495                           ;usb_events.c: 109: break;
 19496  005DFA  0012               	return	
 19497  005DFC                     
 19498                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 19499  005DFC  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 19500  005E00  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 19501  005E04  ECDB  F036         	call	_MSDTransferTerminated	;wreg free
 19502                           
 19503                           ;usb_events.c: 129: }
 19504                           
 19505                           ;usb_events.c: 128: break;
 19506                           
 19507                           ;usb_events.c: 127: default:
 19508                           
 19509                           ;usb_events.c: 125: break;
 19510  005E08  0012               	return	
 19511  005E0A                     l800:
 19512  005E0A  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 19513  005E0E  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 19514                           
 19515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19516                           ; Switch size 1, requested type "space"
 19517                           ; Number of cases is 2, Range of values is 0 to 127
 19518                           ; switch strategies available:
 19519                           ; Name         Instructions Cycles
 19520                           ; simple_byte            7     4 (average)
 19521                           ;	Chosen strategy is simple_byte
 19522  005E12  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 19523  005E14  0A00               	xorlw	0	; case 0
 19524  005E16  B4D8               	btfsc	status,2,c
 19525  005E18  D004               	goto	l14397
 19526  005E1A  0A7F               	xorlw	127	; case 127
 19527  005E1C  A4D8               	btfss	status,2,c
 19528  005E1E  0012               	return	
 19529  005E20  D01A               	goto	l14399
 19530  005E22                     l14397:
 19531                           
 19532                           ; Switch size 1, requested type "space"
 19533                           ; Number of cases is 8, Range of values is 1 to 117
 19534                           ; switch strategies available:
 19535                           ; Name         Instructions Cycles
 19536                           ; simple_byte           25    13 (average)
 19537                           ;	Chosen strategy is simple_byte
 19538  005E22  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19539  005E24  0A01               	xorlw	1	; case 1
 19540  005E26  B4D8               	btfsc	status,2,c
 19541  005E28  D7DF               	goto	l806
 19542  005E2A  0A03               	xorlw	3	; case 2
 19543  005E2C  B4D8               	btfsc	status,2,c
 19544  005E2E  0012               	return	
 19545  005E30  0A01               	xorlw	1	; case 3
 19546  005E32  B4D8               	btfsc	status,2,c
 19547  005E34  D7DE               	goto	l808
 19548  005E36  0A06               	xorlw	6	; case 5
 19549  005E38  B4D8               	btfsc	status,2,c
 19550  005E3A  D7E0               	goto	l810
 19551  005E3C  0A77               	xorlw	119	; case 114
 19552  005E3E  B4D8               	btfsc	status,2,c
 19553  005E40  0012               	return	
 19554  005E42  0A01               	xorlw	1	; case 115
 19555  005E44  B4D8               	btfsc	status,2,c
 19556  005E46  0012               	return	
 19557  005E48  0A07               	xorlw	7	; case 116
 19558  005E4A  B4D8               	btfsc	status,2,c
 19559  005E4C  D7C9               	goto	l805
 19560  005E4E  0A01               	xorlw	1	; case 117
 19561  005E50  A4D8               	btfss	status,2,c
 19562  005E52  0012               	return	
 19563  005E54  D7C1               	goto	l804
 19564  005E56                     l14399:
 19565                           
 19566                           ; Switch size 1, requested type "space"
 19567                           ; Number of cases is 1, Range of values is 255 to 255
 19568                           ; switch strategies available:
 19569                           ; Name         Instructions Cycles
 19570                           ; simple_byte            4     3 (average)
 19571                           ;	Chosen strategy is simple_byte
 19572  005E56  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19573  005E58  0AFF               	xorlw	255	; case 255
 19574  005E5A  0012               	return	
 19575  005E5C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 19576                           	opt stack 0
 19577                           tblptru	equ	0xFF8
 19578                           tblptrh	equ	0xFF7
 19579                           tblptrl	equ	0xFF6
 19580                           tablat	equ	0xFF5
 19581                           prodh	equ	0xFF4
 19582                           prodl	equ	0xFF3
 19583                           intcon	equ	0xFF2
 19584                           intcon2	equ	0xFF1
 19585                           intcon3	equ	0xFF0
 19586                           indf0	equ	0xFEF
 19587                           postinc0	equ	0xFEE
 19588                           fsr0h	equ	0xFEA
 19589                           fsr0l	equ	0xFE9
 19590                           wreg	equ	0xFE8
 19591                           indf1	equ	0xFE7
 19592                           postdec1	equ	0xFE5
 19593                           plusw1	equ	0xFE3
 19594                           fsr1h	equ	0xFE2
 19595                           fsr1l	equ	0xFE1
 19596                           indf2	equ	0xFDF
 19597                           postinc2	equ	0xFDE
 19598                           postdec2	equ	0xFDD
 19599                           plusw2	equ	0xFDB
 19600                           fsr2h	equ	0xFDA
 19601                           fsr2l	equ	0xFD9
 19602                           status	equ	0xFD8
 19603                           
 19604 ;; *************** function _USBCheckMSDRequest *****************
 19605 ;; Defined at:
 19606 ;;		line 218 in file "usb_device_msd.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;		None
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  1    wreg      void 
 19613 ;; Registers used:
 19614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19624 ;;Total ram usage:        4 bytes
 19625 ;; Hardware stack levels used:    1
 19626 ;; Hardware stack levels required when called:    1
 19627 ;; This function calls:
 19628 ;;		_USBTransferOnePacket
 19629 ;; This function is called by:
 19630 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text91
 19635  004FF8                     __ptext91:
 19636                           	opt stack 0
 19637  004FF8                     _USBCheckMSDRequest:
 19638                           	opt stack 27
 19639                           
 19640                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 19641                           
 19642                           ;incstack = 0
 19643  004FF8  010D               	movlb	13	; () banked
 19644  004FFA  5130               	movf	48,w,b	;volatile
 19645  004FFC  0B1F               	andlw	31
 19646  004FFE  06E8               	decf	wreg,f,c
 19647  005000  A4D8               	btfss	status,2,c
 19648  005002  0012               	return	
 19649                           
 19650                           ; BSR set to: 13
 19651                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 19652                           
 19653                           ; BSR set to: 13
 19654                           
 19655                           ; BSR set to: 13
 19656                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 19657  005004  5134               	movf	52,w,b	;volatile
 19658  005006  A4D8               	btfss	status,2,c
 19659  005008  0012               	return	
 19660  00500A  D04E               	goto	l529
 19661  00500C                     
 19662                           ; BSR set to: 13
 19663                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 19664                           
 19665                           ; BSR set to: 13
 19666  00500C  5132               	movf	50,w,b	;volatile
 19667  00500E  1133               	iorwf	51,w,b	;volatile
 19668  005010  A4D8               	btfss	status,2,c
 19669  005012  0012               	return	
 19670                           
 19671                           ; BSR set to: 13
 19672  005014  5136               	movf	54,w,b	;volatile
 19673  005016  1137               	iorwf	55,w,b	;volatile
 19674  005018  A4D8               	btfss	status,2,c
 19675  00501A  0012               	return	
 19676                           
 19677                           ; BSR set to: 13
 19678                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 19679                           
 19680                           ; BSR set to: 13
 19681                           
 19682                           ; BSR set to: 13
 19683                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 19684  00501C  0E00               	movlw	0
 19685  00501E  0100               	movlb	0	; () banked
 19686  005020  6FA9               	movwf	_MSD_State& (0+255),b
 19687                           
 19688                           ; BSR set to: 0
 19689                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 19690  005022  69A8               	setf	_MSDCommandState& (0+255),b
 19691                           
 19692                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 19693  005024  0E00               	movlw	0
 19694  005026  6FA7               	movwf	_MSDReadState& (0+255),b
 19695                           
 19696                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 19697  005028  0E00               	movlw	0
 19698  00502A  6FA6               	movwf	_MSDWriteState& (0+255),b
 19699                           
 19700                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 19701  00502C  0E01               	movlw	1
 19702  00502E  6FA1               	movwf	_MSDCBWValid& (0+255),b
 19703                           
 19704                           ; BSR set to: 0
 19705                           
 19706                           ; BSR set to: 0
 19707                           
 19708                           ; BSR set to: 0
 19709                           
 19710                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 19711  005030  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 19712  005034  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 19713                           
 19714                           ; BSR set to: 0
 19715  005038  500C               	movf	_USBCheckMSDRequest$2319,w,c
 19716  00503A  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 19717  00503C  B4D8               	btfsc	status,2,c
 19718  00503E  D00A               	goto	u6460
 19719                           
 19720                           ; BSR set to: 0
 19721                           
 19722                           ; BSR set to: 0
 19723                           
 19724                           ; BSR set to: 0
 19725                           
 19726                           ; BSR set to: 0
 19727  005040  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 19728  005044  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 19729                           
 19730                           ; BSR set to: 0
 19731                           
 19732                           ; BSR set to: 0
 19733  005048  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 19734  00504C  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 19735  005050  BEDF               	btfsc	indf2,7,c
 19736  005052  D00F               	goto	l534
 19737  005054                     u6460:
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19741                           
 19742                           ; BSR set to: 0
 19743  005054  0E00               	movlw	0
 19744  005056  6E01               	movwf	USBTransferOnePacket@dir,c
 19745  005058  0E40               	movlw	64
 19746  00505A  6E02               	movwf	USBTransferOnePacket@data,c
 19747  00505C  0E0D               	movlw	13
 19748  00505E  6E03               	movwf	USBTransferOnePacket@data+1,c
 19749  005060  0E40               	movlw	64
 19750  005062  6E04               	movwf	USBTransferOnePacket@len,c
 19751  005064  0E02               	movlw	2
 19752  005066  EC52  F020         	call	_USBTransferOnePacket
 19753  00506A  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19754  00506E  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19755  005072                     l534:
 19756                           
 19757                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 19758  005072  0E80               	movlw	128
 19759  005074  0100               	movlb	0	; () banked
 19760  005076  6F69               	movwf	(_inPipes+3)& (0+255),b
 19761                           
 19762                           ;usb_device_msd.c: 263: break;
 19763  005078  0012               	return	
 19764  00507A                     
 19765                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 19766                           
 19767                           ; BSR set to: 0
 19768  00507A  010D               	movlb	13	; () banked
 19769  00507C  5132               	movf	50,w,b	;volatile
 19770  00507E  1133               	iorwf	51,w,b	;volatile
 19771  005080  A4D8               	btfss	status,2,c
 19772  005082  0012               	return	
 19773                           
 19774                           ; BSR set to: 13
 19775  005084  0536               	decf	54,w,b	;volatile
 19776  005086  1137               	iorwf	55,w,b	;volatile
 19777  005088  A4D8               	btfss	status,2,c
 19778  00508A  0012               	return	
 19779                           
 19780                           ; BSR set to: 13
 19781                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 19782                           
 19783                           ; BSR set to: 13
 19784                           
 19785                           ; BSR set to: 13
 19786                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 19787  00508C  0E00               	movlw	0
 19788  00508E  6F38               	movwf	56,b	;volatile
 19789                           
 19790                           ; BSR set to: 13
 19791                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19792  005090  0E38               	movlw	56
 19793  005092  0100               	movlb	0	; () banked
 19794  005094  6F66               	movwf	_inPipes& (0+255),b
 19795  005096  0E0D               	movlw	13
 19796  005098  6F67               	movwf	(_inPipes+1)& (0+255),b
 19797                           
 19798                           ; BSR set to: 0
 19799  00509A  0E00               	movlw	0
 19800  00509C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19801  00509E  0E01               	movlw	1
 19802  0050A0  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19803                           
 19804                           ; BSR set to: 0
 19805  0050A2  0EC1               	movlw	193
 19806  0050A4  6F69               	movwf	(_inPipes+3)& (0+255),b
 19807                           
 19808                           ; BSR set to: 0
 19809                           ;usb_device_msd.c: 278: }
 19810                           
 19811                           ;usb_device_msd.c: 277: break;
 19812  0050A6  0012               	return	
 19813  0050A8                     l529:
 19814                           
 19815                           ; BSR set to: 0
 19816  0050A8  010D               	movlb	13	; () banked
 19817  0050AA  5131               	movf	49,w,b	;volatile
 19818                           
 19819                           ; Switch size 1, requested type "space"
 19820                           ; Number of cases is 2, Range of values is 254 to 255
 19821                           ; switch strategies available:
 19822                           ; Name         Instructions Cycles
 19823                           ; simple_byte            7     4 (average)
 19824                           ;	Chosen strategy is simple_byte
 19825  0050AC  0AFE               	xorlw	254	; case 254
 19826  0050AE  B4D8               	btfsc	status,2,c
 19827  0050B0  D7E4               	goto	l546
 19828  0050B2  0A01               	xorlw	1	; case 255
 19829  0050B4  A4D8               	btfss	status,2,c
 19830  0050B6  0012               	return	
 19831  0050B8  D7A9               	goto	l530
 19832  0050BA                     __end_of_USBCheckMSDRequest:
 19833                           	opt stack 0
 19834                           tblptru	equ	0xFF8
 19835                           tblptrh	equ	0xFF7
 19836                           tblptrl	equ	0xFF6
 19837                           tablat	equ	0xFF5
 19838                           prodh	equ	0xFF4
 19839                           prodl	equ	0xFF3
 19840                           intcon	equ	0xFF2
 19841                           intcon2	equ	0xFF1
 19842                           intcon3	equ	0xFF0
 19843                           indf0	equ	0xFEF
 19844                           postinc0	equ	0xFEE
 19845                           fsr0h	equ	0xFEA
 19846                           fsr0l	equ	0xFE9
 19847                           wreg	equ	0xFE8
 19848                           indf1	equ	0xFE7
 19849                           postdec1	equ	0xFE5
 19850                           plusw1	equ	0xFE3
 19851                           fsr1h	equ	0xFE2
 19852                           fsr1l	equ	0xFE1
 19853                           indf2	equ	0xFDF
 19854                           postinc2	equ	0xFDE
 19855                           postdec2	equ	0xFDD
 19856                           plusw2	equ	0xFDB
 19857                           fsr2h	equ	0xFDA
 19858                           fsr2l	equ	0xFD9
 19859                           status	equ	0xFD8
 19860                           
 19861 ;; *************** function _USBCheckHIDRequest *****************
 19862 ;; Defined at:
 19863 ;;		line 153 in file "usb_device_hid.c"
 19864 ;; Parameters:    Size  Location     Type
 19865 ;;		None
 19866 ;; Auto vars:     Size  Location     Type
 19867 ;;		None
 19868 ;; Return value:  Size  Location     Type
 19869 ;;                  1    wreg      void 
 19870 ;; Registers used:
 19871 ;;		wreg, status,2, status,0
 19872 ;; Tracked objects:
 19873 ;;		On entry : 0/0
 19874 ;;		On exit  : 0/0
 19875 ;;		Unchanged: 0/0
 19876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19881 ;;Total ram usage:        0 bytes
 19882 ;; Hardware stack levels used:    1
 19883 ;; This function calls:
 19884 ;;		Nothing
 19885 ;; This function is called by:
 19886 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19887 ;; This function uses a non-reentrant model
 19888 ;;
 19889                           
 19890                           	psect	text92
 19891  00455C                     __ptext92:
 19892                           	opt stack 0
 19893  00455C                     _USBCheckHIDRequest:
 19894                           	opt stack 28
 19895                           
 19896                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 19897                           
 19898                           ;incstack = 0
 19899  00455C  010D               	movlb	13	; () banked
 19900  00455E  5130               	movf	48,w,b	;volatile
 19901  004560  0B1F               	andlw	31
 19902  004562  06E8               	decf	wreg,f,c
 19903  004564  A4D8               	btfss	status,2,c
 19904  004566  0012               	return	
 19905                           
 19906                           ; BSR set to: 13
 19907                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 19908                           
 19909                           ; BSR set to: 13
 19910                           
 19911                           ; BSR set to: 13
 19912  004568  5134               	movf	52,w,b	;volatile
 19913  00456A  A4D8               	btfss	status,2,c
 19914  00456C  0012               	return	
 19915                           
 19916                           ; BSR set to: 13
 19917                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 19918                           
 19919                           ; BSR set to: 13
 19920                           
 19921                           ; BSR set to: 13
 19922  00456E  0E06               	movlw	6
 19923  004570  1931               	xorwf	49,w,b	;volatile
 19924  004572  B4D8               	btfsc	status,2,c
 19925  004574  D01A               	goto	l411
 19926  004576  D022               	goto	l414
 19927  004578                     
 19928                           ; BSR set to: 13
 19929                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 19930                           
 19931                           ; BSR set to: 13
 19932  004578  0100               	movlb	0	; () banked
 19933  00457A  05BD               	decf	_USBActiveConfiguration& (0+255),w,b
 19934  00457C  A4D8               	btfss	status,2,c
 19935  00457E  D01E               	goto	l414
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 19939  004580  0EB9               	movlw	low (_configDescriptor1+18)
 19940  004582  6F66               	movwf	_inPipes& (0+255),b
 19941  004584  0E8E               	movlw	high (_configDescriptor1+18)
 19942  004586  6F67               	movwf	(_inPipes+1)& (0+255),b
 19943                           
 19944                           ; BSR set to: 0
 19945  004588  0E00               	movlw	0
 19946  00458A  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19947  00458C  0E09               	movlw	9
 19948  00458E  D00B               	goto	L13
 19949  004590                     l9401:
 19950                           
 19951                           ; BSR set to: 0
 19952  004590  0EC0               	movlw	192
 19953  004592  6F69               	movwf	(_inPipes+3)& (0+255),b
 19954                           
 19955                           ; BSR set to: 0
 19956                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 19957  004594  D013               	goto	l414
 19958  004596                     
 19959                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 19960                           
 19961                           ; BSR set to: 0
 19962  004596  0E6D               	movlw	low _hid_rpt01
 19963  004598  0100               	movlb	0	; () banked
 19964  00459A  6F66               	movwf	_inPipes& (0+255),b
 19965  00459C  0E8F               	movlw	high _hid_rpt01
 19966  00459E  6F67               	movwf	(_inPipes+1)& (0+255),b
 19967                           
 19968                           ; BSR set to: 0
 19969  0045A0  0E00               	movlw	0
 19970  0045A2  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19971  0045A4  0E1D               	movlw	29
 19972  0045A6                     L13:
 19973  0045A6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19974  0045A8  D7F3               	goto	l9401
 19975  0045AA                     l411:
 19976                           
 19977                           ; BSR set to: 0
 19978  0045AA  010D               	movlb	13	; () banked
 19979  0045AC  5133               	movf	51,w,b	;volatile
 19980                           
 19981                           ; Switch size 1, requested type "space"
 19982                           ; Number of cases is 3, Range of values is 33 to 35
 19983                           ; switch strategies available:
 19984                           ; Name         Instructions Cycles
 19985                           ; simple_byte           10     6 (average)
 19986                           ;	Chosen strategy is simple_byte
 19987  0045AE  0A21               	xorlw	33	; case 33
 19988  0045B0  B4D8               	btfsc	status,2,c
 19989  0045B2  D7E2               	goto	l412
 19990  0045B4  0A03               	xorlw	3	; case 34
 19991  0045B6  B4D8               	btfsc	status,2,c
 19992  0045B8  D7EE               	goto	l415
 19993  0045BA  0A01               	xorlw	1	; case 35
 19994  0045BC                     l414:
 19995                           
 19996                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 19997                           
 19998                           ; BSR set to: 13
 19999                           
 20000                           ; BSR set to: 13
 20001  0045BC  010D               	movlb	13	; () banked
 20002  0045BE  3930               	swapf	48,w,b	;volatile
 20003  0045C0  32E8               	rrcf	wreg,f,c
 20004  0045C2  0B03               	andlw	3
 20005  0045C4  06E8               	decf	wreg,f,c
 20006  0045C6  A4D8               	btfss	status,2,c
 20007  0045C8  0012               	return	
 20008  0045CA  D024               	goto	l418
 20009  0045CC                     
 20010                           ; BSR set to: 13
 20011                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20012                           
 20013                           ; BSR set to: 13
 20014  0045CC  0EBB               	movlw	low _idle_rate
 20015  0045CE  0100               	movlb	0	; () banked
 20016  0045D0  6F66               	movwf	_inPipes& (0+255),b
 20017  0045D2  0E00               	movlw	high _idle_rate
 20018  0045D4  6F67               	movwf	(_inPipes+1)& (0+255),b
 20019                           
 20020                           ; BSR set to: 0
 20021  0045D6  0E00               	movlw	0
 20022  0045D8  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20023  0045DA  0E01               	movlw	1
 20024  0045DC  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20025                           
 20026                           ; BSR set to: 0
 20027  0045DE  0EC1               	movlw	193
 20028  0045E0  6F69               	movwf	(_inPipes+3)& (0+255),b
 20029                           
 20030                           ;usb_device_hid.c: 223: break;
 20031  0045E2  0012               	return	
 20032  0045E4                     
 20033                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 20034                           
 20035                           ; BSR set to: 0
 20036  0045E4  0E80               	movlw	128
 20037  0045E6  0100               	movlb	0	; () banked
 20038  0045E8  6F69               	movwf	(_inPipes+3)& (0+255),b
 20039                           
 20040                           ; BSR set to: 0
 20041                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 20042  0045EA  CD33 F0BB          	movff	3379,_idle_rate	;volatile
 20043                           
 20044                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 20045  0045EE  0012               	return	
 20046  0045F0                     
 20047                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 20048                           
 20049                           ; BSR set to: 0
 20050  0045F0  0EBA               	movlw	low _active_protocol
 20051  0045F2  0100               	movlb	0	; () banked
 20052  0045F4  6F66               	movwf	_inPipes& (0+255),b
 20053  0045F6  0E00               	movlw	high _active_protocol
 20054  0045F8  6F67               	movwf	(_inPipes+1)& (0+255),b
 20055                           
 20056                           ; BSR set to: 0
 20057  0045FA  0E00               	movlw	0
 20058  0045FC  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20059  0045FE  0E01               	movlw	1
 20060  004600  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20061                           
 20062                           ; BSR set to: 0
 20063  004602  0E81               	movlw	129
 20064  004604  6F69               	movwf	(_inPipes+3)& (0+255),b
 20065                           
 20066                           ;usb_device_hid.c: 234: break;
 20067  004606  0012               	return	
 20068  004608                     
 20069                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 20070                           
 20071                           ; BSR set to: 0
 20072  004608  0E80               	movlw	128
 20073  00460A  0100               	movlb	0	; () banked
 20074  00460C  6F69               	movwf	(_inPipes+3)& (0+255),b
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 20078  00460E  CD32 F0BA          	movff	3378,_active_protocol	;volatile
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;usb_device_hid.c: 239: }
 20082                           
 20083                           ;usb_device_hid.c: 238: break;
 20084  004612  0012               	return	
 20085  004614                     l418:
 20086                           
 20087                           ; BSR set to: 0
 20088  004614  010D               	movlb	13	; () banked
 20089  004616  5131               	movf	49,w,b	;volatile
 20090                           
 20091                           ; Switch size 1, requested type "space"
 20092                           ; Number of cases is 6, Range of values is 1 to 11
 20093                           ; switch strategies available:
 20094                           ; Name         Instructions Cycles
 20095                           ; simple_byte           19    10 (average)
 20096                           ;	Chosen strategy is simple_byte
 20097  004618  0A01               	xorlw	1	; case 1
 20098  00461A  B4D8               	btfsc	status,2,c
 20099  00461C  0012               	return	
 20100  00461E  0A03               	xorlw	3	; case 2
 20101  004620  B4D8               	btfsc	status,2,c
 20102  004622  D7D4               	goto	l422
 20103  004624  0A01               	xorlw	1	; case 3
 20104  004626  B4D8               	btfsc	status,2,c
 20105  004628  D7E3               	goto	l424
 20106  00462A  0A0A               	xorlw	10	; case 9
 20107  00462C  B4D8               	btfsc	status,2,c
 20108  00462E  0012               	return	
 20109  004630  0A03               	xorlw	3	; case 10
 20110  004632  B4D8               	btfsc	status,2,c
 20111  004634  D7D7               	goto	l423
 20112  004636  0A01               	xorlw	1	; case 11
 20113  004638  A4D8               	btfss	status,2,c
 20114  00463A  0012               	return	
 20115  00463C  D7E5               	goto	l425
 20116  00463E                     __end_of_USBCheckHIDRequest:
 20117                           	opt stack 0
 20118                           tblptru	equ	0xFF8
 20119                           tblptrh	equ	0xFF7
 20120                           tblptrl	equ	0xFF6
 20121                           tablat	equ	0xFF5
 20122                           prodh	equ	0xFF4
 20123                           prodl	equ	0xFF3
 20124                           intcon	equ	0xFF2
 20125                           intcon2	equ	0xFF1
 20126                           intcon3	equ	0xFF0
 20127                           indf0	equ	0xFEF
 20128                           postinc0	equ	0xFEE
 20129                           fsr0h	equ	0xFEA
 20130                           fsr0l	equ	0xFE9
 20131                           wreg	equ	0xFE8
 20132                           indf1	equ	0xFE7
 20133                           postdec1	equ	0xFE5
 20134                           plusw1	equ	0xFE3
 20135                           fsr1h	equ	0xFE2
 20136                           fsr1l	equ	0xFE1
 20137                           indf2	equ	0xFDF
 20138                           postinc2	equ	0xFDE
 20139                           postdec2	equ	0xFDD
 20140                           plusw2	equ	0xFDB
 20141                           fsr2h	equ	0xFDA
 20142                           fsr2l	equ	0xFD9
 20143                           status	equ	0xFD8
 20144                           
 20145 ;; *************** function _SYSTEM_Initialize *****************
 20146 ;; Defined at:
 20147 ;;		line 80 in file "system.c"
 20148 ;; Parameters:    Size  Location     Type
 20149 ;;  state           1    wreg     enum E6623
 20150 ;; Auto vars:     Size  Location     Type
 20151 ;;  state           1    4[COMRAM] enum E6623
 20152 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 20153 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  1    wreg      void 
 20156 ;; Registers used:
 20157 ;;		wreg, status,2, status,0
 20158 ;; Tracked objects:
 20159 ;;		On entry : 0/0
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20164 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20167 ;;Total ram usage:        5 bytes
 20168 ;; Hardware stack levels used:    1
 20169 ;; This function calls:
 20170 ;;		Nothing
 20171 ;; This function is called by:
 20172 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20173 ;;		_main
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text93
 20178  006E62                     __ptext93:
 20179                           	opt stack 0
 20180  006E62                     _SYSTEM_Initialize:
 20181                           	opt stack 28
 20182                           
 20183                           ;incstack = 0
 20184                           ;SYSTEM_Initialize@state stored from wreg
 20185  006E62  6E05               	movwf	SYSTEM_Initialize@state,c
 20186                           
 20187                           ;system.c: 82: switch(state)
 20188  006E64  D01D               	goto	l888
 20189  006E66                     
 20190                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 20191  006E66  0E02               	movlw	2
 20192  006E68  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 20193  006E6A  0E58               	movlw	88
 20194  006E6C  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 20195                           
 20196                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 20197  006E6E  8C9B               	bsf	3995,6,c	;volatile
 20198  006E70                     l9587:
 20199  006E70  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 20200  006E72  A0D8               	btfss	status,0,c
 20201  006E74  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 20202  006E76  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 20203  006E78  E1FB               	bnz	l9587
 20204  006E7A  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 20205  006E7C  B4D8               	btfsc	status,2,c
 20206  006E7E  0012               	return	
 20207  006E80  D7F7               	goto	l891
 20208  006E82                     
 20209                           ;system.c: 119: OSCCON = 0x70;
 20210  006E82  0E70               	movlw	112
 20211  006E84  6ED3               	movwf	4051,c	;volatile
 20212                           
 20213                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 20214  006E86  0E03               	movlw	3
 20215  006E88  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2821+1,c
 20216  006E8A  0E20               	movlw	32
 20217  006E8C  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2821,c
 20218  006E8E                     l9591:
 20219  006E8E  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2821,f,c
 20220  006E90  A0D8               	btfss	status,0,c
 20221  006E92  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2821+1,f,c
 20222  006E94  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2821,w,c
 20223  006E96  E1FB               	bnz	l9591
 20224  006E98  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2821+1,w,c
 20225  006E9A  B4D8               	btfsc	status,2,c
 20226  006E9C  0012               	return	
 20227  006E9E  D7F7               	goto	l897
 20228  006EA0                     l888:
 20229  006EA0  5005               	movf	SYSTEM_Initialize@state,w,c
 20230                           
 20231                           ; Switch size 1, requested type "space"
 20232                           ; Number of cases is 3, Range of values is 0 to 2
 20233                           ; switch strategies available:
 20234                           ; Name         Instructions Cycles
 20235                           ; simple_byte           10     6 (average)
 20236                           ;	Chosen strategy is simple_byte
 20237  006EA2  0A00               	xorlw	0	; case 0
 20238  006EA4  B4D8               	btfsc	status,2,c
 20239  006EA6  D7DF               	goto	l889
 20240  006EA8  0A01               	xorlw	1	; case 1
 20241  006EAA  B4D8               	btfsc	status,2,c
 20242  006EAC  0012               	return	
 20243  006EAE  0A03               	xorlw	3	; case 2
 20244  006EB0  A4D8               	btfss	status,2,c
 20245  006EB2  0012               	return	
 20246  006EB4  D7E6               	goto	l895
 20247  006EB6                     __end_of_SYSTEM_Initialize:
 20248                           	opt stack 0
 20249                           tblptru	equ	0xFF8
 20250                           tblptrh	equ	0xFF7
 20251                           tblptrl	equ	0xFF6
 20252                           tablat	equ	0xFF5
 20253                           prodh	equ	0xFF4
 20254                           prodl	equ	0xFF3
 20255                           intcon	equ	0xFF2
 20256                           intcon2	equ	0xFF1
 20257                           intcon3	equ	0xFF0
 20258                           indf0	equ	0xFEF
 20259                           postinc0	equ	0xFEE
 20260                           fsr0h	equ	0xFEA
 20261                           fsr0l	equ	0xFE9
 20262                           wreg	equ	0xFE8
 20263                           indf1	equ	0xFE7
 20264                           postdec1	equ	0xFE5
 20265                           plusw1	equ	0xFE3
 20266                           fsr1h	equ	0xFE2
 20267                           fsr1l	equ	0xFE1
 20268                           indf2	equ	0xFDF
 20269                           postinc2	equ	0xFDE
 20270                           postdec2	equ	0xFDD
 20271                           plusw2	equ	0xFDB
 20272                           fsr2h	equ	0xFDA
 20273                           fsr2l	equ	0xFD9
 20274                           status	equ	0xFD8
 20275                           
 20276 ;; *************** function _MSDTransferTerminated *****************
 20277 ;; Defined at:
 20278 ;;		line 1674 in file "usb_device_msd.c"
 20279 ;; Parameters:    Size  Location     Type
 20280 ;;  handle          2   11[COMRAM] PTR void 
 20281 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20282 ;;		 -> BDT(48), 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;		None
 20285 ;; Return value:  Size  Location     Type
 20286 ;;                  1    wreg      void 
 20287 ;; Registers used:
 20288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20289 ;; Tracked objects:
 20290 ;;		On entry : 0/0
 20291 ;;		On exit  : 0/0
 20292 ;;		Unchanged: 0/0
 20293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20298 ;;Total ram usage:        4 bytes
 20299 ;; Hardware stack levels used:    1
 20300 ;; Hardware stack levels required when called:    1
 20301 ;; This function calls:
 20302 ;;		_USBStallEndpoint
 20303 ;;		_USBTransferOnePacket
 20304 ;; This function is called by:
 20305 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20306 ;; This function uses a non-reentrant model
 20307 ;;
 20308                           
 20309                           	psect	text94
 20310  006DB6                     __ptext94:
 20311                           	opt stack 0
 20312  006DB6                     _MSDTransferTerminated:
 20313                           	opt stack 27
 20314                           
 20315                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 20316                           
 20317                           ;incstack = 0
 20318  006DB6  0100               	movlb	0	; () banked
 20319  006DB8  51A1               	movf	_MSDCBWValid& (0+255),w,b
 20320  006DBA  A4D8               	btfss	status,2,c
 20321  006DBC  D00B               	goto	l764
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 20325  006DBE  0E01               	movlw	1
 20326  006DC0  6E01               	movwf	USBStallEndpoint@dir,c
 20327  006DC2  0E02               	movlw	2
 20328  006DC4  ECC8  F01E         	call	_USBStallEndpoint
 20329                           
 20330                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 20331  006DC8  0E00               	movlw	0
 20332  006DCA  6E01               	movwf	USBStallEndpoint@dir,c
 20333  006DCC  0E02               	movlw	2
 20334  006DCE  ECC8  F01E         	call	_USBStallEndpoint
 20335                           
 20336                           ;usb_device_msd.c: 1681: }
 20337  006DD2  0012               	return	
 20338  006DD4                     l764:
 20339  006DD4  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 20340  006DD8  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 20341  006DDC  500E               	movf	_MSDTransferTerminated$2407,w,c
 20342  006DDE  180C               	xorwf	MSDTransferTerminated@handle,w,c
 20343  006DE0  E114               	bnz	l767
 20344  006DE2  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 20345  006DE4  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 20346  006DE6  A4D8               	btfss	status,2,c
 20347  006DE8  0012               	return	
 20348                           
 20349                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 20350  006DEA  0E00               	movlw	0
 20351  006DEC  6E01               	movwf	USBTransferOnePacket@dir,c
 20352  006DEE  0E40               	movlw	64
 20353  006DF0  6E02               	movwf	USBTransferOnePacket@data,c
 20354  006DF2  0E0D               	movlw	13
 20355  006DF4  6E03               	movwf	USBTransferOnePacket@data+1,c
 20356  006DF6  0E40               	movlw	64
 20357  006DF8  6E04               	movwf	USBTransferOnePacket@len,c
 20358  006DFA  0E02               	movlw	2
 20359  006DFC  EC52  F020         	call	_USBTransferOnePacket
 20360  006E00  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20361  006E04  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20362  006E08  0012               	return	
 20363  006E0A                     l767:
 20364  006E0A  0012               	return		;funcret
 20365  006E0C                     __end_of_MSDTransferTerminated:
 20366                           	opt stack 0
 20367                           tblptru	equ	0xFF8
 20368                           tblptrh	equ	0xFF7
 20369                           tblptrl	equ	0xFF6
 20370                           tablat	equ	0xFF5
 20371                           prodh	equ	0xFF4
 20372                           prodl	equ	0xFF3
 20373                           intcon	equ	0xFF2
 20374                           intcon2	equ	0xFF1
 20375                           intcon3	equ	0xFF0
 20376                           indf0	equ	0xFEF
 20377                           postinc0	equ	0xFEE
 20378                           fsr0h	equ	0xFEA
 20379                           fsr0l	equ	0xFE9
 20380                           wreg	equ	0xFE8
 20381                           indf1	equ	0xFE7
 20382                           postdec1	equ	0xFE5
 20383                           plusw1	equ	0xFE3
 20384                           fsr1h	equ	0xFE2
 20385                           fsr1l	equ	0xFE1
 20386                           indf2	equ	0xFDF
 20387                           postinc2	equ	0xFDE
 20388                           postdec2	equ	0xFDD
 20389                           plusw2	equ	0xFDB
 20390                           fsr2h	equ	0xFDA
 20391                           fsr2l	equ	0xFD9
 20392                           status	equ	0xFD8
 20393                           
 20394 ;; *************** function _APP_DeviceMSDInitialize *****************
 20395 ;; Defined at:
 20396 ;;		line 84 in file "app_device_msd.c"
 20397 ;; Parameters:    Size  Location     Type
 20398 ;;		None
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;		None
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1    wreg      void 
 20403 ;; Registers used:
 20404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/0
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20414 ;;Total ram usage:        0 bytes
 20415 ;; Hardware stack levels used:    1
 20416 ;; Hardware stack levels required when called:    2
 20417 ;; This function calls:
 20418 ;;		_USBEnableEndpoint
 20419 ;;		_USBMSDInit
 20420 ;; This function is called by:
 20421 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           
 20425                           	psect	text95
 20426  0079CC                     __ptext95:
 20427                           	opt stack 0
 20428  0079CC                     _APP_DeviceMSDInitialize:
 20429                           	opt stack 26
 20430                           
 20431                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 20432                           
 20433                           ;incstack = 0
 20434  0079CC  0E1E               	movlw	30
 20435  0079CE  6E09               	movwf	USBEnableEndpoint@options,c
 20436  0079D0  0E02               	movlw	2
 20437  0079D2  EC98  F039         	call	_USBEnableEndpoint
 20438                           
 20439                           ;app_device_msd.c: 93: USBMSDInit();
 20440  0079D6  EC4C  F01F         	call	_USBMSDInit	;wreg free
 20441  0079DA  0012               	return		;funcret
 20442  0079DC                     __end_of_APP_DeviceMSDInitialize:
 20443                           	opt stack 0
 20444                           tblptru	equ	0xFF8
 20445                           tblptrh	equ	0xFF7
 20446                           tblptrl	equ	0xFF6
 20447                           tablat	equ	0xFF5
 20448                           prodh	equ	0xFF4
 20449                           prodl	equ	0xFF3
 20450                           intcon	equ	0xFF2
 20451                           intcon2	equ	0xFF1
 20452                           intcon3	equ	0xFF0
 20453                           indf0	equ	0xFEF
 20454                           postinc0	equ	0xFEE
 20455                           fsr0h	equ	0xFEA
 20456                           fsr0l	equ	0xFE9
 20457                           wreg	equ	0xFE8
 20458                           indf1	equ	0xFE7
 20459                           postdec1	equ	0xFE5
 20460                           plusw1	equ	0xFE3
 20461                           fsr1h	equ	0xFE2
 20462                           fsr1l	equ	0xFE1
 20463                           indf2	equ	0xFDF
 20464                           postinc2	equ	0xFDE
 20465                           postdec2	equ	0xFDD
 20466                           plusw2	equ	0xFDB
 20467                           fsr2h	equ	0xFDA
 20468                           fsr2l	equ	0xFD9
 20469                           status	equ	0xFD8
 20470                           
 20471 ;; *************** function _USBMSDInit *****************
 20472 ;; Defined at:
 20473 ;;		line 142 in file "usb_device_msd.c"
 20474 ;; Parameters:    Size  Location     Type
 20475 ;;		None
 20476 ;; Auto vars:     Size  Location     Type
 20477 ;;		None
 20478 ;; Return value:  Size  Location     Type
 20479 ;;                  1    wreg      void 
 20480 ;; Registers used:
 20481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20482 ;; Tracked objects:
 20483 ;;		On entry : 0/0
 20484 ;;		On exit  : 0/0
 20485 ;;		Unchanged: 0/0
 20486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20490 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20491 ;;Total ram usage:        3 bytes
 20492 ;; Hardware stack levels used:    1
 20493 ;; Hardware stack levels required when called:    1
 20494 ;; This function calls:
 20495 ;;		_ExternalFlash_MediaDetect
 20496 ;;		_ExternalFlash_MediaInitialize
 20497 ;;		_ResetSenseData
 20498 ;;		_USBTransferOnePacket
 20499 ;; This function is called by:
 20500 ;;		_APP_DeviceMSDInitialize
 20501 ;; This function uses a non-reentrant model
 20502 ;;
 20503                           
 20504                           	psect	text96
 20505  003E98                     __ptext96:
 20506                           	opt stack 0
 20507  003E98                     _USBMSDInit:
 20508                           	opt stack 26
 20509                           
 20510                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 20511                           
 20512                           ;incstack = 0
 20513  003E98  0E00               	movlw	0
 20514  003E9A  6E01               	movwf	USBTransferOnePacket@dir,c
 20515  003E9C  0E40               	movlw	64
 20516  003E9E  6E02               	movwf	USBTransferOnePacket@data,c
 20517  003EA0  0E0D               	movlw	13
 20518  003EA2  6E03               	movwf	USBTransferOnePacket@data+1,c
 20519  003EA4  0E40               	movlw	64
 20520  003EA6  6E04               	movwf	USBTransferOnePacket@len,c
 20521  003EA8  0E02               	movlw	2
 20522  003EAA  EC52  F020         	call	_USBTransferOnePacket
 20523  003EAE  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20524  003EB2  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20525  003EB6  C070  F08E         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 20526  003EBA  C071  F08F         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 20527                           
 20528                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 20529  003EBE  0E00               	movlw	0
 20530  003EC0  0100               	movlb	0	; () banked
 20531  003EC2  6FA9               	movwf	_MSD_State& (0+255),b
 20532                           
 20533                           ; BSR set to: 0
 20534                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 20535  003EC4  69A8               	setf	_MSDCommandState& (0+255),b
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 20539  003EC6  0E00               	movlw	0
 20540  003EC8  6FA7               	movwf	_MSDReadState& (0+255),b
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 20544  003ECA  0E00               	movlw	0
 20545  003ECC  6FA6               	movwf	_MSDWriteState& (0+255),b
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 20549  003ECE  0E00               	movlw	0
 20550  003ED0  6FA2               	movwf	_MSDHostNoData& (0+255),b
 20551                           
 20552                           ; BSR set to: 0
 20553                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 20554  003ED2  0E00               	movlw	0
 20555  003ED4  0101               	movlb	1	; () banked
 20556  003ED6  6F50               	movwf	_gblNumBLKS& (0+255),b
 20557  003ED8  0E00               	movlw	0
 20558  003EDA  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 20559  003EDC  0E00               	movlw	0
 20560  003EDE  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 20561  003EE0  0E00               	movlw	0
 20562  003EE2  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 20563                           
 20564                           ; BSR set to: 1
 20565                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 20566  003EE4  0E00               	movlw	0
 20567  003EE6  6F4C               	movwf	_gblBLKLen& (0+255),b
 20568  003EE8  0E00               	movlw	0
 20569  003EEA  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 20570  003EEC  0E00               	movlw	0
 20571  003EEE  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 20572  003EF0  0E00               	movlw	0
 20573  003EF2  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 20574                           
 20575                           ; BSR set to: 1
 20576                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 20577  003EF4  0E01               	movlw	1
 20578  003EF6  0100               	movlb	0	; () banked
 20579  003EF8  6FA1               	movwf	_MSDCBWValid& (0+255),b
 20580                           
 20581                           ; BSR set to: 0
 20582                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 20583  003EFA  0E00               	movlw	0
 20584  003EFC  0101               	movlb	1	; () banked
 20585  003EFE  6F65               	movwf	(_gblMediaPresent+1)& (0+255),b
 20586  003F00  0E00               	movlw	0
 20587  003F02  6F64               	movwf	_gblMediaPresent& (0+255),b
 20588                           
 20589                           ; BSR set to: 1
 20590                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 20591  003F04  0E00               	movlw	0
 20592  003F06  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 20593  003F08  D046               	goto	l518
 20594  003F0A                     
 20595                           ; BSR set to: 1
 20596                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 20597                           
 20598                           ; BSR set to: 1
 20599  003F0A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20600  003F0C  0D01               	mullw	1
 20601  003F0E  0EA3               	movlw	low _SoftDetach
 20602  003F10  24F3               	addwf	prodl,w,c
 20603  003F12  6ED9               	movwf	fsr2l,c
 20604  003F14  0E00               	movlw	high _SoftDetach
 20605  003F16  20F4               	addwfc	prodh,w,c
 20606  003F18  6EDA               	movwf	fsr2h,c
 20607  003F1A  0E00               	movlw	0
 20608  003F1C  6EDF               	movwf	indf2,c
 20609                           
 20610                           ; BSR set to: 1
 20611                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 20612  003F1E  C1E2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 20613  003F22  C1E3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 20614  003F26  D801               	call	u6198
 20615  003F28  D009               	goto	u6199
 20616  003F2A                     u6198:
 20617  003F2A  0005               	push	
 20618  003F2C  6EFA               	movwf	pclath,c
 20619  003F2E  51DA               	movf	(_LUN+6)& (0+255),w,b
 20620  003F30  6EFD               	movwf	tosl,c
 20621  003F32  51DB               	movf	(_LUN+7)& (0+255),w,b
 20622  003F34  6EFE               	movwf	tosh,c
 20623  003F36  6AFF               	clrf	tosu,c
 20624  003F38  50FA               	movf	pclath,w,c
 20625  003F3A  0012               	return		;indir
 20626  003F3C                     u6199:
 20627  003F3C  0900               	iorlw	0
 20628  003F3E  B4D8               	btfsc	status,2,c
 20629  003F40  D026               	goto	l521
 20630                           
 20631                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 20632  003F42  C1E2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 20633  003F46  C1E3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 20634  003F4A  D801               	call	u6218
 20635  003F4C  D00A               	goto	u6219
 20636  003F4E                     u6218:
 20637  003F4E  0005               	push	
 20638  003F50  6EFA               	movwf	pclath,c
 20639  003F52  0101               	movlb	1	; () banked
 20640  003F54  51D4               	movf	_LUN& (0+255),w,b
 20641  003F56  6EFD               	movwf	tosl,c
 20642  003F58  51D5               	movf	(_LUN+1)& (0+255),w,b
 20643  003F5A  6EFE               	movwf	tosh,c
 20644  003F5C  6AFF               	clrf	tosu,c
 20645  003F5E  50FA               	movf	pclath,w,c
 20646  003F60  0012               	return		;indir
 20647  003F62                     u6219:
 20648  003F62  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 20649  003F64  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 20650  003F66  B4D8               	btfsc	status,2,c
 20651  003F68  D012               	goto	l521
 20652                           
 20653                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 20654  003F6A  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 20655  003F6E  0E01               	movlw	1
 20656  003F70  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 20657  003F72  0E00               	movlw	0
 20658  003F74  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 20659  003F76  2A0C               	incf	??_USBMSDInit,f,c
 20660  003F78  D003               	goto	u6234
 20661  003F7A                     u6235:
 20662  003F7A  90D8               	bcf	status,0,c
 20663  003F7C  360D               	rlcf	??_USBMSDInit+1,f,c
 20664  003F7E  360E               	rlcf	??_USBMSDInit+2,f,c
 20665  003F80                     u6234:
 20666  003F80  2E0C               	decfsz	??_USBMSDInit,f,c
 20667  003F82  D7FB               	goto	u6235
 20668  003F84  500D               	movf	??_USBMSDInit+1,w,c
 20669  003F86  0101               	movlb	1	; () banked
 20670  003F88  1364               	iorwf	_gblMediaPresent& (0+255),f,b
 20671  003F8A  500E               	movf	??_USBMSDInit+2,w,c
 20672  003F8C  1365               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 20673  003F8E                     l521:
 20674                           
 20675                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 20676                           
 20677                           ; BSR set to: 1
 20678                           
 20679                           ; BSR set to: 1
 20680  003F8E  ECBC  F034         	call	_ResetSenseData	;wreg free
 20681  003F92  0101               	movlb	1	; () banked
 20682  003F94  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 20683  003F96                     l518:
 20684                           
 20685                           ; BSR set to: 1
 20686                           
 20687                           ; BSR set to: 1
 20688  003F96  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20689  003F98  A4D8               	btfss	status,2,c
 20690  003F9A  0012               	return	
 20691  003F9C  D7B6               	goto	l519
 20692  003F9E                     __end_of_USBMSDInit:
 20693                           	opt stack 0
 20694                           tosu	equ	0xFFF
 20695                           tosh	equ	0xFFE
 20696                           tosl	equ	0xFFD
 20697                           pclath	equ	0xFFA
 20698                           tblptru	equ	0xFF8
 20699                           tblptrh	equ	0xFF7
 20700                           tblptrl	equ	0xFF6
 20701                           tablat	equ	0xFF5
 20702                           prodh	equ	0xFF4
 20703                           prodl	equ	0xFF3
 20704                           intcon	equ	0xFF2
 20705                           intcon2	equ	0xFF1
 20706                           intcon3	equ	0xFF0
 20707                           indf0	equ	0xFEF
 20708                           postinc0	equ	0xFEE
 20709                           fsr0h	equ	0xFEA
 20710                           fsr0l	equ	0xFE9
 20711                           wreg	equ	0xFE8
 20712                           indf1	equ	0xFE7
 20713                           postdec1	equ	0xFE5
 20714                           plusw1	equ	0xFE3
 20715                           fsr1h	equ	0xFE2
 20716                           fsr1l	equ	0xFE1
 20717                           indf2	equ	0xFDF
 20718                           postinc2	equ	0xFDE
 20719                           postdec2	equ	0xFDD
 20720                           plusw2	equ	0xFDB
 20721                           fsr2h	equ	0xFDA
 20722                           fsr2l	equ	0xFD9
 20723                           status	equ	0xFD8
 20724                           
 20725 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 20726 ;; Defined at:
 20727 ;;		line 47 in file "app_device_custom_hid.c"
 20728 ;; Parameters:    Size  Location     Type
 20729 ;;		None
 20730 ;; Auto vars:     Size  Location     Type
 20731 ;;		None
 20732 ;; Return value:  Size  Location     Type
 20733 ;;                  1    wreg      void 
 20734 ;; Registers used:
 20735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20736 ;; Tracked objects:
 20737 ;;		On entry : 0/0
 20738 ;;		On exit  : 0/0
 20739 ;;		Unchanged: 0/0
 20740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20745 ;;Total ram usage:        0 bytes
 20746 ;; Hardware stack levels used:    1
 20747 ;; Hardware stack levels required when called:    2
 20748 ;; This function calls:
 20749 ;;		_USBEnableEndpoint
 20750 ;;		_USBTransferOnePacket
 20751 ;; This function is called by:
 20752 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20753 ;; This function uses a non-reentrant model
 20754 ;;
 20755                           
 20756                           	psect	text97
 20757  007480                     __ptext97:
 20758                           	opt stack 0
 20759  007480                     _APP_DeviceCustomHIDInitialize:
 20760                           	opt stack 26
 20761                           
 20762                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 20763                           
 20764                           ; BSR set to: 1
 20765                           ;incstack = 0
 20766  007480  0E00               	movlw	0
 20767  007482  0100               	movlb	0	; () banked
 20768  007484  6F88               	movwf	_USBInHandle& (0+255),b
 20769  007486  0E00               	movlw	0
 20770  007488  6F89               	movwf	(_USBInHandle+1)& (0+255),b
 20771                           
 20772                           ; BSR set to: 0
 20773                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 20774  00748A  0E1E               	movlw	30
 20775  00748C  6E09               	movwf	USBEnableEndpoint@options,c
 20776  00748E  0E01               	movlw	1
 20777  007490  EC98  F039         	call	_USBEnableEndpoint
 20778                           
 20779                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 20780  007494  0E00               	movlw	0
 20781  007496  6E01               	movwf	USBTransferOnePacket@dir,c
 20782  007498  0E40               	movlw	low _ReceivedDataBuffer
 20783  00749A  6E02               	movwf	USBTransferOnePacket@data,c
 20784  00749C  0E02               	movlw	high _ReceivedDataBuffer
 20785  00749E  6E03               	movwf	USBTransferOnePacket@data+1,c
 20786  0074A0  0E40               	movlw	64
 20787  0074A2  6E04               	movwf	USBTransferOnePacket@len,c
 20788  0074A4  0E01               	movlw	1
 20789  0074A6  EC52  F020         	call	_USBTransferOnePacket
 20790  0074AA  C001  F08A         	movff	?_USBTransferOnePacket,_USBOutHandle
 20791  0074AE  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 20792  0074B2  0012               	return		;funcret
 20793  0074B4                     __end_of_APP_DeviceCustomHIDInitialize:
 20794                           	opt stack 0
 20795                           tosu	equ	0xFFF
 20796                           tosh	equ	0xFFE
 20797                           tosl	equ	0xFFD
 20798                           pclath	equ	0xFFA
 20799                           tblptru	equ	0xFF8
 20800                           tblptrh	equ	0xFF7
 20801                           tblptrl	equ	0xFF6
 20802                           tablat	equ	0xFF5
 20803                           prodh	equ	0xFF4
 20804                           prodl	equ	0xFF3
 20805                           intcon	equ	0xFF2
 20806                           intcon2	equ	0xFF1
 20807                           intcon3	equ	0xFF0
 20808                           indf0	equ	0xFEF
 20809                           postinc0	equ	0xFEE
 20810                           fsr0h	equ	0xFEA
 20811                           fsr0l	equ	0xFE9
 20812                           wreg	equ	0xFE8
 20813                           indf1	equ	0xFE7
 20814                           postdec1	equ	0xFE5
 20815                           plusw1	equ	0xFE3
 20816                           fsr1h	equ	0xFE2
 20817                           fsr1l	equ	0xFE1
 20818                           indf2	equ	0xFDF
 20819                           postinc2	equ	0xFDE
 20820                           postdec2	equ	0xFDD
 20821                           plusw2	equ	0xFDB
 20822                           fsr2h	equ	0xFDA
 20823                           fsr2l	equ	0xFD9
 20824                           status	equ	0xFD8
 20825                           
 20826 ;; *************** function _USBEnableEndpoint *****************
 20827 ;; Defined at:
 20828 ;;		line 878 in file "usb_device.c"
 20829 ;; Parameters:    Size  Location     Type
 20830 ;;  ep              1    wreg     unsigned char 
 20831 ;;  options         1    8[COMRAM] unsigned char 
 20832 ;; Auto vars:     Size  Location     Type
 20833 ;;  ep              1   11[COMRAM] unsigned char 
 20834 ;;  p               2    9[COMRAM] PTR unsigned char 
 20835 ;;		 -> UEP0(1), 
 20836 ;; Return value:  Size  Location     Type
 20837 ;;                  1    wreg      void 
 20838 ;; Registers used:
 20839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20840 ;; Tracked objects:
 20841 ;;		On entry : 0/0
 20842 ;;		On exit  : 0/0
 20843 ;;		Unchanged: 0/0
 20844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20845 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20846 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20849 ;;Total ram usage:        4 bytes
 20850 ;; Hardware stack levels used:    1
 20851 ;; Hardware stack levels required when called:    1
 20852 ;; This function calls:
 20853 ;;		_USBConfigureEndpoint
 20854 ;; This function is called by:
 20855 ;;		_APP_DeviceCustomHIDInitialize
 20856 ;;		_APP_DeviceMSDInitialize
 20857 ;; This function uses a non-reentrant model
 20858 ;;
 20859                           
 20860                           	psect	text98
 20861  007330                     __ptext98:
 20862                           	opt stack 0
 20863  007330                     _USBEnableEndpoint:
 20864                           	opt stack 26
 20865                           
 20866                           ;incstack = 0
 20867                           ;USBEnableEndpoint@ep stored from wreg
 20868  007330  6E0C               	movwf	USBEnableEndpoint@ep,c
 20869                           
 20870                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 20871  007332  A409               	btfss	USBEnableEndpoint@options,2,c
 20872  007334  D005               	goto	l178
 20873                           
 20874                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 20875  007336  0E00               	movlw	0
 20876  007338  6E01               	movwf	USBConfigureEndpoint@direction,c
 20877  00733A  500C               	movf	USBEnableEndpoint@ep,w,c
 20878  00733C  ECF2  F02C         	call	_USBConfigureEndpoint
 20879  007340                     l178:
 20880                           
 20881                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 20882  007340  A209               	btfss	USBEnableEndpoint@options,1,c
 20883  007342  D005               	goto	l179
 20884                           
 20885                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 20886  007344  0E01               	movlw	1
 20887  007346  6E01               	movwf	USBConfigureEndpoint@direction,c
 20888  007348  500C               	movf	USBEnableEndpoint@ep,w,c
 20889  00734A  ECF2  F02C         	call	_USBConfigureEndpoint
 20890  00734E                     l179:
 20891                           
 20892                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 20893  00734E  500C               	movf	USBEnableEndpoint@ep,w,c
 20894  007350  0D01               	mullw	1
 20895  007352  0E26               	movlw	38
 20896  007354  24F3               	addwf	prodl,w,c
 20897  007356  6E0A               	movwf	USBEnableEndpoint@p,c
 20898  007358  0E0F               	movlw	15
 20899  00735A  20F4               	addwfc	prodh,w,c
 20900  00735C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 20901                           
 20902                           ;usb_device.c: 901: *p = options;
 20903  00735E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 20904  007362  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 20905  007366  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 20906  00736A  0012               	return		;funcret
 20907  00736C                     __end_of_USBEnableEndpoint:
 20908                           	opt stack 0
 20909                           tosu	equ	0xFFF
 20910                           tosh	equ	0xFFE
 20911                           tosl	equ	0xFFD
 20912                           pclath	equ	0xFFA
 20913                           tblptru	equ	0xFF8
 20914                           tblptrh	equ	0xFF7
 20915                           tblptrl	equ	0xFF6
 20916                           tablat	equ	0xFF5
 20917                           prodh	equ	0xFF4
 20918                           prodl	equ	0xFF3
 20919                           intcon	equ	0xFF2
 20920                           intcon2	equ	0xFF1
 20921                           intcon3	equ	0xFF0
 20922                           indf0	equ	0xFEF
 20923                           postinc0	equ	0xFEE
 20924                           fsr0h	equ	0xFEA
 20925                           fsr0l	equ	0xFE9
 20926                           wreg	equ	0xFE8
 20927                           indf1	equ	0xFE7
 20928                           postdec1	equ	0xFE5
 20929                           plusw1	equ	0xFE3
 20930                           fsr1h	equ	0xFE2
 20931                           fsr1l	equ	0xFE1
 20932                           indf2	equ	0xFDF
 20933                           postinc2	equ	0xFDE
 20934                           postdec2	equ	0xFDD
 20935                           plusw2	equ	0xFDB
 20936                           fsr2h	equ	0xFDA
 20937                           fsr2l	equ	0xFD9
 20938                           status	equ	0xFD8
 20939                           
 20940 ;; *************** function _USBConfigureEndpoint *****************
 20941 ;; Defined at:
 20942 ;;		line 1545 in file "usb_device.c"
 20943 ;; Parameters:    Size  Location     Type
 20944 ;;  EPNum           1    wreg     unsigned char 
 20945 ;;  direction       1    0[COMRAM] unsigned char 
 20946 ;; Auto vars:     Size  Location     Type
 20947 ;;  EPNum           1    5[COMRAM] unsigned char 
 20948 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 20949 ;;		 -> BDT(48), 
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      void 
 20952 ;; Registers used:
 20953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20959 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20960 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20961 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20963 ;;Total ram usage:        8 bytes
 20964 ;; Hardware stack levels used:    1
 20965 ;; This function calls:
 20966 ;;		Nothing
 20967 ;; This function is called by:
 20968 ;;		_USBEnableEndpoint
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           	psect	text99
 20973  0059E4                     __ptext99:
 20974                           	opt stack 0
 20975  0059E4                     _USBConfigureEndpoint:
 20976                           	opt stack 26
 20977                           
 20978                           ;incstack = 0
 20979                           ;USBConfigureEndpoint@EPNum stored from wreg
 20980  0059E4  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 20981                           
 20982                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 20983  0059E6  0E00               	movlw	0
 20984  0059E8  6E07               	movwf	USBConfigureEndpoint@handle,c
 20985  0059EA  0E0D               	movlw	13
 20986  0059EC  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 20987                           
 20988                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 20989  0059EE  5001               	movf	USBConfigureEndpoint@direction,w,c
 20990  0059F0  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 20991  0059F2  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 20992  0059F4  90D8               	bcf	status,0,c
 20993  0059F6  3602               	rlcf	??_USBConfigureEndpoint,f,c
 20994  0059F8  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 20995  0059FA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20996  0059FC  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 20997  0059FE  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 20998  005A00  90D8               	bcf	status,0,c
 20999  005A02  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21000  005A04  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21001  005A06  90D8               	bcf	status,0,c
 21002  005A08  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21003  005A0A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21004  005A0C  5002               	movf	??_USBConfigureEndpoint,w,c
 21005  005A0E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 21006  005A10  5003               	movf	??_USBConfigureEndpoint+1,w,c
 21007  005A12  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 21008  005A14  90D8               	bcf	status,0,c
 21009  005A16  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21010  005A18  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21011  005A1A  90D8               	bcf	status,0,c
 21012  005A1C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21013  005A1E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21014  005A20  5004               	movf	??_USBConfigureEndpoint+2,w,c
 21015  005A22  2607               	addwf	USBConfigureEndpoint@handle,f,c
 21016  005A24  5005               	movf	??_USBConfigureEndpoint+3,w,c
 21017  005A26  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 21018                           
 21019                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 21020  005A28  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21021  005A2C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21022  005A30  9EDF               	bcf	indf2,7,c
 21023                           
 21024                           ;usb_device.c: 1559: if(direction == 0)
 21025  005A32  5001               	movf	USBConfigureEndpoint@direction,w,c
 21026  005A34  A4D8               	btfss	status,2,c
 21027  005A36  D007               	goto	l214
 21028                           
 21029                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 21030  005A38  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21031  005A3A  0D02               	mullw	2
 21032  005A3C  0E72               	movlw	low _pBDTEntryOut
 21033  005A3E  24F3               	addwf	prodl,w,c
 21034  005A40  6ED9               	movwf	fsr2l,c
 21035  005A42  0E00               	movlw	high _pBDTEntryOut
 21036  005A44  D006               	goto	L14
 21037  005A46                     l214:
 21038                           
 21039                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 21040  005A46  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21041  005A48  0D02               	mullw	2
 21042  005A4A  0E6C               	movlw	low _pBDTEntryIn
 21043  005A4C  24F3               	addwf	prodl,w,c
 21044  005A4E  6ED9               	movwf	fsr2l,c
 21045  005A50  0E00               	movlw	high _pBDTEntryIn
 21046  005A52                     L14:
 21047  005A52  20F4               	addwfc	prodh,w,c
 21048  005A54  6EDA               	movwf	fsr2h,c
 21049  005A56  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 21050  005A5A  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 21051                           
 21052                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 21053  005A5E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21054  005A62  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21055  005A66  9CDF               	bcf	indf2,6,c
 21056                           
 21057                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 21058  005A68  EE20 F004          	lfsr	2,4
 21059  005A6C  5007               	movf	USBConfigureEndpoint@handle,w,c
 21060  005A6E  26D9               	addwf	fsr2l,f,c
 21061  005A70  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21062  005A72  22DA               	addwfc	fsr2h,f,c
 21063  005A74  8CDF               	bsf	indf2,6,c
 21064  005A76  0012               	return		;funcret
 21065  005A78                     __end_of_USBConfigureEndpoint:
 21066                           	opt stack 0
 21067                           tosu	equ	0xFFF
 21068                           tosh	equ	0xFFE
 21069                           tosl	equ	0xFFD
 21070                           pclath	equ	0xFFA
 21071                           tblptru	equ	0xFF8
 21072                           tblptrh	equ	0xFF7
 21073                           tblptrl	equ	0xFF6
 21074                           tablat	equ	0xFF5
 21075                           prodh	equ	0xFF4
 21076                           prodl	equ	0xFF3
 21077                           intcon	equ	0xFF2
 21078                           intcon2	equ	0xFF1
 21079                           intcon3	equ	0xFF0
 21080                           indf0	equ	0xFEF
 21081                           postinc0	equ	0xFEE
 21082                           fsr0h	equ	0xFEA
 21083                           fsr0l	equ	0xFE9
 21084                           wreg	equ	0xFE8
 21085                           indf1	equ	0xFE7
 21086                           postdec1	equ	0xFE5
 21087                           plusw1	equ	0xFE3
 21088                           fsr1h	equ	0xFE2
 21089                           fsr1l	equ	0xFE1
 21090                           indf2	equ	0xFDF
 21091                           postinc2	equ	0xFDE
 21092                           postdec2	equ	0xFDD
 21093                           plusw2	equ	0xFDB
 21094                           fsr2h	equ	0xFDA
 21095                           fsr2l	equ	0xFD9
 21096                           status	equ	0xFD8
 21097                           
 21098 ;; *************** function _USBCtrlTrfOutHandler *****************
 21099 ;; Defined at:
 21100 ;;		line 2540 in file "usb_device.c"
 21101 ;; Parameters:    Size  Location     Type
 21102 ;;		None
 21103 ;; Auto vars:     Size  Location     Type
 21104 ;;		None
 21105 ;; Return value:  Size  Location     Type
 21106 ;;                  1    wreg      void 
 21107 ;; Registers used:
 21108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21109 ;; Tracked objects:
 21110 ;;		On entry : 0/0
 21111 ;;		On exit  : 0/0
 21112 ;;		Unchanged: 0/0
 21113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21118 ;;Total ram usage:        0 bytes
 21119 ;; Hardware stack levels used:    1
 21120 ;; Hardware stack levels required when called:    2
 21121 ;; This function calls:
 21122 ;;		_USBCtrlTrfRxService
 21123 ;; This function is called by:
 21124 ;;		_USBCtrlEPService
 21125 ;; This function uses a non-reentrant model
 21126 ;;
 21127                           
 21128                           	psect	text100
 21129  006A3A                     __ptext100:
 21130                           	opt stack 0
 21131  006A3A                     _USBCtrlTrfOutHandler:
 21132                           	opt stack 26
 21133                           
 21134                           ;usb_device.c: 2542: if(controlTransferState == 2)
 21135                           
 21136                           ;incstack = 0
 21137  006A3A  0E02               	movlw	2
 21138  006A3C  0100               	movlb	0	; () banked
 21139  006A3E  19B5               	xorwf	_controlTransferState& (0+255),w,b
 21140  006A40  A4D8               	btfss	status,2,c
 21141  006A42  D003               	goto	l320
 21142                           
 21143                           ; BSR set to: 0
 21144                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 21145  006A44  ECB3  F01D         	call	_USBCtrlTrfRxService	;wreg free
 21146                           
 21147                           ;usb_device.c: 2545: }
 21148  006A48  0012               	return	
 21149  006A4A                     l320:
 21150                           
 21151                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 21152  006A4A  0E00               	movlw	0
 21153  006A4C  0100               	movlb	0	; () banked
 21154  006A4E  6FB5               	movwf	_controlTransferState& (0+255),b
 21155                           
 21156                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 21157  006A50  51B1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 21158  006A52  A4D8               	btfss	status,2,c
 21159  006A54  D01F               	goto	l322
 21160                           
 21161                           ; BSR set to: 0
 21162                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 21163  006A56  EE20 F001          	lfsr	2,1
 21164  006A5A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21165  006A5C  26D9               	addwf	fsr2l,f,c
 21166  006A5E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21167  006A60  22DA               	addwfc	fsr2h,f,c
 21168  006A62  0E08               	movlw	8
 21169  006A64  6EDF               	movwf	indf2,c
 21170                           
 21171                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21172  006A66  EE20 F002          	lfsr	2,2
 21173  006A6A  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21174  006A6C  26D9               	addwf	fsr2l,f,c
 21175  006A6E  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21176  006A70  22DA               	addwfc	fsr2h,f,c
 21177  006A72  0E30               	movlw	48
 21178  006A74  6EDE               	movwf	postinc2,c
 21179  006A76  0E0D               	movlw	13
 21180  006A78  6EDD               	movwf	postdec2,c
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21184  006A7A  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21185  006A7E  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21186  006A82  0E0C               	movlw	12
 21187  006A84  6EDF               	movwf	indf2,c
 21188                           
 21189                           ; BSR set to: 0
 21190                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21191  006A86  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21192  006A8A  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21193  006A8E  0E00               	movlw	0
 21194  006A90  8EDB               	bsf	plusw2,7,c
 21195                           
 21196                           ;usb_device.c: 2563: }
 21197  006A92  0012               	return	
 21198  006A94                     l322:
 21199                           
 21200                           ; BSR set to: 0
 21201                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 21202                           
 21203                           ; BSR set to: 0
 21204  006A94  0E00               	movlw	0
 21205  006A96  6FB1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21206                           
 21207                           ; BSR set to: 0
 21208  006A98  0012               	return	
 21209  006A9A                     __end_of_USBCtrlTrfOutHandler:
 21210                           	opt stack 0
 21211                           tosu	equ	0xFFF
 21212                           tosh	equ	0xFFE
 21213                           tosl	equ	0xFFD
 21214                           pclath	equ	0xFFA
 21215                           tblptru	equ	0xFF8
 21216                           tblptrh	equ	0xFF7
 21217                           tblptrl	equ	0xFF6
 21218                           tablat	equ	0xFF5
 21219                           prodh	equ	0xFF4
 21220                           prodl	equ	0xFF3
 21221                           intcon	equ	0xFF2
 21222                           intcon2	equ	0xFF1
 21223                           intcon3	equ	0xFF0
 21224                           indf0	equ	0xFEF
 21225                           postinc0	equ	0xFEE
 21226                           fsr0h	equ	0xFEA
 21227                           fsr0l	equ	0xFE9
 21228                           wreg	equ	0xFE8
 21229                           indf1	equ	0xFE7
 21230                           postdec1	equ	0xFE5
 21231                           plusw1	equ	0xFE3
 21232                           fsr1h	equ	0xFE2
 21233                           fsr1l	equ	0xFE1
 21234                           indf2	equ	0xFDF
 21235                           postinc2	equ	0xFDE
 21236                           postdec2	equ	0xFDD
 21237                           plusw2	equ	0xFDB
 21238                           fsr2h	equ	0xFDA
 21239                           fsr2l	equ	0xFD9
 21240                           status	equ	0xFD8
 21241                           
 21242 ;; *************** function _USBCtrlTrfRxService *****************
 21243 ;; Defined at:
 21244 ;;		line 1854 in file "usb_device.c"
 21245 ;; Parameters:    Size  Location     Type
 21246 ;;		None
 21247 ;; Auto vars:     Size  Location     Type
 21248 ;;  byteToRead      1    1[COMRAM] unsigned char 
 21249 ;;  i               1    0[COMRAM] unsigned char 
 21250 ;; Return value:  Size  Location     Type
 21251 ;;                  1    wreg      void 
 21252 ;; Registers used:
 21253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21254 ;; Tracked objects:
 21255 ;;		On entry : 0/0
 21256 ;;		On exit  : 0/0
 21257 ;;		Unchanged: 0/0
 21258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21263 ;;Total ram usage:        2 bytes
 21264 ;; Hardware stack levels used:    1
 21265 ;; Hardware stack levels required when called:    1
 21266 ;; This function calls:
 21267 ;;		_USBCtrlEPAllowStatusStage
 21268 ;; This function is called by:
 21269 ;;		_USBCtrlTrfOutHandler
 21270 ;; This function uses a non-reentrant model
 21271 ;;
 21272                           
 21273                           	psect	text101
 21274  003B66                     __ptext101:
 21275                           	opt stack 0
 21276  003B66                     _USBCtrlTrfRxService:
 21277                           	opt stack 26
 21278                           
 21279                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21280                           
 21281                           ;incstack = 0
 21282  003B66  0100               	movlb	0	; () banked
 21283  003B68  EE20 F001          	lfsr	2,1
 21284  003B6C  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21285  003B6E  26D9               	addwf	fsr2l,f,c
 21286  003B70  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21287  003B72  22DA               	addwfc	fsr2h,f,c
 21288  003B74  50DF               	movf	indf2,w,c
 21289  003B76  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 21290                           
 21291                           ; BSR set to: 0
 21292                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 21293  003B78  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21294  003B7A  0101               	movlb	1	; () banked
 21295  003B7C  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 21296  003B7E  0E00               	movlw	0
 21297  003B80  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 21298  003B82  A0D8               	btfss	status,0,c
 21299                           
 21300                           ; BSR set to: 1
 21301                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 21302  003B84  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 21303                           
 21304                           ; BSR set to: 1
 21305                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 21306                           
 21307                           ; BSR set to: 1
 21308  003B88  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21309  003B8A  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 21310  003B8C  0E00               	movlw	0
 21311  003B8E  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 21312                           
 21313                           ; BSR set to: 1
 21314                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 21315  003B90  0E00               	movlw	0
 21316  003B92  6E01               	movwf	USBCtrlTrfRxService@i,c
 21317  003B94  D011               	goto	l248
 21318  003B96                     
 21319                           ; BSR set to: 1
 21320                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21321                           
 21322                           ; BSR set to: 1
 21323  003B96  5001               	movf	USBCtrlTrfRxService@i,w,c
 21324  003B98  0D01               	mullw	1
 21325  003B9A  0E38               	movlw	56
 21326  003B9C  24F3               	addwf	prodl,w,c
 21327  003B9E  6ED9               	movwf	fsr2l,c
 21328  003BA0  0E0D               	movlw	13
 21329  003BA2  20F4               	addwfc	prodh,w,c
 21330  003BA4  6EDA               	movwf	fsr2h,c
 21331  003BA6  C131  FFE1         	movff	_outPipes,fsr1l
 21332  003BAA  C132  FFE2         	movff	_outPipes+1,fsr1h
 21333  003BAE  CFDF FFE7          	movff	indf2,indf1
 21334                           
 21335                           ; BSR set to: 1
 21336  003BB2  4B31               	infsnz	_outPipes& (0+255),f,b
 21337  003BB4  2B32               	incf	(_outPipes+1)& (0+255),f,b
 21338                           
 21339                           ; BSR set to: 1
 21340  003BB6  2A01               	incf	USBCtrlTrfRxService@i,f,c
 21341  003BB8                     l248:
 21342                           
 21343                           ; BSR set to: 1
 21344                           
 21345                           ; BSR set to: 1
 21346  003BB8  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21347  003BBA  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 21348  003BBC  A0D8               	btfss	status,0,c
 21349  003BBE  D7EB               	goto	l249
 21350                           
 21351                           ; BSR set to: 1
 21352                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 21353                           
 21354                           ; BSR set to: 1
 21355  003BC0  5135               	movf	(_outPipes+4)& (0+255),w,b
 21356  003BC2  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 21357  003BC4  B4D8               	btfsc	status,2,c
 21358  003BC6  D033               	goto	l251
 21359                           
 21360                           ; BSR set to: 1
 21361                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 21362  003BC8  0100               	movlb	0	; () banked
 21363  003BCA  EE20 F001          	lfsr	2,1
 21364  003BCE  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21365  003BD0  26D9               	addwf	fsr2l,f,c
 21366  003BD2  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21367  003BD4  22DA               	addwfc	fsr2h,f,c
 21368  003BD6  0E08               	movlw	8
 21369  003BD8  6EDF               	movwf	indf2,c
 21370                           
 21371                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21372  003BDA  EE20 F002          	lfsr	2,2
 21373  003BDE  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21374  003BE0  26D9               	addwf	fsr2l,f,c
 21375  003BE2  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21376  003BE4  22DA               	addwfc	fsr2h,f,c
 21377  003BE6  0E38               	movlw	56
 21378  003BE8  6EDE               	movwf	postinc2,c
 21379  003BEA  0E0D               	movlw	13
 21380  003BEC  6EDD               	movwf	postdec2,c
 21381                           
 21382                           ; BSR set to: 0
 21383                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21384  003BEE  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21385  003BF2  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21386  003BF6  BCDF               	btfsc	indf2,6,c
 21387  003BF8  D00D               	goto	l252
 21388                           
 21389                           ; BSR set to: 0
 21390                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 21391  003BFA  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21392  003BFE  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21393  003C02  0E48               	movlw	72
 21394  003C04  6EDF               	movwf	indf2,c
 21395                           
 21396                           ; BSR set to: 0
 21397                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21398  003C06  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21399  003C0A  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21400  003C0E  0E00               	movlw	0
 21401  003C10  8EDB               	bsf	plusw2,7,c
 21402                           
 21403                           ;usb_device.c: 1891: }
 21404  003C12  0012               	return	
 21405  003C14                     l252:
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 21409                           
 21410                           ; BSR set to: 0
 21411  003C14  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21412  003C18  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21413  003C1C  0E08               	movlw	8
 21414  003C1E  6EDF               	movwf	indf2,c
 21415                           
 21416                           ; BSR set to: 0
 21417                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21418  003C20  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21419  003C24  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21420  003C28  0E00               	movlw	0
 21421  003C2A  8EDB               	bsf	plusw2,7,c
 21422                           
 21423                           ; BSR set to: 0
 21424                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 21425  003C2C  0012               	return	
 21426  003C2E                     l251:
 21427                           
 21428                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 21429                           
 21430                           ; BSR set to: 0
 21431  003C2E  0100               	movlb	0	; () banked
 21432  003C30  EE20 F001          	lfsr	2,1
 21433  003C34  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21434  003C36  26D9               	addwf	fsr2l,f,c
 21435  003C38  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21436  003C3A  22DA               	addwfc	fsr2h,f,c
 21437  003C3C  0E08               	movlw	8
 21438  003C3E  6EDF               	movwf	indf2,c
 21439                           
 21440                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21441  003C40  EE20 F002          	lfsr	2,2
 21442  003C44  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21443  003C46  26D9               	addwf	fsr2l,f,c
 21444  003C48  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21445  003C4A  22DA               	addwfc	fsr2h,f,c
 21446  003C4C  0E30               	movlw	48
 21447  003C4E  6EDE               	movwf	postinc2,c
 21448  003C50  0E0D               	movlw	13
 21449  003C52  6EDD               	movwf	postdec2,c
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21453  003C54  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21454  003C58  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21455  003C5C  0E04               	movlw	4
 21456  003C5E  6EDF               	movwf	indf2,c
 21457                           
 21458                           ; BSR set to: 0
 21459                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21460  003C60  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21461  003C64  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21462  003C68  0E00               	movlw	0
 21463  003C6A  8EDB               	bsf	plusw2,7,c
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 21467                           
 21468                           ; BSR set to: 0
 21469  003C6C  0101               	movlb	1	; () banked
 21470  003C6E  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21471                           
 21472                           ; BSR set to: 1
 21473                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 21474  003C70  0100               	movlb	0	; () banked
 21475  003C72  51AF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21476  003C74  A4D8               	btfss	status,2,c
 21477  003C76  0012               	return	
 21478                           
 21479                           ; BSR set to: 0
 21480                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 21481  003C78  EC9A  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21482  003C7C  0012               	return	
 21483  003C7E                     __end_of_USBCtrlTrfRxService:
 21484                           	opt stack 0
 21485                           tosu	equ	0xFFF
 21486                           tosh	equ	0xFFE
 21487                           tosl	equ	0xFFD
 21488                           pclath	equ	0xFFA
 21489                           tblptru	equ	0xFF8
 21490                           tblptrh	equ	0xFF7
 21491                           tblptrl	equ	0xFF6
 21492                           tablat	equ	0xFF5
 21493                           prodh	equ	0xFF4
 21494                           prodl	equ	0xFF3
 21495                           intcon	equ	0xFF2
 21496                           intcon2	equ	0xFF1
 21497                           intcon3	equ	0xFF0
 21498                           indf0	equ	0xFEF
 21499                           postinc0	equ	0xFEE
 21500                           fsr0h	equ	0xFEA
 21501                           fsr0l	equ	0xFE9
 21502                           wreg	equ	0xFE8
 21503                           indf1	equ	0xFE7
 21504                           postdec1	equ	0xFE5
 21505                           plusw1	equ	0xFE3
 21506                           fsr1h	equ	0xFE2
 21507                           fsr1l	equ	0xFE1
 21508                           indf2	equ	0xFDF
 21509                           postinc2	equ	0xFDE
 21510                           postdec2	equ	0xFDD
 21511                           plusw2	equ	0xFDB
 21512                           fsr2h	equ	0xFDA
 21513                           fsr2l	equ	0xFD9
 21514                           status	equ	0xFD8
 21515                           
 21516 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21517 ;; Defined at:
 21518 ;;		line 1418 in file "usb_device.c"
 21519 ;; Parameters:    Size  Location     Type
 21520 ;;		None
 21521 ;; Auto vars:     Size  Location     Type
 21522 ;;		None
 21523 ;; Return value:  Size  Location     Type
 21524 ;;                  1    wreg      void 
 21525 ;; Registers used:
 21526 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21527 ;; Tracked objects:
 21528 ;;		On entry : 0/0
 21529 ;;		On exit  : 0/0
 21530 ;;		Unchanged: 0/0
 21531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21536 ;;Total ram usage:        0 bytes
 21537 ;; Hardware stack levels used:    1
 21538 ;; This function calls:
 21539 ;;		Nothing
 21540 ;; This function is called by:
 21541 ;;		_USBDeviceTasks
 21542 ;;		_USBCtrlEPServiceComplete
 21543 ;;		_USBCtrlTrfRxService
 21544 ;; This function uses a non-reentrant model
 21545 ;;
 21546                           
 21547                           	psect	text102
 21548  004F34                     __ptext102:
 21549                           	opt stack 0
 21550  004F34                     _USBCtrlEPAllowStatusStage:
 21551                           	opt stack 26
 21552                           
 21553                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 21554                           
 21555                           ;incstack = 0
 21556  004F34  0100               	movlb	0	; () banked
 21557  004F36  51AE               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21558  004F38  A4D8               	btfss	status,2,c
 21559  004F3A  0012               	return	
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 21563  004F3C  0E01               	movlw	1
 21564  004F3E  6FAE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21565                           
 21566                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 21567  004F40  51AD               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21568  004F42  A4D8               	btfss	status,2,c
 21569  004F44  0012               	return	
 21570                           
 21571                           ; BSR set to: 0
 21572                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 21573  004F46  0E01               	movlw	1
 21574  004F48  6FAD               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;usb_device.c: 1434: if(controlTransferState == 2)
 21578  004F4A  0E02               	movlw	2
 21579  004F4C  19B5               	xorwf	_controlTransferState& (0+255),w,b
 21580  004F4E  A4D8               	btfss	status,2,c
 21581  004F50  D015               	goto	l202
 21582                           
 21583                           ; BSR set to: 0
 21584                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 21585  004F52  EE20 F001          	lfsr	2,1
 21586  004F56  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21587  004F58  26D9               	addwf	fsr2l,f,c
 21588  004F5A  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21589  004F5C  22DA               	addwfc	fsr2h,f,c
 21590  004F5E  0E00               	movlw	0
 21591  004F60  6EDF               	movwf	indf2,c
 21592                           
 21593                           ; BSR set to: 0
 21594                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21595  004F62  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21596  004F66  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21597  004F6A  0E48               	movlw	72
 21598  004F6C  6EDF               	movwf	indf2,c
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21602  004F6E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21603  004F72  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21604  004F76  0E00               	movlw	0
 21605  004F78  8EDB               	bsf	plusw2,7,c
 21606                           
 21607                           ;usb_device.c: 1439: }
 21608  004F7A  0012               	return	
 21609  004F7C                     l202:
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 21613                           
 21614                           ; BSR set to: 0
 21615  004F7C  05B5               	decf	_controlTransferState& (0+255),w,b
 21616  004F7E  A4D8               	btfss	status,2,c
 21617  004F80  0012               	return	
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 21621  004F82  0E00               	movlw	0
 21622  004F84  6FB1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21623                           
 21624                           ; BSR set to: 0
 21625                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 21626  004F86  EE20 F001          	lfsr	2,1
 21627  004F8A  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21628  004F8C  26D9               	addwf	fsr2l,f,c
 21629  004F8E  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21630  004F90  22DA               	addwfc	fsr2h,f,c
 21631  004F92  0E08               	movlw	8
 21632  004F94  6EDF               	movwf	indf2,c
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21636  004F96  EE20 F002          	lfsr	2,2
 21637  004F9A  5198               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21638  004F9C  26D9               	addwf	fsr2l,f,c
 21639  004F9E  5199               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21640  004FA0  22DA               	addwfc	fsr2h,f,c
 21641  004FA2  0E30               	movlw	48
 21642  004FA4  6EDE               	movwf	postinc2,c
 21643  004FA6  0E0D               	movlw	13
 21644  004FA8  6EDD               	movwf	postdec2,c
 21645                           
 21646                           ; BSR set to: 0
 21647                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 21648  004FAA  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21649  004FAE  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21650  004FB2  0E04               	movlw	4
 21651  004FB4  6EDF               	movwf	indf2,c
 21652                           
 21653                           ; BSR set to: 0
 21654                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21655  004FB6  C098  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21656  004FBA  C099  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21657  004FBE  0E00               	movlw	0
 21658  004FC0  8EDB               	bsf	plusw2,7,c
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 21662  004FC2  0E01               	movlw	1
 21663  004FC4  6FB1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21664                           
 21665                           ; BSR set to: 0
 21666                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 21667  004FC6  EE20 F001          	lfsr	2,1
 21668  004FCA  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21669  004FCC  26D9               	addwf	fsr2l,f,c
 21670  004FCE  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21671  004FD0  22DA               	addwfc	fsr2h,f,c
 21672  004FD2  0E08               	movlw	8
 21673  004FD4  6EDF               	movwf	indf2,c
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21677  004FD6  EE20 F002          	lfsr	2,2
 21678  004FDA  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21679  004FDC  26D9               	addwf	fsr2l,f,c
 21680  004FDE  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21681  004FE0  22DA               	addwfc	fsr2h,f,c
 21682  004FE2  0E30               	movlw	48
 21683  004FE4  6EDE               	movwf	postinc2,c
 21684  004FE6  0E0D               	movlw	13
 21685  004FE8  6EDD               	movwf	postdec2,c
 21686                           
 21687                           ; BSR set to: 0
 21688                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 21689  004FEA  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21690  004FEE  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21691  004FF2  0E80               	movlw	128
 21692  004FF4  6EDF               	movwf	indf2,c
 21693                           
 21694                           ; BSR set to: 0
 21695                           
 21696                           ; BSR set to: 0
 21697                           
 21698                           ; BSR set to: 0
 21699  004FF6  0012               	return	
 21700  004FF8                     __end_of_USBCtrlEPAllowStatusStage:
 21701                           	opt stack 0
 21702                           tosu	equ	0xFFF
 21703                           tosh	equ	0xFFE
 21704                           tosl	equ	0xFFD
 21705                           pclath	equ	0xFFA
 21706                           tblptru	equ	0xFF8
 21707                           tblptrh	equ	0xFF7
 21708                           tblptrl	equ	0xFF6
 21709                           tablat	equ	0xFF5
 21710                           prodh	equ	0xFF4
 21711                           prodl	equ	0xFF3
 21712                           intcon	equ	0xFF2
 21713                           intcon2	equ	0xFF1
 21714                           intcon3	equ	0xFF0
 21715                           indf0	equ	0xFEF
 21716                           postinc0	equ	0xFEE
 21717                           fsr0h	equ	0xFEA
 21718                           fsr0l	equ	0xFE9
 21719                           wreg	equ	0xFE8
 21720                           indf1	equ	0xFE7
 21721                           postdec1	equ	0xFE5
 21722                           plusw1	equ	0xFE3
 21723                           fsr1h	equ	0xFE2
 21724                           fsr1l	equ	0xFE1
 21725                           indf2	equ	0xFDF
 21726                           postinc2	equ	0xFDE
 21727                           postdec2	equ	0xFDD
 21728                           plusw2	equ	0xFDB
 21729                           fsr2h	equ	0xFDA
 21730                           fsr2l	equ	0xFD9
 21731                           status	equ	0xFD8
 21732                           
 21733 ;; *************** function _USBCtrlTrfInHandler *****************
 21734 ;; Defined at:
 21735 ;;		line 2594 in file "usb_device.c"
 21736 ;; Parameters:    Size  Location     Type
 21737 ;;		None
 21738 ;; Auto vars:     Size  Location     Type
 21739 ;;  lastDTS         1    1[COMRAM] unsigned char 
 21740 ;; Return value:  Size  Location     Type
 21741 ;;                  1    wreg      void 
 21742 ;; Registers used:
 21743 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21744 ;; Tracked objects:
 21745 ;;		On entry : 0/0
 21746 ;;		On exit  : 0/0
 21747 ;;		Unchanged: 0/0
 21748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21753 ;;Total ram usage:        1 bytes
 21754 ;; Hardware stack levels used:    1
 21755 ;; Hardware stack levels required when called:    1
 21756 ;; This function calls:
 21757 ;;		_USBCtrlTrfTxService
 21758 ;; This function is called by:
 21759 ;;		_USBCtrlEPService
 21760 ;; This function uses a non-reentrant model
 21761 ;;
 21762                           
 21763                           	psect	text103
 21764  004DA8                     __ptext103:
 21765                           	opt stack 0
 21766  004DA8                     _USBCtrlTrfInHandler:
 21767                           	opt stack 27
 21768                           
 21769                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;incstack = 0
 21773  004DA8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21774  004DAC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21775  004DB0  0100               	movlb	0	; () banked
 21776  004DB2  0E00               	movlw	0
 21777  004DB4  BCDF               	btfsc	indf2,6,c
 21778  004DB6  0E01               	movlw	1
 21779  004DB8  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 21780                           
 21781                           ; BSR set to: 0
 21782                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21783  004DBA  0E04               	movlw	4
 21784  004DBC  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 21785  004DBE  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 21786  004DC0  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21787  004DC2  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 21791  004DC4  0E08               	movlw	8
 21792  004DC6  19B7               	xorwf	_USBDeviceState& (0+255),w,b
 21793  004DC8  A4D8               	btfss	status,2,c
 21794  004DCA  D00D               	goto	l329
 21795                           
 21796                           ; BSR set to: 0
 21797                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 21798  004DCC  010D               	movlb	13	; () banked
 21799  004DCE  5132               	movf	50,w,b	;volatile
 21800  004DD0  0B7F               	andlw	127
 21801  004DD2  010F               	movlb	15	; () banked
 21802  004DD4  6F38               	movwf	56,b	;volatile
 21803                           
 21804                           ; BSR set to: 15
 21805                           ;usb_device.c: 2609: if(UADDR != 0u)
 21806  004DD6  5138               	movf	56,w,b	;volatile
 21807  004DD8  B4D8               	btfsc	status,2,c
 21808  004DDA  D002               	goto	l328
 21809                           
 21810                           ; BSR set to: 15
 21811                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 21812  004DDC  0E10               	movlw	16
 21813  004DDE  D001               	goto	L15
 21814  004DE0                     l328:
 21815                           
 21816                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 21817                           
 21818                           ; BSR set to: 0
 21819  004DE0  0E04               	movlw	4
 21820  004DE2                     L15:
 21821  004DE2  0100               	movlb	0	; () banked
 21822  004DE4  6FB7               	movwf	_USBDeviceState& (0+255),b
 21823  004DE6                     l329:
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 21827                           
 21828                           ; BSR set to: 0
 21829                           
 21830                           ; BSR set to: 0
 21831  004DE6  05B5               	decf	_controlTransferState& (0+255),w,b
 21832  004DE8  A4D8               	btfss	status,2,c
 21833  004DEA  D03B               	goto	l330
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 21837  004DEC  EE20 F002          	lfsr	2,2
 21838  004DF0  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21839  004DF2  26D9               	addwf	fsr2l,f,c
 21840  004DF4  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21841  004DF6  22DA               	addwfc	fsr2h,f,c
 21842  004DF8  0E38               	movlw	56
 21843  004DFA  6EDE               	movwf	postinc2,c
 21844  004DFC  0E0D               	movlw	13
 21845  004DFE  6EDD               	movwf	postdec2,c
 21846                           
 21847                           ; BSR set to: 0
 21848                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 21849  004E00  EC0A  F026         	call	_USBCtrlTrfTxService	;wreg free
 21850                           
 21851                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 21852  004E04  0E02               	movlw	2
 21853  004E06  0100               	movlb	0	; () banked
 21854  004E08  19B6               	xorwf	_shortPacketStatus& (0+255),w,b
 21855  004E0A  A4D8               	btfss	status,2,c
 21856  004E0C  D00D               	goto	l331
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 21860  004E0E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21861  004E12  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21862  004E16  0E04               	movlw	4
 21863  004E18  6EDF               	movwf	indf2,c
 21864                           
 21865                           ; BSR set to: 0
 21866                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21867  004E1A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21868  004E1E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21869  004E22  0E00               	movlw	0
 21870  004E24  8EDB               	bsf	plusw2,7,c
 21871                           
 21872                           ;usb_device.c: 2635: }
 21873  004E26  0012               	return	
 21874  004E28                     l331:
 21875                           
 21876                           ; BSR set to: 0
 21877                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 21878                           
 21879                           ; BSR set to: 0
 21880  004E28  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 21881  004E2A  A4D8               	btfss	status,2,c
 21882  004E2C  D00D               	goto	l333
 21883                           
 21884                           ; BSR set to: 0
 21885                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 21886  004E2E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21887  004E32  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21888  004E36  0E48               	movlw	72
 21889  004E38  6EDF               	movwf	indf2,c
 21890                           
 21891                           ; BSR set to: 0
 21892                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21893  004E3A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21894  004E3E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21895  004E42  0E00               	movlw	0
 21896  004E44  8EDB               	bsf	plusw2,7,c
 21897                           
 21898                           ;usb_device.c: 2642: }
 21899  004E46  0012               	return	
 21900  004E48                     l333:
 21901                           
 21902                           ; BSR set to: 0
 21903                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 21904                           
 21905                           ; BSR set to: 0
 21906  004E48  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21907  004E4C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21908  004E50  0E08               	movlw	8
 21909  004E52  6EDF               	movwf	indf2,c
 21910                           
 21911                           ; BSR set to: 0
 21912                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21913  004E54  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21914  004E58  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21915  004E5C  0E00               	movlw	0
 21916  004E5E  8EDB               	bsf	plusw2,7,c
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 21920                           
 21921                           ; BSR set to: 0
 21922  004E60  0012               	return	
 21923  004E62                     l330:
 21924                           
 21925                           ; BSR set to: 0
 21926                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 21927  004E62  0101               	movlb	1	; () banked
 21928  004E64  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 21929                           
 21930                           ; BSR set to: 1
 21931                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 21932                           
 21933                           ; BSR set to: 1
 21934  004E66  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21935                           
 21936                           ; BSR set to: 1
 21937                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 21938                           
 21939                           ; BSR set to: 1
 21940  004E68  0E00               	movlw	0
 21941  004E6A  0100               	movlb	0	; () banked
 21942  004E6C  6FB5               	movwf	_controlTransferState& (0+255),b
 21943  004E6E  0012               	return	
 21944  004E70                     __end_of_USBCtrlTrfInHandler:
 21945                           	opt stack 0
 21946                           tosu	equ	0xFFF
 21947                           tosh	equ	0xFFE
 21948                           tosl	equ	0xFFD
 21949                           pclath	equ	0xFFA
 21950                           tblptru	equ	0xFF8
 21951                           tblptrh	equ	0xFF7
 21952                           tblptrl	equ	0xFF6
 21953                           tablat	equ	0xFF5
 21954                           prodh	equ	0xFF4
 21955                           prodl	equ	0xFF3
 21956                           intcon	equ	0xFF2
 21957                           intcon2	equ	0xFF1
 21958                           intcon3	equ	0xFF0
 21959                           indf0	equ	0xFEF
 21960                           postinc0	equ	0xFEE
 21961                           fsr0h	equ	0xFEA
 21962                           fsr0l	equ	0xFE9
 21963                           wreg	equ	0xFE8
 21964                           indf1	equ	0xFE7
 21965                           postdec1	equ	0xFE5
 21966                           plusw1	equ	0xFE3
 21967                           fsr1h	equ	0xFE2
 21968                           fsr1l	equ	0xFE1
 21969                           indf2	equ	0xFDF
 21970                           postinc2	equ	0xFDE
 21971                           postdec2	equ	0xFDD
 21972                           plusw2	equ	0xFDB
 21973                           fsr2h	equ	0xFDA
 21974                           fsr2l	equ	0xFD9
 21975                           status	equ	0xFD8
 21976                           
 21977 ;; *************** function _USBCtrlTrfTxService *****************
 21978 ;; Defined at:
 21979 ;;		line 1773 in file "usb_device.c"
 21980 ;; Parameters:    Size  Location     Type
 21981 ;;		None
 21982 ;; Auto vars:     Size  Location     Type
 21983 ;;  byteToSend      1    0[COMRAM] unsigned char 
 21984 ;; Return value:  Size  Location     Type
 21985 ;;                  1    wreg      void 
 21986 ;; Registers used:
 21987 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21988 ;; Tracked objects:
 21989 ;;		On entry : 0/0
 21990 ;;		On exit  : 0/0
 21991 ;;		Unchanged: 0/0
 21992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21997 ;;Total ram usage:        1 bytes
 21998 ;; Hardware stack levels used:    1
 21999 ;; This function calls:
 22000 ;;		Nothing
 22001 ;; This function is called by:
 22002 ;;		_USBCtrlEPAllowDataStage
 22003 ;;		_USBCtrlTrfInHandler
 22004 ;; This function uses a non-reentrant model
 22005 ;;
 22006                           
 22007                           	psect	text104
 22008  004C14                     __ptext104:
 22009                           	opt stack 0
 22010  004C14                     _USBCtrlTrfTxService:
 22011                           	opt stack 25
 22012                           
 22013                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;incstack = 0
 22017  004C14  0E08               	movlw	8
 22018  004C16  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 22019                           
 22020                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 22021  004C18  0100               	movlb	0	; () banked
 22022  004C1A  516B               	movf	(_inPipes+5)& (0+255),w,b
 22023  004C1C  E110               	bnz	l9783
 22024  004C1E  0E08               	movlw	8
 22025  004C20  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 22026  004C22  B0D8               	btfsc	status,0,c
 22027  004C24  D00C               	goto	l235
 22028                           
 22029                           ; BSR set to: 0
 22030                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 22031  004C26  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 22035  004C2A  51B6               	movf	_shortPacketStatus& (0+255),w,b
 22036  004C2C  A4D8               	btfss	status,2,c
 22037  004C2E  D002               	goto	l233
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 22041  004C30  0E01               	movlw	1
 22042  004C32  D004               	goto	L16
 22043  004C34                     l233:
 22044                           
 22045                           ; BSR set to: 0
 22046                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 22047                           
 22048                           ; BSR set to: 0
 22049  004C34  05B6               	decf	_shortPacketStatus& (0+255),w,b
 22050  004C36  A4D8               	btfss	status,2,c
 22051  004C38  D002               	goto	l235
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 22055  004C3A  0E02               	movlw	2
 22056  004C3C                     L16:
 22057  004C3C  6FB6               	movwf	_shortPacketStatus& (0+255),b
 22058  004C3E                     l235:
 22059  004C3E                     l9783:
 22060                           
 22061                           ; BSR set to: 0
 22062                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 22063  004C3E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22064  004C40  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 22065  004C42  0E00               	movlw	0
 22066  004C44  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 22067                           
 22068                           ; BSR set to: 0
 22069                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 22070  004C46  EE20 F001          	lfsr	2,1
 22071  004C4A  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22072  004C4C  26D9               	addwf	fsr2l,f,c
 22073  004C4E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22074  004C50  22DA               	addwfc	fsr2h,f,c
 22075  004C52  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 22079  004C56  0E38               	movlw	56
 22080  004C58  6F94               	movwf	_pDst& (0+255),b
 22081  004C5A  0E0D               	movlw	13
 22082  004C5C  6F95               	movwf	(_pDst+1)& (0+255),b
 22083                           
 22084                           ; BSR set to: 0
 22085                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22086  004C5E  A169               	btfss	(_inPipes+3)& (0+255),0,b
 22087  004C60  D01C               	goto	l237
 22088  004C62  D03A               	goto	l241
 22089  004C64                     
 22090                           ; BSR set to: 0
 22091                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 22092                           
 22093                           ; BSR set to: 0
 22094  004C64  C066  FFF6         	movff	_inPipes,tblptrl
 22095  004C68  C067  FFF7         	movff	_inPipes+1,tblptrh
 22096  004C6C  6AF8               	clrf	tblptru,c
 22097  004C6E  C094  FFD9         	movff	_pDst,fsr2l
 22098  004C72  C095  FFDA         	movff	_pDst+1,fsr2h
 22099  004C76  0E0E               	movlw	(high __ramtop+-1)
 22100  004C78  64F7               	cpfsgt	tblptrh,c
 22101  004C7A  D003               	bra	u6957
 22102  004C7C  0008               	tblrd		*
 22103  004C7E  50F5               	movf	tablat,w,c
 22104  004C80  D005               	bra	u6950
 22105  004C82                     u6957:
 22106  004C82  CFF6 FFE9          	movff	tblptrl,fsr0l
 22107  004C86  CFF7 FFEA          	movff	tblptrh,fsr0h
 22108  004C8A  50EF               	movf	indf0,w,c
 22109  004C8C                     u6950:
 22110  004C8C  6EDF               	movwf	indf2,c
 22111  004C8E  0100               	movlb	0	; () banked
 22112  004C90  4B66               	infsnz	_inPipes& (0+255),f,b
 22113  004C92  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22114                           
 22115                           ; BSR set to: 0
 22116  004C94  4B94               	infsnz	_pDst& (0+255),f,b
 22117  004C96  2B95               	incf	(_pDst+1)& (0+255),f,b
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;usb_device.c: 1816: byteToSend--;
 22121  004C98  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22122  004C9A                     l237:
 22123                           
 22124                           ; BSR set to: 0
 22125                           
 22126                           ; BSR set to: 0
 22127  004C9A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22128  004C9C  B4D8               	btfsc	status,2,c
 22129  004C9E  0012               	return	
 22130  004CA0  D7E1               	goto	l238
 22131  004CA2                     
 22132                           ; BSR set to: 0
 22133                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 22134                           
 22135                           ; BSR set to: 0
 22136  004CA2  C066  FFF6         	movff	_inPipes,tblptrl
 22137  004CA6  C067  FFF7         	movff	_inPipes+1,tblptrh
 22138  004CAA  6AF8               	clrf	tblptru,c
 22139  004CAC  C094  FFD9         	movff	_pDst,fsr2l
 22140  004CB0  C095  FFDA         	movff	_pDst+1,fsr2h
 22141  004CB4  0E0E               	movlw	(high __ramtop+-1)
 22142  004CB6  64F7               	cpfsgt	tblptrh,c
 22143  004CB8  D003               	bra	u6977
 22144  004CBA  0008               	tblrd		*
 22145  004CBC  50F5               	movf	tablat,w,c
 22146  004CBE  D005               	bra	u6970
 22147  004CC0                     u6977:
 22148  004CC0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22149  004CC4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22150  004CC8  50EF               	movf	indf0,w,c
 22151  004CCA                     u6970:
 22152  004CCA  6EDF               	movwf	indf2,c
 22153  004CCC  0100               	movlb	0	; () banked
 22154  004CCE  4B66               	infsnz	_inPipes& (0+255),f,b
 22155  004CD0  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22156                           
 22157                           ; BSR set to: 0
 22158  004CD2  4B94               	infsnz	_pDst& (0+255),f,b
 22159  004CD4  2B95               	incf	(_pDst+1)& (0+255),f,b
 22160                           
 22161                           ; BSR set to: 0
 22162                           ;usb_device.c: 1824: byteToSend--;
 22163  004CD6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22164  004CD8                     l241:
 22165                           
 22166                           ; BSR set to: 0
 22167                           
 22168                           ; BSR set to: 0
 22169  004CD8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22170  004CDA  B4D8               	btfsc	status,2,c
 22171  004CDC  0012               	return	
 22172  004CDE  D7E1               	goto	l242
 22173  004CE0                     __end_of_USBCtrlTrfTxService:
 22174                           	opt stack 0
 22175                           tosu	equ	0xFFF
 22176                           tosh	equ	0xFFE
 22177                           tosl	equ	0xFFD
 22178                           pclath	equ	0xFFA
 22179                           tblptru	equ	0xFF8
 22180                           tblptrh	equ	0xFF7
 22181                           tblptrl	equ	0xFF6
 22182                           tablat	equ	0xFF5
 22183                           prodh	equ	0xFF4
 22184                           prodl	equ	0xFF3
 22185                           intcon	equ	0xFF2
 22186                           intcon2	equ	0xFF1
 22187                           intcon3	equ	0xFF0
 22188                           indf0	equ	0xFEF
 22189                           postinc0	equ	0xFEE
 22190                           fsr0h	equ	0xFEA
 22191                           fsr0l	equ	0xFE9
 22192                           wreg	equ	0xFE8
 22193                           indf1	equ	0xFE7
 22194                           postdec1	equ	0xFE5
 22195                           plusw1	equ	0xFE3
 22196                           fsr1h	equ	0xFE2
 22197                           fsr1l	equ	0xFE1
 22198                           indf2	equ	0xFDF
 22199                           postinc2	equ	0xFDE
 22200                           postdec2	equ	0xFDD
 22201                           plusw2	equ	0xFDB
 22202                           fsr2h	equ	0xFDA
 22203                           fsr2l	equ	0xFD9
 22204                           status	equ	0xFD8
 22205                           
 22206 ;; *************** function _APP_DeviceMSDTasks *****************
 22207 ;; Defined at:
 22208 ;;		line 110 in file "app_device_msd.c"
 22209 ;; Parameters:    Size  Location     Type
 22210 ;;		None
 22211 ;; Auto vars:     Size  Location     Type
 22212 ;;		None
 22213 ;; Return value:  Size  Location     Type
 22214 ;;                  1    wreg      void 
 22215 ;; Registers used:
 22216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22217 ;; Tracked objects:
 22218 ;;		On entry : 0/0
 22219 ;;		On exit  : 0/0
 22220 ;;		Unchanged: 0/0
 22221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22226 ;;Total ram usage:        0 bytes
 22227 ;; Hardware stack levels used:    1
 22228 ;; Hardware stack levels required when called:   12
 22229 ;; This function calls:
 22230 ;;		_MSDTasks
 22231 ;; This function is called by:
 22232 ;;		_main
 22233 ;; This function uses a non-reentrant model
 22234 ;;
 22235                           
 22236                           	psect	text105
 22237  007950                     __ptext105:
 22238                           	opt stack 0
 22239  007950                     _APP_DeviceMSDTasks:
 22240                           	opt stack 18
 22241                           
 22242                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;incstack = 0
 22246  007950  0E20               	movlw	32
 22247  007952  0100               	movlb	0	; () banked
 22248  007954  61B7               	cpfslt	_USBDeviceState& (0+255),b
 22249  007956  D001               	goto	l970
 22250  007958  0012               	return	
 22251  00795A                     l970:
 22252                           
 22253                           ; BSR set to: 0
 22254                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 22255  00795A  B265               	btfsc	3941,1,c	;volatile
 22256  00795C  0012               	return	
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 22260                           
 22261                           ; BSR set to: 0
 22262                           
 22263                           ; BSR set to: 0
 22264                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 22265  00795E  EC38  F00E         	call	_MSDTasks	;wreg free
 22266  007962  0012               	return		;funcret
 22267  007964                     __end_of_APP_DeviceMSDTasks:
 22268                           	opt stack 0
 22269                           tosu	equ	0xFFF
 22270                           tosh	equ	0xFFE
 22271                           tosl	equ	0xFFD
 22272                           pclath	equ	0xFFA
 22273                           tblptru	equ	0xFF8
 22274                           tblptrh	equ	0xFF7
 22275                           tblptrl	equ	0xFF6
 22276                           tablat	equ	0xFF5
 22277                           prodh	equ	0xFF4
 22278                           prodl	equ	0xFF3
 22279                           intcon	equ	0xFF2
 22280                           intcon2	equ	0xFF1
 22281                           intcon3	equ	0xFF0
 22282                           indf0	equ	0xFEF
 22283                           postinc0	equ	0xFEE
 22284                           fsr0h	equ	0xFEA
 22285                           fsr0l	equ	0xFE9
 22286                           wreg	equ	0xFE8
 22287                           indf1	equ	0xFE7
 22288                           postdec1	equ	0xFE5
 22289                           plusw1	equ	0xFE3
 22290                           fsr1h	equ	0xFE2
 22291                           fsr1l	equ	0xFE1
 22292                           indf2	equ	0xFDF
 22293                           postinc2	equ	0xFDE
 22294                           postdec2	equ	0xFDD
 22295                           plusw2	equ	0xFDB
 22296                           fsr2h	equ	0xFDA
 22297                           fsr2l	equ	0xFD9
 22298                           status	equ	0xFD8
 22299                           
 22300 ;; *************** function _MSDTasks *****************
 22301 ;; Defined at:
 22302 ;;		line 335 in file "usb_device_msd.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;		None
 22305 ;; Auto vars:     Size  Location     Type
 22306 ;;  i               1   81[COMRAM] unsigned char 
 22307 ;; Return value:  Size  Location     Type
 22308 ;;                  1    wreg      unsigned char 
 22309 ;; Registers used:
 22310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22311 ;; Tracked objects:
 22312 ;;		On entry : 0/0
 22313 ;;		On exit  : 0/0
 22314 ;;		Unchanged: 0/0
 22315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22317 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22320 ;;Total ram usage:        6 bytes
 22321 ;; Hardware stack levels used:    1
 22322 ;; Hardware stack levels required when called:   11
 22323 ;; This function calls:
 22324 ;;		_MSDProcessCommand
 22325 ;;		_USBStallEndpoint
 22326 ;;		_USBTransferOnePacket
 22327 ;; This function is called by:
 22328 ;;		_APP_DeviceMSDTasks
 22329 ;; This function uses a non-reentrant model
 22330 ;;
 22331                           
 22332                           	psect	text106
 22333  001C70                     __ptext106:
 22334                           	opt stack 0
 22335  001C70                     _MSDTasks:
 22336                           	opt stack 18
 22337                           
 22338                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 22339                           
 22340                           ;incstack = 0
 22341  001C70  0E20               	movlw	32
 22342  001C72  0100               	movlb	0	; () banked
 22343  001C74  19B7               	xorwf	_USBDeviceState& (0+255),w,b
 22344  001C76  A4D8               	btfss	status,2,c
 22345  001C78  0012               	return	
 22346  001C7A  D117               	goto	l554
 22347  001C7C                     
 22348                           ; BSR set to: 0
 22349                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 22350                           
 22351                           ; BSR set to: 0
 22352  001C7C  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 22353  001C7E  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22354  001C80  B4D8               	btfsc	status,2,c
 22355  001C82  D006               	goto	u10100
 22356                           
 22357                           ; BSR set to: 0
 22358  001C84  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22359  001C88  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22360  001C8C  BEDF               	btfsc	indf2,7,c
 22361  001C8E  0012               	return	
 22362  001C90                     u10100:
 22363                           
 22364                           ; BSR set to: 0
 22365                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 22366                           
 22367                           ; BSR set to: 0
 22368  001C90  0E00               	movlw	0
 22369  001C92  6E52               	movwf	MSDTasks@i,c
 22370  001C94                     l12837:
 22371                           
 22372                           ; BSR set to: 0
 22373  001C94  0E1E               	movlw	30
 22374  001C96  6452               	cpfsgt	MSDTasks@i,c
 22375  001C98  D001               	goto	l559
 22376  001C9A  D014               	goto	u10120
 22377  001C9C                     l559:
 22378                           
 22379                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 22380                           
 22381                           ; BSR set to: 0
 22382  001C9C  5052               	movf	MSDTasks@i,w,c
 22383  001C9E  0D01               	mullw	1
 22384  001CA0  0E40               	movlw	64
 22385  001CA2  24F3               	addwf	prodl,w,c
 22386  001CA4  6ED9               	movwf	fsr2l,c
 22387  001CA6  0E0D               	movlw	13
 22388  001CA8  20F4               	addwfc	prodh,w,c
 22389  001CAA  6EDA               	movwf	fsr2h,c
 22390  001CAC  5052               	movf	MSDTasks@i,w,c
 22391  001CAE  0D01               	mullw	1
 22392  001CB0  0E00               	movlw	low _gblCBW
 22393  001CB2  24F3               	addwf	prodl,w,c
 22394  001CB4  6EE1               	movwf	fsr1l,c
 22395  001CB6  0E01               	movlw	high _gblCBW
 22396  001CB8  20F4               	addwfc	prodh,w,c
 22397  001CBA  6EE2               	movwf	fsr1h,c
 22398  001CBC  CFDF FFE7          	movff	indf2,indf1
 22399  001CC0  2A52               	incf	MSDTasks@i,f,c
 22400  001CC2  D7E8               	goto	l12837
 22401  001CC4                     u10120:
 22402                           
 22403                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 22404  001CC4  0100               	movlb	0	; () banked
 22405  001CC6  EE20 F001          	lfsr	2,1
 22406  001CCA  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 22407  001CCC  26D9               	addwf	fsr2l,f,c
 22408  001CCE  5191               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22409  001CD0  22DA               	addwfc	fsr2h,f,c
 22410  001CD2  0E1F               	movlw	31
 22411  001CD4  18DE               	xorwf	postinc2,w,c
 22412  001CD6  A4D8               	btfss	status,2,c
 22413  001CD8  D072               	goto	l561
 22414                           
 22415                           ; BSR set to: 0
 22416  001CDA  0E55               	movlw	85
 22417  001CDC  0101               	movlb	1	; () banked
 22418  001CDE  1900               	xorwf	_gblCBW& (0+255),w,b
 22419  001CE0  E16E               	bnz	l561
 22420  001CE2  0E53               	movlw	83
 22421  001CE4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 22422  001CE6  E16B               	bnz	l561
 22423  001CE8  0E42               	movlw	66
 22424  001CEA  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 22425  001CEC  E168               	bnz	l561
 22426  001CEE  0E43               	movlw	67
 22427  001CF0  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 22428  001CF2  A4D8               	btfss	status,2,c
 22429  001CF4  D064               	goto	l561
 22430                           
 22431                           ; BSR set to: 1
 22432                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 22433  001CF6  0E01               	movlw	1
 22434  001CF8  0100               	movlb	0	; () banked
 22435  001CFA  6FA1               	movwf	_MSDCBWValid& (0+255),b
 22436                           
 22437                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 22438  001CFC  0101               	movlb	1	; () banked
 22439  001CFE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22440  001D00  A4D8               	btfss	status,2,c
 22441  001D02  D052               	goto	l562
 22442                           
 22443                           ; BSR set to: 1
 22444  001D04  0E11               	movlw	17
 22445  001D06  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 22446  001D08  D04F               	goto	l562
 22447                           
 22448                           ; BSR set to: 1
 22449  001D0A  510E               	movf	(_gblCBW+14)& (0+255),w,b
 22450  001D0C  B4D8               	btfsc	status,2,c
 22451  001D0E  D04C               	goto	l562
 22452                           
 22453                           ; BSR set to: 1
 22454  001D10  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 22455  001D14  0E3F               	movlw	63
 22456  001D16  164D               	andwf	??_MSDTasks,f,c
 22457  001D18  A4D8               	btfss	status,2,c
 22458  001D1A  D046               	goto	l562
 22459                           
 22460                           ; BSR set to: 1
 22461                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 22462  001D1C  0E55               	movlw	85
 22463  001D1E  010D               	movlb	13	; () banked
 22464  001D20  6F80               	movwf	128,b	;volatile
 22465  001D22  0E53               	movlw	83
 22466  001D24  6F81               	movwf	129,b	;volatile
 22467  001D26  0E42               	movlw	66
 22468  001D28  6F82               	movwf	130,b	;volatile
 22469  001D2A  0E53               	movlw	83
 22470  001D2C  6F83               	movwf	131,b	;volatile
 22471                           
 22472                           ; BSR set to: 13
 22473                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 22474  001D2E  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 22475  001D32  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 22476  001D36  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 22477  001D3A  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 22478                           
 22479                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 22480  001D3E  0E00               	movlw	0
 22481  001D40  6F88               	movwf	136,b	;volatile
 22482  001D42  0E00               	movlw	0
 22483  001D44  6F89               	movwf	137,b	;volatile
 22484  001D46  0E00               	movlw	0
 22485  001D48  6F8A               	movwf	138,b	;volatile
 22486  001D4A  0E00               	movlw	0
 22487  001D4C  6F8B               	movwf	139,b	;volatile
 22488                           
 22489                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 22490  001D4E  0E00               	movlw	0
 22491  001D50  6F8C               	movwf	140,b	;volatile
 22492                           
 22493                           ; BSR set to: 13
 22494                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 22495  001D52  0100               	movlb	0	; () banked
 22496  001D54  69A8               	setf	_MSDCommandState& (0+255),b
 22497                           
 22498                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 22499  001D56  0E00               	movlw	0
 22500  001D58  6FA7               	movwf	_MSDReadState& (0+255),b
 22501                           
 22502                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 22503  001D5A  0E00               	movlw	0
 22504  001D5C  6FA6               	movwf	_MSDWriteState& (0+255),b
 22505                           
 22506                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 22507  001D5E  0E00               	movlw	0
 22508  001D60  6FA5               	movwf	_MSDRetryAttempt& (0+255),b
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 22512  001D62  0E03               	movlw	3
 22513  001D64  0101               	movlb	1	; () banked
 22514  001D66  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 22515  001D68  B4D8               	btfsc	status,2,c
 22516  001D6A  D008               	goto	l563
 22517                           
 22518                           ; BSR set to: 1
 22519                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 22520  001D6C  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22521  001D6E  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22522  001D70  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22523  001D72  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22524                           
 22525                           ; BSR set to: 1
 22526                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 22527  001D74  0E00               	movlw	0
 22528  001D76  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22529                           
 22530                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 22531  001D78  0E00               	movlw	0
 22532  001D7A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22533  001D7C                     l563:
 22534                           
 22535                           ; BSR set to: 1
 22536                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 22537                           
 22538                           ; BSR set to: 1
 22539  001D7C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 22540  001D7E  D002               	goto	l564
 22541                           
 22542                           ; BSR set to: 1
 22543                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 22544  001D80  0E01               	movlw	1
 22545  001D82  D001               	goto	L17
 22546  001D84                     l564:
 22547                           
 22548                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 22549                           
 22550                           ; BSR set to: 0
 22551  001D84  0E02               	movlw	2
 22552  001D86                     L17:
 22553  001D86  0100               	movlb	0	; () banked
 22554  001D88  6FA9               	movwf	_MSD_State& (0+255),b
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 22558                           
 22559                           ; BSR set to: 0
 22560  001D8A  0101               	movlb	1	; () banked
 22561  001D8C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22562  001D8E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22563  001D90  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22564  001D92  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22565  001D94  B4D8               	btfsc	status,2,c
 22566  001D96  D002               	goto	l566
 22567                           
 22568                           ; BSR set to: 1
 22569                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 22570  001D98  0E00               	movlw	0
 22571  001D9A  D001               	goto	L18
 22572  001D9C                     l566:
 22573                           
 22574                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 22575                           
 22576                           ; BSR set to: 0
 22577  001D9C  0E01               	movlw	1
 22578  001D9E                     L18:
 22579  001D9E  0100               	movlb	0	; () banked
 22580  001DA0  6FA2               	movwf	_MSDHostNoData& (0+255),b
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 22584                           
 22585                           ; BSR set to: 0
 22586  001DA2  C10F  F0A8         	movff	_gblCBW+15,_MSDCommandState
 22587                           
 22588                           ;usb_device_msd.c: 454: }
 22589  001DA6  0012               	return	
 22590  001DA8                     l562:
 22591                           
 22592                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 22593                           
 22594                           ; BSR set to: 0
 22595  001DA8  0E01               	movlw	1
 22596  001DAA  6E01               	movwf	USBStallEndpoint@dir,c
 22597  001DAC  0E02               	movlw	2
 22598  001DAE  ECC8  F01E         	call	_USBStallEndpoint
 22599                           
 22600                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 22601  001DB2  0E00               	movlw	0
 22602  001DB4  6E01               	movwf	USBStallEndpoint@dir,c
 22603  001DB6  0E02               	movlw	2
 22604  001DB8  ECC8  F01E         	call	_USBStallEndpoint
 22605                           
 22606                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 22607  001DBC  0012               	return	
 22608  001DBE                     l561:
 22609                           
 22610                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 22611  001DBE  0E01               	movlw	1
 22612  001DC0  6E01               	movwf	USBStallEndpoint@dir,c
 22613  001DC2  0E02               	movlw	2
 22614  001DC4  ECC8  F01E         	call	_USBStallEndpoint
 22615                           
 22616                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 22617  001DC8  0E00               	movlw	0
 22618  001DCA  6E01               	movwf	USBStallEndpoint@dir,c
 22619  001DCC  0E02               	movlw	2
 22620  001DCE  ECC8  F01E         	call	_USBStallEndpoint
 22621                           
 22622                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 22623  001DD2  0E00               	movlw	0
 22624  001DD4  0100               	movlb	0	; () banked
 22625  001DD6  6FA1               	movwf	_MSDCBWValid& (0+255),b
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 22629                           
 22630                           ; BSR set to: 0
 22631  001DD8  0012               	return	
 22632  001DDA                     
 22633                           ; BSR set to: 0
 22634                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 22635                           
 22636                           ; BSR set to: 0
 22637  001DDA  EC3F  F01E         	call	_MSDProcessCommand	;wreg free
 22638  001DDE  0AFF               	xorlw	255
 22639  001DE0  A4D8               	btfss	status,2,c
 22640  001DE2  0012               	return	
 22641                           
 22642                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 22643  001DE4  0E03               	movlw	3
 22644  001DE6  0100               	movlb	0	; () banked
 22645  001DE8  6FA9               	movwf	_MSD_State& (0+255),b
 22646                           
 22647                           ; BSR set to: 0
 22648                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 22649  001DEA  0012               	return	
 22650  001DEC                     
 22651                           ; BSR set to: 0
 22652                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 22653                           
 22654                           ; BSR set to: 0
 22655  001DEC  EC3F  F01E         	call	_MSDProcessCommand	;wreg free
 22656  001DF0  0AFF               	xorlw	255
 22657  001DF2  A4D8               	btfss	status,2,c
 22658  001DF4  0012               	return	
 22659                           
 22660                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 22661  001DF6  010D               	movlb	13	; () banked
 22662  001DF8  518C               	movf	140,w,b	;volatile
 22663  001DFA  A4D8               	btfss	status,2,c
 22664  001DFC  D008               	goto	l575
 22665                           
 22666                           ; BSR set to: 13
 22667  001DFE  5188               	movf	136,w,b	;volatile
 22668  001E00  1189               	iorwf	137,w,b	;volatile
 22669  001E02  118A               	iorwf	138,w,b	;volatile
 22670  001E04  118B               	iorwf	139,w,b	;volatile
 22671  001E06  B4D8               	btfsc	status,2,c
 22672  001E08  D002               	goto	l575
 22673                           
 22674                           ; BSR set to: 13
 22675                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 22676  001E0A  0E02               	movlw	2
 22677  001E0C  6F8C               	movwf	140,b	;volatile
 22678  001E0E                     l575:
 22679                           
 22680                           ; BSR set to: 13
 22681                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 22682  001E0E  0E03               	movlw	3
 22683  001E10  0100               	movlb	0	; () banked
 22684  001E12  6FA9               	movwf	_MSD_State& (0+255),b
 22685                           
 22686                           ; BSR set to: 0
 22687                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 22688  001E14  0012               	return	
 22689  001E16                     
 22690                           ; BSR set to: 0
 22691                           
 22692                           ; BSR set to: 0
 22693  001E16  C070  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 22694  001E1A  C071  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 22695                           
 22696                           ; BSR set to: 0
 22697                           
 22698                           ; BSR set to: 0
 22699                           
 22700                           ; BSR set to: 0
 22701  001E1E  504E               	movf	_MSDTasks$2372,w,c
 22702  001E20  104F               	iorwf	_MSDTasks$2372+1,w,c
 22703  001E22  B4D8               	btfsc	status,2,c
 22704  001E24  D00A               	goto	l577
 22705                           
 22706                           ; BSR set to: 0
 22707  001E26  C070  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 22708  001E2A  C071  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 22709                           
 22710                           ; BSR set to: 0
 22711                           
 22712                           ; BSR set to: 0
 22713                           
 22714                           ; BSR set to: 0
 22715                           
 22716                           ; BSR set to: 0
 22717  001E2E  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 22718  001E32  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 22719  001E36  BEDF               	btfsc	indf2,7,c
 22720  001E38  0012               	return	
 22721  001E3A                     l577:
 22722                           
 22723                           ; BSR set to: 0
 22724                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 22725                           
 22726                           ; BSR set to: 0
 22727  001E3A  0E01               	movlw	1
 22728  001E3C  6E01               	movwf	USBTransferOnePacket@dir,c
 22729  001E3E  0E80               	movlw	128
 22730  001E40  6E02               	movwf	USBTransferOnePacket@data,c
 22731  001E42  0E0D               	movlw	13
 22732  001E44  6E03               	movwf	USBTransferOnePacket@data+1,c
 22733  001E46  0E0D               	movlw	13
 22734  001E48  6E04               	movwf	USBTransferOnePacket@len,c
 22735  001E4A  0E02               	movlw	2
 22736  001E4C  EC52  F020         	call	_USBTransferOnePacket
 22737  001E50  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 22738  001E54  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 22739                           
 22740                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 22741  001E58  0100               	movlb	0	; () banked
 22742  001E5A  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 22743  001E5C  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22744  001E5E  B4D8               	btfsc	status,2,c
 22745  001E60  D006               	goto	u10290
 22746                           
 22747                           ; BSR set to: 0
 22748  001E62  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22749  001E66  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22750  001E6A  BEDF               	btfsc	indf2,7,c
 22751  001E6C  D00F               	goto	l586
 22752  001E6E                     u10290:
 22753                           
 22754                           ; BSR set to: 0
 22755                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 22756                           
 22757                           ; BSR set to: 0
 22758  001E6E  0E00               	movlw	0
 22759  001E70  6E01               	movwf	USBTransferOnePacket@dir,c
 22760  001E72  0E40               	movlw	64
 22761  001E74  6E02               	movwf	USBTransferOnePacket@data,c
 22762  001E76  0E0D               	movlw	13
 22763  001E78  6E03               	movwf	USBTransferOnePacket@data+1,c
 22764  001E7A  0E40               	movlw	64
 22765  001E7C  6E04               	movwf	USBTransferOnePacket@len,c
 22766  001E7E  0E02               	movlw	2
 22767  001E80  EC52  F020         	call	_USBTransferOnePacket
 22768  001E84  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 22769  001E88  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 22770  001E8C                     l586:
 22771                           
 22772                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 22773  001E8C  0E00               	movlw	0
 22774  001E8E  0100               	movlb	0	; () banked
 22775  001E90  6FA9               	movwf	_MSD_State& (0+255),b
 22776                           
 22777                           ;usb_device_msd.c: 513: break;
 22778  001E92  0012               	return	
 22779  001E94                     
 22780                           ; BSR set to: 0
 22781                           ;usb_device_msd.c: 518: MSD_State=0x00;
 22782                           
 22783                           ; BSR set to: 0
 22784  001E94  0E00               	movlw	0
 22785  001E96  6FA9               	movwf	_MSD_State& (0+255),b
 22786                           
 22787                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 22788  001E98  0E02               	movlw	2
 22789  001E9A  010D               	movlb	13	; () banked
 22790  001E9C  6F8C               	movwf	140,b	;volatile
 22791                           
 22792                           ; BSR set to: 13
 22793                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 22794  001E9E  0E00               	movlw	0
 22795  001EA0  6E01               	movwf	USBStallEndpoint@dir,c
 22796  001EA2  0E02               	movlw	2
 22797  001EA4  ECC8  F01E         	call	_USBStallEndpoint
 22798                           
 22799                           ;usb_device_msd.c: 521: }
 22800  001EA8  0012               	return	
 22801  001EAA                     l554:
 22802  001EAA  0100               	movlb	0	; () banked
 22803  001EAC  51A9               	movf	_MSD_State& (0+255),w,b
 22804                           
 22805                           ; Switch size 1, requested type "space"
 22806                           ; Number of cases is 4, Range of values is 0 to 3
 22807                           ; switch strategies available:
 22808                           ; Name         Instructions Cycles
 22809                           ; simple_byte           13     7 (average)
 22810                           ;	Chosen strategy is simple_byte
 22811  001EAE  0A00               	xorlw	0	; case 0
 22812  001EB0  B4D8               	btfsc	status,2,c
 22813  001EB2  D6E4               	goto	l555
 22814  001EB4  0A01               	xorlw	1	; case 1
 22815  001EB6  B4D8               	btfsc	status,2,c
 22816  001EB8  D790               	goto	l571
 22817  001EBA  0A03               	xorlw	3	; case 2
 22818  001EBC  B4D8               	btfsc	status,2,c
 22819  001EBE  D796               	goto	l573
 22820  001EC0  0A01               	xorlw	1	; case 3
 22821  001EC2  B4D8               	btfsc	status,2,c
 22822  001EC4  D7A8               	goto	l576
 22823  001EC6  D7E6               	goto	l589
 22824  001EC8                     __end_of_MSDTasks:
 22825                           	opt stack 0
 22826                           tosu	equ	0xFFF
 22827                           tosh	equ	0xFFE
 22828                           tosl	equ	0xFFD
 22829                           pclath	equ	0xFFA
 22830                           tblptru	equ	0xFF8
 22831                           tblptrh	equ	0xFF7
 22832                           tblptrl	equ	0xFF6
 22833                           tablat	equ	0xFF5
 22834                           prodh	equ	0xFF4
 22835                           prodl	equ	0xFF3
 22836                           intcon	equ	0xFF2
 22837                           intcon2	equ	0xFF1
 22838                           intcon3	equ	0xFF0
 22839                           indf0	equ	0xFEF
 22840                           postinc0	equ	0xFEE
 22841                           fsr0h	equ	0xFEA
 22842                           fsr0l	equ	0xFE9
 22843                           wreg	equ	0xFE8
 22844                           indf1	equ	0xFE7
 22845                           postdec1	equ	0xFE5
 22846                           plusw1	equ	0xFE3
 22847                           fsr1h	equ	0xFE2
 22848                           fsr1l	equ	0xFE1
 22849                           indf2	equ	0xFDF
 22850                           postinc2	equ	0xFDE
 22851                           postdec2	equ	0xFDD
 22852                           plusw2	equ	0xFDB
 22853                           fsr2h	equ	0xFDA
 22854                           fsr2l	equ	0xFD9
 22855                           status	equ	0xFD8
 22856                           
 22857 ;; *************** function _MSDProcessCommand *****************
 22858 ;; Defined at:
 22859 ;;		line 553 in file "usb_device_msd.c"
 22860 ;; Parameters:    Size  Location     Type
 22861 ;;		None
 22862 ;; Auto vars:     Size  Location     Type
 22863 ;;		None
 22864 ;; Return value:  Size  Location     Type
 22865 ;;                  1    wreg      unsigned char 
 22866 ;; Registers used:
 22867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22868 ;; Tracked objects:
 22869 ;;		On entry : 0/0
 22870 ;;		On exit  : 0/0
 22871 ;;		Unchanged: 0/0
 22872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22875 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22876 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22877 ;;Total ram usage:        5 bytes
 22878 ;; Hardware stack levels used:    1
 22879 ;; Hardware stack levels required when called:   10
 22880 ;; This function calls:
 22881 ;;		_ExternalFlash_MediaDetect
 22882 ;;		_ExternalFlash_MediaInitialize
 22883 ;;		_MSDProcessCommandMediaAbsent
 22884 ;;		_MSDProcessCommandMediaPresent
 22885 ;; This function is called by:
 22886 ;;		_MSDTasks
 22887 ;; This function uses a non-reentrant model
 22888 ;;
 22889                           
 22890                           	psect	text107
 22891  003C7E                     __ptext107:
 22892                           	opt stack 0
 22893  003C7E                     _MSDProcessCommand:
 22894                           	opt stack 18
 22895                           
 22896                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 22897                           
 22898                           ;incstack = 0
 22899  003C7E  C1E2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 22900  003C82  C1E3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 22901  003C86  D801               	call	u9178
 22902  003C88  D00A               	goto	u9179
 22903  003C8A                     u9178:
 22904  003C8A  0005               	push	
 22905  003C8C  6EFA               	movwf	pclath,c
 22906  003C8E  0101               	movlb	1	; () banked
 22907  003C90  51DA               	movf	(_LUN+6)& (0+255),w,b
 22908  003C92  6EFD               	movwf	tosl,c
 22909  003C94  51DB               	movf	(_LUN+7)& (0+255),w,b
 22910  003C96  6EFE               	movwf	tosh,c
 22911  003C98  6AFF               	clrf	tosu,c
 22912  003C9A  50FA               	movf	pclath,w,c
 22913  003C9C  0012               	return		;indir
 22914  003C9E                     u9179:
 22915  003C9E  0900               	iorlw	0
 22916  003CA0  B4D8               	btfsc	status,2,c
 22917  003CA2  D00C               	goto	u9190
 22918  003CA4  0101               	movlb	1	; () banked
 22919  003CA6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22920  003CA8  0D01               	mullw	1
 22921  003CAA  0EA3               	movlw	low _SoftDetach
 22922  003CAC  24F3               	addwf	prodl,w,c
 22923  003CAE  6ED9               	movwf	fsr2l,c
 22924  003CB0  0E00               	movlw	high _SoftDetach
 22925  003CB2  20F4               	addwfc	prodh,w,c
 22926  003CB4  6EDA               	movwf	fsr2h,c
 22927  003CB6  04DE               	decf	postinc2,w,c
 22928  003CB8  A4D8               	btfss	status,2,c
 22929  003CBA  D019               	goto	l592
 22930  003CBC                     u9190:
 22931                           
 22932                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 22933                           
 22934                           ; BSR set to: 1
 22935  003CBC  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 22936  003CC0  0E01               	movlw	1
 22937  003CC2  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22938  003CC4  0E00               	movlw	0
 22939  003CC6  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22940  003CC8  2A48               	incf	??_MSDProcessCommand,f,c
 22941  003CCA  D003               	goto	u9204
 22942  003CCC                     u9205:
 22943  003CCC  90D8               	bcf	status,0,c
 22944  003CCE  3649               	rlcf	??_MSDProcessCommand+1,f,c
 22945  003CD0  364A               	rlcf	??_MSDProcessCommand+2,f,c
 22946  003CD2                     u9204:
 22947  003CD2  2E48               	decfsz	??_MSDProcessCommand,f,c
 22948  003CD4  D7FB               	goto	u9205
 22949  003CD6  1C49               	comf	??_MSDProcessCommand+1,w,c
 22950  003CD8  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 22951  003CDA  1C4A               	comf	??_MSDProcessCommand+2,w,c
 22952  003CDC  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 22953  003CDE  504B               	movf	??_MSDProcessCommand+3,w,c
 22954  003CE0  0101               	movlb	1	; () banked
 22955  003CE2  1764               	andwf	_gblMediaPresent& (0+255),f,b
 22956  003CE4  504C               	movf	??_MSDProcessCommand+4,w,c
 22957  003CE6  1765               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 22958                           
 22959                           ; BSR set to: 1
 22960                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 22961  003CE8  EC8B  F034         	call	_MSDProcessCommandMediaAbsent	;wreg free
 22962                           
 22963                           ;usb_device_msd.c: 563: }
 22964  003CEC  D04E               	goto	l599
 22965  003CEE                     l592:
 22966                           
 22967                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 22968  003CEE  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 22969  003CF2  0E01               	movlw	1
 22970  003CF4  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22971  003CF6  0E00               	movlw	0
 22972  003CF8  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22973  003CFA  2A48               	incf	??_MSDProcessCommand,f,c
 22974  003CFC  D003               	goto	u9214
 22975  003CFE                     u9215:
 22976  003CFE  90D8               	bcf	status,0,c
 22977  003D00  3649               	rlcf	??_MSDProcessCommand+1,f,c
 22978  003D02  364A               	rlcf	??_MSDProcessCommand+2,f,c
 22979  003D04                     u9214:
 22980  003D04  2E48               	decfsz	??_MSDProcessCommand,f,c
 22981  003D06  D7FB               	goto	u9215
 22982  003D08  0101               	movlb	1	; () banked
 22983  003D0A  5164               	movf	_gblMediaPresent& (0+255),w,b
 22984  003D0C  1649               	andwf	??_MSDProcessCommand+1,f,c
 22985  003D0E  5165               	movf	(_gblMediaPresent+1)& (0+255),w,b
 22986  003D10  164A               	andwf	??_MSDProcessCommand+2,f,c
 22987  003D12  5049               	movf	??_MSDProcessCommand+1,w,c
 22988  003D14  104A               	iorwf	??_MSDProcessCommand+2,w,c
 22989  003D16  A4D8               	btfss	status,2,c
 22990  003D18  D036               	goto	l596
 22991                           
 22992                           ; BSR set to: 1
 22993                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 22994  003D1A  C1E2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 22995  003D1E  C1E3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 22996  003D22  D801               	call	u9238
 22997  003D24  D009               	goto	u9239
 22998  003D26                     u9238:
 22999  003D26  0005               	push	
 23000  003D28  6EFA               	movwf	pclath,c
 23001  003D2A  51D4               	movf	_LUN& (0+255),w,b
 23002  003D2C  6EFD               	movwf	tosl,c
 23003  003D2E  51D5               	movf	(_LUN+1)& (0+255),w,b
 23004  003D30  6EFE               	movwf	tosh,c
 23005  003D32  6AFF               	clrf	tosu,c
 23006  003D34  50FA               	movf	pclath,w,c
 23007  003D36  0012               	return		;indir
 23008  003D38                     u9239:
 23009  003D38  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 23010  003D3A  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 23011  003D3C  B4D8               	btfsc	status,2,c
 23012  003D3E  D020               	goto	l597
 23013                           
 23014                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 23015  003D40  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23016  003D44  0E01               	movlw	1
 23017  003D46  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23018  003D48  0E00               	movlw	0
 23019  003D4A  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23020  003D4C  2A48               	incf	??_MSDProcessCommand,f,c
 23021  003D4E  D003               	goto	u9254
 23022  003D50                     u9255:
 23023  003D50  90D8               	bcf	status,0,c
 23024  003D52  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23025  003D54  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23026  003D56                     u9254:
 23027  003D56  2E48               	decfsz	??_MSDProcessCommand,f,c
 23028  003D58  D7FB               	goto	u9255
 23029  003D5A  5049               	movf	??_MSDProcessCommand+1,w,c
 23030  003D5C  0101               	movlb	1	; () banked
 23031  003D5E  1364               	iorwf	_gblMediaPresent& (0+255),f,b
 23032  003D60  504A               	movf	??_MSDProcessCommand+2,w,c
 23033  003D62  1365               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 23034                           
 23035                           ; BSR set to: 1
 23036                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 23037  003D64  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23038  003D66  0BF0               	andlw	-16
 23039  003D68  0906               	iorlw	6
 23040  003D6A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23041                           
 23042                           ; BSR set to: 1
 23043                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 23044  003D6C  0E28               	movlw	40
 23045  003D6E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23046                           
 23047                           ; BSR set to: 1
 23048                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 23049  003D70  0E00               	movlw	0
 23050  003D72  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23051                           
 23052                           ; BSR set to: 1
 23053                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 23054  003D74  0E01               	movlw	1
 23055  003D76  010D               	movlb	13	; () banked
 23056  003D78  6F8C               	movwf	140,b	;volatile
 23057                           
 23058                           ; BSR set to: 13
 23059                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 23060  003D7A  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23061                           
 23062                           ;usb_device_msd.c: 589: }
 23063  003D7E  D005               	goto	l599
 23064  003D80                     l597:
 23065                           
 23066                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23067  003D80  EC8B  F034         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23068                           
 23069                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23070  003D84  D002               	goto	l599
 23071  003D86                     l596:
 23072                           
 23073                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23074  003D86  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23075  003D8A                     l599:
 23076                           
 23077                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23078  003D8A  0100               	movlb	0	; () banked
 23079  003D8C  51A8               	movf	_MSDCommandState& (0+255),w,b
 23080  003D8E  0012               	return	
 23081  003D90                     __end_of_MSDProcessCommand:
 23082                           	opt stack 0
 23083                           tosu	equ	0xFFF
 23084                           tosh	equ	0xFFE
 23085                           tosl	equ	0xFFD
 23086                           pclath	equ	0xFFA
 23087                           tblptru	equ	0xFF8
 23088                           tblptrh	equ	0xFF7
 23089                           tblptrl	equ	0xFF6
 23090                           tablat	equ	0xFF5
 23091                           prodh	equ	0xFF4
 23092                           prodl	equ	0xFF3
 23093                           intcon	equ	0xFF2
 23094                           intcon2	equ	0xFF1
 23095                           intcon3	equ	0xFF0
 23096                           indf0	equ	0xFEF
 23097                           postinc0	equ	0xFEE
 23098                           fsr0h	equ	0xFEA
 23099                           fsr0l	equ	0xFE9
 23100                           wreg	equ	0xFE8
 23101                           indf1	equ	0xFE7
 23102                           postdec1	equ	0xFE5
 23103                           plusw1	equ	0xFE3
 23104                           fsr1h	equ	0xFE2
 23105                           fsr1l	equ	0xFE1
 23106                           indf2	equ	0xFDF
 23107                           postinc2	equ	0xFDE
 23108                           postdec2	equ	0xFDD
 23109                           plusw2	equ	0xFDB
 23110                           fsr2h	equ	0xFDA
 23111                           fsr2l	equ	0xFD9
 23112                           status	equ	0xFD8
 23113                           
 23114 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23115 ;; Defined at:
 23116 ;;		line 635 in file "usb_device_msd.c"
 23117 ;; Parameters:    Size  Location     Type
 23118 ;;		None
 23119 ;; Auto vars:     Size  Location     Type
 23120 ;;		None
 23121 ;; Return value:  Size  Location     Type
 23122 ;;                  1    wreg      void 
 23123 ;; Registers used:
 23124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23125 ;; Tracked objects:
 23126 ;;		On entry : 0/0
 23127 ;;		On exit  : 0/0
 23128 ;;		Unchanged: 0/0
 23129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23134 ;;Total ram usage:        0 bytes
 23135 ;; Hardware stack levels used:    1
 23136 ;; Hardware stack levels required when called:    9
 23137 ;; This function calls:
 23138 ;;		_MSDErrorHandler
 23139 ;;		_MSDProcessCommandMediaPresent
 23140 ;;		_ResetSenseData
 23141 ;; This function is called by:
 23142 ;;		_MSDProcessCommand
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           
 23146                           	psect	text108
 23147  006916                     __ptext108:
 23148                           	opt stack 0
 23149  006916                     _MSDProcessCommandMediaAbsent:
 23150                           	opt stack 18
 23151                           
 23152                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 23153                           
 23154                           ; BSR set to: 0
 23155                           ;incstack = 0
 23156  006916  D01E               	goto	l603
 23157  006918                     
 23158                           ;usb_device_msd.c: 646: ResetSenseData();
 23159  006918  ECBC  F034         	call	_ResetSenseData	;wreg free
 23160                           
 23161                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 23162  00691C  0101               	movlb	1	; () banked
 23163  00691E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23164  006920  0BF0               	andlw	-16
 23165  006922  0902               	iorlw	2
 23166  006924  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23167                           
 23168                           ; BSR set to: 1
 23169                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 23170  006926  0E3A               	movlw	58
 23171  006928  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23172                           
 23173                           ; BSR set to: 1
 23174                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 23175  00692A  0E00               	movlw	0
 23176  00692C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23177                           
 23178                           ; BSR set to: 1
 23179                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 23180  00692E  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23181                           
 23182                           ;usb_device_msd.c: 655: break;
 23183  006932  0012               	return	
 23184  006934                     
 23185                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 23186  006934  0E01               	movlw	1
 23187  006936  010D               	movlb	13	; () banked
 23188  006938  6F8C               	movwf	140,b	;volatile
 23189                           
 23190                           ; BSR set to: 13
 23191                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 23192  00693A  0100               	movlb	0	; () banked
 23193  00693C  69A8               	setf	_MSDCommandState& (0+255),b
 23194                           
 23195                           ;usb_device_msd.c: 665: break;
 23196  00693E  0012               	return	
 23197  006940                     
 23198                           ; BSR set to: 0
 23199                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 23200                           
 23201                           ; BSR set to: 0
 23202  006940  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23203                           
 23204                           ;usb_device_msd.c: 671: break;
 23205  006944  0012               	return	
 23206  006946                     
 23207                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 23208  006946  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23209                           
 23210                           ;usb_device_msd.c: 677: break;
 23211  00694A  0012               	return	
 23212  00694C                     
 23213                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 23214  00694C  0E7F               	movlw	127
 23215  00694E  ECCF  F01F         	call	_MSDErrorHandler
 23216                           
 23217                           ;usb_device_msd.c: 685: }
 23218                           
 23219                           ;usb_device_msd.c: 684: break;
 23220  006952  0012               	return	
 23221  006954                     l603:
 23222  006954  0100               	movlb	0	; () banked
 23223  006956  51A8               	movf	_MSDCommandState& (0+255),w,b
 23224                           
 23225                           ; Switch size 1, requested type "space"
 23226                           ; Number of cases is 5, Range of values is 0 to 253
 23227                           ; switch strategies available:
 23228                           ; Name         Instructions Cycles
 23229                           ; simple_byte           16     9 (average)
 23230                           ;	Chosen strategy is simple_byte
 23231  006958  0A00               	xorlw	0	; case 0
 23232  00695A  B4D8               	btfsc	status,2,c
 23233  00695C  D7EB               	goto	l606
 23234  00695E  0A03               	xorlw	3	; case 3
 23235  006960  B4D8               	btfsc	status,2,c
 23236  006962  D7DA               	goto	l604
 23237  006964  0A11               	xorlw	17	; case 18
 23238  006966  B4D8               	btfsc	status,2,c
 23239  006968  D7EB               	goto	l608
 23240  00696A  0A0C               	xorlw	12	; case 30
 23241  00696C  B4D8               	btfsc	status,2,c
 23242  00696E  D7E2               	goto	l606
 23243  006970  0AE3               	xorlw	227	; case 253
 23244  006972  B4D8               	btfsc	status,2,c
 23245  006974  D7E8               	goto	l609
 23246  006976  D7EA               	goto	l610
 23247  006978                     __end_of_MSDProcessCommandMediaAbsent:
 23248                           	opt stack 0
 23249                           tosu	equ	0xFFF
 23250                           tosh	equ	0xFFE
 23251                           tosl	equ	0xFFD
 23252                           pclath	equ	0xFFA
 23253                           tblptru	equ	0xFF8
 23254                           tblptrh	equ	0xFF7
 23255                           tblptrl	equ	0xFF6
 23256                           tablat	equ	0xFF5
 23257                           prodh	equ	0xFF4
 23258                           prodl	equ	0xFF3
 23259                           intcon	equ	0xFF2
 23260                           intcon2	equ	0xFF1
 23261                           intcon3	equ	0xFF0
 23262                           indf0	equ	0xFEF
 23263                           postinc0	equ	0xFEE
 23264                           fsr0h	equ	0xFEA
 23265                           fsr0l	equ	0xFE9
 23266                           wreg	equ	0xFE8
 23267                           indf1	equ	0xFE7
 23268                           postdec1	equ	0xFE5
 23269                           plusw1	equ	0xFE3
 23270                           fsr1h	equ	0xFE2
 23271                           fsr1l	equ	0xFE1
 23272                           indf2	equ	0xFDF
 23273                           postinc2	equ	0xFDE
 23274                           postdec2	equ	0xFDD
 23275                           plusw2	equ	0xFDB
 23276                           fsr2h	equ	0xFDA
 23277                           fsr2l	equ	0xFD9
 23278                           status	equ	0xFD8
 23279                           
 23280 ;; *************** function _MSDProcessCommandMediaPresent *****************
 23281 ;; Defined at:
 23282 ;;		line 712 in file "usb_device_msd.c"
 23283 ;; Parameters:    Size  Location     Type
 23284 ;;		None
 23285 ;; Auto vars:     Size  Location     Type
 23286 ;;  capacity        4   66[COMRAM] struct .
 23287 ;;  sectorSize      4   62[COMRAM] struct .
 23288 ;;  i               1   70[COMRAM] unsigned char 
 23289 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 23290 ;; Return value:  Size  Location     Type
 23291 ;;                  1    wreg      void 
 23292 ;; Registers used:
 23293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23294 ;; Tracked objects:
 23295 ;;		On entry : 0/0
 23296 ;;		On exit  : 0/0
 23297 ;;		Unchanged: 0/0
 23298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23300 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23302 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23303 ;;Total ram usage:       14 bytes
 23304 ;; Hardware stack levels used:    1
 23305 ;; Hardware stack levels required when called:    8
 23306 ;; This function calls:
 23307 ;;		_ExternalFlash_CapacityRead
 23308 ;;		_ExternalFlash_SectorSizeRead
 23309 ;;		_ExternalFlash_WriteProtectStateGet
 23310 ;;		_MSDCheckForErrorCases
 23311 ;;		_MSDComputeDeviceInAndResidue
 23312 ;;		_MSDErrorHandler
 23313 ;;		_MSDReadHandler
 23314 ;;		_MSDWriteHandler
 23315 ;;		_ResetSenseData
 23316 ;;		_USBTransferOnePacket
 23317 ;;		_memcpy
 23318 ;; This function is called by:
 23319 ;;		_MSDProcessCommand
 23320 ;;		_MSDProcessCommandMediaAbsent
 23321 ;; This function uses a non-reentrant model
 23322 ;;
 23323                           
 23324                           	psect	text109
 23325  00049C                     __ptext109:
 23326                           	opt stack 0
 23327  00049C                     _MSDProcessCommandMediaPresent:
 23328                           	opt stack 19
 23329                           
 23330                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 23331                           
 23332                           ;incstack = 0
 23333  00049C  D1B9               	goto	l614
 23334  00049E                     
 23335                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 23336  00049E  EC77  F015         	call	_MSDReadHandler	;wreg free
 23337  0004A2  0900               	iorlw	0
 23338  0004A4  A4D8               	btfss	status,2,c
 23339  0004A6  0012               	return	
 23340                           
 23341                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 23342  0004A8  0100               	movlb	0	; () banked
 23343  0004AA  69A8               	setf	_MSDCommandState& (0+255),b
 23344                           
 23345                           ; BSR set to: 0
 23346                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 23347  0004AC  0012               	return	
 23348  0004AE                     
 23349                           ; BSR set to: 0
 23350                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 23351                           
 23352                           ; BSR set to: 0
 23353  0004AE  EC13  F009         	call	_MSDWriteHandler	;wreg free
 23354  0004B2  0900               	iorlw	0
 23355  0004B4  A4D8               	btfss	status,2,c
 23356  0004B6  0012               	return	
 23357                           
 23358                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 23359  0004B8  0100               	movlb	0	; () banked
 23360  0004BA  69A8               	setf	_MSDCommandState& (0+255),b
 23361                           
 23362                           ; BSR set to: 0
 23363                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 23364  0004BC  0012               	return	
 23365  0004BE                     
 23366                           ; BSR set to: 0
 23367                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 23368                           
 23369                           ; BSR set to: 0
 23370  0004BE  05A2               	decf	_MSDHostNoData& (0+255),w,b
 23371  0004C0  A4D8               	btfss	status,2,c
 23372  0004C2  D002               	goto	l621
 23373                           
 23374                           ; BSR set to: 0
 23375                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 23376  0004C4  69A8               	setf	_MSDCommandState& (0+255),b
 23377                           
 23378                           ;usb_device_msd.c: 751: break;
 23379  0004C6  0012               	return	
 23380  0004C8                     l621:
 23381                           
 23382                           ; BSR set to: 0
 23383                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 23384  0004C8  C112  F08D         	movff	_gblCBW+18,_TransferLength+1
 23385                           
 23386                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 23387  0004CC  C113  F08C         	movff	_gblCBW+19,_TransferLength
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 23391  0004D0  C08C  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 23392  0004D4  C08D  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 23393  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 23394  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 23395  0004DC  EC1F  F023         	call	_MSDCheckForErrorCases	;wreg free
 23396  0004E0  0900               	iorlw	0
 23397  0004E2  A4D8               	btfss	status,2,c
 23398  0004E4  0012               	return	
 23399                           
 23400                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 23401                           
 23402                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 23403  0004E6  0E00               	movlw	0
 23404  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23405  0004EA  0E24               	movlw	36
 23406  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23407  0004EE  EC58  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23408                           
 23409                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 23410  0004F2  0E00               	movlw	0
 23411  0004F4  6E01               	movwf	memcpy@d1,c
 23412  0004F6  0E06               	movlw	6
 23413  0004F8  6E02               	movwf	memcpy@d1+1,c
 23414  0004FA  0E49               	movlw	low _inq_resp
 23415  0004FC  6E03               	movwf	memcpy@s1,c
 23416  0004FE  0E8F               	movlw	high _inq_resp
 23417  000500  6E04               	movwf	memcpy@s1+1,c
 23418  000502  5003               	movf	memcpy@s1,w,c
 23419  000504  1004               	iorwf	memcpy@s1+1,w,c
 23420  000506  A4D8               	btfss	status,2,c
 23421  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 23422  00050A  6E05               	movwf	memcpy@s1+2,c
 23423  00050C  0E00               	movlw	0
 23424  00050E  6E07               	movwf	memcpy@n+1,c
 23425  000510  0E24               	movlw	36
 23426  000512  6E06               	movwf	memcpy@n,c
 23427  000514  EC26  F034         	call	_memcpy	;wreg free
 23428                           
 23429                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 23430  000518  0EFD               	movlw	253
 23431  00051A  0100               	movlb	0	; () banked
 23432  00051C  6FA8               	movwf	_MSDCommandState& (0+255),b
 23433                           
 23434                           ;usb_device_msd.c: 773: break;
 23435  00051E  0012               	return	
 23436  000520                     
 23437                           ; BSR set to: 0
 23438                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 23439                           
 23440                           ; BSR set to: 0
 23441  000520  C1E2  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 23442  000524  C1E3  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 23443  000528  D801               	call	u8108
 23444  00052A  D00A               	goto	u8109
 23445  00052C                     u8108:
 23446  00052C  0005               	push	
 23447  00052E  6EFA               	movwf	pclath,c
 23448  000530  0101               	movlb	1	; () banked
 23449  000532  51D6               	movf	(_LUN+2)& (0+255),w,b
 23450  000534  6EFD               	movwf	tosl,c
 23451  000536  51D7               	movf	(_LUN+3)& (0+255),w,b
 23452  000538  6EFE               	movwf	tosh,c
 23453  00053A  6AFF               	clrf	tosu,c
 23454  00053C  50FA               	movf	pclath,w,c
 23455  00053E  0012               	return		;indir
 23456  000540                     u8109:
 23457  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 23458  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 23459  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 23460  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 23461                           
 23462                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 23463  000550  C1E2  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 23464  000554  C1E3  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 23465  000558  D801               	call	u8118
 23466  00055A  D00A               	goto	u8119
 23467  00055C                     u8118:
 23468  00055C  0005               	push	
 23469  00055E  6EFA               	movwf	pclath,c
 23470  000560  0101               	movlb	1	; () banked
 23471  000562  51D8               	movf	(_LUN+4)& (0+255),w,b
 23472  000564  6EFD               	movwf	tosl,c
 23473  000566  51D9               	movf	(_LUN+5)& (0+255),w,b
 23474  000568  6EFE               	movwf	tosh,c
 23475  00056A  6AFF               	clrf	tosu,c
 23476  00056C  50FA               	movf	pclath,w,c
 23477  00056E  0012               	return		;indir
 23478  000570                     u8119:
 23479  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 23480  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 23481  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 23482  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 23483                           
 23484                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 23485  00057C  EE26 F000          	lfsr	2,1536
 23486  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 23487                           
 23488                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 23489  000584  EE26 F001          	lfsr	2,1537	;volatile
 23490  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 23491                           
 23492                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 23493  00058C  EE26 F002          	lfsr	2,1538	;volatile
 23494  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 23495                           
 23496                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 23497  000594  EE26 F003          	lfsr	2,1539	;volatile
 23498  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 23499                           
 23500                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 23501  00059C  EE26 F004          	lfsr	2,1540	;volatile
 23502  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 23503                           
 23504                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 23505  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 23506  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 23507                           
 23508                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 23509  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 23510  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 23511                           
 23512                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 23513  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 23514  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 23515                           
 23516                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 23517  0005BC  0E00               	movlw	0
 23518  0005BE  0100               	movlb	0	; () banked
 23519  0005C0  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23520  0005C2  0E08               	movlw	8
 23521  0005C4  6F8C               	movwf	_TransferLength& (0+255),b
 23522                           
 23523                           ; BSR set to: 0
 23524                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 23525  0005C6  0E00               	movlw	0
 23526  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23527  0005CA  0E08               	movlw	8
 23528  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23529  0005CE  EC58  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23530                           
 23531                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 23532  0005D2  0EFD               	movlw	253
 23533  0005D4  0100               	movlb	0	; () banked
 23534  0005D6  6FA8               	movwf	_MSDCommandState& (0+255),b
 23535                           
 23536                           ;usb_device_msd.c: 802: break;
 23537  0005D8  0012               	return	
 23538  0005DA                     
 23539                           ; BSR set to: 0
 23540                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 23541                           
 23542                           ; BSR set to: 0
 23543  0005DA  05A2               	decf	_MSDHostNoData& (0+255),w,b
 23544  0005DC  A4D8               	btfss	status,2,c
 23545  0005DE  D002               	goto	l625
 23546                           
 23547                           ; BSR set to: 0
 23548                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 23549  0005E0  69A8               	setf	_MSDCommandState& (0+255),b
 23550                           
 23551                           ;usb_device_msd.c: 814: break;
 23552  0005E2  0012               	return	
 23553  0005E4                     l625:
 23554                           
 23555                           ; BSR set to: 0
 23556                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 23557                           
 23558                           ; BSR set to: 0
 23559  0005E4  0E00               	movlw	0
 23560  0005E6  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23561  0005E8  0E12               	movlw	18
 23562  0005EA  6F8C               	movwf	_TransferLength& (0+255),b
 23563                           
 23564                           ; BSR set to: 0
 23565                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 23566  0005EC  0E00               	movlw	0
 23567  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23568  0005F0  0E12               	movlw	18
 23569  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23570  0005F4  EC58  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23571                           
 23572                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 23573  0005F8  0E00               	movlw	0
 23574  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 23575  0005FC                     l10539:
 23576  0005FC  0E11               	movlw	17
 23577  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 23578  000600  D001               	goto	l626
 23579  000602  D014               	goto	u8140
 23580  000604                     l626:
 23581                           
 23582                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 23583  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23584  000606  0D01               	mullw	1
 23585  000608  0E1F               	movlw	low _gblSenseData
 23586  00060A  24F3               	addwf	prodl,w,c
 23587  00060C  6ED9               	movwf	fsr2l,c
 23588  00060E  0E01               	movlw	high _gblSenseData
 23589  000610  20F4               	addwfc	prodh,w,c
 23590  000612  6EDA               	movwf	fsr2h,c
 23591  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23592  000616  0D01               	mullw	1
 23593  000618  0E00               	movlw	0
 23594  00061A  24F3               	addwf	prodl,w,c
 23595  00061C  6EE1               	movwf	fsr1l,c
 23596  00061E  0E06               	movlw	6
 23597  000620  20F4               	addwfc	prodh,w,c
 23598  000622  6EE2               	movwf	fsr1h,c
 23599  000624  CFDF FFE7          	movff	indf2,indf1
 23600  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 23601  00062A  D7E8               	goto	l10539
 23602  00062C                     u8140:
 23603                           
 23604                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 23605  00062C  0EFD               	movlw	253
 23606  00062E  0100               	movlb	0	; () banked
 23607  000630  6FA8               	movwf	_MSDCommandState& (0+255),b
 23608                           
 23609                           ;usb_device_msd.c: 827: break;
 23610  000632  0012               	return	
 23611  000634                     l628:
 23612                           
 23613                           ; BSR set to: 0
 23614                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 23615  000634  0E03               	movlw	3
 23616  000636  CFE8 F600          	movff	wreg,1536
 23617                           
 23618                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 23619  00063A  0E00               	movlw	0
 23620  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 23621                           
 23622                           ; BSR set to: 0
 23623                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 23624  000640  C1E2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 23625  000644  C1E3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 23626  000648  D801               	call	u8158
 23627  00064A  D00A               	goto	u8159
 23628  00064C                     u8158:
 23629  00064C  0005               	push	
 23630  00064E  6EFA               	movwf	pclath,c
 23631  000650  0101               	movlb	1	; () banked
 23632  000652  51DE               	movf	(_LUN+10)& (0+255),w,b
 23633  000654  6EFD               	movwf	tosl,c
 23634  000656  51DF               	movf	(_LUN+11)& (0+255),w,b
 23635  000658  6EFE               	movwf	tosh,c
 23636  00065A  6AFF               	clrf	tosu,c
 23637  00065C  50FA               	movf	pclath,w,c
 23638  00065E  0012               	return		;indir
 23639  000660                     u8159:
 23640  000660  0900               	iorlw	0
 23641  000662  A4D8               	btfss	status,2,c
 23642  000664  D004               	goto	l630
 23643  000666  0E00               	movlw	0
 23644  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 23645  00066A  0E00               	movlw	0
 23646  00066C  D003               	goto	L19
 23647  00066E                     l630:
 23648  00066E  0E00               	movlw	0
 23649  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 23650  000672  0E80               	movlw	128
 23651  000674                     L19:
 23652  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 23653  000676  EE26 F002          	lfsr	2,1538	;volatile
 23654  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 23655                           
 23656                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 23657  00067E  0E00               	movlw	0
 23658  000680  CFE8 F603          	movff	wreg,1539	;volatile
 23659                           
 23660                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 23661  000684  0E00               	movlw	0
 23662  000686  0100               	movlb	0	; () banked
 23663  000688  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23664  00068A  0E04               	movlw	4
 23665  00068C  6F8C               	movwf	_TransferLength& (0+255),b
 23666                           
 23667                           ; BSR set to: 0
 23668                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 23669  00068E  0E00               	movlw	0
 23670  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23671  000692  0E04               	movlw	4
 23672  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23673  000696  EC58  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23674                           
 23675                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 23676  00069A  0EFD               	movlw	253
 23677  00069C  0100               	movlb	0	; () banked
 23678  00069E  6FA8               	movwf	_MSDCommandState& (0+255),b
 23679                           
 23680                           ;usb_device_msd.c: 839: break;
 23681  0006A0  0012               	return	
 23682  0006A2                     
 23683                           ; BSR set to: 0
 23684                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 23685                           
 23686                           ; BSR set to: 0
 23687  0006A2  0101               	movlb	1	; () banked
 23688  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23689  0006A6  0BF0               	andlw	-16
 23690  0006A8  0905               	iorlw	5
 23691  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23692                           
 23693                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 23694  0006AC  0E20               	movlw	32
 23695  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23696                           
 23697                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 23698  0006B0  0E00               	movlw	0
 23699  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23700                           
 23701                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 23702  0006B4  0E01               	movlw	1
 23703  0006B6  010D               	movlb	13	; () banked
 23704  0006B8  6F8C               	movwf	140,b	;volatile
 23705                           
 23706                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 23707  0006BA  0E00               	movlw	0
 23708  0006BC  6F88               	movwf	136,b	;volatile
 23709  0006BE  0E00               	movlw	0
 23710  0006C0  6F89               	movwf	137,b	;volatile
 23711  0006C2  0E00               	movlw	0
 23712  0006C4  6F8A               	movwf	138,b	;volatile
 23713  0006C6  0E00               	movlw	0
 23714  0006C8  6F8B               	movwf	139,b	;volatile
 23715                           
 23716                           ; BSR set to: 13
 23717                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 23718  0006CA  0100               	movlb	0	; () banked
 23719  0006CC  69A8               	setf	_MSDCommandState& (0+255),b
 23720                           
 23721                           ;usb_device_msd.c: 848: break;
 23722  0006CE  0012               	return	
 23723  0006D0                     
 23724                           ; BSR set to: 0
 23725                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 23726                           
 23727                           ; BSR set to: 0
 23728  0006D0  0E00               	movlw	0
 23729  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 23730  0006D4  0E00               	movlw	0
 23731  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 23732  0006D8  0E00               	movlw	0
 23733  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 23734  0006DC  0E00               	movlw	0
 23735  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 23736  0006E0  EC1F  F023         	call	_MSDCheckForErrorCases	;wreg free
 23737  0006E4  0900               	iorlw	0
 23738  0006E6  A4D8               	btfss	status,2,c
 23739  0006E8  0012               	return	
 23740                           
 23741                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 23742                           
 23743                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 23744  0006EA  0101               	movlb	1	; () banked
 23745  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23746  0006EE  0B0F               	andlw	15
 23747  0006F0  0A06               	xorlw	6
 23748  0006F2  A4D8               	btfss	status,2,c
 23749  0006F4  D007               	goto	l636
 23750                           
 23751                           ; BSR set to: 1
 23752  0006F6  010D               	movlb	13	; () banked
 23753  0006F8  058C               	decf	140,w,b	;volatile
 23754  0006FA  A4D8               	btfss	status,2,c
 23755  0006FC  D003               	goto	l636
 23756                           
 23757                           ; BSR set to: 13
 23758                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 23759  0006FE  0100               	movlb	0	; () banked
 23760  000700  69A8               	setf	_MSDCommandState& (0+255),b
 23761                           
 23762                           ;usb_device_msd.c: 870: }
 23763  000702  0012               	return	
 23764  000704                     l636:
 23765                           
 23766                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 23767                           
 23768                           ; BSR set to: 0
 23769  000704  ECBC  F034         	call	_ResetSenseData	;wreg free
 23770                           
 23771                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 23772  000708  0E00               	movlw	0
 23773  00070A  010D               	movlb	13	; () banked
 23774  00070C  6F88               	movwf	136,b	;volatile
 23775  00070E  0E00               	movlw	0
 23776  000710  6F89               	movwf	137,b	;volatile
 23777  000712  0E00               	movlw	0
 23778  000714  6F8A               	movwf	138,b	;volatile
 23779  000716  0E00               	movlw	0
 23780  000718  6F8B               	movwf	139,b	;volatile
 23781                           
 23782                           ; BSR set to: 13
 23783                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 23784  00071A  0100               	movlb	0	; () banked
 23785  00071C  69A8               	setf	_MSDCommandState& (0+255),b
 23786                           
 23787                           ; BSR set to: 0
 23788                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 23789  00071E  0012               	return	
 23790  000720                     
 23791                           ; BSR set to: 0
 23792                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 23793                           
 23794                           ; BSR set to: 0
 23795                           
 23796                           ; BSR set to: 0
 23797  000720  0E00               	movlw	0
 23798  000722  010D               	movlb	13	; () banked
 23799  000724  6F88               	movwf	136,b	;volatile
 23800  000726  0E00               	movlw	0
 23801  000728  6F89               	movwf	137,b	;volatile
 23802  00072A  0E00               	movlw	0
 23803  00072C  6F8A               	movwf	138,b	;volatile
 23804  00072E  0E00               	movlw	0
 23805  000730  6F8B               	movwf	139,b	;volatile
 23806                           
 23807                           ; BSR set to: 13
 23808                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 23809  000732  0100               	movlb	0	; () banked
 23810  000734  69A8               	setf	_MSDCommandState& (0+255),b
 23811                           
 23812                           ;usb_device_msd.c: 885: break;
 23813  000736  0012               	return	
 23814  000738                     
 23815                           ; BSR set to: 0
 23816                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 23817                           
 23818                           ; BSR set to: 0
 23819  000738  518E               	movf	_USBMSDInHandle& (0+255),w,b
 23820  00073A  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 23821  00073C  B4D8               	btfsc	status,2,c
 23822  00073E  D006               	goto	u8210
 23823                           
 23824                           ; BSR set to: 0
 23825  000740  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 23826  000744  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 23827  000748  BEDF               	btfsc	indf2,7,c
 23828  00074A  0012               	return	
 23829  00074C                     u8210:
 23830                           
 23831                           ; BSR set to: 0
 23832                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 23833                           
 23834                           ; BSR set to: 0
 23835  00074C  0101               	movlb	1	; () banked
 23836  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23837  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23838  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23839  000754  E104               	bnz	u8220
 23840  000756  0E40               	movlw	64
 23841  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23842  00075A  A0D8               	btfss	status,0,c
 23843  00075C  D009               	goto	l644
 23844  00075E                     u8220:
 23845                           
 23846                           ; BSR set to: 1
 23847                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 23848  00075E  0E40               	movlw	64
 23849  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 23850                           
 23851                           ; BSR set to: 1
 23852                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 23853  000762  0E40               	movlw	64
 23854  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 23855  000766  0E00               	movlw	0
 23856  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 23857  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 23858  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 23859                           
 23860                           ;usb_device_msd.c: 900: }
 23861  00076E  D00A               	goto	l645
 23862  000770                     l644:
 23863                           
 23864                           ; BSR set to: 1
 23865                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 23866  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 23867                           
 23868                           ; BSR set to: 1
 23869                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 23870  000774  0E00               	movlw	0
 23871  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 23872  000778  0E00               	movlw	0
 23873  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 23874  00077C  0E00               	movlw	0
 23875  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 23876  000780  0E00               	movlw	0
 23877  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 23878  000784                     l645:
 23879                           
 23880                           ; BSR set to: 1
 23881                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 23882                           
 23883                           ; BSR set to: 1
 23884  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23885  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 23886  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 23887  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 23888  00078C  0100               	movlb	0	; () banked
 23889  00078E  5D8C               	subwf	_TransferLength& (0+255),w,b
 23890  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 23891  000792  598D               	subwfb	(_TransferLength+1)& (0+255),w,b
 23892  000794  A0D8               	btfss	status,0,c
 23893  000796  D005               	goto	l646
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 23897  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23898  00079A  5F8C               	subwf	_TransferLength& (0+255),f,b
 23899  00079C  0E00               	movlw	0
 23900  00079E  5B8D               	subwfb	(_TransferLength+1)& (0+255),f,b
 23901                           
 23902                           ;usb_device_msd.c: 918: }
 23903  0007A0  D01A               	goto	u8250
 23904  0007A2                     l646:
 23905                           
 23906                           ; BSR set to: 0
 23907                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 23908                           
 23909                           ; BSR set to: 0
 23910  0007A2  0E00               	movlw	0
 23911  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 23912  0007A6  D013               	goto	l648
 23913  0007A8                     
 23914                           ; BSR set to: 0
 23915                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 23916                           
 23917                           ; BSR set to: 0
 23918  0007A8  518C               	movf	_TransferLength& (0+255),w,b
 23919  0007AA  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 23920  0007AC  B4D8               	btfsc	status,2,c
 23921  0007AE  D004               	goto	l650
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 23925  0007B0  078C               	decf	_TransferLength& (0+255),f,b
 23926  0007B2  A0D8               	btfss	status,0,c
 23927  0007B4  078D               	decf	(_TransferLength+1)& (0+255),f,b
 23928                           
 23929                           ;usb_device_msd.c: 932: }
 23930  0007B6  D00A               	goto	l651
 23931  0007B8                     l650:
 23932                           
 23933                           ; BSR set to: 0
 23934                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 23935                           
 23936                           ; BSR set to: 0
 23937  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23938  0007BA  0D01               	mullw	1
 23939  0007BC  0E00               	movlw	0
 23940  0007BE  24F3               	addwf	prodl,w,c
 23941  0007C0  6ED9               	movwf	fsr2l,c
 23942  0007C2  0E06               	movlw	6
 23943  0007C4  20F4               	addwfc	prodh,w,c
 23944  0007C6  6EDA               	movwf	fsr2h,c
 23945  0007C8  0E00               	movlw	0
 23946  0007CA  6EDF               	movwf	indf2,c
 23947  0007CC                     l651:
 23948                           
 23949                           ; BSR set to: 0
 23950                           
 23951                           ; BSR set to: 0
 23952  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 23953  0007CE                     l648:
 23954                           
 23955                           ; BSR set to: 0
 23956                           
 23957                           ; BSR set to: 0
 23958  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23959  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 23960  0007D2  A0D8               	btfss	status,0,c
 23961  0007D4  D7E9               	goto	l649
 23962  0007D6                     u8250:
 23963                           
 23964                           ; BSR set to: 0
 23965                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 23966                           
 23967                           ; BSR set to: 0
 23968                           
 23969                           ; BSR set to: 0
 23970  0007D6  0E01               	movlw	1
 23971  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 23972  0007DA  0E00               	movlw	0
 23973  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 23974  0007DE  0E06               	movlw	6
 23975  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 23976  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 23977  0007E6  0E02               	movlw	2
 23978  0007E8  EC52  F020         	call	_USBTransferOnePacket
 23979  0007EC  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23980  0007F0  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23981                           
 23982                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 23983  0007F4  0101               	movlb	1	; () banked
 23984  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23985  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23986  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23987  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 23988  0007FE  A4D8               	btfss	status,2,c
 23989  000800  0012               	return	
 23990                           
 23991                           ; BSR set to: 1
 23992                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 23993  000802  0100               	movlb	0	; () banked
 23994  000804  69A8               	setf	_MSDCommandState& (0+255),b
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 23998                           
 23999                           ; BSR set to: 0
 24000                           
 24001                           ;usb_device_msd.c: 949: break;
 24002  000806  0012               	return	
 24003  000808                     
 24004                           ; BSR set to: 0
 24005                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 24006                           
 24007                           ; BSR set to: 0
 24008                           
 24009                           ;usb_device_msd.c: 954: default:
 24010                           
 24011                           ; BSR set to: 0
 24012  000808  0E7F               	movlw	127
 24013  00080A  ECCF  F01F         	call	_MSDErrorHandler
 24014                           
 24015                           ;usb_device_msd.c: 960: }
 24016                           
 24017                           ;usb_device_msd.c: 959: break;
 24018  00080E  0012               	return	
 24019  000810                     l614:
 24020  000810  0100               	movlb	0	; () banked
 24021  000812  51A8               	movf	_MSDCommandState& (0+255),w,b
 24022                           
 24023                           ; Switch size 1, requested type "space"
 24024                           ; Number of cases is 12, Range of values is 0 to 254
 24025                           ; switch strategies available:
 24026                           ; Name         Instructions Cycles
 24027                           ; simple_byte           37    19 (average)
 24028                           ;	Chosen strategy is simple_byte
 24029  000814  0A00               	xorlw	0	; case 0
 24030  000816  B4D8               	btfsc	status,2,c
 24031  000818  D75B               	goto	l634
 24032  00081A  0A03               	xorlw	3	; case 3
 24033  00081C  B4D8               	btfsc	status,2,c
 24034  00081E  D6DD               	goto	l624
 24035  000820  0A11               	xorlw	17	; case 18
 24036  000822  B4D8               	btfsc	status,2,c
 24037  000824  D64C               	goto	l620
 24038  000826  0A08               	xorlw	8	; case 26
 24039  000828  B4D8               	btfsc	status,2,c
 24040  00082A  D704               	goto	l628
 24041  00082C  0A01               	xorlw	1	; case 27
 24042  00082E  B4D8               	btfsc	status,2,c
 24043  000830  D777               	goto	l638
 24044  000832  0A05               	xorlw	5	; case 30
 24045  000834  B4D8               	btfsc	status,2,c
 24046  000836  D735               	goto	l633
 24047  000838  0A3B               	xorlw	59	; case 37
 24048  00083A  B4D8               	btfsc	status,2,c
 24049  00083C  D671               	goto	l623
 24050  00083E  0A0D               	xorlw	13	; case 40
 24051  000840  B4D8               	btfsc	status,2,c
 24052  000842  D62D               	goto	l615
 24053  000844  0A02               	xorlw	2	; case 42
 24054  000846  B4D8               	btfsc	status,2,c
 24055  000848  D632               	goto	l618
 24056  00084A  0A05               	xorlw	5	; case 47
 24057  00084C  B4D8               	btfsc	status,2,c
 24058  00084E  D768               	goto	l638
 24059  000850  0AD2               	xorlw	210	; case 253
 24060  000852  B4D8               	btfsc	status,2,c
 24061  000854  D771               	goto	l640
 24062  000856  0A03               	xorlw	3	; case 254
 24063  000858  D7D7               	goto	l654
 24064  00085A                     __end_of_MSDProcessCommandMediaPresent:
 24065                           	opt stack 0
 24066                           tosu	equ	0xFFF
 24067                           tosh	equ	0xFFE
 24068                           tosl	equ	0xFFD
 24069                           pclath	equ	0xFFA
 24070                           tblptru	equ	0xFF8
 24071                           tblptrh	equ	0xFF7
 24072                           tblptrl	equ	0xFF6
 24073                           tablat	equ	0xFF5
 24074                           prodh	equ	0xFF4
 24075                           prodl	equ	0xFF3
 24076                           intcon	equ	0xFF2
 24077                           intcon2	equ	0xFF1
 24078                           intcon3	equ	0xFF0
 24079                           indf0	equ	0xFEF
 24080                           postinc0	equ	0xFEE
 24081                           fsr0h	equ	0xFEA
 24082                           fsr0l	equ	0xFE9
 24083                           wreg	equ	0xFE8
 24084                           indf1	equ	0xFE7
 24085                           postdec1	equ	0xFE5
 24086                           plusw1	equ	0xFE3
 24087                           fsr1h	equ	0xFE2
 24088                           fsr1l	equ	0xFE1
 24089                           indf2	equ	0xFDF
 24090                           postinc2	equ	0xFDE
 24091                           postdec2	equ	0xFDD
 24092                           plusw2	equ	0xFDB
 24093                           fsr2h	equ	0xFDA
 24094                           fsr2l	equ	0xFD9
 24095                           status	equ	0xFD8
 24096                           
 24097 ;; *************** function _MSDWriteHandler *****************
 24098 ;; Defined at:
 24099 ;;		line 1188 in file "usb_device_msd.c"
 24100 ;; Parameters:    Size  Location     Type
 24101 ;;		None
 24102 ;; Auto vars:     Size  Location     Type
 24103 ;;		None
 24104 ;; Return value:  Size  Location     Type
 24105 ;;                  1    wreg      unsigned char 
 24106 ;; Registers used:
 24107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24108 ;; Tracked objects:
 24109 ;;		On entry : 0/0
 24110 ;;		On exit  : 0/0
 24111 ;;		Unchanged: 0/0
 24112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24115 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24116 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24117 ;;Total ram usage:        5 bytes
 24118 ;; Hardware stack levels used:    1
 24119 ;; Hardware stack levels required when called:    7
 24120 ;; This function calls:
 24121 ;;		_ExternalFlash_SectorWrite
 24122 ;;		_ExternalFlash_WriteProtectStateGet
 24123 ;;		_MSDCheckForErrorCases
 24124 ;;		_USBStallEndpoint
 24125 ;;		_USBTransferOnePacket
 24126 ;; This function is called by:
 24127 ;;		_MSDProcessCommandMediaPresent
 24128 ;; This function uses a non-reentrant model
 24129 ;;
 24130                           
 24131                           	psect	text110
 24132  001226                     __ptext110:
 24133                           	opt stack 0
 24134  001226                     _MSDWriteHandler:
 24135                           	opt stack 19
 24136                           
 24137                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 24138                           
 24139                           ;incstack = 0
 24140  001226  D144               	goto	l684
 24141  001228                     l685:
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 24145  001228  C111  F083         	movff	_gblCBW+17,_LBA+3
 24146                           
 24147                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 24148  00122C  C112  F082         	movff	_gblCBW+18,_LBA+2
 24149                           
 24150                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 24151  001230  C113  F081         	movff	_gblCBW+19,_LBA+1
 24152                           
 24153                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 24154  001234  C114  F080         	movff	_gblCBW+20,_LBA
 24155                           
 24156                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 24157  001238  C116  F08D         	movff	_gblCBW+22,_TransferLength+1
 24158                           
 24159                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 24160  00123C  C117  F08C         	movff	_gblCBW+23,_TransferLength
 24161                           
 24162                           ; BSR set to: 0
 24163                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24164  001240  518C               	movf	_TransferLength& (0+255),w,b
 24165  001242  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24166  001244  518D               	movf	(_TransferLength+1)& (0+255),w,b
 24167  001246  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 24168  001248  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24169  00124A  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24170  00124C  0E09               	movlw	9
 24171  00124E                     u7125:
 24172  00124E  90D8               	bcf	status,0,c
 24173  001250  3630               	rlcf	??_MSDWriteHandler,f,c
 24174  001252  3631               	rlcf	??_MSDWriteHandler+1,f,c
 24175  001254  3632               	rlcf	??_MSDWriteHandler+2,f,c
 24176  001256  3633               	rlcf	??_MSDWriteHandler+3,f,c
 24177  001258  2EE8               	decfsz	wreg,f,c
 24178  00125A  D7F9               	goto	u7125
 24179  00125C  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 24180  001260  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 24181  001264  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 24182  001268  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 24183  00126C  EC1F  F023         	call	_MSDCheckForErrorCases	;wreg free
 24184  001270  0900               	iorlw	0
 24185  001272  A4D8               	btfss	status,2,c
 24186  001274  D12F               	goto	l687
 24187                           
 24188                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 24189                           
 24190                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 24191  001276  C1E2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24192  00127A  C1E3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24193  00127E  D801               	call	u7148
 24194  001280  D00A               	goto	u7149
 24195  001282                     u7148:
 24196  001282  0005               	push	
 24197  001284  6EFA               	movwf	pclath,c
 24198  001286  0101               	movlb	1	; () banked
 24199  001288  51DE               	movf	(_LUN+10)& (0+255),w,b
 24200  00128A  6EFD               	movwf	tosl,c
 24201  00128C  51DF               	movf	(_LUN+11)& (0+255),w,b
 24202  00128E  6EFE               	movwf	tosh,c
 24203  001290  6AFF               	clrf	tosu,c
 24204  001292  50FA               	movf	pclath,w,c
 24205  001294  0012               	return		;indir
 24206  001296                     u7149:
 24207  001296  0900               	iorlw	0
 24208  001298  B4D8               	btfsc	status,2,c
 24209  00129A  D016               	goto	l688
 24210                           
 24211                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 24212  00129C  0E01               	movlw	1
 24213  00129E  010D               	movlb	13	; () banked
 24214  0012A0  6F8C               	movwf	140,b	;volatile
 24215                           
 24216                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 24217  0012A2  0101               	movlb	1	; () banked
 24218  0012A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24219  0012A6  0BF0               	andlw	-16
 24220  0012A8  0907               	iorlw	7
 24221  0012AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24222                           
 24223                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 24224  0012AC  0E27               	movlw	39
 24225  0012AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24226                           
 24227                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 24228  0012B0  0E00               	movlw	0
 24229  0012B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24230                           
 24231                           ; BSR set to: 1
 24232                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 24233  0012B4  0E00               	movlw	0
 24234  0012B6  6E01               	movwf	USBStallEndpoint@dir,c
 24235  0012B8  0E02               	movlw	2
 24236  0012BA  ECC8  F01E         	call	_USBStallEndpoint
 24237                           
 24238                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 24239  0012BE  0E00               	movlw	0
 24240  0012C0  0100               	movlb	0	; () banked
 24241  0012C2  6FA6               	movwf	_MSDWriteState& (0+255),b
 24242                           
 24243                           ; BSR set to: 0
 24244                           ;usb_device_msd.c: 1228: return MSDWriteState;
 24245  0012C4  51A6               	movf	_MSDWriteState& (0+255),w,b
 24246                           
 24247                           ; BSR set to: 0
 24248  0012C6  0012               	return	
 24249  0012C8                     l688:
 24250                           
 24251                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 24252                           
 24253                           ; BSR set to: 0
 24254  0012C8  0E01               	movlw	1
 24255  0012CA  0100               	movlb	0	; () banked
 24256  0012CC  6FA9               	movwf	_MSD_State& (0+255),b
 24257  0012CE                     
 24258                           ; BSR set to: 0
 24259                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 24260                           
 24261                           ; BSR set to: 0
 24262  0012CE  518C               	movf	_TransferLength& (0+255),w,b
 24263  0012D0  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 24264  0012D2  A4D8               	btfss	status,2,c
 24265  0012D4  D002               	goto	l691
 24266                           
 24267                           ; BSR set to: 0
 24268                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 24269  0012D6  0E00               	movlw	0
 24270  0012D8  D0E9               	goto	L23
 24271  0012DA                     l691:
 24272                           
 24273                           ; BSR set to: 0
 24274                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 24275                           
 24276                           ; BSR set to: 0
 24277  0012DA  0E03               	movlw	3
 24278  0012DC  6FA6               	movwf	_MSDWriteState& (0+255),b
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 24282  0012DE  0E00               	movlw	0
 24283  0012E0  6F92               	movwf	_ptrNextData& (0+255),b
 24284  0012E2  0E06               	movlw	6
 24285  0012E4  6F93               	movwf	(_ptrNextData+1)& (0+255),b
 24286                           
 24287                           ; BSR set to: 0
 24288                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 24289  0012E6  0E00               	movlw	0
 24290  0012E8  010D               	movlb	13	; () banked
 24291  0012EA  6F88               	movwf	136,b	;volatile
 24292  0012EC  0E02               	movlw	2
 24293  0012EE  6F89               	movwf	137,b	;volatile
 24294  0012F0  0E00               	movlw	0
 24295  0012F2  6F8A               	movwf	138,b	;volatile
 24296  0012F4  0E00               	movlw	0
 24297  0012F6  6F8B               	movwf	139,b	;volatile
 24298  0012F8                     l692:
 24299                           
 24300                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 24301  0012F8  010D               	movlb	13	; () banked
 24302  0012FA  5188               	movf	136,w,b	;volatile
 24303  0012FC  1189               	iorwf	137,w,b	;volatile
 24304  0012FE  118A               	iorwf	138,w,b	;volatile
 24305  001300  118B               	iorwf	139,w,b	;volatile
 24306  001302  B4D8               	btfsc	status,2,c
 24307  001304  D01E               	goto	l693
 24308                           
 24309                           ; BSR set to: 13
 24310                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 24311  001306  0100               	movlb	0	; () banked
 24312  001308  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24313  00130A  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24314  00130C  B4D8               	btfsc	status,2,c
 24315  00130E  D006               	goto	l694
 24316                           
 24317                           ; BSR set to: 0
 24318  001310  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24319  001314  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24320  001318  BEDF               	btfsc	indf2,7,c
 24321  00131A  D0DC               	goto	l687
 24322  00131C                     l694:
 24323                           
 24324                           ; BSR set to: 0
 24325                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 24326                           
 24327                           ; BSR set to: 0
 24328  00131C  0E00               	movlw	0
 24329  00131E  6E01               	movwf	USBTransferOnePacket@dir,c
 24330  001320  C092  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 24331  001324  C093  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 24332  001328  0E40               	movlw	64
 24333  00132A  6E04               	movwf	USBTransferOnePacket@len,c
 24334  00132C  0E02               	movlw	2
 24335  00132E  EC52  F020         	call	_USBTransferOnePacket
 24336  001332  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24337  001336  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24338                           
 24339                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 24340  00133A  0E04               	movlw	4
 24341  00133C  0100               	movlb	0	; () banked
 24342  00133E  6FA6               	movwf	_MSDWriteState& (0+255),b
 24343                           
 24344                           ;usb_device_msd.c: 1260: }
 24345  001340  D021               	goto	l695
 24346  001342                     l693:
 24347                           
 24348                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 24349                           
 24350                           ; BSR set to: 0
 24351  001342  C1E2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24352  001346  C1E3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24353  00134A  D801               	call	u7208
 24354  00134C  D00A               	goto	u7209
 24355  00134E                     u7208:
 24356  00134E  0005               	push	
 24357  001350  6EFA               	movwf	pclath,c
 24358  001352  0101               	movlb	1	; () banked
 24359  001354  51DE               	movf	(_LUN+10)& (0+255),w,b
 24360  001356  6EFD               	movwf	tosl,c
 24361  001358  51DF               	movf	(_LUN+11)& (0+255),w,b
 24362  00135A  6EFE               	movwf	tosh,c
 24363  00135C  6AFF               	clrf	tosu,c
 24364  00135E  50FA               	movf	pclath,w,c
 24365  001360  0012               	return		;indir
 24366  001362                     u7209:
 24367  001362  0900               	iorlw	0
 24368  001364  B4D8               	btfsc	status,2,c
 24369  001366  D00C               	goto	l696
 24370                           
 24371                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 24372  001368  0E01               	movlw	1
 24373  00136A  010D               	movlb	13	; () banked
 24374  00136C  6F8C               	movwf	140,b	;volatile
 24375                           
 24376                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 24377  00136E  0101               	movlb	1	; () banked
 24378  001370  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24379  001372  0BF0               	andlw	-16
 24380  001374  0902               	iorlw	2
 24381  001376  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24382                           
 24383                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 24384  001378  0E27               	movlw	39
 24385  00137A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24386                           
 24387                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 24388  00137C  0E00               	movlw	0
 24389  00137E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24390  001380                     l696:
 24391                           
 24392                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 24393  001380  0E02               	movlw	2
 24394  001382  D093               	goto	L43
 24395  001384                     l695:
 24396                           
 24397                           ; BSR set to: 0
 24398                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 24399                           
 24400                           ; BSR set to: 0
 24401                           
 24402                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 24403                           
 24404                           ; BSR set to: 0
 24405  001384  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24406  001386  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24407  001388  B4D8               	btfsc	status,2,c
 24408  00138A  D006               	goto	l698
 24409                           
 24410                           ; BSR set to: 0
 24411  00138C  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24412  001390  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24413  001394  BEDF               	btfsc	indf2,7,c
 24414  001396  D09E               	goto	l687
 24415  001398                     l698:
 24416                           
 24417                           ; BSR set to: 0
 24418                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 24419                           
 24420                           ; BSR set to: 0
 24421  001398  EE20 F001          	lfsr	2,1
 24422  00139C  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24423  00139E  26D9               	addwf	fsr2l,f,c
 24424  0013A0  5191               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24425  0013A2  22DA               	addwfc	fsr2h,f,c
 24426  0013A4  50DF               	movf	indf2,w,c
 24427  0013A6  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24428  0013A8  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24429  0013AC  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24430  0013AE  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24431  0013B0  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24432  0013B2  5031               	movf	??_MSDWriteHandler+1,w,c
 24433  0013B4  0101               	movlb	1	; () banked
 24434  0013B6  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24435  0013B8  5032               	movf	??_MSDWriteHandler+2,w,c
 24436  0013BA  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24437  0013BC  5033               	movf	??_MSDWriteHandler+3,w,c
 24438  0013BE  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24439  0013C0  5034               	movf	??_MSDWriteHandler+4,w,c
 24440  0013C2  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24441                           
 24442                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 24443  0013C4  0100               	movlb	0	; () banked
 24444  0013C6  EE20 F001          	lfsr	2,1
 24445  0013CA  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 24446  0013CC  26D9               	addwf	fsr2l,f,c
 24447  0013CE  5191               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24448  0013D0  22DA               	addwfc	fsr2h,f,c
 24449  0013D2  50DF               	movf	indf2,w,c
 24450  0013D4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24451  0013D6  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24452  0013DA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24453  0013DC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24454  0013DE  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24455  0013E0  5031               	movf	??_MSDWriteHandler+1,w,c
 24456  0013E2  010D               	movlb	13	; () banked
 24457  0013E4  5F88               	subwf	136,f,b	;volatile
 24458  0013E6  5032               	movf	??_MSDWriteHandler+2,w,c
 24459  0013E8  5B89               	subwfb	137,f,b	;volatile
 24460  0013EA  5033               	movf	??_MSDWriteHandler+3,w,c
 24461  0013EC  5B8A               	subwfb	138,f,b	;volatile
 24462  0013EE  5034               	movf	??_MSDWriteHandler+4,w,c
 24463  0013F0  5B8B               	subwfb	139,f,b	;volatile
 24464                           
 24465                           ; BSR set to: 13
 24466                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 24467  0013F2  0E40               	movlw	64
 24468  0013F4  0100               	movlb	0	; () banked
 24469  0013F6  2792               	addwf	_ptrNextData& (0+255),f,b
 24470  0013F8  0E00               	movlw	0
 24471  0013FA  2393               	addwfc	(_ptrNextData+1)& (0+255),f,b
 24472                           
 24473                           ; BSR set to: 0
 24474                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 24475  0013FC  0E03               	movlw	3
 24476  0013FE  D056               	goto	L23
 24477  001400                     
 24478                           ; BSR set to: 0
 24479                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 24480                           
 24481                           ; BSR set to: 0
 24482  001400  010D               	movlb	13	; () banked
 24483  001402  518C               	movf	140,w,b	;volatile
 24484  001404  A4D8               	btfss	status,2,c
 24485  001406  D03C               	goto	l703
 24486                           
 24487                           ; BSR set to: 13
 24488                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 24489  001408  C1E2  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 24490  00140C  C1E3  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 24491  001410  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 24492  001414  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 24493  001418  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 24494  00141C  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 24495  001420  0E00               	movlw	0
 24496  001422  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 24497  001424  0E06               	movlw	6
 24498  001426  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 24499  001428  0100               	movlb	0	; () banked
 24500  00142A  5180               	movf	_LBA& (0+255),w,b
 24501  00142C  1181               	iorwf	(_LBA+1)& (0+255),w,b
 24502  00142E  1182               	iorwf	(_LBA+2)& (0+255),w,b
 24503  001430  1183               	iorwf	(_LBA+3)& (0+255),w,b
 24504  001432  A4D8               	btfss	status,2,c
 24505  001434  D002               	goto	u7250
 24506  001436  0E01               	movlw	1
 24507  001438  D001               	goto	u7260
 24508  00143A                     u7250:
 24509  00143A  0E00               	movlw	0
 24510  00143C                     u7260:
 24511  00143C  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 24512  00143E  D801               	call	u7278
 24513  001440  D00A               	goto	u7279
 24514  001442                     u7278:
 24515  001442  0005               	push	
 24516  001444  6EFA               	movwf	pclath,c
 24517  001446  0101               	movlb	1	; () banked
 24518  001448  51E0               	movf	(_LUN+12)& (0+255),w,b
 24519  00144A  6EFD               	movwf	tosl,c
 24520  00144C  51E1               	movf	(_LUN+13)& (0+255),w,b
 24521  00144E  6EFE               	movwf	tosh,c
 24522  001450  6AFF               	clrf	tosu,c
 24523  001452  50FA               	movf	pclath,w,c
 24524  001454  0012               	return		;indir
 24525  001456                     u7279:
 24526  001456  06E8               	decf	wreg,f,c
 24527  001458  B4D8               	btfsc	status,2,c
 24528  00145A  D012               	goto	l703
 24529                           
 24530                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 24531  00145C  0E64               	movlw	100
 24532  00145E  0100               	movlb	0	; () banked
 24533  001460  61A5               	cpfslt	_MSDRetryAttempt& (0+255),b
 24534  001462  D002               	goto	l702
 24535                           
 24536                           ; BSR set to: 0
 24537                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 24538  001464  2BA5               	incf	_MSDRetryAttempt& (0+255),f,b
 24539                           
 24540                           ;usb_device_msd.c: 1314: break;
 24541  001466  D036               	goto	l687
 24542  001468                     l702:
 24543                           
 24544                           ; BSR set to: 0
 24545                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 24546                           
 24547                           ; BSR set to: 0
 24548  001468  0E01               	movlw	1
 24549  00146A  010D               	movlb	13	; () banked
 24550  00146C  6F8C               	movwf	140,b	;volatile
 24551                           
 24552                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 24553  00146E  0101               	movlb	1	; () banked
 24554  001470  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24555  001472  0BF0               	andlw	-16
 24556  001474  0903               	iorlw	3
 24557  001476  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24558                           
 24559                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 24560  001478  0E00               	movlw	0
 24561  00147A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24562                           
 24563                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 24564  00147C  0E00               	movlw	0
 24565  00147E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24566  001480                     l703:
 24567                           
 24568                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 24569                           
 24570                           ; BSR set to: 1
 24571                           
 24572                           ; BSR set to: 1
 24573                           
 24574                           ; BSR set to: 1
 24575  001480  0E01               	movlw	1
 24576  001482  0100               	movlb	0	; () banked
 24577  001484  2780               	addwf	_LBA& (0+255),f,b
 24578  001486  0E00               	movlw	0
 24579  001488  2381               	addwfc	(_LBA+1)& (0+255),f,b
 24580  00148A  2382               	addwfc	(_LBA+2)& (0+255),f,b
 24581  00148C  2383               	addwfc	(_LBA+3)& (0+255),f,b
 24582                           
 24583                           ; BSR set to: 0
 24584                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 24585  00148E  078C               	decf	_TransferLength& (0+255),f,b
 24586  001490  A0D8               	btfss	status,0,c
 24587  001492  078D               	decf	(_TransferLength+1)& (0+255),f,b
 24588                           
 24589                           ; BSR set to: 0
 24590                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 24591  001494  0E01               	movlw	1
 24592  001496  D00A               	goto	L23
 24593  001498                     
 24594                           ; BSR set to: 0
 24595                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 24596                           
 24597                           ; BSR set to: 0
 24598  001498  0E02               	movlw	2
 24599  00149A  010D               	movlb	13	; () banked
 24600  00149C  6F8C               	movwf	140,b	;volatile
 24601                           
 24602                           ; BSR set to: 13
 24603                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 24604  00149E  0E00               	movlw	0
 24605  0014A0  6E01               	movwf	USBStallEndpoint@dir,c
 24606  0014A2  0E02               	movlw	2
 24607  0014A4  ECC8  F01E         	call	_USBStallEndpoint
 24608                           
 24609                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 24610  0014A8  0E00               	movlw	0
 24611  0014AA                     L43:
 24612  0014AA  0100               	movlb	0	; () banked
 24613  0014AC                     L23:
 24614  0014AC  6FA6               	movwf	_MSDWriteState& (0+255),b
 24615                           
 24616                           ; BSR set to: 0
 24617                           ;usb_device_msd.c: 1345: }
 24618                           
 24619                           ;usb_device_msd.c: 1344: break;
 24620  0014AE  D012               	goto	l687
 24621  0014B0                     l684:
 24622                           
 24623                           ; BSR set to: 0
 24624  0014B0  0100               	movlb	0	; () banked
 24625  0014B2  51A6               	movf	_MSDWriteState& (0+255),w,b
 24626                           
 24627                           ; Switch size 1, requested type "space"
 24628                           ; Number of cases is 5, Range of values is 0 to 4
 24629                           ; switch strategies available:
 24630                           ; Name         Instructions Cycles
 24631                           ; simple_byte           16     9 (average)
 24632                           ;	Chosen strategy is simple_byte
 24633  0014B4  0A00               	xorlw	0	; case 0
 24634  0014B6  B4D8               	btfsc	status,2,c
 24635  0014B8  D6B7               	goto	l685
 24636  0014BA  0A01               	xorlw	1	; case 1
 24637  0014BC  B4D8               	btfsc	status,2,c
 24638  0014BE  D707               	goto	l690
 24639  0014C0  0A03               	xorlw	3	; case 2
 24640  0014C2  B4D8               	btfsc	status,2,c
 24641  0014C4  D79D               	goto	l699
 24642  0014C6  0A01               	xorlw	1	; case 3
 24643  0014C8  B4D8               	btfsc	status,2,c
 24644  0014CA  D716               	goto	l692
 24645  0014CC  0A07               	xorlw	7	; case 4
 24646  0014CE  B4D8               	btfsc	status,2,c
 24647  0014D0  D759               	goto	l695
 24648  0014D2  D7E2               	goto	l704
 24649  0014D4                     l687:
 24650                           
 24651                           ;usb_device_msd.c: 1347: return MSDWriteState;
 24652                           
 24653                           ; BSR set to: 0
 24654  0014D4  0100               	movlb	0	; () banked
 24655  0014D6  51A6               	movf	_MSDWriteState& (0+255),w,b
 24656  0014D8  0012               	return	
 24657  0014DA                     __end_of_MSDWriteHandler:
 24658                           	opt stack 0
 24659                           tosu	equ	0xFFF
 24660                           tosh	equ	0xFFE
 24661                           tosl	equ	0xFFD
 24662                           pclath	equ	0xFFA
 24663                           tblptru	equ	0xFF8
 24664                           tblptrh	equ	0xFF7
 24665                           tblptrl	equ	0xFF6
 24666                           tablat	equ	0xFF5
 24667                           prodh	equ	0xFF4
 24668                           prodl	equ	0xFF3
 24669                           intcon	equ	0xFF2
 24670                           intcon2	equ	0xFF1
 24671                           intcon3	equ	0xFF0
 24672                           indf0	equ	0xFEF
 24673                           postinc0	equ	0xFEE
 24674                           fsr0h	equ	0xFEA
 24675                           fsr0l	equ	0xFE9
 24676                           wreg	equ	0xFE8
 24677                           indf1	equ	0xFE7
 24678                           postdec1	equ	0xFE5
 24679                           plusw1	equ	0xFE3
 24680                           fsr1h	equ	0xFE2
 24681                           fsr1l	equ	0xFE1
 24682                           indf2	equ	0xFDF
 24683                           postinc2	equ	0xFDE
 24684                           postdec2	equ	0xFDD
 24685                           plusw2	equ	0xFDB
 24686                           fsr2h	equ	0xFDA
 24687                           fsr2l	equ	0xFD9
 24688                           status	equ	0xFD8
 24689                           
 24690 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 24691 ;; Defined at:
 24692 ;;		line 34 in file "external_flash.c"
 24693 ;; Parameters:    Size  Location     Type
 24694 ;;  config          2    0[COMRAM] PTR void 
 24695 ;;		 -> NULL(0), 
 24696 ;; Auto vars:     Size  Location     Type
 24697 ;;		None
 24698 ;; Return value:  Size  Location     Type
 24699 ;;                  1    wreg      unsigned char 
 24700 ;; Registers used:
 24701 ;;		wreg
 24702 ;; Tracked objects:
 24703 ;;		On entry : 0/0
 24704 ;;		On exit  : 0/0
 24705 ;;		Unchanged: 0/0
 24706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24711 ;;Total ram usage:        2 bytes
 24712 ;; Hardware stack levels used:    1
 24713 ;; This function calls:
 24714 ;;		Nothing
 24715 ;; This function is called by:
 24716 ;;		_MSDWriteHandler
 24717 ;;		_MSDProcessCommandMediaPresent
 24718 ;; This function uses a non-reentrant model
 24719 ;;
 24720                           
 24721                           	psect	text111
 24722  007AB2                     __ptext111:
 24723                           	opt stack 0
 24724  007AB2                     _ExternalFlash_WriteProtectStateGet:
 24725                           	opt stack 25
 24726                           
 24727                           ;external_flash.c: 37: return 0;
 24728                           
 24729                           ; BSR set to: 0
 24730                           ;incstack = 0
 24731  007AB2  0E00               	movlw	0
 24732  007AB4  0012               	return	
 24733  007AB6                     __end_of_ExternalFlash_WriteProtectStateGet:
 24734                           	opt stack 0
 24735                           tosu	equ	0xFFF
 24736                           tosh	equ	0xFFE
 24737                           tosl	equ	0xFFD
 24738                           pclath	equ	0xFFA
 24739                           tblptru	equ	0xFF8
 24740                           tblptrh	equ	0xFF7
 24741                           tblptrl	equ	0xFF6
 24742                           tablat	equ	0xFF5
 24743                           prodh	equ	0xFF4
 24744                           prodl	equ	0xFF3
 24745                           intcon	equ	0xFF2
 24746                           intcon2	equ	0xFF1
 24747                           intcon3	equ	0xFF0
 24748                           indf0	equ	0xFEF
 24749                           postinc0	equ	0xFEE
 24750                           fsr0h	equ	0xFEA
 24751                           fsr0l	equ	0xFE9
 24752                           wreg	equ	0xFE8
 24753                           indf1	equ	0xFE7
 24754                           postdec1	equ	0xFE5
 24755                           plusw1	equ	0xFE3
 24756                           fsr1h	equ	0xFE2
 24757                           fsr1l	equ	0xFE1
 24758                           indf2	equ	0xFDF
 24759                           postinc2	equ	0xFDE
 24760                           postdec2	equ	0xFDD
 24761                           plusw2	equ	0xFDB
 24762                           fsr2h	equ	0xFDA
 24763                           fsr2l	equ	0xFD9
 24764                           status	equ	0xFD8
 24765                           
 24766 ;; *************** function _ExternalFlash_SectorWrite *****************
 24767 ;; Defined at:
 24768 ;;		line 104 in file "external_flash.c"
 24769 ;; Parameters:    Size  Location     Type
 24770 ;;  config          2   36[COMRAM] PTR void 
 24771 ;;		 -> NULL(0), 
 24772 ;;  sector_addr     4   38[COMRAM] unsigned long 
 24773 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 24774 ;;		 -> msd_buffer(512), 
 24775 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 24776 ;; Auto vars:     Size  Location     Type
 24777 ;;  page            2   45[COMRAM] unsigned int 
 24778 ;; Return value:  Size  Location     Type
 24779 ;;                  1    wreg      unsigned char 
 24780 ;; Registers used:
 24781 ;;		wreg, status,2, status,0, cstack
 24782 ;; Tracked objects:
 24783 ;;		On entry : 0/0
 24784 ;;		On exit  : 0/0
 24785 ;;		Unchanged: 0/0
 24786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24787 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24790 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24791 ;;Total ram usage:       11 bytes
 24792 ;; Hardware stack levels used:    1
 24793 ;; Hardware stack levels required when called:    6
 24794 ;; This function calls:
 24795 ;;		_flash_page_write
 24796 ;; This function is called by:
 24797 ;;		_MSDWriteHandler
 24798 ;; This function uses a non-reentrant model
 24799 ;;
 24800                           
 24801                           	psect	text112
 24802  0074B4                     __ptext112:
 24803                           	opt stack 0
 24804  0074B4                     _ExternalFlash_SectorWrite:
 24805                           	opt stack 19
 24806                           
 24807                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 24808                           
 24809                           ;incstack = 0
 24810  0074B4  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 24811  0074B8  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 24812                           
 24813                           ;external_flash.c: 110: if(sector_addr >= 4096)
 24814  0074BC  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 24815  0074BE  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 24816  0074C0  E104               	bnz	u6740
 24817  0074C2  0E10               	movlw	16
 24818  0074C4  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 24819  0074C6  A0D8               	btfss	status,0,c
 24820  0074C8  D002               	goto	l1717
 24821  0074CA                     u6740:
 24822                           
 24823                           ;external_flash.c: 111: {;external_flash.c: 112: return 0;
 24824  0074CA  0E00               	movlw	0
 24825  0074CC  0012               	return	
 24826  0074CE                     l1717:
 24827                           
 24828                           ;external_flash.c: 113: };external_flash.c: 141: flash_page_write(page, buffer);
 24829  0074CE  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 24830  0074D2  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 24831  0074D6  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 24832  0074DA  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 24833  0074DE  EC24  F038         	call	_flash_page_write	;wreg free
 24834                           
 24835                           ;external_flash.c: 143: return 1;
 24836  0074E2  0E01               	movlw	1
 24837  0074E4  0012               	return	
 24838  0074E6                     __end_of_ExternalFlash_SectorWrite:
 24839                           	opt stack 0
 24840                           tosu	equ	0xFFF
 24841                           tosh	equ	0xFFE
 24842                           tosl	equ	0xFFD
 24843                           pclath	equ	0xFFA
 24844                           tblptru	equ	0xFF8
 24845                           tblptrh	equ	0xFF7
 24846                           tblptrl	equ	0xFF6
 24847                           tablat	equ	0xFF5
 24848                           prodh	equ	0xFF4
 24849                           prodl	equ	0xFF3
 24850                           intcon	equ	0xFF2
 24851                           intcon2	equ	0xFF1
 24852                           intcon3	equ	0xFF0
 24853                           indf0	equ	0xFEF
 24854                           postinc0	equ	0xFEE
 24855                           fsr0h	equ	0xFEA
 24856                           fsr0l	equ	0xFE9
 24857                           wreg	equ	0xFE8
 24858                           indf1	equ	0xFE7
 24859                           postdec1	equ	0xFE5
 24860                           plusw1	equ	0xFE3
 24861                           fsr1h	equ	0xFE2
 24862                           fsr1l	equ	0xFE1
 24863                           indf2	equ	0xFDF
 24864                           postinc2	equ	0xFDE
 24865                           postdec2	equ	0xFDD
 24866                           plusw2	equ	0xFDB
 24867                           fsr2h	equ	0xFDA
 24868                           fsr2l	equ	0xFD9
 24869                           status	equ	0xFD8
 24870                           
 24871 ;; *************** function _flash_page_write *****************
 24872 ;; Defined at:
 24873 ;;		line 360 in file "flash.c"
 24874 ;; Parameters:    Size  Location     Type
 24875 ;;  page            2   31[COMRAM] unsigned int 
 24876 ;;  data            2   33[COMRAM] PTR unsigned char 
 24877 ;;		 -> buffer(512), msd_buffer(512), 
 24878 ;; Auto vars:     Size  Location     Type
 24879 ;;  match           1   35[COMRAM] enum E6852
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1    wreg      void 
 24882 ;; Registers used:
 24883 ;;		wreg, status,2, status,0, cstack
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24892 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24893 ;;Total ram usage:        5 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; Hardware stack levels required when called:    5
 24896 ;; This function calls:
 24897 ;;		__flash_compare_page_to_buffer
 24898 ;;		__flash_write_page_from_buffer
 24899 ;;		__flash_write_to_buffer
 24900 ;; This function is called by:
 24901 ;;		_ExternalFlash_SectorWrite
 24902 ;;		_fat_format
 24903 ;; This function uses a non-reentrant model
 24904 ;;
 24905                           
 24906                           	psect	text113
 24907  007048                     __ptext113:
 24908                           	opt stack 0
 24909  007048                     _flash_page_write:
 24910                           	opt stack 22
 24911                           
 24912                           ;flash.c: 362: flashMatchResult_t match;;flash.c: 365: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 24913                           
 24914                           ;incstack = 0
 24915  007048  0E00               	movlw	0
 24916  00704A  6E15               	movwf	__flash_write_to_buffer@start+1,c
 24917  00704C  0E00               	movlw	0
 24918  00704E  6E14               	movwf	__flash_write_to_buffer@start,c
 24919  007050  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 24920  007054  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 24921  007058  0E02               	movlw	2
 24922  00705A  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 24923  00705C  0E00               	movlw	0
 24924  00705E  6E18               	movwf	__flash_write_to_buffer@data_length,c
 24925  007060  0E00               	movlw	0
 24926  007062  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 24927  007064  ECD5  F037         	call	__flash_write_to_buffer	;wreg free
 24928                           
 24929                           ;flash.c: 368: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 24930  007068  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 24931  00706C  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 24932  007070  0E00               	movlw	0
 24933  007072  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 24934  007074  ECAC  F030         	call	__flash_compare_page_to_buffer	;wreg free
 24935  007078  6E24               	movwf	flash_page_write@match,c
 24936                           
 24937                           ;flash.c: 371: if(match==DATA_DOES_NOT_MATCH)
 24938  00707A  0424               	decf	flash_page_write@match,w,c
 24939  00707C  A4D8               	btfss	status,2,c
 24940  00707E  0012               	return	
 24941                           
 24942                           ;flash.c: 372: {;flash.c: 373: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 24943  007080  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 24944  007084  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 24945  007088  0E00               	movlw	0
 24946  00708A  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 24947  00708C  EC2D  F036         	call	__flash_write_page_from_buffer	;wreg free
 24948  007090  0012               	return	
 24949  007092                     __end_of_flash_page_write:
 24950                           	opt stack 0
 24951                           tosu	equ	0xFFF
 24952                           tosh	equ	0xFFE
 24953                           tosl	equ	0xFFD
 24954                           pclath	equ	0xFFA
 24955                           tblptru	equ	0xFF8
 24956                           tblptrh	equ	0xFF7
 24957                           tblptrl	equ	0xFF6
 24958                           tablat	equ	0xFF5
 24959                           prodh	equ	0xFF4
 24960                           prodl	equ	0xFF3
 24961                           intcon	equ	0xFF2
 24962                           intcon2	equ	0xFF1
 24963                           intcon3	equ	0xFF0
 24964                           indf0	equ	0xFEF
 24965                           postinc0	equ	0xFEE
 24966                           fsr0h	equ	0xFEA
 24967                           fsr0l	equ	0xFE9
 24968                           wreg	equ	0xFE8
 24969                           indf1	equ	0xFE7
 24970                           postdec1	equ	0xFE5
 24971                           plusw1	equ	0xFE3
 24972                           fsr1h	equ	0xFE2
 24973                           fsr1l	equ	0xFE1
 24974                           indf2	equ	0xFDF
 24975                           postinc2	equ	0xFDE
 24976                           postdec2	equ	0xFDD
 24977                           plusw2	equ	0xFDB
 24978                           fsr2h	equ	0xFDA
 24979                           fsr2l	equ	0xFD9
 24980                           status	equ	0xFD8
 24981                           
 24982 ;; *************** function _MSDReadHandler *****************
 24983 ;; Defined at:
 24984 ;;		line 1038 in file "usb_device_msd.c"
 24985 ;; Parameters:    Size  Location     Type
 24986 ;;		None
 24987 ;; Auto vars:     Size  Location     Type
 24988 ;;		None
 24989 ;; Return value:  Size  Location     Type
 24990 ;;                  1    wreg      unsigned char 
 24991 ;; Registers used:
 24992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24993 ;; Tracked objects:
 24994 ;;		On entry : 0/0
 24995 ;;		On exit  : 0/0
 24996 ;;		Unchanged: 0/0
 24997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25002 ;;Total ram usage:        4 bytes
 25003 ;; Hardware stack levels used:    1
 25004 ;; Hardware stack levels required when called:    7
 25005 ;; This function calls:
 25006 ;;		_ExternalFlash_SectorRead
 25007 ;;		_MSDCheckForErrorCases
 25008 ;;		_USBStallEndpoint
 25009 ;;		_USBTransferOnePacket
 25010 ;; This function is called by:
 25011 ;;		_MSDProcessCommandMediaPresent
 25012 ;; This function uses a non-reentrant model
 25013 ;;
 25014                           
 25015                           	psect	text114
 25016  002AEE                     __ptext114:
 25017                           	opt stack 0
 25018  002AEE                     _MSDReadHandler:
 25019                           	opt stack 19
 25020                           
 25021                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 25022                           
 25023                           ;incstack = 0
 25024  002AEE  D0D6               	goto	l665
 25025  002AF0                     l666:
 25026                           
 25027                           ; BSR set to: 0
 25028                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 25029  002AF0  C111  F083         	movff	_gblCBW+17,_LBA+3
 25030                           
 25031                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 25032  002AF4  C112  F082         	movff	_gblCBW+18,_LBA+2
 25033                           
 25034                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 25035  002AF8  C113  F081         	movff	_gblCBW+19,_LBA+1
 25036                           
 25037                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 25038  002AFC  C114  F080         	movff	_gblCBW+20,_LBA
 25039                           
 25040                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 25041  002B00  C116  F08D         	movff	_gblCBW+22,_TransferLength+1
 25042                           
 25043                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 25044  002B04  C117  F08C         	movff	_gblCBW+23,_TransferLength
 25045                           
 25046                           ; BSR set to: 0
 25047                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25048  002B08  518C               	movf	_TransferLength& (0+255),w,b
 25049  002B0A  6E36               	movwf	??_MSDReadHandler& (0+255),c
 25050  002B0C  518D               	movf	(_TransferLength+1)& (0+255),w,b
 25051  002B0E  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 25052  002B10  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 25053  002B12  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 25054  002B14  0E09               	movlw	9
 25055  002B16                     u7015:
 25056  002B16  90D8               	bcf	status,0,c
 25057  002B18  3636               	rlcf	??_MSDReadHandler,f,c
 25058  002B1A  3637               	rlcf	??_MSDReadHandler+1,f,c
 25059  002B1C  3638               	rlcf	??_MSDReadHandler+2,f,c
 25060  002B1E  3639               	rlcf	??_MSDReadHandler+3,f,c
 25061  002B20  2EE8               	decfsz	wreg,f,c
 25062  002B22  D7F9               	goto	u7015
 25063  002B24  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25064  002B28  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25065  002B2C  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25066  002B30  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25067  002B34  EC1F  F023         	call	_MSDCheckForErrorCases	;wreg free
 25068  002B38  0900               	iorlw	0
 25069  002B3A  A4D8               	btfss	status,2,c
 25070  002B3C  D0C1               	goto	l668
 25071                           
 25072                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25073                           
 25074                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25075  002B3E  0E01               	movlw	1
 25076  002B40  0100               	movlb	0	; () banked
 25077  002B42  6FA7               	movwf	_MSDReadState& (0+255),b
 25078  002B44                     
 25079                           ; BSR set to: 0
 25080                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25081                           
 25082                           ; BSR set to: 0
 25083  002B44  518C               	movf	_TransferLength& (0+255),w,b
 25084  002B46  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 25085  002B48  A4D8               	btfss	status,2,c
 25086  002B4A  D002               	goto	l670
 25087                           
 25088                           ; BSR set to: 0
 25089                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25090  002B4C  0E00               	movlw	0
 25091  002B4E  D046               	goto	L24
 25092  002B50                     l670:
 25093                           
 25094                           ; BSR set to: 0
 25095                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25096                           
 25097                           ; BSR set to: 0
 25098  002B50  078C               	decf	_TransferLength& (0+255),f,b
 25099  002B52  A0D8               	btfss	status,0,c
 25100  002B54  078D               	decf	(_TransferLength+1)& (0+255),f,b
 25101                           
 25102                           ; BSR set to: 0
 25103                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25104  002B56  0E02               	movlw	2
 25105  002B58  6FA7               	movwf	_MSDReadState& (0+255),b
 25106  002B5A                     
 25107                           ; BSR set to: 0
 25108                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25109                           
 25110                           ; BSR set to: 0
 25111  002B5A  518E               	movf	_USBMSDInHandle& (0+255),w,b
 25112  002B5C  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25113  002B5E  B4D8               	btfsc	status,2,c
 25114  002B60  D006               	goto	l672
 25115                           
 25116                           ; BSR set to: 0
 25117  002B62  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 25118  002B66  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25119  002B6A  BEDF               	btfsc	indf2,7,c
 25120  002B6C  D0A9               	goto	l668
 25121  002B6E                     l672:
 25122                           
 25123                           ; BSR set to: 0
 25124                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 25125                           
 25126                           ; BSR set to: 0
 25127  002B6E  C1E2  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 25128  002B72  C1E3  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 25129  002B76  C080  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 25130  002B7A  C081  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 25131  002B7E  C082  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 25132  002B82  C083  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 25133  002B86  0E00               	movlw	0
 25134  002B88  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 25135  002B8A  0E06               	movlw	6
 25136  002B8C  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 25137  002B8E  D801               	call	u7068
 25138  002B90  D00A               	goto	u7069
 25139  002B92                     u7068:
 25140  002B92  0005               	push	
 25141  002B94  6EFA               	movwf	pclath,c
 25142  002B96  0101               	movlb	1	; () banked
 25143  002B98  51DC               	movf	(_LUN+8)& (0+255),w,b
 25144  002B9A  6EFD               	movwf	tosl,c
 25145  002B9C  51DD               	movf	(_LUN+9)& (0+255),w,b
 25146  002B9E  6EFE               	movwf	tosh,c
 25147  002BA0  6AFF               	clrf	tosu,c
 25148  002BA2  50FA               	movf	pclath,w,c
 25149  002BA4  0012               	return		;indir
 25150  002BA6                     u7069:
 25151  002BA6  06E8               	decf	wreg,f,c
 25152  002BA8  B4D8               	btfsc	status,2,c
 25153  002BAA  D01A               	goto	l675
 25154                           
 25155                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 25156  002BAC  0E64               	movlw	100
 25157  002BAE  0100               	movlb	0	; () banked
 25158  002BB0  61A5               	cpfslt	_MSDRetryAttempt& (0+255),b
 25159  002BB2  D002               	goto	l674
 25160                           
 25161                           ; BSR set to: 0
 25162                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 25163  002BB4  2BA5               	incf	_MSDRetryAttempt& (0+255),f,b
 25164                           
 25165                           ;usb_device_msd.c: 1088: break;
 25166  002BB6  D084               	goto	l668
 25167  002BB8                     l674:
 25168                           
 25169                           ; BSR set to: 0
 25170                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 25171                           
 25172                           ; BSR set to: 0
 25173  002BB8  0E02               	movlw	2
 25174  002BBA  010D               	movlb	13	; () banked
 25175  002BBC  6F8C               	movwf	140,b	;volatile
 25176                           
 25177                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 25178  002BBE  0101               	movlb	1	; () banked
 25179  002BC0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25180  002BC2  0BF0               	andlw	-16
 25181  002BC4  0903               	iorlw	3
 25182  002BC6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25183                           
 25184                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 25185  002BC8  0E00               	movlw	0
 25186  002BCA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25187                           
 25188                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 25189  002BCC  0E00               	movlw	0
 25190  002BCE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25191                           
 25192                           ; BSR set to: 1
 25193                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 25194  002BD0  0E01               	movlw	1
 25195  002BD2  6E01               	movwf	USBStallEndpoint@dir,c
 25196  002BD4  0E02               	movlw	2
 25197  002BD6  ECC8  F01E         	call	_USBStallEndpoint
 25198  002BDA  D05D               	goto	l9893
 25199  002BDC                     L24:
 25200  002BDC  6FA7               	movwf	_MSDReadState& (0+255),b
 25201                           
 25202                           ;usb_device_msd.c: 1109: break;
 25203  002BDE  D070               	goto	l668
 25204  002BE0                     l675:
 25205                           
 25206                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 25207                           
 25208                           ; BSR set to: 0
 25209                           
 25210                           ; BSR set to: 0
 25211  002BE0  0E01               	movlw	1
 25212  002BE2  0100               	movlb	0	; () banked
 25213  002BE4  2780               	addwf	_LBA& (0+255),f,b
 25214  002BE6  0E00               	movlw	0
 25215  002BE8  2381               	addwfc	(_LBA+1)& (0+255),f,b
 25216  002BEA  2382               	addwfc	(_LBA+2)& (0+255),f,b
 25217  002BEC  2383               	addwfc	(_LBA+3)& (0+255),f,b
 25218                           
 25219                           ; BSR set to: 0
 25220                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 25221  002BEE  0E00               	movlw	0
 25222  002BF0  010D               	movlb	13	; () banked
 25223  002BF2  6F88               	movwf	136,b	;volatile
 25224  002BF4  0E02               	movlw	2
 25225  002BF6  6F89               	movwf	137,b	;volatile
 25226  002BF8  0E00               	movlw	0
 25227  002BFA  6F8A               	movwf	138,b	;volatile
 25228  002BFC  0E00               	movlw	0
 25229  002BFE  6F8B               	movwf	139,b	;volatile
 25230                           
 25231                           ; BSR set to: 13
 25232                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 25233  002C00  0E00               	movlw	0
 25234  002C02  0100               	movlb	0	; () banked
 25235  002C04  6F92               	movwf	_ptrNextData& (0+255),b
 25236  002C06  0E06               	movlw	6
 25237  002C08  6F93               	movwf	(_ptrNextData+1)& (0+255),b
 25238                           
 25239                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 25240  002C0A  0E03               	movlw	3
 25241  002C0C  6FA7               	movwf	_MSDReadState& (0+255),b
 25242  002C0E                     
 25243                           ; BSR set to: 0
 25244                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 25245                           
 25246                           ; BSR set to: 0
 25247  002C0E  010D               	movlb	13	; () banked
 25248  002C10  5188               	movf	136,w,b	;volatile
 25249  002C12  1189               	iorwf	137,w,b	;volatile
 25250  002C14  118A               	iorwf	138,w,b	;volatile
 25251  002C16  118B               	iorwf	139,w,b	;volatile
 25252  002C18  A4D8               	btfss	status,2,c
 25253  002C1A  D002               	goto	l677
 25254                           
 25255                           ; BSR set to: 13
 25256                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 25257  002C1C  0E01               	movlw	1
 25258  002C1E  D03C               	goto	L26
 25259  002C20                     l677:
 25260                           
 25261                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 25262                           
 25263                           ; BSR set to: 0
 25264  002C20  0E04               	movlw	4
 25265  002C22  0100               	movlb	0	; () banked
 25266  002C24  6FA7               	movwf	_MSDReadState& (0+255),b
 25267  002C26                     
 25268                           ; BSR set to: 0
 25269                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 25270                           
 25271                           ; BSR set to: 0
 25272  002C26  518E               	movf	_USBMSDInHandle& (0+255),w,b
 25273  002C28  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25274  002C2A  B4D8               	btfsc	status,2,c
 25275  002C2C  D006               	goto	l679
 25276                           
 25277                           ; BSR set to: 0
 25278  002C2E  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 25279  002C32  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25280  002C36  BEDF               	btfsc	indf2,7,c
 25281  002C38  D043               	goto	l668
 25282  002C3A                     l679:
 25283                           
 25284                           ; BSR set to: 0
 25285                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 25286                           
 25287                           ; BSR set to: 0
 25288  002C3A  0E01               	movlw	1
 25289  002C3C  6E01               	movwf	USBTransferOnePacket@dir,c
 25290  002C3E  C092  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 25291  002C42  C093  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25292  002C46  0E40               	movlw	64
 25293  002C48  6E04               	movwf	USBTransferOnePacket@len,c
 25294  002C4A  0E02               	movlw	2
 25295  002C4C  EC52  F020         	call	_USBTransferOnePacket
 25296  002C50  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25297  002C54  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25298                           
 25299                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 25300  002C58  0E03               	movlw	3
 25301  002C5A  0100               	movlb	0	; () banked
 25302  002C5C  6FA7               	movwf	_MSDReadState& (0+255),b
 25303                           
 25304                           ; BSR set to: 0
 25305                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 25306  002C5E  0E40               	movlw	64
 25307  002C60  0101               	movlb	1	; () banked
 25308  002C62  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25309  002C64  0E00               	movlw	0
 25310  002C66  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25311  002C68  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25312  002C6A  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25313                           
 25314                           ; BSR set to: 1
 25315                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 25316  002C6C  0E40               	movlw	64
 25317  002C6E  010D               	movlb	13	; () banked
 25318  002C70  5F88               	subwf	136,f,b	;volatile
 25319  002C72  0E00               	movlw	0
 25320  002C74  5B89               	subwfb	137,f,b	;volatile
 25321  002C76  5B8A               	subwfb	138,f,b	;volatile
 25322  002C78  5B8B               	subwfb	139,f,b	;volatile
 25323                           
 25324                           ; BSR set to: 13
 25325                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 25326  002C7A  0E40               	movlw	64
 25327  002C7C  0100               	movlb	0	; () banked
 25328  002C7E  2792               	addwf	_ptrNextData& (0+255),f,b
 25329  002C80  0E00               	movlw	0
 25330  002C82  2393               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25331                           
 25332                           ;usb_device_msd.c: 1149: break;
 25333  002C84  D01D               	goto	l668
 25334  002C86                     
 25335                           ; BSR set to: 0
 25336                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 25337                           
 25338                           ; BSR set to: 0
 25339  002C86  0E02               	movlw	2
 25340  002C88  010D               	movlb	13	; () banked
 25341  002C8A  6F8C               	movwf	140,b	;volatile
 25342                           
 25343                           ; BSR set to: 13
 25344                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 25345  002C8C  0E01               	movlw	1
 25346  002C8E  6E01               	movwf	USBStallEndpoint@dir,c
 25347  002C90  0E02               	movlw	2
 25348  002C92  ECC8  F01E         	call	_USBStallEndpoint
 25349  002C96                     l9893:
 25350                           
 25351                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 25352  002C96  0E00               	movlw	0
 25353  002C98                     L26:
 25354  002C98  0100               	movlb	0	; () banked
 25355  002C9A  D7A0               	goto	L24
 25356  002C9C                     l665:
 25357                           
 25358                           ; BSR set to: 0
 25359  002C9C  0100               	movlb	0	; () banked
 25360  002C9E  51A7               	movf	_MSDReadState& (0+255),w,b
 25361                           
 25362                           ; Switch size 1, requested type "space"
 25363                           ; Number of cases is 5, Range of values is 0 to 4
 25364                           ; switch strategies available:
 25365                           ; Name         Instructions Cycles
 25366                           ; simple_byte           16     9 (average)
 25367                           ;	Chosen strategy is simple_byte
 25368  002CA0  0A00               	xorlw	0	; case 0
 25369  002CA2  B4D8               	btfsc	status,2,c
 25370  002CA4  D725               	goto	l666
 25371  002CA6  0A01               	xorlw	1	; case 1
 25372  002CA8  B4D8               	btfsc	status,2,c
 25373  002CAA  D74C               	goto	l669
 25374  002CAC  0A03               	xorlw	3	; case 2
 25375  002CAE  B4D8               	btfsc	status,2,c
 25376  002CB0  D754               	goto	l671
 25377  002CB2  0A01               	xorlw	1	; case 3
 25378  002CB4  B4D8               	btfsc	status,2,c
 25379  002CB6  D7AB               	goto	l676
 25380  002CB8  0A07               	xorlw	7	; case 4
 25381  002CBA  B4D8               	btfsc	status,2,c
 25382  002CBC  D7B4               	goto	l678
 25383  002CBE  D7E3               	goto	l680
 25384  002CC0                     l668:
 25385                           
 25386                           ;usb_device_msd.c: 1161: return MSDReadState;
 25387                           
 25388                           ; BSR set to: 0
 25389  002CC0  0100               	movlb	0	; () banked
 25390  002CC2  51A7               	movf	_MSDReadState& (0+255),w,b
 25391  002CC4  0012               	return	
 25392  002CC6                     __end_of_MSDReadHandler:
 25393                           	opt stack 0
 25394                           tosu	equ	0xFFF
 25395                           tosh	equ	0xFFE
 25396                           tosl	equ	0xFFD
 25397                           pclath	equ	0xFFA
 25398                           tblptru	equ	0xFF8
 25399                           tblptrh	equ	0xFF7
 25400                           tblptrl	equ	0xFF6
 25401                           tablat	equ	0xFF5
 25402                           prodh	equ	0xFF4
 25403                           prodl	equ	0xFF3
 25404                           intcon	equ	0xFF2
 25405                           intcon2	equ	0xFF1
 25406                           intcon3	equ	0xFF0
 25407                           indf0	equ	0xFEF
 25408                           postinc0	equ	0xFEE
 25409                           fsr0h	equ	0xFEA
 25410                           fsr0l	equ	0xFE9
 25411                           wreg	equ	0xFE8
 25412                           indf1	equ	0xFE7
 25413                           postdec1	equ	0xFE5
 25414                           plusw1	equ	0xFE3
 25415                           fsr1h	equ	0xFE2
 25416                           fsr1l	equ	0xFE1
 25417                           indf2	equ	0xFDF
 25418                           postinc2	equ	0xFDE
 25419                           postdec2	equ	0xFDD
 25420                           plusw2	equ	0xFDB
 25421                           fsr2h	equ	0xFDA
 25422                           fsr2l	equ	0xFD9
 25423                           status	equ	0xFD8
 25424                           
 25425 ;; *************** function _MSDCheckForErrorCases *****************
 25426 ;; Defined at:
 25427 ;;		line 1434 in file "usb_device_msd.c"
 25428 ;; Parameters:    Size  Location     Type
 25429 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 25430 ;; Auto vars:     Size  Location     Type
 25431 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 25432 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 25433 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      unsigned char 
 25436 ;; Registers used:
 25437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25438 ;; Tracked objects:
 25439 ;;		On entry : 0/0
 25440 ;;		On exit  : 0/0
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25444 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25446 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25447 ;;Total ram usage:        7 bytes
 25448 ;; Hardware stack levels used:    1
 25449 ;; Hardware stack levels required when called:    2
 25450 ;; This function calls:
 25451 ;;		_MSDErrorHandler
 25452 ;; This function is called by:
 25453 ;;		_MSDProcessCommandMediaPresent
 25454 ;;		_MSDReadHandler
 25455 ;;		_MSDWriteHandler
 25456 ;; This function uses a non-reentrant model
 25457 ;;
 25458                           
 25459                           	psect	text115
 25460  00463E                     __ptext115:
 25461                           	opt stack 0
 25462  00463E                     _MSDCheckForErrorCases:
 25463                           	opt stack 23
 25464                           
 25465                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 25466                           
 25467                           ; BSR set to: 0
 25468                           ;incstack = 0
 25469  00463E  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25470  004640  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25471  004642  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25472  004644  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25473  004646  A4D8               	btfss	status,2,c
 25474  004648  D002               	goto	l710
 25475                           
 25476                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 25477  00464A  0E01               	movlw	1
 25478  00464C  D001               	goto	L27
 25479  00464E                     l710:
 25480                           
 25481                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 25482  00464E  0E00               	movlw	0
 25483  004650                     L27:
 25484  004650  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 25485                           
 25486                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 25487  004652  0100               	movlb	0	; () banked
 25488  004654  05A2               	decf	_MSDHostNoData& (0+255),w,b
 25489  004656  A4D8               	btfss	status,2,c
 25490  004658  D005               	goto	l712
 25491                           
 25492                           ; BSR set to: 0
 25493  00465A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25494  00465C  A4D8               	btfss	status,2,c
 25495  00465E  D002               	goto	l712
 25496                           
 25497                           ; BSR set to: 0
 25498                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 25499  004660  0E00               	movlw	0
 25500                           
 25501                           ; BSR set to: 0
 25502  004662  0012               	return	
 25503  004664                     l712:
 25504                           
 25505                           ; BSR set to: 0
 25506                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 25507                           
 25508                           ; BSR set to: 0
 25509  004664  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25510  004666  0101               	movlb	1	; () banked
 25511  004668  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 25512  00466A  E11A               	bnz	l9519
 25513  00466C  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25514  00466E  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 25515  004670  E117               	bnz	l9519
 25516  004672  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25517  004674  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 25518  004676  E114               	bnz	l9519
 25519  004678  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25520  00467A  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 25521  00467C  A4D8               	btfss	status,2,c
 25522  00467E  D010               	goto	l718
 25523                           
 25524                           ; BSR set to: 1
 25525                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 25526  004680  0100               	movlb	0	; () banked
 25527  004682  05A9               	decf	_MSD_State& (0+255),w,b
 25528  004684  A4D8               	btfss	status,2,c
 25529  004686  D006               	goto	l715
 25530                           
 25531                           ; BSR set to: 0
 25532                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 25533  004688  0E2A               	movlw	42
 25534  00468A  19A8               	xorwf	_MSDCommandState& (0+255),w,b
 25535  00468C  B4D8               	btfsc	status,2,c
 25536  00468E  D008               	goto	l718
 25537                           
 25538                           ; BSR set to: 0
 25539                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 25540  004690  0E00               	movlw	0
 25541                           
 25542                           ; BSR set to: 0
 25543  004692  0012               	return	
 25544  004694                     l715:
 25545                           
 25546                           ; BSR set to: 0
 25547                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 25548                           
 25549                           ; BSR set to: 0
 25550  004694  0E2A               	movlw	42
 25551  004696  19A8               	xorwf	_MSDCommandState& (0+255),w,b
 25552  004698  A4D8               	btfss	status,2,c
 25553  00469A  D002               	goto	l718
 25554                           
 25555                           ; BSR set to: 0
 25556                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 25557  00469C  0E00               	movlw	0
 25558                           
 25559                           ; BSR set to: 0
 25560  00469E  0012               	return	
 25561  0046A0                     l718:
 25562  0046A0                     l9519:
 25563                           
 25564                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 25565  0046A0  0101               	movlb	1	; () banked
 25566  0046A2  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25567  0046A4  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 25568  0046A6  5109               	movf	(_gblCBW+9)& (0+255),w,b
 25569  0046A8  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25570  0046AA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 25571  0046AC  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25572  0046AE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25573  0046B0  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25574  0046B2  B0D8               	btfsc	status,0,c
 25575  0046B4  D002               	goto	l719
 25576                           
 25577                           ; BSR set to: 1
 25578                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 25579  0046B6  0E01               	movlw	1
 25580  0046B8  D001               	goto	L28
 25581  0046BA                     l719:
 25582                           
 25583                           ; BSR set to: 1
 25584                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 25585                           
 25586                           ; BSR set to: 1
 25587  0046BA  0E00               	movlw	0
 25588  0046BC                     L28:
 25589  0046BC  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 25590                           
 25591                           ; BSR set to: 1
 25592                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 25593                           
 25594                           ; BSR set to: 1
 25595  0046BE  0E02               	movlw	2
 25596  0046C0  0100               	movlb	0	; () banked
 25597  0046C2  19A9               	xorwf	_MSD_State& (0+255),w,b
 25598  0046C4  A4D8               	btfss	status,2,c
 25599  0046C6  D014               	goto	l721
 25600                           
 25601                           ; BSR set to: 0
 25602                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 25603  0046C8  0E2A               	movlw	42
 25604  0046CA  19A8               	xorwf	_MSDCommandState& (0+255),w,b
 25605  0046CC  B4D8               	btfsc	status,2,c
 25606  0046CE  D005               	goto	l722
 25607                           
 25608                           ; BSR set to: 0
 25609  0046D0  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 25610  0046D2  A4D8               	btfss	status,2,c
 25611  0046D4  D002               	goto	l722
 25612  0046D6                     u6590:
 25613                           
 25614                           ; BSR set to: 0
 25615                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 25616  0046D6  0E05               	movlw	5
 25617  0046D8  D01D               	goto	L31
 25618  0046DA                     l722:
 25619                           
 25620                           ; BSR set to: 0
 25621                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 25622                           
 25623                           ; BSR set to: 0
 25624  0046DA  05A2               	decf	_MSDHostNoData& (0+255),w,b
 25625  0046DC  B4D8               	btfsc	status,2,c
 25626  0046DE  D00F               	goto	u6640
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 25630                           
 25631                           ; BSR set to: 0
 25632                           
 25633                           ; BSR set to: 0
 25634                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 25635  0046E0  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25636  0046E2  B4D8               	btfsc	status,2,c
 25637  0046E4  D003               	goto	u6620
 25638                           
 25639                           ; BSR set to: 0
 25640                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 25641                           
 25642                           ; BSR set to: 0
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 25646  0046E6  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 25647  0046E8  A4D8               	btfss	status,2,c
 25648  0046EA  D7F5               	goto	u6590
 25649  0046EC                     u6620:
 25650                           
 25651                           ; BSR set to: 0
 25652                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 25653  0046EC  0E04               	movlw	4
 25654  0046EE  D012               	goto	L31
 25655  0046F0                     l721:
 25656                           
 25657                           ; BSR set to: 0
 25658                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 25659                           
 25660                           ; BSR set to: 0
 25661  0046F0  0E2A               	movlw	42
 25662  0046F2  19A8               	xorwf	_MSDCommandState& (0+255),w,b
 25663  0046F4  B4D8               	btfsc	status,2,c
 25664  0046F6  D00D               	goto	l737
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 25668                           
 25669                           ; BSR set to: 0
 25670                           
 25671                           ; BSR set to: 0
 25672                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 25673  0046F8  05A2               	decf	_MSDHostNoData& (0+255),w,b
 25674  0046FA  A4D8               	btfss	status,2,c
 25675  0046FC  D002               	goto	l733
 25676  0046FE                     u6640:
 25677                           
 25678                           ; BSR set to: 0
 25679                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 25680  0046FE  0E01               	movlw	1
 25681  004700  D009               	goto	L31
 25682  004702                     l733:
 25683                           
 25684                           ; BSR set to: 0
 25685                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 25686                           
 25687                           ; BSR set to: 0
 25688  004702  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25689  004704  B4D8               	btfsc	status,2,c
 25690  004706  D003               	goto	u6660
 25691                           
 25692                           ; BSR set to: 0
 25693                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 25694                           
 25695                           ; BSR set to: 0
 25696                           
 25697                           ; BSR set to: 0
 25698                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 25699  004708  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 25700  00470A  A4D8               	btfss	status,2,c
 25701  00470C  D002               	goto	l737
 25702  00470E                     u6660:
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 25706  00470E  0E02               	movlw	2
 25707  004710  D001               	goto	L31
 25708  004712                     l737:
 25709                           
 25710                           ; BSR set to: 0
 25711                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 25712                           
 25713                           ; BSR set to: 0
 25714  004712  0E03               	movlw	3
 25715  004714                     L31:
 25716  004714  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 25717                           
 25718                           ; BSR set to: 0
 25719                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 25720                           
 25721                           ; BSR set to: 0
 25722                           
 25723                           ; BSR set to: 0
 25724                           
 25725                           ; BSR set to: 0
 25726                           
 25727                           ; BSR set to: 0
 25728                           
 25729                           ; BSR set to: 0
 25730  004716  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 25731  004718  ECCF  F01F         	call	_MSDErrorHandler
 25732                           
 25733                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 25734  00471C  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 25735  00471E  0012               	return	
 25736  004720                     __end_of_MSDCheckForErrorCases:
 25737                           	opt stack 0
 25738                           tosu	equ	0xFFF
 25739                           tosh	equ	0xFFE
 25740                           tosl	equ	0xFFD
 25741                           pclath	equ	0xFFA
 25742                           tblptru	equ	0xFF8
 25743                           tblptrh	equ	0xFF7
 25744                           tblptrl	equ	0xFF6
 25745                           tablat	equ	0xFF5
 25746                           prodh	equ	0xFF4
 25747                           prodl	equ	0xFF3
 25748                           intcon	equ	0xFF2
 25749                           intcon2	equ	0xFF1
 25750                           intcon3	equ	0xFF0
 25751                           indf0	equ	0xFEF
 25752                           postinc0	equ	0xFEE
 25753                           fsr0h	equ	0xFEA
 25754                           fsr0l	equ	0xFE9
 25755                           wreg	equ	0xFE8
 25756                           indf1	equ	0xFE7
 25757                           postdec1	equ	0xFE5
 25758                           plusw1	equ	0xFE3
 25759                           fsr1h	equ	0xFE2
 25760                           fsr1l	equ	0xFE1
 25761                           indf2	equ	0xFDF
 25762                           postinc2	equ	0xFDE
 25763                           postdec2	equ	0xFDD
 25764                           plusw2	equ	0xFDB
 25765                           fsr2h	equ	0xFDA
 25766                           fsr2l	equ	0xFD9
 25767                           status	equ	0xFD8
 25768                           
 25769 ;; *************** function _MSDErrorHandler *****************
 25770 ;; Defined at:
 25771 ;;		line 1577 in file "usb_device_msd.c"
 25772 ;; Parameters:    Size  Location     Type
 25773 ;;  ErrorCase       1    wreg     unsigned char 
 25774 ;; Auto vars:     Size  Location     Type
 25775 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 25776 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 25777 ;; Return value:  Size  Location     Type
 25778 ;;                  1    wreg      void 
 25779 ;; Registers used:
 25780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25781 ;; Tracked objects:
 25782 ;;		On entry : 0/0
 25783 ;;		On exit  : 0/0
 25784 ;;		Unchanged: 0/0
 25785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25790 ;;Total ram usage:        2 bytes
 25791 ;; Hardware stack levels used:    1
 25792 ;; Hardware stack levels required when called:    1
 25793 ;; This function calls:
 25794 ;;		_ResetSenseData
 25795 ;;		_USBStallEndpoint
 25796 ;; This function is called by:
 25797 ;;		_MSDProcessCommandMediaAbsent
 25798 ;;		_MSDProcessCommandMediaPresent
 25799 ;;		_MSDCheckForErrorCases
 25800 ;; This function uses a non-reentrant model
 25801 ;;
 25802                           
 25803                           	psect	text116
 25804  003F9E                     __ptext116:
 25805                           	opt stack 0
 25806  003F9E                     _MSDErrorHandler:
 25807                           	opt stack 23
 25808                           
 25809                           ;incstack = 0
 25810                           ;MSDErrorHandler@ErrorCase stored from wreg
 25811  003F9E  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 25812                           
 25813                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 25814  003FA0  0100               	movlb	0	; () banked
 25815  003FA2  518E               	movf	_USBMSDInHandle& (0+255),w,b
 25816  003FA4  118F               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25817  003FA6  B4D8               	btfsc	status,2,c
 25818  003FA8  D006               	goto	u6260
 25819                           
 25820                           ; BSR set to: 0
 25821  003FAA  C08E  FFD9         	movff	_USBMSDInHandle,fsr2l
 25822  003FAE  C08F  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25823  003FB2  BEDF               	btfsc	indf2,7,c
 25824  003FB4  0012               	return	
 25825  003FB6                     u6260:
 25826                           
 25827                           ; BSR set to: 0
 25828                           
 25829                           ; BSR set to: 0
 25830  003FB6  5190               	movf	_USBMSDOutHandle& (0+255),w,b
 25831  003FB8  1191               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25832  003FBA  B4D8               	btfsc	status,2,c
 25833  003FBC  D006               	goto	l741
 25834                           
 25835                           ; BSR set to: 0
 25836  003FBE  C090  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25837  003FC2  C091  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25838  003FC6  BEDF               	btfsc	indf2,7,c
 25839  003FC8  0012               	return	
 25840  003FCA                     l741:
 25841                           
 25842                           ; BSR set to: 0
 25843                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 25844  003FCA  C0A9  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 25845                           
 25846                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 25847  003FCE  69A8               	setf	_MSDCommandState& (0+255),b
 25848                           
 25849                           ; BSR set to: 0
 25850                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 25851  003FD0  0E00               	movlw	0
 25852  003FD2  6FA7               	movwf	_MSDReadState& (0+255),b
 25853                           
 25854                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 25855  003FD4  0E00               	movlw	0
 25856  003FD6  6FA6               	movwf	_MSDWriteState& (0+255),b
 25857                           
 25858                           ; BSR set to: 0
 25859                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 25860  003FD8  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 25861  003FDC  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 25862  003FE0  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 25863  003FE4  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 25864                           
 25865                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 25866  003FE8  0E01               	movlw	1
 25867  003FEA  010D               	movlb	13	; () banked
 25868  003FEC  6F8C               	movwf	140,b	;volatile
 25869                           
 25870                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 25871  003FEE  0E03               	movlw	3
 25872  003FF0  0100               	movlb	0	; () banked
 25873  003FF2  6FA9               	movwf	_MSD_State& (0+255),b
 25874                           
 25875                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 25876  003FF4  D043               	goto	l747
 25877  003FF6                     
 25878                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 25879                           
 25880                           ; BSR set to: 0
 25881  003FF6  0E02               	movlw	2
 25882  003FF8  010D               	movlb	13	; () banked
 25883  003FFA  6F8C               	movwf	140,b	;volatile
 25884                           
 25885                           ;usb_device_msd.c: 1607: break;
 25886  003FFC  0012               	return	
 25887  003FFE                     
 25888                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 25889                           
 25890                           ; BSR set to: 13
 25891  003FFE  0E01               	movlw	1
 25892  004000  6E01               	movwf	USBStallEndpoint@dir,c
 25893  004002  0E02               	movlw	2
 25894  004004  ECC8  F01E         	call	_USBStallEndpoint
 25895                           
 25896                           ;usb_device_msd.c: 1611: break;
 25897  004008  0012               	return	
 25898  00400A                     
 25899                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 25900  00400A  0E02               	movlw	2
 25901  00400C  010D               	movlb	13	; () banked
 25902  00400E  6F8C               	movwf	140,b	;volatile
 25903                           
 25904                           ; BSR set to: 13
 25905                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 25906  004010  0E01               	movlw	1
 25907  004012  6E01               	movwf	USBStallEndpoint@dir,c
 25908  004014  0E02               	movlw	2
 25909  004016  ECC8  F01E         	call	_USBStallEndpoint
 25910                           
 25911                           ;usb_device_msd.c: 1616: break;
 25912  00401A  0012               	return	
 25913  00401C                     
 25914                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 25915  00401C  0E00               	movlw	0
 25916  00401E  6E01               	movwf	USBStallEndpoint@dir,c
 25917  004020  0E02               	movlw	2
 25918  004022  ECC8  F01E         	call	_USBStallEndpoint
 25919                           
 25920                           ;usb_device_msd.c: 1620: break;
 25921  004026  0012               	return	
 25922  004028                     
 25923                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 25924  004028  0E02               	movlw	2
 25925  00402A  010D               	movlb	13	; () banked
 25926  00402C  6F8C               	movwf	140,b	;volatile
 25927                           
 25928                           ; BSR set to: 13
 25929                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 25930  00402E  0E00               	movlw	0
 25931  004030  6E01               	movwf	USBStallEndpoint@dir,c
 25932  004032  0E02               	movlw	2
 25933  004034  ECC8  F01E         	call	_USBStallEndpoint
 25934                           
 25935                           ;usb_device_msd.c: 1625: break;
 25936  004038  0012               	return	
 25937  00403A                     
 25938                           ;usb_device_msd.c: 1628: ResetSenseData();
 25939  00403A  ECBC  F034         	call	_ResetSenseData	;wreg free
 25940                           
 25941                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 25942  00403E  0101               	movlb	1	; () banked
 25943  004040  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25944  004042  0BF0               	andlw	-16
 25945  004044  0905               	iorlw	5
 25946  004046  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25947                           
 25948                           ; BSR set to: 1
 25949                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 25950  004048  0E20               	movlw	32
 25951  00404A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25952                           
 25953                           ; BSR set to: 1
 25954                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 25955  00404C  0E00               	movlw	0
 25956  00404E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25957                           
 25958                           ; BSR set to: 1
 25959                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 25960  004050  0E02               	movlw	2
 25961  004052  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 25962  004054  A4D8               	btfss	status,2,c
 25963  004056  D00C               	goto	l755
 25964                           
 25965                           ; BSR set to: 1
 25966  004058  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25967  00405A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25968  00405C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25969  00405E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 25970  004060  B4D8               	btfsc	status,2,c
 25971  004062  D006               	goto	l755
 25972                           
 25973                           ; BSR set to: 1
 25974                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 25975  004064  0E00               	movlw	0
 25976  004066  6E01               	movwf	USBStallEndpoint@dir,c
 25977  004068  0E02               	movlw	2
 25978  00406A  ECC8  F01E         	call	_USBStallEndpoint
 25979                           
 25980                           ;usb_device_msd.c: 1636: }
 25981  00406E  0012               	return	
 25982  004070                     l755:
 25983                           
 25984                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 25985  004070  0E01               	movlw	1
 25986  004072  6E01               	movwf	USBStallEndpoint@dir,c
 25987  004074  0E02               	movlw	2
 25988  004076  ECC8  F01E         	call	_USBStallEndpoint
 25989                           
 25990                           ;usb_device_msd.c: 1644: }
 25991                           
 25992                           ;usb_device_msd.c: 1643: break;
 25993                           
 25994                           ;usb_device_msd.c: 1642: default:
 25995                           
 25996                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 25997  00407A  0012               	return	
 25998  00407C                     l747:
 25999  00407C  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 26000                           
 26001                           ; Switch size 1, requested type "space"
 26002                           ; Number of cases is 6, Range of values is 1 to 127
 26003                           ; switch strategies available:
 26004                           ; Name         Instructions Cycles
 26005                           ; simple_byte           19    10 (average)
 26006                           ;	Chosen strategy is simple_byte
 26007  00407E  0A01               	xorlw	1	; case 1
 26008  004080  B4D8               	btfsc	status,2,c
 26009  004082  D7B9               	goto	l748
 26010  004084  0A03               	xorlw	3	; case 2
 26011  004086  B4D8               	btfsc	status,2,c
 26012  004088  D7BA               	goto	l750
 26013  00408A  0A01               	xorlw	1	; case 3
 26014  00408C  B4D8               	btfsc	status,2,c
 26015  00408E  D7BD               	goto	l751
 26016  004090  0A07               	xorlw	7	; case 4
 26017  004092  B4D8               	btfsc	status,2,c
 26018  004094  D7C3               	goto	l752
 26019  004096  0A01               	xorlw	1	; case 5
 26020  004098  B4D8               	btfsc	status,2,c
 26021  00409A  D7C6               	goto	l753
 26022  00409C  0A7A               	xorlw	122	; case 127
 26023  00409E  A4D8               	btfss	status,2,c
 26024  0040A0  0012               	return	
 26025  0040A2  D7CB               	goto	l754
 26026  0040A4                     __end_of_MSDErrorHandler:
 26027                           	opt stack 0
 26028                           tosu	equ	0xFFF
 26029                           tosh	equ	0xFFE
 26030                           tosl	equ	0xFFD
 26031                           pclath	equ	0xFFA
 26032                           tblptru	equ	0xFF8
 26033                           tblptrh	equ	0xFF7
 26034                           tblptrl	equ	0xFF6
 26035                           tablat	equ	0xFF5
 26036                           prodh	equ	0xFF4
 26037                           prodl	equ	0xFF3
 26038                           intcon	equ	0xFF2
 26039                           intcon2	equ	0xFF1
 26040                           intcon3	equ	0xFF0
 26041                           indf0	equ	0xFEF
 26042                           postinc0	equ	0xFEE
 26043                           fsr0h	equ	0xFEA
 26044                           fsr0l	equ	0xFE9
 26045                           wreg	equ	0xFE8
 26046                           indf1	equ	0xFE7
 26047                           postdec1	equ	0xFE5
 26048                           plusw1	equ	0xFE3
 26049                           fsr1h	equ	0xFE2
 26050                           fsr1l	equ	0xFE1
 26051                           indf2	equ	0xFDF
 26052                           postinc2	equ	0xFDE
 26053                           postdec2	equ	0xFDD
 26054                           plusw2	equ	0xFDB
 26055                           fsr2h	equ	0xFDA
 26056                           fsr2l	equ	0xFD9
 26057                           status	equ	0xFD8
 26058                           
 26059 ;; *************** function _USBStallEndpoint *****************
 26060 ;; Defined at:
 26061 ;;		line 1073 in file "usb_device.c"
 26062 ;; Parameters:    Size  Location     Type
 26063 ;;  ep              1    wreg     unsigned char 
 26064 ;;  dir             1    0[COMRAM] unsigned char 
 26065 ;; Auto vars:     Size  Location     Type
 26066 ;;  ep              1    5[COMRAM] unsigned char 
 26067 ;;  p               2    6[COMRAM] PTR struct __BDT
 26068 ;;		 -> BDT(48), 
 26069 ;; Return value:  Size  Location     Type
 26070 ;;                  1    wreg      void 
 26071 ;; Registers used:
 26072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26073 ;; Tracked objects:
 26074 ;;		On entry : 0/0
 26075 ;;		On exit  : 0/0
 26076 ;;		Unchanged: 0/0
 26077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26078 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26079 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26081 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26082 ;;Total ram usage:        8 bytes
 26083 ;; Hardware stack levels used:    1
 26084 ;; This function calls:
 26085 ;;		Nothing
 26086 ;; This function is called by:
 26087 ;;		_MSDTasks
 26088 ;;		_MSDReadHandler
 26089 ;;		_MSDWriteHandler
 26090 ;;		_MSDErrorHandler
 26091 ;;		_MSDTransferTerminated
 26092 ;; This function uses a non-reentrant model
 26093 ;;
 26094                           
 26095                           	psect	text117
 26096  003D90                     __ptext117:
 26097                           	opt stack 0
 26098  003D90                     _USBStallEndpoint:
 26099                           	opt stack 27
 26100                           
 26101                           ;incstack = 0
 26102                           ;USBStallEndpoint@ep stored from wreg
 26103  003D90  6E06               	movwf	USBStallEndpoint@ep,c
 26104                           
 26105                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26106  003D92  5006               	movf	USBStallEndpoint@ep,w,c
 26107  003D94  A4D8               	btfss	status,2,c
 26108  003D96  D02C               	goto	l191
 26109                           
 26110                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26111  003D98  0100               	movlb	0	; () banked
 26112  003D9A  EE20 F001          	lfsr	2,1
 26113  003D9E  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26114  003DA0  26D9               	addwf	fsr2l,f,c
 26115  003DA2  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26116  003DA4  22DA               	addwfc	fsr2h,f,c
 26117  003DA6  0E08               	movlw	8
 26118  003DA8  6EDF               	movwf	indf2,c
 26119                           
 26120                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26121  003DAA  EE20 F002          	lfsr	2,2
 26122  003DAE  5196               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26123  003DB0  26D9               	addwf	fsr2l,f,c
 26124  003DB2  5197               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26125  003DB4  22DA               	addwfc	fsr2h,f,c
 26126  003DB6  0E30               	movlw	48
 26127  003DB8  6EDE               	movwf	postinc2,c
 26128  003DBA  0E0D               	movlw	13
 26129  003DBC  6EDD               	movwf	postdec2,c
 26130                           
 26131                           ; BSR set to: 0
 26132                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26133  003DBE  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26134  003DC2  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26135  003DC6  0E0C               	movlw	12
 26136  003DC8  6EDF               	movwf	indf2,c
 26137                           
 26138                           ; BSR set to: 0
 26139                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26140  003DCA  C096  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26141  003DCE  C097  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26142  003DD2  0E00               	movlw	0
 26143  003DD4  8EDB               	bsf	plusw2,7,c
 26144                           
 26145                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 26146  003DD6  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26147  003DDA  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26148  003DDE  0E04               	movlw	4
 26149  003DE0  6EDF               	movwf	indf2,c
 26150                           
 26151                           ; BSR set to: 0
 26152                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26153  003DE2  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26154  003DE6  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26155  003DEA  0E00               	movlw	0
 26156  003DEC  8EDB               	bsf	plusw2,7,c
 26157                           
 26158                           ;usb_device.c: 1089: }
 26159  003DEE  0012               	return	
 26160  003DF0                     l191:
 26161                           
 26162                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 26163                           
 26164                           ; BSR set to: 0
 26165  003DF0  5001               	movf	USBStallEndpoint@dir,w,c
 26166  003DF2  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 26167  003DF4  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 26168  003DF6  90D8               	bcf	status,0,c
 26169  003DF8  3602               	rlcf	??_USBStallEndpoint,f,c
 26170  003DFA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26171  003DFC  5006               	movf	USBStallEndpoint@ep,w,c
 26172  003DFE  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 26173  003E00  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 26174  003E02  90D8               	bcf	status,0,c
 26175  003E04  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26176  003E06  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26177  003E08  90D8               	bcf	status,0,c
 26178  003E0A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26179  003E0C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26180  003E0E  5002               	movf	??_USBStallEndpoint,w,c
 26181  003E10  2604               	addwf	??_USBStallEndpoint+2,f,c
 26182  003E12  5003               	movf	??_USBStallEndpoint+1,w,c
 26183  003E14  2205               	addwfc	??_USBStallEndpoint+3,f,c
 26184  003E16  90D8               	bcf	status,0,c
 26185  003E18  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26186  003E1A  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26187  003E1C  90D8               	bcf	status,0,c
 26188  003E1E  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26189  003E20  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26190  003E22  0E00               	movlw	0
 26191  003E24  2404               	addwf	??_USBStallEndpoint+2,w,c
 26192  003E26  6E07               	movwf	USBStallEndpoint@p,c
 26193  003E28  0E0D               	movlw	13
 26194  003E2A  2005               	addwfc	??_USBStallEndpoint+3,w,c
 26195  003E2C  6E08               	movwf	USBStallEndpoint@p+1,c
 26196                           
 26197                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 26198  003E2E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26199  003E32  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26200  003E36  0E00               	movlw	0
 26201  003E38  84DB               	bsf	plusw2,2,c
 26202                           
 26203                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 26204  003E3A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26205  003E3E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26206  003E42  0E00               	movlw	0
 26207  003E44  8EDB               	bsf	plusw2,7,c
 26208                           
 26209                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 26210  003E46  5006               	movf	USBStallEndpoint@ep,w,c
 26211  003E48  0D04               	mullw	4
 26212  003E4A  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 26213  003E4E  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 26214  003E52  5001               	movf	USBStallEndpoint@dir,w,c
 26215  003E54  0D02               	mullw	2
 26216  003E56  50F3               	movf	prodl,w,c
 26217  003E58  2602               	addwf	??_USBStallEndpoint,f,c
 26218  003E5A  50F4               	movf	prodh,w,c
 26219  003E5C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26220  003E5E  90D8               	bcf	status,0,c
 26221  003E60  3602               	rlcf	??_USBStallEndpoint,f,c
 26222  003E62  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26223  003E64  90D8               	bcf	status,0,c
 26224  003E66  3602               	rlcf	??_USBStallEndpoint,f,c
 26225  003E68  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26226  003E6A  0E04               	movlw	4
 26227  003E6C  2602               	addwf	??_USBStallEndpoint,f,c
 26228  003E6E  0E00               	movlw	0
 26229  003E70  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26230  003E72  0E00               	movlw	0
 26231  003E74  2402               	addwf	??_USBStallEndpoint,w,c
 26232  003E76  6E07               	movwf	USBStallEndpoint@p,c
 26233  003E78  0E0D               	movlw	13
 26234  003E7A  2003               	addwfc	??_USBStallEndpoint+1,w,c
 26235  003E7C  6E08               	movwf	USBStallEndpoint@p+1,c
 26236                           
 26237                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 26238  003E7E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26239  003E82  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26240  003E86  0E00               	movlw	0
 26241  003E88  84DB               	bsf	plusw2,2,c
 26242                           
 26243                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 26244  003E8A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26245  003E8E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26246  003E92  0E00               	movlw	0
 26247  003E94  8EDB               	bsf	plusw2,7,c
 26248  003E96  0012               	return	
 26249  003E98                     __end_of_USBStallEndpoint:
 26250                           	opt stack 0
 26251                           tosu	equ	0xFFF
 26252                           tosh	equ	0xFFE
 26253                           tosl	equ	0xFFD
 26254                           pclath	equ	0xFFA
 26255                           tblptru	equ	0xFF8
 26256                           tblptrh	equ	0xFF7
 26257                           tblptrl	equ	0xFF6
 26258                           tablat	equ	0xFF5
 26259                           prodh	equ	0xFF4
 26260                           prodl	equ	0xFF3
 26261                           intcon	equ	0xFF2
 26262                           intcon2	equ	0xFF1
 26263                           intcon3	equ	0xFF0
 26264                           indf0	equ	0xFEF
 26265                           postinc0	equ	0xFEE
 26266                           fsr0h	equ	0xFEA
 26267                           fsr0l	equ	0xFE9
 26268                           wreg	equ	0xFE8
 26269                           indf1	equ	0xFE7
 26270                           postdec1	equ	0xFE5
 26271                           plusw1	equ	0xFE3
 26272                           fsr1h	equ	0xFE2
 26273                           fsr1l	equ	0xFE1
 26274                           indf2	equ	0xFDF
 26275                           postinc2	equ	0xFDE
 26276                           postdec2	equ	0xFDD
 26277                           plusw2	equ	0xFDB
 26278                           fsr2h	equ	0xFDA
 26279                           fsr2l	equ	0xFD9
 26280                           status	equ	0xFD8
 26281                           
 26282 ;; *************** function _ResetSenseData *****************
 26283 ;; Defined at:
 26284 ;;		line 1373 in file "usb_device_msd.c"
 26285 ;; Parameters:    Size  Location     Type
 26286 ;;		None
 26287 ;; Auto vars:     Size  Location     Type
 26288 ;;		None
 26289 ;; Return value:  Size  Location     Type
 26290 ;;                  1    wreg      void 
 26291 ;; Registers used:
 26292 ;;		wreg, status,2
 26293 ;; Tracked objects:
 26294 ;;		On entry : 0/0
 26295 ;;		On exit  : 0/0
 26296 ;;		Unchanged: 0/0
 26297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26302 ;;Total ram usage:        0 bytes
 26303 ;; Hardware stack levels used:    1
 26304 ;; This function calls:
 26305 ;;		Nothing
 26306 ;; This function is called by:
 26307 ;;		_USBMSDInit
 26308 ;;		_MSDProcessCommandMediaAbsent
 26309 ;;		_MSDProcessCommandMediaPresent
 26310 ;;		_MSDErrorHandler
 26311 ;; This function uses a non-reentrant model
 26312 ;;
 26313                           
 26314                           	psect	text118
 26315  006978                     __ptext118:
 26316                           	opt stack 0
 26317  006978                     _ResetSenseData:
 26318                           	opt stack 26
 26319                           
 26320                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 26321                           
 26322                           ;incstack = 0
 26323  006978  0101               	movlb	1	; () banked
 26324  00697A  911F               	bcf	_gblSenseData& (0+255),0,b
 26325  00697C  931F               	bcf	_gblSenseData& (0+255),1,b
 26326  00697E  951F               	bcf	_gblSenseData& (0+255),2,b
 26327  006980  971F               	bcf	_gblSenseData& (0+255),3,b
 26328  006982  891F               	bsf	_gblSenseData& (0+255),4,b
 26329  006984  8B1F               	bsf	_gblSenseData& (0+255),5,b
 26330  006986  8D1F               	bsf	_gblSenseData& (0+255),6,b
 26331                           
 26332                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 26333  006988  9F1F               	bcf	_gblSenseData& (0+255),7,b
 26334                           
 26335                           ; BSR set to: 1
 26336                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 26337  00698A  0E00               	movlw	0
 26338  00698C  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 26339                           
 26340                           ; BSR set to: 1
 26341                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 26342  00698E  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26343  006990  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26344  006992  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26345  006994  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26346                           
 26347                           ; BSR set to: 1
 26348                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 26349  006996  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 26350                           
 26351                           ; BSR set to: 1
 26352                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 26353  006998  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 26354                           
 26355                           ; BSR set to: 1
 26356                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 26357  00699A  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 26358                           
 26359                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 26360  00699C  0E00               	movlw	0
 26361  00699E  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 26362                           
 26363                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 26364  0069A0  0E00               	movlw	0
 26365  0069A2  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 26366                           
 26367                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 26368  0069A4  0E00               	movlw	0
 26369  0069A6  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 26370                           
 26371                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 26372  0069A8  0E00               	movlw	0
 26373  0069AA  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 26374                           
 26375                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 26376  0069AC  0E0A               	movlw	10
 26377  0069AE  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 26378                           
 26379                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 26380  0069B0  0E00               	movlw	0
 26381  0069B2  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 26382  0069B4  0E00               	movlw	0
 26383  0069B6  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 26384  0069B8  0E00               	movlw	0
 26385  0069BA  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 26386  0069BC  0E00               	movlw	0
 26387  0069BE  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 26388                           
 26389                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 26390  0069C0  0E00               	movlw	0
 26391  0069C2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26392                           
 26393                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 26394  0069C4  0E00               	movlw	0
 26395  0069C6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26396                           
 26397                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 26398  0069C8  0E00               	movlw	0
 26399  0069CA  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 26400                           
 26401                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 26402  0069CC  0E00               	movlw	0
 26403  0069CE  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 26404                           
 26405                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 26406  0069D0  0E00               	movlw	0
 26407  0069D2  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 26408                           
 26409                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 26410  0069D4  0E00               	movlw	0
 26411  0069D6  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 26412                           
 26413                           ; BSR set to: 1
 26414  0069D8  0012               	return		;funcret
 26415  0069DA                     __end_of_ResetSenseData:
 26416                           	opt stack 0
 26417                           tosu	equ	0xFFF
 26418                           tosh	equ	0xFFE
 26419                           tosl	equ	0xFFD
 26420                           pclath	equ	0xFFA
 26421                           tblptru	equ	0xFF8
 26422                           tblptrh	equ	0xFF7
 26423                           tblptrl	equ	0xFF6
 26424                           tablat	equ	0xFF5
 26425                           prodh	equ	0xFF4
 26426                           prodl	equ	0xFF3
 26427                           intcon	equ	0xFF2
 26428                           intcon2	equ	0xFF1
 26429                           intcon3	equ	0xFF0
 26430                           indf0	equ	0xFEF
 26431                           postinc0	equ	0xFEE
 26432                           fsr0h	equ	0xFEA
 26433                           fsr0l	equ	0xFE9
 26434                           wreg	equ	0xFE8
 26435                           indf1	equ	0xFE7
 26436                           postdec1	equ	0xFE5
 26437                           plusw1	equ	0xFE3
 26438                           fsr1h	equ	0xFE2
 26439                           fsr1l	equ	0xFE1
 26440                           indf2	equ	0xFDF
 26441                           postinc2	equ	0xFDE
 26442                           postdec2	equ	0xFDD
 26443                           plusw2	equ	0xFDB
 26444                           fsr2h	equ	0xFDA
 26445                           fsr2l	equ	0xFD9
 26446                           status	equ	0xFD8
 26447                           
 26448 ;; *************** function _ExternalFlash_SectorRead *****************
 26449 ;; Defined at:
 26450 ;;		line 64 in file "external_flash.c"
 26451 ;; Parameters:    Size  Location     Type
 26452 ;;  config          2   43[COMRAM] PTR void 
 26453 ;;		 -> NULL(0), 
 26454 ;;  sector_addr     4   45[COMRAM] unsigned long 
 26455 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 26456 ;;		 -> msd_buffer(512), 
 26457 ;; Auto vars:     Size  Location     Type
 26458 ;;  page            2   51[COMRAM] unsigned int 
 26459 ;; Return value:  Size  Location     Type
 26460 ;;                  1    wreg      unsigned char 
 26461 ;; Registers used:
 26462 ;;		wreg, status,2, status,0, cstack
 26463 ;; Tracked objects:
 26464 ;;		On entry : 0/0
 26465 ;;		On exit  : 0/0
 26466 ;;		Unchanged: 0/0
 26467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26468 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26471 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26472 ;;Total ram usage:       10 bytes
 26473 ;; Hardware stack levels used:    1
 26474 ;; Hardware stack levels required when called:    6
 26475 ;; This function calls:
 26476 ;;		_flash_page_read
 26477 ;; This function is called by:
 26478 ;;		_MSDReadHandler
 26479 ;; This function uses a non-reentrant model
 26480 ;;
 26481                           
 26482                           	psect	text119
 26483  0074E6                     __ptext119:
 26484                           	opt stack 0
 26485  0074E6                     _ExternalFlash_SectorRead:
 26486                           	opt stack 19
 26487                           
 26488                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 26489                           
 26490                           ; BSR set to: 1
 26491                           ;incstack = 0
 26492  0074E6  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 26493  0074EA  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 26494                           
 26495                           ;external_flash.c: 70: if(sector_addr >= 4096)
 26496  0074EE  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 26497  0074F0  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 26498  0074F2  E104               	bnz	u6730
 26499  0074F4  0E10               	movlw	16
 26500  0074F6  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 26501  0074F8  A0D8               	btfss	status,0,c
 26502  0074FA  D002               	goto	l1713
 26503  0074FC                     u6730:
 26504                           
 26505                           ;external_flash.c: 71: {;external_flash.c: 72: return 0;
 26506  0074FC  0E00               	movlw	0
 26507  0074FE  0012               	return	
 26508  007500                     l1713:
 26509                           
 26510                           ;external_flash.c: 73: };external_flash.c: 76: flash_page_read(page, buffer);
 26511  007500  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 26512  007504  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 26513  007508  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 26514  00750C  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 26515  007510  ECBC  F03B         	call	_flash_page_read	;wreg free
 26516                           
 26517                           ;external_flash.c: 78: return 1;
 26518  007514  0E01               	movlw	1
 26519  007516  0012               	return	
 26520  007518                     __end_of_ExternalFlash_SectorRead:
 26521                           	opt stack 0
 26522                           tosu	equ	0xFFF
 26523                           tosh	equ	0xFFE
 26524                           tosl	equ	0xFFD
 26525                           pclath	equ	0xFFA
 26526                           tblptru	equ	0xFF8
 26527                           tblptrh	equ	0xFF7
 26528                           tblptrl	equ	0xFF6
 26529                           tablat	equ	0xFF5
 26530                           prodh	equ	0xFF4
 26531                           prodl	equ	0xFF3
 26532                           intcon	equ	0xFF2
 26533                           intcon2	equ	0xFF1
 26534                           intcon3	equ	0xFF0
 26535                           indf0	equ	0xFEF
 26536                           postinc0	equ	0xFEE
 26537                           fsr0h	equ	0xFEA
 26538                           fsr0l	equ	0xFE9
 26539                           wreg	equ	0xFE8
 26540                           indf1	equ	0xFE7
 26541                           postdec1	equ	0xFE5
 26542                           plusw1	equ	0xFE3
 26543                           fsr1h	equ	0xFE2
 26544                           fsr1l	equ	0xFE1
 26545                           indf2	equ	0xFDF
 26546                           postinc2	equ	0xFDE
 26547                           postdec2	equ	0xFDD
 26548                           plusw2	equ	0xFDB
 26549                           fsr2h	equ	0xFDA
 26550                           fsr2l	equ	0xFD9
 26551                           status	equ	0xFD8
 26552                           
 26553 ;; *************** function _flash_page_read *****************
 26554 ;; Defined at:
 26555 ;;		line 352 in file "flash.c"
 26556 ;; Parameters:    Size  Location     Type
 26557 ;;  page            2   39[COMRAM] unsigned int 
 26558 ;;  data            2   41[COMRAM] PTR unsigned char 
 26559 ;;		 -> buffer(512), msd_buffer(512), 
 26560 ;; Auto vars:     Size  Location     Type
 26561 ;;		None
 26562 ;; Return value:  Size  Location     Type
 26563 ;;                  1    wreg      void 
 26564 ;; Registers used:
 26565 ;;		wreg, status,2, status,0, cstack
 26566 ;; Tracked objects:
 26567 ;;		On entry : 0/0
 26568 ;;		On exit  : 0/0
 26569 ;;		Unchanged: 0/0
 26570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26575 ;;Total ram usage:        4 bytes
 26576 ;; Hardware stack levels used:    1
 26577 ;; Hardware stack levels required when called:    5
 26578 ;; This function calls:
 26579 ;;		_flash_partial_read
 26580 ;; This function is called by:
 26581 ;;		_ExternalFlash_SectorRead
 26582 ;;		_fat_get_format_status
 26583 ;; This function uses a non-reentrant model
 26584 ;;
 26585                           
 26586                           	psect	text120
 26587  007778                     __ptext120:
 26588                           	opt stack 0
 26589  007778                     _flash_page_read:
 26590                           	opt stack 22
 26591                           
 26592                           ;flash.c: 355: flash_partial_read(page, 0, 512, data);
 26593                           
 26594                           ;incstack = 0
 26595  007778  C028  F014         	movff	flash_page_read@page,flash_partial_read@page
 26596  00777C  C029  F015         	movff	flash_page_read@page+1,flash_partial_read@page+1
 26597  007780  0E00               	movlw	0
 26598  007782  6E17               	movwf	flash_partial_read@start+1,c
 26599  007784  0E00               	movlw	0
 26600  007786  6E16               	movwf	flash_partial_read@start,c
 26601  007788  0E02               	movlw	2
 26602  00778A  6E19               	movwf	flash_partial_read@length+1,c
 26603  00778C  0E00               	movlw	0
 26604  00778E  6E18               	movwf	flash_partial_read@length,c
 26605  007790  C02A  F01A         	movff	flash_page_read@data,flash_partial_read@data
 26606  007794  C02B  F01B         	movff	flash_page_read@data+1,flash_partial_read@data+1
 26607  007798  ECE8  F030         	call	_flash_partial_read	;wreg free
 26608  00779C  0012               	return		;funcret
 26609  00779E                     __end_of_flash_page_read:
 26610                           	opt stack 0
 26611                           tosu	equ	0xFFF
 26612                           tosh	equ	0xFFE
 26613                           tosl	equ	0xFFD
 26614                           pclath	equ	0xFFA
 26615                           tblptru	equ	0xFF8
 26616                           tblptrh	equ	0xFF7
 26617                           tblptrl	equ	0xFF6
 26618                           tablat	equ	0xFF5
 26619                           prodh	equ	0xFF4
 26620                           prodl	equ	0xFF3
 26621                           intcon	equ	0xFF2
 26622                           intcon2	equ	0xFF1
 26623                           intcon3	equ	0xFF0
 26624                           indf0	equ	0xFEF
 26625                           postinc0	equ	0xFEE
 26626                           fsr0h	equ	0xFEA
 26627                           fsr0l	equ	0xFE9
 26628                           wreg	equ	0xFE8
 26629                           indf1	equ	0xFE7
 26630                           postdec1	equ	0xFE5
 26631                           plusw1	equ	0xFE3
 26632                           fsr1h	equ	0xFE2
 26633                           fsr1l	equ	0xFE1
 26634                           indf2	equ	0xFDF
 26635                           postinc2	equ	0xFDE
 26636                           postdec2	equ	0xFDD
 26637                           plusw2	equ	0xFDB
 26638                           fsr2h	equ	0xFDA
 26639                           fsr2l	equ	0xFD9
 26640                           status	equ	0xFD8
 26641                           
 26642 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 26643 ;; Defined at:
 26644 ;;		line 993 in file "usb_device_msd.c"
 26645 ;; Parameters:    Size  Location     Type
 26646 ;;  DiExpected      2    0[COMRAM] unsigned int 
 26647 ;; Auto vars:     Size  Location     Type
 26648 ;;		None
 26649 ;; Return value:  Size  Location     Type
 26650 ;;                  1    wreg      void 
 26651 ;; Registers used:
 26652 ;;		wreg, status,2, status,0
 26653 ;; Tracked objects:
 26654 ;;		On entry : 0/0
 26655 ;;		On exit  : 0/0
 26656 ;;		Unchanged: 0/0
 26657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26662 ;;Total ram usage:        6 bytes
 26663 ;; Hardware stack levels used:    1
 26664 ;; This function calls:
 26665 ;;		Nothing
 26666 ;; This function is called by:
 26667 ;;		_MSDProcessCommandMediaPresent
 26668 ;; This function uses a non-reentrant model
 26669 ;;
 26670                           
 26671                           	psect	text121
 26672  0058B0                     __ptext121:
 26673                           	opt stack 0
 26674  0058B0                     _MSDComputeDeviceInAndResidue:
 26675                           	opt stack 26
 26676                           
 26677                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 26678                           
 26679                           ;incstack = 0
 26680  0058B0  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 26681  0058B2  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 26682  0058B4  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 26683  0058B6  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 26684  0058B8  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 26685  0058BA  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 26686  0058BC  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 26687  0058BE  0101               	movlb	1	; () banked
 26688  0058C0  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 26689  0058C2  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 26690  0058C4  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 26691  0058C6  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 26692  0058C8  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 26693  0058CA  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 26694  0058CC  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 26695  0058CE  B0D8               	btfsc	status,0,c
 26696  0058D0  D00E               	goto	l659
 26697                           
 26698                           ; BSR set to: 1
 26699                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 26700  0058D2  0E00               	movlw	0
 26701  0058D4  010D               	movlb	13	; () banked
 26702  0058D6  6F88               	movwf	136,b	;volatile
 26703  0058D8  0E00               	movlw	0
 26704  0058DA  6F89               	movwf	137,b	;volatile
 26705  0058DC  0E00               	movlw	0
 26706  0058DE  6F8A               	movwf	138,b	;volatile
 26707  0058E0  0E00               	movlw	0
 26708  0058E2  6F8B               	movwf	139,b	;volatile
 26709                           
 26710                           ; BSR set to: 13
 26711                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 26712  0058E4  C108  F08C         	movff	_gblCBW+8,_TransferLength
 26713  0058E8  C109  F08D         	movff	_gblCBW+9,_TransferLength+1
 26714                           
 26715                           ;usb_device_msd.c: 1002: }
 26716  0058EC  0012               	return	
 26717  0058EE                     l659:
 26718                           
 26719                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 26720                           
 26721                           ; BSR set to: 13
 26722  0058EE  0100               	movlb	0	; () banked
 26723  0058F0  518C               	movf	_TransferLength& (0+255),w,b
 26724  0058F2  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 26725  0058F4  518D               	movf	(_TransferLength+1)& (0+255),w,b
 26726  0058F6  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 26727  0058F8  B0D8               	btfsc	status,0,c
 26728  0058FA  D004               	goto	l661
 26729                           
 26730                           ; BSR set to: 0
 26731                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 26732  0058FC  C001  F08C         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 26733  005900  C002  F08D         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 26734  005904                     l661:
 26735                           
 26736                           ; BSR set to: 0
 26737                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 26738                           
 26739                           ; BSR set to: 0
 26740  005904  518C               	movf	_TransferLength& (0+255),w,b
 26741  005906  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 26742  005908  518D               	movf	(_TransferLength+1)& (0+255),w,b
 26743  00590A  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 26744  00590C  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 26745  00590E  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 26746  005910  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 26747  005912  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 26748  005914  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 26749  005916  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 26750  005918  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 26751  00591A  0E00               	movlw	0
 26752  00591C  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 26753  00591E  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 26754  005920  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 26755  005922  0101               	movlb	1	; () banked
 26756  005924  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26757  005926  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 26758  005928  010D               	movlb	13	; () banked
 26759  00592A  6F88               	movwf	136,b	;volatile
 26760  00592C  0101               	movlb	1	; () banked
 26761  00592E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 26762  005930  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 26763  005932  010D               	movlb	13	; () banked
 26764  005934  6F89               	movwf	137,b	;volatile
 26765  005936  0101               	movlb	1	; () banked
 26766  005938  510A               	movf	(_gblCBW+10)& (0+255),w,b
 26767  00593A  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 26768  00593C  010D               	movlb	13	; () banked
 26769  00593E  6F8A               	movwf	138,b	;volatile
 26770  005940  0101               	movlb	1	; () banked
 26771  005942  510B               	movf	(_gblCBW+11)& (0+255),w,b
 26772  005944  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 26773  005946  010D               	movlb	13	; () banked
 26774  005948  6F8B               	movwf	139,b	;volatile
 26775  00594A  0012               	return	
 26776  00594C                     __end_of_MSDComputeDeviceInAndResidue:
 26777                           	opt stack 0
 26778                           tosu	equ	0xFFF
 26779                           tosh	equ	0xFFE
 26780                           tosl	equ	0xFFD
 26781                           pclath	equ	0xFFA
 26782                           tblptru	equ	0xFF8
 26783                           tblptrh	equ	0xFF7
 26784                           tblptrl	equ	0xFF6
 26785                           tablat	equ	0xFF5
 26786                           prodh	equ	0xFF4
 26787                           prodl	equ	0xFF3
 26788                           intcon	equ	0xFF2
 26789                           intcon2	equ	0xFF1
 26790                           intcon3	equ	0xFF0
 26791                           indf0	equ	0xFEF
 26792                           postinc0	equ	0xFEE
 26793                           fsr0h	equ	0xFEA
 26794                           fsr0l	equ	0xFE9
 26795                           wreg	equ	0xFE8
 26796                           indf1	equ	0xFE7
 26797                           postdec1	equ	0xFE5
 26798                           plusw1	equ	0xFE3
 26799                           fsr1h	equ	0xFE2
 26800                           fsr1l	equ	0xFE1
 26801                           indf2	equ	0xFDF
 26802                           postinc2	equ	0xFDE
 26803                           postdec2	equ	0xFDD
 26804                           plusw2	equ	0xFDB
 26805                           fsr2h	equ	0xFDA
 26806                           fsr2l	equ	0xFD9
 26807                           status	equ	0xFD8
 26808                           
 26809 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 26810 ;; Defined at:
 26811 ;;		line 18 in file "external_flash.c"
 26812 ;; Parameters:    Size  Location     Type
 26813 ;;  config          2    0[COMRAM] PTR void 
 26814 ;;		 -> NULL(0), 
 26815 ;; Auto vars:     Size  Location     Type
 26816 ;;		None
 26817 ;; Return value:  Size  Location     Type
 26818 ;;                  2    0[COMRAM] unsigned int 
 26819 ;; Registers used:
 26820 ;;		wreg, status,2
 26821 ;; Tracked objects:
 26822 ;;		On entry : 0/0
 26823 ;;		On exit  : 0/0
 26824 ;;		Unchanged: 0/0
 26825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26830 ;;Total ram usage:        2 bytes
 26831 ;; Hardware stack levels used:    1
 26832 ;; This function calls:
 26833 ;;		Nothing
 26834 ;; This function is called by:
 26835 ;;		_MSDProcessCommandMediaPresent
 26836 ;; This function uses a non-reentrant model
 26837 ;;
 26838                           
 26839                           	psect	text122
 26840  007A2C                     __ptext122:
 26841                           	opt stack 0
 26842  007A2C                     _ExternalFlash_SectorSizeRead:
 26843                           	opt stack 26
 26844                           
 26845                           ;external_flash.c: 21: return 512;
 26846                           
 26847                           ; BSR set to: 13
 26848                           ;incstack = 0
 26849  007A2C  0E02               	movlw	2
 26850  007A2E  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 26851  007A30  0E00               	movlw	0
 26852  007A32  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 26853  007A34  0012               	return	
 26854  007A36                     __end_of_ExternalFlash_SectorSizeRead:
 26855                           	opt stack 0
 26856                           tosu	equ	0xFFF
 26857                           tosh	equ	0xFFE
 26858                           tosl	equ	0xFFD
 26859                           pclath	equ	0xFFA
 26860                           tblptru	equ	0xFF8
 26861                           tblptrh	equ	0xFF7
 26862                           tblptrl	equ	0xFF6
 26863                           tablat	equ	0xFF5
 26864                           prodh	equ	0xFF4
 26865                           prodl	equ	0xFF3
 26866                           intcon	equ	0xFF2
 26867                           intcon2	equ	0xFF1
 26868                           intcon3	equ	0xFF0
 26869                           indf0	equ	0xFEF
 26870                           postinc0	equ	0xFEE
 26871                           fsr0h	equ	0xFEA
 26872                           fsr0l	equ	0xFE9
 26873                           wreg	equ	0xFE8
 26874                           indf1	equ	0xFE7
 26875                           postdec1	equ	0xFE5
 26876                           plusw1	equ	0xFE3
 26877                           fsr1h	equ	0xFE2
 26878                           fsr1l	equ	0xFE1
 26879                           indf2	equ	0xFDF
 26880                           postinc2	equ	0xFDE
 26881                           postdec2	equ	0xFDD
 26882                           plusw2	equ	0xFDB
 26883                           fsr2h	equ	0xFDA
 26884                           fsr2l	equ	0xFD9
 26885                           status	equ	0xFD8
 26886                           
 26887 ;; *************** function _ExternalFlash_CapacityRead *****************
 26888 ;; Defined at:
 26889 ;;		line 24 in file "external_flash.c"
 26890 ;; Parameters:    Size  Location     Type
 26891 ;;  config          2    0[COMRAM] PTR void 
 26892 ;;		 -> NULL(0), 
 26893 ;; Auto vars:     Size  Location     Type
 26894 ;;		None
 26895 ;; Return value:  Size  Location     Type
 26896 ;;                  4    0[COMRAM] unsigned long 
 26897 ;; Registers used:
 26898 ;;		wreg, status,2
 26899 ;; Tracked objects:
 26900 ;;		On entry : 0/0
 26901 ;;		On exit  : 0/0
 26902 ;;		Unchanged: 0/0
 26903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26908 ;;Total ram usage:        4 bytes
 26909 ;; Hardware stack levels used:    1
 26910 ;; This function calls:
 26911 ;;		Nothing
 26912 ;; This function is called by:
 26913 ;;		_MSDProcessCommandMediaPresent
 26914 ;; This function uses a non-reentrant model
 26915 ;;
 26916                           
 26917                           	psect	text123
 26918  007988                     __ptext123:
 26919                           	opt stack 0
 26920  007988                     _ExternalFlash_CapacityRead:
 26921                           	opt stack 26
 26922                           
 26923                           ;external_flash.c: 26: return ((uint32_t) 4114 - 1);
 26924                           
 26925                           ;incstack = 0
 26926  007988  0E11               	movlw	17
 26927  00798A  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 26928  00798C  0E10               	movlw	16
 26929  00798E  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 26930  007990  0E00               	movlw	0
 26931  007992  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 26932  007994  0E00               	movlw	0
 26933  007996  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 26934  007998  0012               	return	
 26935  00799A                     __end_of_ExternalFlash_CapacityRead:
 26936                           	opt stack 0
 26937                           tosu	equ	0xFFF
 26938                           tosh	equ	0xFFE
 26939                           tosl	equ	0xFFD
 26940                           pclath	equ	0xFFA
 26941                           tblptru	equ	0xFF8
 26942                           tblptrh	equ	0xFF7
 26943                           tblptrl	equ	0xFF6
 26944                           tablat	equ	0xFF5
 26945                           prodh	equ	0xFF4
 26946                           prodl	equ	0xFF3
 26947                           intcon	equ	0xFF2
 26948                           intcon2	equ	0xFF1
 26949                           intcon3	equ	0xFF0
 26950                           indf0	equ	0xFEF
 26951                           postinc0	equ	0xFEE
 26952                           fsr0h	equ	0xFEA
 26953                           fsr0l	equ	0xFE9
 26954                           wreg	equ	0xFE8
 26955                           indf1	equ	0xFE7
 26956                           postdec1	equ	0xFE5
 26957                           plusw1	equ	0xFE3
 26958                           fsr1h	equ	0xFE2
 26959                           fsr1l	equ	0xFE1
 26960                           indf2	equ	0xFDF
 26961                           postinc2	equ	0xFDE
 26962                           postdec2	equ	0xFDD
 26963                           plusw2	equ	0xFDB
 26964                           fsr2h	equ	0xFDA
 26965                           fsr2l	equ	0xFD9
 26966                           status	equ	0xFD8
 26967                           
 26968 ;; *************** function _ExternalFlash_MediaInitialize *****************
 26969 ;; Defined at:
 26970 ;;		line 10 in file "external_flash.c"
 26971 ;; Parameters:    Size  Location     Type
 26972 ;;  config          2    0[COMRAM] PTR void 
 26973 ;;		 -> NULL(0), 
 26974 ;; Auto vars:     Size  Location     Type
 26975 ;;		None
 26976 ;; Return value:  Size  Location     Type
 26977 ;;                  2    0[COMRAM] PTR struct .
 26978 ;; Registers used:
 26979 ;;		wreg, status,2, status,0
 26980 ;; Tracked objects:
 26981 ;;		On entry : 0/0
 26982 ;;		On exit  : 0/0
 26983 ;;		Unchanged: 0/0
 26984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26989 ;;Total ram usage:        2 bytes
 26990 ;; Hardware stack levels used:    1
 26991 ;; This function calls:
 26992 ;;		Nothing
 26993 ;; This function is called by:
 26994 ;;		_USBMSDInit
 26995 ;;		_MSDProcessCommand
 26996 ;; This function uses a non-reentrant model
 26997 ;;
 26998                           
 26999                           	psect	text124
 27000  007908                     __ptext124:
 27001                           	opt stack 0
 27002  007908                     _ExternalFlash_MediaInitialize:
 27003                           	opt stack 26
 27004                           
 27005                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 27006                           
 27007                           ;incstack = 0
 27008  007908  0101               	movlb	1	; () banked
 27009  00790A  81D0               	bsf	(_mediaInformation+1)& (0+255),0,b
 27010                           
 27011                           ; BSR set to: 1
 27012                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 27013  00790C  0E02               	movlw	2
 27014  00790E  6FD2               	movwf	(_mediaInformation+3)& (0+255),b
 27015  007910  0E00               	movlw	0
 27016  007912  6FD1               	movwf	(_mediaInformation+2)& (0+255),b
 27017                           
 27018                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 27019  007914  0E00               	movlw	0
 27020  007916  6FCF               	movwf	_mediaInformation& (0+255),b
 27021                           
 27022                           ; BSR set to: 1
 27023                           ;external_flash.c: 15: return &mediaInformation;
 27024  007918  0ECF               	movlw	low _mediaInformation
 27025  00791A  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 27026  00791C  0E01               	movlw	high _mediaInformation
 27027  00791E  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 27028  007920  0012               	return	
 27029  007922                     __end_of_ExternalFlash_MediaInitialize:
 27030                           	opt stack 0
 27031                           tosu	equ	0xFFF
 27032                           tosh	equ	0xFFE
 27033                           tosl	equ	0xFFD
 27034                           pclath	equ	0xFFA
 27035                           tblptru	equ	0xFF8
 27036                           tblptrh	equ	0xFF7
 27037                           tblptrl	equ	0xFF6
 27038                           tablat	equ	0xFF5
 27039                           prodh	equ	0xFF4
 27040                           prodl	equ	0xFF3
 27041                           intcon	equ	0xFF2
 27042                           intcon2	equ	0xFF1
 27043                           intcon3	equ	0xFF0
 27044                           indf0	equ	0xFEF
 27045                           postinc0	equ	0xFEE
 27046                           fsr0h	equ	0xFEA
 27047                           fsr0l	equ	0xFE9
 27048                           wreg	equ	0xFE8
 27049                           indf1	equ	0xFE7
 27050                           postdec1	equ	0xFE5
 27051                           plusw1	equ	0xFE3
 27052                           fsr1h	equ	0xFE2
 27053                           fsr1l	equ	0xFE1
 27054                           indf2	equ	0xFDF
 27055                           postinc2	equ	0xFDE
 27056                           postdec2	equ	0xFDD
 27057                           plusw2	equ	0xFDB
 27058                           fsr2h	equ	0xFDA
 27059                           fsr2l	equ	0xFD9
 27060                           status	equ	0xFD8
 27061                           
 27062 ;; *************** function _ExternalFlash_MediaDetect *****************
 27063 ;; Defined at:
 27064 ;;		line 29 in file "external_flash.c"
 27065 ;; Parameters:    Size  Location     Type
 27066 ;;  config          2    0[COMRAM] PTR void 
 27067 ;;		 -> NULL(0), 
 27068 ;; Auto vars:     Size  Location     Type
 27069 ;;		None
 27070 ;; Return value:  Size  Location     Type
 27071 ;;                  1    wreg      unsigned char 
 27072 ;; Registers used:
 27073 ;;		wreg
 27074 ;; Tracked objects:
 27075 ;;		On entry : 0/0
 27076 ;;		On exit  : 0/0
 27077 ;;		Unchanged: 0/0
 27078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27083 ;;Total ram usage:        2 bytes
 27084 ;; Hardware stack levels used:    1
 27085 ;; This function calls:
 27086 ;;		Nothing
 27087 ;; This function is called by:
 27088 ;;		_USBMSDInit
 27089 ;;		_MSDProcessCommand
 27090 ;; This function uses a non-reentrant model
 27091 ;;
 27092                           
 27093                           	psect	text125
 27094  007AB6                     __ptext125:
 27095                           	opt stack 0
 27096  007AB6                     _ExternalFlash_MediaDetect:
 27097                           	opt stack 26
 27098                           
 27099                           ;external_flash.c: 31: return 1;
 27100                           
 27101                           ; BSR set to: 1
 27102                           ;incstack = 0
 27103  007AB6  0E01               	movlw	1
 27104  007AB8  0012               	return	
 27105  007ABA                     __end_of_ExternalFlash_MediaDetect:
 27106                           	opt stack 0
 27107                           tosu	equ	0xFFF
 27108                           tosh	equ	0xFFE
 27109                           tosl	equ	0xFFD
 27110                           pclath	equ	0xFFA
 27111                           tblptru	equ	0xFF8
 27112                           tblptrh	equ	0xFF7
 27113                           tblptrl	equ	0xFF6
 27114                           tablat	equ	0xFF5
 27115                           prodh	equ	0xFF4
 27116                           prodl	equ	0xFF3
 27117                           intcon	equ	0xFF2
 27118                           intcon2	equ	0xFF1
 27119                           intcon3	equ	0xFF0
 27120                           indf0	equ	0xFEF
 27121                           postinc0	equ	0xFEE
 27122                           fsr0h	equ	0xFEA
 27123                           fsr0l	equ	0xFE9
 27124                           wreg	equ	0xFE8
 27125                           indf1	equ	0xFE7
 27126                           postdec1	equ	0xFE5
 27127                           plusw1	equ	0xFE3
 27128                           fsr1h	equ	0xFE2
 27129                           fsr1l	equ	0xFE1
 27130                           indf2	equ	0xFDF
 27131                           postinc2	equ	0xFDE
 27132                           postdec2	equ	0xFDD
 27133                           plusw2	equ	0xFDB
 27134                           fsr2h	equ	0xFDA
 27135                           fsr2l	equ	0xFD9
 27136                           status	equ	0xFD8
 27137                           
 27138 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 27139 ;; Defined at:
 27140 ;;		line 74 in file "app_device_custom_hid.c"
 27141 ;; Parameters:    Size  Location     Type
 27142 ;;		None
 27143 ;; Auto vars:     Size  Location     Type
 27144 ;;  idx             1    0        unsigned char 
 27145 ;; Return value:  Size  Location     Type
 27146 ;;                  1    wreg      void 
 27147 ;; Registers used:
 27148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27149 ;; Tracked objects:
 27150 ;;		On entry : 0/0
 27151 ;;		On exit  : 0/0
 27152 ;;		Unchanged: 0/0
 27153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27156 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27157 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27158 ;;Total ram usage:        4 bytes
 27159 ;; Hardware stack levels used:    1
 27160 ;; Hardware stack levels required when called:   11
 27161 ;; This function calls:
 27162 ;;		_USBTransferOnePacket
 27163 ;;		_api_parse
 27164 ;;		_api_prepare
 27165 ;; This function is called by:
 27166 ;;		_main
 27167 ;; This function uses a non-reentrant model
 27168 ;;
 27169                           
 27170                           	psect	text126
 27171  005446                     __ptext126:
 27172                           	opt stack 0
 27173  005446                     _APP_DeviceCustomHIDTasks:
 27174                           	opt stack 19
 27175                           
 27176                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 27177                           
 27178                           ;incstack = 0
 27179  005446  0E20               	movlw	32
 27180  005448  0100               	movlb	0	; () banked
 27181  00544A  61B7               	cpfslt	_USBDeviceState& (0+255),b
 27182  00544C  D001               	goto	l928
 27183  00544E  0012               	return	
 27184  005450                     l928:
 27185                           
 27186                           ; BSR set to: 0
 27187                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 27188  005450  B265               	btfsc	3941,1,c	;volatile
 27189  005452  0012               	return	
 27190                           
 27191                           ; BSR set to: 0
 27192                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 27193                           
 27194                           ; BSR set to: 0
 27195                           
 27196                           ; BSR set to: 0
 27197                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 27198  005454  518A               	movf	_USBOutHandle& (0+255),w,b
 27199  005456  118B               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 27200  005458  B4D8               	btfsc	status,2,c
 27201  00545A  D006               	goto	u11300
 27202                           
 27203                           ; BSR set to: 0
 27204  00545C  C08A  FFD9         	movff	_USBOutHandle,fsr2l
 27205  005460  C08B  FFDA         	movff	_USBOutHandle+1,fsr2h
 27206  005464  BEDF               	btfsc	indf2,7,c
 27207  005466  0012               	return	
 27208  005468                     u11300:
 27209                           
 27210                           ; BSR set to: 0
 27211                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 27212                           
 27213                           ; BSR set to: 0
 27214  005468  5188               	movf	_USBInHandle& (0+255),w,b
 27215  00546A  1189               	iorwf	(_USBInHandle+1)& (0+255),w,b
 27216  00546C  B4D8               	btfsc	status,2,c
 27217  00546E  D006               	goto	u11320
 27218                           
 27219                           ; BSR set to: 0
 27220  005470  C088  FFD9         	movff	_USBInHandle,fsr2l
 27221  005474  C089  FFDA         	movff	_USBInHandle+1,fsr2h
 27222  005478  BEDF               	btfsc	indf2,7,c
 27223  00547A  D01F               	goto	l934
 27224  00547C                     u11320:
 27225                           
 27226                           ; BSR set to: 0
 27227                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 27228                           
 27229                           ; BSR set to: 0
 27230  00547C  0E40               	movlw	_ReceivedDataBuffer& (0+255)
 27231  00547E  6FFA               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 27232  005480  6BFB               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 27233  005482  C0FA  F055         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 27234  005486  C0FB  F056         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 27235  00548A  0E00               	movlw	_ToSendDataBuffer& (0+255)
 27236  00548C  6FFC               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 27237  00548E  6BFD               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 27238  005490  C0FC  F057         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 27239  005494  C0FD  F058         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 27240  005498  EC53  F021         	call	_api_prepare	;wreg free
 27241                           
 27242                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 27243  00549C  0E01               	movlw	1
 27244  00549E  6E01               	movwf	USBTransferOnePacket@dir,c
 27245  0054A0  0E00               	movlw	low _ToSendDataBuffer
 27246  0054A2  6E02               	movwf	USBTransferOnePacket@data,c
 27247  0054A4  0E02               	movlw	high _ToSendDataBuffer
 27248  0054A6  6E03               	movwf	USBTransferOnePacket@data+1,c
 27249  0054A8  0E40               	movlw	64
 27250  0054AA  6E04               	movwf	USBTransferOnePacket@len,c
 27251  0054AC  0E01               	movlw	1
 27252  0054AE  EC52  F020         	call	_USBTransferOnePacket
 27253  0054B2  C001  F088         	movff	?_USBTransferOnePacket,_USBInHandle
 27254  0054B6  C002  F089         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 27255  0054BA                     l934:
 27256                           
 27257                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 27258  0054BA  0E40               	movlw	low _ReceivedDataBuffer
 27259  0054BC  0100               	movlb	0	; () banked
 27260  0054BE  6FF4               	movwf	api_parse@inBuffer& (0+255),b
 27261  0054C0  0E02               	movlw	high _ReceivedDataBuffer
 27262  0054C2  6FF5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 27263  0054C4  0E40               	movlw	64
 27264  0054C6  6FF6               	movwf	api_parse@receivedDataLength& (0+255),b
 27265  0054C8  EC3D  F025         	call	_api_parse	;wreg free
 27266                           
 27267                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 27268  0054CC  0E00               	movlw	0
 27269  0054CE  6E01               	movwf	USBTransferOnePacket@dir,c
 27270  0054D0  0E40               	movlw	low _ReceivedDataBuffer
 27271  0054D2  6E02               	movwf	USBTransferOnePacket@data,c
 27272  0054D4  0E02               	movlw	high _ReceivedDataBuffer
 27273  0054D6  6E03               	movwf	USBTransferOnePacket@data+1,c
 27274  0054D8  0E40               	movlw	64
 27275  0054DA  6E04               	movwf	USBTransferOnePacket@len,c
 27276  0054DC  0E01               	movlw	1
 27277  0054DE  EC52  F020         	call	_USBTransferOnePacket
 27278  0054E2  C001  F08A         	movff	?_USBTransferOnePacket,_USBOutHandle
 27279  0054E6  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 27280  0054EA  0012               	return	
 27281  0054EC                     __end_of_APP_DeviceCustomHIDTasks:
 27282                           	opt stack 0
 27283                           tosu	equ	0xFFF
 27284                           tosh	equ	0xFFE
 27285                           tosl	equ	0xFFD
 27286                           pclath	equ	0xFFA
 27287                           tblptru	equ	0xFF8
 27288                           tblptrh	equ	0xFF7
 27289                           tblptrl	equ	0xFF6
 27290                           tablat	equ	0xFF5
 27291                           prodh	equ	0xFF4
 27292                           prodl	equ	0xFF3
 27293                           intcon	equ	0xFF2
 27294                           intcon2	equ	0xFF1
 27295                           intcon3	equ	0xFF0
 27296                           indf0	equ	0xFEF
 27297                           postinc0	equ	0xFEE
 27298                           fsr0h	equ	0xFEA
 27299                           fsr0l	equ	0xFE9
 27300                           wreg	equ	0xFE8
 27301                           indf1	equ	0xFE7
 27302                           postdec1	equ	0xFE5
 27303                           plusw1	equ	0xFE3
 27304                           fsr1h	equ	0xFE2
 27305                           fsr1l	equ	0xFE1
 27306                           indf2	equ	0xFDF
 27307                           postinc2	equ	0xFDE
 27308                           postdec2	equ	0xFDD
 27309                           plusw2	equ	0xFDB
 27310                           fsr2h	equ	0xFDA
 27311                           fsr2l	equ	0xFD9
 27312                           status	equ	0xFD8
 27313                           
 27314 ;; *************** function _api_prepare *****************
 27315 ;; Defined at:
 27316 ;;		line 52 in file "api.c"
 27317 ;; Parameters:    Size  Location     Type
 27318 ;;  inBuffer        2   84[COMRAM] PTR unsigned char 
 27319 ;;		 -> RAM(3759), 
 27320 ;;  outBuffer       2   86[COMRAM] PTR unsigned char 
 27321 ;;		 -> RAM(3759), 
 27322 ;; Auto vars:     Size  Location     Type
 27323 ;;  command         1   88[COMRAM] enum E6715
 27324 ;; Return value:  Size  Location     Type
 27325 ;;                  1    wreg      void 
 27326 ;; Registers used:
 27327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27328 ;; Tracked objects:
 27329 ;;		On entry : 0/0
 27330 ;;		On exit  : 0/0
 27331 ;;		Unchanged: 0/0
 27332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27336 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27337 ;;Total ram usage:        5 bytes
 27338 ;; Hardware stack levels used:    1
 27339 ;; Hardware stack levels required when called:    9
 27340 ;; This function calls:
 27341 ;;		__fill_buffer_find_file
 27342 ;;		__fill_buffer_get_bootloader_details
 27343 ;;		__fill_buffer_get_configuration
 27344 ;;		__fill_buffer_get_display
 27345 ;;		__fill_buffer_get_file_details
 27346 ;;		__fill_buffer_get_status
 27347 ;;		__fill_buffer_read_file
 27348 ;;		_flash_is_busy
 27349 ;; This function is called by:
 27350 ;;		_APP_DeviceCustomHIDTasks
 27351 ;; This function uses a non-reentrant model
 27352 ;;
 27353                           
 27354                           	psect	text127
 27355  0042A6                     __ptext127:
 27356                           	opt stack 0
 27357  0042A6                     _api_prepare:
 27358                           	opt stack 20
 27359                           
 27360                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 27361                           
 27362                           ;incstack = 0
 27363  0042A6  C055  FFD9         	movff	api_prepare@inBuffer,fsr2l
 27364  0042AA  C056  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 27365  0042AE  50DF               	movf	indf2,w,c
 27366  0042B0  6E59               	movwf	api_prepare@command,c
 27367                           
 27368                           ;api.c: 56: if(command>0x7F)
 27369  0042B2  0E7F               	movlw	127
 27370  0042B4  6459               	cpfsgt	api_prepare@command,c
 27371  0042B6  D05F               	goto	l2399
 27372                           
 27373                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 27374  0042B8  EC38  F03C         	call	_flash_is_busy	;wreg free
 27375  0042BC  0900               	iorlw	0
 27376  0042BE  B4D8               	btfsc	status,2,c
 27377  0042C0  D028               	goto	l2393
 27378                           
 27379                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 27380  0042C2  C057  F014         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27381  0042C6  C058  F015         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27382  0042CA  EC90  F023         	call	__fill_buffer_get_status	;wreg free
 27383                           
 27384                           ;api.c: 64: return;
 27385  0042CE  0012               	return	
 27386  0042D0                     
 27387                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 27388  0042D0  C055  F037         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 27389  0042D4  C056  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 27390  0042D8  C057  F039         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 27391  0042DC  C058  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 27392  0042E0  EC7E  F032         	call	__fill_buffer_get_file_details	;wreg free
 27393                           
 27394                           ;api.c: 73: break;
 27395  0042E4  0012               	return	
 27396  0042E6                     
 27397                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 27398  0042E6  C055  F03C         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 27399  0042EA  C056  F03D         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 27400  0042EE  C057  F03E         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 27401  0042F2  C058  F03F         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 27402  0042F6  EC1A  F02B         	call	__fill_buffer_find_file	;wreg free
 27403                           
 27404                           ;api.c: 78: break;
 27405  0042FA  0012               	return	
 27406  0042FC                     
 27407                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 27408  0042FC  C055  F04D         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 27409  004300  C056  F04E         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 27410  004304  C057  F04F         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 27411  004308  C058  F050         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 27412  00430C  EC87  F011         	call	__fill_buffer_read_file	;wreg free
 27413                           
 27414                           ;api.c: 84: }
 27415                           
 27416                           ;api.c: 83: break;
 27417  004310  0012               	return	
 27418  004312                     l2393:
 27419  004312  5059               	movf	api_prepare@command,w,c
 27420                           
 27421                           ; Switch size 1, requested type "space"
 27422                           ; Number of cases is 3, Range of values is 128 to 130
 27423                           ; switch strategies available:
 27424                           ; Name         Instructions Cycles
 27425                           ; simple_byte           10     6 (average)
 27426                           ;	Chosen strategy is simple_byte
 27427  004314  0A80               	xorlw	128	; case 128
 27428  004316  B4D8               	btfsc	status,2,c
 27429  004318  D7DB               	goto	l2394
 27430  00431A  0A01               	xorlw	1	; case 129
 27431  00431C  B4D8               	btfsc	status,2,c
 27432  00431E  D7E3               	goto	l2396
 27433  004320  0A03               	xorlw	3	; case 130
 27434  004322  A4D8               	btfss	status,2,c
 27435                           
 27436                           ;api.c: 85: }
 27437  004324  0012               	return	
 27438  004326  D7EA               	goto	l2397
 27439  004328                     
 27440                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 27441  004328  C057  F014         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27442  00432C  C058  F015         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27443  004330  EC90  F023         	call	__fill_buffer_get_status	;wreg free
 27444                           
 27445                           ;api.c: 94: break;
 27446  004334  0012               	return	
 27447  004336                     
 27448                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 27449  004336  C057  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27450  00433A  C058  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27451  00433E  0E00               	movlw	0
 27452  004340  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27453  004342  EC1E  F029         	call	__fill_buffer_get_display	;wreg free
 27454                           
 27455                           ;api.c: 99: break;
 27456  004346  0012               	return	
 27457  004348                     
 27458                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 27459  004348  C057  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27460  00434C  C058  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27461  004350  0E01               	movlw	1
 27462  004352  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27463  004354  EC1E  F029         	call	__fill_buffer_get_display	;wreg free
 27464                           
 27465                           ;api.c: 104: break;
 27466  004358  0012               	return	
 27467  00435A                     
 27468                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 27469  00435A  C057  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 27470  00435E  C058  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 27471  004362  EC91  F013         	call	__fill_buffer_get_bootloader_details	;wreg free
 27472                           
 27473                           ;api.c: 109: break;
 27474  004366  0012               	return	
 27475  004368                     
 27476                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 27477  004368  C057  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 27478  00436C  C058  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 27479  004370  EC09  F02C         	call	__fill_buffer_get_configuration	;wreg free
 27480                           
 27481                           ;api.c: 115: }
 27482                           
 27483                           ;api.c: 114: break;
 27484  004374  0012               	return	
 27485  004376                     l2399:
 27486  004376  5059               	movf	api_prepare@command,w,c
 27487                           
 27488                           ; Switch size 1, requested type "space"
 27489                           ; Number of cases is 5, Range of values is 16 to 20
 27490                           ; switch strategies available:
 27491                           ; Name         Instructions Cycles
 27492                           ; simple_byte           16     9 (average)
 27493                           ;	Chosen strategy is simple_byte
 27494  004378  0A10               	xorlw	16	; case 16
 27495  00437A  B4D8               	btfsc	status,2,c
 27496  00437C  D7D5               	goto	l2400
 27497  00437E  0A01               	xorlw	1	; case 17
 27498  004380  B4D8               	btfsc	status,2,c
 27499  004382  D7D9               	goto	l2402
 27500  004384  0A03               	xorlw	3	; case 18
 27501  004386  B4D8               	btfsc	status,2,c
 27502  004388  D7DF               	goto	l2403
 27503  00438A  0A01               	xorlw	1	; case 19
 27504  00438C  B4D8               	btfsc	status,2,c
 27505  00438E  D7E5               	goto	l2404
 27506  004390  0A07               	xorlw	7	; case 20
 27507  004392  A4D8               	btfss	status,2,c
 27508  004394  0012               	return	
 27509  004396  D7E8               	goto	l2405
 27510  004398                     __end_of_api_prepare:
 27511                           	opt stack 0
 27512                           tosu	equ	0xFFF
 27513                           tosh	equ	0xFFE
 27514                           tosl	equ	0xFFD
 27515                           pclath	equ	0xFFA
 27516                           tblptru	equ	0xFF8
 27517                           tblptrh	equ	0xFF7
 27518                           tblptrl	equ	0xFF6
 27519                           tablat	equ	0xFF5
 27520                           prodh	equ	0xFF4
 27521                           prodl	equ	0xFF3
 27522                           intcon	equ	0xFF2
 27523                           intcon2	equ	0xFF1
 27524                           intcon3	equ	0xFF0
 27525                           indf0	equ	0xFEF
 27526                           postinc0	equ	0xFEE
 27527                           fsr0h	equ	0xFEA
 27528                           fsr0l	equ	0xFE9
 27529                           wreg	equ	0xFE8
 27530                           indf1	equ	0xFE7
 27531                           postdec1	equ	0xFE5
 27532                           plusw1	equ	0xFE3
 27533                           fsr1h	equ	0xFE2
 27534                           fsr1l	equ	0xFE1
 27535                           indf2	equ	0xFDF
 27536                           postinc2	equ	0xFDE
 27537                           postdec2	equ	0xFDD
 27538                           plusw2	equ	0xFDB
 27539                           fsr2h	equ	0xFDA
 27540                           fsr2l	equ	0xFD9
 27541                           status	equ	0xFD8
 27542                           
 27543 ;; *************** function __fill_buffer_read_file *****************
 27544 ;; Defined at:
 27545 ;;		line 367 in file "api.c"
 27546 ;; Parameters:    Size  Location     Type
 27547 ;;  inBuffer        2   76[COMRAM] PTR unsigned char 
 27548 ;;		 -> RAM(3759), 
 27549 ;;  outBuffer       2   78[COMRAM] PTR unsigned char 
 27550 ;;		 -> RAM(3759), 
 27551 ;; Auto vars:     Size  Location     Type
 27552 ;;  start           4   53[BANK0 ] unsigned long 
 27553 ;;  data_length     4   49[BANK0 ] unsigned long 
 27554 ;;  file_size       4   45[BANK0 ] unsigned long 
 27555 ;; Return value:  Size  Location     Type
 27556 ;;                  1    wreg      void 
 27557 ;; Registers used:
 27558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27559 ;; Tracked objects:
 27560 ;;		On entry : 0/0
 27561 ;;		On exit  : 0/0
 27562 ;;		Unchanged: 0/0
 27563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27565 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27566 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27567 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27568 ;;Total ram usage:       20 bytes
 27569 ;; Hardware stack levels used:    1
 27570 ;; Hardware stack levels required when called:    8
 27571 ;; This function calls:
 27572 ;;		_fat_get_file_size
 27573 ;;		_fat_read_from_file
 27574 ;; This function is called by:
 27575 ;;		_api_prepare
 27576 ;; This function uses a non-reentrant model
 27577 ;;
 27578                           
 27579                           	psect	text128
 27580  00230E                     __ptext128:
 27581                           	opt stack 0
 27582  00230E                     __fill_buffer_read_file:
 27583                           	opt stack 20
 27584                           
 27585                           ;api.c: 369: uint32_t start;;api.c: 370: uint32_t file_size;;api.c: 371: uint32_t data_l
      +                          ength;;api.c: 374: outBuffer[0] = DATAREQUEST_FIND_FILE;
 27586                           
 27587                           ;incstack = 0
 27588  00230E  C04F  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 27589  002312  C050  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 27590  002316  0E81               	movlw	129
 27591  002318  6EDF               	movwf	indf2,c
 27592                           
 27593                           ;api.c: 377: outBuffer[1] = (uint8_t) 0xC125;
 27594  00231A  EE20 F001          	lfsr	2,1
 27595  00231E  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27596  002320  26D9               	addwf	fsr2l,f,c
 27597  002322  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27598  002324  22DA               	addwfc	fsr2h,f,c
 27599  002326  0E25               	movlw	37
 27600  002328  6EDF               	movwf	indf2,c
 27601                           
 27602                           ;api.c: 378: outBuffer[2] = 0xC125 >> 8;
 27603  00232A  EE20 F002          	lfsr	2,2
 27604  00232E  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27605  002330  26D9               	addwf	fsr2l,f,c
 27606  002332  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27607  002334  22DA               	addwfc	fsr2h,f,c
 27608  002336  0EC1               	movlw	193
 27609  002338  6EDF               	movwf	indf2,c
 27610                           
 27611                           ;api.c: 381: outBuffer[3] = inBuffer[1];
 27612  00233A  EE20 F001          	lfsr	2,1
 27613  00233E  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27614  002340  26D9               	addwf	fsr2l,f,c
 27615  002342  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27616  002344  22DA               	addwfc	fsr2h,f,c
 27617  002346  EE10 F003          	lfsr	1,3
 27618  00234A  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27619  00234C  26E1               	addwf	fsr1l,f,c
 27620  00234E  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27621  002350  22E2               	addwfc	fsr1h,f,c
 27622  002352  CFDF FFE7          	movff	indf2,indf1
 27623                           
 27624                           ;api.c: 384: outBuffer[4] = inBuffer[1];
 27625  002356  EE20 F001          	lfsr	2,1
 27626  00235A  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27627  00235C  26D9               	addwf	fsr2l,f,c
 27628  00235E  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27629  002360  22DA               	addwfc	fsr2h,f,c
 27630  002362  EE10 F004          	lfsr	1,4
 27631  002366  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27632  002368  26E1               	addwf	fsr1l,f,c
 27633  00236A  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27634  00236C  22E2               	addwfc	fsr1h,f,c
 27635  00236E  CFDF FFE7          	movff	indf2,indf1
 27636                           
 27637                           ;api.c: 385: outBuffer[5] = inBuffer[2];
 27638  002372  EE20 F002          	lfsr	2,2
 27639  002376  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27640  002378  26D9               	addwf	fsr2l,f,c
 27641  00237A  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27642  00237C  22DA               	addwfc	fsr2h,f,c
 27643  00237E  EE10 F005          	lfsr	1,5
 27644  002382  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27645  002384  26E1               	addwf	fsr1l,f,c
 27646  002386  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27647  002388  22E2               	addwfc	fsr1h,f,c
 27648  00238A  CFDF FFE7          	movff	indf2,indf1
 27649                           
 27650                           ;api.c: 386: outBuffer[6] = inBuffer[3];
 27651  00238E  EE20 F003          	lfsr	2,3
 27652  002392  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27653  002394  26D9               	addwf	fsr2l,f,c
 27654  002396  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27655  002398  22DA               	addwfc	fsr2h,f,c
 27656  00239A  EE10 F006          	lfsr	1,6
 27657  00239E  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27658  0023A0  26E1               	addwf	fsr1l,f,c
 27659  0023A2  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27660  0023A4  22E2               	addwfc	fsr1h,f,c
 27661  0023A6  CFDF FFE7          	movff	indf2,indf1
 27662                           
 27663                           ;api.c: 387: outBuffer[7] = inBuffer[4];
 27664  0023AA  EE20 F004          	lfsr	2,4
 27665  0023AE  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27666  0023B0  26D9               	addwf	fsr2l,f,c
 27667  0023B2  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27668  0023B4  22DA               	addwfc	fsr2h,f,c
 27669  0023B6  EE10 F007          	lfsr	1,7
 27670  0023BA  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27671  0023BC  26E1               	addwf	fsr1l,f,c
 27672  0023BE  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27673  0023C0  22E2               	addwfc	fsr1h,f,c
 27674  0023C2  CFDF FFE7          	movff	indf2,indf1
 27675                           
 27676                           ;api.c: 390: start = inBuffer[4];
 27677  0023C6  EE20 F004          	lfsr	2,4
 27678  0023CA  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27679  0023CC  26D9               	addwf	fsr2l,f,c
 27680  0023CE  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27681  0023D0  22DA               	addwfc	fsr2h,f,c
 27682  0023D2  50DF               	movf	indf2,w,c
 27683  0023D4  6E51               	movwf	??__fill_buffer_read_file& (0+255),c
 27684  0023D6  5051               	movf	??__fill_buffer_read_file,w,c
 27685  0023D8  0100               	movlb	0	; () banked
 27686  0023DA  6FF3               	movwf	__fill_buffer_read_file@start& (0+255),b
 27687  0023DC  6BF4               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 27688  0023DE  6BF5               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 27689  0023E0  6BF6               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 27690                           
 27691                           ; BSR set to: 0
 27692                           ;api.c: 391: start <<= 8;
 27693  0023E2  C0F5  F0F6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27694  0023E6  C0F4  F0F5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27695  0023EA  C0F3  F0F4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27696  0023EE  6BF3               	clrf	__fill_buffer_read_file@start& (0+255),b
 27697                           
 27698                           ; BSR set to: 0
 27699                           ;api.c: 392: start |= inBuffer[3];
 27700  0023F0  EE20 F003          	lfsr	2,3
 27701  0023F4  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27702  0023F6  26D9               	addwf	fsr2l,f,c
 27703  0023F8  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27704  0023FA  22DA               	addwfc	fsr2h,f,c
 27705  0023FC  50DF               	movf	indf2,w,c
 27706  0023FE  6E51               	movwf	??__fill_buffer_read_file& (0+255),c
 27707  002400  5051               	movf	??__fill_buffer_read_file,w,c
 27708  002402  13F3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27709                           
 27710                           ; BSR set to: 0
 27711                           ;api.c: 393: start <<= 8;
 27712  002404  C0F5  F0F6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27713  002408  C0F4  F0F5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27714  00240C  C0F3  F0F4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27715  002410  6BF3               	clrf	__fill_buffer_read_file@start& (0+255),b
 27716                           
 27717                           ; BSR set to: 0
 27718                           ;api.c: 394: start |= inBuffer[2];
 27719  002412  EE20 F002          	lfsr	2,2
 27720  002416  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27721  002418  26D9               	addwf	fsr2l,f,c
 27722  00241A  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27723  00241C  22DA               	addwfc	fsr2h,f,c
 27724  00241E  50DF               	movf	indf2,w,c
 27725  002420  6E51               	movwf	??__fill_buffer_read_file& (0+255),c
 27726  002422  5051               	movf	??__fill_buffer_read_file,w,c
 27727  002424  13F3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27728                           
 27729                           ; BSR set to: 0
 27730                           ;api.c: 395: start <<= 8;
 27731  002426  C0F5  F0F6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27732  00242A  C0F4  F0F5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27733  00242E  C0F3  F0F4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27734  002432  6BF3               	clrf	__fill_buffer_read_file@start& (0+255),b
 27735                           
 27736                           ; BSR set to: 0
 27737                           ;api.c: 396: start |= inBuffer[1];
 27738  002434  EE20 F001          	lfsr	2,1
 27739  002438  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27740  00243A  26D9               	addwf	fsr2l,f,c
 27741  00243C  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27742  00243E  22DA               	addwfc	fsr2h,f,c
 27743  002440  50DF               	movf	indf2,w,c
 27744  002442  6E51               	movwf	??__fill_buffer_read_file& (0+255),c
 27745  002444  5051               	movf	??__fill_buffer_read_file,w,c
 27746  002446  13F3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27747                           
 27748                           ; BSR set to: 0
 27749                           ;api.c: 399: file_size = fat_get_file_size(inBuffer[1]);
 27750  002448  EE20 F001          	lfsr	2,1
 27751  00244C  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27752  00244E  26D9               	addwf	fsr2l,f,c
 27753  002450  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27754  002452  22DA               	addwfc	fsr2h,f,c
 27755  002454  50DF               	movf	indf2,w,c
 27756  002456  EC0D  F032         	call	_fat_get_file_size
 27757  00245A  C028  F0EB         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 27758  00245E  C029  F0EC         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 27759  002462  C02A  F0ED         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 27760  002466  C02B  F0EE         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 27761                           
 27762                           ;api.c: 400: data_length = file_size - start;
 27763  00246A  C0F3  F051         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 27764  00246E  C0F4  F052         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 27765  002472  C0F5  F053         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 27766  002476  C0F6  F054         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 27767  00247A  1E51               	comf	??__fill_buffer_read_file,f,c
 27768  00247C  1E52               	comf	??__fill_buffer_read_file+1,f,c
 27769  00247E  1E53               	comf	??__fill_buffer_read_file+2,f,c
 27770  002480  1E54               	comf	??__fill_buffer_read_file+3,f,c
 27771  002482  2A51               	incf	??__fill_buffer_read_file,f,c
 27772  002484  0E00               	movlw	0
 27773  002486  2252               	addwfc	??__fill_buffer_read_file+1,f,c
 27774  002488  2253               	addwfc	??__fill_buffer_read_file+2,f,c
 27775  00248A  2254               	addwfc	??__fill_buffer_read_file+3,f,c
 27776  00248C  0100               	movlb	0	; () banked
 27777  00248E  51EB               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 27778  002490  2451               	addwf	??__fill_buffer_read_file,w,c
 27779  002492  6FEF               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 27780  002494  51EC               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 27781  002496  2052               	addwfc	??__fill_buffer_read_file+1,w,c
 27782  002498  6FF0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 27783  00249A  51ED               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 27784  00249C  2053               	addwfc	??__fill_buffer_read_file+2,w,c
 27785  00249E  6FF1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 27786  0024A0  51EE               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 27787  0024A2  2054               	addwfc	??__fill_buffer_read_file+3,w,c
 27788  0024A4  6FF2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 27789                           
 27790                           ; BSR set to: 0
 27791                           ;api.c: 401: if(data_length>54)
 27792  0024A6  51F2               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 27793  0024A8  11F1               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 27794  0024AA  11F0               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 27795  0024AC  E104               	bnz	u9860
 27796  0024AE  0E37               	movlw	55
 27797  0024B0  5DEF               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 27798  0024B2  A0D8               	btfss	status,0,c
 27799  0024B4  D008               	goto	l2455
 27800  0024B6                     u9860:
 27801                           
 27802                           ; BSR set to: 0
 27803                           ;api.c: 402: {;api.c: 404: data_length = 54;
 27804  0024B6  0E36               	movlw	54
 27805  0024B8  6FEF               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 27806  0024BA  0E00               	movlw	0
 27807  0024BC  6FF0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 27808  0024BE  0E00               	movlw	0
 27809  0024C0  6FF1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 27810  0024C2  0E00               	movlw	0
 27811  0024C4  6FF2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 27812  0024C6                     l2455:
 27813                           
 27814                           ; BSR set to: 0
 27815                           ;api.c: 405: };api.c: 408: outBuffer[8] = (uint8_t) data_length;
 27816                           
 27817                           ; BSR set to: 0
 27818  0024C6  EE20 F008          	lfsr	2,8
 27819  0024CA  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27820  0024CC  26D9               	addwf	fsr2l,f,c
 27821  0024CE  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27822  0024D0  22DA               	addwfc	fsr2h,f,c
 27823  0024D2  C0EF  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 27824                           
 27825                           ; BSR set to: 0
 27826                           ;api.c: 411: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 27827  0024D6  EE20 F009          	lfsr	2,9
 27828  0024DA  504F               	movf	__fill_buffer_read_file@outBuffer,w,c
 27829  0024DC  26D9               	addwf	fsr2l,f,c
 27830  0024DE  5050               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27831  0024E0  22DA               	addwfc	fsr2h,f,c
 27832  0024E2  C0F3  F037         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 27833  0024E6  C0F4  F038         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 27834  0024EA  C0F5  F039         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 27835  0024EE  C0F6  F03A         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 27836  0024F2  C0EF  F03B         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 27837  0024F6  C0F0  F03C         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 27838  0024FA  C0F1  F03D         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 27839  0024FE  C0F2  F03E         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 27840  002502  0E0A               	movlw	10
 27841  002504  244F               	addwf	__fill_buffer_read_file@outBuffer,w,c
 27842  002506  6E3F               	movwf	fat_read_from_file@data,c
 27843  002508  0E00               	movlw	0
 27844  00250A  2050               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 27845  00250C  6E40               	movwf	fat_read_from_file@data+1,c
 27846  00250E  EE10 F001          	lfsr	1,1
 27847  002512  504D               	movf	__fill_buffer_read_file@inBuffer,w,c
 27848  002514  26E1               	addwf	fsr1l,f,c
 27849  002516  504E               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27850  002518  22E2               	addwfc	fsr1h,f,c
 27851  00251A  50E7               	movf	indf1,w,c
 27852  00251C  EC64  F00F         	call	_fat_read_from_file
 27853  002520  6EDF               	movwf	indf2,c
 27854  002522  0012               	return		;funcret
 27855  002524                     __end_of__fill_buffer_read_file:
 27856                           	opt stack 0
 27857                           tosu	equ	0xFFF
 27858                           tosh	equ	0xFFE
 27859                           tosl	equ	0xFFD
 27860                           pclath	equ	0xFFA
 27861                           tblptru	equ	0xFF8
 27862                           tblptrh	equ	0xFF7
 27863                           tblptrl	equ	0xFF6
 27864                           tablat	equ	0xFF5
 27865                           prodh	equ	0xFF4
 27866                           prodl	equ	0xFF3
 27867                           intcon	equ	0xFF2
 27868                           intcon2	equ	0xFF1
 27869                           intcon3	equ	0xFF0
 27870                           indf0	equ	0xFEF
 27871                           postinc0	equ	0xFEE
 27872                           fsr0h	equ	0xFEA
 27873                           fsr0l	equ	0xFE9
 27874                           wreg	equ	0xFE8
 27875                           indf1	equ	0xFE7
 27876                           postdec1	equ	0xFE5
 27877                           plusw1	equ	0xFE3
 27878                           fsr1h	equ	0xFE2
 27879                           fsr1l	equ	0xFE1
 27880                           indf2	equ	0xFDF
 27881                           postinc2	equ	0xFDE
 27882                           postdec2	equ	0xFDD
 27883                           plusw2	equ	0xFDB
 27884                           fsr2h	equ	0xFDA
 27885                           fsr2l	equ	0xFD9
 27886                           status	equ	0xFD8
 27887                           
 27888 ;; *************** function _fat_read_from_file *****************
 27889 ;; Defined at:
 27890 ;;		line 559 in file "fat16.c"
 27891 ;; Parameters:    Size  Location     Type
 27892 ;;  file_number     1    wreg     unsigned char 
 27893 ;;  start_byte      4   54[COMRAM] unsigned long 
 27894 ;;  length          4   58[COMRAM] unsigned long 
 27895 ;;  data            2   62[COMRAM] PTR unsigned char 
 27896 ;;		 -> file_buffer(50), RAM(3759), 
 27897 ;; Auto vars:     Size  Location     Type
 27898 ;;  file_number     1    2[BANK0 ] unsigned char 
 27899 ;;  root           32    3[BANK0 ] struct .
 27900 ;;  position        4   41[BANK0 ] unsigned long 
 27901 ;;  read_length     2   39[BANK0 ] unsigned int 
 27902 ;;  offset          2   37[BANK0 ] unsigned int 
 27903 ;;  cluster         2   35[BANK0 ] unsigned int 
 27904 ;;  sector          2    0[BANK0 ] unsigned int 
 27905 ;; Return value:  Size  Location     Type
 27906 ;;                  1    wreg      unsigned char 
 27907 ;; Registers used:
 27908 ;;		wreg, status,2, status,0, cstack
 27909 ;; Tracked objects:
 27910 ;;		On entry : 0/0
 27911 ;;		On exit  : 0/0
 27912 ;;		Unchanged: 0/0
 27913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27914 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27915 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27916 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27917 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27918 ;;Total ram usage:       67 bytes
 27919 ;; Hardware stack levels used:    1
 27920 ;; Hardware stack levels required when called:    7
 27921 ;; This function calls:
 27922 ;;		__read_fat
 27923 ;;		__sector_from_cluster
 27924 ;;		_fat_get_file_information
 27925 ;;		_flash_partial_read
 27926 ;; This function is called by:
 27927 ;;		__bootloader_verify_file
 27928 ;;		__bootloader_program
 27929 ;;		__fill_buffer_read_file
 27930 ;; This function uses a non-reentrant model
 27931 ;;
 27932                           
 27933                           	psect	text129
 27934  001EC8                     __ptext129:
 27935                           	opt stack 0
 27936  001EC8                     _fat_read_from_file:
 27937                           	opt stack 21
 27938                           
 27939                           ;incstack = 0
 27940                           ;fat_read_from_file@file_number stored from wreg
 27941  001EC8  0100               	movlb	0	; () banked
 27942  001ECA  6FC0               	movwf	fat_read_from_file@file_number& (0+255),b
 27943                           
 27944                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 27945  001ECC  0EC1               	movlw	low fat_read_from_file@root
 27946  001ECE  6E2F               	movwf	fat_get_file_information@data,c
 27947  001ED0  0E00               	movlw	high fat_read_from_file@root
 27948  001ED2  6E30               	movwf	fat_get_file_information@data+1,c
 27949  001ED4  0100               	movlb	0	; () banked
 27950  001ED6  51C0               	movf	fat_read_from_file@file_number& (0+255),w,b
 27951  001ED8  EC99  F031         	call	_fat_get_file_information
 27952                           
 27953                           ;fat16.c: 570: cluster = root.firstCluster;
 27954  001EDC  C0DB  F0E1         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 27955  001EE0  C0DC  F0E2         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 27956                           
 27957                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 27958  001EE4  503B               	movf	fat_read_from_file@length,w,c
 27959  001EE6  2437               	addwf	fat_read_from_file@start_byte,w,c
 27960  001EE8  6E41               	movwf	??_fat_read_from_file& (0+255),c
 27961  001EEA  503C               	movf	fat_read_from_file@length+1,w,c
 27962  001EEC  2038               	addwfc	fat_read_from_file@start_byte+1,w,c
 27963  001EEE  6E42               	movwf	(??_fat_read_from_file+1)& (0+255),c
 27964  001EF0  503D               	movf	fat_read_from_file@length+2,w,c
 27965  001EF2  2039               	addwfc	fat_read_from_file@start_byte+2,w,c
 27966  001EF4  6E43               	movwf	(??_fat_read_from_file+2)& (0+255),c
 27967  001EF6  503E               	movf	fat_read_from_file@length+3,w,c
 27968  001EF8  203A               	addwfc	fat_read_from_file@start_byte+3,w,c
 27969  001EFA  6E44               	movwf	(??_fat_read_from_file+3)& (0+255),c
 27970  001EFC  5041               	movf	??_fat_read_from_file,w,c
 27971  001EFE  0100               	movlb	0	; () banked
 27972  001F00  5DDD               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 27973  001F02  5042               	movf	??_fat_read_from_file+1,w,c
 27974  001F04  59DE               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 27975  001F06  5043               	movf	??_fat_read_from_file+2,w,c
 27976  001F08  59DF               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 27977  001F0A  5044               	movf	??_fat_read_from_file+3,w,c
 27978  001F0C  59E0               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 27979  001F0E  B0D8               	btfsc	status,0,c
 27980  001F10  D002               	goto	l1856
 27981                           
 27982                           ; BSR set to: 0
 27983                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 27984  001F12  0EFF               	movlw	255
 27985                           
 27986                           ; BSR set to: 0
 27987  001F14  0012               	return	
 27988  001F16                     l1856:
 27989                           
 27990                           ; BSR set to: 0
 27991                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 27992                           
 27993                           ; BSR set to: 0
 27994  001F16  0E00               	movlw	0
 27995  001F18  6FE7               	movwf	fat_read_from_file@position& (0+255),b
 27996  001F1A  0E00               	movlw	0
 27997  001F1C  6FE8               	movwf	(fat_read_from_file@position+1)& (0+255),b
 27998  001F1E  0E00               	movlw	0
 27999  001F20  6FE9               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28000  001F22  0E00               	movlw	0
 28001  001F24  6FEA               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28002                           
 28003                           ;fat16.c: 581: while((start_byte-position) >= 512)
 28004  001F26  D013               	goto	l1858
 28005  001F28                     l11141:
 28006                           
 28007                           ; BSR set to: 0
 28008                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 28009  001F28  C0E1  F028         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28010  001F2C  C0E2  F029         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28011  001F30  EC91  F038         	call	__read_fat	;wreg free
 28012  001F34  C028  F0E1         	movff	?__read_fat,fat_read_from_file@cluster
 28013  001F38  C029  F0E2         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28014                           
 28015                           ;fat16.c: 584: position += 512;
 28016  001F3C  0E00               	movlw	0
 28017  001F3E  0100               	movlb	0	; () banked
 28018  001F40  27E7               	addwf	fat_read_from_file@position& (0+255),f,b
 28019  001F42  0E02               	movlw	2
 28020  001F44  23E8               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28021  001F46  0E00               	movlw	0
 28022  001F48  23E9               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28023  001F4A  0E00               	movlw	0
 28024  001F4C  23EA               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28025  001F4E                     l1858:
 28026                           
 28027                           ; BSR set to: 0
 28028                           
 28029                           ; BSR set to: 0
 28030  001F4E  C0E7  F041         	movff	fat_read_from_file@position,??_fat_read_from_file
 28031  001F52  C0E8  F042         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28032  001F56  C0E9  F043         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 28033  001F5A  C0EA  F044         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 28034  001F5E  1E41               	comf	??_fat_read_from_file,f,c
 28035  001F60  1E42               	comf	??_fat_read_from_file+1,f,c
 28036  001F62  1E43               	comf	??_fat_read_from_file+2,f,c
 28037  001F64  1E44               	comf	??_fat_read_from_file+3,f,c
 28038  001F66  2A41               	incf	??_fat_read_from_file,f,c
 28039  001F68  0E00               	movlw	0
 28040  001F6A  2242               	addwfc	??_fat_read_from_file+1,f,c
 28041  001F6C  2243               	addwfc	??_fat_read_from_file+2,f,c
 28042  001F6E  2244               	addwfc	??_fat_read_from_file+3,f,c
 28043  001F70  5037               	movf	fat_read_from_file@start_byte,w,c
 28044  001F72  2441               	addwf	??_fat_read_from_file,w,c
 28045  001F74  6E45               	movwf	(??_fat_read_from_file+4)& (0+255),c
 28046  001F76  5038               	movf	fat_read_from_file@start_byte+1,w,c
 28047  001F78  2042               	addwfc	??_fat_read_from_file+1,w,c
 28048  001F7A  6E46               	movwf	(??_fat_read_from_file+5)& (0+255),c
 28049  001F7C  5039               	movf	fat_read_from_file@start_byte+2,w,c
 28050  001F7E  2043               	addwfc	??_fat_read_from_file+2,w,c
 28051  001F80  6E47               	movwf	(??_fat_read_from_file+6)& (0+255),c
 28052  001F82  503A               	movf	fat_read_from_file@start_byte+3,w,c
 28053  001F84  2044               	addwfc	??_fat_read_from_file+3,w,c
 28054  001F86  6E48               	movwf	(??_fat_read_from_file+7)& (0+255),c
 28055  001F88  5048               	movf	??_fat_read_from_file+7,w,c
 28056  001F8A  1047               	iorwf	??_fat_read_from_file+6,w,c
 28057  001F8C  E1CD               	bnz	l11141
 28058  001F8E  0E02               	movlw	2
 28059  001F90  5C46               	subwf	??_fat_read_from_file+5,w,c
 28060  001F92  B0D8               	btfsc	status,0,c
 28061  001F94  D7C9               	goto	l1859
 28062                           
 28063                           ; BSR set to: 0
 28064                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 28065                           
 28066                           ; BSR set to: 0
 28067  001F96  C0E7  F041         	movff	fat_read_from_file@position,??_fat_read_from_file
 28068  001F9A  C0E8  F042         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28069  001F9E  1E41               	comf	??_fat_read_from_file,f,c
 28070  001FA0  1E42               	comf	??_fat_read_from_file+1,f,c
 28071  001FA2  4A41               	infsnz	??_fat_read_from_file,f,c
 28072  001FA4  2A42               	incf	??_fat_read_from_file+1,f,c
 28073  001FA6  5037               	movf	fat_read_from_file@start_byte,w,c
 28074  001FA8  2441               	addwf	??_fat_read_from_file,w,c
 28075  001FAA  6FE3               	movwf	fat_read_from_file@offset& (0+255),b
 28076  001FAC  5038               	movf	fat_read_from_file@start_byte+1,w,c
 28077  001FAE  2042               	addwfc	??_fat_read_from_file+1,w,c
 28078  001FB0  6FE4               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;fat16.c: 591: position = 0;
 28082  001FB2  0E00               	movlw	0
 28083  001FB4  6FE7               	movwf	fat_read_from_file@position& (0+255),b
 28084  001FB6  0E00               	movlw	0
 28085  001FB8  6FE8               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28086  001FBA  0E00               	movlw	0
 28087  001FBC  6FE9               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28088  001FBE  0E00               	movlw	0
 28089  001FC0  6FEA               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28090                           
 28091                           ;fat16.c: 592: while(position < length)
 28092  001FC2  D089               	goto	l1861
 28093  001FC4                     
 28094                           ; BSR set to: 0
 28095                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 28096                           
 28097                           ; BSR set to: 0
 28098  001FC4  0E02               	movlw	2
 28099  001FC6  19E4               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 28100  001FC8  11E3               	iorwf	fat_read_from_file@offset& (0+255),w,b
 28101  001FCA  A4D8               	btfss	status,2,c
 28102  001FCC  D00F               	goto	l1863
 28103                           
 28104                           ; BSR set to: 0
 28105                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 28106  001FCE  C0E1  F028         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28107  001FD2  C0E2  F029         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28108  001FD6  EC91  F038         	call	__read_fat	;wreg free
 28109  001FDA  C028  F0E1         	movff	?__read_fat,fat_read_from_file@cluster
 28110  001FDE  C029  F0E2         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28111                           
 28112                           ;fat16.c: 599: offset = 0;
 28113  001FE2  0E00               	movlw	0
 28114  001FE4  0100               	movlb	0	; () banked
 28115  001FE6  6FE4               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28116  001FE8  0E00               	movlw	0
 28117  001FEA  6FE3               	movwf	fat_read_from_file@offset& (0+255),b
 28118  001FEC                     l1863:
 28119                           
 28120                           ; BSR set to: 0
 28121                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 28122                           
 28123                           ; BSR set to: 0
 28124  001FEC  C0E1  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 28125  001FF0  C0E2  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 28126  001FF4  ECF5  F03C         	call	__sector_from_cluster	;wreg free
 28127  001FF8  C001  F0BE         	movff	?__sector_from_cluster,fat_read_from_file@sector
 28128  001FFC  C002  F0BF         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 28129                           
 28130                           ;fat16.c: 606: read_length = 512 - offset;
 28131  002000  C0E3  F041         	movff	fat_read_from_file@offset,??_fat_read_from_file
 28132  002004  C0E4  F042         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 28133  002008  1E41               	comf	??_fat_read_from_file,f,c
 28134  00200A  1E42               	comf	??_fat_read_from_file+1,f,c
 28135  00200C  4A41               	infsnz	??_fat_read_from_file,f,c
 28136  00200E  2A42               	incf	??_fat_read_from_file+1,f,c
 28137  002010  0E00               	movlw	0
 28138  002012  2441               	addwf	??_fat_read_from_file,w,c
 28139  002014  0100               	movlb	0	; () banked
 28140  002016  6FE5               	movwf	fat_read_from_file@read_length& (0+255),b
 28141  002018  0E02               	movlw	2
 28142  00201A  2042               	addwfc	??_fat_read_from_file+1,w,c
 28143  00201C  6FE6               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28144                           
 28145                           ; BSR set to: 0
 28146                           ;fat16.c: 607: if(read_length > (length-position))
 28147  00201E  51E5               	movf	fat_read_from_file@read_length& (0+255),w,b
 28148  002020  6E41               	movwf	??_fat_read_from_file& (0+255),c
 28149  002022  51E6               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28150  002024  6E42               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28151  002026  6A43               	clrf	(??_fat_read_from_file+2)& (0+255),c
 28152  002028  6A44               	clrf	(??_fat_read_from_file+3)& (0+255),c
 28153  00202A  C0E7  F045         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 28154  00202E  C0E8  F046         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 28155  002032  C0E9  F047         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 28156  002036  C0EA  F048         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 28157  00203A  1E45               	comf	??_fat_read_from_file+4,f,c
 28158  00203C  1E46               	comf	??_fat_read_from_file+5,f,c
 28159  00203E  1E47               	comf	??_fat_read_from_file+6,f,c
 28160  002040  1E48               	comf	??_fat_read_from_file+7,f,c
 28161  002042  2A45               	incf	??_fat_read_from_file+4,f,c
 28162  002044  0E00               	movlw	0
 28163  002046  2246               	addwfc	??_fat_read_from_file+5,f,c
 28164  002048  2247               	addwfc	??_fat_read_from_file+6,f,c
 28165  00204A  2248               	addwfc	??_fat_read_from_file+7,f,c
 28166  00204C  503B               	movf	fat_read_from_file@length,w,c
 28167  00204E  2445               	addwf	??_fat_read_from_file+4,w,c
 28168  002050  6E49               	movwf	(??_fat_read_from_file+8)& (0+255),c
 28169  002052  503C               	movf	fat_read_from_file@length+1,w,c
 28170  002054  2046               	addwfc	??_fat_read_from_file+5,w,c
 28171  002056  6E4A               	movwf	(??_fat_read_from_file+9)& (0+255),c
 28172  002058  503D               	movf	fat_read_from_file@length+2,w,c
 28173  00205A  2047               	addwfc	??_fat_read_from_file+6,w,c
 28174  00205C  6E4B               	movwf	(??_fat_read_from_file+10)& (0+255),c
 28175  00205E  503E               	movf	fat_read_from_file@length+3,w,c
 28176  002060  2048               	addwfc	??_fat_read_from_file+7,w,c
 28177  002062  6E4C               	movwf	(??_fat_read_from_file+11)& (0+255),c
 28178  002064  5041               	movf	??_fat_read_from_file,w,c
 28179  002066  5C49               	subwf	??_fat_read_from_file+8,w,c
 28180  002068  5042               	movf	??_fat_read_from_file+1,w,c
 28181  00206A  584A               	subwfb	??_fat_read_from_file+9,w,c
 28182  00206C  5043               	movf	??_fat_read_from_file+2,w,c
 28183  00206E  584B               	subwfb	??_fat_read_from_file+10,w,c
 28184  002070  5044               	movf	??_fat_read_from_file+3,w,c
 28185  002072  584C               	subwfb	??_fat_read_from_file+11,w,c
 28186  002074  B0D8               	btfsc	status,0,c
 28187  002076  D00E               	goto	l1864
 28188                           
 28189                           ; BSR set to: 0
 28190                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 28191  002078  C0E7  F041         	movff	fat_read_from_file@position,??_fat_read_from_file
 28192  00207C  C0E8  F042         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28193  002080  1E41               	comf	??_fat_read_from_file,f,c
 28194  002082  1E42               	comf	??_fat_read_from_file+1,f,c
 28195  002084  4A41               	infsnz	??_fat_read_from_file,f,c
 28196  002086  2A42               	incf	??_fat_read_from_file+1,f,c
 28197  002088  503B               	movf	fat_read_from_file@length,w,c
 28198  00208A  2441               	addwf	??_fat_read_from_file,w,c
 28199  00208C  6FE5               	movwf	fat_read_from_file@read_length& (0+255),b
 28200  00208E  503C               	movf	fat_read_from_file@length+1,w,c
 28201  002090  2042               	addwfc	??_fat_read_from_file+1,w,c
 28202  002092  6FE6               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28203  002094                     l1864:
 28204                           
 28205                           ; BSR set to: 0
 28206                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 28207                           
 28208                           ; BSR set to: 0
 28209  002094  C0BE  F014         	movff	fat_read_from_file@sector,flash_partial_read@page
 28210  002098  C0BF  F015         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 28211  00209C  C0E3  F016         	movff	fat_read_from_file@offset,flash_partial_read@start
 28212  0020A0  C0E4  F017         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 28213  0020A4  C0E5  F018         	movff	fat_read_from_file@read_length,flash_partial_read@length
 28214  0020A8  C0E6  F019         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 28215  0020AC  51E7               	movf	fat_read_from_file@position& (0+255),w,b
 28216  0020AE  243F               	addwf	fat_read_from_file@data,w,c
 28217  0020B0  6E1A               	movwf	flash_partial_read@data,c
 28218  0020B2  51E8               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 28219  0020B4  2040               	addwfc	fat_read_from_file@data+1,w,c
 28220  0020B6  6E1B               	movwf	flash_partial_read@data+1,c
 28221  0020B8  ECE8  F030         	call	_flash_partial_read	;wreg free
 28222                           
 28223                           ;fat16.c: 617: position += read_length;
 28224  0020BC  0100               	movlb	0	; () banked
 28225  0020BE  51E5               	movf	fat_read_from_file@read_length& (0+255),w,b
 28226  0020C0  27E7               	addwf	fat_read_from_file@position& (0+255),f,b
 28227  0020C2  51E6               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28228  0020C4  23E8               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28229  0020C6  0E00               	movlw	0
 28230  0020C8  23E9               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28231  0020CA  0E00               	movlw	0
 28232  0020CC  23EA               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28233                           
 28234                           ; BSR set to: 0
 28235                           ;fat16.c: 618: offset += read_length;
 28236  0020CE  51E5               	movf	fat_read_from_file@read_length& (0+255),w,b
 28237  0020D0  27E3               	addwf	fat_read_from_file@offset& (0+255),f,b
 28238  0020D2  51E6               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28239  0020D4  23E4               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 28240  0020D6                     l1861:
 28241                           
 28242                           ; BSR set to: 0
 28243                           
 28244                           ; BSR set to: 0
 28245  0020D6  503B               	movf	fat_read_from_file@length,w,c
 28246  0020D8  5DE7               	subwf	fat_read_from_file@position& (0+255),w,b
 28247  0020DA  503C               	movf	fat_read_from_file@length+1,w,c
 28248  0020DC  59E8               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 28249  0020DE  503D               	movf	fat_read_from_file@length+2,w,c
 28250  0020E0  59E9               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 28251  0020E2  503E               	movf	fat_read_from_file@length+3,w,c
 28252  0020E4  59EA               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 28253  0020E6  A0D8               	btfss	status,0,c
 28254  0020E8  D76D               	goto	l1862
 28255                           
 28256                           ; BSR set to: 0
 28257                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 28258                           
 28259                           ; BSR set to: 0
 28260  0020EA  0E00               	movlw	0
 28261  0020EC  0012               	return	
 28262  0020EE                     __end_of_fat_read_from_file:
 28263                           	opt stack 0
 28264                           tosu	equ	0xFFF
 28265                           tosh	equ	0xFFE
 28266                           tosl	equ	0xFFD
 28267                           pclath	equ	0xFFA
 28268                           tblptru	equ	0xFF8
 28269                           tblptrh	equ	0xFF7
 28270                           tblptrl	equ	0xFF6
 28271                           tablat	equ	0xFF5
 28272                           prodh	equ	0xFF4
 28273                           prodl	equ	0xFF3
 28274                           intcon	equ	0xFF2
 28275                           intcon2	equ	0xFF1
 28276                           intcon3	equ	0xFF0
 28277                           indf0	equ	0xFEF
 28278                           postinc0	equ	0xFEE
 28279                           fsr0h	equ	0xFEA
 28280                           fsr0l	equ	0xFE9
 28281                           wreg	equ	0xFE8
 28282                           indf1	equ	0xFE7
 28283                           postdec1	equ	0xFE5
 28284                           plusw1	equ	0xFE3
 28285                           fsr1h	equ	0xFE2
 28286                           fsr1l	equ	0xFE1
 28287                           indf2	equ	0xFDF
 28288                           postinc2	equ	0xFDE
 28289                           postdec2	equ	0xFDD
 28290                           plusw2	equ	0xFDB
 28291                           fsr2h	equ	0xFDA
 28292                           fsr2l	equ	0xFD9
 28293                           status	equ	0xFD8
 28294                           
 28295 ;; *************** function _fat_get_file_size *****************
 28296 ;; Defined at:
 28297 ;;		line 294 in file "fat16.c"
 28298 ;; Parameters:    Size  Location     Type
 28299 ;;  file_number     1    wreg     unsigned char 
 28300 ;; Auto vars:     Size  Location     Type
 28301 ;;  file_number     1   52[COMRAM] unsigned char 
 28302 ;;  file_size       4   46[COMRAM] unsigned long 
 28303 ;;  offset          2   50[COMRAM] unsigned int 
 28304 ;;  sector          2   44[COMRAM] unsigned int 
 28305 ;; Return value:  Size  Location     Type
 28306 ;;                  4   39[COMRAM] unsigned long 
 28307 ;; Registers used:
 28308 ;;		wreg, status,2, status,0, cstack
 28309 ;; Tracked objects:
 28310 ;;		On entry : 0/0
 28311 ;;		On exit  : 0/0
 28312 ;;		Unchanged: 0/0
 28313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28315 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28317 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28318 ;;Total ram usage:       14 bytes
 28319 ;; Hardware stack levels used:    1
 28320 ;; Hardware stack levels required when called:    5
 28321 ;; This function calls:
 28322 ;;		_flash_partial_read
 28323 ;; This function is called by:
 28324 ;;		__bootloader_find_file
 28325 ;;		__bootloader_verify_file
 28326 ;;		__fill_buffer_read_file
 28327 ;; This function uses a non-reentrant model
 28328 ;;
 28329                           
 28330                           	psect	text130
 28331  00641A                     __ptext130:
 28332                           	opt stack 0
 28333  00641A                     _fat_get_file_size:
 28334                           	opt stack 23
 28335                           
 28336                           ; BSR set to: 0
 28337                           ;incstack = 0
 28338                           ;fat_get_file_size@file_number stored from wreg
 28339  00641A  6E35               	movwf	fat_get_file_size@file_number,c
 28340                           
 28341                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 28342  00641C  C035  F02C         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 28343  006420  3A2C               	swapf	??_fat_get_file_size,f,c
 28344  006422  0E0F               	movlw	15
 28345  006424  162C               	andwf	??_fat_get_file_size,f,c
 28346  006426  502C               	movf	??_fat_get_file_size,w,c
 28347  006428  6E2D               	movwf	fat_get_file_size@sector,c
 28348  00642A  6A2E               	clrf	fat_get_file_size@sector+1,c
 28349                           
 28350                           ;fat16.c: 300: sector += 18;
 28351  00642C  0E12               	movlw	18
 28352  00642E  262D               	addwf	fat_get_file_size@sector,f,c
 28353  006430  0E00               	movlw	0
 28354  006432  222E               	addwfc	fat_get_file_size@sector+1,f,c
 28355                           
 28356                           ;fat16.c: 301: offset = file_number;
 28357  006434  C035  F033         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 28358  006438  6A34               	clrf	fat_get_file_size@offset+1,c
 28359                           
 28360                           ;fat16.c: 302: offset <<= 5;
 28361  00643A  0E05               	movlw	5
 28362  00643C                     u8735:
 28363  00643C  90D8               	bcf	status,0,c
 28364  00643E  3633               	rlcf	fat_get_file_size@offset,f,c
 28365  006440  3634               	rlcf	fat_get_file_size@offset+1,f,c
 28366  006442  2EE8               	decfsz	wreg,f,c
 28367  006444  D7FB               	goto	u8735
 28368                           
 28369                           ;fat16.c: 303: offset &= 0b111111111;
 28370  006446  0EFF               	movlw	255
 28371  006448  1633               	andwf	fat_get_file_size@offset,f,c
 28372  00644A  0E01               	movlw	1
 28373  00644C  1634               	andwf	fat_get_file_size@offset+1,f,c
 28374                           
 28375                           ;fat16.c: 304: offset += 28;
 28376  00644E  0E1C               	movlw	28
 28377  006450  2633               	addwf	fat_get_file_size@offset,f,c
 28378  006452  0E00               	movlw	0
 28379  006454  2234               	addwfc	fat_get_file_size@offset+1,f,c
 28380                           
 28381                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 28382  006456  C02D  F014         	movff	fat_get_file_size@sector,flash_partial_read@page
 28383  00645A  C02E  F015         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 28384  00645E  C033  F016         	movff	fat_get_file_size@offset,flash_partial_read@start
 28385  006462  C034  F017         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 28386  006466  0E00               	movlw	0
 28387  006468  6E19               	movwf	flash_partial_read@length+1,c
 28388  00646A  0E04               	movlw	4
 28389  00646C  6E18               	movwf	flash_partial_read@length,c
 28390  00646E  0E2F               	movlw	low fat_get_file_size@file_size
 28391  006470  6E1A               	movwf	flash_partial_read@data,c
 28392  006472  0E00               	movlw	high fat_get_file_size@file_size
 28393  006474  6E1B               	movwf	flash_partial_read@data+1,c
 28394  006476  ECE8  F030         	call	_flash_partial_read	;wreg free
 28395                           
 28396                           ;fat16.c: 306: return file_size;
 28397  00647A  C02F  F028         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 28398  00647E  C030  F029         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 28399  006482  C031  F02A         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 28400  006486  C032  F02B         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 28401  00648A  0012               	return	
 28402  00648C                     __end_of_fat_get_file_size:
 28403                           	opt stack 0
 28404                           tosu	equ	0xFFF
 28405                           tosh	equ	0xFFE
 28406                           tosl	equ	0xFFD
 28407                           pclath	equ	0xFFA
 28408                           tblptru	equ	0xFF8
 28409                           tblptrh	equ	0xFF7
 28410                           tblptrl	equ	0xFF6
 28411                           tablat	equ	0xFF5
 28412                           prodh	equ	0xFF4
 28413                           prodl	equ	0xFF3
 28414                           intcon	equ	0xFF2
 28415                           intcon2	equ	0xFF1
 28416                           intcon3	equ	0xFF0
 28417                           indf0	equ	0xFEF
 28418                           postinc0	equ	0xFEE
 28419                           fsr0h	equ	0xFEA
 28420                           fsr0l	equ	0xFE9
 28421                           wreg	equ	0xFE8
 28422                           indf1	equ	0xFE7
 28423                           postdec1	equ	0xFE5
 28424                           plusw1	equ	0xFE3
 28425                           fsr1h	equ	0xFE2
 28426                           fsr1l	equ	0xFE1
 28427                           indf2	equ	0xFDF
 28428                           postinc2	equ	0xFDE
 28429                           postdec2	equ	0xFDD
 28430                           plusw2	equ	0xFDB
 28431                           fsr2h	equ	0xFDA
 28432                           fsr2l	equ	0xFD9
 28433                           status	equ	0xFD8
 28434                           
 28435 ;; *************** function __fill_buffer_get_status *****************
 28436 ;; Defined at:
 28437 ;;		line 171 in file "api.c"
 28438 ;; Parameters:    Size  Location     Type
 28439 ;;  outBuffer       2   19[COMRAM] PTR unsigned char 
 28440 ;;		 -> RAM(3759), 
 28441 ;; Auto vars:     Size  Location     Type
 28442 ;;		None
 28443 ;; Return value:  Size  Location     Type
 28444 ;;                  1    wreg      void 
 28445 ;; Registers used:
 28446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28447 ;; Tracked objects:
 28448 ;;		On entry : 0/0
 28449 ;;		On exit  : 0/0
 28450 ;;		Unchanged: 0/0
 28451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28456 ;;Total ram usage:        2 bytes
 28457 ;; Hardware stack levels used:    1
 28458 ;; Hardware stack levels required when called:    4
 28459 ;; This function calls:
 28460 ;;		_flash_is_busy
 28461 ;;		_ui_get_status
 28462 ;; This function is called by:
 28463 ;;		_api_prepare
 28464 ;; This function uses a non-reentrant model
 28465 ;;
 28466                           
 28467                           	psect	text131
 28468  004720                     __ptext131:
 28469                           	opt stack 0
 28470  004720                     __fill_buffer_get_status:
 28471                           	opt stack 24
 28472                           
 28473                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 28474                           
 28475                           ;incstack = 0
 28476  004720  C014  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 28477  004724  C015  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 28478  004728  0E10               	movlw	16
 28479  00472A  6EDF               	movwf	indf2,c
 28480                           
 28481                           ;api.c: 177: outBuffer[1] = (uint8_t) 0xC125;
 28482  00472C  EE20 F001          	lfsr	2,1
 28483  004730  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28484  004732  26D9               	addwf	fsr2l,f,c
 28485  004734  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28486  004736  22DA               	addwfc	fsr2h,f,c
 28487  004738  0E25               	movlw	37
 28488  00473A  6EDF               	movwf	indf2,c
 28489                           
 28490                           ;api.c: 178: outBuffer[2] = 0xC125 >> 8;
 28491  00473C  EE20 F002          	lfsr	2,2
 28492  004740  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28493  004742  26D9               	addwf	fsr2l,f,c
 28494  004744  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28495  004746  22DA               	addwfc	fsr2h,f,c
 28496  004748  0EC1               	movlw	193
 28497  00474A  6EDF               	movwf	indf2,c
 28498                           
 28499                           ;api.c: 181: outBuffer[3] = (uint8_t) flash_is_busy();
 28500  00474C  EE20 F003          	lfsr	2,3
 28501  004750  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28502  004752  26D9               	addwf	fsr2l,f,c
 28503  004754  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28504  004756  22DA               	addwfc	fsr2h,f,c
 28505  004758  EC38  F03C         	call	_flash_is_busy	;wreg free
 28506  00475C  6EDF               	movwf	indf2,c
 28507                           
 28508                           ;api.c: 184: outBuffer[4] = 0x00;
 28509  00475E  EE20 F004          	lfsr	2,4
 28510  004762  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28511  004764  26D9               	addwf	fsr2l,f,c
 28512  004766  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28513  004768  22DA               	addwfc	fsr2h,f,c
 28514  00476A  0E00               	movlw	0
 28515  00476C  6EDF               	movwf	indf2,c
 28516                           
 28517                           ;api.c: 185: outBuffer[5] = 0x01;
 28518  00476E  EE20 F005          	lfsr	2,5
 28519  004772  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28520  004774  26D9               	addwf	fsr2l,f,c
 28521  004776  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28522  004778  22DA               	addwfc	fsr2h,f,c
 28523  00477A  0E01               	movlw	1
 28524  00477C  6EDF               	movwf	indf2,c
 28525                           
 28526                           ;api.c: 186: outBuffer[6] = 0x00;
 28527  00477E  EE20 F006          	lfsr	2,6
 28528  004782  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28529  004784  26D9               	addwf	fsr2l,f,c
 28530  004786  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28531  004788  22DA               	addwfc	fsr2h,f,c
 28532  00478A  0E00               	movlw	0
 28533  00478C  6EDF               	movwf	indf2,c
 28534                           
 28535                           ;api.c: 189: outBuffer[7] = ui_get_status();
 28536  00478E  EE20 F007          	lfsr	2,7
 28537  004792  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28538  004794  26D9               	addwf	fsr2l,f,c
 28539  004796  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28540  004798  22DA               	addwfc	fsr2h,f,c
 28541  00479A  EC4A  F03D         	call	_ui_get_status	;wreg free
 28542  00479E  6EDF               	movwf	indf2,c
 28543                           
 28544                           ;api.c: 192: outBuffer[8] = os.encoderCount;
 28545  0047A0  EE20 F008          	lfsr	2,8
 28546  0047A4  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28547  0047A6  26D9               	addwf	fsr2l,f,c
 28548  0047A8  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28549  0047AA  22DA               	addwfc	fsr2h,f,c
 28550  0047AC  C060  FFDF         	movff	_os,indf2	;volatile
 28551                           
 28552                           ;api.c: 193: outBuffer[9] = os.buttonCount;
 28553  0047B0  EE20 F009          	lfsr	2,9
 28554  0047B4  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28555  0047B6  26D9               	addwf	fsr2l,f,c
 28556  0047B8  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28557  0047BA  22DA               	addwfc	fsr2h,f,c
 28558  0047BC  C061  FFDF         	movff	_os+1,indf2	;volatile
 28559                           
 28560                           ;api.c: 194: outBuffer[10] = os.timeSlot;
 28561  0047C0  EE20 F00A          	lfsr	2,10
 28562  0047C4  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28563  0047C6  26D9               	addwf	fsr2l,f,c
 28564  0047C8  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28565  0047CA  22DA               	addwfc	fsr2h,f,c
 28566  0047CC  C062  FFDF         	movff	_os+2,indf2	;volatile
 28567                           
 28568                           ;api.c: 195: outBuffer[11] = os.done;
 28569  0047D0  EE20 F00B          	lfsr	2,11
 28570  0047D4  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28571  0047D6  26D9               	addwf	fsr2l,f,c
 28572  0047D8  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28573  0047DA  22DA               	addwfc	fsr2h,f,c
 28574  0047DC  C063  FFDF         	movff	_os+3,indf2	;volatile
 28575                           
 28576                           ;api.c: 196: outBuffer[12] = os.bootloader_mode;
 28577  0047E0  EE20 F00C          	lfsr	2,12
 28578  0047E4  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28579  0047E6  26D9               	addwf	fsr2l,f,c
 28580  0047E8  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28581  0047EA  22DA               	addwfc	fsr2h,f,c
 28582  0047EC  C064  FFDF         	movff	_os+4,indf2	;volatile
 28583                           
 28584                           ;api.c: 197: outBuffer[13] = os.display_mode;
 28585  0047F0  EE20 F00D          	lfsr	2,13
 28586  0047F4  5014               	movf	__fill_buffer_get_status@outBuffer,w,c
 28587  0047F6  26D9               	addwf	fsr2l,f,c
 28588  0047F8  5015               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28589  0047FA  22DA               	addwfc	fsr2h,f,c
 28590  0047FC  C065  FFDF         	movff	_os+5,indf2	;volatile
 28591  004800  0012               	return		;funcret
 28592  004802                     __end_of__fill_buffer_get_status:
 28593                           	opt stack 0
 28594                           tosu	equ	0xFFF
 28595                           tosh	equ	0xFFE
 28596                           tosl	equ	0xFFD
 28597                           pclath	equ	0xFFA
 28598                           tblptru	equ	0xFF8
 28599                           tblptrh	equ	0xFF7
 28600                           tblptrl	equ	0xFF6
 28601                           tablat	equ	0xFF5
 28602                           prodh	equ	0xFF4
 28603                           prodl	equ	0xFF3
 28604                           intcon	equ	0xFF2
 28605                           intcon2	equ	0xFF1
 28606                           intcon3	equ	0xFF0
 28607                           indf0	equ	0xFEF
 28608                           postinc0	equ	0xFEE
 28609                           fsr0h	equ	0xFEA
 28610                           fsr0l	equ	0xFE9
 28611                           wreg	equ	0xFE8
 28612                           indf1	equ	0xFE7
 28613                           postdec1	equ	0xFE5
 28614                           plusw1	equ	0xFE3
 28615                           fsr1h	equ	0xFE2
 28616                           fsr1l	equ	0xFE1
 28617                           indf2	equ	0xFDF
 28618                           postinc2	equ	0xFDE
 28619                           postdec2	equ	0xFDD
 28620                           plusw2	equ	0xFDB
 28621                           fsr2h	equ	0xFDA
 28622                           fsr2l	equ	0xFD9
 28623                           status	equ	0xFD8
 28624                           
 28625 ;; *************** function _ui_get_status *****************
 28626 ;; Defined at:
 28627 ;;		line 72 in file "ui.c"
 28628 ;; Parameters:    Size  Location     Type
 28629 ;;		None
 28630 ;; Auto vars:     Size  Location     Type
 28631 ;;		None
 28632 ;; Return value:  Size  Location     Type
 28633 ;;                  1    wreg      enum E7886
 28634 ;; Registers used:
 28635 ;;		wreg, status,2
 28636 ;; Tracked objects:
 28637 ;;		On entry : 0/0
 28638 ;;		On exit  : 0/0
 28639 ;;		Unchanged: 0/0
 28640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28645 ;;Total ram usage:        0 bytes
 28646 ;; Hardware stack levels used:    1
 28647 ;; This function calls:
 28648 ;;		Nothing
 28649 ;; This function is called by:
 28650 ;;		_main
 28651 ;;		__fill_buffer_get_status
 28652 ;; This function uses a non-reentrant model
 28653 ;;
 28654                           
 28655                           	psect	text132
 28656  007A94                     __ptext132:
 28657                           	opt stack 0
 28658  007A94                     _ui_get_status:
 28659                           	opt stack 30
 28660                           
 28661                           ;ui.c: 74: return userInterfaceStatus;
 28662                           
 28663                           ;incstack = 0
 28664  007A94  0100               	movlb	0	; () banked
 28665  007A96  519F               	movf	_userInterfaceStatus& (0+255),w,b
 28666  007A98  0012               	return	
 28667  007A9A                     __end_of_ui_get_status:
 28668                           	opt stack 0
 28669                           tosu	equ	0xFFF
 28670                           tosh	equ	0xFFE
 28671                           tosl	equ	0xFFD
 28672                           pclath	equ	0xFFA
 28673                           tblptru	equ	0xFF8
 28674                           tblptrh	equ	0xFF7
 28675                           tblptrl	equ	0xFF6
 28676                           tablat	equ	0xFF5
 28677                           prodh	equ	0xFF4
 28678                           prodl	equ	0xFF3
 28679                           intcon	equ	0xFF2
 28680                           intcon2	equ	0xFF1
 28681                           intcon3	equ	0xFF0
 28682                           indf0	equ	0xFEF
 28683                           postinc0	equ	0xFEE
 28684                           fsr0h	equ	0xFEA
 28685                           fsr0l	equ	0xFE9
 28686                           wreg	equ	0xFE8
 28687                           indf1	equ	0xFE7
 28688                           postdec1	equ	0xFE5
 28689                           plusw1	equ	0xFE3
 28690                           fsr1h	equ	0xFE2
 28691                           fsr1l	equ	0xFE1
 28692                           indf2	equ	0xFDF
 28693                           postinc2	equ	0xFDE
 28694                           postdec2	equ	0xFDD
 28695                           plusw2	equ	0xFDB
 28696                           fsr2h	equ	0xFDA
 28697                           fsr2l	equ	0xFD9
 28698                           status	equ	0xFD8
 28699                           
 28700 ;; *************** function __fill_buffer_get_file_details *****************
 28701 ;; Defined at:
 28702 ;;		line 328 in file "api.c"
 28703 ;; Parameters:    Size  Location     Type
 28704 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 28705 ;;		 -> RAM(3759), 
 28706 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 28707 ;;		 -> RAM(3759), 
 28708 ;; Auto vars:     Size  Location     Type
 28709 ;;  file_number     1   58[COMRAM] unsigned char 
 28710 ;; Return value:  Size  Location     Type
 28711 ;;                  1    wreg      void 
 28712 ;; Registers used:
 28713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28714 ;; Tracked objects:
 28715 ;;		On entry : 0/0
 28716 ;;		On exit  : 0/0
 28717 ;;		Unchanged: 0/0
 28718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28723 ;;Total ram usage:        5 bytes
 28724 ;; Hardware stack levels used:    1
 28725 ;; Hardware stack levels required when called:    7
 28726 ;; This function calls:
 28727 ;;		_fat_get_file_information
 28728 ;; This function is called by:
 28729 ;;		_api_prepare
 28730 ;; This function uses a non-reentrant model
 28731 ;;
 28732                           
 28733                           	psect	text133
 28734  0064FC                     __ptext133:
 28735                           	opt stack 0
 28736  0064FC                     __fill_buffer_get_file_details:
 28737                           	opt stack 21
 28738                           
 28739                           ;api.c: 330: uint8_t file_number = inBuffer[2];
 28740                           
 28741                           ; BSR set to: 0
 28742                           ;incstack = 0
 28743  0064FC  EE20 F002          	lfsr	2,2
 28744  006500  5037               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 28745  006502  26D9               	addwf	fsr2l,f,c
 28746  006504  5038               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 28747  006506  22DA               	addwfc	fsr2h,f,c
 28748  006508  50DF               	movf	indf2,w,c
 28749  00650A  6E3B               	movwf	__fill_buffer_get_file_details@file_number,c
 28750                           
 28751                           ;api.c: 333: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 28752  00650C  C039  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 28753  006510  C03A  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 28754  006514  0E80               	movlw	128
 28755  006516  6EDF               	movwf	indf2,c
 28756                           
 28757                           ;api.c: 336: outBuffer[1] = (uint8_t) 0xC125;
 28758  006518  EE20 F001          	lfsr	2,1
 28759  00651C  5039               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28760  00651E  26D9               	addwf	fsr2l,f,c
 28761  006520  503A               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28762  006522  22DA               	addwfc	fsr2h,f,c
 28763  006524  0E25               	movlw	37
 28764  006526  6EDF               	movwf	indf2,c
 28765                           
 28766                           ;api.c: 337: outBuffer[2] = 0xC125 >> 8;
 28767  006528  EE20 F002          	lfsr	2,2
 28768  00652C  5039               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28769  00652E  26D9               	addwf	fsr2l,f,c
 28770  006530  503A               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28771  006532  22DA               	addwfc	fsr2h,f,c
 28772  006534  0EC1               	movlw	193
 28773  006536  6EDF               	movwf	indf2,c
 28774                           
 28775                           ;api.c: 340: outBuffer[3] = file_number;
 28776  006538  EE20 F003          	lfsr	2,3
 28777  00653C  5039               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28778  00653E  26D9               	addwf	fsr2l,f,c
 28779  006540  503A               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28780  006542  22DA               	addwfc	fsr2h,f,c
 28781  006544  C03B  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 28782                           
 28783                           ;api.c: 343: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 28784  006548  EE20 F004          	lfsr	2,4
 28785  00654C  5039               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28786  00654E  26D9               	addwf	fsr2l,f,c
 28787  006550  503A               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28788  006552  22DA               	addwfc	fsr2h,f,c
 28789  006554  0E05               	movlw	5
 28790  006556  2439               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 28791  006558  6E2F               	movwf	fat_get_file_information@data,c
 28792  00655A  0E00               	movlw	0
 28793  00655C  203A               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 28794  00655E  6E30               	movwf	fat_get_file_information@data+1,c
 28795  006560  503B               	movf	__fill_buffer_get_file_details@file_number,w,c
 28796  006562  EC99  F031         	call	_fat_get_file_information
 28797  006566  6EDF               	movwf	indf2,c
 28798  006568  0012               	return		;funcret
 28799  00656A                     __end_of__fill_buffer_get_file_details:
 28800                           	opt stack 0
 28801                           tosu	equ	0xFFF
 28802                           tosh	equ	0xFFE
 28803                           tosl	equ	0xFFD
 28804                           pclath	equ	0xFFA
 28805                           tblptru	equ	0xFF8
 28806                           tblptrh	equ	0xFF7
 28807                           tblptrl	equ	0xFF6
 28808                           tablat	equ	0xFF5
 28809                           prodh	equ	0xFF4
 28810                           prodl	equ	0xFF3
 28811                           intcon	equ	0xFF2
 28812                           intcon2	equ	0xFF1
 28813                           intcon3	equ	0xFF0
 28814                           indf0	equ	0xFEF
 28815                           postinc0	equ	0xFEE
 28816                           fsr0h	equ	0xFEA
 28817                           fsr0l	equ	0xFE9
 28818                           wreg	equ	0xFE8
 28819                           indf1	equ	0xFE7
 28820                           postdec1	equ	0xFE5
 28821                           plusw1	equ	0xFE3
 28822                           fsr1h	equ	0xFE2
 28823                           fsr1l	equ	0xFE1
 28824                           indf2	equ	0xFDF
 28825                           postinc2	equ	0xFDE
 28826                           postdec2	equ	0xFDD
 28827                           plusw2	equ	0xFDB
 28828                           fsr2h	equ	0xFDA
 28829                           fsr2l	equ	0xFD9
 28830                           status	equ	0xFD8
 28831                           
 28832 ;; *************** function __fill_buffer_get_display *****************
 28833 ;; Defined at:
 28834 ;;		line 201 in file "api.c"
 28835 ;; Parameters:    Size  Location     Type
 28836 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 28837 ;;		 -> RAM(3759), 
 28838 ;;  secondHalf      1    6[COMRAM] unsigned char 
 28839 ;; Auto vars:     Size  Location     Type
 28840 ;;  position        1   15[COMRAM] unsigned char 
 28841 ;;  start_line      1   14[COMRAM] unsigned char 
 28842 ;;  line            1   13[COMRAM] unsigned char 
 28843 ;;  cntr            1   12[COMRAM] unsigned char 
 28844 ;; Return value:  Size  Location     Type
 28845 ;;                  1    wreg      void 
 28846 ;; Registers used:
 28847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28848 ;; Tracked objects:
 28849 ;;		On entry : 0/0
 28850 ;;		On exit  : 0/0
 28851 ;;		Unchanged: 0/0
 28852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28854 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28855 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28856 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28857 ;;Total ram usage:       12 bytes
 28858 ;; Hardware stack levels used:    1
 28859 ;; Hardware stack levels required when called:    1
 28860 ;; This function calls:
 28861 ;;		_display_get_character
 28862 ;; This function is called by:
 28863 ;;		_api_prepare
 28864 ;; This function uses a non-reentrant model
 28865 ;;
 28866                           
 28867                           	psect	text134
 28868  00523C                     __ptext134:
 28869                           	opt stack 0
 28870  00523C                     __fill_buffer_get_display:
 28871                           	opt stack 27
 28872                           
 28873                           ;api.c: 203: uint8_t cntr;;api.c: 204: uint8_t line;;api.c: 205: uint8_t start_line;;api
      +                          .c: 206: uint8_t position;;api.c: 209: if(secondHalf)
 28874                           
 28875                           ;incstack = 0
 28876  00523C  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 28877  00523E  B4D8               	btfsc	status,2,c
 28878  005240  D006               	goto	l2425
 28879                           
 28880                           ;api.c: 210: {;api.c: 211: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 28881  005242  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 28882  005246  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 28883  00524A  0E12               	movlw	18
 28884  00524C  D005               	goto	L32
 28885  00524E                     l2425:
 28886                           
 28887                           ;api.c: 213: else;api.c: 214: {;api.c: 215: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 28888  00524E  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 28889  005252  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 28890  005256  0E11               	movlw	17
 28891  005258                     L32:
 28892  005258  6EDF               	movwf	indf2,c
 28893                           
 28894                           ;api.c: 216: };api.c: 219: outBuffer[1] = (uint8_t) 0xC125;
 28895  00525A  EE20 F001          	lfsr	2,1
 28896  00525E  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 28897  005260  26D9               	addwf	fsr2l,f,c
 28898  005262  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 28899  005264  22DA               	addwfc	fsr2h,f,c
 28900  005266  0E25               	movlw	37
 28901  005268  6EDF               	movwf	indf2,c
 28902                           
 28903                           ;api.c: 220: outBuffer[2] = 0xC125 >> 8;
 28904  00526A  EE20 F002          	lfsr	2,2
 28905  00526E  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 28906  005270  26D9               	addwf	fsr2l,f,c
 28907  005272  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 28908  005274  22DA               	addwfc	fsr2h,f,c
 28909  005276  0EC1               	movlw	193
 28910  005278  6EDF               	movwf	indf2,c
 28911                           
 28912                           ;api.c: 223: cntr = 3;
 28913  00527A  0E03               	movlw	3
 28914  00527C  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 28915                           
 28916                           ;api.c: 224: if(secondHalf)
 28917  00527E  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 28918  005280  B4D8               	btfsc	status,2,c
 28919  005282  D002               	goto	l2427
 28920                           
 28921                           ;api.c: 225: {;api.c: 226: start_line = 2;
 28922  005284  0E02               	movlw	2
 28923  005286  D001               	goto	L33
 28924  005288                     l2427:
 28925                           
 28926                           ;api.c: 228: else;api.c: 229: {;api.c: 230: start_line = 0;
 28927  005288  0E00               	movlw	0
 28928  00528A                     L33:
 28929  00528A  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 28930                           
 28931                           ;api.c: 231: };api.c: 232: for(line=start_line; line<start_line+2; ++line)
 28932  00528C  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 28933  005290  D01A               	goto	l2429
 28934  005292                     
 28935                           ;api.c: 233: {;api.c: 234: for(position=0; position<20; ++position)
 28936  005292  0E00               	movlw	0
 28937  005294  6E10               	movwf	__fill_buffer_get_display@position,c
 28938  005296                     l12541:
 28939  005296  0E13               	movlw	19
 28940  005298  6410               	cpfsgt	__fill_buffer_get_display@position,c
 28941  00529A  D001               	goto	l2431
 28942  00529C  D013               	goto	u9900
 28943  00529E                     l2431:
 28944                           
 28945                           ;api.c: 235: {;api.c: 236: outBuffer[cntr] = display_get_character(line, position);
 28946  00529E  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 28947  0052A2  500E               	movf	__fill_buffer_get_display@line,w,c
 28948  0052A4  EC45  F03B         	call	_display_get_character
 28949  0052A8  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 28950  0052AA  500D               	movf	__fill_buffer_get_display@cntr,w,c
 28951  0052AC  0D01               	mullw	1
 28952  0052AE  50F3               	movf	prodl,w,c
 28953  0052B0  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 28954  0052B2  6ED9               	movwf	fsr2l,c
 28955  0052B4  50F4               	movf	prodh,w,c
 28956  0052B6  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 28957  0052B8  6EDA               	movwf	fsr2h,c
 28958  0052BA  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 28959                           
 28960                           ;api.c: 237: ++cntr;
 28961  0052BE  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 28962  0052C0  2A10               	incf	__fill_buffer_get_display@position,f,c
 28963  0052C2  D7E9               	goto	l12541
 28964  0052C4                     u9900:
 28965  0052C4  2A0E               	incf	__fill_buffer_get_display@line,f,c
 28966  0052C6                     l2429:
 28967  0052C6  500F               	movf	__fill_buffer_get_display@start_line,w,c
 28968  0052C8  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 28969  0052CA  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 28970  0052CC  0E02               	movlw	2
 28971  0052CE  2608               	addwf	??__fill_buffer_get_display,f,c
 28972  0052D0  0E00               	movlw	0
 28973  0052D2  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 28974  0052D4  500E               	movf	__fill_buffer_get_display@line,w,c
 28975  0052D6  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 28976  0052D8  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 28977  0052DA  5008               	movf	??__fill_buffer_get_display,w,c
 28978  0052DC  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 28979  0052DE  500B               	movf	??__fill_buffer_get_display+3,w,c
 28980  0052E0  0A80               	xorlw	128
 28981  0052E2  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 28982  0052E4  5009               	movf	??__fill_buffer_get_display+1,w,c
 28983  0052E6  0A80               	xorlw	128
 28984  0052E8  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 28985  0052EA  B0D8               	btfsc	status,0,c
 28986  0052EC  0012               	return	
 28987  0052EE  D7D1               	goto	l2430
 28988  0052F0                     __end_of__fill_buffer_get_display:
 28989                           	opt stack 0
 28990                           tosu	equ	0xFFF
 28991                           tosh	equ	0xFFE
 28992                           tosl	equ	0xFFD
 28993                           pclath	equ	0xFFA
 28994                           tblptru	equ	0xFF8
 28995                           tblptrh	equ	0xFF7
 28996                           tblptrl	equ	0xFF6
 28997                           tablat	equ	0xFF5
 28998                           prodh	equ	0xFF4
 28999                           prodl	equ	0xFF3
 29000                           intcon	equ	0xFF2
 29001                           intcon2	equ	0xFF1
 29002                           intcon3	equ	0xFF0
 29003                           indf0	equ	0xFEF
 29004                           postinc0	equ	0xFEE
 29005                           fsr0h	equ	0xFEA
 29006                           fsr0l	equ	0xFE9
 29007                           wreg	equ	0xFE8
 29008                           indf1	equ	0xFE7
 29009                           postdec1	equ	0xFE5
 29010                           plusw1	equ	0xFE3
 29011                           fsr1h	equ	0xFE2
 29012                           fsr1l	equ	0xFE1
 29013                           indf2	equ	0xFDF
 29014                           postinc2	equ	0xFDE
 29015                           postdec2	equ	0xFDD
 29016                           plusw2	equ	0xFDB
 29017                           fsr2h	equ	0xFDA
 29018                           fsr2l	equ	0xFD9
 29019                           status	equ	0xFD8
 29020                           
 29021 ;; *************** function _display_get_character *****************
 29022 ;; Defined at:
 29023 ;;		line 60 in file "display.c"
 29024 ;; Parameters:    Size  Location     Type
 29025 ;;  line            1    wreg     unsigned char 
 29026 ;;  position        1    0[COMRAM] unsigned char 
 29027 ;; Auto vars:     Size  Location     Type
 29028 ;;  line            1    3[COMRAM] unsigned char 
 29029 ;; Return value:  Size  Location     Type
 29030 ;;                  1    wreg      unsigned char 
 29031 ;; Registers used:
 29032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29033 ;; Tracked objects:
 29034 ;;		On entry : 0/0
 29035 ;;		On exit  : 0/0
 29036 ;;		Unchanged: 0/0
 29037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29038 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29040 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29042 ;;Total ram usage:        4 bytes
 29043 ;; Hardware stack levels used:    1
 29044 ;; This function calls:
 29045 ;;		Nothing
 29046 ;; This function is called by:
 29047 ;;		__fill_buffer_get_display
 29048 ;; This function uses a non-reentrant model
 29049 ;;
 29050                           
 29051                           	psect	text135
 29052  00768A                     __ptext135:
 29053                           	opt stack 0
 29054  00768A                     _display_get_character:
 29055                           	opt stack 27
 29056                           
 29057                           ;incstack = 0
 29058                           ;display_get_character@line stored from wreg
 29059  00768A  6E04               	movwf	display_get_character@line,c
 29060                           
 29061                           ;display.c: 62: return display_content[line][position];
 29062  00768C  5004               	movf	display_get_character@line,w,c
 29063  00768E  0D14               	mullw	20
 29064  007690  0E68               	movlw	low _display_content
 29065  007692  6E02               	movwf	??_display_get_character& (0+255),c
 29066  007694  0E01               	movlw	high _display_content
 29067  007696  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 29068  007698  50F3               	movf	prodl,w,c
 29069  00769A  2602               	addwf	??_display_get_character,f,c
 29070  00769C  50F4               	movf	prodh,w,c
 29071  00769E  2203               	addwfc	??_display_get_character+1,f,c
 29072  0076A0  5001               	movf	display_get_character@position,w,c
 29073  0076A2  0D01               	mullw	1
 29074  0076A4  50F3               	movf	prodl,w,c
 29075  0076A6  2402               	addwf	??_display_get_character,w,c
 29076  0076A8  6ED9               	movwf	fsr2l,c
 29077  0076AA  50F4               	movf	prodh,w,c
 29078  0076AC  2003               	addwfc	??_display_get_character+1,w,c
 29079  0076AE  6EDA               	movwf	fsr2h,c
 29080  0076B0  50DF               	movf	indf2,w,c
 29081  0076B2  0012               	return	
 29082  0076B4                     __end_of_display_get_character:
 29083                           	opt stack 0
 29084                           tosu	equ	0xFFF
 29085                           tosh	equ	0xFFE
 29086                           tosl	equ	0xFFD
 29087                           pclath	equ	0xFFA
 29088                           tblptru	equ	0xFF8
 29089                           tblptrh	equ	0xFF7
 29090                           tblptrl	equ	0xFF6
 29091                           tablat	equ	0xFF5
 29092                           prodh	equ	0xFF4
 29093                           prodl	equ	0xFF3
 29094                           intcon	equ	0xFF2
 29095                           intcon2	equ	0xFF1
 29096                           intcon3	equ	0xFF0
 29097                           indf0	equ	0xFEF
 29098                           postinc0	equ	0xFEE
 29099                           fsr0h	equ	0xFEA
 29100                           fsr0l	equ	0xFE9
 29101                           wreg	equ	0xFE8
 29102                           indf1	equ	0xFE7
 29103                           postdec1	equ	0xFE5
 29104                           plusw1	equ	0xFE3
 29105                           fsr1h	equ	0xFE2
 29106                           fsr1l	equ	0xFE1
 29107                           indf2	equ	0xFDF
 29108                           postinc2	equ	0xFDE
 29109                           postdec2	equ	0xFDD
 29110                           plusw2	equ	0xFDB
 29111                           fsr2h	equ	0xFDA
 29112                           fsr2l	equ	0xFD9
 29113                           status	equ	0xFD8
 29114                           
 29115 ;; *************** function __fill_buffer_get_configuration *****************
 29116 ;; Defined at:
 29117 ;;		line 302 in file "api.c"
 29118 ;; Parameters:    Size  Location     Type
 29119 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 29120 ;;		 -> RAM(3759), 
 29121 ;; Auto vars:     Size  Location     Type
 29122 ;;  buffer_large    4    0        unsigned long 
 29123 ;;  buffer_small    2    0        unsigned int 
 29124 ;;  data_length     1    0        unsigned char 
 29125 ;;  cntr            1    0        unsigned char 
 29126 ;; Return value:  Size  Location     Type
 29127 ;;                  1    wreg      void 
 29128 ;; Registers used:
 29129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29130 ;; Tracked objects:
 29131 ;;		On entry : 0/0
 29132 ;;		On exit  : 0/0
 29133 ;;		Unchanged: 0/0
 29134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29139 ;;Total ram usage:        2 bytes
 29140 ;; Hardware stack levels used:    1
 29141 ;; This function calls:
 29142 ;;		Nothing
 29143 ;; This function is called by:
 29144 ;;		_api_prepare
 29145 ;; This function uses a non-reentrant model
 29146 ;;
 29147                           
 29148                           	psect	text136
 29149  005812                     __ptext136:
 29150                           	opt stack 0
 29151  005812                     __fill_buffer_get_configuration:
 29152                           	opt stack 28
 29153                           
 29154                           ;api.c: 304: uint8_t cntr;;api.c: 305: uint8_t data_length;;api.c: 306: uint16_t buffer_
      +                          small;;api.c: 307: uint32_t buffer_large;;api.c: 310: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29155                           
 29156                           ;incstack = 0
 29157  005812  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 29158  005816  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 29159  00581A  0E10               	movlw	16
 29160  00581C  6EDF               	movwf	indf2,c
 29161                           
 29162                           ;api.c: 313: outBuffer[1] = (uint8_t) 0xC125;
 29163  00581E  EE20 F001          	lfsr	2,1
 29164  005822  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29165  005824  26D9               	addwf	fsr2l,f,c
 29166  005826  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29167  005828  22DA               	addwfc	fsr2h,f,c
 29168  00582A  0E25               	movlw	37
 29169  00582C  6EDF               	movwf	indf2,c
 29170                           
 29171                           ;api.c: 314: outBuffer[2] = 0xC125 >> 8;
 29172  00582E  EE20 F002          	lfsr	2,2
 29173  005832  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29174  005834  26D9               	addwf	fsr2l,f,c
 29175  005836  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29176  005838  22DA               	addwfc	fsr2h,f,c
 29177  00583A  0EC1               	movlw	193
 29178  00583C  6EDF               	movwf	indf2,c
 29179                           
 29180                           ;api.c: 317: outBuffer[3] = communicationSettings.spiMode;
 29181  00583E  EE20 F003          	lfsr	2,3
 29182  005842  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29183  005844  26D9               	addwf	fsr2l,f,c
 29184  005846  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29185  005848  22DA               	addwfc	fsr2h,f,c
 29186  00584A  C139  FFDF         	movff	_communicationSettings,indf2
 29187                           
 29188                           ;api.c: 318: outBuffer[4] = communicationSettings.spiFrequency;
 29189  00584E  EE20 F004          	lfsr	2,4
 29190  005852  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29191  005854  26D9               	addwf	fsr2l,f,c
 29192  005856  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29193  005858  22DA               	addwfc	fsr2h,f,c
 29194  00585A  C13A  FFDF         	movff	_communicationSettings+1,indf2
 29195                           
 29196                           ;api.c: 319: outBuffer[5] = communicationSettings.spiPolarity;
 29197  00585E  EE20 F005          	lfsr	2,5
 29198  005862  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29199  005864  26D9               	addwf	fsr2l,f,c
 29200  005866  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29201  005868  22DA               	addwfc	fsr2h,f,c
 29202  00586A  C13B  FFDF         	movff	_communicationSettings+2,indf2
 29203                           
 29204                           ;api.c: 322: outBuffer[6] = communicationSettings.i2cMode;
 29205  00586E  EE20 F006          	lfsr	2,6
 29206  005872  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29207  005874  26D9               	addwf	fsr2l,f,c
 29208  005876  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29209  005878  22DA               	addwfc	fsr2h,f,c
 29210  00587A  C13C  FFDF         	movff	_communicationSettings+3,indf2
 29211                           
 29212                           ;api.c: 323: outBuffer[7] = communicationSettings.i2cFrequency;
 29213  00587E  EE20 F007          	lfsr	2,7
 29214  005882  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29215  005884  26D9               	addwf	fsr2l,f,c
 29216  005886  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29217  005888  22DA               	addwfc	fsr2h,f,c
 29218  00588A  C13D  FFDF         	movff	_communicationSettings+4,indf2
 29219                           
 29220                           ;api.c: 324: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 29221  00588E  EE20 F008          	lfsr	2,8
 29222  005892  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29223  005894  26D9               	addwf	fsr2l,f,c
 29224  005896  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29225  005898  22DA               	addwfc	fsr2h,f,c
 29226  00589A  C13E  FFDF         	movff	_communicationSettings+5,indf2
 29227                           
 29228                           ;api.c: 325: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 29229  00589E  EE20 F009          	lfsr	2,9
 29230  0058A2  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29231  0058A4  26D9               	addwf	fsr2l,f,c
 29232  0058A6  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29233  0058A8  22DA               	addwfc	fsr2h,f,c
 29234  0058AA  C13F  FFDF         	movff	_communicationSettings+6,indf2
 29235  0058AE  0012               	return		;funcret
 29236  0058B0                     __end_of__fill_buffer_get_configuration:
 29237                           	opt stack 0
 29238                           tosu	equ	0xFFF
 29239                           tosh	equ	0xFFE
 29240                           tosl	equ	0xFFD
 29241                           pclath	equ	0xFFA
 29242                           tblptru	equ	0xFF8
 29243                           tblptrh	equ	0xFF7
 29244                           tblptrl	equ	0xFF6
 29245                           tablat	equ	0xFF5
 29246                           prodh	equ	0xFF4
 29247                           prodl	equ	0xFF3
 29248                           intcon	equ	0xFF2
 29249                           intcon2	equ	0xFF1
 29250                           intcon3	equ	0xFF0
 29251                           indf0	equ	0xFEF
 29252                           postinc0	equ	0xFEE
 29253                           fsr0h	equ	0xFEA
 29254                           fsr0l	equ	0xFE9
 29255                           wreg	equ	0xFE8
 29256                           indf1	equ	0xFE7
 29257                           postdec1	equ	0xFE5
 29258                           plusw1	equ	0xFE3
 29259                           fsr1h	equ	0xFE2
 29260                           fsr1l	equ	0xFE1
 29261                           indf2	equ	0xFDF
 29262                           postinc2	equ	0xFDE
 29263                           postdec2	equ	0xFDD
 29264                           plusw2	equ	0xFDB
 29265                           fsr2h	equ	0xFDA
 29266                           fsr2l	equ	0xFD9
 29267                           status	equ	0xFD8
 29268                           
 29269 ;; *************** function __fill_buffer_get_bootloader_details *****************
 29270 ;; Defined at:
 29271 ;;		line 242 in file "api.c"
 29272 ;; Parameters:    Size  Location     Type
 29273 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29274 ;;		 -> RAM(3759), 
 29275 ;; Auto vars:     Size  Location     Type
 29276 ;;  buffer_large    4   11[COMRAM] unsigned long 
 29277 ;;  buffer_small    2   15[COMRAM] unsigned int 
 29278 ;;  cntr            1   10[COMRAM] unsigned char 
 29279 ;;  data_length     1    9[COMRAM] unsigned char 
 29280 ;; Return value:  Size  Location     Type
 29281 ;;                  1    wreg      void 
 29282 ;; Registers used:
 29283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29284 ;; Tracked objects:
 29285 ;;		On entry : 0/0
 29286 ;;		On exit  : 0/0
 29287 ;;		Unchanged: 0/0
 29288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29290 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29291 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29292 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29293 ;;Total ram usage:       13 bytes
 29294 ;; Hardware stack levels used:    1
 29295 ;; Hardware stack levels required when called:    1
 29296 ;; This function calls:
 29297 ;;		_bootloader_get_entries
 29298 ;;		_bootloader_get_error
 29299 ;;		_bootloader_get_file_size
 29300 ;;		_bootloader_get_flashPagesWritten
 29301 ;;		_bootloader_get_rec_address
 29302 ;;		_bootloader_get_rec_checksum
 29303 ;;		_bootloader_get_rec_checksumCheck
 29304 ;;		_bootloader_get_rec_data
 29305 ;;		_bootloader_get_rec_dataLength
 29306 ;;		_bootloader_get_rec_recordType
 29307 ;;		_bootloader_get_total_entries
 29308 ;; This function is called by:
 29309 ;;		_api_prepare
 29310 ;; This function uses a non-reentrant model
 29311 ;;
 29312                           
 29313                           	psect	text137
 29314  002722                     __ptext137:
 29315                           	opt stack 0
 29316  002722                     __fill_buffer_get_bootloader_details:
 29317                           	opt stack 27
 29318                           
 29319                           ;api.c: 244: uint8_t cntr;;api.c: 245: uint8_t data_length;;api.c: 246: uint16_t buffer_
      +                          small;;api.c: 247: uint32_t buffer_large;;api.c: 250: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29320                           
 29321                           ;incstack = 0
 29322  002722  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 29323  002726  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 29324  00272A  0E10               	movlw	16
 29325  00272C  6EDF               	movwf	indf2,c
 29326                           
 29327                           ;api.c: 253: outBuffer[1] = (uint8_t) 0xC125;
 29328  00272E  EE20 F001          	lfsr	2,1
 29329  002732  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29330  002734  26D9               	addwf	fsr2l,f,c
 29331  002736  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29332  002738  22DA               	addwfc	fsr2h,f,c
 29333  00273A  0E25               	movlw	37
 29334  00273C  6EDF               	movwf	indf2,c
 29335                           
 29336                           ;api.c: 254: outBuffer[2] = 0xC125 >> 8;
 29337  00273E  EE20 F002          	lfsr	2,2
 29338  002742  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29339  002744  26D9               	addwf	fsr2l,f,c
 29340  002746  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29341  002748  22DA               	addwfc	fsr2h,f,c
 29342  00274A  0EC1               	movlw	193
 29343  00274C  6EDF               	movwf	indf2,c
 29344                           
 29345                           ;api.c: 257: buffer_large = bootloader_get_file_size();
 29346  00274E  ECCD  F03C         	call	_bootloader_get_file_size	;wreg free
 29347  002752  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 29348  002756  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 29349  00275A  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 29350  00275E  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 29351                           
 29352                           ;api.c: 258: outBuffer[3] = (uint8_t) buffer_large;
 29353  002762  EE20 F003          	lfsr	2,3
 29354  002766  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29355  002768  26D9               	addwf	fsr2l,f,c
 29356  00276A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29357  00276C  22DA               	addwfc	fsr2h,f,c
 29358  00276E  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29359                           
 29360                           ;api.c: 259: outBuffer[4] = (uint8_t) (buffer_large>>8);
 29361  002772  EE20 F004          	lfsr	2,4
 29362  002776  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29363  002778  26D9               	addwf	fsr2l,f,c
 29364  00277A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29365  00277C  22DA               	addwfc	fsr2h,f,c
 29366  00277E  C00D  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+1,indf2
 29367                           
 29368                           ;api.c: 260: outBuffer[5] = (uint8_t) (buffer_large>>16);
 29369  002782  EE20 F005          	lfsr	2,5
 29370  002786  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29371  002788  26D9               	addwf	fsr2l,f,c
 29372  00278A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29373  00278C  22DA               	addwfc	fsr2h,f,c
 29374  00278E  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 29375                           
 29376                           ;api.c: 261: outBuffer[6] = (uint8_t) (buffer_large>>32);
 29377  002792  EE20 F006          	lfsr	2,6
 29378  002796  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29379  002798  26D9               	addwf	fsr2l,f,c
 29380  00279A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29381  00279C  22DA               	addwfc	fsr2h,f,c
 29382  00279E  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29383                           
 29384                           ;api.c: 263: buffer_small = bootloader_get_entries();
 29385  0027A2  EC2F  F03D         	call	_bootloader_get_entries	;wreg free
 29386  0027A6  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 29387  0027AA  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 29388                           
 29389                           ;api.c: 264: outBuffer[7] = (uint8_t) buffer_small;
 29390  0027AE  EE20 F007          	lfsr	2,7
 29391  0027B2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29392  0027B4  26D9               	addwf	fsr2l,f,c
 29393  0027B6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29394  0027B8  22DA               	addwfc	fsr2h,f,c
 29395  0027BA  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29396                           
 29397                           ;api.c: 265: outBuffer[8] = (uint8_t) (buffer_small>>8);
 29398  0027BE  EE20 F008          	lfsr	2,8
 29399  0027C2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29400  0027C4  26D9               	addwf	fsr2l,f,c
 29401  0027C6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29402  0027C8  22DA               	addwfc	fsr2h,f,c
 29403  0027CA  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29404  0027CC  6EDF               	movwf	indf2,c
 29405                           
 29406                           ;api.c: 267: buffer_small = bootloader_get_total_entries();
 29407  0027CE  EC1B  F03D         	call	_bootloader_get_total_entries	;wreg free
 29408  0027D2  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 29409  0027D6  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 29410                           
 29411                           ;api.c: 268: outBuffer[9] = (uint8_t) buffer_small;
 29412  0027DA  EE20 F009          	lfsr	2,9
 29413  0027DE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29414  0027E0  26D9               	addwf	fsr2l,f,c
 29415  0027E2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29416  0027E4  22DA               	addwfc	fsr2h,f,c
 29417  0027E6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29418                           
 29419                           ;api.c: 269: outBuffer[10] = (uint8_t) (buffer_small>>8);
 29420  0027EA  EE20 F00A          	lfsr	2,10
 29421  0027EE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29422  0027F0  26D9               	addwf	fsr2l,f,c
 29423  0027F2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29424  0027F4  22DA               	addwfc	fsr2h,f,c
 29425  0027F6  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29426  0027F8  6EDF               	movwf	indf2,c
 29427                           
 29428                           ;api.c: 271: outBuffer[11] = (uint8_t) bootloader_get_error();
 29429  0027FA  EE20 F00B          	lfsr	2,11
 29430  0027FE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29431  002800  26D9               	addwf	fsr2l,f,c
 29432  002802  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29433  002804  22DA               	addwfc	fsr2h,f,c
 29434  002806  EC56  F03D         	call	_bootloader_get_error	;wreg free
 29435  00280A  6EDF               	movwf	indf2,c
 29436                           
 29437                           ;api.c: 273: buffer_small = bootloader_get_flashPagesWritten();
 29438  00280C  EC2A  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
 29439  002810  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 29440  002814  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 29441                           
 29442                           ;api.c: 274: outBuffer[12] = (uint8_t) buffer_small;
 29443  002818  EE20 F00C          	lfsr	2,12
 29444  00281C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29445  00281E  26D9               	addwf	fsr2l,f,c
 29446  002820  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29447  002822  22DA               	addwfc	fsr2h,f,c
 29448  002824  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29449                           
 29450                           ;api.c: 275: outBuffer[13] = (uint8_t) (buffer_small>>8);
 29451  002828  EE20 F00D          	lfsr	2,13
 29452  00282C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29453  00282E  26D9               	addwf	fsr2l,f,c
 29454  002830  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29455  002832  22DA               	addwfc	fsr2h,f,c
 29456  002834  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29457  002836  6EDF               	movwf	indf2,c
 29458                           
 29459                           ;api.c: 278: buffer_small = bootloader_get_rec_dataLength();
 29460  002838  EC20  F03D         	call	_bootloader_get_rec_dataLength	;wreg free
 29461  00283C  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 29462  002840  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 29463                           
 29464                           ;api.c: 279: outBuffer[14] = (uint8_t) buffer_small;
 29465  002844  EE20 F00E          	lfsr	2,14
 29466  002848  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29467  00284A  26D9               	addwf	fsr2l,f,c
 29468  00284C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29469  00284E  22DA               	addwfc	fsr2h,f,c
 29470  002850  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29471                           
 29472                           ;api.c: 280: outBuffer[15] = (uint8_t) (buffer_small>>8);
 29473  002854  EE20 F00F          	lfsr	2,15
 29474  002858  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29475  00285A  26D9               	addwf	fsr2l,f,c
 29476  00285C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29477  00285E  22DA               	addwfc	fsr2h,f,c
 29478  002860  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29479  002862  6EDF               	movwf	indf2,c
 29480                           
 29481                           ;api.c: 282: buffer_small = bootloader_get_rec_address();
 29482  002864  EC25  F03D         	call	_bootloader_get_rec_address	;wreg free
 29483  002868  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 29484  00286C  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 29485                           
 29486                           ;api.c: 283: outBuffer[16] = (uint8_t) buffer_small;
 29487  002870  EE20 F010          	lfsr	2,16
 29488  002874  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29489  002876  26D9               	addwf	fsr2l,f,c
 29490  002878  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29491  00287A  22DA               	addwfc	fsr2h,f,c
 29492  00287C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29493                           
 29494                           ;api.c: 284: outBuffer[17] = (uint8_t) (buffer_small>>8);
 29495  002880  EE20 F011          	lfsr	2,17
 29496  002884  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29497  002886  26D9               	addwf	fsr2l,f,c
 29498  002888  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29499  00288A  22DA               	addwfc	fsr2h,f,c
 29500  00288C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29501  00288E  6EDF               	movwf	indf2,c
 29502                           
 29503                           ;api.c: 286: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 29504  002890  EE20 F012          	lfsr	2,18
 29505  002894  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29506  002896  26D9               	addwf	fsr2l,f,c
 29507  002898  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29508  00289A  22DA               	addwfc	fsr2h,f,c
 29509  00289C  EC4D  F03D         	call	_bootloader_get_rec_recordType	;wreg free
 29510  0028A0  6EDF               	movwf	indf2,c
 29511                           
 29512                           ;api.c: 287: outBuffer[19] = bootloader_get_rec_checksum();
 29513  0028A2  EE20 F013          	lfsr	2,19
 29514  0028A6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29515  0028A8  26D9               	addwf	fsr2l,f,c
 29516  0028AA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29517  0028AC  22DA               	addwfc	fsr2h,f,c
 29518  0028AE  EC53  F03D         	call	_bootloader_get_rec_checksum	;wreg free
 29519  0028B2  6EDF               	movwf	indf2,c
 29520                           
 29521                           ;api.c: 288: outBuffer[20] = bootloader_get_rec_checksumCheck();
 29522  0028B4  EE20 F014          	lfsr	2,20
 29523  0028B8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29524  0028BA  26D9               	addwf	fsr2l,f,c
 29525  0028BC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29526  0028BE  22DA               	addwfc	fsr2h,f,c
 29527  0028C0  EC50  F03D         	call	_bootloader_get_rec_checksumCheck	;wreg free
 29528  0028C4  6EDF               	movwf	indf2,c
 29529                           
 29530                           ;api.c: 290: data_length = (uint8_t) bootloader_get_rec_dataLength();
 29531  0028C6  EC20  F03D         	call	_bootloader_get_rec_dataLength	;wreg free
 29532  0028CA  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 29533  0028CC  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29534                           
 29535                           ;api.c: 291: if(data_length>43)
 29536  0028CE  0E2B               	movlw	43
 29537  0028D0  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 29538  0028D2  D002               	goto	l2437
 29539                           
 29540                           ;api.c: 292: {;api.c: 294: data_length = 43;
 29541  0028D4  0E2B               	movlw	43
 29542  0028D6  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29543  0028D8                     l2437:
 29544                           
 29545                           ;api.c: 295: };api.c: 296: for(cntr=0; cntr<data_length; ++cntr)
 29546  0028D8  0E00               	movlw	0
 29547  0028DA  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 29548  0028DC  D014               	goto	l2438
 29549  0028DE                     
 29550                           ;api.c: 297: {;api.c: 298: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 29551  0028DE  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29552  0028E0  EC9D  F03C         	call	_bootloader_get_rec_data
 29553  0028E4  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 29554  0028E6  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29555  0028E8  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 29556  0028EA  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 29557  0028EC  0E15               	movlw	21
 29558  0028EE  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 29559  0028F0  0E00               	movlw	0
 29560  0028F2  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 29561  0028F4  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 29562  0028F6  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29563  0028F8  6ED9               	movwf	fsr2l,c
 29564  0028FA  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 29565  0028FC  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29566  0028FE  6EDA               	movwf	fsr2h,c
 29567  002900  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 29568  002904  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 29569  002906                     l2438:
 29570  002906  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 29571  002908  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 29572  00290A  B0D8               	btfsc	status,0,c
 29573  00290C  0012               	return	
 29574  00290E  D7E7               	goto	l2439
 29575  002910                     __end_of__fill_buffer_get_bootloader_details:
 29576                           	opt stack 0
 29577                           tosu	equ	0xFFF
 29578                           tosh	equ	0xFFE
 29579                           tosl	equ	0xFFD
 29580                           pclath	equ	0xFFA
 29581                           tblptru	equ	0xFF8
 29582                           tblptrh	equ	0xFF7
 29583                           tblptrl	equ	0xFF6
 29584                           tablat	equ	0xFF5
 29585                           prodh	equ	0xFF4
 29586                           prodl	equ	0xFF3
 29587                           intcon	equ	0xFF2
 29588                           intcon2	equ	0xFF1
 29589                           intcon3	equ	0xFF0
 29590                           indf0	equ	0xFEF
 29591                           postinc0	equ	0xFEE
 29592                           fsr0h	equ	0xFEA
 29593                           fsr0l	equ	0xFE9
 29594                           wreg	equ	0xFE8
 29595                           indf1	equ	0xFE7
 29596                           postdec1	equ	0xFE5
 29597                           plusw1	equ	0xFE3
 29598                           fsr1h	equ	0xFE2
 29599                           fsr1l	equ	0xFE1
 29600                           indf2	equ	0xFDF
 29601                           postinc2	equ	0xFDE
 29602                           postdec2	equ	0xFDD
 29603                           plusw2	equ	0xFDB
 29604                           fsr2h	equ	0xFDA
 29605                           fsr2l	equ	0xFD9
 29606                           status	equ	0xFD8
 29607                           
 29608 ;; *************** function _bootloader_get_total_entries *****************
 29609 ;; Defined at:
 29610 ;;		line 432 in file "bootloader.c"
 29611 ;; Parameters:    Size  Location     Type
 29612 ;;		None
 29613 ;; Auto vars:     Size  Location     Type
 29614 ;;		None
 29615 ;; Return value:  Size  Location     Type
 29616 ;;                  2    0[COMRAM] unsigned int 
 29617 ;; Registers used:
 29618 ;;		None
 29619 ;; Tracked objects:
 29620 ;;		On entry : 0/0
 29621 ;;		On exit  : 0/0
 29622 ;;		Unchanged: 0/0
 29623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29628 ;;Total ram usage:        2 bytes
 29629 ;; Hardware stack levels used:    1
 29630 ;; This function calls:
 29631 ;;		Nothing
 29632 ;; This function is called by:
 29633 ;;		__display_checked
 29634 ;;		__display_programming
 29635 ;;		__fill_buffer_get_bootloader_details
 29636 ;; This function uses a non-reentrant model
 29637 ;;
 29638                           
 29639                           	psect	text138
 29640  007A36                     __ptext138:
 29641                           	opt stack 0
 29642  007A36                     _bootloader_get_total_entries:
 29643                           	opt stack 28
 29644                           
 29645                           ;bootloader.c: 434: return total_hex_file_entries;
 29646                           
 29647                           ;incstack = 0
 29648  007A36  C162  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 29649  007A3A  C163  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 29650  007A3E  0012               	return		;funcret
 29651  007A40                     __end_of_bootloader_get_total_entries:
 29652                           	opt stack 0
 29653                           tosu	equ	0xFFF
 29654                           tosh	equ	0xFFE
 29655                           tosl	equ	0xFFD
 29656                           pclath	equ	0xFFA
 29657                           tblptru	equ	0xFF8
 29658                           tblptrh	equ	0xFF7
 29659                           tblptrl	equ	0xFF6
 29660                           tablat	equ	0xFF5
 29661                           prodh	equ	0xFF4
 29662                           prodl	equ	0xFF3
 29663                           intcon	equ	0xFF2
 29664                           intcon2	equ	0xFF1
 29665                           intcon3	equ	0xFF0
 29666                           indf0	equ	0xFEF
 29667                           postinc0	equ	0xFEE
 29668                           fsr0h	equ	0xFEA
 29669                           fsr0l	equ	0xFE9
 29670                           wreg	equ	0xFE8
 29671                           indf1	equ	0xFE7
 29672                           postdec1	equ	0xFE5
 29673                           plusw1	equ	0xFE3
 29674                           fsr1h	equ	0xFE2
 29675                           fsr1l	equ	0xFE1
 29676                           indf2	equ	0xFDF
 29677                           postinc2	equ	0xFDE
 29678                           postdec2	equ	0xFDD
 29679                           plusw2	equ	0xFDB
 29680                           fsr2h	equ	0xFDA
 29681                           fsr2l	equ	0xFD9
 29682                           status	equ	0xFD8
 29683                           
 29684 ;; *************** function _bootloader_get_rec_recordType *****************
 29685 ;; Defined at:
 29686 ;;		line 453 in file "bootloader.c"
 29687 ;; Parameters:    Size  Location     Type
 29688 ;;		None
 29689 ;; Auto vars:     Size  Location     Type
 29690 ;;		None
 29691 ;; Return value:  Size  Location     Type
 29692 ;;                  1    wreg      enum E6730
 29693 ;; Registers used:
 29694 ;;		wreg, status,2
 29695 ;; Tracked objects:
 29696 ;;		On entry : 0/0
 29697 ;;		On exit  : 0/0
 29698 ;;		Unchanged: 0/0
 29699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29704 ;;Total ram usage:        0 bytes
 29705 ;; Hardware stack levels used:    1
 29706 ;; This function calls:
 29707 ;;		Nothing
 29708 ;; This function is called by:
 29709 ;;		__fill_buffer_get_bootloader_details
 29710 ;; This function uses a non-reentrant model
 29711 ;;
 29712                           
 29713                           	psect	text139
 29714  007A9A                     __ptext139:
 29715                           	opt stack 0
 29716  007A9A                     _bootloader_get_rec_recordType:
 29717                           	opt stack 27
 29718                           
 29719                           ;bootloader.c: 455: return hex_file_entry.recordType;
 29720                           
 29721                           ;incstack = 0
 29722  007A9A  0101               	movlb	1	; () banked
 29723  007A9C  51BC               	movf	(_hex_file_entry+4)& (0+255),w,b
 29724  007A9E  0012               	return	
 29725  007AA0                     __end_of_bootloader_get_rec_recordType:
 29726                           	opt stack 0
 29727                           tosu	equ	0xFFF
 29728                           tosh	equ	0xFFE
 29729                           tosl	equ	0xFFD
 29730                           pclath	equ	0xFFA
 29731                           tblptru	equ	0xFF8
 29732                           tblptrh	equ	0xFF7
 29733                           tblptrl	equ	0xFF6
 29734                           tablat	equ	0xFF5
 29735                           prodh	equ	0xFF4
 29736                           prodl	equ	0xFF3
 29737                           intcon	equ	0xFF2
 29738                           intcon2	equ	0xFF1
 29739                           intcon3	equ	0xFF0
 29740                           indf0	equ	0xFEF
 29741                           postinc0	equ	0xFEE
 29742                           fsr0h	equ	0xFEA
 29743                           fsr0l	equ	0xFE9
 29744                           wreg	equ	0xFE8
 29745                           indf1	equ	0xFE7
 29746                           postdec1	equ	0xFE5
 29747                           plusw1	equ	0xFE3
 29748                           fsr1h	equ	0xFE2
 29749                           fsr1l	equ	0xFE1
 29750                           indf2	equ	0xFDF
 29751                           postinc2	equ	0xFDE
 29752                           postdec2	equ	0xFDD
 29753                           plusw2	equ	0xFDB
 29754                           fsr2h	equ	0xFDA
 29755                           fsr2l	equ	0xFD9
 29756                           status	equ	0xFD8
 29757                           
 29758 ;; *************** function _bootloader_get_rec_dataLength *****************
 29759 ;; Defined at:
 29760 ;;		line 442 in file "bootloader.c"
 29761 ;; Parameters:    Size  Location     Type
 29762 ;;		None
 29763 ;; Auto vars:     Size  Location     Type
 29764 ;;		None
 29765 ;; Return value:  Size  Location     Type
 29766 ;;                  2    0[COMRAM] unsigned int 
 29767 ;; Registers used:
 29768 ;;		None
 29769 ;; Tracked objects:
 29770 ;;		On entry : 0/0
 29771 ;;		On exit  : 0/0
 29772 ;;		Unchanged: 0/0
 29773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29778 ;;Total ram usage:        2 bytes
 29779 ;; Hardware stack levels used:    1
 29780 ;; This function calls:
 29781 ;;		Nothing
 29782 ;; This function is called by:
 29783 ;;		__fill_buffer_get_bootloader_details
 29784 ;; This function uses a non-reentrant model
 29785 ;;
 29786                           
 29787                           	psect	text140
 29788  007A40                     __ptext140:
 29789                           	opt stack 0
 29790  007A40                     _bootloader_get_rec_dataLength:
 29791                           	opt stack 27
 29792                           
 29793                           ;bootloader.c: 444: return hex_file_entry.dataLength;
 29794                           
 29795                           ; BSR set to: 1
 29796                           ;incstack = 0
 29797  007A40  C1B8  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 29798  007A44  C1B9  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 29799  007A48  0012               	return		;funcret
 29800  007A4A                     __end_of_bootloader_get_rec_dataLength:
 29801                           	opt stack 0
 29802                           tosu	equ	0xFFF
 29803                           tosh	equ	0xFFE
 29804                           tosl	equ	0xFFD
 29805                           pclath	equ	0xFFA
 29806                           tblptru	equ	0xFF8
 29807                           tblptrh	equ	0xFF7
 29808                           tblptrl	equ	0xFF6
 29809                           tablat	equ	0xFF5
 29810                           prodh	equ	0xFF4
 29811                           prodl	equ	0xFF3
 29812                           intcon	equ	0xFF2
 29813                           intcon2	equ	0xFF1
 29814                           intcon3	equ	0xFF0
 29815                           indf0	equ	0xFEF
 29816                           postinc0	equ	0xFEE
 29817                           fsr0h	equ	0xFEA
 29818                           fsr0l	equ	0xFE9
 29819                           wreg	equ	0xFE8
 29820                           indf1	equ	0xFE7
 29821                           postdec1	equ	0xFE5
 29822                           plusw1	equ	0xFE3
 29823                           fsr1h	equ	0xFE2
 29824                           fsr1l	equ	0xFE1
 29825                           indf2	equ	0xFDF
 29826                           postinc2	equ	0xFDE
 29827                           postdec2	equ	0xFDD
 29828                           plusw2	equ	0xFDB
 29829                           fsr2h	equ	0xFDA
 29830                           fsr2l	equ	0xFD9
 29831                           status	equ	0xFD8
 29832                           
 29833 ;; *************** function _bootloader_get_rec_data *****************
 29834 ;; Defined at:
 29835 ;;		line 458 in file "bootloader.c"
 29836 ;; Parameters:    Size  Location     Type
 29837 ;;  index           1    wreg     unsigned char 
 29838 ;; Auto vars:     Size  Location     Type
 29839 ;;  index           1    0[COMRAM] unsigned char 
 29840 ;; Return value:  Size  Location     Type
 29841 ;;                  1    wreg      unsigned char 
 29842 ;; Registers used:
 29843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29844 ;; Tracked objects:
 29845 ;;		On entry : 0/0
 29846 ;;		On exit  : 0/0
 29847 ;;		Unchanged: 0/0
 29848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29853 ;;Total ram usage:        1 bytes
 29854 ;; Hardware stack levels used:    1
 29855 ;; This function calls:
 29856 ;;		Nothing
 29857 ;; This function is called by:
 29858 ;;		__fill_buffer_get_bootloader_details
 29859 ;; This function uses a non-reentrant model
 29860 ;;
 29861                           
 29862                           	psect	text141
 29863  00793A                     __ptext141:
 29864                           	opt stack 0
 29865  00793A                     _bootloader_get_rec_data:
 29866                           	opt stack 27
 29867                           
 29868                           ;incstack = 0
 29869                           ;bootloader_get_rec_data@index stored from wreg
 29870  00793A  6E01               	movwf	bootloader_get_rec_data@index,c
 29871                           
 29872                           ;bootloader.c: 460: return hex_file_entry.data[index];
 29873  00793C  5001               	movf	bootloader_get_rec_data@index,w,c
 29874  00793E  0D01               	mullw	1
 29875  007940  0EBD               	movlw	low (_hex_file_entry+5)
 29876  007942  24F3               	addwf	prodl,w,c
 29877  007944  6ED9               	movwf	fsr2l,c
 29878  007946  0E01               	movlw	high (_hex_file_entry+5)
 29879  007948  20F4               	addwfc	prodh,w,c
 29880  00794A  6EDA               	movwf	fsr2h,c
 29881  00794C  50DF               	movf	indf2,w,c
 29882  00794E  0012               	return	
 29883  007950                     __end_of_bootloader_get_rec_data:
 29884                           	opt stack 0
 29885                           tosu	equ	0xFFF
 29886                           tosh	equ	0xFFE
 29887                           tosl	equ	0xFFD
 29888                           pclath	equ	0xFFA
 29889                           tblptru	equ	0xFF8
 29890                           tblptrh	equ	0xFF7
 29891                           tblptrl	equ	0xFF6
 29892                           tablat	equ	0xFF5
 29893                           prodh	equ	0xFF4
 29894                           prodl	equ	0xFF3
 29895                           intcon	equ	0xFF2
 29896                           intcon2	equ	0xFF1
 29897                           intcon3	equ	0xFF0
 29898                           indf0	equ	0xFEF
 29899                           postinc0	equ	0xFEE
 29900                           fsr0h	equ	0xFEA
 29901                           fsr0l	equ	0xFE9
 29902                           wreg	equ	0xFE8
 29903                           indf1	equ	0xFE7
 29904                           postdec1	equ	0xFE5
 29905                           plusw1	equ	0xFE3
 29906                           fsr1h	equ	0xFE2
 29907                           fsr1l	equ	0xFE1
 29908                           indf2	equ	0xFDF
 29909                           postinc2	equ	0xFDE
 29910                           postdec2	equ	0xFDD
 29911                           plusw2	equ	0xFDB
 29912                           fsr2h	equ	0xFDA
 29913                           fsr2l	equ	0xFD9
 29914                           status	equ	0xFD8
 29915                           
 29916 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 29917 ;; Defined at:
 29918 ;;		line 468 in file "bootloader.c"
 29919 ;; Parameters:    Size  Location     Type
 29920 ;;		None
 29921 ;; Auto vars:     Size  Location     Type
 29922 ;;		None
 29923 ;; Return value:  Size  Location     Type
 29924 ;;                  1    wreg      unsigned char 
 29925 ;; Registers used:
 29926 ;;		wreg, status,2
 29927 ;; Tracked objects:
 29928 ;;		On entry : 0/0
 29929 ;;		On exit  : 0/0
 29930 ;;		Unchanged: 0/0
 29931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29936 ;;Total ram usage:        0 bytes
 29937 ;; Hardware stack levels used:    1
 29938 ;; This function calls:
 29939 ;;		Nothing
 29940 ;; This function is called by:
 29941 ;;		__fill_buffer_get_bootloader_details
 29942 ;; This function uses a non-reentrant model
 29943 ;;
 29944                           
 29945                           	psect	text142
 29946  007AA0                     __ptext142:
 29947                           	opt stack 0
 29948  007AA0                     _bootloader_get_rec_checksumCheck:
 29949                           	opt stack 27
 29950                           
 29951                           ;bootloader.c: 470: return hex_file_entry.checksumCheck;
 29952                           
 29953                           ;incstack = 0
 29954  007AA0  0101               	movlb	1	; () banked
 29955  007AA2  51CE               	movf	(_hex_file_entry+22)& (0+255),w,b
 29956  007AA4  0012               	return	
 29957  007AA6                     __end_of_bootloader_get_rec_checksumCheck:
 29958                           	opt stack 0
 29959                           tosu	equ	0xFFF
 29960                           tosh	equ	0xFFE
 29961                           tosl	equ	0xFFD
 29962                           pclath	equ	0xFFA
 29963                           tblptru	equ	0xFF8
 29964                           tblptrh	equ	0xFF7
 29965                           tblptrl	equ	0xFF6
 29966                           tablat	equ	0xFF5
 29967                           prodh	equ	0xFF4
 29968                           prodl	equ	0xFF3
 29969                           intcon	equ	0xFF2
 29970                           intcon2	equ	0xFF1
 29971                           intcon3	equ	0xFF0
 29972                           indf0	equ	0xFEF
 29973                           postinc0	equ	0xFEE
 29974                           fsr0h	equ	0xFEA
 29975                           fsr0l	equ	0xFE9
 29976                           wreg	equ	0xFE8
 29977                           indf1	equ	0xFE7
 29978                           postdec1	equ	0xFE5
 29979                           plusw1	equ	0xFE3
 29980                           fsr1h	equ	0xFE2
 29981                           fsr1l	equ	0xFE1
 29982                           indf2	equ	0xFDF
 29983                           postinc2	equ	0xFDE
 29984                           postdec2	equ	0xFDD
 29985                           plusw2	equ	0xFDB
 29986                           fsr2h	equ	0xFDA
 29987                           fsr2l	equ	0xFD9
 29988                           status	equ	0xFD8
 29989                           
 29990 ;; *************** function _bootloader_get_rec_checksum *****************
 29991 ;; Defined at:
 29992 ;;		line 463 in file "bootloader.c"
 29993 ;; Parameters:    Size  Location     Type
 29994 ;;		None
 29995 ;; Auto vars:     Size  Location     Type
 29996 ;;		None
 29997 ;; Return value:  Size  Location     Type
 29998 ;;                  1    wreg      unsigned char 
 29999 ;; Registers used:
 30000 ;;		wreg, status,2
 30001 ;; Tracked objects:
 30002 ;;		On entry : 0/0
 30003 ;;		On exit  : 0/0
 30004 ;;		Unchanged: 0/0
 30005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30010 ;;Total ram usage:        0 bytes
 30011 ;; Hardware stack levels used:    1
 30012 ;; This function calls:
 30013 ;;		Nothing
 30014 ;; This function is called by:
 30015 ;;		__fill_buffer_get_bootloader_details
 30016 ;; This function uses a non-reentrant model
 30017 ;;
 30018                           
 30019                           	psect	text143
 30020  007AA6                     __ptext143:
 30021                           	opt stack 0
 30022  007AA6                     _bootloader_get_rec_checksum:
 30023                           	opt stack 27
 30024                           
 30025                           ;bootloader.c: 465: return hex_file_entry.checksum;
 30026                           
 30027                           ; BSR set to: 1
 30028                           ;incstack = 0
 30029  007AA6  0101               	movlb	1	; () banked
 30030  007AA8  51CD               	movf	(_hex_file_entry+21)& (0+255),w,b
 30031  007AAA  0012               	return	
 30032  007AAC                     __end_of_bootloader_get_rec_checksum:
 30033                           	opt stack 0
 30034                           tosu	equ	0xFFF
 30035                           tosh	equ	0xFFE
 30036                           tosl	equ	0xFFD
 30037                           pclath	equ	0xFFA
 30038                           tblptru	equ	0xFF8
 30039                           tblptrh	equ	0xFF7
 30040                           tblptrl	equ	0xFF6
 30041                           tablat	equ	0xFF5
 30042                           prodh	equ	0xFF4
 30043                           prodl	equ	0xFF3
 30044                           intcon	equ	0xFF2
 30045                           intcon2	equ	0xFF1
 30046                           intcon3	equ	0xFF0
 30047                           indf0	equ	0xFEF
 30048                           postinc0	equ	0xFEE
 30049                           fsr0h	equ	0xFEA
 30050                           fsr0l	equ	0xFE9
 30051                           wreg	equ	0xFE8
 30052                           indf1	equ	0xFE7
 30053                           postdec1	equ	0xFE5
 30054                           plusw1	equ	0xFE3
 30055                           fsr1h	equ	0xFE2
 30056                           fsr1l	equ	0xFE1
 30057                           indf2	equ	0xFDF
 30058                           postinc2	equ	0xFDE
 30059                           postdec2	equ	0xFDD
 30060                           plusw2	equ	0xFDB
 30061                           fsr2h	equ	0xFDA
 30062                           fsr2l	equ	0xFD9
 30063                           status	equ	0xFD8
 30064                           
 30065 ;; *************** function _bootloader_get_rec_address *****************
 30066 ;; Defined at:
 30067 ;;		line 447 in file "bootloader.c"
 30068 ;; Parameters:    Size  Location     Type
 30069 ;;		None
 30070 ;; Auto vars:     Size  Location     Type
 30071 ;;		None
 30072 ;; Return value:  Size  Location     Type
 30073 ;;                  2    0[COMRAM] unsigned int 
 30074 ;; Registers used:
 30075 ;;		None
 30076 ;; Tracked objects:
 30077 ;;		On entry : 0/0
 30078 ;;		On exit  : 0/0
 30079 ;;		Unchanged: 0/0
 30080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30085 ;;Total ram usage:        2 bytes
 30086 ;; Hardware stack levels used:    1
 30087 ;; This function calls:
 30088 ;;		Nothing
 30089 ;; This function is called by:
 30090 ;;		__display_failed
 30091 ;;		__fill_buffer_get_bootloader_details
 30092 ;; This function uses a non-reentrant model
 30093 ;;
 30094                           
 30095                           	psect	text144
 30096  007A4A                     __ptext144:
 30097                           	opt stack 0
 30098  007A4A                     _bootloader_get_rec_address:
 30099                           	opt stack 28
 30100                           
 30101                           ;bootloader.c: 450: return hex_file_entry.address;
 30102                           
 30103                           ; BSR set to: 1
 30104                           ;incstack = 0
 30105  007A4A  C1BA  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30106  007A4E  C1BB  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30107  007A52  0012               	return		;funcret
 30108  007A54                     __end_of_bootloader_get_rec_address:
 30109                           	opt stack 0
 30110                           tosu	equ	0xFFF
 30111                           tosh	equ	0xFFE
 30112                           tosl	equ	0xFFD
 30113                           pclath	equ	0xFFA
 30114                           tblptru	equ	0xFF8
 30115                           tblptrh	equ	0xFF7
 30116                           tblptrl	equ	0xFF6
 30117                           tablat	equ	0xFF5
 30118                           prodh	equ	0xFF4
 30119                           prodl	equ	0xFF3
 30120                           intcon	equ	0xFF2
 30121                           intcon2	equ	0xFF1
 30122                           intcon3	equ	0xFF0
 30123                           indf0	equ	0xFEF
 30124                           postinc0	equ	0xFEE
 30125                           fsr0h	equ	0xFEA
 30126                           fsr0l	equ	0xFE9
 30127                           wreg	equ	0xFE8
 30128                           indf1	equ	0xFE7
 30129                           postdec1	equ	0xFE5
 30130                           plusw1	equ	0xFE3
 30131                           fsr1h	equ	0xFE2
 30132                           fsr1l	equ	0xFE1
 30133                           indf2	equ	0xFDF
 30134                           postinc2	equ	0xFDE
 30135                           postdec2	equ	0xFDD
 30136                           plusw2	equ	0xFDB
 30137                           fsr2h	equ	0xFDA
 30138                           fsr2l	equ	0xFD9
 30139                           status	equ	0xFD8
 30140                           
 30141 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30142 ;; Defined at:
 30143 ;;		line 473 in file "bootloader.c"
 30144 ;; Parameters:    Size  Location     Type
 30145 ;;		None
 30146 ;; Auto vars:     Size  Location     Type
 30147 ;;		None
 30148 ;; Return value:  Size  Location     Type
 30149 ;;                  2    0[COMRAM] unsigned int 
 30150 ;; Registers used:
 30151 ;;		None
 30152 ;; Tracked objects:
 30153 ;;		On entry : 0/0
 30154 ;;		On exit  : 0/0
 30155 ;;		Unchanged: 0/0
 30156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30161 ;;Total ram usage:        2 bytes
 30162 ;; Hardware stack levels used:    1
 30163 ;; This function calls:
 30164 ;;		Nothing
 30165 ;; This function is called by:
 30166 ;;		__display_programming
 30167 ;;		__display_done
 30168 ;;		__fill_buffer_get_bootloader_details
 30169 ;; This function uses a non-reentrant model
 30170 ;;
 30171                           
 30172                           	psect	text145
 30173  007A54                     __ptext145:
 30174                           	opt stack 0
 30175  007A54                     _bootloader_get_flashPagesWritten:
 30176                           	opt stack 28
 30177                           
 30178                           ;bootloader.c: 475: return flash_pages_written;
 30179                           
 30180                           ;incstack = 0
 30181  007A54  C160  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30182  007A58  C161  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30183  007A5C  0012               	return		;funcret
 30184  007A5E                     __end_of_bootloader_get_flashPagesWritten:
 30185                           	opt stack 0
 30186                           tosu	equ	0xFFF
 30187                           tosh	equ	0xFFE
 30188                           tosl	equ	0xFFD
 30189                           pclath	equ	0xFFA
 30190                           tblptru	equ	0xFF8
 30191                           tblptrh	equ	0xFF7
 30192                           tblptrl	equ	0xFF6
 30193                           tablat	equ	0xFF5
 30194                           prodh	equ	0xFF4
 30195                           prodl	equ	0xFF3
 30196                           intcon	equ	0xFF2
 30197                           intcon2	equ	0xFF1
 30198                           intcon3	equ	0xFF0
 30199                           indf0	equ	0xFEF
 30200                           postinc0	equ	0xFEE
 30201                           fsr0h	equ	0xFEA
 30202                           fsr0l	equ	0xFE9
 30203                           wreg	equ	0xFE8
 30204                           indf1	equ	0xFE7
 30205                           postdec1	equ	0xFE5
 30206                           plusw1	equ	0xFE3
 30207                           fsr1h	equ	0xFE2
 30208                           fsr1l	equ	0xFE1
 30209                           indf2	equ	0xFDF
 30210                           postinc2	equ	0xFDE
 30211                           postdec2	equ	0xFDD
 30212                           plusw2	equ	0xFDB
 30213                           fsr2h	equ	0xFDA
 30214                           fsr2l	equ	0xFD9
 30215                           status	equ	0xFD8
 30216                           
 30217 ;; *************** function _bootloader_get_file_size *****************
 30218 ;; Defined at:
 30219 ;;		line 422 in file "bootloader.c"
 30220 ;; Parameters:    Size  Location     Type
 30221 ;;		None
 30222 ;; Auto vars:     Size  Location     Type
 30223 ;;		None
 30224 ;; Return value:  Size  Location     Type
 30225 ;;                  4    0[COMRAM] unsigned long 
 30226 ;; Registers used:
 30227 ;;		None
 30228 ;; Tracked objects:
 30229 ;;		On entry : 0/0
 30230 ;;		On exit  : 0/0
 30231 ;;		Unchanged: 0/0
 30232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30233 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30237 ;;Total ram usage:        4 bytes
 30238 ;; Hardware stack levels used:    1
 30239 ;; This function calls:
 30240 ;;		Nothing
 30241 ;; This function is called by:
 30242 ;;		__display_found
 30243 ;;		__fill_buffer_get_bootloader_details
 30244 ;; This function uses a non-reentrant model
 30245 ;;
 30246                           
 30247                           	psect	text146
 30248  00799A                     __ptext146:
 30249                           	opt stack 0
 30250  00799A                     _bootloader_get_file_size:
 30251                           	opt stack 28
 30252                           
 30253                           ;bootloader.c: 424: return hex_file_size;
 30254                           
 30255                           ;incstack = 0
 30256  00799A  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 30257  00799E  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 30258  0079A2  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 30259  0079A6  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 30260  0079AA  0012               	return		;funcret
 30261  0079AC                     __end_of_bootloader_get_file_size:
 30262                           	opt stack 0
 30263                           tosu	equ	0xFFF
 30264                           tosh	equ	0xFFE
 30265                           tosl	equ	0xFFD
 30266                           pclath	equ	0xFFA
 30267                           tblptru	equ	0xFF8
 30268                           tblptrh	equ	0xFF7
 30269                           tblptrl	equ	0xFF6
 30270                           tablat	equ	0xFF5
 30271                           prodh	equ	0xFF4
 30272                           prodl	equ	0xFF3
 30273                           intcon	equ	0xFF2
 30274                           intcon2	equ	0xFF1
 30275                           intcon3	equ	0xFF0
 30276                           indf0	equ	0xFEF
 30277                           postinc0	equ	0xFEE
 30278                           fsr0h	equ	0xFEA
 30279                           fsr0l	equ	0xFE9
 30280                           wreg	equ	0xFE8
 30281                           indf1	equ	0xFE7
 30282                           postdec1	equ	0xFE5
 30283                           plusw1	equ	0xFE3
 30284                           fsr1h	equ	0xFE2
 30285                           fsr1l	equ	0xFE1
 30286                           indf2	equ	0xFDF
 30287                           postinc2	equ	0xFDE
 30288                           postdec2	equ	0xFDD
 30289                           plusw2	equ	0xFDB
 30290                           fsr2h	equ	0xFDA
 30291                           fsr2l	equ	0xFD9
 30292                           status	equ	0xFD8
 30293                           
 30294 ;; *************** function _bootloader_get_error *****************
 30295 ;; Defined at:
 30296 ;;		line 437 in file "bootloader.c"
 30297 ;; Parameters:    Size  Location     Type
 30298 ;;		None
 30299 ;; Auto vars:     Size  Location     Type
 30300 ;;		None
 30301 ;; Return value:  Size  Location     Type
 30302 ;;                  1    wreg      enum E6972
 30303 ;; Registers used:
 30304 ;;		wreg, status,2
 30305 ;; Tracked objects:
 30306 ;;		On entry : 0/0
 30307 ;;		On exit  : 0/0
 30308 ;;		Unchanged: 0/0
 30309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30314 ;;Total ram usage:        0 bytes
 30315 ;; Hardware stack levels used:    1
 30316 ;; This function calls:
 30317 ;;		Nothing
 30318 ;; This function is called by:
 30319 ;;		__display_failed
 30320 ;;		__fill_buffer_get_bootloader_details
 30321 ;; This function uses a non-reentrant model
 30322 ;;
 30323                           
 30324                           	psect	text147
 30325  007AAC                     __ptext147:
 30326                           	opt stack 0
 30327  007AAC                     _bootloader_get_error:
 30328                           	opt stack 28
 30329                           
 30330                           ;bootloader.c: 439: return last_error;
 30331                           
 30332                           ;incstack = 0
 30333  007AAC  0100               	movlb	0	; () banked
 30334  007AAE  519D               	movf	_last_error& (0+255),w,b
 30335  007AB0  0012               	return	
 30336  007AB2                     __end_of_bootloader_get_error:
 30337                           	opt stack 0
 30338                           tosu	equ	0xFFF
 30339                           tosh	equ	0xFFE
 30340                           tosl	equ	0xFFD
 30341                           pclath	equ	0xFFA
 30342                           tblptru	equ	0xFF8
 30343                           tblptrh	equ	0xFF7
 30344                           tblptrl	equ	0xFF6
 30345                           tablat	equ	0xFF5
 30346                           prodh	equ	0xFF4
 30347                           prodl	equ	0xFF3
 30348                           intcon	equ	0xFF2
 30349                           intcon2	equ	0xFF1
 30350                           intcon3	equ	0xFF0
 30351                           indf0	equ	0xFEF
 30352                           postinc0	equ	0xFEE
 30353                           fsr0h	equ	0xFEA
 30354                           fsr0l	equ	0xFE9
 30355                           wreg	equ	0xFE8
 30356                           indf1	equ	0xFE7
 30357                           postdec1	equ	0xFE5
 30358                           plusw1	equ	0xFE3
 30359                           fsr1h	equ	0xFE2
 30360                           fsr1l	equ	0xFE1
 30361                           indf2	equ	0xFDF
 30362                           postinc2	equ	0xFDE
 30363                           postdec2	equ	0xFDD
 30364                           plusw2	equ	0xFDB
 30365                           fsr2h	equ	0xFDA
 30366                           fsr2l	equ	0xFD9
 30367                           status	equ	0xFD8
 30368                           
 30369 ;; *************** function _bootloader_get_entries *****************
 30370 ;; Defined at:
 30371 ;;		line 427 in file "bootloader.c"
 30372 ;; Parameters:    Size  Location     Type
 30373 ;;		None
 30374 ;; Auto vars:     Size  Location     Type
 30375 ;;		None
 30376 ;; Return value:  Size  Location     Type
 30377 ;;                  2    0[COMRAM] unsigned int 
 30378 ;; Registers used:
 30379 ;;		None
 30380 ;; Tracked objects:
 30381 ;;		On entry : 0/0
 30382 ;;		On exit  : 0/0
 30383 ;;		Unchanged: 0/0
 30384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30389 ;;Total ram usage:        2 bytes
 30390 ;; Hardware stack levels used:    1
 30391 ;; This function calls:
 30392 ;;		Nothing
 30393 ;; This function is called by:
 30394 ;;		__display_verify
 30395 ;;		__display_failed
 30396 ;;		__display_programming
 30397 ;;		__fill_buffer_get_bootloader_details
 30398 ;; This function uses a non-reentrant model
 30399 ;;
 30400                           
 30401                           	psect	text148
 30402  007A5E                     __ptext148:
 30403                           	opt stack 0
 30404  007A5E                     _bootloader_get_entries:
 30405                           	opt stack 28
 30406                           
 30407                           ;bootloader.c: 429: return hex_file_entries;
 30408                           
 30409                           ; BSR set to: 0
 30410                           ;incstack = 0
 30411  007A5E  C084  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30412  007A62  C085  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30413  007A66  0012               	return		;funcret
 30414  007A68                     __end_of_bootloader_get_entries:
 30415                           	opt stack 0
 30416                           tosu	equ	0xFFF
 30417                           tosh	equ	0xFFE
 30418                           tosl	equ	0xFFD
 30419                           pclath	equ	0xFFA
 30420                           tblptru	equ	0xFF8
 30421                           tblptrh	equ	0xFF7
 30422                           tblptrl	equ	0xFF6
 30423                           tablat	equ	0xFF5
 30424                           prodh	equ	0xFF4
 30425                           prodl	equ	0xFF3
 30426                           intcon	equ	0xFF2
 30427                           intcon2	equ	0xFF1
 30428                           intcon3	equ	0xFF0
 30429                           indf0	equ	0xFEF
 30430                           postinc0	equ	0xFEE
 30431                           fsr0h	equ	0xFEA
 30432                           fsr0l	equ	0xFE9
 30433                           wreg	equ	0xFE8
 30434                           indf1	equ	0xFE7
 30435                           postdec1	equ	0xFE5
 30436                           plusw1	equ	0xFE3
 30437                           fsr1h	equ	0xFE2
 30438                           fsr1l	equ	0xFE1
 30439                           indf2	equ	0xFDF
 30440                           postinc2	equ	0xFDE
 30441                           postdec2	equ	0xFDD
 30442                           plusw2	equ	0xFDB
 30443                           fsr2h	equ	0xFDA
 30444                           fsr2l	equ	0xFD9
 30445                           status	equ	0xFD8
 30446                           
 30447 ;; *************** function __fill_buffer_find_file *****************
 30448 ;; Defined at:
 30449 ;;		line 346 in file "api.c"
 30450 ;; Parameters:    Size  Location     Type
 30451 ;;  inBuffer        2   59[COMRAM] PTR unsigned char 
 30452 ;;		 -> RAM(3759), 
 30453 ;;  outBuffer       2   61[COMRAM] PTR unsigned char 
 30454 ;;		 -> RAM(3759), 
 30455 ;; Auto vars:     Size  Location     Type
 30456 ;;  cntr            1   67[COMRAM] unsigned char 
 30457 ;; Return value:  Size  Location     Type
 30458 ;;                  1    wreg      void 
 30459 ;; Registers used:
 30460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30461 ;; Tracked objects:
 30462 ;;		On entry : 0/0
 30463 ;;		On exit  : 0/0
 30464 ;;		Unchanged: 0/0
 30465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30469 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30470 ;;Total ram usage:        9 bytes
 30471 ;; Hardware stack levels used:    1
 30472 ;; Hardware stack levels required when called:    6
 30473 ;; This function calls:
 30474 ;;		_fat_find_file
 30475 ;; This function is called by:
 30476 ;;		_api_prepare
 30477 ;; This function uses a non-reentrant model
 30478 ;;
 30479                           
 30480                           	psect	text149
 30481  005634                     __ptext149:
 30482                           	opt stack 0
 30483  005634                     __fill_buffer_find_file:
 30484                           	opt stack 22
 30485                           
 30486                           ;api.c: 348: uint8_t cntr;;api.c: 351: outBuffer[0] = DATAREQUEST_FIND_FILE;
 30487                           
 30488                           ;incstack = 0
 30489  005634  C03E  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 30490  005638  C03F  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 30491  00563C  0E81               	movlw	129
 30492  00563E  6EDF               	movwf	indf2,c
 30493                           
 30494                           ;api.c: 354: outBuffer[1] = (uint8_t) 0xC125;
 30495  005640  EE20 F001          	lfsr	2,1
 30496  005644  503E               	movf	__fill_buffer_find_file@outBuffer,w,c
 30497  005646  26D9               	addwf	fsr2l,f,c
 30498  005648  503F               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30499  00564A  22DA               	addwfc	fsr2h,f,c
 30500  00564C  0E25               	movlw	37
 30501  00564E  6EDF               	movwf	indf2,c
 30502                           
 30503                           ;api.c: 355: outBuffer[2] = 0xC125 >> 8;
 30504  005650  EE20 F002          	lfsr	2,2
 30505  005654  503E               	movf	__fill_buffer_find_file@outBuffer,w,c
 30506  005656  26D9               	addwf	fsr2l,f,c
 30507  005658  503F               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30508  00565A  22DA               	addwfc	fsr2h,f,c
 30509  00565C  0EC1               	movlw	193
 30510  00565E  6EDF               	movwf	indf2,c
 30511                           
 30512                           ;api.c: 358: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 30513  005660  0E01               	movlw	1
 30514  005662  243C               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30515  005664  6E28               	movwf	fat_find_file@name,c
 30516  005666  0E00               	movlw	0
 30517  005668  203D               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30518  00566A  6E29               	movwf	fat_find_file@name+1,c
 30519  00566C  0E09               	movlw	9
 30520  00566E  243C               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30521  005670  6E2A               	movwf	fat_find_file@extension,c
 30522  005672  0E00               	movlw	0
 30523  005674  203D               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30524  005676  6E2B               	movwf	fat_find_file@extension+1,c
 30525  005678  ECBE  F028         	call	_fat_find_file	;wreg free
 30526  00567C  6E40               	movwf	??__fill_buffer_find_file& (0+255),c
 30527  00567E  EE20 F003          	lfsr	2,3
 30528  005682  503E               	movf	__fill_buffer_find_file@outBuffer,w,c
 30529  005684  26D9               	addwf	fsr2l,f,c
 30530  005686  503F               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30531  005688  22DA               	addwfc	fsr2h,f,c
 30532  00568A  C040  FFDF         	movff	??__fill_buffer_find_file,indf2
 30533                           
 30534                           ;api.c: 361: for(cntr=0; cntr<11; ++cntr)
 30535  00568E  0E00               	movlw	0
 30536  005690  6E44               	movwf	__fill_buffer_find_file@cntr,c
 30537  005692                     l12467:
 30538  005692  0E0A               	movlw	10
 30539  005694  6444               	cpfsgt	__fill_buffer_find_file@cntr,c
 30540  005696  D001               	goto	l2450
 30541  005698  0012               	return	
 30542  00569A                     l2450:
 30543                           
 30544                           ;api.c: 362: {;api.c: 363: outBuffer[cntr+12] = inBuffer[cntr+1];
 30545  00569A  5044               	movf	__fill_buffer_find_file@cntr,w,c
 30546  00569C  6E40               	movwf	??__fill_buffer_find_file& (0+255),c
 30547  00569E  6A41               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 30548  0056A0  0E01               	movlw	1
 30549  0056A2  2640               	addwf	??__fill_buffer_find_file,f,c
 30550  0056A4  0E00               	movlw	0
 30551  0056A6  2241               	addwfc	??__fill_buffer_find_file+1,f,c
 30552  0056A8  5040               	movf	??__fill_buffer_find_file,w,c
 30553  0056AA  243C               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30554  0056AC  6ED9               	movwf	fsr2l,c
 30555  0056AE  5041               	movf	??__fill_buffer_find_file+1,w,c
 30556  0056B0  203D               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30557  0056B2  6EDA               	movwf	fsr2h,c
 30558  0056B4  5044               	movf	__fill_buffer_find_file@cntr,w,c
 30559  0056B6  6E42               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 30560  0056B8  6A43               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 30561  0056BA  0E0C               	movlw	12
 30562  0056BC  2642               	addwf	??__fill_buffer_find_file+2,f,c
 30563  0056BE  0E00               	movlw	0
 30564  0056C0  2243               	addwfc	??__fill_buffer_find_file+3,f,c
 30565  0056C2  5042               	movf	??__fill_buffer_find_file+2,w,c
 30566  0056C4  243E               	addwf	__fill_buffer_find_file@outBuffer,w,c
 30567  0056C6  6EE1               	movwf	fsr1l,c
 30568  0056C8  5043               	movf	??__fill_buffer_find_file+3,w,c
 30569  0056CA  203F               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 30570  0056CC  6EE2               	movwf	fsr1h,c
 30571  0056CE  CFDF FFE7          	movff	indf2,indf1
 30572  0056D2  2A44               	incf	__fill_buffer_find_file@cntr,f,c
 30573  0056D4  D7DE               	goto	l12467
 30574  0056D6                     __end_of__fill_buffer_find_file:
 30575                           	opt stack 0
 30576                           tosu	equ	0xFFF
 30577                           tosh	equ	0xFFE
 30578                           tosl	equ	0xFFD
 30579                           pclath	equ	0xFFA
 30580                           tblptru	equ	0xFF8
 30581                           tblptrh	equ	0xFF7
 30582                           tblptrl	equ	0xFF6
 30583                           tablat	equ	0xFF5
 30584                           prodh	equ	0xFF4
 30585                           prodl	equ	0xFF3
 30586                           intcon	equ	0xFF2
 30587                           intcon2	equ	0xFF1
 30588                           intcon3	equ	0xFF0
 30589                           indf0	equ	0xFEF
 30590                           postinc0	equ	0xFEE
 30591                           fsr0h	equ	0xFEA
 30592                           fsr0l	equ	0xFE9
 30593                           wreg	equ	0xFE8
 30594                           indf1	equ	0xFE7
 30595                           postdec1	equ	0xFE5
 30596                           plusw1	equ	0xFE3
 30597                           fsr1h	equ	0xFE2
 30598                           fsr1l	equ	0xFE1
 30599                           indf2	equ	0xFDF
 30600                           postinc2	equ	0xFDE
 30601                           postdec2	equ	0xFDD
 30602                           plusw2	equ	0xFDB
 30603                           fsr2h	equ	0xFDA
 30604                           fsr2l	equ	0xFD9
 30605                           status	equ	0xFD8
 30606                           
 30607 ;; *************** function _api_parse *****************
 30608 ;; Defined at:
 30609 ;;		line 119 in file "api.c"
 30610 ;; Parameters:    Size  Location     Type
 30611 ;;  inBuffer        2   54[BANK0 ] PTR unsigned char 
 30612 ;;		 -> ReceivedDataBuffer(64), 
 30613 ;;  receivedData    1   56[BANK0 ] unsigned char 
 30614 ;; Auto vars:     Size  Location     Type
 30615 ;;  idx             1   59[BANK0 ] unsigned char 
 30616 ;; Return value:  Size  Location     Type
 30617 ;;                  1    wreg      void 
 30618 ;; Registers used:
 30619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30620 ;; Tracked objects:
 30621 ;;		On entry : 0/0
 30622 ;;		On exit  : 0/0
 30623 ;;		Unchanged: 0/0
 30624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30625 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30627 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30629 ;;Total ram usage:        6 bytes
 30630 ;; Hardware stack levels used:    1
 30631 ;; Hardware stack levels required when called:   10
 30632 ;; This function calls:
 30633 ;;		__parse_command_long
 30634 ;;		__parse_command_short
 30635 ;; This function is called by:
 30636 ;;		_APP_DeviceCustomHIDTasks
 30637 ;; This function uses a non-reentrant model
 30638 ;;
 30639                           
 30640                           	psect	text150
 30641  004A7A                     __ptext150:
 30642                           	opt stack 0
 30643  004A7A                     _api_parse:
 30644                           	opt stack 19
 30645                           
 30646                           ;api.c: 123: uint8_t idx;;api.c: 125: if(inBuffer[0]>0x7F)
 30647                           
 30648                           ;incstack = 0
 30649  004A7A  C0F4  FFD9         	movff	api_parse@inBuffer,fsr2l
 30650  004A7E  C0F5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 30651  004A82  0E7F               	movlw	127
 30652  004A84  64DF               	cpfsgt	indf2,c
 30653  004A86  D001               	goto	l2408
 30654  004A88  0012               	return	
 30655  004A8A                     l2408:
 30656                           
 30657                           ;api.c: 130: };api.c: 132: idx = 1;
 30658  004A8A  0E01               	movlw	1
 30659  004A8C  0100               	movlb	0	; () banked
 30660  004A8E  6FF9               	movwf	api_parse@idx& (0+255),b
 30661                           
 30662                           ;api.c: 133: while(idx<receivedDataLength)
 30663  004A90  D056               	goto	l2415
 30664  004A92                     
 30665                           ; BSR set to: 0
 30666                           ;api.c: 134: {;api.c: 136: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 30667                           
 30668                           ; BSR set to: 0
 30669  004A92  51F9               	movf	api_parse@idx& (0+255),w,b
 30670  004A94  0D01               	mullw	1
 30671  004A96  50F3               	movf	prodl,w,c
 30672  004A98  25F4               	addwf	api_parse@inBuffer& (0+255),w,b
 30673  004A9A  6ED9               	movwf	fsr2l,c
 30674  004A9C  50F4               	movf	prodh,w,c
 30675  004A9E  21F5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30676  004AA0  6EDA               	movwf	fsr2h,c
 30677  004AA2  0E99               	movlw	153
 30678  004AA4  18DE               	xorwf	postinc2,w,c
 30679  004AA6  B4D8               	btfsc	status,2,c
 30680  004AA8  0012               	return	
 30681  004AAA  D02E               	goto	l2413
 30682  004AAC                     
 30683                           ; BSR set to: 0
 30684                           ;api.c: 144: _parse_command_short(inBuffer[idx]);
 30685                           
 30686                           ; BSR set to: 0
 30687  004AAC  51F9               	movf	api_parse@idx& (0+255),w,b
 30688  004AAE  0D01               	mullw	1
 30689  004AB0  50F3               	movf	prodl,w,c
 30690  004AB2  25F4               	addwf	api_parse@inBuffer& (0+255),w,b
 30691  004AB4  6ED9               	movwf	fsr2l,c
 30692  004AB6  50F4               	movf	prodh,w,c
 30693  004AB8  21F5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30694  004ABA  6EDA               	movwf	fsr2h,c
 30695  004ABC  50DF               	movf	indf2,w,c
 30696  004ABE  EC31  F030         	call	__parse_command_short
 30697  004AC2  D00B               	goto	l12995
 30698  004AC4                     
 30699                           ; BSR set to: 0
 30700                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 30701                           
 30702                           ; BSR set to: 0
 30703  004AC4  51F9               	movf	api_parse@idx& (0+255),w,b
 30704  004AC6  0D01               	mullw	1
 30705  004AC8  50F3               	movf	prodl,w,c
 30706  004ACA  25F4               	addwf	api_parse@inBuffer& (0+255),w,b
 30707  004ACC  6ED9               	movwf	fsr2l,c
 30708  004ACE  50F4               	movf	prodh,w,c
 30709  004AD0  21F5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30710  004AD2  6EDA               	movwf	fsr2h,c
 30711  004AD4  50DF               	movf	indf2,w,c
 30712  004AD6  EC31  F030         	call	__parse_command_short
 30713  004ADA                     l12995:
 30714                           
 30715                           ;api.c: 150: ++idx;
 30716  004ADA  0100               	movlb	0	; () banked
 30717  004ADC  2BF9               	incf	api_parse@idx& (0+255),f,b
 30718                           
 30719                           ;api.c: 151: break;
 30720  004ADE  D02F               	goto	l2415
 30721  004AE0                     
 30722                           ; BSR set to: 0
 30723                           ;api.c: 154: idx += _parse_command_long(inBuffer[idx]);
 30724                           
 30725                           ; BSR set to: 0
 30726  004AE0  51F9               	movf	api_parse@idx& (0+255),w,b
 30727  004AE2  0D01               	mullw	1
 30728  004AE4  50F3               	movf	prodl,w,c
 30729  004AE6  25F4               	addwf	api_parse@inBuffer& (0+255),w,b
 30730  004AE8  6ED9               	movwf	fsr2l,c
 30731  004AEA  50F4               	movf	prodh,w,c
 30732  004AEC  21F5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30733  004AEE  6EDA               	movwf	fsr2h,c
 30734  004AF0  50DF               	movf	indf2,w,c
 30735  004AF2  6FF7               	movwf	??_api_parse& (0+255),b
 30736  004AF4  6BF8               	clrf	(??_api_parse+1)& (0+255),b
 30737  004AF6  C0F7  F0F1         	movff	??_api_parse,__parse_command_long@data
 30738  004AFA  C0F8  F0F2         	movff	??_api_parse+1,__parse_command_long@data+1
 30739  004AFE  EC85  F02D         	call	__parse_command_long	;wreg free
 30740  004B02  0100               	movlb	0	; () banked
 30741  004B04  27F9               	addwf	api_parse@idx& (0+255),f,b
 30742                           
 30743                           ;api.c: 155: break;
 30744  004B06  D01B               	goto	l2415
 30745  004B08                     l2413:
 30746                           
 30747                           ; BSR set to: 0
 30748                           
 30749                           ; BSR set to: 0
 30750  004B08  51F9               	movf	api_parse@idx& (0+255),w,b
 30751  004B0A  0D01               	mullw	1
 30752  004B0C  50F3               	movf	prodl,w,c
 30753  004B0E  25F4               	addwf	api_parse@inBuffer& (0+255),w,b
 30754  004B10  6ED9               	movwf	fsr2l,c
 30755  004B12  50F4               	movf	prodh,w,c
 30756  004B14  21F5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30757  004B16  6EDA               	movwf	fsr2h,c
 30758  004B18  50DF               	movf	indf2,w,c
 30759  004B1A  0BF0               	andlw	240
 30760  004B1C  6FF7               	movwf	??_api_parse& (0+255),b
 30761  004B1E  6BF8               	clrf	(??_api_parse+1)& (0+255),b
 30762                           
 30763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30764                           ; Switch size 1, requested type "space"
 30765                           ; Number of cases is 1, Range of values is 0 to 0
 30766                           ; switch strategies available:
 30767                           ; Name         Instructions Cycles
 30768                           ; simple_byte            4     3 (average)
 30769                           ;	Chosen strategy is simple_byte
 30770  004B20  51F8               	movf	(??_api_parse+1)& (0+255),w,b
 30771  004B22  0A00               	xorlw	0	; case 0
 30772  004B24  A4D8               	btfss	status,2,c
 30773  004B26  0012               	return	
 30774                           
 30775                           ; BSR set to: 0
 30776                           ; Switch size 1, requested type "space"
 30777                           ; Number of cases is 3, Range of values is 32 to 80
 30778                           ; switch strategies available:
 30779                           ; Name         Instructions Cycles
 30780                           ; simple_byte           10     6 (average)
 30781                           ;	Chosen strategy is simple_byte
 30782  004B28  51F7               	movf	??_api_parse& (0+255),w,b
 30783  004B2A  0A20               	xorlw	32	; case 32
 30784  004B2C  B4D8               	btfsc	status,2,c
 30785  004B2E  D7BE               	goto	l2414
 30786  004B30  0A10               	xorlw	16	; case 48
 30787  004B32  B4D8               	btfsc	status,2,c
 30788  004B34  D7C7               	goto	l2416
 30789  004B36  0A60               	xorlw	96	; case 80
 30790  004B38  A4D8               	btfss	status,2,c
 30791  004B3A  0012               	return	
 30792  004B3C  D7D1               	goto	l2417
 30793  004B3E                     l2415:
 30794                           
 30795                           ; BSR set to: 0
 30796                           
 30797                           ; BSR set to: 0
 30798                           
 30799                           ; BSR set to: 0
 30800  004B3E  51F6               	movf	api_parse@receivedDataLength& (0+255),w,b
 30801  004B40  5DF9               	subwf	api_parse@idx& (0+255),w,b
 30802  004B42  B0D8               	btfsc	status,0,c
 30803  004B44  0012               	return	
 30804  004B46  D7A5               	goto	l2411
 30805  004B48                     __end_of_api_parse:
 30806                           	opt stack 0
 30807                           tosu	equ	0xFFF
 30808                           tosh	equ	0xFFE
 30809                           tosl	equ	0xFFD
 30810                           pclath	equ	0xFFA
 30811                           tblptru	equ	0xFF8
 30812                           tblptrh	equ	0xFF7
 30813                           tblptrl	equ	0xFF6
 30814                           tablat	equ	0xFF5
 30815                           prodh	equ	0xFF4
 30816                           prodl	equ	0xFF3
 30817                           intcon	equ	0xFF2
 30818                           intcon2	equ	0xFF1
 30819                           intcon3	equ	0xFF0
 30820                           indf0	equ	0xFEF
 30821                           postinc0	equ	0xFEE
 30822                           fsr0h	equ	0xFEA
 30823                           fsr0l	equ	0xFE9
 30824                           wreg	equ	0xFE8
 30825                           indf1	equ	0xFE7
 30826                           postdec1	equ	0xFE5
 30827                           plusw1	equ	0xFE3
 30828                           fsr1h	equ	0xFE2
 30829                           fsr1l	equ	0xFE1
 30830                           indf2	equ	0xFDF
 30831                           postinc2	equ	0xFDE
 30832                           postdec2	equ	0xFDD
 30833                           plusw2	equ	0xFDB
 30834                           fsr2h	equ	0xFDA
 30835                           fsr2l	equ	0xFD9
 30836                           status	equ	0xFD8
 30837                           
 30838 ;; *************** function __parse_command_short *****************
 30839 ;; Defined at:
 30840 ;;		line 415 in file "api.c"
 30841 ;; Parameters:    Size  Location     Type
 30842 ;;  cmd             1    wreg     unsigned char 
 30843 ;; Auto vars:     Size  Location     Type
 30844 ;;  cmd             1   19[COMRAM] unsigned char 
 30845 ;; Return value:  Size  Location     Type
 30846 ;;                  1    wreg      void 
 30847 ;; Registers used:
 30848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30849 ;; Tracked objects:
 30850 ;;		On entry : 0/0
 30851 ;;		On exit  : 0/0
 30852 ;;		Unchanged: 0/0
 30853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30858 ;;Total ram usage:        1 bytes
 30859 ;; Hardware stack levels used:    1
 30860 ;; Hardware stack levels required when called:    3
 30861 ;; This function calls:
 30862 ;;		_i2c_eeprom_writeByte
 30863 ;;		_system_delay_ms
 30864 ;; This function is called by:
 30865 ;;		_api_parse
 30866 ;; This function uses a non-reentrant model
 30867 ;;
 30868                           
 30869                           	psect	text151
 30870  006062                     __ptext151:
 30871                           	opt stack 0
 30872  006062                     __parse_command_short:
 30873                           	opt stack 25
 30874                           
 30875                           ;incstack = 0
 30876                           ;__parse_command_short@cmd stored from wreg
 30877  006062  6E14               	movwf	__parse_command_short@cmd,c
 30878                           
 30879                           ;api.c: 417: switch(cmd)
 30880  006064  D028               	goto	l2459
 30881  006066                     l2460:
 30882  006066  EF00 F000          	goto	0	; ;# 
 30883                           
 30884                           ;api.c: 423: break;
 30885  00606A  0012               	return	
 30886  00606C                     
 30887                           ;api.c: 426: i2c_eeprom_writeByte(0x100, 0x94);
 30888  00606C  0E01               	movlw	1
 30889  00606E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 30890  006070  0E00               	movlw	0
 30891  006072  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 30892  006074  0E94               	movlw	148
 30893  006076  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 30894  006078  EC3A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 30895                           
 30896                           ;api.c: 427: system_delay_ms(10);
 30897  00607C  0E0A               	movlw	10
 30898  00607E  ECE1  F03B         	call	_system_delay_ms
 30899  006082  EF00 F000          	goto	0	; ;# 
 30900                           
 30901                           ;api.c: 431: break;
 30902  006086  0012               	return	
 30903  006088                     
 30904                           ;api.c: 434: i2c_eeprom_writeByte(0x100, 0x78);
 30905  006088  0E01               	movlw	1
 30906  00608A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 30907  00608C  0E00               	movlw	0
 30908  00608E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 30909  006090  0E78               	movlw	120
 30910  006092  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 30911  006094  EC3A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 30912                           
 30913                           ;api.c: 435: system_delay_ms(10);
 30914  006098  0E0A               	movlw	10
 30915  00609A  ECE1  F03B         	call	_system_delay_ms
 30916  00609E  EF00 F000          	goto	0	; ;# 
 30917                           
 30918                           ;api.c: 439: break;
 30919  0060A2  0012               	return	
 30920  0060A4                     
 30921                           ;api.c: 442: --os.encoderCount;
 30922  0060A4  0100               	movlb	0	; () banked
 30923  0060A6  0760               	decf	_os& (0+255),f,b	;volatile
 30924                           
 30925                           ;api.c: 443: break;
 30926  0060A8  0012               	return	
 30927  0060AA                     
 30928                           ;api.c: 446: ++os.encoderCount;
 30929                           
 30930                           ; BSR set to: 0
 30931  0060AA  0100               	movlb	0	; () banked
 30932  0060AC  2B60               	incf	_os& (0+255),f,b	;volatile
 30933                           
 30934                           ;api.c: 447: break;
 30935  0060AE  0012               	return	
 30936  0060B0                     
 30937                           ;api.c: 450: ++os.buttonCount;
 30938                           
 30939                           ; BSR set to: 0
 30940  0060B0  0100               	movlb	0	; () banked
 30941  0060B2  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 30942                           
 30943                           ; BSR set to: 0
 30944                           ;api.c: 452: }
 30945                           
 30946                           ;api.c: 451: break;
 30947  0060B4  0012               	return	
 30948  0060B6                     l2459:
 30949                           
 30950                           ; BSR set to: 0
 30951  0060B6  5014               	movf	__parse_command_short@cmd,w,c
 30952                           
 30953                           ; Switch size 1, requested type "space"
 30954                           ; Number of cases is 6, Range of values is 32 to 62
 30955                           ; switch strategies available:
 30956                           ; Name         Instructions Cycles
 30957                           ; simple_byte           19    10 (average)
 30958                           ;	Chosen strategy is simple_byte
 30959  0060B8  0A20               	xorlw	32	; case 32
 30960  0060BA  B4D8               	btfsc	status,2,c
 30961  0060BC  D7D4               	goto	l2460
 30962  0060BE  0A01               	xorlw	1	; case 33
 30963  0060C0  B4D8               	btfsc	status,2,c
 30964  0060C2  D7D4               	goto	l2462
 30965  0060C4  0A03               	xorlw	3	; case 34
 30966  0060C6  B4D8               	btfsc	status,2,c
 30967  0060C8  D7DF               	goto	l2463
 30968  0060CA  0A1E               	xorlw	30	; case 60
 30969  0060CC  B4D8               	btfsc	status,2,c
 30970  0060CE  D7EA               	goto	l2464
 30971  0060D0  0A01               	xorlw	1	; case 61
 30972  0060D2  B4D8               	btfsc	status,2,c
 30973  0060D4  D7EA               	goto	l2465
 30974  0060D6  0A03               	xorlw	3	; case 62
 30975  0060D8  A4D8               	btfss	status,2,c
 30976  0060DA  0012               	return	
 30977  0060DC  D7E9               	goto	l2466
 30978  0060DE                     __end_of__parse_command_short:
 30979                           	opt stack 0
 30980                           tosu	equ	0xFFF
 30981                           tosh	equ	0xFFE
 30982                           tosl	equ	0xFFD
 30983                           pclath	equ	0xFFA
 30984                           tblptru	equ	0xFF8
 30985                           tblptrh	equ	0xFF7
 30986                           tblptrl	equ	0xFF6
 30987                           tablat	equ	0xFF5
 30988                           prodh	equ	0xFF4
 30989                           prodl	equ	0xFF3
 30990                           intcon	equ	0xFF2
 30991                           intcon2	equ	0xFF1
 30992                           intcon3	equ	0xFF0
 30993                           indf0	equ	0xFEF
 30994                           postinc0	equ	0xFEE
 30995                           fsr0h	equ	0xFEA
 30996                           fsr0l	equ	0xFE9
 30997                           wreg	equ	0xFE8
 30998                           indf1	equ	0xFE7
 30999                           postdec1	equ	0xFE5
 31000                           plusw1	equ	0xFE3
 31001                           fsr1h	equ	0xFE2
 31002                           fsr1l	equ	0xFE1
 31003                           indf2	equ	0xFDF
 31004                           postinc2	equ	0xFDE
 31005                           postdec2	equ	0xFDD
 31006                           plusw2	equ	0xFDB
 31007                           fsr2h	equ	0xFDA
 31008                           fsr2l	equ	0xFD9
 31009                           status	equ	0xFD8
 31010                           
 31011 ;; *************** function _system_delay_ms *****************
 31012 ;; Defined at:
 31013 ;;		line 61 in file "os.c"
 31014 ;; Parameters:    Size  Location     Type
 31015 ;;  ms              1    wreg     unsigned char 
 31016 ;; Auto vars:     Size  Location     Type
 31017 ;;  ms              1    1[COMRAM] unsigned char 
 31018 ;;  cntr            1    2[COMRAM] unsigned char 
 31019 ;; Return value:  Size  Location     Type
 31020 ;;                  1    wreg      void 
 31021 ;; Registers used:
 31022 ;;		wreg, status,2, status,0, cstack
 31023 ;; Tracked objects:
 31024 ;;		On entry : 0/0
 31025 ;;		On exit  : 0/0
 31026 ;;		Unchanged: 0/0
 31027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31030 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31031 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31032 ;;Total ram usage:        3 bytes
 31033 ;; Hardware stack levels used:    1
 31034 ;; This function calls:
 31035 ;;		Nothing
 31036 ;; This function is called by:
 31037 ;;		__parse_command_short
 31038 ;; This function uses a non-reentrant model
 31039 ;;
 31040                           
 31041                           	psect	text152
 31042  0077C2                     __ptext152:
 31043                           	opt stack 0
 31044  0077C2                     _system_delay_ms:
 31045                           	opt stack 27
 31046                           
 31047                           ;incstack = 0
 31048                           ;system_delay_ms@ms stored from wreg
 31049  0077C2  6E02               	movwf	system_delay_ms@ms,c
 31050                           
 31051                           ;os.c: 63: uint8_t cntr;;os.c: 64: for(cntr=0; cntr<ms; ++cntr)
 31052  0077C4  0E00               	movlw	0
 31053  0077C6  6E03               	movwf	system_delay_ms@cntr,c
 31054  0077C8  D009               	goto	l1042
 31055  0077CA                     
 31056                           ;os.c: 65: {;os.c: 66: _delay((unsigned long)((6)*(8000000/4000.0)));
 31057  0077CA  0E10               	movlw	16
 31058  0077CC  6E01               	movwf	??_system_delay_ms& (0+255),c
 31059  0077CE  0E94               	movlw	148
 31060  0077D0                     u11787:
 31061  0077D0  2EE8               	decfsz	wreg,f,c
 31062  0077D2  D7FE               	bra	u11787
 31063  0077D4  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 31064  0077D6  D7FC               	bra	u11787
 31065  0077D8  D000               	nop2	
 31066  0077DA  2A03               	incf	system_delay_ms@cntr,f,c
 31067  0077DC                     l1042:
 31068  0077DC  5002               	movf	system_delay_ms@ms,w,c
 31069  0077DE  5C03               	subwf	system_delay_ms@cntr,w,c
 31070  0077E0  B0D8               	btfsc	status,0,c
 31071  0077E2  0012               	return	
 31072  0077E4  D7F2               	goto	l1043
 31073  0077E6                     __end_of_system_delay_ms:
 31074                           	opt stack 0
 31075                           tosu	equ	0xFFF
 31076                           tosh	equ	0xFFE
 31077                           tosl	equ	0xFFD
 31078                           pclath	equ	0xFFA
 31079                           tblptru	equ	0xFF8
 31080                           tblptrh	equ	0xFF7
 31081                           tblptrl	equ	0xFF6
 31082                           tablat	equ	0xFF5
 31083                           prodh	equ	0xFF4
 31084                           prodl	equ	0xFF3
 31085                           intcon	equ	0xFF2
 31086                           intcon2	equ	0xFF1
 31087                           intcon3	equ	0xFF0
 31088                           indf0	equ	0xFEF
 31089                           postinc0	equ	0xFEE
 31090                           fsr0h	equ	0xFEA
 31091                           fsr0l	equ	0xFE9
 31092                           wreg	equ	0xFE8
 31093                           indf1	equ	0xFE7
 31094                           postdec1	equ	0xFE5
 31095                           plusw1	equ	0xFE3
 31096                           fsr1h	equ	0xFE2
 31097                           fsr1l	equ	0xFE1
 31098                           indf2	equ	0xFDF
 31099                           postinc2	equ	0xFDE
 31100                           postdec2	equ	0xFDD
 31101                           plusw2	equ	0xFDB
 31102                           fsr2h	equ	0xFDA
 31103                           fsr2l	equ	0xFD9
 31104                           status	equ	0xFD8
 31105                           
 31106 ;; *************** function _i2c_eeprom_writeByte *****************
 31107 ;; Defined at:
 31108 ;;		line 344 in file "i2c.c"
 31109 ;; Parameters:    Size  Location     Type
 31110 ;;  address         2   10[COMRAM] unsigned int 
 31111 ;;  data            1   12[COMRAM] unsigned char 
 31112 ;; Auto vars:     Size  Location     Type
 31113 ;;  dat             2   16[COMRAM] unsigned char [2]
 31114 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31115 ;; Return value:  Size  Location     Type
 31116 ;;                  1    wreg      void 
 31117 ;; Registers used:
 31118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31119 ;; Tracked objects:
 31120 ;;		On entry : 0/0
 31121 ;;		On exit  : 0/0
 31122 ;;		Unchanged: 0/0
 31123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31124 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31125 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31126 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31127 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31128 ;;Total ram usage:        9 bytes
 31129 ;; Hardware stack levels used:    1
 31130 ;; Hardware stack levels required when called:    2
 31131 ;; This function calls:
 31132 ;;		__i2c_write
 31133 ;;		_i2c_set_frequency
 31134 ;; This function is called by:
 31135 ;;		__normal_mode
 31136 ;;		__parse_command_short
 31137 ;; This function uses a non-reentrant model
 31138 ;;
 31139                           
 31140                           	psect	text153
 31141  007274                     __ptext153:
 31142                           	opt stack 0
 31143  007274                     _i2c_eeprom_writeByte:
 31144                           	opt stack 27
 31145                           
 31146                           ;i2c.c: 346: uint8_t slave_address;;i2c.c: 347: uint8_t dat[2];;i2c.c: 349: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31147                           
 31148                           ;incstack = 0
 31149  007274  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31150  007278  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31151  00727C  0E07               	movlw	7
 31152  00727E  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31153  007280                     u8645:
 31154  007280  90D8               	bcf	status,0,c
 31155  007282  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31156  007284  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31157  007286  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31158  007288  D7FB               	goto	u8645
 31159  00728A  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31160  00728C  0B0E               	andlw	14
 31161  00728E  09A0               	iorlw	160
 31162  007290  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31163                           
 31164                           ;i2c.c: 350: dat[0] = address & 0xFF;
 31165  007292  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31166                           
 31167                           ;i2c.c: 351: dat[1] = data;
 31168  007296  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31169                           
 31170                           ;i2c.c: 354: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31171  00729A  0E02               	movlw	2
 31172  00729C  EC2F  F03B         	call	_i2c_set_frequency
 31173                           
 31174                           ;i2c.c: 356: _i2c_write(slave_address, &dat[0], 2);
 31175  0072A0  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31176  0072A2  6E06               	movwf	__i2c_write@data,c
 31177  0072A4  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31178  0072A6  6E07               	movwf	__i2c_write@data+1,c
 31179  0072A8  0E02               	movlw	2
 31180  0072AA  6E08               	movwf	__i2c_write@length,c
 31181  0072AC  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31182  0072AE  EC6D  F038         	call	__i2c_write
 31183  0072B2  0012               	return		;funcret
 31184  0072B4                     __end_of_i2c_eeprom_writeByte:
 31185                           	opt stack 0
 31186                           tosu	equ	0xFFF
 31187                           tosh	equ	0xFFE
 31188                           tosl	equ	0xFFD
 31189                           pclath	equ	0xFFA
 31190                           tblptru	equ	0xFF8
 31191                           tblptrh	equ	0xFF7
 31192                           tblptrl	equ	0xFF6
 31193                           tablat	equ	0xFF5
 31194                           prodh	equ	0xFF4
 31195                           prodl	equ	0xFF3
 31196                           intcon	equ	0xFF2
 31197                           intcon2	equ	0xFF1
 31198                           intcon3	equ	0xFF0
 31199                           indf0	equ	0xFEF
 31200                           postinc0	equ	0xFEE
 31201                           fsr0h	equ	0xFEA
 31202                           fsr0l	equ	0xFE9
 31203                           wreg	equ	0xFE8
 31204                           indf1	equ	0xFE7
 31205                           postdec1	equ	0xFE5
 31206                           plusw1	equ	0xFE3
 31207                           fsr1h	equ	0xFE2
 31208                           fsr1l	equ	0xFE1
 31209                           indf2	equ	0xFDF
 31210                           postinc2	equ	0xFDE
 31211                           postdec2	equ	0xFDD
 31212                           plusw2	equ	0xFDB
 31213                           fsr2h	equ	0xFDA
 31214                           fsr2l	equ	0xFD9
 31215                           status	equ	0xFD8
 31216                           
 31217 ;; *************** function _i2c_set_frequency *****************
 31218 ;; Defined at:
 31219 ;;		line 115 in file "i2c.c"
 31220 ;; Parameters:    Size  Location     Type
 31221 ;;  frequency       1    wreg     enum E6690
 31222 ;; Auto vars:     Size  Location     Type
 31223 ;;  frequency       1    0[COMRAM] enum E6690
 31224 ;; Return value:  Size  Location     Type
 31225 ;;                  1    wreg      void 
 31226 ;; Registers used:
 31227 ;;		wreg, status,2, status,0
 31228 ;; Tracked objects:
 31229 ;;		On entry : 0/0
 31230 ;;		On exit  : 0/0
 31231 ;;		Unchanged: 0/0
 31232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31237 ;;Total ram usage:        1 bytes
 31238 ;; Hardware stack levels used:    1
 31239 ;; This function calls:
 31240 ;;		Nothing
 31241 ;; This function is called by:
 31242 ;;		_i2c_init
 31243 ;;		__ic2_display_set_address
 31244 ;;		_i2c_display_send_init_sequence
 31245 ;;		_i2c_display_cursor
 31246 ;;		_i2c_display_write_fixed
 31247 ;;		_i2c_digipot_reset_on
 31248 ;;		_i2c_digipot_reset_off
 31249 ;;		_i2c_digipot_backlight
 31250 ;;		_i2c_eeprom_writeByte
 31251 ;;		_i2c_eeprom_readByte
 31252 ;;		_i2c_display_write
 31253 ;;		_i2c_eeprom_write
 31254 ;;		_i2c_eeprom_read
 31255 ;; This function uses a non-reentrant model
 31256 ;;
 31257                           
 31258                           	psect	text154
 31259  00765E                     __ptext154:
 31260                           	opt stack 0
 31261  00765E                     _i2c_set_frequency:
 31262                           	opt stack 28
 31263                           
 31264                           ;incstack = 0
 31265                           ;i2c_set_frequency@frequency stored from wreg
 31266  00765E  6E01               	movwf	i2c_set_frequency@frequency,c
 31267                           
 31268                           ;i2c.c: 117: switch(frequency)
 31269  007660  D007               	goto	l1124
 31270  007662                     
 31271                           ;i2c.c: 120: SSP1ADD = 119;
 31272  007662  0E77               	movlw	119
 31273  007664  D003               	goto	L35
 31274  007666                     
 31275                           ;i2c.c: 123: SSP1ADD = 59;
 31276  007666  0E3B               	movlw	59
 31277  007668  D001               	goto	L35
 31278  00766A                     
 31279                           ;i2c.c: 126: SSP1ADD = 29;
 31280  00766A  0E1D               	movlw	29
 31281  00766C                     L35:
 31282  00766C  6EC8               	movwf	4040,c	;volatile
 31283                           
 31284                           ;i2c.c: 128: }
 31285                           
 31286                           ;i2c.c: 127: break;
 31287  00766E  D00A               	goto	l1126
 31288  007670                     l1124:
 31289  007670  5001               	movf	i2c_set_frequency@frequency,w,c
 31290                           
 31291                           ; Switch size 1, requested type "space"
 31292                           ; Number of cases is 3, Range of values is 0 to 2
 31293                           ; switch strategies available:
 31294                           ; Name         Instructions Cycles
 31295                           ; simple_byte           10     6 (average)
 31296                           ;	Chosen strategy is simple_byte
 31297  007672  0A00               	xorlw	0	; case 0
 31298  007674  B4D8               	btfsc	status,2,c
 31299  007676  D7F5               	goto	l1125
 31300  007678  0A01               	xorlw	1	; case 1
 31301  00767A  B4D8               	btfsc	status,2,c
 31302  00767C  D7F4               	goto	l1127
 31303  00767E  0A03               	xorlw	3	; case 2
 31304  007680  B4D8               	btfsc	status,2,c
 31305  007682  D7F3               	goto	l1128
 31306  007684                     l1126:
 31307                           
 31308                           ;i2c.c: 130: i2c_frequency = frequency;
 31309  007684  C001  F0A0         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31310  007688  0012               	return		;funcret
 31311  00768A                     __end_of_i2c_set_frequency:
 31312                           	opt stack 0
 31313                           tosu	equ	0xFFF
 31314                           tosh	equ	0xFFE
 31315                           tosl	equ	0xFFD
 31316                           pclath	equ	0xFFA
 31317                           tblptru	equ	0xFF8
 31318                           tblptrh	equ	0xFF7
 31319                           tblptrl	equ	0xFF6
 31320                           tablat	equ	0xFF5
 31321                           prodh	equ	0xFF4
 31322                           prodl	equ	0xFF3
 31323                           intcon	equ	0xFF2
 31324                           intcon2	equ	0xFF1
 31325                           intcon3	equ	0xFF0
 31326                           indf0	equ	0xFEF
 31327                           postinc0	equ	0xFEE
 31328                           fsr0h	equ	0xFEA
 31329                           fsr0l	equ	0xFE9
 31330                           wreg	equ	0xFE8
 31331                           indf1	equ	0xFE7
 31332                           postdec1	equ	0xFE5
 31333                           plusw1	equ	0xFE3
 31334                           fsr1h	equ	0xFE2
 31335                           fsr1l	equ	0xFE1
 31336                           indf2	equ	0xFDF
 31337                           postinc2	equ	0xFDE
 31338                           postdec2	equ	0xFDD
 31339                           plusw2	equ	0xFDB
 31340                           fsr2h	equ	0xFDA
 31341                           fsr2l	equ	0xFD9
 31342                           status	equ	0xFD8
 31343                           
 31344 ;; *************** function __i2c_write *****************
 31345 ;; Defined at:
 31346 ;;		line 134 in file "i2c.c"
 31347 ;; Parameters:    Size  Location     Type
 31348 ;;  slave_addres    1    wreg     unsigned char 
 31349 ;;  data            2    5[COMRAM] PTR unsigned char 
 31350 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31351 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 31352 ;;		 -> _ic2_display_set_address@data_array(2), 
 31353 ;;  length          1    7[COMRAM] unsigned char 
 31354 ;; Auto vars:     Size  Location     Type
 31355 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31356 ;;  cntr            1    9[COMRAM] unsigned char 
 31357 ;; Return value:  Size  Location     Type
 31358 ;;                  1    wreg      void 
 31359 ;; Registers used:
 31360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31361 ;; Tracked objects:
 31362 ;;		On entry : 0/0
 31363 ;;		On exit  : 0/0
 31364 ;;		Unchanged: 0/0
 31365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31366 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31369 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31370 ;;Total ram usage:        5 bytes
 31371 ;; Hardware stack levels used:    1
 31372 ;; Hardware stack levels required when called:    1
 31373 ;; This function calls:
 31374 ;;		__i2c_send
 31375 ;;		__i2c_start
 31376 ;;		__i2c_stop
 31377 ;;		__i2c_wait_idle
 31378 ;; This function is called by:
 31379 ;;		__ic2_display_set_address
 31380 ;;		_i2c_display_send_init_sequence
 31381 ;;		_i2c_digipot_reset_on
 31382 ;;		_i2c_digipot_reset_off
 31383 ;;		_i2c_digipot_backlight
 31384 ;;		_i2c_eeprom_writeByte
 31385 ;;		_i2c_eeprom_readByte
 31386 ;;		_i2c_eeprom_write
 31387 ;;		_i2c_eeprom_read
 31388 ;; This function uses a non-reentrant model
 31389 ;;
 31390                           
 31391                           	psect	text155
 31392  0070DA                     __ptext155:
 31393                           	opt stack 0
 31394  0070DA                     __i2c_write:
 31395                           	opt stack 27
 31396                           
 31397                           ;incstack = 0
 31398                           ;__i2c_write@slave_address stored from wreg
 31399  0070DA  6E09               	movwf	__i2c_write@slave_address,c
 31400                           
 31401                           ;i2c.c: 136: uint8_t cntr;;i2c.c: 138: _i2c_wait_idle();
 31402  0070DC  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 31403                           
 31404                           ;i2c.c: 139: _i2c_start();
 31405  0070E0  EC42  F03D         	call	__i2c_start	;wreg free
 31406                           
 31407                           ;i2c.c: 140: _i2c_wait_idle();
 31408  0070E4  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 31409                           
 31410                           ;i2c.c: 141: _i2c_send(slave_address);
 31411  0070E8  5009               	movf	__i2c_write@slave_address,w,c
 31412  0070EA  EC46  F03D         	call	__i2c_send
 31413                           
 31414                           ;i2c.c: 142: _i2c_wait_idle();
 31415  0070EE  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 31416                           
 31417                           ;i2c.c: 144: for(cntr=0; cntr<length; ++cntr)
 31418  0070F2  0E00               	movlw	0
 31419  0070F4  6E0A               	movwf	__i2c_write@cntr,c
 31420  0070F6  D00E               	goto	l1132
 31421  0070F8                     
 31422                           ;i2c.c: 145: {;i2c.c: 146: _i2c_send(data[cntr]);
 31423  0070F8  500A               	movf	__i2c_write@cntr,w,c
 31424  0070FA  0D01               	mullw	1
 31425  0070FC  50F3               	movf	prodl,w,c
 31426  0070FE  2406               	addwf	__i2c_write@data,w,c
 31427  007100  6ED9               	movwf	fsr2l,c
 31428  007102  50F4               	movf	prodh,w,c
 31429  007104  2007               	addwfc	__i2c_write@data+1,w,c
 31430  007106  6EDA               	movwf	fsr2h,c
 31431  007108  50DF               	movf	indf2,w,c
 31432  00710A  EC46  F03D         	call	__i2c_send
 31433                           
 31434                           ;i2c.c: 147: _i2c_wait_idle();
 31435  00710E  ECD5  F035         	call	__i2c_wait_idle	;wreg free
 31436  007112  2A0A               	incf	__i2c_write@cntr,f,c
 31437  007114                     l1132:
 31438  007114  5008               	movf	__i2c_write@length,w,c
 31439  007116  5C0A               	subwf	__i2c_write@cntr,w,c
 31440  007118  A0D8               	btfss	status,0,c
 31441  00711A  D7EE               	goto	l1133
 31442                           
 31443                           ;i2c.c: 148: };i2c.c: 150: _i2c_stop();
 31444  00711C  EC3E  F03D         	call	__i2c_stop	;wreg free
 31445  007120  0012               	return		;funcret
 31446  007122                     __end_of__i2c_write:
 31447                           	opt stack 0
 31448                           tosu	equ	0xFFF
 31449                           tosh	equ	0xFFE
 31450                           tosl	equ	0xFFD
 31451                           pclath	equ	0xFFA
 31452                           tblptru	equ	0xFF8
 31453                           tblptrh	equ	0xFF7
 31454                           tblptrl	equ	0xFF6
 31455                           tablat	equ	0xFF5
 31456                           prodh	equ	0xFF4
 31457                           prodl	equ	0xFF3
 31458                           intcon	equ	0xFF2
 31459                           intcon2	equ	0xFF1
 31460                           intcon3	equ	0xFF0
 31461                           indf0	equ	0xFEF
 31462                           postinc0	equ	0xFEE
 31463                           fsr0h	equ	0xFEA
 31464                           fsr0l	equ	0xFE9
 31465                           wreg	equ	0xFE8
 31466                           indf1	equ	0xFE7
 31467                           postdec1	equ	0xFE5
 31468                           plusw1	equ	0xFE3
 31469                           fsr1h	equ	0xFE2
 31470                           fsr1l	equ	0xFE1
 31471                           indf2	equ	0xFDF
 31472                           postinc2	equ	0xFDE
 31473                           postdec2	equ	0xFDD
 31474                           plusw2	equ	0xFDB
 31475                           fsr2h	equ	0xFDA
 31476                           fsr2l	equ	0xFD9
 31477                           status	equ	0xFD8
 31478                           
 31479 ;; *************** function __i2c_wait_idle *****************
 31480 ;; Defined at:
 31481 ;;		line 48 in file "i2c.c"
 31482 ;; Parameters:    Size  Location     Type
 31483 ;;		None
 31484 ;; Auto vars:     Size  Location     Type
 31485 ;;		None
 31486 ;; Return value:  Size  Location     Type
 31487 ;;                  1    wreg      void 
 31488 ;; Registers used:
 31489 ;;		wreg, status,2, status,0
 31490 ;; Tracked objects:
 31491 ;;		On entry : 0/0
 31492 ;;		On exit  : 0/0
 31493 ;;		Unchanged: 0/0
 31494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31497 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31498 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31499 ;;Total ram usage:        5 bytes
 31500 ;; Hardware stack levels used:    1
 31501 ;; This function calls:
 31502 ;;		Nothing
 31503 ;; This function is called by:
 31504 ;;		__i2c_write
 31505 ;;		__i2c_read
 31506 ;;		_i2c_display_write_fixed
 31507 ;;		_i2c_display_write
 31508 ;; This function uses a non-reentrant model
 31509 ;;
 31510                           
 31511                           	psect	text156
 31512  006BAA                     __ptext156:
 31513                           	opt stack 0
 31514  006BAA                     __i2c_wait_idle:
 31515                           	opt stack 27
 31516                           
 31517                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31518                           
 31519                           ;incstack = 0
 31520  006BAA  A4C7               	btfss	4039,2,c	;volatile
 31521  006BAC  D003               	goto	u7320
 31522  006BAE  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31523  006BB0  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31524  006BB2  D001               	goto	u7328
 31525  006BB4                     u7320:
 31526  006BB4  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31527  006BB6                     u7328:
 31528  006BB6  A0C5               	btfss	4037,0,c	;volatile
 31529  006BB8  D003               	goto	u7330
 31530  006BBA  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31531  006BBC  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31532  006BBE  D001               	goto	u7338
 31533  006BC0                     u7330:
 31534  006BC0  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31535  006BC2                     u7338:
 31536  006BC2  A2C5               	btfss	4037,1,c	;volatile
 31537  006BC4  D003               	goto	u7340
 31538  006BC6  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31539  006BC8  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31540  006BCA  D001               	goto	u7348
 31541  006BCC                     u7340:
 31542  006BCC  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31543  006BCE                     u7348:
 31544  006BCE  A4C5               	btfss	4037,2,c	;volatile
 31545  006BD0  D003               	goto	u7350
 31546  006BD2  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31547  006BD4  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31548  006BD6  D001               	goto	u7358
 31549  006BD8                     u7350:
 31550  006BD8  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31551  006BDA                     u7358:
 31552  006BDA  A6C5               	btfss	4037,3,c	;volatile
 31553  006BDC  D003               	goto	u7360
 31554  006BDE  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31555  006BE0  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31556  006BE2  D001               	goto	u7368
 31557  006BE4                     u7360:
 31558  006BE4  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31559  006BE6                     u7368:
 31560  006BE6  A8C5               	btfss	4037,4,c	;volatile
 31561  006BE8  D002               	goto	u7370
 31562  006BEA  0E01               	movlw	1
 31563  006BEC  D001               	goto	u7376
 31564  006BEE                     u7370:
 31565  006BEE  0E00               	movlw	0
 31566  006BF0                     u7376:
 31567  006BF0  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31568  006BF2  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31569  006BF4  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31570  006BF6  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31571  006BF8  1001               	iorwf	??__i2c_wait_idle,w,c
 31572  006BFA  0900               	iorlw	0
 31573  006BFC  B4D8               	btfsc	status,2,c
 31574  006BFE  0012               	return	
 31575  006C00  D7D4               	goto	__i2c_wait_idle
 31576  006C02                     __end_of__i2c_wait_idle:
 31577                           	opt stack 0
 31578                           tosu	equ	0xFFF
 31579                           tosh	equ	0xFFE
 31580                           tosl	equ	0xFFD
 31581                           pclath	equ	0xFFA
 31582                           tblptru	equ	0xFF8
 31583                           tblptrh	equ	0xFF7
 31584                           tblptrl	equ	0xFF6
 31585                           tablat	equ	0xFF5
 31586                           prodh	equ	0xFF4
 31587                           prodl	equ	0xFF3
 31588                           intcon	equ	0xFF2
 31589                           intcon2	equ	0xFF1
 31590                           intcon3	equ	0xFF0
 31591                           indf0	equ	0xFEF
 31592                           postinc0	equ	0xFEE
 31593                           fsr0h	equ	0xFEA
 31594                           fsr0l	equ	0xFE9
 31595                           wreg	equ	0xFE8
 31596                           indf1	equ	0xFE7
 31597                           postdec1	equ	0xFE5
 31598                           plusw1	equ	0xFE3
 31599                           fsr1h	equ	0xFE2
 31600                           fsr1l	equ	0xFE1
 31601                           indf2	equ	0xFDF
 31602                           postinc2	equ	0xFDE
 31603                           postdec2	equ	0xFDD
 31604                           plusw2	equ	0xFDB
 31605                           fsr2h	equ	0xFDA
 31606                           fsr2l	equ	0xFD9
 31607                           status	equ	0xFD8
 31608                           
 31609 ;; *************** function __i2c_stop *****************
 31610 ;; Defined at:
 31611 ;;		line 75 in file "i2c.c"
 31612 ;; Parameters:    Size  Location     Type
 31613 ;;		None
 31614 ;; Auto vars:     Size  Location     Type
 31615 ;;		None
 31616 ;; Return value:  Size  Location     Type
 31617 ;;                  1    wreg      void 
 31618 ;; Registers used:
 31619 ;;		None
 31620 ;; Tracked objects:
 31621 ;;		On entry : 0/0
 31622 ;;		On exit  : 0/0
 31623 ;;		Unchanged: 0/0
 31624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31629 ;;Total ram usage:        0 bytes
 31630 ;; Hardware stack levels used:    1
 31631 ;; This function calls:
 31632 ;;		Nothing
 31633 ;; This function is called by:
 31634 ;;		__i2c_write
 31635 ;;		__i2c_read
 31636 ;;		_i2c_display_write_fixed
 31637 ;;		_i2c_display_write
 31638 ;; This function uses a non-reentrant model
 31639 ;;
 31640                           
 31641                           	psect	text157
 31642  007A7C                     __ptext157:
 31643                           	opt stack 0
 31644  007A7C                     __i2c_stop:
 31645                           	opt stack 27
 31646                           
 31647                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 31648                           
 31649                           ;incstack = 0
 31650  007A7C  84C5               	bsf	4037,2,c	;volatile
 31651  007A7E  A4C5               	btfss	4037,2,c	;volatile
 31652  007A80  0012               	return	
 31653  007A82  D7FD               	goto	l1101
 31654  007A84                     __end_of__i2c_stop:
 31655                           	opt stack 0
 31656                           tosu	equ	0xFFF
 31657                           tosh	equ	0xFFE
 31658                           tosl	equ	0xFFD
 31659                           pclath	equ	0xFFA
 31660                           tblptru	equ	0xFF8
 31661                           tblptrh	equ	0xFF7
 31662                           tblptrl	equ	0xFF6
 31663                           tablat	equ	0xFF5
 31664                           prodh	equ	0xFF4
 31665                           prodl	equ	0xFF3
 31666                           intcon	equ	0xFF2
 31667                           intcon2	equ	0xFF1
 31668                           intcon3	equ	0xFF0
 31669                           indf0	equ	0xFEF
 31670                           postinc0	equ	0xFEE
 31671                           fsr0h	equ	0xFEA
 31672                           fsr0l	equ	0xFE9
 31673                           wreg	equ	0xFE8
 31674                           indf1	equ	0xFE7
 31675                           postdec1	equ	0xFE5
 31676                           plusw1	equ	0xFE3
 31677                           fsr1h	equ	0xFE2
 31678                           fsr1l	equ	0xFE1
 31679                           indf2	equ	0xFDF
 31680                           postinc2	equ	0xFDE
 31681                           postdec2	equ	0xFDD
 31682                           plusw2	equ	0xFDB
 31683                           fsr2h	equ	0xFDA
 31684                           fsr2l	equ	0xFD9
 31685                           status	equ	0xFD8
 31686                           
 31687 ;; *************** function __i2c_start *****************
 31688 ;; Defined at:
 31689 ;;		line 54 in file "i2c.c"
 31690 ;; Parameters:    Size  Location     Type
 31691 ;;		None
 31692 ;; Auto vars:     Size  Location     Type
 31693 ;;		None
 31694 ;; Return value:  Size  Location     Type
 31695 ;;                  1    wreg      void 
 31696 ;; Registers used:
 31697 ;;		None
 31698 ;; Tracked objects:
 31699 ;;		On entry : 0/0
 31700 ;;		On exit  : 0/0
 31701 ;;		Unchanged: 0/0
 31702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31707 ;;Total ram usage:        0 bytes
 31708 ;; Hardware stack levels used:    1
 31709 ;; This function calls:
 31710 ;;		Nothing
 31711 ;; This function is called by:
 31712 ;;		__i2c_write
 31713 ;;		__i2c_read
 31714 ;;		_i2c_display_write_fixed
 31715 ;;		_i2c_display_write
 31716 ;; This function uses a non-reentrant model
 31717 ;;
 31718                           
 31719                           	psect	text158
 31720  007A84                     __ptext158:
 31721                           	opt stack 0
 31722  007A84                     __i2c_start:
 31723                           	opt stack 27
 31724                           
 31725                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 31726                           
 31727                           ;incstack = 0
 31728  007A84  80C5               	bsf	4037,0,c	;volatile
 31729  007A86  A0C5               	btfss	4037,0,c	;volatile
 31730  007A88  0012               	return	
 31731  007A8A  D7FD               	goto	l1086
 31732  007A8C                     __end_of__i2c_start:
 31733                           	opt stack 0
 31734                           tosu	equ	0xFFF
 31735                           tosh	equ	0xFFE
 31736                           tosl	equ	0xFFD
 31737                           pclath	equ	0xFFA
 31738                           tblptru	equ	0xFF8
 31739                           tblptrh	equ	0xFF7
 31740                           tblptrl	equ	0xFF6
 31741                           tablat	equ	0xFF5
 31742                           prodh	equ	0xFF4
 31743                           prodl	equ	0xFF3
 31744                           intcon	equ	0xFF2
 31745                           intcon2	equ	0xFF1
 31746                           intcon3	equ	0xFF0
 31747                           indf0	equ	0xFEF
 31748                           postinc0	equ	0xFEE
 31749                           fsr0h	equ	0xFEA
 31750                           fsr0l	equ	0xFE9
 31751                           wreg	equ	0xFE8
 31752                           indf1	equ	0xFE7
 31753                           postdec1	equ	0xFE5
 31754                           plusw1	equ	0xFE3
 31755                           fsr1h	equ	0xFE2
 31756                           fsr1l	equ	0xFE1
 31757                           indf2	equ	0xFDF
 31758                           postinc2	equ	0xFDE
 31759                           postdec2	equ	0xFDD
 31760                           plusw2	equ	0xFDB
 31761                           fsr2h	equ	0xFDA
 31762                           fsr2l	equ	0xFD9
 31763                           status	equ	0xFD8
 31764                           
 31765 ;; *************** function __i2c_send *****************
 31766 ;; Defined at:
 31767 ;;		line 61 in file "i2c.c"
 31768 ;; Parameters:    Size  Location     Type
 31769 ;;  dat             1    wreg     unsigned char 
 31770 ;; Auto vars:     Size  Location     Type
 31771 ;;  dat             1    0[COMRAM] unsigned char 
 31772 ;; Return value:  Size  Location     Type
 31773 ;;                  1    wreg      void 
 31774 ;; Registers used:
 31775 ;;		wreg
 31776 ;; Tracked objects:
 31777 ;;		On entry : 0/0
 31778 ;;		On exit  : 0/0
 31779 ;;		Unchanged: 0/0
 31780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31785 ;;Total ram usage:        1 bytes
 31786 ;; Hardware stack levels used:    1
 31787 ;; This function calls:
 31788 ;;		Nothing
 31789 ;; This function is called by:
 31790 ;;		__i2c_write
 31791 ;;		__i2c_read
 31792 ;;		_i2c_display_write_fixed
 31793 ;;		_i2c_display_write
 31794 ;; This function uses a non-reentrant model
 31795 ;;
 31796                           
 31797                           	psect	text159
 31798  007A8C                     __ptext159:
 31799                           	opt stack 0
 31800  007A8C                     __i2c_send:
 31801                           	opt stack 27
 31802                           
 31803                           ;incstack = 0
 31804                           ;__i2c_send@dat stored from wreg
 31805  007A8C  6E01               	movwf	__i2c_send@dat,c
 31806                           
 31807                           ;i2c.c: 63: SSP1BUF = dat;
 31808  007A8E  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 31809  007A92  0012               	return		;funcret
 31810  007A94                     __end_of__i2c_send:
 31811                           	opt stack 0
 31812                           tosu	equ	0xFFF
 31813                           tosh	equ	0xFFE
 31814                           tosl	equ	0xFFD
 31815                           pclath	equ	0xFFA
 31816                           tblptru	equ	0xFF8
 31817                           tblptrh	equ	0xFF7
 31818                           tblptrl	equ	0xFF6
 31819                           tablat	equ	0xFF5
 31820                           prodh	equ	0xFF4
 31821                           prodl	equ	0xFF3
 31822                           intcon	equ	0xFF2
 31823                           intcon2	equ	0xFF1
 31824                           intcon3	equ	0xFF0
 31825                           indf0	equ	0xFEF
 31826                           postinc0	equ	0xFEE
 31827                           fsr0h	equ	0xFEA
 31828                           fsr0l	equ	0xFE9
 31829                           wreg	equ	0xFE8
 31830                           indf1	equ	0xFE7
 31831                           postdec1	equ	0xFE5
 31832                           plusw1	equ	0xFE3
 31833                           fsr1h	equ	0xFE2
 31834                           fsr1l	equ	0xFE1
 31835                           indf2	equ	0xFDF
 31836                           postinc2	equ	0xFDE
 31837                           postdec2	equ	0xFDD
 31838                           plusw2	equ	0xFDB
 31839                           fsr2h	equ	0xFDA
 31840                           fsr2l	equ	0xFD9
 31841                           status	equ	0xFD8
 31842                           
 31843 ;; *************** function __parse_command_long *****************
 31844 ;; Defined at:
 31845 ;;		line 455 in file "api.c"
 31846 ;; Parameters:    Size  Location     Type
 31847 ;;  data            2   51[BANK0 ] PTR unsigned char 
 31848 ;;		 -> RAM(3759), 
 31849 ;; Auto vars:     Size  Location     Type
 31850 ;;  length          1   53[BANK0 ] unsigned char 
 31851 ;; Return value:  Size  Location     Type
 31852 ;;                  1    wreg      unsigned char 
 31853 ;; Registers used:
 31854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31855 ;; Tracked objects:
 31856 ;;		On entry : 0/0
 31857 ;;		On exit  : 0/0
 31858 ;;		Unchanged: 0/0
 31859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31863 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31864 ;;Total ram usage:        3 bytes
 31865 ;; Hardware stack levels used:    1
 31866 ;; Hardware stack levels required when called:    9
 31867 ;; This function calls:
 31868 ;;		__parse_file_append
 31869 ;;		__parse_file_create
 31870 ;;		__parse_file_delete
 31871 ;;		__parse_file_modify
 31872 ;;		__parse_file_rename
 31873 ;;		__parse_file_truncate
 31874 ;; This function is called by:
 31875 ;;		_api_parse
 31876 ;; This function uses a non-reentrant model
 31877 ;;
 31878                           
 31879                           	psect	text160
 31880  005B0A                     __ptext160:
 31881                           	opt stack 0
 31882  005B0A                     __parse_command_long:
 31883                           	opt stack 19
 31884                           
 31885                           ;api.c: 457: uint8_t length = 65;
 31886                           
 31887                           ;incstack = 0
 31888  005B0A  0E41               	movlw	65
 31889  005B0C  0100               	movlb	0	; () banked
 31890  005B0E  6FF3               	movwf	__parse_command_long@length& (0+255),b
 31891                           
 31892                           ;api.c: 459: switch(data[0])
 31893  005B10  D02C               	goto	l2470
 31894  005B12                     
 31895                           ; BSR set to: 0
 31896                           ;api.c: 462: length = _parse_file_truncate(data);
 31897                           
 31898                           ; BSR set to: 0
 31899  005B12  C0F1  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 31900  005B16  C0F2  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 31901  005B1A  EC5D  F03D         	call	__parse_file_truncate	;wreg free
 31902  005B1E  D022               	goto	L40
 31903  005B20                     
 31904                           ; BSR set to: 0
 31905                           ;api.c: 466: length = _parse_file_delete(data);
 31906                           
 31907                           ; BSR set to: 0
 31908  005B20  C0F1  F037         	movff	__parse_command_long@data,__parse_file_delete@data
 31909  005B24  C0F2  F038         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 31910  005B28  EC84  F037         	call	__parse_file_delete	;wreg free
 31911  005B2C  D01B               	goto	L40
 31912  005B2E                     
 31913                           ; BSR set to: 0
 31914                           ;api.c: 470: length = _parse_file_create(data);
 31915                           
 31916                           ; BSR set to: 0
 31917  005B2E  C0F1  F048         	movff	__parse_command_long@data,__parse_file_create@data
 31918  005B32  C0F2  F049         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 31919  005B36  ECB5  F032         	call	__parse_file_create	;wreg free
 31920  005B3A  D014               	goto	L40
 31921  005B3C                     
 31922                           ; BSR set to: 0
 31923                           ;api.c: 474: length = _parse_file_rename(data);
 31924                           
 31925                           ; BSR set to: 0
 31926  005B3C  C0F1  F05D         	movff	__parse_command_long@data,__parse_file_rename@data
 31927  005B40  C0F2  F05E         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 31928  005B44  EC20  F033         	call	__parse_file_rename	;wreg free
 31929  005B48  D00D               	goto	L40
 31930  005B4A                     
 31931                           ; BSR set to: 0
 31932                           ;api.c: 478: length = _parse_file_append(data);
 31933                           
 31934                           ; BSR set to: 0
 31935  005B4A  C0F1  F043         	movff	__parse_command_long@data,__parse_file_append@data
 31936  005B4E  C0F2  F044         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 31937  005B52  ECB1  F02F         	call	__parse_file_append	;wreg free
 31938  005B56  D006               	goto	L40
 31939  005B58                     
 31940                           ; BSR set to: 0
 31941                           ;api.c: 482: length = _parse_file_modify(data);
 31942                           
 31943                           ; BSR set to: 0
 31944  005B58  C0F1  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 31945  005B5C  C0F2  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 31946  005B60  EC5F  F03D         	call	__parse_file_modify	;wreg free
 31947  005B64                     L40:
 31948  005B64  0100               	movlb	0	; () banked
 31949  005B66  6FF3               	movwf	__parse_command_long@length& (0+255),b
 31950                           
 31951                           ; BSR set to: 0
 31952                           ;api.c: 484: }
 31953                           
 31954                           ;api.c: 483: break;
 31955  005B68  D017               	goto	l2472
 31956  005B6A                     l2470:
 31957                           
 31958                           ; BSR set to: 0
 31959                           
 31960                           ; BSR set to: 0
 31961  005B6A  C0F1  FFD9         	movff	__parse_command_long@data,fsr2l
 31962  005B6E  C0F2  FFDA         	movff	__parse_command_long@data+1,fsr2h
 31963  005B72  50DF               	movf	indf2,w,c
 31964                           
 31965                           ; Switch size 1, requested type "space"
 31966                           ; Number of cases is 6, Range of values is 80 to 85
 31967                           ; switch strategies available:
 31968                           ; Name         Instructions Cycles
 31969                           ; simple_byte           19    10 (average)
 31970                           ;	Chosen strategy is simple_byte
 31971  005B74  0A50               	xorlw	80	; case 80
 31972  005B76  B4D8               	btfsc	status,2,c
 31973  005B78  D7CC               	goto	l2471
 31974  005B7A  0A01               	xorlw	1	; case 81
 31975  005B7C  B4D8               	btfsc	status,2,c
 31976  005B7E  D7D0               	goto	l2473
 31977  005B80  0A03               	xorlw	3	; case 82
 31978  005B82  B4D8               	btfsc	status,2,c
 31979  005B84  D7D4               	goto	l2474
 31980  005B86  0A01               	xorlw	1	; case 83
 31981  005B88  B4D8               	btfsc	status,2,c
 31982  005B8A  D7D8               	goto	l2475
 31983  005B8C  0A07               	xorlw	7	; case 84
 31984  005B8E  B4D8               	btfsc	status,2,c
 31985  005B90  D7DC               	goto	l2476
 31986  005B92  0A01               	xorlw	1	; case 85
 31987  005B94  B4D8               	btfsc	status,2,c
 31988  005B96  D7E0               	goto	l2477
 31989  005B98                     l2472:
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;api.c: 486: return length;
 31993                           
 31994                           ; BSR set to: 0
 31995  005B98  51F3               	movf	__parse_command_long@length& (0+255),w,b
 31996  005B9A  0012               	return	
 31997  005B9C                     __end_of__parse_command_long:
 31998                           	opt stack 0
 31999                           tosu	equ	0xFFF
 32000                           tosh	equ	0xFFE
 32001                           tosl	equ	0xFFD
 32002                           pclath	equ	0xFFA
 32003                           tblptru	equ	0xFF8
 32004                           tblptrh	equ	0xFF7
 32005                           tblptrl	equ	0xFF6
 32006                           tablat	equ	0xFF5
 32007                           prodh	equ	0xFF4
 32008                           prodl	equ	0xFF3
 32009                           intcon	equ	0xFF2
 32010                           intcon2	equ	0xFF1
 32011                           intcon3	equ	0xFF0
 32012                           indf0	equ	0xFEF
 32013                           postinc0	equ	0xFEE
 32014                           fsr0h	equ	0xFEA
 32015                           fsr0l	equ	0xFE9
 32016                           wreg	equ	0xFE8
 32017                           indf1	equ	0xFE7
 32018                           postdec1	equ	0xFE5
 32019                           plusw1	equ	0xFE3
 32020                           fsr1h	equ	0xFE2
 32021                           fsr1l	equ	0xFE1
 32022                           indf2	equ	0xFDF
 32023                           postinc2	equ	0xFDE
 32024                           postdec2	equ	0xFDD
 32025                           plusw2	equ	0xFDB
 32026                           fsr2h	equ	0xFDA
 32027                           fsr2l	equ	0xFD9
 32028                           status	equ	0xFD8
 32029                           
 32030 ;; *************** function __parse_file_truncate *****************
 32031 ;; Defined at:
 32032 ;;		line 489 in file "api.c"
 32033 ;; Parameters:    Size  Location     Type
 32034 ;;  data            2    0[COMRAM] PTR unsigned char 
 32035 ;;		 -> RAM(3759), 
 32036 ;; Auto vars:     Size  Location     Type
 32037 ;;		None
 32038 ;; Return value:  Size  Location     Type
 32039 ;;                  1    wreg      unsigned char 
 32040 ;; Registers used:
 32041 ;;		wreg
 32042 ;; Tracked objects:
 32043 ;;		On entry : 0/0
 32044 ;;		On exit  : 0/0
 32045 ;;		Unchanged: 0/0
 32046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32051 ;;Total ram usage:        2 bytes
 32052 ;; Hardware stack levels used:    1
 32053 ;; This function calls:
 32054 ;;		Nothing
 32055 ;; This function is called by:
 32056 ;;		__parse_command_long
 32057 ;; This function uses a non-reentrant model
 32058 ;;
 32059                           
 32060                           	psect	text161
 32061  007ABA                     __ptext161:
 32062                           	opt stack 0
 32063  007ABA                     __parse_file_truncate:
 32064                           	opt stack 27
 32065                           
 32066                           ;api.c: 493: return 65;
 32067                           
 32068                           ; BSR set to: 0
 32069                           ;incstack = 0
 32070  007ABA  0E41               	movlw	65
 32071  007ABC  0012               	return	
 32072  007ABE                     __end_of__parse_file_truncate:
 32073                           	opt stack 0
 32074                           tosu	equ	0xFFF
 32075                           tosh	equ	0xFFE
 32076                           tosl	equ	0xFFD
 32077                           pclath	equ	0xFFA
 32078                           tblptru	equ	0xFF8
 32079                           tblptrh	equ	0xFF7
 32080                           tblptrl	equ	0xFF6
 32081                           tablat	equ	0xFF5
 32082                           prodh	equ	0xFF4
 32083                           prodl	equ	0xFF3
 32084                           intcon	equ	0xFF2
 32085                           intcon2	equ	0xFF1
 32086                           intcon3	equ	0xFF0
 32087                           indf0	equ	0xFEF
 32088                           postinc0	equ	0xFEE
 32089                           fsr0h	equ	0xFEA
 32090                           fsr0l	equ	0xFE9
 32091                           wreg	equ	0xFE8
 32092                           indf1	equ	0xFE7
 32093                           postdec1	equ	0xFE5
 32094                           plusw1	equ	0xFE3
 32095                           fsr1h	equ	0xFE2
 32096                           fsr1l	equ	0xFE1
 32097                           indf2	equ	0xFDF
 32098                           postinc2	equ	0xFDE
 32099                           postdec2	equ	0xFDD
 32100                           plusw2	equ	0xFDB
 32101                           fsr2h	equ	0xFDA
 32102                           fsr2l	equ	0xFD9
 32103                           status	equ	0xFD8
 32104                           
 32105 ;; *************** function __parse_file_rename *****************
 32106 ;; Defined at:
 32107 ;;		line 522 in file "api.c"
 32108 ;; Parameters:    Size  Location     Type
 32109 ;;  data            2   92[COMRAM] PTR unsigned char 
 32110 ;;		 -> RAM(3759), 
 32111 ;; Auto vars:     Size  Location     Type
 32112 ;;		None
 32113 ;; Return value:  Size  Location     Type
 32114 ;;                  1    wreg      unsigned char 
 32115 ;; Registers used:
 32116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32117 ;; Tracked objects:
 32118 ;;		On entry : 0/0
 32119 ;;		On exit  : 0/0
 32120 ;;		Unchanged: 0/0
 32121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32126 ;;Total ram usage:        3 bytes
 32127 ;; Hardware stack levels used:    1
 32128 ;; Hardware stack levels required when called:    8
 32129 ;; This function calls:
 32130 ;;		_fat_rename_file
 32131 ;; This function is called by:
 32132 ;;		__parse_command_long
 32133 ;; This function uses a non-reentrant model
 32134 ;;
 32135                           
 32136                           	psect	text162
 32137  006640                     __ptext162:
 32138                           	opt stack 0
 32139  006640                     __parse_file_rename:
 32140                           	opt stack 19
 32141                           
 32142                           ;api.c: 525: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 32143                           
 32144                           ;incstack = 0
 32145  006640  C05D  FFD9         	movff	__parse_file_rename@data,fsr2l
 32146  006644  C05E  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 32147  006648  0E53               	movlw	83
 32148  00664A  18DE               	xorwf	postinc2,w,c
 32149  00664C  A4D8               	btfss	status,2,c
 32150  00664E  D014               	goto	u8990
 32151  006650  EE20 F00D          	lfsr	2,13
 32152  006654  505D               	movf	__parse_file_rename@data,w,c
 32153  006656  26D9               	addwf	fsr2l,f,c
 32154  006658  505E               	movf	__parse_file_rename@data+1,w,c
 32155  00665A  22DA               	addwfc	fsr2h,f,c
 32156  00665C  0E7E               	movlw	126
 32157  00665E  18DE               	xorwf	postinc2,w,c
 32158  006660  A4D8               	btfss	status,2,c
 32159  006662  D00A               	goto	u8990
 32160  006664  EE20 F00E          	lfsr	2,14
 32161  006668  505D               	movf	__parse_file_rename@data,w,c
 32162  00666A  26D9               	addwf	fsr2l,f,c
 32163  00666C  505E               	movf	__parse_file_rename@data+1,w,c
 32164  00666E  22DA               	addwfc	fsr2h,f,c
 32165  006670  0E18               	movlw	24
 32166  006672  18DE               	xorwf	postinc2,w,c
 32167  006674  B4D8               	btfsc	status,2,c
 32168  006676  D002               	goto	l2496
 32169  006678                     u8990:
 32170                           
 32171                           ;api.c: 526: {;api.c: 527: return 15;
 32172  006678  0E0F               	movlw	15
 32173  00667A  0012               	return	
 32174  00667C                     l2496:
 32175                           
 32176                           ;api.c: 528: };api.c: 531: fat_rename_file(data[1], &data[2], &data[10]);
 32177  00667C  0E02               	movlw	2
 32178  00667E  245D               	addwf	__parse_file_rename@data,w,c
 32179  006680  6E37               	movwf	fat_rename_file@name,c
 32180  006682  0E00               	movlw	0
 32181  006684  205E               	addwfc	__parse_file_rename@data+1,w,c
 32182  006686  6E38               	movwf	fat_rename_file@name+1,c
 32183  006688  0E0A               	movlw	10
 32184  00668A  245D               	addwf	__parse_file_rename@data,w,c
 32185  00668C  6E39               	movwf	fat_rename_file@extension,c
 32186  00668E  0E00               	movlw	0
 32187  006690  205E               	addwfc	__parse_file_rename@data+1,w,c
 32188  006692  6E3A               	movwf	fat_rename_file@extension+1,c
 32189  006694  EE20 F001          	lfsr	2,1
 32190  006698  505D               	movf	__parse_file_rename@data,w,c
 32191  00669A  26D9               	addwf	fsr2l,f,c
 32192  00669C  505E               	movf	__parse_file_rename@data+1,w,c
 32193  00669E  22DA               	addwfc	fsr2h,f,c
 32194  0066A0  50DF               	movf	indf2,w,c
 32195  0066A2  ECCE  F02D         	call	_fat_rename_file
 32196                           
 32197                           ;api.c: 532: return 15;
 32198  0066A6  0E0F               	movlw	15
 32199  0066A8  0012               	return	
 32200  0066AA                     __end_of__parse_file_rename:
 32201                           	opt stack 0
 32202                           tosu	equ	0xFFF
 32203                           tosh	equ	0xFFE
 32204                           tosl	equ	0xFFD
 32205                           pclath	equ	0xFFA
 32206                           tblptru	equ	0xFF8
 32207                           tblptrh	equ	0xFF7
 32208                           tblptrl	equ	0xFF6
 32209                           tablat	equ	0xFF5
 32210                           prodh	equ	0xFF4
 32211                           prodl	equ	0xFF3
 32212                           intcon	equ	0xFF2
 32213                           intcon2	equ	0xFF1
 32214                           intcon3	equ	0xFF0
 32215                           indf0	equ	0xFEF
 32216                           postinc0	equ	0xFEE
 32217                           fsr0h	equ	0xFEA
 32218                           fsr0l	equ	0xFE9
 32219                           wreg	equ	0xFE8
 32220                           indf1	equ	0xFE7
 32221                           postdec1	equ	0xFE5
 32222                           plusw1	equ	0xFE3
 32223                           fsr1h	equ	0xFE2
 32224                           fsr1l	equ	0xFE1
 32225                           indf2	equ	0xFDF
 32226                           postinc2	equ	0xFDE
 32227                           postdec2	equ	0xFDD
 32228                           plusw2	equ	0xFDB
 32229                           fsr2h	equ	0xFDA
 32230                           fsr2l	equ	0xFD9
 32231                           status	equ	0xFD8
 32232                           
 32233 ;; *************** function _fat_rename_file *****************
 32234 ;; Defined at:
 32235 ;;		line 536 in file "fat16.c"
 32236 ;; Parameters:    Size  Location     Type
 32237 ;;  file_number     1    wreg     unsigned char 
 32238 ;;  name            2   54[COMRAM] PTR unsigned char 
 32239 ;;		 -> RAM(3759), 
 32240 ;;  extension       2   56[COMRAM] PTR unsigned char 
 32241 ;;		 -> RAM(3759), 
 32242 ;; Auto vars:     Size  Location     Type
 32243 ;;  file_number     1   58[COMRAM] unsigned char 
 32244 ;;  root           32   59[COMRAM] struct .
 32245 ;;  cntr            1   91[COMRAM] unsigned char 
 32246 ;; Return value:  Size  Location     Type
 32247 ;;                  1    wreg      void 
 32248 ;; Registers used:
 32249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32250 ;; Tracked objects:
 32251 ;;		On entry : 0/0
 32252 ;;		On exit  : 0/0
 32253 ;;		Unchanged: 0/0
 32254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32256 ;;      Locals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32258 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32259 ;;Total ram usage:       38 bytes
 32260 ;; Hardware stack levels used:    1
 32261 ;; Hardware stack levels required when called:    7
 32262 ;; This function calls:
 32263 ;;		__write_root
 32264 ;;		_fat_get_file_information
 32265 ;; This function is called by:
 32266 ;;		__parse_file_rename
 32267 ;; This function uses a non-reentrant model
 32268 ;;
 32269                           
 32270                           	psect	text163
 32271  005B9C                     __ptext163:
 32272                           	opt stack 0
 32273  005B9C                     _fat_rename_file:
 32274                           	opt stack 19
 32275                           
 32276                           ;incstack = 0
 32277                           ;fat_rename_file@file_number stored from wreg
 32278  005B9C  6E3B               	movwf	fat_rename_file@file_number,c
 32279                           
 32280                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 32281  005B9E  0E3C               	movlw	low fat_rename_file@root
 32282  005BA0  6E2F               	movwf	fat_get_file_information@data,c
 32283  005BA2  0E00               	movlw	high fat_rename_file@root
 32284  005BA4  6E30               	movwf	fat_get_file_information@data+1,c
 32285  005BA6  503B               	movf	fat_rename_file@file_number,w,c
 32286  005BA8  EC99  F031         	call	_fat_get_file_information
 32287                           
 32288                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 32289  005BAC  0E00               	movlw	0
 32290  005BAE  6E5C               	movwf	fat_rename_file@cntr,c
 32291  005BB0                     l10817:
 32292  005BB0  0E07               	movlw	7
 32293  005BB2  645C               	cpfsgt	fat_rename_file@cntr,c
 32294  005BB4  D001               	goto	l1849
 32295  005BB6  D014               	goto	u8450
 32296  005BB8                     l1849:
 32297                           
 32298                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 32299  005BB8  505C               	movf	fat_rename_file@cntr,w,c
 32300  005BBA  0D01               	mullw	1
 32301  005BBC  50F3               	movf	prodl,w,c
 32302  005BBE  2437               	addwf	fat_rename_file@name,w,c
 32303  005BC0  6ED9               	movwf	fsr2l,c
 32304  005BC2  50F4               	movf	prodh,w,c
 32305  005BC4  2038               	addwfc	fat_rename_file@name+1,w,c
 32306  005BC6  6EDA               	movwf	fsr2h,c
 32307  005BC8  505C               	movf	fat_rename_file@cntr,w,c
 32308  005BCA  0D01               	mullw	1
 32309  005BCC  0E3C               	movlw	low fat_rename_file@root
 32310  005BCE  24F3               	addwf	prodl,w,c
 32311  005BD0  6EE1               	movwf	fsr1l,c
 32312  005BD2  0E00               	movlw	high fat_rename_file@root
 32313  005BD4  20F4               	addwfc	prodh,w,c
 32314  005BD6  6EE2               	movwf	fsr1h,c
 32315  005BD8  CFDF FFE7          	movff	indf2,indf1
 32316  005BDC  2A5C               	incf	fat_rename_file@cntr,f,c
 32317  005BDE  D7E8               	goto	l10817
 32318  005BE0                     u8450:
 32319                           
 32320                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 32321  005BE0  0E00               	movlw	0
 32322  005BE2  6E5C               	movwf	fat_rename_file@cntr,c
 32323  005BE4                     l10829:
 32324  005BE4  0E02               	movlw	2
 32325  005BE6  645C               	cpfsgt	fat_rename_file@cntr,c
 32326  005BE8  D001               	goto	l1851
 32327  005BEA  D018               	goto	u8470
 32328  005BEC                     l1851:
 32329                           
 32330                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 32331  005BEC  505C               	movf	fat_rename_file@cntr,w,c
 32332  005BEE  0D01               	mullw	1
 32333  005BF0  50F3               	movf	prodl,w,c
 32334  005BF2  2439               	addwf	fat_rename_file@extension,w,c
 32335  005BF4  6ED9               	movwf	fsr2l,c
 32336  005BF6  50F4               	movf	prodh,w,c
 32337  005BF8  203A               	addwfc	fat_rename_file@extension+1,w,c
 32338  005BFA  6EDA               	movwf	fsr2h,c
 32339  005BFC  505C               	movf	fat_rename_file@cntr,w,c
 32340  005BFE  0D01               	mullw	1
 32341  005C00  0E08               	movlw	8
 32342  005C02  26F3               	addwf	prodl,f,c
 32343  005C04  0E00               	movlw	0
 32344  005C06  22F4               	addwfc	prodh,f,c
 32345  005C08  0E3C               	movlw	low fat_rename_file@root
 32346  005C0A  24F3               	addwf	prodl,w,c
 32347  005C0C  6EE1               	movwf	fsr1l,c
 32348  005C0E  0E00               	movlw	high fat_rename_file@root
 32349  005C10  20F4               	addwfc	prodh,w,c
 32350  005C12  6EE2               	movwf	fsr1h,c
 32351  005C14  CFDF FFE7          	movff	indf2,indf1
 32352  005C18  2A5C               	incf	fat_rename_file@cntr,f,c
 32353  005C1A  D7E4               	goto	l10829
 32354  005C1C                     u8470:
 32355                           
 32356                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 32357  005C1C  0E3C               	movlw	low fat_rename_file@root
 32358  005C1E  6E29               	movwf	__write_root@data,c
 32359  005C20  0E00               	movlw	high fat_rename_file@root
 32360  005C22  6E2A               	movwf	__write_root@data+1,c
 32361  005C24  503B               	movf	fat_rename_file@file_number,w,c
 32362  005C26  EC01  F036         	call	__write_root
 32363  005C2A  0012               	return		;funcret
 32364  005C2C                     __end_of_fat_rename_file:
 32365                           	opt stack 0
 32366                           tosu	equ	0xFFF
 32367                           tosh	equ	0xFFE
 32368                           tosl	equ	0xFFD
 32369                           pclath	equ	0xFFA
 32370                           tblptru	equ	0xFF8
 32371                           tblptrh	equ	0xFF7
 32372                           tblptrl	equ	0xFF6
 32373                           tablat	equ	0xFF5
 32374                           prodh	equ	0xFF4
 32375                           prodl	equ	0xFF3
 32376                           intcon	equ	0xFF2
 32377                           intcon2	equ	0xFF1
 32378                           intcon3	equ	0xFF0
 32379                           indf0	equ	0xFEF
 32380                           postinc0	equ	0xFEE
 32381                           fsr0h	equ	0xFEA
 32382                           fsr0l	equ	0xFE9
 32383                           wreg	equ	0xFE8
 32384                           indf1	equ	0xFE7
 32385                           postdec1	equ	0xFE5
 32386                           plusw1	equ	0xFE3
 32387                           fsr1h	equ	0xFE2
 32388                           fsr1l	equ	0xFE1
 32389                           indf2	equ	0xFDF
 32390                           postinc2	equ	0xFDE
 32391                           postdec2	equ	0xFDD
 32392                           plusw2	equ	0xFDB
 32393                           fsr2h	equ	0xFDA
 32394                           fsr2l	equ	0xFD9
 32395                           status	equ	0xFD8
 32396                           
 32397 ;; *************** function __parse_file_modify *****************
 32398 ;; Defined at:
 32399 ;;		line 548 in file "api.c"
 32400 ;; Parameters:    Size  Location     Type
 32401 ;;  data            2    0[COMRAM] PTR unsigned char 
 32402 ;;		 -> RAM(3759), 
 32403 ;; Auto vars:     Size  Location     Type
 32404 ;;		None
 32405 ;; Return value:  Size  Location     Type
 32406 ;;                  1    wreg      unsigned char 
 32407 ;; Registers used:
 32408 ;;		wreg
 32409 ;; Tracked objects:
 32410 ;;		On entry : 0/0
 32411 ;;		On exit  : 0/0
 32412 ;;		Unchanged: 0/0
 32413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32418 ;;Total ram usage:        2 bytes
 32419 ;; Hardware stack levels used:    1
 32420 ;; This function calls:
 32421 ;;		Nothing
 32422 ;; This function is called by:
 32423 ;;		__parse_command_long
 32424 ;; This function uses a non-reentrant model
 32425 ;;
 32426                           
 32427                           	psect	text164
 32428  007ABE                     __ptext164:
 32429                           	opt stack 0
 32430  007ABE                     __parse_file_modify:
 32431                           	opt stack 27
 32432                           
 32433                           ;api.c: 552: return 65;
 32434                           
 32435                           ;incstack = 0
 32436  007ABE  0E41               	movlw	65
 32437  007AC0  0012               	return	
 32438  007AC2                     __end_of__parse_file_modify:
 32439                           	opt stack 0
 32440                           tosu	equ	0xFFF
 32441                           tosh	equ	0xFFE
 32442                           tosl	equ	0xFFD
 32443                           pclath	equ	0xFFA
 32444                           tblptru	equ	0xFF8
 32445                           tblptrh	equ	0xFF7
 32446                           tblptrl	equ	0xFF6
 32447                           tablat	equ	0xFF5
 32448                           prodh	equ	0xFF4
 32449                           prodl	equ	0xFF3
 32450                           intcon	equ	0xFF2
 32451                           intcon2	equ	0xFF1
 32452                           intcon3	equ	0xFF0
 32453                           indf0	equ	0xFEF
 32454                           postinc0	equ	0xFEE
 32455                           fsr0h	equ	0xFEA
 32456                           fsr0l	equ	0xFE9
 32457                           wreg	equ	0xFE8
 32458                           indf1	equ	0xFE7
 32459                           postdec1	equ	0xFE5
 32460                           plusw1	equ	0xFE3
 32461                           fsr1h	equ	0xFE2
 32462                           fsr1l	equ	0xFE1
 32463                           indf2	equ	0xFDF
 32464                           postinc2	equ	0xFDE
 32465                           postdec2	equ	0xFDD
 32466                           plusw2	equ	0xFDB
 32467                           fsr2h	equ	0xFDA
 32468                           fsr2l	equ	0xFD9
 32469                           status	equ	0xFD8
 32470                           
 32471 ;; *************** function __parse_file_delete *****************
 32472 ;; Defined at:
 32473 ;;		line 496 in file "api.c"
 32474 ;; Parameters:    Size  Location     Type
 32475 ;;  data            2   54[COMRAM] PTR unsigned char 
 32476 ;;		 -> RAM(3759), 
 32477 ;; Auto vars:     Size  Location     Type
 32478 ;;		None
 32479 ;; Return value:  Size  Location     Type
 32480 ;;                  1    wreg      unsigned char 
 32481 ;; Registers used:
 32482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32483 ;; Tracked objects:
 32484 ;;		On entry : 0/0
 32485 ;;		On exit  : 0/0
 32486 ;;		Unchanged: 0/0
 32487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32491 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32492 ;;Total ram usage:        3 bytes
 32493 ;; Hardware stack levels used:    1
 32494 ;; Hardware stack levels required when called:    8
 32495 ;; This function calls:
 32496 ;;		_fat_delete_file
 32497 ;; This function is called by:
 32498 ;;		__parse_command_long
 32499 ;; This function uses a non-reentrant model
 32500 ;;
 32501                           
 32502                           	psect	text165
 32503  006F08                     __ptext165:
 32504                           	opt stack 0
 32505  006F08                     __parse_file_delete:
 32506                           	opt stack 19
 32507                           
 32508                           ;api.c: 499: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 32509                           
 32510                           ;incstack = 0
 32511  006F08  C037  FFD9         	movff	__parse_file_delete@data,fsr2l
 32512  006F0C  C038  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 32513  006F10  0E51               	movlw	81
 32514  006F12  18DE               	xorwf	postinc2,w,c
 32515  006F14  A4D8               	btfss	status,2,c
 32516  006F16  D014               	goto	u8930
 32517  006F18  EE20 F002          	lfsr	2,2
 32518  006F1C  5037               	movf	__parse_file_delete@data,w,c
 32519  006F1E  26D9               	addwf	fsr2l,f,c
 32520  006F20  5038               	movf	__parse_file_delete@data+1,w,c
 32521  006F22  22DA               	addwfc	fsr2h,f,c
 32522  006F24  0E66               	movlw	102
 32523  006F26  18DE               	xorwf	postinc2,w,c
 32524  006F28  A4D8               	btfss	status,2,c
 32525  006F2A  D00A               	goto	u8930
 32526  006F2C  EE20 F003          	lfsr	2,3
 32527  006F30  5037               	movf	__parse_file_delete@data,w,c
 32528  006F32  26D9               	addwf	fsr2l,f,c
 32529  006F34  5038               	movf	__parse_file_delete@data+1,w,c
 32530  006F36  22DA               	addwfc	fsr2h,f,c
 32531  006F38  0EA0               	movlw	160
 32532  006F3A  18DE               	xorwf	postinc2,w,c
 32533  006F3C  B4D8               	btfsc	status,2,c
 32534  006F3E  D002               	goto	l2484
 32535  006F40                     u8930:
 32536                           
 32537                           ;api.c: 500: {;api.c: 501: return 4;
 32538  006F40  0E04               	movlw	4
 32539  006F42  0012               	return	
 32540  006F44                     l2484:
 32541                           
 32542                           ;api.c: 502: };api.c: 505: fat_delete_file(data[1]);
 32543  006F44  EE20 F001          	lfsr	2,1
 32544  006F48  5037               	movf	__parse_file_delete@data,w,c
 32545  006F4A  26D9               	addwf	fsr2l,f,c
 32546  006F4C  5038               	movf	__parse_file_delete@data+1,w,c
 32547  006F4E  22DA               	addwfc	fsr2h,f,c
 32548  006F50  50DF               	movf	indf2,w,c
 32549  006F52  EC55  F033         	call	_fat_delete_file
 32550                           
 32551                           ;api.c: 506: return 4;
 32552  006F56  0E04               	movlw	4
 32553  006F58  0012               	return	
 32554  006F5A                     __end_of__parse_file_delete:
 32555                           	opt stack 0
 32556                           tosu	equ	0xFFF
 32557                           tosh	equ	0xFFE
 32558                           tosl	equ	0xFFD
 32559                           pclath	equ	0xFFA
 32560                           tblptru	equ	0xFF8
 32561                           tblptrh	equ	0xFF7
 32562                           tblptrl	equ	0xFF6
 32563                           tablat	equ	0xFF5
 32564                           prodh	equ	0xFF4
 32565                           prodl	equ	0xFF3
 32566                           intcon	equ	0xFF2
 32567                           intcon2	equ	0xFF1
 32568                           intcon3	equ	0xFF0
 32569                           indf0	equ	0xFEF
 32570                           postinc0	equ	0xFEE
 32571                           fsr0h	equ	0xFEA
 32572                           fsr0l	equ	0xFE9
 32573                           wreg	equ	0xFE8
 32574                           indf1	equ	0xFE7
 32575                           postdec1	equ	0xFE5
 32576                           plusw1	equ	0xFE3
 32577                           fsr1h	equ	0xFE2
 32578                           fsr1l	equ	0xFE1
 32579                           indf2	equ	0xFDF
 32580                           postinc2	equ	0xFDE
 32581                           postdec2	equ	0xFDD
 32582                           plusw2	equ	0xFDB
 32583                           fsr2h	equ	0xFDA
 32584                           fsr2l	equ	0xFD9
 32585                           status	equ	0xFD8
 32586                           
 32587 ;; *************** function _fat_delete_file *****************
 32588 ;; Defined at:
 32589 ;;		line 391 in file "fat16.c"
 32590 ;; Parameters:    Size  Location     Type
 32591 ;;  file_number     1    wreg     unsigned char 
 32592 ;; Auto vars:     Size  Location     Type
 32593 ;;  file_number     1   53[COMRAM] unsigned char 
 32594 ;;  first_cluste    2   51[COMRAM] unsigned int 
 32595 ;;  next_cluster    2   49[COMRAM] unsigned int 
 32596 ;; Return value:  Size  Location     Type
 32597 ;;                  1    wreg      void 
 32598 ;; Registers used:
 32599 ;;		wreg, status,2, status,0, cstack
 32600 ;; Tracked objects:
 32601 ;;		On entry : 0/0
 32602 ;;		On exit  : 0/0
 32603 ;;		Unchanged: 0/0
 32604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32606 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32608 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32609 ;;Total ram usage:        5 bytes
 32610 ;; Hardware stack levels used:    1
 32611 ;; Hardware stack levels required when called:    7
 32612 ;; This function calls:
 32613 ;;		__delete_root
 32614 ;;		__get_first_cluster
 32615 ;;		__read_fat
 32616 ;;		__root_is_available
 32617 ;;		__write_fat
 32618 ;; This function is called by:
 32619 ;;		__parse_file_delete
 32620 ;; This function uses a non-reentrant model
 32621 ;;
 32622                           
 32623                           	psect	text166
 32624  0066AA                     __ptext166:
 32625                           	opt stack 0
 32626  0066AA                     _fat_delete_file:
 32627                           	opt stack 19
 32628                           
 32629                           ;incstack = 0
 32630                           ;fat_delete_file@file_number stored from wreg
 32631  0066AA  6E36               	movwf	fat_delete_file@file_number,c
 32632                           
 32633                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 32634  0066AC  0E3F               	movlw	63
 32635  0066AE  6436               	cpfsgt	fat_delete_file@file_number,c
 32636  0066B0  D001               	goto	l1823
 32637  0066B2  0012               	return	
 32638  0066B4                     l1823:
 32639                           
 32640                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 32641  0066B4  5036               	movf	fat_delete_file@file_number,w,c
 32642  0066B6  EC24  F031         	call	__root_is_available
 32643  0066BA  0900               	iorlw	0
 32644  0066BC  A4D8               	btfss	status,2,c
 32645  0066BE  0012               	return	
 32646                           
 32647                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 32648                           
 32649                           ;fat16.c: 405: {;fat16.c: 407: return;
 32650  0066C0  5036               	movf	fat_delete_file@file_number,w,c
 32651  0066C2  EC8A  F033         	call	__get_first_cluster
 32652  0066C6  C028  F034         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 32653  0066CA  C029  F035         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 32654  0066CE                     l1826:
 32655                           
 32656                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 32657  0066CE  C034  F028         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 32658  0066D2  C035  F029         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 32659  0066D6  EC91  F038         	call	__read_fat	;wreg free
 32660  0066DA  C028  F032         	movff	?__read_fat,fat_delete_file@next_cluster
 32661  0066DE  C029  F033         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 32662                           
 32663                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 32664  0066E2  C034  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 32665  0066E6  C035  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 32666  0066EA  0E00               	movlw	0
 32667  0066EC  6E2C               	movwf	__write_fat@value+1,c
 32668  0066EE  0E00               	movlw	0
 32669  0066F0  6E2B               	movwf	__write_fat@value,c
 32670  0066F2  EC5A  F039         	call	__write_fat	;wreg free
 32671                           
 32672                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 32673  0066F6  0EF1               	movlw	241
 32674  0066F8  5C32               	subwf	fat_delete_file@next_cluster,w,c
 32675  0066FA  0EFF               	movlw	255
 32676  0066FC  5833               	subwfb	fat_delete_file@next_cluster+1,w,c
 32677  0066FE  B0D8               	btfsc	status,0,c
 32678  006700  D005               	goto	l1828
 32679                           
 32680                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 32681                           
 32682                           ;fat16.c: 430: }
 32683                           
 32684                           ;fat16.c: 428: {;fat16.c: 429: break;
 32685  006702  C032  F034         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 32686  006706  C033  F035         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 32687  00670A  D7E1               	goto	l1826
 32688  00670C                     l1828:
 32689                           
 32690                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 32691  00670C  5036               	movf	fat_delete_file@file_number,w,c
 32692  00670E  EC4D  F035         	call	__delete_root
 32693  006712  0012               	return		;funcret
 32694  006714                     __end_of_fat_delete_file:
 32695                           	opt stack 0
 32696                           tosu	equ	0xFFF
 32697                           tosh	equ	0xFFE
 32698                           tosl	equ	0xFFD
 32699                           pclath	equ	0xFFA
 32700                           tblptru	equ	0xFF8
 32701                           tblptrh	equ	0xFF7
 32702                           tblptrl	equ	0xFF6
 32703                           tablat	equ	0xFF5
 32704                           prodh	equ	0xFF4
 32705                           prodl	equ	0xFF3
 32706                           intcon	equ	0xFF2
 32707                           intcon2	equ	0xFF1
 32708                           intcon3	equ	0xFF0
 32709                           indf0	equ	0xFEF
 32710                           postinc0	equ	0xFEE
 32711                           fsr0h	equ	0xFEA
 32712                           fsr0l	equ	0xFE9
 32713                           wreg	equ	0xFE8
 32714                           indf1	equ	0xFE7
 32715                           postdec1	equ	0xFE5
 32716                           plusw1	equ	0xFE3
 32717                           fsr1h	equ	0xFE2
 32718                           fsr1l	equ	0xFE1
 32719                           indf2	equ	0xFDF
 32720                           postinc2	equ	0xFDE
 32721                           postdec2	equ	0xFDD
 32722                           plusw2	equ	0xFDB
 32723                           fsr2h	equ	0xFDA
 32724                           fsr2l	equ	0xFD9
 32725                           status	equ	0xFD8
 32726                           
 32727 ;; *************** function __get_first_cluster *****************
 32728 ;; Defined at:
 32729 ;;		line 205 in file "fat16.c"
 32730 ;; Parameters:    Size  Location     Type
 32731 ;;  slot            1    wreg     unsigned char 
 32732 ;; Auto vars:     Size  Location     Type
 32733 ;;  slot            1   48[COMRAM] unsigned char 
 32734 ;;  first_cluste    2   46[COMRAM] unsigned int 
 32735 ;;  offset          2   44[COMRAM] unsigned int 
 32736 ;;  sector          2   42[COMRAM] unsigned int 
 32737 ;; Return value:  Size  Location     Type
 32738 ;;                  2   39[COMRAM] unsigned int 
 32739 ;; Registers used:
 32740 ;;		wreg, status,2, status,0, cstack
 32741 ;; Tracked objects:
 32742 ;;		On entry : 0/0
 32743 ;;		On exit  : 0/0
 32744 ;;		Unchanged: 0/0
 32745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32747 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32749 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32750 ;;Total ram usage:       10 bytes
 32751 ;; Hardware stack levels used:    1
 32752 ;; Hardware stack levels required when called:    5
 32753 ;; This function calls:
 32754 ;;		_flash_partial_read
 32755 ;; This function is called by:
 32756 ;;		_fat_delete_file
 32757 ;; This function uses a non-reentrant model
 32758 ;;
 32759                           
 32760                           	psect	text167
 32761  006714                     __ptext167:
 32762                           	opt stack 0
 32763  006714                     __get_first_cluster:
 32764                           	opt stack 20
 32765                           
 32766                           ;incstack = 0
 32767                           ;__get_first_cluster@slot stored from wreg
 32768  006714  6E31               	movwf	__get_first_cluster@slot,c
 32769                           
 32770                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 32771  006716  C031  F02A         	movff	__get_first_cluster@slot,??__get_first_cluster
 32772  00671A  3A2A               	swapf	??__get_first_cluster,f,c
 32773  00671C  0E0F               	movlw	15
 32774  00671E  162A               	andwf	??__get_first_cluster,f,c
 32775  006720  502A               	movf	??__get_first_cluster,w,c
 32776  006722  6E2B               	movwf	__get_first_cluster@sector,c
 32777  006724  6A2C               	clrf	__get_first_cluster@sector+1,c
 32778                           
 32779                           ;fat16.c: 211: sector += 18;
 32780  006726  0E12               	movlw	18
 32781  006728  262B               	addwf	__get_first_cluster@sector,f,c
 32782  00672A  0E00               	movlw	0
 32783  00672C  222C               	addwfc	__get_first_cluster@sector+1,f,c
 32784                           
 32785                           ;fat16.c: 212: offset = slot & 0b1111;
 32786  00672E  C031  F02A         	movff	__get_first_cluster@slot,??__get_first_cluster
 32787  006732  0E0F               	movlw	15
 32788  006734  162A               	andwf	??__get_first_cluster,f,c
 32789  006736  502A               	movf	??__get_first_cluster,w,c
 32790  006738  6E2D               	movwf	__get_first_cluster@offset,c
 32791  00673A  6A2E               	clrf	__get_first_cluster@offset+1,c
 32792                           
 32793                           ;fat16.c: 213: offset <<= 5;
 32794  00673C  0E05               	movlw	5
 32795  00673E                     u7535:
 32796  00673E  90D8               	bcf	status,0,c
 32797  006740  362D               	rlcf	__get_first_cluster@offset,f,c
 32798  006742  362E               	rlcf	__get_first_cluster@offset+1,f,c
 32799  006744  2EE8               	decfsz	wreg,f,c
 32800  006746  D7FB               	goto	u7535
 32801                           
 32802                           ;fat16.c: 214: offset += 26;
 32803  006748  0E1A               	movlw	26
 32804  00674A  262D               	addwf	__get_first_cluster@offset,f,c
 32805  00674C  0E00               	movlw	0
 32806  00674E  222E               	addwfc	__get_first_cluster@offset+1,f,c
 32807                           
 32808                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 32809  006750  C02B  F014         	movff	__get_first_cluster@sector,flash_partial_read@page
 32810  006754  C02C  F015         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 32811  006758  C02D  F016         	movff	__get_first_cluster@offset,flash_partial_read@start
 32812  00675C  C02E  F017         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 32813  006760  0E00               	movlw	0
 32814  006762  6E19               	movwf	flash_partial_read@length+1,c
 32815  006764  0E02               	movlw	2
 32816  006766  6E18               	movwf	flash_partial_read@length,c
 32817  006768  0E2F               	movlw	low __get_first_cluster@first_cluster
 32818  00676A  6E1A               	movwf	flash_partial_read@data,c
 32819  00676C  0E00               	movlw	high __get_first_cluster@first_cluster
 32820  00676E  6E1B               	movwf	flash_partial_read@data+1,c
 32821  006770  ECE8  F030         	call	_flash_partial_read	;wreg free
 32822                           
 32823                           ;fat16.c: 216: return first_cluster;
 32824  006774  C02F  F028         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 32825  006778  C030  F029         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 32826  00677C  0012               	return	
 32827  00677E                     __end_of__get_first_cluster:
 32828                           	opt stack 0
 32829                           tosu	equ	0xFFF
 32830                           tosh	equ	0xFFE
 32831                           tosl	equ	0xFFD
 32832                           pclath	equ	0xFFA
 32833                           tblptru	equ	0xFF8
 32834                           tblptrh	equ	0xFF7
 32835                           tblptrl	equ	0xFF6
 32836                           tablat	equ	0xFF5
 32837                           prodh	equ	0xFF4
 32838                           prodl	equ	0xFF3
 32839                           intcon	equ	0xFF2
 32840                           intcon2	equ	0xFF1
 32841                           intcon3	equ	0xFF0
 32842                           indf0	equ	0xFEF
 32843                           postinc0	equ	0xFEE
 32844                           fsr0h	equ	0xFEA
 32845                           fsr0l	equ	0xFE9
 32846                           wreg	equ	0xFE8
 32847                           indf1	equ	0xFE7
 32848                           postdec1	equ	0xFE5
 32849                           plusw1	equ	0xFE3
 32850                           fsr1h	equ	0xFE2
 32851                           fsr1l	equ	0xFE1
 32852                           indf2	equ	0xFDF
 32853                           postinc2	equ	0xFDE
 32854                           postdec2	equ	0xFDD
 32855                           plusw2	equ	0xFDB
 32856                           fsr2h	equ	0xFDA
 32857                           fsr2l	equ	0xFD9
 32858                           status	equ	0xFD8
 32859                           
 32860 ;; *************** function __delete_root *****************
 32861 ;; Defined at:
 32862 ;;		line 192 in file "fat16.c"
 32863 ;; Parameters:    Size  Location     Type
 32864 ;;  slot            1    wreg     unsigned char 
 32865 ;; Auto vars:     Size  Location     Type
 32866 ;;  slot            1   46[COMRAM] unsigned char 
 32867 ;;  offset          2   43[COMRAM] unsigned int 
 32868 ;;  root_sector     2   41[COMRAM] unsigned int 
 32869 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 32870 ;; Return value:  Size  Location     Type
 32871 ;;                  1    wreg      void 
 32872 ;; Registers used:
 32873 ;;		wreg, status,2, status,0, cstack
 32874 ;; Tracked objects:
 32875 ;;		On entry : 0/0
 32876 ;;		On exit  : 0/0
 32877 ;;		Unchanged: 0/0
 32878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32880 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32883 ;;Total ram usage:        7 bytes
 32884 ;; Hardware stack levels used:    1
 32885 ;; Hardware stack levels required when called:    6
 32886 ;; This function calls:
 32887 ;;		_flash_partial_write
 32888 ;; This function is called by:
 32889 ;;		_fat_delete_file
 32890 ;; This function uses a non-reentrant model
 32891 ;;
 32892                           
 32893                           	psect	text168
 32894  006A9A                     __ptext168:
 32895                           	opt stack 0
 32896  006A9A                     __delete_root:
 32897                           	opt stack 19
 32898                           
 32899                           ;incstack = 0
 32900                           ;__delete_root@slot stored from wreg
 32901  006A9A  6E2F               	movwf	__delete_root@slot,c
 32902                           
 32903                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 18;
 32904  006A9C  C02F  F029         	movff	__delete_root@slot,??__delete_root
 32905  006AA0  3A29               	swapf	??__delete_root,f,c
 32906  006AA2  0E0F               	movlw	15
 32907  006AA4  1629               	andwf	??__delete_root,f,c
 32908  006AA6  0E12               	movlw	18
 32909  006AA8  2429               	addwf	??__delete_root,w,c
 32910  006AAA  6E2A               	movwf	__delete_root@root_sector,c
 32911  006AAC  6A2B               	clrf	__delete_root@root_sector+1,c
 32912  006AAE  0E00               	movlw	0
 32913  006AB0  222B               	addwfc	__delete_root@root_sector+1,f,c
 32914                           
 32915                           ;fat16.c: 199: offset = (slot & 0b1111);
 32916  006AB2  C02F  F029         	movff	__delete_root@slot,??__delete_root
 32917  006AB6  0E0F               	movlw	15
 32918  006AB8  1629               	andwf	??__delete_root,f,c
 32919  006ABA  5029               	movf	??__delete_root,w,c
 32920  006ABC  6E2C               	movwf	__delete_root@offset,c
 32921  006ABE  6A2D               	clrf	__delete_root@offset+1,c
 32922                           
 32923                           ;fat16.c: 200: offset <<= 5;
 32924  006AC0  0E05               	movlw	5
 32925  006AC2                     u7525:
 32926  006AC2  90D8               	bcf	status,0,c
 32927  006AC4  362C               	rlcf	__delete_root@offset,f,c
 32928  006AC6  362D               	rlcf	__delete_root@offset+1,f,c
 32929  006AC8  2EE8               	decfsz	wreg,f,c
 32930  006ACA  D7FB               	goto	u7525
 32931                           
 32932                           ;fat16.c: 201: deleted_value = 0xE5;
 32933  006ACC  0EE5               	movlw	229
 32934  006ACE  6E2E               	movwf	__delete_root@deleted_value,c
 32935                           
 32936                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 32937  006AD0  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 32938  006AD4  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 32939  006AD8  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 32940  006ADC  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 32941  006AE0  0E00               	movlw	0
 32942  006AE2  6E25               	movwf	flash_partial_write@length+1,c
 32943  006AE4  0E01               	movlw	1
 32944  006AE6  6E24               	movwf	flash_partial_write@length,c
 32945  006AE8  0E2E               	movlw	low __delete_root@deleted_value
 32946  006AEA  6E26               	movwf	flash_partial_write@data,c
 32947  006AEC  0E00               	movlw	high __delete_root@deleted_value
 32948  006AEE  6E27               	movwf	flash_partial_write@data+1,c
 32949  006AF0  EC59  F034         	call	_flash_partial_write	;wreg free
 32950  006AF4  0012               	return		;funcret
 32951  006AF6                     __end_of__delete_root:
 32952                           	opt stack 0
 32953                           tosu	equ	0xFFF
 32954                           tosh	equ	0xFFE
 32955                           tosl	equ	0xFFD
 32956                           pclath	equ	0xFFA
 32957                           tblptru	equ	0xFF8
 32958                           tblptrh	equ	0xFF7
 32959                           tblptrl	equ	0xFF6
 32960                           tablat	equ	0xFF5
 32961                           prodh	equ	0xFF4
 32962                           prodl	equ	0xFF3
 32963                           intcon	equ	0xFF2
 32964                           intcon2	equ	0xFF1
 32965                           intcon3	equ	0xFF0
 32966                           indf0	equ	0xFEF
 32967                           postinc0	equ	0xFEE
 32968                           fsr0h	equ	0xFEA
 32969                           fsr0l	equ	0xFE9
 32970                           wreg	equ	0xFE8
 32971                           indf1	equ	0xFE7
 32972                           postdec1	equ	0xFE5
 32973                           plusw1	equ	0xFE3
 32974                           fsr1h	equ	0xFE2
 32975                           fsr1l	equ	0xFE1
 32976                           indf2	equ	0xFDF
 32977                           postinc2	equ	0xFDE
 32978                           postdec2	equ	0xFDD
 32979                           plusw2	equ	0xFDB
 32980                           fsr2h	equ	0xFDA
 32981                           fsr2l	equ	0xFD9
 32982                           status	equ	0xFD8
 32983                           
 32984 ;; *************** function __parse_file_create *****************
 32985 ;; Defined at:
 32986 ;;		line 509 in file "api.c"
 32987 ;; Parameters:    Size  Location     Type
 32988 ;;  data            2   71[COMRAM] PTR unsigned char 
 32989 ;;		 -> RAM(3759), 
 32990 ;; Auto vars:     Size  Location     Type
 32991 ;;		None
 32992 ;; Return value:  Size  Location     Type
 32993 ;;                  1    wreg      unsigned char 
 32994 ;; Registers used:
 32995 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32996 ;; Tracked objects:
 32997 ;;		On entry : 0/0
 32998 ;;		On exit  : 0/0
 32999 ;;		Unchanged: 0/0
 33000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33005 ;;Total ram usage:        3 bytes
 33006 ;; Hardware stack levels used:    1
 33007 ;; Hardware stack levels required when called:    8
 33008 ;; This function calls:
 33009 ;;		_fat_create_file
 33010 ;; This function is called by:
 33011 ;;		__parse_command_long
 33012 ;; This function uses a non-reentrant model
 33013 ;;
 33014                           
 33015                           	psect	text169
 33016  00656A                     __ptext169:
 33017                           	opt stack 0
 33018  00656A                     __parse_file_create:
 33019                           	opt stack 19
 33020                           
 33021                           ;api.c: 512: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 33022                           
 33023                           ;incstack = 0
 33024  00656A  C048  FFD9         	movff	__parse_file_create@data,fsr2l
 33025  00656E  C049  FFDA         	movff	__parse_file_create@data+1,fsr2h
 33026  006572  0E52               	movlw	82
 33027  006574  18DE               	xorwf	postinc2,w,c
 33028  006576  A4D8               	btfss	status,2,c
 33029  006578  D014               	goto	u8960
 33030  00657A  EE20 F00C          	lfsr	2,12
 33031  00657E  5048               	movf	__parse_file_create@data,w,c
 33032  006580  26D9               	addwf	fsr2l,f,c
 33033  006582  5049               	movf	__parse_file_create@data+1,w,c
 33034  006584  22DA               	addwfc	fsr2h,f,c
 33035  006586  0EBD               	movlw	189
 33036  006588  18DE               	xorwf	postinc2,w,c
 33037  00658A  A4D8               	btfss	status,2,c
 33038  00658C  D00A               	goto	u8960
 33039  00658E  EE20 F00D          	lfsr	2,13
 33040  006592  5048               	movf	__parse_file_create@data,w,c
 33041  006594  26D9               	addwf	fsr2l,f,c
 33042  006596  5049               	movf	__parse_file_create@data+1,w,c
 33043  006598  22DA               	addwfc	fsr2h,f,c
 33044  00659A  0E4F               	movlw	79
 33045  00659C  18DE               	xorwf	postinc2,w,c
 33046  00659E  B4D8               	btfsc	status,2,c
 33047  0065A0  D002               	goto	l2490
 33048  0065A2                     u8960:
 33049                           
 33050                           ;api.c: 513: {;api.c: 514: return 14;
 33051  0065A2  0E0E               	movlw	14
 33052  0065A4  0012               	return	
 33053  0065A6                     l2490:
 33054                           
 33055                           ;api.c: 515: };api.c: 518: fat_create_file(&data[1], &data[9], 0);
 33056  0065A6  0E01               	movlw	1
 33057  0065A8  2448               	addwf	__parse_file_create@data,w,c
 33058  0065AA  6E3C               	movwf	fat_create_file@name,c
 33059  0065AC  0E00               	movlw	0
 33060  0065AE  2049               	addwfc	__parse_file_create@data+1,w,c
 33061  0065B0  6E3D               	movwf	fat_create_file@name+1,c
 33062  0065B2  0E09               	movlw	9
 33063  0065B4  2448               	addwf	__parse_file_create@data,w,c
 33064  0065B6  6E3E               	movwf	fat_create_file@extension,c
 33065  0065B8  0E00               	movlw	0
 33066  0065BA  2049               	addwfc	__parse_file_create@data+1,w,c
 33067  0065BC  6E3F               	movwf	fat_create_file@extension+1,c
 33068  0065BE  0E00               	movlw	0
 33069  0065C0  6E40               	movwf	fat_create_file@size,c
 33070  0065C2  0E00               	movlw	0
 33071  0065C4  6E41               	movwf	fat_create_file@size+1,c
 33072  0065C6  0E00               	movlw	0
 33073  0065C8  6E42               	movwf	fat_create_file@size+2,c
 33074  0065CA  0E00               	movlw	0
 33075  0065CC  6E43               	movwf	fat_create_file@size+3,c
 33076  0065CE  EC4E  F017         	call	_fat_create_file	;wreg free
 33077                           
 33078                           ;api.c: 519: return 14;
 33079  0065D2  0E0E               	movlw	14
 33080  0065D4  0012               	return	
 33081  0065D6                     __end_of__parse_file_create:
 33082                           	opt stack 0
 33083                           tosu	equ	0xFFF
 33084                           tosh	equ	0xFFE
 33085                           tosl	equ	0xFFD
 33086                           pclath	equ	0xFFA
 33087                           tblptru	equ	0xFF8
 33088                           tblptrh	equ	0xFF7
 33089                           tblptrl	equ	0xFF6
 33090                           tablat	equ	0xFF5
 33091                           prodh	equ	0xFF4
 33092                           prodl	equ	0xFF3
 33093                           intcon	equ	0xFF2
 33094                           intcon2	equ	0xFF1
 33095                           intcon3	equ	0xFF0
 33096                           indf0	equ	0xFEF
 33097                           postinc0	equ	0xFEE
 33098                           fsr0h	equ	0xFEA
 33099                           fsr0l	equ	0xFE9
 33100                           wreg	equ	0xFE8
 33101                           indf1	equ	0xFE7
 33102                           postdec1	equ	0xFE5
 33103                           plusw1	equ	0xFE3
 33104                           fsr1h	equ	0xFE2
 33105                           fsr1l	equ	0xFE1
 33106                           indf2	equ	0xFDF
 33107                           postinc2	equ	0xFDE
 33108                           postdec2	equ	0xFDD
 33109                           plusw2	equ	0xFDB
 33110                           fsr2h	equ	0xFDA
 33111                           fsr2l	equ	0xFD9
 33112                           status	equ	0xFD8
 33113                           
 33114 ;; *************** function _fat_create_file *****************
 33115 ;; Defined at:
 33116 ;;		line 309 in file "fat16.c"
 33117 ;; Parameters:    Size  Location     Type
 33118 ;;  name            2   59[COMRAM] PTR unsigned char 
 33119 ;;		 -> RAM(3759), 
 33120 ;;  extension       2   61[COMRAM] PTR unsigned char 
 33121 ;;		 -> RAM(3759), 
 33122 ;;  size            4   63[COMRAM] unsigned long 
 33123 ;; Auto vars:     Size  Location     Type
 33124 ;;  root_entry     32    9[BANK0 ] struct .
 33125 ;;  cluster         2    7[BANK0 ] unsigned int 
 33126 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 33127 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 33128 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 33129 ;;  root_slot       1    4[BANK0 ] unsigned char 
 33130 ;; Return value:  Size  Location     Type
 33131 ;;                  1    wreg      unsigned char 
 33132 ;; Registers used:
 33133 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33134 ;; Tracked objects:
 33135 ;;		On entry : 0/0
 33136 ;;		On exit  : 0/0
 33137 ;;		Unchanged: 0/0
 33138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33139 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33140 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33141 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33142 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33143 ;;Total ram usage:       53 bytes
 33144 ;; Hardware stack levels used:    1
 33145 ;; Hardware stack levels required when called:    7
 33146 ;; This function calls:
 33147 ;;		__get_available_root_entry
 33148 ;;		__get_date
 33149 ;;		__get_empty_cluster
 33150 ;;		__get_time
 33151 ;;		__write_fat
 33152 ;;		__write_root
 33153 ;;		_fat_find_file
 33154 ;;		_fat_get_empty_clusters
 33155 ;;		_memcpy
 33156 ;; This function is called by:
 33157 ;;		__parse_file_create
 33158 ;; This function uses a non-reentrant model
 33159 ;;
 33160                           
 33161                           	psect	text170
 33162  002E9C                     __ptext170:
 33163                           	opt stack 0
 33164  002E9C                     _fat_create_file:
 33165                           	opt stack 19
 33166                           
 33167                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 33168                           
 33169                           ;incstack = 0
 33170  002E9C  C03C  F028         	movff	fat_create_file@name,fat_find_file@name
 33171  002EA0  C03D  F029         	movff	fat_create_file@name+1,fat_find_file@name+1
 33172  002EA4  C03E  F02A         	movff	fat_create_file@extension,fat_find_file@extension
 33173  002EA8  C03F  F02B         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 33174  002EAC  ECBE  F028         	call	_fat_find_file	;wreg free
 33175  002EB0  0AFF               	xorlw	255
 33176  002EB2  A4D8               	btfss	status,2,c
 33177  002EB4  0012               	return	
 33178                           
 33179                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 33180                           
 33181                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 33182  002EB6  ECF3  F03B         	call	__get_available_root_entry	;wreg free
 33183  002EBA  0100               	movlb	0	; () banked
 33184  002EBC  6FC2               	movwf	fat_create_file@root_slot& (0+255),b
 33185                           
 33186                           ; BSR set to: 0
 33187                           ;fat16.c: 330: if(root_slot == 0xFF)
 33188  002EBE  29C2               	incf	fat_create_file@root_slot& (0+255),w,b
 33189  002EC0  B4D8               	btfsc	status,2,c
 33190  002EC2  0012               	return	
 33191                           
 33192                           ; BSR set to: 0
 33193                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 33194                           
 33195                           ; BSR set to: 0
 33196                           
 33197                           ; BSR set to: 0
 33198                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 33199  002EC4  C040  F044         	movff	fat_create_file@size,??_fat_create_file
 33200  002EC8  C041  F045         	movff	fat_create_file@size+1,??_fat_create_file+1
 33201  002ECC  C042  F046         	movff	fat_create_file@size+2,??_fat_create_file+2
 33202  002ED0  C043  F047         	movff	fat_create_file@size+3,??_fat_create_file+3
 33203  002ED4  0E0A               	movlw	10
 33204  002ED6  D005               	goto	u8310
 33205  002ED8                     u8315:
 33206  002ED8  90D8               	bcf	status,0,c
 33207  002EDA  3247               	rrcf	??_fat_create_file+3,f,c
 33208  002EDC  3246               	rrcf	??_fat_create_file+2,f,c
 33209  002EDE  3245               	rrcf	??_fat_create_file+1,f,c
 33210  002EE0  3244               	rrcf	??_fat_create_file,f,c
 33211  002EE2                     u8310:
 33212  002EE2  2EE8               	decfsz	wreg,f,c
 33213  002EE4  D7F9               	goto	u8315
 33214  002EE6  0E01               	movlw	1
 33215  002EE8  2444               	addwf	??_fat_create_file,w,c
 33216  002EEA  6FC3               	movwf	fat_create_file@number_of_clusters& (0+255),b
 33217  002EEC  0E00               	movlw	0
 33218  002EEE  2045               	addwfc	??_fat_create_file+1,w,c
 33219  002EF0  6FC4               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 33220                           
 33221                           ; BSR set to: 0
 33222                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 33223  002EF2  C0C3  F028         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 33224  002EF6  C0C4  F029         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 33225  002EFA  EC5E  F02E         	call	_fat_get_empty_clusters	;wreg free
 33226  002EFE  0100               	movlb	0	; () banked
 33227  002F00  51C3               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33228  002F02  1828               	xorwf	?_fat_get_empty_clusters,w,c
 33229  002F04  E105               	bnz	u8320
 33230  002F06  51C4               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33231  002F08  1829               	xorwf	?_fat_get_empty_clusters+1,w,c
 33232  002F0A  A4D8               	btfss	status,2,c
 33233  002F0C  0012               	return	
 33234  002F0E  D001               	goto	l1815
 33235  002F10                     u8320:
 33236                           
 33237                           ; BSR set to: 0
 33238                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 33239  002F10  0012               	return	
 33240  002F12                     l1815:
 33241                           
 33242                           ; BSR set to: 0
 33243                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 33244                           
 33245                           ; BSR set to: 0
 33246  002F12  0E00               	movlw	0
 33247  002F14  6E29               	movwf	__get_empty_cluster@first_cluster+1,c
 33248  002F16  0E02               	movlw	2
 33249  002F18  6E28               	movwf	__get_empty_cluster@first_cluster,c
 33250  002F1A  ECD3  F031         	call	__get_empty_cluster	;wreg free
 33251  002F1E  C028  F0C5         	movff	?__get_empty_cluster,fat_create_file@cluster
 33252  002F22  C029  F0C6         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 33253                           
 33254                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 33255  002F26  0EC7               	movlw	low fat_create_file@root_entry
 33256  002F28  6E01               	movwf	memcpy@d1,c
 33257  002F2A  0E00               	movlw	high fat_create_file@root_entry
 33258  002F2C  6E02               	movwf	memcpy@d1+1,c
 33259  002F2E  C03C  F003         	movff	fat_create_file@name,memcpy@s1
 33260  002F32  C03D  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 33261  002F36  5003               	movf	memcpy@s1,w,c
 33262  002F38  1004               	iorwf	memcpy@s1+1,w,c
 33263  002F3A  A4D8               	btfss	status,2,c
 33264  002F3C  0E20               	movlw	32
 33265  002F3E  6E05               	movwf	memcpy@s1+2,c
 33266  002F40  0E00               	movlw	0
 33267  002F42  6E07               	movwf	memcpy@n+1,c
 33268  002F44  0E08               	movlw	8
 33269  002F46  6E06               	movwf	memcpy@n,c
 33270  002F48  EC26  F034         	call	_memcpy	;wreg free
 33271                           
 33272                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 33273  002F4C  0ECF               	movlw	low (fat_create_file@root_entry+8)
 33274  002F4E  6E01               	movwf	memcpy@d1,c
 33275  002F50  0E00               	movlw	high (fat_create_file@root_entry+8)
 33276  002F52  6E02               	movwf	memcpy@d1+1,c
 33277  002F54  C03E  F003         	movff	fat_create_file@extension,memcpy@s1
 33278  002F58  C03F  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 33279  002F5C  5003               	movf	memcpy@s1,w,c
 33280  002F5E  1004               	iorwf	memcpy@s1+1,w,c
 33281  002F60  A4D8               	btfss	status,2,c
 33282  002F62  0E20               	movlw	32
 33283  002F64  6E05               	movwf	memcpy@s1+2,c
 33284  002F66  0E00               	movlw	0
 33285  002F68  6E07               	movwf	memcpy@n+1,c
 33286  002F6A  0E03               	movlw	3
 33287  002F6C  6E06               	movwf	memcpy@n,c
 33288  002F6E  EC26  F034         	call	_memcpy	;wreg free
 33289                           
 33290                           ;fat16.c: 352: root_entry.attributes = 0x00;
 33291  002F72  0E00               	movlw	0
 33292  002F74  0100               	movlb	0	; () banked
 33293  002F76  6FD2               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 33294                           
 33295                           ; BSR set to: 0
 33296                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 33297  002F78  0E00               	movlw	0
 33298  002F7A  6FD3               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 33299                           
 33300                           ; BSR set to: 0
 33301                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 33302  002F7C  0E00               	movlw	0
 33303  002F7E  6FD4               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 33304                           
 33305                           ; BSR set to: 0
 33306                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 33307  002F80  EC34  F03D         	call	__get_time	;wreg free
 33308  002F84  C001  F0D5         	movff	?__get_time,fat_create_file@root_entry+14
 33309  002F88  C002  F0D6         	movff	?__get_time+1,fat_create_file@root_entry+15
 33310                           
 33311                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 33312  002F8C  EC39  F03D         	call	__get_date	;wreg free
 33313  002F90  C001  F0D7         	movff	?__get_date,fat_create_file@root_entry+16
 33314  002F94  C002  F0D8         	movff	?__get_date+1,fat_create_file@root_entry+17
 33315                           
 33316                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 33317  002F98  C0D7  F0D9         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 33318  002F9C  C0D8  F0DA         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 33319                           
 33320                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 33321  002FA0  0E00               	movlw	0
 33322  002FA2  0100               	movlb	0	; () banked
 33323  002FA4  6FDC               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 33324  002FA6  0E00               	movlw	0
 33325  002FA8  6FDB               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 33326                           
 33327                           ; BSR set to: 0
 33328                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 33329  002FAA  C0D5  F0DD         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 33330  002FAE  C0D6  F0DE         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 33331                           
 33332                           ; BSR set to: 0
 33333                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 33334  002FB2  C0D7  F0DF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 33335  002FB6  C0D8  F0E0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 33336                           
 33337                           ; BSR set to: 0
 33338                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 33339  002FBA  C0C5  F0E1         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 33340  002FBE  C0C6  F0E2         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 33341                           
 33342                           ; BSR set to: 0
 33343                           ;fat16.c: 362: root_entry.fileSize = size;
 33344  002FC2  C040  F0E3         	movff	fat_create_file@size,fat_create_file@root_entry+28
 33345  002FC6  C041  F0E4         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 33346  002FCA  C042  F0E5         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 33347  002FCE  C043  F0E6         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 33348                           
 33349                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 33350  002FD2  0EC7               	movlw	low fat_create_file@root_entry
 33351  002FD4  6E29               	movwf	__write_root@data,c
 33352  002FD6  0E00               	movlw	high fat_create_file@root_entry
 33353  002FD8  6E2A               	movwf	__write_root@data+1,c
 33354  002FDA  51C2               	movf	fat_create_file@root_slot& (0+255),w,b
 33355  002FDC  EC01  F036         	call	__write_root
 33356                           
 33357                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 33358  002FE0  0E00               	movlw	0
 33359  002FE2  0100               	movlb	0	; () banked
 33360  002FE4  6FC1               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 33361  002FE6  0E01               	movlw	1
 33362  002FE8  6FC0               	movwf	fat_create_file@cluster_count& (0+255),b
 33363  002FEA  D02F               	goto	l1816
 33364  002FEC                     
 33365                           ; BSR set to: 0
 33366                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 33367                           
 33368                           ; BSR set to: 0
 33369  002FEC  51C3               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33370  002FEE  19C0               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 33371  002FF0  E10E               	bnz	l10729
 33372  002FF2  51C4               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33373  002FF4  19C1               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 33374  002FF6  A4D8               	btfss	status,2,c
 33375  002FF8  D00A               	goto	l1818
 33376                           
 33377                           ; BSR set to: 0
 33378                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 33379  002FFA  C0C5  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 33380  002FFE  C0C6  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 33381  003002  0EFF               	movlw	255
 33382  003004  6E2C               	movwf	__write_fat@value+1,c
 33383  003006  682B               	setf	__write_fat@value,c
 33384  003008  EC5A  F039         	call	__write_fat	;wreg free
 33385                           
 33386                           ;fat16.c: 377: }
 33387  00300C  D01B               	goto	l1819
 33388  00300E                     l1818:
 33389  00300E                     l10729:
 33390                           
 33391                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 33392  00300E  0E01               	movlw	1
 33393  003010  0100               	movlb	0	; () banked
 33394  003012  25C5               	addwf	fat_create_file@cluster& (0+255),w,b
 33395  003014  6E28               	movwf	__get_empty_cluster@first_cluster,c
 33396  003016  0E00               	movlw	0
 33397  003018  21C6               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 33398  00301A  6E29               	movwf	__get_empty_cluster@first_cluster+1,c
 33399  00301C  ECD3  F031         	call	__get_empty_cluster	;wreg free
 33400  003020  C028  F0BE         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 33401  003024  C029  F0BF         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 33402                           
 33403                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 33404  003028  C0C5  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 33405  00302C  C0C6  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 33406  003030  C0BE  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 33407  003034  C0BF  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 33408  003038  EC5A  F039         	call	__write_fat	;wreg free
 33409                           
 33410                           ;fat16.c: 385: cluster = next_cluster;
 33411  00303C  C0BE  F0C5         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 33412  003040  C0BF  F0C6         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 33413  003044                     l1819:
 33414  003044  0100               	movlb	0	; () banked
 33415  003046  4BC0               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 33416  003048  2BC1               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 33417  00304A                     l1816:
 33418                           
 33419                           ; BSR set to: 0
 33420                           
 33421                           ; BSR set to: 0
 33422  00304A  51C0               	movf	fat_create_file@cluster_count& (0+255),w,b
 33423  00304C  5DC3               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 33424  00304E  51C1               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 33425  003050  59C4               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33426  003052  A0D8               	btfss	status,0,c
 33427  003054  0012               	return	
 33428  003056  D7CA               	goto	l1817
 33429  003058                     __end_of_fat_create_file:
 33430                           	opt stack 0
 33431                           tosu	equ	0xFFF
 33432                           tosh	equ	0xFFE
 33433                           tosl	equ	0xFFD
 33434                           pclath	equ	0xFFA
 33435                           tblptru	equ	0xFF8
 33436                           tblptrh	equ	0xFF7
 33437                           tblptrl	equ	0xFF6
 33438                           tablat	equ	0xFF5
 33439                           prodh	equ	0xFF4
 33440                           prodl	equ	0xFF3
 33441                           intcon	equ	0xFF2
 33442                           intcon2	equ	0xFF1
 33443                           intcon3	equ	0xFF0
 33444                           indf0	equ	0xFEF
 33445                           postinc0	equ	0xFEE
 33446                           fsr0h	equ	0xFEA
 33447                           fsr0l	equ	0xFE9
 33448                           wreg	equ	0xFE8
 33449                           indf1	equ	0xFE7
 33450                           postdec1	equ	0xFE5
 33451                           plusw1	equ	0xFE3
 33452                           fsr1h	equ	0xFE2
 33453                           fsr1l	equ	0xFE1
 33454                           indf2	equ	0xFDF
 33455                           postinc2	equ	0xFDE
 33456                           postdec2	equ	0xFDD
 33457                           plusw2	equ	0xFDB
 33458                           fsr2h	equ	0xFDA
 33459                           fsr2l	equ	0xFD9
 33460                           status	equ	0xFD8
 33461                           
 33462 ;; *************** function _memcpy *****************
 33463 ;; Defined at:
 33464 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 33465 ;; Parameters:    Size  Location     Type
 33466 ;;  d1              2    0[COMRAM] PTR void 
 33467 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 33468 ;;		 -> msd_buffer(512), SetupPkt(8), 
 33469 ;;  s1              3    2[COMRAM] PTR const void 
 33470 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), inq_resp(36), 
 33471 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 33472 ;;  n               2    5[COMRAM] unsigned int 
 33473 ;; Auto vars:     Size  Location     Type
 33474 ;;  s               3    7[COMRAM] PTR const unsigned char 
 33475 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), inq_resp(36), 
 33476 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 33477 ;;  d               2   10[COMRAM] PTR unsigned char 
 33478 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 33479 ;;		 -> msd_buffer(512), SetupPkt(8), 
 33480 ;;  tmp             1   12[COMRAM] unsigned char 
 33481 ;; Return value:  Size  Location     Type
 33482 ;;                  2    0[COMRAM] PTR void 
 33483 ;; Registers used:
 33484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33485 ;; Tracked objects:
 33486 ;;		On entry : 0/0
 33487 ;;		On exit  : 0/0
 33488 ;;		Unchanged: 0/0
 33489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33490 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33491 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33493 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33494 ;;Total ram usage:       13 bytes
 33495 ;; Hardware stack levels used:    1
 33496 ;; This function calls:
 33497 ;;		Nothing
 33498 ;; This function is called by:
 33499 ;;		_USBCtrlEPService
 33500 ;;		_MSDProcessCommandMediaPresent
 33501 ;;		__flash_set_page_size
 33502 ;;		_fat_create_file
 33503 ;;		_internalFlash_read
 33504 ;; This function uses a non-reentrant model
 33505 ;;
 33506                           
 33507                           	psect	text171
 33508  00684C                     __ptext171:
 33509                           	opt stack 0
 33510  00684C                     _memcpy:
 33511                           	opt stack 27
 33512                           
 33513                           ;incstack = 0
 33514  00684C  C003  F008         	movff	memcpy@s1,memcpy@s
 33515  006850  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 33516  006854  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 33517  006858  C001  F00B         	movff	memcpy@d1,memcpy@d
 33518  00685C  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 33519  006860  D01F               	goto	l3299
 33520  006862                     l9815:
 33521  006862  C008  FFF6         	movff	memcpy@s,tblptrl
 33522  006866  C009  FFF7         	movff	memcpy@s+1,tblptrh
 33523  00686A  C00A  FFF8         	movff	memcpy@s+2,tblptru
 33524  00686E  BAF8               	btfsc	tblptru,5,c
 33525  006870  D003               	bra	u6997
 33526  006872  0008               	tblrd		*
 33527  006874  50F5               	movf	tablat,w,c
 33528  006876  D005               	bra	u6990
 33529  006878                     u6997:
 33530  006878  CFF6 FFE9          	movff	tblptrl,fsr0l
 33531  00687C  CFF7 FFEA          	movff	tblptrh,fsr0h
 33532  006880  50EF               	movf	indf0,w,c
 33533  006882                     u6990:
 33534  006882  6E0D               	movwf	memcpy@tmp,c
 33535  006884  0E01               	movlw	1
 33536  006886  2608               	addwf	memcpy@s,f,c
 33537  006888  0E00               	movlw	0
 33538  00688A  2209               	addwfc	memcpy@s+1,f,c
 33539  00688C  0E00               	movlw	0
 33540  00688E  220A               	addwfc	memcpy@s+2,f,c
 33541  006890  C00B  FFD9         	movff	memcpy@d,fsr2l
 33542  006894  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 33543  006898  C00D  FFDF         	movff	memcpy@tmp,indf2
 33544  00689C  4A0B               	infsnz	memcpy@d,f,c
 33545  00689E  2A0C               	incf	memcpy@d+1,f,c
 33546  0068A0                     l3299:
 33547  0068A0  0606               	decf	memcpy@n,f,c
 33548  0068A2  A0D8               	btfss	status,0,c
 33549  0068A4  0607               	decf	memcpy@n+1,f,c
 33550  0068A6  2806               	incf	memcpy@n,w,c
 33551  0068A8  E1DC               	bnz	l9815
 33552  0068AA  2807               	incf	memcpy@n+1,w,c
 33553  0068AC  B4D8               	btfsc	status,2,c
 33554  0068AE  0012               	return	
 33555  0068B0  D7D8               	goto	l3300
 33556  0068B2                     __end_of_memcpy:
 33557                           	opt stack 0
 33558                           tosu	equ	0xFFF
 33559                           tosh	equ	0xFFE
 33560                           tosl	equ	0xFFD
 33561                           pclath	equ	0xFFA
 33562                           tblptru	equ	0xFF8
 33563                           tblptrh	equ	0xFF7
 33564                           tblptrl	equ	0xFF6
 33565                           tablat	equ	0xFF5
 33566                           prodh	equ	0xFF4
 33567                           prodl	equ	0xFF3
 33568                           intcon	equ	0xFF2
 33569                           intcon2	equ	0xFF1
 33570                           intcon3	equ	0xFF0
 33571                           indf0	equ	0xFEF
 33572                           postinc0	equ	0xFEE
 33573                           fsr0h	equ	0xFEA
 33574                           fsr0l	equ	0xFE9
 33575                           wreg	equ	0xFE8
 33576                           indf1	equ	0xFE7
 33577                           postdec1	equ	0xFE5
 33578                           plusw1	equ	0xFE3
 33579                           fsr1h	equ	0xFE2
 33580                           fsr1l	equ	0xFE1
 33581                           indf2	equ	0xFDF
 33582                           postinc2	equ	0xFDE
 33583                           postdec2	equ	0xFDD
 33584                           plusw2	equ	0xFDB
 33585                           fsr2h	equ	0xFDA
 33586                           fsr2l	equ	0xFD9
 33587                           status	equ	0xFD8
 33588                           
 33589 ;; *************** function _fat_get_empty_clusters *****************
 33590 ;; Defined at:
 33591 ;;		line 130 in file "fat16.c"
 33592 ;; Parameters:    Size  Location     Type
 33593 ;;  maximum         2   39[COMRAM] unsigned int 
 33594 ;; Auto vars:     Size  Location     Type
 33595 ;;  cluster         2   49[COMRAM] unsigned int 
 33596 ;;  empty_cluste    2   47[COMRAM] unsigned int 
 33597 ;;  value           2   45[COMRAM] unsigned int 
 33598 ;;  offset          2   43[COMRAM] unsigned int 
 33599 ;;  fat_sector      2   41[COMRAM] unsigned int 
 33600 ;; Return value:  Size  Location     Type
 33601 ;;                  2   39[COMRAM] unsigned int 
 33602 ;; Registers used:
 33603 ;;		wreg, status,2, status,0, cstack
 33604 ;; Tracked objects:
 33605 ;;		On entry : 0/0
 33606 ;;		On exit  : 0/0
 33607 ;;		Unchanged: 0/0
 33608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33610 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33612 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33613 ;;Total ram usage:       12 bytes
 33614 ;; Hardware stack levels used:    1
 33615 ;; Hardware stack levels required when called:    5
 33616 ;; This function calls:
 33617 ;;		_flash_partial_read
 33618 ;; This function is called by:
 33619 ;;		_fat_create_file
 33620 ;; This function uses a non-reentrant model
 33621 ;;
 33622                           
 33623                           	psect	text172
 33624  005CBC                     __ptext172:
 33625                           	opt stack 0
 33626  005CBC                     _fat_get_empty_clusters:
 33627                           	opt stack 20
 33628                           
 33629                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 33630                           
 33631                           ;incstack = 0
 33632  005CBC  0E00               	movlw	0
 33633  005CBE  6E31               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 33634  005CC0  0E00               	movlw	0
 33635  005CC2  6E30               	movwf	fat_get_empty_clusters@empty_clusters,c
 33636                           
 33637                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(4074+2); 
      +                          ++cluster)
 33638  005CC4  0E00               	movlw	0
 33639  005CC6  6E33               	movwf	fat_get_empty_clusters@cluster+1,c
 33640  005CC8  0E02               	movlw	2
 33641  005CCA  6E32               	movwf	fat_get_empty_clusters@cluster,c
 33642  005CCC  D033               	goto	l10097
 33643  005CCE                     
 33644                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 33645  005CCE  5033               	movf	fat_get_empty_clusters@cluster+1,w,c
 33646  005CD0  6E2A               	movwf	fat_get_empty_clusters@fat_sector,c
 33647  005CD2  6A2B               	clrf	fat_get_empty_clusters@fat_sector+1,c
 33648                           
 33649                           ;fat16.c: 142: fat_sector += 2;
 33650  005CD4  0E02               	movlw	2
 33651  005CD6  262A               	addwf	fat_get_empty_clusters@fat_sector,f,c
 33652  005CD8  0E00               	movlw	0
 33653  005CDA  222B               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 33654                           
 33655                           ;fat16.c: 143: offset = cluster & 0xFF;
 33656  005CDC  5032               	movf	fat_get_empty_clusters@cluster,w,c
 33657  005CDE  6E2C               	movwf	fat_get_empty_clusters@offset,c
 33658  005CE0  6A2D               	clrf	fat_get_empty_clusters@offset+1,c
 33659                           
 33660                           ;fat16.c: 144: offset <<= 1;
 33661  005CE2  90D8               	bcf	status,0,c
 33662  005CE4  362C               	rlcf	fat_get_empty_clusters@offset,f,c
 33663  005CE6  362D               	rlcf	fat_get_empty_clusters@offset+1,f,c
 33664                           
 33665                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 33666  005CE8  C02A  F014         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 33667  005CEC  C02B  F015         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 33668  005CF0  C02C  F016         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 33669  005CF4  C02D  F017         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 33670  005CF8  0E00               	movlw	0
 33671  005CFA  6E19               	movwf	flash_partial_read@length+1,c
 33672  005CFC  0E02               	movlw	2
 33673  005CFE  6E18               	movwf	flash_partial_read@length,c
 33674  005D00  0E2E               	movlw	low fat_get_empty_clusters@value
 33675  005D02  6E1A               	movwf	flash_partial_read@data,c
 33676  005D04  0E00               	movlw	high fat_get_empty_clusters@value
 33677  005D06  6E1B               	movwf	flash_partial_read@data+1,c
 33678  005D08  ECE8  F030         	call	_flash_partial_read	;wreg free
 33679                           
 33680                           ;fat16.c: 146: if(value==0x0000)
 33681  005D0C  502E               	movf	fat_get_empty_clusters@value,w,c
 33682  005D0E  102F               	iorwf	fat_get_empty_clusters@value+1,w,c
 33683  005D10  A4D8               	btfss	status,2,c
 33684  005D12  D00E               	goto	l1771
 33685                           
 33686                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 33687  005D14  4A30               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 33688  005D16  2A31               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 33689                           
 33690                           ;fat16.c: 149: if(empty_clusters==maximum)
 33691  005D18  5028               	movf	fat_get_empty_clusters@maximum,w,c
 33692  005D1A  1830               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 33693  005D1C  E109               	bnz	l10095
 33694  005D1E  5029               	movf	fat_get_empty_clusters@maximum+1,w,c
 33695  005D20  1831               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 33696  005D22  A4D8               	btfss	status,2,c
 33697  005D24  D005               	goto	l1771
 33698                           
 33699                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 33700  005D26  C030  F028         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 33701  005D2A  C031  F029         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 33702  005D2E  0012               	return	
 33703  005D30                     l1771:
 33704  005D30                     l10095:
 33705  005D30  4A32               	infsnz	fat_get_empty_clusters@cluster,f,c
 33706  005D32  2A33               	incf	fat_get_empty_clusters@cluster+1,f,c
 33707  005D34                     l10097:
 33708  005D34  0EEC               	movlw	236
 33709  005D36  5C32               	subwf	fat_get_empty_clusters@cluster,w,c
 33710  005D38  0E0F               	movlw	15
 33711  005D3A  5833               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 33712  005D3C  A0D8               	btfss	status,0,c
 33713  005D3E  D7C7               	goto	l1768
 33714                           
 33715                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 33716  005D40  C030  F028         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 33717  005D44  C031  F029         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 33718  005D48  0012               	return		;funcret
 33719  005D4A                     __end_of_fat_get_empty_clusters:
 33720                           	opt stack 0
 33721                           tosu	equ	0xFFF
 33722                           tosh	equ	0xFFE
 33723                           tosl	equ	0xFFD
 33724                           pclath	equ	0xFFA
 33725                           tblptru	equ	0xFF8
 33726                           tblptrh	equ	0xFF7
 33727                           tblptrl	equ	0xFF6
 33728                           tablat	equ	0xFF5
 33729                           prodh	equ	0xFF4
 33730                           prodl	equ	0xFF3
 33731                           intcon	equ	0xFF2
 33732                           intcon2	equ	0xFF1
 33733                           intcon3	equ	0xFF0
 33734                           indf0	equ	0xFEF
 33735                           postinc0	equ	0xFEE
 33736                           fsr0h	equ	0xFEA
 33737                           fsr0l	equ	0xFE9
 33738                           wreg	equ	0xFE8
 33739                           indf1	equ	0xFE7
 33740                           postdec1	equ	0xFE5
 33741                           plusw1	equ	0xFE3
 33742                           fsr1h	equ	0xFE2
 33743                           fsr1l	equ	0xFE1
 33744                           indf2	equ	0xFDF
 33745                           postinc2	equ	0xFDE
 33746                           postdec2	equ	0xFDD
 33747                           plusw2	equ	0xFDB
 33748                           fsr2h	equ	0xFDA
 33749                           fsr2l	equ	0xFD9
 33750                           status	equ	0xFD8
 33751                           
 33752 ;; *************** function _fat_find_file *****************
 33753 ;; Defined at:
 33754 ;;		line 250 in file "fat16.c"
 33755 ;; Parameters:    Size  Location     Type
 33756 ;;  name            2   39[COMRAM] PTR unsigned char 
 33757 ;;		 -> bootloader_filename(9), RAM(3759), 
 33758 ;;  extension       2   41[COMRAM] PTR unsigned char 
 33759 ;;		 -> bootloader_extension(4), RAM(3759), 
 33760 ;; Auto vars:     Size  Location     Type
 33761 ;;  buffer         11   43[COMRAM] unsigned char [11]
 33762 ;;  offset          2   57[COMRAM] unsigned int 
 33763 ;;  sector          2   55[COMRAM] unsigned int 
 33764 ;;  slot            1   54[COMRAM] unsigned char 
 33765 ;; Return value:  Size  Location     Type
 33766 ;;                  1    wreg      unsigned char 
 33767 ;; Registers used:
 33768 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33769 ;; Tracked objects:
 33770 ;;		On entry : 0/0
 33771 ;;		On exit  : 0/0
 33772 ;;		Unchanged: 0/0
 33773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33775 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33777 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33778 ;;Total ram usage:       20 bytes
 33779 ;; Hardware stack levels used:    1
 33780 ;; Hardware stack levels required when called:    5
 33781 ;; This function calls:
 33782 ;;		_flash_partial_read
 33783 ;;		_strncmp
 33784 ;; This function is called by:
 33785 ;;		_fat_create_file
 33786 ;;		__bootloader_find_file
 33787 ;;		__fill_buffer_find_file
 33788 ;; This function uses a non-reentrant model
 33789 ;;
 33790                           
 33791                           	psect	text173
 33792  00517C                     __ptext173:
 33793                           	opt stack 0
 33794  00517C                     _fat_find_file:
 33795                           	opt stack 23
 33796                           
 33797                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 33798                           
 33799                           ;incstack = 0
 33800  00517C  0E00               	movlw	0
 33801  00517E  6E37               	movwf	fat_find_file@slot,c
 33802                           
 33803                           ;fat16.c: 257: for(sector = 18; sector <= 21; ++sector)
 33804  005180  0E00               	movlw	0
 33805  005182  6E39               	movwf	fat_find_file@sector+1,c
 33806  005184  0E12               	movlw	18
 33807  005186  6E38               	movwf	fat_find_file@sector,c
 33808  005188                     l10143:
 33809  005188  5039               	movf	fat_find_file@sector+1,w,c
 33810  00518A  E156               	bnz	l10185
 33811  00518C  0E16               	movlw	22
 33812  00518E  5C38               	subwf	fat_find_file@sector,w,c
 33813  005190  B0D8               	btfsc	status,0,c
 33814  005192  D052               	goto	u7610
 33815                           
 33816                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 33817  005194  0E00               	movlw	0
 33818  005196  6E3B               	movwf	fat_find_file@offset+1,c
 33819  005198  0E00               	movlw	0
 33820  00519A  6E3A               	movwf	fat_find_file@offset,c
 33821  00519C                     l10149:
 33822  00519C  0E02               	movlw	2
 33823  00519E  5C3B               	subwf	fat_find_file@offset+1,w,c
 33824  0051A0  B0D8               	btfsc	status,0,c
 33825  0051A2  D047               	goto	u7600
 33826                           
 33827                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 33828  0051A4  C038  F014         	movff	fat_find_file@sector,flash_partial_read@page
 33829  0051A8  C039  F015         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 33830  0051AC  C03A  F016         	movff	fat_find_file@offset,flash_partial_read@start
 33831  0051B0  C03B  F017         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 33832  0051B4  0E00               	movlw	0
 33833  0051B6  6E19               	movwf	flash_partial_read@length+1,c
 33834  0051B8  0E0B               	movlw	11
 33835  0051BA  6E18               	movwf	flash_partial_read@length,c
 33836  0051BC  0E2C               	movlw	low fat_find_file@buffer
 33837  0051BE  6E1A               	movwf	flash_partial_read@data,c
 33838  0051C0  0E00               	movlw	high fat_find_file@buffer
 33839  0051C2  6E1B               	movwf	flash_partial_read@data+1,c
 33840  0051C4  ECE8  F030         	call	_flash_partial_read	;wreg free
 33841                           
 33842                           ;fat16.c: 262: if(buffer[0]==0x00)
 33843  0051C8  502C               	movf	fat_find_file@buffer,w,c
 33844  0051CA  A4D8               	btfss	status,2,c
 33845  0051CC  D002               	goto	l1800
 33846                           
 33847                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 33848  0051CE  0EFF               	movlw	255
 33849  0051D0  0012               	return	
 33850  0051D2                     l1800:
 33851                           
 33852                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 33853  0051D2  0EE5               	movlw	229
 33854  0051D4  182C               	xorwf	fat_find_file@buffer,w,c
 33855  0051D6  B4D8               	btfsc	status,2,c
 33856  0051D8  D026               	goto	l1806
 33857                           
 33858                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 33859                           
 33860                           ;fat16.c: 269: {;fat16.c: 273: }
 33861  0051DA  C028  F001         	movff	fat_find_file@name,strncmp@s1
 33862  0051DE  C029  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 33863  0051E2  0E2C               	movlw	low fat_find_file@buffer
 33864  0051E4  6E03               	movwf	strncmp@s2,c
 33865  0051E6  0E00               	movlw	high fat_find_file@buffer
 33866  0051E8  6E04               	movwf	strncmp@s2+1,c
 33867  0051EA  0E00               	movlw	0
 33868  0051EC  6E06               	movwf	strncmp@len+1,c
 33869  0051EE  0E08               	movlw	8
 33870  0051F0  6E05               	movwf	strncmp@len,c
 33871  0051F2  EC5D  F028         	call	_strncmp	;wreg free
 33872  0051F6  5001               	movf	?_strncmp,w,c
 33873  0051F8  1002               	iorwf	?_strncmp+1,w,c
 33874  0051FA  A4D8               	btfss	status,2,c
 33875  0051FC  D014               	goto	l1806
 33876                           
 33877                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 33878  0051FE  C02A  F001         	movff	fat_find_file@extension,strncmp@s1
 33879  005202  C02B  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 33880  005206  0E34               	movlw	low (fat_find_file@buffer+8)
 33881  005208  6E03               	movwf	strncmp@s2,c
 33882  00520A  0E00               	movlw	high (fat_find_file@buffer+8)
 33883  00520C  6E04               	movwf	strncmp@s2+1,c
 33884  00520E  0E00               	movlw	0
 33885  005210  6E06               	movwf	strncmp@len+1,c
 33886  005212  0E03               	movlw	3
 33887  005214  6E05               	movwf	strncmp@len,c
 33888  005216  EC5D  F028         	call	_strncmp	;wreg free
 33889  00521A  5001               	movf	?_strncmp,w,c
 33890  00521C  1002               	iorwf	?_strncmp+1,w,c
 33891  00521E  A4D8               	btfss	status,2,c
 33892  005220  D002               	goto	l1806
 33893                           
 33894                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 33895  005222  5037               	movf	fat_find_file@slot,w,c
 33896  005224  0012               	return	
 33897  005226                     l1806:
 33898                           
 33899                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 33900  005226  2A37               	incf	fat_find_file@slot,f,c
 33901  005228  0E20               	movlw	32
 33902  00522A  263A               	addwf	fat_find_file@offset,f,c
 33903  00522C  0E00               	movlw	0
 33904  00522E  223B               	addwfc	fat_find_file@offset+1,f,c
 33905  005230  D7B5               	goto	l10149
 33906  005232                     u7600:
 33907  005232  4A38               	infsnz	fat_find_file@sector,f,c
 33908  005234  2A39               	incf	fat_find_file@sector+1,f,c
 33909  005236  D7A8               	goto	l10143
 33910  005238                     u7610:
 33911  005238                     l10185:
 33912                           
 33913                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 33914  005238  0EFF               	movlw	255
 33915  00523A  0012               	return	
 33916  00523C                     __end_of_fat_find_file:
 33917                           	opt stack 0
 33918                           tosu	equ	0xFFF
 33919                           tosh	equ	0xFFE
 33920                           tosl	equ	0xFFD
 33921                           pclath	equ	0xFFA
 33922                           tblptru	equ	0xFF8
 33923                           tblptrh	equ	0xFF7
 33924                           tblptrl	equ	0xFF6
 33925                           tablat	equ	0xFF5
 33926                           prodh	equ	0xFF4
 33927                           prodl	equ	0xFF3
 33928                           intcon	equ	0xFF2
 33929                           intcon2	equ	0xFF1
 33930                           intcon3	equ	0xFF0
 33931                           indf0	equ	0xFEF
 33932                           postinc0	equ	0xFEE
 33933                           fsr0h	equ	0xFEA
 33934                           fsr0l	equ	0xFE9
 33935                           wreg	equ	0xFE8
 33936                           indf1	equ	0xFE7
 33937                           postdec1	equ	0xFE5
 33938                           plusw1	equ	0xFE3
 33939                           fsr1h	equ	0xFE2
 33940                           fsr1l	equ	0xFE1
 33941                           indf2	equ	0xFDF
 33942                           postinc2	equ	0xFDE
 33943                           postdec2	equ	0xFDD
 33944                           plusw2	equ	0xFDB
 33945                           fsr2h	equ	0xFDA
 33946                           fsr2l	equ	0xFD9
 33947                           status	equ	0xFD8
 33948                           
 33949 ;; *************** function _strncmp *****************
 33950 ;; Defined at:
 33951 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 33952 ;; Parameters:    Size  Location     Type
 33953 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 33954 ;;		 -> bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 33955 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 33956 ;;		 -> fat_find_file@buffer(11), 
 33957 ;;  len             2    4[COMRAM] unsigned int 
 33958 ;; Auto vars:     Size  Location     Type
 33959 ;;		None
 33960 ;; Return value:  Size  Location     Type
 33961 ;;                  2    0[COMRAM] int 
 33962 ;; Registers used:
 33963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33964 ;; Tracked objects:
 33965 ;;		On entry : 0/0
 33966 ;;		On exit  : 0/0
 33967 ;;		Unchanged: 0/0
 33968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33969 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33972 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33973 ;;Total ram usage:        9 bytes
 33974 ;; Hardware stack levels used:    1
 33975 ;; This function calls:
 33976 ;;		Nothing
 33977 ;; This function is called by:
 33978 ;;		_fat_find_file
 33979 ;; This function uses a non-reentrant model
 33980 ;;
 33981                           
 33982                           	psect	text174
 33983  0050BA                     __ptext174:
 33984                           	opt stack 0
 33985  0050BA                     _strncmp:
 33986                           	opt stack 27
 33987                           
 33988                           ;incstack = 0
 33989  0050BA  D053               	goto	l3317
 33990  0050BC                     l9679:
 33991  0050BC  C001  FFF6         	movff	strncmp@s1,tblptrl
 33992  0050C0  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33993  0050C4  6AF8               	clrf	tblptru,c
 33994  0050C6  0E0E               	movlw	(high __ramtop+-1)
 33995  0050C8  64F7               	cpfsgt	tblptrh,c
 33996  0050CA  D003               	bra	u6797
 33997  0050CC  0008               	tblrd		*
 33998  0050CE  50F5               	movf	tablat,w,c
 33999  0050D0  D005               	bra	u6790
 34000  0050D2                     u6797:
 34001  0050D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 34002  0050D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 34003  0050DA  50EF               	movf	indf0,w,c
 34004  0050DC                     u6790:
 34005  0050DC  0900               	iorlw	0
 34006  0050DE  B4D8               	btfsc	status,2,c
 34007  0050E0  D019               	goto	u6810
 34008  0050E2  C003  FFD9         	movff	strncmp@s2,fsr2l
 34009  0050E6  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 34010  0050EA  50DF               	movf	indf2,w,c
 34011  0050EC  6E07               	movwf	??_strncmp& (0+255),c
 34012  0050EE  C001  FFF6         	movff	strncmp@s1,tblptrl
 34013  0050F2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34014  0050F6  6AF8               	clrf	tblptru,c
 34015  0050F8  0E0E               	movlw	(high __ramtop+-1)
 34016  0050FA  64F7               	cpfsgt	tblptrh,c
 34017  0050FC  D003               	bra	u6817
 34018  0050FE  0008               	tblrd		*
 34019  005100  50F5               	movf	tablat,w,c
 34020  005102  D005               	bra	u6815
 34021  005104                     u6817:
 34022  005104  CFF6 FFE9          	movff	tblptrl,fsr0l
 34023  005108  CFF7 FFEA          	movff	tblptrh,fsr0h
 34024  00510C  50EF               	movf	indf0,w,c
 34025  00510E                     u6815:
 34026  00510E  1807               	xorwf	??_strncmp,w,c
 34027  005110  B4D8               	btfsc	status,2,c
 34028  005112  D023               	goto	l3319
 34029  005114                     u6810:
 34030  005114  C003  FFD9         	movff	strncmp@s2,fsr2l
 34031  005118  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 34032  00511C  50DF               	movf	indf2,w,c
 34033  00511E  6E07               	movwf	??_strncmp& (0+255),c
 34034  005120  6A08               	clrf	(??_strncmp+1)& (0+255),c
 34035  005122  1E07               	comf	??_strncmp,f,c
 34036  005124  1E08               	comf	??_strncmp+1,f,c
 34037  005126  4A07               	infsnz	??_strncmp,f,c
 34038  005128  2A08               	incf	??_strncmp+1,f,c
 34039  00512A  C001  FFF6         	movff	strncmp@s1,tblptrl
 34040  00512E  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34041  005132  6AF8               	clrf	tblptru,c
 34042  005134  0E0E               	movlw	(high __ramtop+-1)
 34043  005136  64F7               	cpfsgt	tblptrh,c
 34044  005138  D003               	bra	u6827
 34045  00513A  0008               	tblrd		*
 34046  00513C  50F5               	movf	tablat,w,c
 34047  00513E  D005               	bra	u6820
 34048  005140                     u6827:
 34049  005140  CFF6 FFE9          	movff	tblptrl,fsr0l
 34050  005144  CFF7 FFEA          	movff	tblptrh,fsr0h
 34051  005148  50EF               	movf	indf0,w,c
 34052  00514A                     u6820:
 34053  00514A  6E09               	movwf	(??_strncmp+2)& (0+255),c
 34054  00514C  5009               	movf	??_strncmp+2,w,c
 34055  00514E  2407               	addwf	??_strncmp,w,c
 34056  005150  6E01               	movwf	?_strncmp,c
 34057  005152  0E00               	movlw	0
 34058  005154  2008               	addwfc	??_strncmp+1,w,c
 34059  005156  6E02               	movwf	?_strncmp+1,c
 34060  005158  0012               	return	
 34061  00515A                     l3319:
 34062  00515A  4A01               	infsnz	strncmp@s1,f,c
 34063  00515C  2A02               	incf	strncmp@s1+1,f,c
 34064  00515E  4A03               	infsnz	strncmp@s2,f,c
 34065  005160  2A04               	incf	strncmp@s2+1,f,c
 34066  005162                     l3317:
 34067  005162  0605               	decf	strncmp@len,f,c
 34068  005164  A0D8               	btfss	status,0,c
 34069  005166  0606               	decf	strncmp@len+1,f,c
 34070  005168  2805               	incf	strncmp@len,w,c
 34071  00516A  E1A8               	bnz	l9679
 34072  00516C  2806               	incf	strncmp@len+1,w,c
 34073  00516E  A4D8               	btfss	status,2,c
 34074  005170  D7A5               	goto	l3318
 34075  005172  0E00               	movlw	0
 34076  005174  6E02               	movwf	?_strncmp+1,c
 34077  005176  0E00               	movlw	0
 34078  005178  6E01               	movwf	?_strncmp,c
 34079  00517A  0012               	return	
 34080  00517C                     __end_of_strncmp:
 34081                           	opt stack 0
 34082                           tosu	equ	0xFFF
 34083                           tosh	equ	0xFFE
 34084                           tosl	equ	0xFFD
 34085                           pclath	equ	0xFFA
 34086                           tblptru	equ	0xFF8
 34087                           tblptrh	equ	0xFF7
 34088                           tblptrl	equ	0xFF6
 34089                           tablat	equ	0xFF5
 34090                           prodh	equ	0xFF4
 34091                           prodl	equ	0xFF3
 34092                           intcon	equ	0xFF2
 34093                           intcon2	equ	0xFF1
 34094                           intcon3	equ	0xFF0
 34095                           indf0	equ	0xFEF
 34096                           postinc0	equ	0xFEE
 34097                           fsr0h	equ	0xFEA
 34098                           fsr0l	equ	0xFE9
 34099                           wreg	equ	0xFE8
 34100                           indf1	equ	0xFE7
 34101                           postdec1	equ	0xFE5
 34102                           plusw1	equ	0xFE3
 34103                           fsr1h	equ	0xFE2
 34104                           fsr1l	equ	0xFE1
 34105                           indf2	equ	0xFDF
 34106                           postinc2	equ	0xFDE
 34107                           postdec2	equ	0xFDD
 34108                           plusw2	equ	0xFDB
 34109                           fsr2h	equ	0xFDA
 34110                           fsr2l	equ	0xFD9
 34111                           status	equ	0xFD8
 34112                           
 34113 ;; *************** function __get_available_root_entry *****************
 34114 ;; Defined at:
 34115 ;;		line 94 in file "fat16.c"
 34116 ;; Parameters:    Size  Location     Type
 34117 ;;		None
 34118 ;; Auto vars:     Size  Location     Type
 34119 ;;  file_number     1   46[COMRAM] unsigned char 
 34120 ;; Return value:  Size  Location     Type
 34121 ;;                  1    wreg      unsigned char 
 34122 ;; Registers used:
 34123 ;;		wreg, status,2, status,0, cstack
 34124 ;; Tracked objects:
 34125 ;;		On entry : 0/0
 34126 ;;		On exit  : 0/0
 34127 ;;		Unchanged: 0/0
 34128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34133 ;;Total ram usage:        1 bytes
 34134 ;; Hardware stack levels used:    1
 34135 ;; Hardware stack levels required when called:    6
 34136 ;; This function calls:
 34137 ;;		__root_is_available
 34138 ;; This function is called by:
 34139 ;;		_fat_create_file
 34140 ;; This function uses a non-reentrant model
 34141 ;;
 34142                           
 34143                           	psect	text175
 34144  0077E6                     __ptext175:
 34145                           	opt stack 0
 34146  0077E6                     __get_available_root_entry:
 34147                           	opt stack 19
 34148                           
 34149                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 34150                           
 34151                           ;incstack = 0
 34152  0077E6  0E00               	movlw	0
 34153  0077E8  6E2F               	movwf	__get_available_root_entry@file_number,c
 34154  0077EA                     l10025:
 34155  0077EA  0E3F               	movlw	63
 34156  0077EC  642F               	cpfsgt	__get_available_root_entry@file_number,c
 34157  0077EE  D001               	goto	l1756
 34158  0077F0  D00A               	goto	u7430
 34159  0077F2                     l1756:
 34160                           
 34161                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 34162  0077F2  502F               	movf	__get_available_root_entry@file_number,w,c
 34163  0077F4  EC24  F031         	call	__root_is_available
 34164  0077F8  0900               	iorlw	0
 34165  0077FA  B4D8               	btfsc	status,2,c
 34166  0077FC  D002               	goto	l1758
 34167                           
 34168                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 34169  0077FE  502F               	movf	__get_available_root_entry@file_number,w,c
 34170  007800  0012               	return	
 34171  007802                     l1758:
 34172  007802  2A2F               	incf	__get_available_root_entry@file_number,f,c
 34173  007804  D7F2               	goto	l10025
 34174  007806                     u7430:
 34175                           
 34176                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 34177  007806  0EFF               	movlw	255
 34178  007808  0012               	return	
 34179  00780A                     __end_of__get_available_root_entry:
 34180                           	opt stack 0
 34181                           tosu	equ	0xFFF
 34182                           tosh	equ	0xFFE
 34183                           tosl	equ	0xFFD
 34184                           pclath	equ	0xFFA
 34185                           tblptru	equ	0xFF8
 34186                           tblptrh	equ	0xFF7
 34187                           tblptrl	equ	0xFF6
 34188                           tablat	equ	0xFF5
 34189                           prodh	equ	0xFF4
 34190                           prodl	equ	0xFF3
 34191                           intcon	equ	0xFF2
 34192                           intcon2	equ	0xFF1
 34193                           intcon3	equ	0xFF0
 34194                           indf0	equ	0xFEF
 34195                           postinc0	equ	0xFEE
 34196                           fsr0h	equ	0xFEA
 34197                           fsr0l	equ	0xFE9
 34198                           wreg	equ	0xFE8
 34199                           indf1	equ	0xFE7
 34200                           postdec1	equ	0xFE5
 34201                           plusw1	equ	0xFE3
 34202                           fsr1h	equ	0xFE2
 34203                           fsr1l	equ	0xFE1
 34204                           indf2	equ	0xFDF
 34205                           postinc2	equ	0xFDE
 34206                           postdec2	equ	0xFDD
 34207                           plusw2	equ	0xFDB
 34208                           fsr2h	equ	0xFDA
 34209                           fsr2l	equ	0xFD9
 34210                           status	equ	0xFD8
 34211                           
 34212 ;; *************** function __parse_file_append *****************
 34213 ;; Defined at:
 34214 ;;		line 535 in file "api.c"
 34215 ;; Parameters:    Size  Location     Type
 34216 ;;  data            2   66[COMRAM] PTR unsigned char 
 34217 ;;		 -> RAM(3759), 
 34218 ;; Auto vars:     Size  Location     Type
 34219 ;;		None
 34220 ;; Return value:  Size  Location     Type
 34221 ;;                  1    wreg      unsigned char 
 34222 ;; Registers used:
 34223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34224 ;; Tracked objects:
 34225 ;;		On entry : 0/0
 34226 ;;		On exit  : 0/0
 34227 ;;		Unchanged: 0/0
 34228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34233 ;;Total ram usage:        3 bytes
 34234 ;; Hardware stack levels used:    1
 34235 ;; Hardware stack levels required when called:    8
 34236 ;; This function calls:
 34237 ;;		_fat_append_to_file
 34238 ;; This function is called by:
 34239 ;;		__parse_command_long
 34240 ;; This function uses a non-reentrant model
 34241 ;;
 34242                           
 34243                           	psect	text176
 34244  005F62                     __ptext176:
 34245                           	opt stack 0
 34246  005F62                     __parse_file_append:
 34247                           	opt stack 19
 34248                           
 34249                           ;api.c: 538: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 34250                           
 34251                           ;incstack = 0
 34252  005F62  C043  FFD9         	movff	__parse_file_append@data,fsr2l
 34253  005F66  C044  FFDA         	movff	__parse_file_append@data+1,fsr2h
 34254  005F6A  0E54               	movlw	84
 34255  005F6C  18DE               	xorwf	postinc2,w,c
 34256  005F6E  A4D8               	btfss	status,2,c
 34257  005F70  D014               	goto	u9020
 34258  005F72  EE20 F003          	lfsr	2,3
 34259  005F76  5043               	movf	__parse_file_append@data,w,c
 34260  005F78  26D9               	addwf	fsr2l,f,c
 34261  005F7A  5044               	movf	__parse_file_append@data+1,w,c
 34262  005F7C  22DA               	addwfc	fsr2h,f,c
 34263  005F7E  0EFE               	movlw	254
 34264  005F80  18DE               	xorwf	postinc2,w,c
 34265  005F82  A4D8               	btfss	status,2,c
 34266  005F84  D00A               	goto	u9020
 34267  005F86  EE20 F004          	lfsr	2,4
 34268  005F8A  5043               	movf	__parse_file_append@data,w,c
 34269  005F8C  26D9               	addwf	fsr2l,f,c
 34270  005F8E  5044               	movf	__parse_file_append@data+1,w,c
 34271  005F90  22DA               	addwfc	fsr2h,f,c
 34272  005F92  0E4B               	movlw	75
 34273  005F94  18DE               	xorwf	postinc2,w,c
 34274  005F96  B4D8               	btfsc	status,2,c
 34275  005F98  D002               	goto	l2502
 34276  005F9A                     u9020:
 34277                           
 34278                           ;api.c: 539: {;api.c: 540: return 15;
 34279  005F9A  0E0F               	movlw	15
 34280  005F9C  0012               	return	
 34281  005F9E                     l2502:
 34282                           
 34283                           ;api.c: 541: };api.c: 544: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 34284  005F9E  EE20 F002          	lfsr	2,2
 34285  005FA2  5043               	movf	__parse_file_append@data,w,c
 34286  005FA4  26D9               	addwf	fsr2l,f,c
 34287  005FA6  5044               	movf	__parse_file_append@data+1,w,c
 34288  005FA8  22DA               	addwfc	fsr2h,f,c
 34289  005FAA  50DF               	movf	indf2,w,c
 34290  005FAC  6E45               	movwf	??__parse_file_append& (0+255),c
 34291  005FAE  5045               	movf	??__parse_file_append,w,c
 34292  005FB0  6E37               	movwf	fat_append_to_file@number_of_bytes,c
 34293  005FB2  6A38               	clrf	fat_append_to_file@number_of_bytes+1,c
 34294  005FB4  0E05               	movlw	5
 34295  005FB6  2443               	addwf	__parse_file_append@data,w,c
 34296  005FB8  6E39               	movwf	fat_append_to_file@data,c
 34297  005FBA  0E00               	movlw	0
 34298  005FBC  2044               	addwfc	__parse_file_append@data+1,w,c
 34299  005FBE  6E3A               	movwf	fat_append_to_file@data+1,c
 34300  005FC0  EE20 F001          	lfsr	2,1
 34301  005FC4  5043               	movf	__parse_file_append@data,w,c
 34302  005FC6  26D9               	addwf	fsr2l,f,c
 34303  005FC8  5044               	movf	__parse_file_append@data+1,w,c
 34304  005FCA  22DA               	addwfc	fsr2h,f,c
 34305  005FCC  50DF               	movf	indf2,w,c
 34306  005FCE  EC77  F010         	call	_fat_append_to_file
 34307                           
 34308                           ;api.c: 545: return data[2] + 5;
 34309  005FD2  EE20 F002          	lfsr	2,2
 34310  005FD6  5043               	movf	__parse_file_append@data,w,c
 34311  005FD8  26D9               	addwf	fsr2l,f,c
 34312  005FDA  5044               	movf	__parse_file_append@data+1,w,c
 34313  005FDC  22DA               	addwfc	fsr2h,f,c
 34314  005FDE  50DF               	movf	indf2,w,c
 34315  005FE0  0F05               	addlw	5
 34316  005FE2  0012               	return	
 34317  005FE4                     __end_of__parse_file_append:
 34318                           	opt stack 0
 34319                           tosu	equ	0xFFF
 34320                           tosh	equ	0xFFE
 34321                           tosl	equ	0xFFD
 34322                           pclath	equ	0xFFA
 34323                           tblptru	equ	0xFF8
 34324                           tblptrh	equ	0xFF7
 34325                           tblptrl	equ	0xFF6
 34326                           tablat	equ	0xFF5
 34327                           prodh	equ	0xFF4
 34328                           prodl	equ	0xFF3
 34329                           intcon	equ	0xFF2
 34330                           intcon2	equ	0xFF1
 34331                           intcon3	equ	0xFF0
 34332                           indf0	equ	0xFEF
 34333                           postinc0	equ	0xFEE
 34334                           fsr0h	equ	0xFEA
 34335                           fsr0l	equ	0xFE9
 34336                           wreg	equ	0xFE8
 34337                           indf1	equ	0xFE7
 34338                           postdec1	equ	0xFE5
 34339                           plusw1	equ	0xFE3
 34340                           fsr1h	equ	0xFE2
 34341                           fsr1l	equ	0xFE1
 34342                           indf2	equ	0xFDF
 34343                           postinc2	equ	0xFDE
 34344                           postdec2	equ	0xFDD
 34345                           plusw2	equ	0xFDB
 34346                           fsr2h	equ	0xFDA
 34347                           fsr2l	equ	0xFD9
 34348                           status	equ	0xFD8
 34349                           
 34350 ;; *************** function _fat_append_to_file *****************
 34351 ;; Defined at:
 34352 ;;		line 448 in file "fat16.c"
 34353 ;; Parameters:    Size  Location     Type
 34354 ;;  file_number     1    wreg     unsigned char 
 34355 ;;  number_of_by    2   54[COMRAM] unsigned int 
 34356 ;;  data            2   56[COMRAM] PTR unsigned char 
 34357 ;;		 -> RAM(3759), 
 34358 ;; Auto vars:     Size  Location     Type
 34359 ;;  file_number     1   12[BANK0 ] unsigned char 
 34360 ;;  root           32   19[BANK0 ] struct .
 34361 ;;  position        4   15[BANK0 ] unsigned long 
 34362 ;;  file_size       4    2[BANK0 ] unsigned long 
 34363 ;;  length          2   13[BANK0 ] unsigned int 
 34364 ;;  offset          2   10[BANK0 ] unsigned int 
 34365 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 34366 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 34367 ;;  sector          2    0[BANK0 ] unsigned int 
 34368 ;; Return value:  Size  Location     Type
 34369 ;;                  1    wreg      unsigned char 
 34370 ;; Registers used:
 34371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34372 ;; Tracked objects:
 34373 ;;		On entry : 0/0
 34374 ;;		On exit  : 0/0
 34375 ;;		Unchanged: 0/0
 34376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34377 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34378 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34379 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34380 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34381 ;;Total ram usage:       63 bytes
 34382 ;; Hardware stack levels used:    1
 34383 ;; Hardware stack levels required when called:    7
 34384 ;; This function calls:
 34385 ;;		__get_empty_cluster
 34386 ;;		__read_fat
 34387 ;;		__root_is_available
 34388 ;;		__sector_from_cluster
 34389 ;;		__update_modified_time
 34390 ;;		__write_fat
 34391 ;;		__write_root
 34392 ;;		_fat_get_file_information
 34393 ;;		_flash_partial_write
 34394 ;; This function is called by:
 34395 ;;		__parse_file_append
 34396 ;; This function uses a non-reentrant model
 34397 ;;
 34398                           
 34399                           	psect	text177
 34400  0020EE                     __ptext177:
 34401                           	opt stack 0
 34402  0020EE                     _fat_append_to_file:
 34403                           	opt stack 19
 34404                           
 34405                           ;incstack = 0
 34406                           ;fat_append_to_file@file_number stored from wreg
 34407  0020EE  0100               	movlb	0	; () banked
 34408  0020F0  6FCA               	movwf	fat_append_to_file@file_number& (0+255),b
 34409                           
 34410                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 34411  0020F2  0E3F               	movlw	63
 34412  0020F4  0100               	movlb	0	; () banked
 34413  0020F6  65CA               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 34414  0020F8  D001               	goto	l1836
 34415  0020FA  0012               	return	
 34416  0020FC                     l1836:
 34417                           
 34418                           ; BSR set to: 0
 34419                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 34420                           
 34421                           ; BSR set to: 0
 34422  0020FC  51CA               	movf	fat_append_to_file@file_number& (0+255),w,b
 34423  0020FE  EC24  F031         	call	__root_is_available
 34424  002102  0900               	iorlw	0
 34425  002104  A4D8               	btfss	status,2,c
 34426  002106  0012               	return	
 34427                           
 34428                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 34429                           
 34430                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 34431  002108  0ED1               	movlw	low fat_append_to_file@root
 34432  00210A  6E2F               	movwf	fat_get_file_information@data,c
 34433  00210C  0E00               	movlw	high fat_append_to_file@root
 34434  00210E  6E30               	movwf	fat_get_file_information@data+1,c
 34435  002110  0100               	movlb	0	; () banked
 34436  002112  51CA               	movf	fat_append_to_file@file_number& (0+255),w,b
 34437  002114  EC99  F031         	call	_fat_get_file_information
 34438                           
 34439                           ;fat16.c: 475: file_size = root.fileSize;
 34440  002118  C0ED  F0C0         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 34441  00211C  C0EE  F0C1         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 34442  002120  C0EF  F0C2         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 34443  002124  C0F0  F0C3         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 34444                           
 34445                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 34446  002128  C0EB  F0C6         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 34447  00212C  C0EC  F0C7         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 34448                           
 34449                           ;fat16.c: 479: position = 0;
 34450  002130  0E00               	movlw	0
 34451  002132  0100               	movlb	0	; () banked
 34452  002134  6FCD               	movwf	fat_append_to_file@position& (0+255),b
 34453  002136  0E00               	movlw	0
 34454  002138  6FCE               	movwf	(fat_append_to_file@position+1)& (0+255),b
 34455  00213A  0E00               	movlw	0
 34456  00213C  6FCF               	movwf	(fat_append_to_file@position+2)& (0+255),b
 34457  00213E  0E00               	movlw	0
 34458  002140  6FD0               	movwf	(fat_append_to_file@position+3)& (0+255),b
 34459                           
 34460                           ;fat16.c: 480: while((file_size-position)>512)
 34461  002142  D013               	goto	l1839
 34462  002144                     l10771:
 34463                           
 34464                           ; BSR set to: 0
 34465                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 34466  002144  C0C6  F028         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 34467  002148  C0C7  F029         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 34468  00214C  EC91  F038         	call	__read_fat	;wreg free
 34469  002150  C028  F0C6         	movff	?__read_fat,fat_append_to_file@fat_cluster
 34470  002154  C029  F0C7         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 34471                           
 34472                           ;fat16.c: 483: position += 512;
 34473  002158  0E00               	movlw	0
 34474  00215A  0100               	movlb	0	; () banked
 34475  00215C  27CD               	addwf	fat_append_to_file@position& (0+255),f,b
 34476  00215E  0E02               	movlw	2
 34477  002160  23CE               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 34478  002162  0E00               	movlw	0
 34479  002164  23CF               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 34480  002166  0E00               	movlw	0
 34481  002168  23D0               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 34482  00216A                     l1839:
 34483                           
 34484                           ; BSR set to: 0
 34485                           
 34486                           ; BSR set to: 0
 34487  00216A  C0CD  F03B         	movff	fat_append_to_file@position,??_fat_append_to_file
 34488  00216E  C0CE  F03C         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 34489  002172  C0CF  F03D         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 34490  002176  C0D0  F03E         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 34491  00217A  1E3B               	comf	??_fat_append_to_file,f,c
 34492  00217C  1E3C               	comf	??_fat_append_to_file+1,f,c
 34493  00217E  1E3D               	comf	??_fat_append_to_file+2,f,c
 34494  002180  1E3E               	comf	??_fat_append_to_file+3,f,c
 34495  002182  2A3B               	incf	??_fat_append_to_file,f,c
 34496  002184  0E00               	movlw	0
 34497  002186  223C               	addwfc	??_fat_append_to_file+1,f,c
 34498  002188  223D               	addwfc	??_fat_append_to_file+2,f,c
 34499  00218A  223E               	addwfc	??_fat_append_to_file+3,f,c
 34500  00218C  51C0               	movf	fat_append_to_file@file_size& (0+255),w,b
 34501  00218E  243B               	addwf	??_fat_append_to_file,w,c
 34502  002190  6E3F               	movwf	(??_fat_append_to_file+4)& (0+255),c
 34503  002192  51C1               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 34504  002194  203C               	addwfc	??_fat_append_to_file+1,w,c
 34505  002196  6E40               	movwf	(??_fat_append_to_file+5)& (0+255),c
 34506  002198  51C2               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 34507  00219A  203D               	addwfc	??_fat_append_to_file+2,w,c
 34508  00219C  6E41               	movwf	(??_fat_append_to_file+6)& (0+255),c
 34509  00219E  51C3               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 34510  0021A0  203E               	addwfc	??_fat_append_to_file+3,w,c
 34511  0021A2  6E42               	movwf	(??_fat_append_to_file+7)& (0+255),c
 34512  0021A4  5042               	movf	??_fat_append_to_file+7,w,c
 34513  0021A6  1041               	iorwf	??_fat_append_to_file+6,w,c
 34514  0021A8  E1CD               	bnz	l10771
 34515  0021AA  043F               	decf	??_fat_append_to_file+4,w,c
 34516  0021AC  0E02               	movlw	2
 34517  0021AE  5840               	subwfb	??_fat_append_to_file+5,w,c
 34518  0021B0  B0D8               	btfsc	status,0,c
 34519  0021B2  D7C8               	goto	l1840
 34520                           
 34521                           ; BSR set to: 0
 34522                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 34523                           
 34524                           ; BSR set to: 0
 34525  0021B4  C0CD  F03B         	movff	fat_append_to_file@position,??_fat_append_to_file
 34526  0021B8  C0CE  F03C         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 34527  0021BC  1E3B               	comf	??_fat_append_to_file,f,c
 34528  0021BE  1E3C               	comf	??_fat_append_to_file+1,f,c
 34529  0021C0  4A3B               	infsnz	??_fat_append_to_file,f,c
 34530  0021C2  2A3C               	incf	??_fat_append_to_file+1,f,c
 34531  0021C4  51C0               	movf	fat_append_to_file@file_size& (0+255),w,b
 34532  0021C6  243B               	addwf	??_fat_append_to_file,w,c
 34533  0021C8  6FC8               	movwf	fat_append_to_file@offset& (0+255),b
 34534  0021CA  51C1               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 34535  0021CC  203C               	addwfc	??_fat_append_to_file+1,w,c
 34536  0021CE  6FC9               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 34537                           
 34538                           ; BSR set to: 0
 34539                           ;fat16.c: 490: position = 0;
 34540  0021D0  0E00               	movlw	0
 34541  0021D2  6FCD               	movwf	fat_append_to_file@position& (0+255),b
 34542  0021D4  0E00               	movlw	0
 34543  0021D6  6FCE               	movwf	(fat_append_to_file@position+1)& (0+255),b
 34544  0021D8  0E00               	movlw	0
 34545  0021DA  6FCF               	movwf	(fat_append_to_file@position+2)& (0+255),b
 34546  0021DC  0E00               	movlw	0
 34547  0021DE  6FD0               	movwf	(fat_append_to_file@position+3)& (0+255),b
 34548                           
 34549                           ;fat16.c: 491: while(position < number_of_bytes)
 34550  0021E0  D06F               	goto	l1842
 34551  0021E2                     
 34552                           ; BSR set to: 0
 34553                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 34554                           
 34555                           ; BSR set to: 0
 34556  0021E2  0E02               	movlw	2
 34557  0021E4  19C9               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 34558  0021E6  11C8               	iorwf	fat_append_to_file@offset& (0+255),w,b
 34559  0021E8  A4D8               	btfss	status,2,c
 34560  0021EA  D026               	goto	l1844
 34561                           
 34562                           ; BSR set to: 0
 34563                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 34564  0021EC  0E00               	movlw	0
 34565  0021EE  6E29               	movwf	__get_empty_cluster@first_cluster+1,c
 34566  0021F0  0E00               	movlw	0
 34567  0021F2  6E28               	movwf	__get_empty_cluster@first_cluster,c
 34568  0021F4  ECD3  F031         	call	__get_empty_cluster	;wreg free
 34569  0021F8  C028  F0C4         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 34570  0021FC  C029  F0C5         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 34571                           
 34572                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 34573  002200  C0C6  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 34574  002204  C0C7  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 34575  002208  C0C4  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 34576  00220C  C0C5  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 34577  002210  EC5A  F039         	call	__write_fat	;wreg free
 34578                           
 34579                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 34580  002214  C0C4  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 34581  002218  C0C5  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 34582  00221C  0EFF               	movlw	255
 34583  00221E  6E2C               	movwf	__write_fat@value+1,c
 34584  002220  682B               	setf	__write_fat@value,c
 34585  002222  EC5A  F039         	call	__write_fat	;wreg free
 34586                           
 34587                           ;fat16.c: 504: fat_cluster = new_cluster;
 34588  002226  C0C4  F0C6         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 34589  00222A  C0C5  F0C7         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 34590                           
 34591                           ;fat16.c: 505: offset = 0;
 34592  00222E  0E00               	movlw	0
 34593  002230  0100               	movlb	0	; () banked
 34594  002232  6FC9               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 34595  002234  0E00               	movlw	0
 34596  002236  6FC8               	movwf	fat_append_to_file@offset& (0+255),b
 34597  002238                     l1844:
 34598                           
 34599                           ; BSR set to: 0
 34600                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 34601                           
 34602                           ; BSR set to: 0
 34603  002238  C0C6  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 34604  00223C  C0C7  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 34605  002240  ECF5  F03C         	call	__sector_from_cluster	;wreg free
 34606  002244  C001  F0BE         	movff	?__sector_from_cluster,fat_append_to_file@sector
 34607  002248  C002  F0BF         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 34608                           
 34609                           ;fat16.c: 512: length = 512 - offset;
 34610  00224C  C0C8  F03B         	movff	fat_append_to_file@offset,??_fat_append_to_file
 34611  002250  C0C9  F03C         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 34612  002254  1E3B               	comf	??_fat_append_to_file,f,c
 34613  002256  1E3C               	comf	??_fat_append_to_file+1,f,c
 34614  002258  4A3B               	infsnz	??_fat_append_to_file,f,c
 34615  00225A  2A3C               	incf	??_fat_append_to_file+1,f,c
 34616  00225C  0E00               	movlw	0
 34617  00225E  243B               	addwf	??_fat_append_to_file,w,c
 34618  002260  0100               	movlb	0	; () banked
 34619  002262  6FCB               	movwf	fat_append_to_file@length& (0+255),b
 34620  002264  0E02               	movlw	2
 34621  002266  203C               	addwfc	??_fat_append_to_file+1,w,c
 34622  002268  6FCC               	movwf	(fat_append_to_file@length+1)& (0+255),b
 34623                           
 34624                           ; BSR set to: 0
 34625                           ;fat16.c: 513: if(length>number_of_bytes)
 34626  00226A  51CB               	movf	fat_append_to_file@length& (0+255),w,b
 34627  00226C  5C37               	subwf	fat_append_to_file@number_of_bytes,w,c
 34628  00226E  51CC               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34629  002270  5838               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 34630  002272  B0D8               	btfsc	status,0,c
 34631  002274  D004               	goto	l1845
 34632                           
 34633                           ; BSR set to: 0
 34634                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 34635  002276  C037  F0CB         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 34636  00227A  C038  F0CC         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 34637  00227E                     l1845:
 34638                           
 34639                           ; BSR set to: 0
 34640                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 34641                           
 34642                           ; BSR set to: 0
 34643  00227E  C0BE  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 34644  002282  C0BF  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 34645  002286  C0C8  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 34646  00228A  C0C9  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 34647  00228E  C0CB  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 34648  002292  C0CC  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 34649  002296  51CD               	movf	fat_append_to_file@position& (0+255),w,b
 34650  002298  2439               	addwf	fat_append_to_file@data,w,c
 34651  00229A  6E26               	movwf	flash_partial_write@data,c
 34652  00229C  51CE               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 34653  00229E  203A               	addwfc	fat_append_to_file@data+1,w,c
 34654  0022A0  6E27               	movwf	flash_partial_write@data+1,c
 34655  0022A2  EC59  F034         	call	_flash_partial_write	;wreg free
 34656                           
 34657                           ;fat16.c: 522: position += length;
 34658  0022A6  0100               	movlb	0	; () banked
 34659  0022A8  51CB               	movf	fat_append_to_file@length& (0+255),w,b
 34660  0022AA  27CD               	addwf	fat_append_to_file@position& (0+255),f,b
 34661  0022AC  51CC               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34662  0022AE  23CE               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 34663  0022B0  0E00               	movlw	0
 34664  0022B2  23CF               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 34665  0022B4  0E00               	movlw	0
 34666  0022B6  23D0               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 34667                           
 34668                           ; BSR set to: 0
 34669                           ;fat16.c: 523: offset += length;
 34670  0022B8  51CB               	movf	fat_append_to_file@length& (0+255),w,b
 34671  0022BA  27C8               	addwf	fat_append_to_file@offset& (0+255),f,b
 34672  0022BC  51CC               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34673  0022BE  23C9               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 34674  0022C0                     l1842:
 34675                           
 34676                           ; BSR set to: 0
 34677                           
 34678                           ; BSR set to: 0
 34679  0022C0  5037               	movf	fat_append_to_file@number_of_bytes,w,c
 34680  0022C2  6E3B               	movwf	??_fat_append_to_file& (0+255),c
 34681  0022C4  5038               	movf	fat_append_to_file@number_of_bytes+1,w,c
 34682  0022C6  6E3C               	movwf	(??_fat_append_to_file+1)& (0+255),c
 34683  0022C8  6A3D               	clrf	(??_fat_append_to_file+2)& (0+255),c
 34684  0022CA  6A3E               	clrf	(??_fat_append_to_file+3)& (0+255),c
 34685  0022CC  503B               	movf	??_fat_append_to_file,w,c
 34686  0022CE  5DCD               	subwf	fat_append_to_file@position& (0+255),w,b
 34687  0022D0  503C               	movf	??_fat_append_to_file+1,w,c
 34688  0022D2  59CE               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 34689  0022D4  503D               	movf	??_fat_append_to_file+2,w,c
 34690  0022D6  59CF               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 34691  0022D8  503E               	movf	??_fat_append_to_file+3,w,c
 34692  0022DA  59D0               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 34693  0022DC  A0D8               	btfss	status,0,c
 34694  0022DE  D781               	goto	l1843
 34695                           
 34696                           ; BSR set to: 0
 34697                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 34698                           
 34699                           ; BSR set to: 0
 34700  0022E0  5037               	movf	fat_append_to_file@number_of_bytes,w,c
 34701  0022E2  27ED               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 34702  0022E4  5038               	movf	fat_append_to_file@number_of_bytes+1,w,c
 34703  0022E6  23EE               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 34704  0022E8  0E00               	movlw	0
 34705  0022EA  23EF               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 34706  0022EC  0E00               	movlw	0
 34707  0022EE  23F0               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 34708                           
 34709                           ; BSR set to: 0
 34710                           ;fat16.c: 529: _update_modified_time(&root);
 34711  0022F0  0ED1               	movlw	low fat_append_to_file@root
 34712  0022F2  6E05               	movwf	__update_modified_time@root,c
 34713  0022F4  0E00               	movlw	high fat_append_to_file@root
 34714  0022F6  6E06               	movwf	__update_modified_time@root+1,c
 34715  0022F8  EC8C  F03A         	call	__update_modified_time	;wreg free
 34716                           
 34717                           ;fat16.c: 530: _write_root(file_number, &root);
 34718  0022FC  0ED1               	movlw	low fat_append_to_file@root
 34719  0022FE  6E29               	movwf	__write_root@data,c
 34720  002300  0E00               	movlw	high fat_append_to_file@root
 34721  002302  6E2A               	movwf	__write_root@data+1,c
 34722  002304  0100               	movlb	0	; () banked
 34723  002306  51CA               	movf	fat_append_to_file@file_number& (0+255),w,b
 34724  002308  EC01  F036         	call	__write_root
 34725  00230C  0012               	return	
 34726  00230E                     __end_of_fat_append_to_file:
 34727                           	opt stack 0
 34728                           tosu	equ	0xFFF
 34729                           tosh	equ	0xFFE
 34730                           tosl	equ	0xFFD
 34731                           pclath	equ	0xFFA
 34732                           tblptru	equ	0xFF8
 34733                           tblptrh	equ	0xFF7
 34734                           tblptrl	equ	0xFF6
 34735                           tablat	equ	0xFF5
 34736                           prodh	equ	0xFF4
 34737                           prodl	equ	0xFF3
 34738                           intcon	equ	0xFF2
 34739                           intcon2	equ	0xFF1
 34740                           intcon3	equ	0xFF0
 34741                           indf0	equ	0xFEF
 34742                           postinc0	equ	0xFEE
 34743                           fsr0h	equ	0xFEA
 34744                           fsr0l	equ	0xFE9
 34745                           wreg	equ	0xFE8
 34746                           indf1	equ	0xFE7
 34747                           postdec1	equ	0xFE5
 34748                           plusw1	equ	0xFE3
 34749                           fsr1h	equ	0xFE2
 34750                           fsr1l	equ	0xFE1
 34751                           indf2	equ	0xFDF
 34752                           postinc2	equ	0xFDE
 34753                           postdec2	equ	0xFDD
 34754                           plusw2	equ	0xFDB
 34755                           fsr2h	equ	0xFDA
 34756                           fsr2l	equ	0xFD9
 34757                           status	equ	0xFD8
 34758                           
 34759 ;; *************** function _fat_get_file_information *****************
 34760 ;; Defined at:
 34761 ;;		line 1020 in file "fat16.c"
 34762 ;; Parameters:    Size  Location     Type
 34763 ;;  file_number     1    wreg     unsigned char 
 34764 ;;  data            2   46[COMRAM] PTR struct .
 34765 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), RAM(3759), 
 34766 ;; Auto vars:     Size  Location     Type
 34767 ;;  file_number     1   53[COMRAM] unsigned char 
 34768 ;;  offset          2   51[COMRAM] unsigned int 
 34769 ;;  root_sector     2   49[COMRAM] unsigned int 
 34770 ;; Return value:  Size  Location     Type
 34771 ;;                  1    wreg      unsigned char 
 34772 ;; Registers used:
 34773 ;;		wreg, status,2, status,0, cstack
 34774 ;; Tracked objects:
 34775 ;;		On entry : 0/0
 34776 ;;		On exit  : 0/0
 34777 ;;		Unchanged: 0/0
 34778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34780 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34783 ;;Total ram usage:        8 bytes
 34784 ;; Hardware stack levels used:    1
 34785 ;; Hardware stack levels required when called:    6
 34786 ;; This function calls:
 34787 ;;		__root_is_available
 34788 ;;		_flash_partial_read
 34789 ;; This function is called by:
 34790 ;;		_fat_append_to_file
 34791 ;;		_fat_rename_file
 34792 ;;		_fat_read_from_file
 34793 ;;		__fill_buffer_get_file_details
 34794 ;; This function uses a non-reentrant model
 34795 ;;
 34796                           
 34797                           	psect	text178
 34798  006332                     __ptext178:
 34799                           	opt stack 0
 34800  006332                     _fat_get_file_information:
 34801                           	opt stack 21
 34802                           
 34803                           ;incstack = 0
 34804                           ;fat_get_file_information@file_number stored from wreg
 34805  006332  6E36               	movwf	fat_get_file_information@file_number,c
 34806                           
 34807                           ;fat16.c: 1022: uint16_t root_sector;;fat16.c: 1023: uint16_t offset;;fat16.c: 1025: if(
      +                          file_number>=64)
 34808  006334  0E3F               	movlw	63
 34809  006336  6436               	cpfsgt	fat_get_file_information@file_number,c
 34810  006338  D002               	goto	l2028
 34811                           
 34812                           ;fat16.c: 1026: {;fat16.c: 1028: return 0x01;
 34813  00633A  0E01               	movlw	1
 34814  00633C  0012               	return	
 34815  00633E                     l2028:
 34816                           
 34817                           ;fat16.c: 1029: };fat16.c: 1030: if(_root_is_available(file_number))
 34818  00633E  5036               	movf	fat_get_file_information@file_number,w,c
 34819  006340  EC24  F031         	call	__root_is_available
 34820  006344  0900               	iorlw	0
 34821  006346  B4D8               	btfsc	status,2,c
 34822  006348  D002               	goto	l2030
 34823                           
 34824                           ;fat16.c: 1031: {;fat16.c: 1033: return 0x02;
 34825  00634A  0E02               	movlw	2
 34826  00634C  0012               	return	
 34827  00634E                     l2030:
 34828                           
 34829                           ;fat16.c: 1034: };fat16.c: 1036: root_sector = (file_number >> 4) + 18;
 34830  00634E  C036  F031         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 34831  006352  3A31               	swapf	??_fat_get_file_information,f,c
 34832  006354  0E0F               	movlw	15
 34833  006356  1631               	andwf	??_fat_get_file_information,f,c
 34834  006358  0E12               	movlw	18
 34835  00635A  2431               	addwf	??_fat_get_file_information,w,c
 34836  00635C  6E32               	movwf	fat_get_file_information@root_sector,c
 34837  00635E  6A33               	clrf	fat_get_file_information@root_sector+1,c
 34838  006360  0E00               	movlw	0
 34839  006362  2233               	addwfc	fat_get_file_information@root_sector+1,f,c
 34840                           
 34841                           ;fat16.c: 1037: offset = (file_number & 0b1111);
 34842  006364  C036  F031         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 34843  006368  0E0F               	movlw	15
 34844  00636A  1631               	andwf	??_fat_get_file_information,f,c
 34845  00636C  5031               	movf	??_fat_get_file_information,w,c
 34846  00636E  6E34               	movwf	fat_get_file_information@offset,c
 34847  006370  6A35               	clrf	fat_get_file_information@offset+1,c
 34848                           
 34849                           ;fat16.c: 1038: offset <<= 5;
 34850  006372  0E05               	movlw	5
 34851  006374                     u7645:
 34852  006374  90D8               	bcf	status,0,c
 34853  006376  3634               	rlcf	fat_get_file_information@offset,f,c
 34854  006378  3635               	rlcf	fat_get_file_information@offset+1,f,c
 34855  00637A  2EE8               	decfsz	wreg,f,c
 34856  00637C  D7FB               	goto	u7645
 34857                           
 34858                           ;fat16.c: 1039: flash_partial_read(root_sector, offset, 32, data);
 34859  00637E  C032  F014         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 34860  006382  C033  F015         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 34861  006386  C034  F016         	movff	fat_get_file_information@offset,flash_partial_read@start
 34862  00638A  C035  F017         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 34863  00638E  0E00               	movlw	0
 34864  006390  6E19               	movwf	flash_partial_read@length+1,c
 34865  006392  0E20               	movlw	32
 34866  006394  6E18               	movwf	flash_partial_read@length,c
 34867  006396  C02F  F01A         	movff	fat_get_file_information@data,flash_partial_read@data
 34868  00639A  C030  F01B         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 34869  00639E  ECE8  F030         	call	_flash_partial_read	;wreg free
 34870                           
 34871                           ;fat16.c: 1042: return 0x00;
 34872  0063A2  0E00               	movlw	0
 34873  0063A4  0012               	return	
 34874  0063A6                     __end_of_fat_get_file_information:
 34875                           	opt stack 0
 34876                           tosu	equ	0xFFF
 34877                           tosh	equ	0xFFE
 34878                           tosl	equ	0xFFD
 34879                           pclath	equ	0xFFA
 34880                           tblptru	equ	0xFF8
 34881                           tblptrh	equ	0xFF7
 34882                           tblptrl	equ	0xFF6
 34883                           tablat	equ	0xFF5
 34884                           prodh	equ	0xFF4
 34885                           prodl	equ	0xFF3
 34886                           intcon	equ	0xFF2
 34887                           intcon2	equ	0xFF1
 34888                           intcon3	equ	0xFF0
 34889                           indf0	equ	0xFEF
 34890                           postinc0	equ	0xFEE
 34891                           fsr0h	equ	0xFEA
 34892                           fsr0l	equ	0xFE9
 34893                           wreg	equ	0xFE8
 34894                           indf1	equ	0xFE7
 34895                           postdec1	equ	0xFE5
 34896                           plusw1	equ	0xFE3
 34897                           fsr1h	equ	0xFE2
 34898                           fsr1l	equ	0xFE1
 34899                           indf2	equ	0xFDF
 34900                           postinc2	equ	0xFDE
 34901                           postdec2	equ	0xFDD
 34902                           plusw2	equ	0xFDB
 34903                           fsr2h	equ	0xFDA
 34904                           fsr2l	equ	0xFD9
 34905                           status	equ	0xFD8
 34906                           
 34907 ;; *************** function __root_is_available *****************
 34908 ;; Defined at:
 34909 ;;		line 59 in file "fat16.c"
 34910 ;; Parameters:    Size  Location     Type
 34911 ;;  file_number     1    wreg     unsigned char 
 34912 ;; Auto vars:     Size  Location     Type
 34913 ;;  file_number     1   44[COMRAM] unsigned char 
 34914 ;;  offset          2   42[COMRAM] unsigned int 
 34915 ;;  root_sector     2   40[COMRAM] unsigned int 
 34916 ;;  first_byte      1   45[COMRAM] unsigned char 
 34917 ;; Return value:  Size  Location     Type
 34918 ;;                  1    wreg      unsigned char 
 34919 ;; Registers used:
 34920 ;;		wreg, status,2, status,0, cstack
 34921 ;; Tracked objects:
 34922 ;;		On entry : 0/0
 34923 ;;		On exit  : 0/0
 34924 ;;		Unchanged: 0/0
 34925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34927 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34929 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34930 ;;Total ram usage:        7 bytes
 34931 ;; Hardware stack levels used:    1
 34932 ;; Hardware stack levels required when called:    5
 34933 ;; This function calls:
 34934 ;;		_flash_partial_read
 34935 ;; This function is called by:
 34936 ;;		__get_available_root_entry
 34937 ;;		_fat_delete_file
 34938 ;;		_fat_append_to_file
 34939 ;;		_fat_get_file_information
 34940 ;; This function uses a non-reentrant model
 34941 ;;
 34942                           
 34943                           	psect	text179
 34944  006248                     __ptext179:
 34945                           	opt stack 0
 34946  006248                     __root_is_available:
 34947                           	opt stack 21
 34948                           
 34949                           ;incstack = 0
 34950                           ;__root_is_available@file_number stored from wreg
 34951  006248  6E2D               	movwf	__root_is_available@file_number,c
 34952                           
 34953                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 34954  00624A  0E3F               	movlw	63
 34955  00624C  642D               	cpfsgt	__root_is_available@file_number,c
 34956  00624E  D002               	goto	l1748
 34957                           
 34958                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 34959  006250  0E00               	movlw	0
 34960  006252  0012               	return	
 34961  006254                     l1748:
 34962                           
 34963                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 18;
 34964  006254  C02D  F028         	movff	__root_is_available@file_number,??__root_is_available
 34965  006258  3A28               	swapf	??__root_is_available,f,c
 34966  00625A  0E0F               	movlw	15
 34967  00625C  1628               	andwf	??__root_is_available,f,c
 34968  00625E  0E12               	movlw	18
 34969  006260  2428               	addwf	??__root_is_available,w,c
 34970  006262  6E29               	movwf	__root_is_available@root_sector,c
 34971  006264  6A2A               	clrf	__root_is_available@root_sector+1,c
 34972  006266  0E00               	movlw	0
 34973  006268  222A               	addwfc	__root_is_available@root_sector+1,f,c
 34974                           
 34975                           ;fat16.c: 75: offset = (file_number & 0b1111);
 34976  00626A  C02D  F028         	movff	__root_is_available@file_number,??__root_is_available
 34977  00626E  0E0F               	movlw	15
 34978  006270  1628               	andwf	??__root_is_available,f,c
 34979  006272  5028               	movf	??__root_is_available,w,c
 34980  006274  6E2B               	movwf	__root_is_available@offset,c
 34981  006276  6A2C               	clrf	__root_is_available@offset+1,c
 34982                           
 34983                           ;fat16.c: 76: offset <<= 5;
 34984  006278  0E05               	movlw	5
 34985  00627A                     u6765:
 34986  00627A  90D8               	bcf	status,0,c
 34987  00627C  362B               	rlcf	__root_is_available@offset,f,c
 34988  00627E  362C               	rlcf	__root_is_available@offset+1,f,c
 34989  006280  2EE8               	decfsz	wreg,f,c
 34990  006282  D7FB               	goto	u6765
 34991                           
 34992                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 34993  006284  C029  F014         	movff	__root_is_available@root_sector,flash_partial_read@page
 34994  006288  C02A  F015         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 34995  00628C  C02B  F016         	movff	__root_is_available@offset,flash_partial_read@start
 34996  006290  C02C  F017         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 34997  006294  0E00               	movlw	0
 34998  006296  6E19               	movwf	flash_partial_read@length+1,c
 34999  006298  0E01               	movlw	1
 35000  00629A  6E18               	movwf	flash_partial_read@length,c
 35001  00629C  0E2E               	movlw	low __root_is_available@first_byte
 35002  00629E  6E1A               	movwf	flash_partial_read@data,c
 35003  0062A0  0E00               	movlw	high __root_is_available@first_byte
 35004  0062A2  6E1B               	movwf	flash_partial_read@data+1,c
 35005  0062A4  ECE8  F030         	call	_flash_partial_read	;wreg free
 35006                           
 35007                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 35008  0062A8  502E               	movf	__root_is_available@first_byte,w,c
 35009  0062AA  B4D8               	btfsc	status,2,c
 35010  0062AC  D004               	goto	u6780
 35011  0062AE  0EE5               	movlw	229
 35012  0062B0  182E               	xorwf	__root_is_available@first_byte,w,c
 35013  0062B2  A4D8               	btfss	status,2,c
 35014  0062B4  D002               	goto	l1750
 35015  0062B6                     u6780:
 35016                           
 35017                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 35018  0062B6  0E01               	movlw	1
 35019                           
 35020                           ;fat16.c: 86: }
 35021  0062B8  0012               	return	
 35022  0062BA                     l1750:
 35023                           
 35024                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 35025  0062BA  0E00               	movlw	0
 35026  0062BC  0012               	return	
 35027  0062BE                     __end_of__root_is_available:
 35028                           	opt stack 0
 35029                           tosu	equ	0xFFF
 35030                           tosh	equ	0xFFE
 35031                           tosl	equ	0xFFD
 35032                           pclath	equ	0xFFA
 35033                           tblptru	equ	0xFF8
 35034                           tblptrh	equ	0xFF7
 35035                           tblptrl	equ	0xFF6
 35036                           tablat	equ	0xFF5
 35037                           prodh	equ	0xFF4
 35038                           prodl	equ	0xFF3
 35039                           intcon	equ	0xFF2
 35040                           intcon2	equ	0xFF1
 35041                           intcon3	equ	0xFF0
 35042                           indf0	equ	0xFEF
 35043                           postinc0	equ	0xFEE
 35044                           fsr0h	equ	0xFEA
 35045                           fsr0l	equ	0xFE9
 35046                           wreg	equ	0xFE8
 35047                           indf1	equ	0xFE7
 35048                           postdec1	equ	0xFE5
 35049                           plusw1	equ	0xFE3
 35050                           fsr1h	equ	0xFE2
 35051                           fsr1l	equ	0xFE1
 35052                           indf2	equ	0xFDF
 35053                           postinc2	equ	0xFDE
 35054                           postdec2	equ	0xFDD
 35055                           plusw2	equ	0xFDB
 35056                           fsr2h	equ	0xFDA
 35057                           fsr2l	equ	0xFD9
 35058                           status	equ	0xFD8
 35059                           
 35060 ;; *************** function __write_root *****************
 35061 ;; Defined at:
 35062 ;;		line 182 in file "fat16.c"
 35063 ;; Parameters:    Size  Location     Type
 35064 ;;  slot            1    wreg     unsigned char 
 35065 ;;  data            2   40[COMRAM] PTR struct .
 35066 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35067 ;; Auto vars:     Size  Location     Type
 35068 ;;  slot            1   47[COMRAM] unsigned char 
 35069 ;;  offset          2   45[COMRAM] unsigned int 
 35070 ;;  root_sector     2   43[COMRAM] unsigned int 
 35071 ;; Return value:  Size  Location     Type
 35072 ;;                  1    wreg      void 
 35073 ;; Registers used:
 35074 ;;		wreg, status,2, status,0, cstack
 35075 ;; Tracked objects:
 35076 ;;		On entry : 0/0
 35077 ;;		On exit  : 0/0
 35078 ;;		Unchanged: 0/0
 35079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35081 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35084 ;;Total ram usage:        8 bytes
 35085 ;; Hardware stack levels used:    1
 35086 ;; Hardware stack levels required when called:    6
 35087 ;; This function calls:
 35088 ;;		_flash_partial_write
 35089 ;; This function is called by:
 35090 ;;		_fat_create_file
 35091 ;;		_fat_append_to_file
 35092 ;;		_fat_rename_file
 35093 ;; This function uses a non-reentrant model
 35094 ;;
 35095                           
 35096                           	psect	text180
 35097  006C02                     __ptext180:
 35098                           	opt stack 0
 35099  006C02                     __write_root:
 35100                           	opt stack 19
 35101                           
 35102                           ;incstack = 0
 35103                           ;__write_root@slot stored from wreg
 35104  006C02  6E30               	movwf	__write_root@slot,c
 35105                           
 35106                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 18;
 35107  006C04  C030  F02B         	movff	__write_root@slot,??__write_root
 35108  006C08  3A2B               	swapf	??__write_root,f,c
 35109  006C0A  0E0F               	movlw	15
 35110  006C0C  162B               	andwf	??__write_root,f,c
 35111  006C0E  0E12               	movlw	18
 35112  006C10  242B               	addwf	??__write_root,w,c
 35113  006C12  6E2C               	movwf	__write_root@root_sector,c
 35114  006C14  6A2D               	clrf	__write_root@root_sector+1,c
 35115  006C16  0E00               	movlw	0
 35116  006C18  222D               	addwfc	__write_root@root_sector+1,f,c
 35117                           
 35118                           ;fat16.c: 187: offset = (slot & 0b1111);
 35119  006C1A  C030  F02B         	movff	__write_root@slot,??__write_root
 35120  006C1E  0E0F               	movlw	15
 35121  006C20  162B               	andwf	??__write_root,f,c
 35122  006C22  502B               	movf	??__write_root,w,c
 35123  006C24  6E2E               	movwf	__write_root@offset,c
 35124  006C26  6A2F               	clrf	__write_root@offset+1,c
 35125                           
 35126                           ;fat16.c: 188: offset <<= 5;
 35127  006C28  0E05               	movlw	5
 35128  006C2A                     u7515:
 35129  006C2A  90D8               	bcf	status,0,c
 35130  006C2C  362E               	rlcf	__write_root@offset,f,c
 35131  006C2E  362F               	rlcf	__write_root@offset+1,f,c
 35132  006C30  2EE8               	decfsz	wreg,f,c
 35133  006C32  D7FB               	goto	u7515
 35134                           
 35135                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 35136  006C34  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 35137  006C38  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 35138  006C3C  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 35139  006C40  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 35140  006C44  0E00               	movlw	0
 35141  006C46  6E25               	movwf	flash_partial_write@length+1,c
 35142  006C48  0E20               	movlw	32
 35143  006C4A  6E24               	movwf	flash_partial_write@length,c
 35144  006C4C  C029  F026         	movff	__write_root@data,flash_partial_write@data
 35145  006C50  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 35146  006C54  EC59  F034         	call	_flash_partial_write	;wreg free
 35147  006C58  0012               	return		;funcret
 35148  006C5A                     __end_of__write_root:
 35149                           	opt stack 0
 35150                           tosu	equ	0xFFF
 35151                           tosh	equ	0xFFE
 35152                           tosl	equ	0xFFD
 35153                           pclath	equ	0xFFA
 35154                           tblptru	equ	0xFF8
 35155                           tblptrh	equ	0xFF7
 35156                           tblptrl	equ	0xFF6
 35157                           tablat	equ	0xFF5
 35158                           prodh	equ	0xFF4
 35159                           prodl	equ	0xFF3
 35160                           intcon	equ	0xFF2
 35161                           intcon2	equ	0xFF1
 35162                           intcon3	equ	0xFF0
 35163                           indf0	equ	0xFEF
 35164                           postinc0	equ	0xFEE
 35165                           fsr0h	equ	0xFEA
 35166                           fsr0l	equ	0xFE9
 35167                           wreg	equ	0xFE8
 35168                           indf1	equ	0xFE7
 35169                           postdec1	equ	0xFE5
 35170                           plusw1	equ	0xFE3
 35171                           fsr1h	equ	0xFE2
 35172                           fsr1l	equ	0xFE1
 35173                           indf2	equ	0xFDF
 35174                           postinc2	equ	0xFDE
 35175                           postdec2	equ	0xFDD
 35176                           plusw2	equ	0xFDB
 35177                           fsr2h	equ	0xFDA
 35178                           fsr2l	equ	0xFD9
 35179                           status	equ	0xFD8
 35180                           
 35181 ;; *************** function __write_fat *****************
 35182 ;; Defined at:
 35183 ;;		line 158 in file "fat16.c"
 35184 ;; Parameters:    Size  Location     Type
 35185 ;;  cluster         2   40[COMRAM] unsigned int 
 35186 ;;  value           2   42[COMRAM] unsigned int 
 35187 ;; Auto vars:     Size  Location     Type
 35188 ;;  offset          2   46[COMRAM] unsigned int 
 35189 ;;  fat_sector      2   44[COMRAM] unsigned int 
 35190 ;; Return value:  Size  Location     Type
 35191 ;;                  1    wreg      void 
 35192 ;; Registers used:
 35193 ;;		wreg, status,2, status,0, cstack
 35194 ;; Tracked objects:
 35195 ;;		On entry : 0/0
 35196 ;;		On exit  : 0/0
 35197 ;;		Unchanged: 0/0
 35198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35200 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35202 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35203 ;;Total ram usage:        8 bytes
 35204 ;; Hardware stack levels used:    1
 35205 ;; Hardware stack levels required when called:    6
 35206 ;; This function calls:
 35207 ;;		_flash_partial_write
 35208 ;; This function is called by:
 35209 ;;		_fat_create_file
 35210 ;;		_fat_delete_file
 35211 ;;		_fat_append_to_file
 35212 ;; This function uses a non-reentrant model
 35213 ;;
 35214                           
 35215                           	psect	text181
 35216  0072B4                     __ptext181:
 35217                           	opt stack 0
 35218  0072B4                     __write_fat:
 35219                           	opt stack 19
 35220                           
 35221                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 35222                           
 35223                           ;incstack = 0
 35224  0072B4  502A               	movf	__write_fat@cluster+1,w,c
 35225  0072B6  6E2D               	movwf	__write_fat@fat_sector,c
 35226  0072B8  6A2E               	clrf	__write_fat@fat_sector+1,c
 35227                           
 35228                           ;fat16.c: 163: fat_sector += 2;
 35229  0072BA  0E02               	movlw	2
 35230  0072BC  262D               	addwf	__write_fat@fat_sector,f,c
 35231  0072BE  0E00               	movlw	0
 35232  0072C0  222E               	addwfc	__write_fat@fat_sector+1,f,c
 35233                           
 35234                           ;fat16.c: 164: offset = cluster & 0xFF;
 35235  0072C2  5029               	movf	__write_fat@cluster,w,c
 35236  0072C4  6E2F               	movwf	__write_fat@offset,c
 35237  0072C6  6A30               	clrf	__write_fat@offset+1,c
 35238                           
 35239                           ;fat16.c: 165: offset <<= 1;
 35240  0072C8  90D8               	bcf	status,0,c
 35241  0072CA  362F               	rlcf	__write_fat@offset,f,c
 35242  0072CC  3630               	rlcf	__write_fat@offset+1,f,c
 35243                           
 35244                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 35245  0072CE  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 35246  0072D2  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 35247  0072D6  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 35248  0072DA  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 35249  0072DE  0E00               	movlw	0
 35250  0072E0  6E25               	movwf	flash_partial_write@length+1,c
 35251  0072E2  0E02               	movlw	2
 35252  0072E4  6E24               	movwf	flash_partial_write@length,c
 35253  0072E6  0E2B               	movlw	low __write_fat@value
 35254  0072E8  6E26               	movwf	flash_partial_write@data,c
 35255  0072EA  0E00               	movlw	high __write_fat@value
 35256  0072EC  6E27               	movwf	flash_partial_write@data+1,c
 35257  0072EE  EC59  F034         	call	_flash_partial_write	;wreg free
 35258  0072F2  0012               	return		;funcret
 35259  0072F4                     __end_of__write_fat:
 35260                           	opt stack 0
 35261                           tosu	equ	0xFFF
 35262                           tosh	equ	0xFFE
 35263                           tosl	equ	0xFFD
 35264                           pclath	equ	0xFFA
 35265                           tblptru	equ	0xFF8
 35266                           tblptrh	equ	0xFF7
 35267                           tblptrl	equ	0xFF6
 35268                           tablat	equ	0xFF5
 35269                           prodh	equ	0xFF4
 35270                           prodl	equ	0xFF3
 35271                           intcon	equ	0xFF2
 35272                           intcon2	equ	0xFF1
 35273                           intcon3	equ	0xFF0
 35274                           indf0	equ	0xFEF
 35275                           postinc0	equ	0xFEE
 35276                           fsr0h	equ	0xFEA
 35277                           fsr0l	equ	0xFE9
 35278                           wreg	equ	0xFE8
 35279                           indf1	equ	0xFE7
 35280                           postdec1	equ	0xFE5
 35281                           plusw1	equ	0xFE3
 35282                           fsr1h	equ	0xFE2
 35283                           fsr1l	equ	0xFE1
 35284                           indf2	equ	0xFDF
 35285                           postinc2	equ	0xFDE
 35286                           postdec2	equ	0xFDD
 35287                           plusw2	equ	0xFDB
 35288                           fsr2h	equ	0xFDA
 35289                           fsr2l	equ	0xFD9
 35290                           status	equ	0xFD8
 35291                           
 35292 ;; *************** function _flash_partial_write *****************
 35293 ;; Defined at:
 35294 ;;		line 403 in file "flash.c"
 35295 ;; Parameters:    Size  Location     Type
 35296 ;;  page            2   31[COMRAM] unsigned int 
 35297 ;;  start           2   33[COMRAM] unsigned int 
 35298 ;;  length          2   35[COMRAM] unsigned int 
 35299 ;;  data            2   37[COMRAM] PTR unsigned char 
 35300 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 35301 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 35302 ;; Auto vars:     Size  Location     Type
 35303 ;;  match           1   39[COMRAM] enum E6852
 35304 ;; Return value:  Size  Location     Type
 35305 ;;                  1    wreg      void 
 35306 ;; Registers used:
 35307 ;;		wreg, status,2, status,0, cstack
 35308 ;; Tracked objects:
 35309 ;;		On entry : 0/0
 35310 ;;		On exit  : 0/0
 35311 ;;		Unchanged: 0/0
 35312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35313 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35316 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35317 ;;Total ram usage:        9 bytes
 35318 ;; Hardware stack levels used:    1
 35319 ;; Hardware stack levels required when called:    5
 35320 ;; This function calls:
 35321 ;;		__flash_compare_page_to_buffer
 35322 ;;		__flash_copy_page_to_buffer
 35323 ;;		__flash_write_page_from_buffer
 35324 ;;		__flash_write_to_buffer
 35325 ;;		_flash_is_busy
 35326 ;; This function is called by:
 35327 ;;		__write_fat
 35328 ;;		__write_root
 35329 ;;		__delete_root
 35330 ;;		_fat_append_to_file
 35331 ;;		__write_file_size
 35332 ;; This function uses a non-reentrant model
 35333 ;;
 35334                           
 35335                           	psect	text182
 35336  0068B2                     __ptext182:
 35337                           	opt stack 0
 35338  0068B2                     _flash_partial_write:
 35339                           	opt stack 19
 35340                           
 35341                           ;flash.c: 405: flashMatchResult_t match;;flash.c: 408: while(flash_is_busy());
 35342                           
 35343                           ;incstack = 0
 35344  0068B2  EC38  F03C         	call	_flash_is_busy	;wreg free
 35345  0068B6  0900               	iorlw	0
 35346  0068B8  A4D8               	btfss	status,2,c
 35347  0068BA  D7FB               	goto	_flash_partial_write
 35348                           
 35349                           ;flash.c: 411: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 35350  0068BC  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 35351  0068C0  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 35352  0068C4  0E00               	movlw	0
 35353  0068C6  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 35354  0068C8  EC59  F036         	call	__flash_copy_page_to_buffer	;wreg free
 35355                           
 35356                           ;flash.c: 414: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 35357  0068CC  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 35358  0068D0  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 35359  0068D4  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 35360  0068D8  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 35361  0068DC  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 35362  0068E0  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 35363  0068E4  0E00               	movlw	0
 35364  0068E6  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 35365  0068E8  ECD5  F037         	call	__flash_write_to_buffer	;wreg free
 35366                           
 35367                           ;flash.c: 417: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 35368  0068EC  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 35369  0068F0  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 35370  0068F4  0E00               	movlw	0
 35371  0068F6  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 35372  0068F8  ECAC  F030         	call	__flash_compare_page_to_buffer	;wreg free
 35373  0068FC  6E28               	movwf	flash_partial_write@match,c
 35374                           
 35375                           ;flash.c: 420: if(match==DATA_DOES_NOT_MATCH)
 35376  0068FE  0428               	decf	flash_partial_write@match,w,c
 35377  006900  A4D8               	btfss	status,2,c
 35378  006902  0012               	return	
 35379                           
 35380                           ;flash.c: 421: {;flash.c: 422: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 35381  006904  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 35382  006908  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 35383  00690C  0E00               	movlw	0
 35384  00690E  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 35385  006910  EC2D  F036         	call	__flash_write_page_from_buffer	;wreg free
 35386  006914  0012               	return	
 35387  006916                     __end_of_flash_partial_write:
 35388                           	opt stack 0
 35389                           tosu	equ	0xFFF
 35390                           tosh	equ	0xFFE
 35391                           tosl	equ	0xFFD
 35392                           pclath	equ	0xFFA
 35393                           tblptru	equ	0xFF8
 35394                           tblptrh	equ	0xFF7
 35395                           tblptrl	equ	0xFF6
 35396                           tablat	equ	0xFF5
 35397                           prodh	equ	0xFF4
 35398                           prodl	equ	0xFF3
 35399                           intcon	equ	0xFF2
 35400                           intcon2	equ	0xFF1
 35401                           intcon3	equ	0xFF0
 35402                           indf0	equ	0xFEF
 35403                           postinc0	equ	0xFEE
 35404                           fsr0h	equ	0xFEA
 35405                           fsr0l	equ	0xFE9
 35406                           wreg	equ	0xFE8
 35407                           indf1	equ	0xFE7
 35408                           postdec1	equ	0xFE5
 35409                           plusw1	equ	0xFE3
 35410                           fsr1h	equ	0xFE2
 35411                           fsr1l	equ	0xFE1
 35412                           indf2	equ	0xFDF
 35413                           postinc2	equ	0xFDE
 35414                           postdec2	equ	0xFDD
 35415                           plusw2	equ	0xFDB
 35416                           fsr2h	equ	0xFDA
 35417                           fsr2l	equ	0xFD9
 35418                           status	equ	0xFD8
 35419                           
 35420 ;; *************** function __flash_write_to_buffer *****************
 35421 ;; Defined at:
 35422 ;;		line 228 in file "flash.c"
 35423 ;; Parameters:    Size  Location     Type
 35424 ;;  start           2   19[COMRAM] unsigned int 
 35425 ;;  data            2   21[COMRAM] PTR unsigned char 
 35426 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35427 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 35428 ;;		 -> RAM(3759), 
 35429 ;;  data_length     2   23[COMRAM] unsigned int 
 35430 ;;  buffer          1   25[COMRAM] enum E6848
 35431 ;; Auto vars:     Size  Location     Type
 35432 ;;  command         4   26[COMRAM] unsigned char [4]
 35433 ;; Return value:  Size  Location     Type
 35434 ;;                  1    wreg      void 
 35435 ;; Registers used:
 35436 ;;		wreg, status,2, status,0, cstack
 35437 ;; Tracked objects:
 35438 ;;		On entry : 0/0
 35439 ;;		On exit  : 0/0
 35440 ;;		Unchanged: 0/0
 35441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35442 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35443 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35445 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35446 ;;Total ram usage:       11 bytes
 35447 ;; Hardware stack levels used:    1
 35448 ;; Hardware stack levels required when called:    4
 35449 ;; This function calls:
 35450 ;;		_flash_is_busy
 35451 ;;		_spi_tx_tx
 35452 ;; This function is called by:
 35453 ;;		_flash_page_write
 35454 ;;		_flash_partial_write
 35455 ;; This function uses a non-reentrant model
 35456 ;;
 35457                           
 35458                           	psect	text183
 35459  006FAA                     __ptext183:
 35460                           	opt stack 0
 35461  006FAA                     __flash_write_to_buffer:
 35462                           	opt stack 22
 35463                           
 35464                           ;flash.c: 230: uint8_t command[4];;flash.c: 233: while(flash_is_busy());
 35465                           
 35466                           ;incstack = 0
 35467  006FAA  EC38  F03C         	call	_flash_is_busy	;wreg free
 35468  006FAE  0900               	iorlw	0
 35469  006FB0  A4D8               	btfss	status,2,c
 35470  006FB2  D7FB               	goto	__flash_write_to_buffer
 35471                           
 35472                           ;flash.c: 236: if(buffer==FLASH_BUFFER_1)
 35473  006FB4  501A               	movf	__flash_write_to_buffer@buffer,w,c
 35474  006FB6  A4D8               	btfss	status,2,c
 35475  006FB8  D002               	goto	l1631
 35476                           
 35477                           ;flash.c: 237: command[0] = 0x84;
 35478  006FBA  0E84               	movlw	132
 35479  006FBC  6E1B               	movwf	__flash_write_to_buffer@command,c
 35480  006FBE                     l1631:
 35481                           
 35482                           ;flash.c: 238: if(buffer==FLASH_BUFFER_2)
 35483  006FBE  041A               	decf	__flash_write_to_buffer@buffer,w,c
 35484  006FC0  A4D8               	btfss	status,2,c
 35485  006FC2  D002               	goto	l1632
 35486                           
 35487                           ;flash.c: 239: command[0] = 0x87;
 35488  006FC4  0E87               	movlw	135
 35489  006FC6  6E1B               	movwf	__flash_write_to_buffer@command,c
 35490  006FC8                     l1632:
 35491                           
 35492                           ;flash.c: 241: command[1] = 0x00;
 35493  006FC8  0E00               	movlw	0
 35494  006FCA  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 35495                           
 35496                           ;flash.c: 242: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 35497  006FCC  5015               	movf	__flash_write_to_buffer@start+1,w,c
 35498  006FCE  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 35499                           
 35500                           ;flash.c: 243: command[3] = ((unsigned char)((start)&0xFF));
 35501  006FD0  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 35502                           
 35503                           ;flash.c: 246: spi_tx_tx(command, 4, data, data_length);
 35504  006FD4  0E1B               	movlw	low __flash_write_to_buffer@command
 35505  006FD6  6E01               	movwf	spi_tx_tx@command,c
 35506  006FD8  0E00               	movlw	high __flash_write_to_buffer@command
 35507  006FDA  6E02               	movwf	spi_tx_tx@command+1,c
 35508  006FDC  0E00               	movlw	0
 35509  006FDE  6E04               	movwf	spi_tx_tx@command_length+1,c
 35510  006FE0  0E04               	movlw	4
 35511  006FE2  6E03               	movwf	spi_tx_tx@command_length,c
 35512  006FE4  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 35513  006FE8  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 35514  006FEC  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 35515  006FF0  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 35516  006FF4  EC16  F02E         	call	_spi_tx_tx	;wreg free
 35517  006FF8  0012               	return		;funcret
 35518  006FFA                     __end_of__flash_write_to_buffer:
 35519                           	opt stack 0
 35520                           tosu	equ	0xFFF
 35521                           tosh	equ	0xFFE
 35522                           tosl	equ	0xFFD
 35523                           pclath	equ	0xFFA
 35524                           tblptru	equ	0xFF8
 35525                           tblptrh	equ	0xFF7
 35526                           tblptrl	equ	0xFF6
 35527                           tablat	equ	0xFF5
 35528                           prodh	equ	0xFF4
 35529                           prodl	equ	0xFF3
 35530                           intcon	equ	0xFF2
 35531                           intcon2	equ	0xFF1
 35532                           intcon3	equ	0xFF0
 35533                           indf0	equ	0xFEF
 35534                           postinc0	equ	0xFEE
 35535                           fsr0h	equ	0xFEA
 35536                           fsr0l	equ	0xFE9
 35537                           wreg	equ	0xFE8
 35538                           indf1	equ	0xFE7
 35539                           postdec1	equ	0xFE5
 35540                           plusw1	equ	0xFE3
 35541                           fsr1h	equ	0xFE2
 35542                           fsr1l	equ	0xFE1
 35543                           indf2	equ	0xFDF
 35544                           postinc2	equ	0xFDE
 35545                           postdec2	equ	0xFDD
 35546                           plusw2	equ	0xFDB
 35547                           fsr2h	equ	0xFDA
 35548                           fsr2l	equ	0xFD9
 35549                           status	equ	0xFD8
 35550                           
 35551 ;; *************** function _spi_tx_tx *****************
 35552 ;; Defined at:
 35553 ;;		line 151 in file "spi.c"
 35554 ;; Parameters:    Size  Location     Type
 35555 ;;  command         2    0[COMRAM] PTR unsigned char 
 35556 ;;		 -> _flash_write_to_buffer@command(4), 
 35557 ;;  command_leng    2    2[COMRAM] unsigned int 
 35558 ;;  data            2    4[COMRAM] PTR unsigned char 
 35559 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35560 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 35561 ;;		 -> RAM(3759), 
 35562 ;;  data_length     2    6[COMRAM] unsigned int 
 35563 ;; Auto vars:     Size  Location     Type
 35564 ;;		None
 35565 ;; Return value:  Size  Location     Type
 35566 ;;                  1    wreg      void 
 35567 ;; Registers used:
 35568 ;;		wreg, status,2, status,0, cstack
 35569 ;; Tracked objects:
 35570 ;;		On entry : 0/0
 35571 ;;		On exit  : 0/0
 35572 ;;		Unchanged: 0/0
 35573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35576 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35577 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35578 ;;Total ram usage:       12 bytes
 35579 ;; Hardware stack levels used:    1
 35580 ;; Hardware stack levels required when called:    1
 35581 ;; This function calls:
 35582 ;;		__switch_mastermode
 35583 ;; This function is called by:
 35584 ;;		__flash_write_to_buffer
 35585 ;; This function uses a non-reentrant model
 35586 ;;
 35587                           
 35588                           	psect	text184
 35589  005C2C                     __ptext184:
 35590                           	opt stack 0
 35591  005C2C                     _spi_tx_tx:
 35592                           	opt stack 24
 35593                           
 35594                           ;spi.c: 154: _switch_mastermode();
 35595                           
 35596                           ;incstack = 0
 35597  005C2C  EC62  F03D         	call	__switch_mastermode	;wreg free
 35598                           
 35599                           ;spi.c: 157: DMACON1bits.SSCON1 = 0;
 35600  005C30  9E88               	bcf	3976,7,c	;volatile
 35601                           
 35602                           ;spi.c: 158: DMACON1bits.SSCON0 = 0;
 35603  005C32  9C88               	bcf	3976,6,c	;volatile
 35604                           
 35605                           ;spi.c: 160: DMACON1bits.TXINC = 1;
 35606  005C34  8A88               	bsf	3976,5,c	;volatile
 35607                           
 35608                           ;spi.c: 162: DMACON1bits.RXINC = 0;
 35609  005C36  9888               	bcf	3976,4,c	;volatile
 35610                           
 35611                           ;spi.c: 164: DMACON1bits.DUPLEX1 = 0;
 35612  005C38  9688               	bcf	3976,3,c	;volatile
 35613                           
 35614                           ;spi.c: 165: DMACON1bits.DUPLEX0 = 1;
 35615  005C3A  8488               	bsf	3976,2,c	;volatile
 35616                           
 35617                           ;spi.c: 167: DMACON1bits.DLYINTEN = 0;
 35618  005C3C  9288               	bcf	3976,1,c	;volatile
 35619                           
 35620                           ;spi.c: 169: DMACON2bits.DLYCYC = 0b0000;
 35621  005C3E  9886               	bcf	3974,4,c	;volatile
 35622  005C40  9A86               	bcf	3974,5,c	;volatile
 35623  005C42  9C86               	bcf	3974,6,c	;volatile
 35624  005C44  9E86               	bcf	3974,7,c	;volatile
 35625                           
 35626                           ;spi.c: 171: DMACON2bits.INTLVL = 0b0000;
 35627  005C46  9086               	bcf	3974,0,c	;volatile
 35628  005C48  9286               	bcf	3974,1,c	;volatile
 35629  005C4A  9486               	bcf	3974,2,c	;volatile
 35630  005C4C  9686               	bcf	3974,3,c	;volatile
 35631                           
 35632                           ;spi.c: 174: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35633  005C4E  5002               	movf	spi_tx_tx@command+1,w,c
 35634  005C50  6E6A               	movwf	3946,c	;volatile
 35635                           
 35636                           ;spi.c: 175: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35637  005C52  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 35638                           
 35639                           ;spi.c: 178: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35640  005C56  0EFF               	movlw	255
 35641  005C58  6E09               	movwf	??_spi_tx_tx& (0+255),c
 35642  005C5A  0EFF               	movlw	255
 35643  005C5C  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 35644  005C5E  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 35645  005C62  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 35646  005C66  5009               	movf	??_spi_tx_tx,w,c
 35647  005C68  260B               	addwf	??_spi_tx_tx+2,f,c
 35648  005C6A  500A               	movf	??_spi_tx_tx+1,w,c
 35649  005C6C  220C               	addwfc	??_spi_tx_tx+3,f,c
 35650  005C6E  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 35651  005C72  6A0C               	clrf	??_spi_tx_tx+3,c
 35652  005C74  500B               	movf	??_spi_tx_tx+2,w,c
 35653  005C76  6E66               	movwf	3942,c	;volatile
 35654                           
 35655                           ;spi.c: 179: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35656  005C78  0403               	decf	spi_tx_tx@command_length,w,c
 35657  005C7A  6E67               	movwf	3943,c	;volatile
 35658                           
 35659                           ;spi.c: 182: LATDbits.LD7 = 0;
 35660  005C7C  9E8C               	bcf	3980,7,c	;volatile
 35661                           
 35662                           ;spi.c: 185: DMACON1bits.DMAEN = 1;
 35663  005C7E  8088               	bsf	3976,0,c	;volatile
 35664  005C80  B088               	btfsc	3976,0,c	;volatile
 35665  005C82  D7FE               	goto	l2606
 35666                           
 35667                           ;spi.c: 189: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35668  005C84  5006               	movf	spi_tx_tx@data+1,w,c
 35669  005C86  6E6A               	movwf	3946,c	;volatile
 35670                           
 35671                           ;spi.c: 190: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35672  005C88  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 35673                           
 35674                           ;spi.c: 193: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35675  005C8C  0EFF               	movlw	255
 35676  005C8E  6E09               	movwf	??_spi_tx_tx& (0+255),c
 35677  005C90  0EFF               	movlw	255
 35678  005C92  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 35679  005C94  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 35680  005C98  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 35681  005C9C  5009               	movf	??_spi_tx_tx,w,c
 35682  005C9E  260B               	addwf	??_spi_tx_tx+2,f,c
 35683  005CA0  500A               	movf	??_spi_tx_tx+1,w,c
 35684  005CA2  220C               	addwfc	??_spi_tx_tx+3,f,c
 35685  005CA4  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 35686  005CA8  6A0C               	clrf	??_spi_tx_tx+3,c
 35687  005CAA  500B               	movf	??_spi_tx_tx+2,w,c
 35688  005CAC  6E66               	movwf	3942,c	;volatile
 35689                           
 35690                           ;spi.c: 194: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35691  005CAE  0407               	decf	spi_tx_tx@data_length,w,c
 35692  005CB0  6E67               	movwf	3943,c	;volatile
 35693                           
 35694                           ;spi.c: 197: DMACON1bits.DMAEN = 1;
 35695  005CB2  8088               	bsf	3976,0,c	;volatile
 35696  005CB4  B088               	btfsc	3976,0,c	;volatile
 35697  005CB6  D7FE               	goto	l2609
 35698                           
 35699                           ;spi.c: 201: LATDbits.LD7 = 1;
 35700  005CB8  8E8C               	bsf	3980,7,c	;volatile
 35701  005CBA  0012               	return		;funcret
 35702  005CBC                     __end_of_spi_tx_tx:
 35703                           	opt stack 0
 35704                           tosu	equ	0xFFF
 35705                           tosh	equ	0xFFE
 35706                           tosl	equ	0xFFD
 35707                           pclath	equ	0xFFA
 35708                           tblptru	equ	0xFF8
 35709                           tblptrh	equ	0xFF7
 35710                           tblptrl	equ	0xFF6
 35711                           tablat	equ	0xFF5
 35712                           prodh	equ	0xFF4
 35713                           prodl	equ	0xFF3
 35714                           intcon	equ	0xFF2
 35715                           intcon2	equ	0xFF1
 35716                           intcon3	equ	0xFF0
 35717                           indf0	equ	0xFEF
 35718                           postinc0	equ	0xFEE
 35719                           fsr0h	equ	0xFEA
 35720                           fsr0l	equ	0xFE9
 35721                           wreg	equ	0xFE8
 35722                           indf1	equ	0xFE7
 35723                           postdec1	equ	0xFE5
 35724                           plusw1	equ	0xFE3
 35725                           fsr1h	equ	0xFE2
 35726                           fsr1l	equ	0xFE1
 35727                           indf2	equ	0xFDF
 35728                           postinc2	equ	0xFDE
 35729                           postdec2	equ	0xFDD
 35730                           plusw2	equ	0xFDB
 35731                           fsr2h	equ	0xFDA
 35732                           fsr2l	equ	0xFD9
 35733                           status	equ	0xFD8
 35734                           
 35735 ;; *************** function __flash_write_page_from_buffer *****************
 35736 ;; Defined at:
 35737 ;;		line 250 in file "flash.c"
 35738 ;; Parameters:    Size  Location     Type
 35739 ;;  page            2   19[COMRAM] unsigned int 
 35740 ;;  buffer          1   21[COMRAM] enum E6848
 35741 ;; Auto vars:     Size  Location     Type
 35742 ;;  command         4   25[COMRAM] unsigned char [4]
 35743 ;; Return value:  Size  Location     Type
 35744 ;;                  1    wreg      void 
 35745 ;; Registers used:
 35746 ;;		wreg, status,2, status,0, cstack
 35747 ;; Tracked objects:
 35748 ;;		On entry : 0/0
 35749 ;;		On exit  : 0/0
 35750 ;;		Unchanged: 0/0
 35751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35752 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35753 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35755 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35756 ;;Total ram usage:       10 bytes
 35757 ;; Hardware stack levels used:    1
 35758 ;; Hardware stack levels required when called:    4
 35759 ;; This function calls:
 35760 ;;		_flash_is_busy
 35761 ;;		_spi_tx
 35762 ;; This function is called by:
 35763 ;;		_flash_page_write
 35764 ;;		_flash_partial_write
 35765 ;; This function uses a non-reentrant model
 35766 ;;
 35767                           
 35768                           	psect	text185
 35769  006C5A                     __ptext185:
 35770                           	opt stack 0
 35771  006C5A                     __flash_write_page_from_buffer:
 35772                           	opt stack 22
 35773                           
 35774                           ;flash.c: 252: uint8_t command[4];;flash.c: 255: while(flash_is_busy());
 35775                           
 35776                           ;incstack = 0
 35777  006C5A  EC38  F03C         	call	_flash_is_busy	;wreg free
 35778  006C5E  0900               	iorlw	0
 35779  006C60  A4D8               	btfss	status,2,c
 35780  006C62  D7FB               	goto	__flash_write_page_from_buffer
 35781                           
 35782                           ;flash.c: 258: if(buffer==FLASH_BUFFER_1)
 35783  006C64  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 35784  006C66  A4D8               	btfss	status,2,c
 35785  006C68  D002               	goto	l1639
 35786                           
 35787                           ;flash.c: 259: command[0] = 0x83;
 35788  006C6A  0E83               	movlw	131
 35789  006C6C  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 35790  006C6E                     l1639:
 35791                           
 35792                           ;flash.c: 260: if(buffer==FLASH_BUFFER_2)
 35793  006C6E  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 35794  006C70  A4D8               	btfss	status,2,c
 35795  006C72  D002               	goto	l1640
 35796                           
 35797                           ;flash.c: 261: command[0] = 0x86;
 35798  006C74  0E86               	movlw	134
 35799  006C76  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 35800  006C78                     l1640:
 35801                           
 35802                           ;flash.c: 263: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35803  006C78  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 35804  006C7C  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 35805  006C80  0E07               	movlw	7
 35806  006C82  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 35807  006C84                     u6145:
 35808  006C84  90D8               	bcf	status,0,c
 35809  006C86  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 35810  006C88  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 35811  006C8A  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 35812  006C8C  D7FB               	goto	u6145
 35813  006C8E  5017               	movf	??__flash_write_page_from_buffer,w,c
 35814  006C90  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 35815                           
 35816                           ;flash.c: 264: command[2] = ((unsigned char)((page<<1)&0xFF));
 35817  006C92  5014               	movf	__flash_write_page_from_buffer@page,w,c
 35818  006C94  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 35819  006C96  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 35820                           
 35821                           ;flash.c: 265: command[3] = 0x00;
 35822  006C98  0E00               	movlw	0
 35823  006C9A  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 35824                           
 35825                           ;flash.c: 268: spi_tx(command, 4);
 35826  006C9C  0E1A               	movlw	low __flash_write_page_from_buffer@command
 35827  006C9E  6E01               	movwf	spi_tx@data,c
 35828  006CA0  0E00               	movlw	high __flash_write_page_from_buffer@command
 35829  006CA2  6E02               	movwf	spi_tx@data+1,c
 35830  006CA4  0E00               	movlw	0
 35831  006CA6  6E04               	movwf	spi_tx@length+1,c
 35832  006CA8  0E04               	movlw	4
 35833  006CAA  6E03               	movwf	spi_tx@length,c
 35834  006CAC  EC7B  F035         	call	_spi_tx	;wreg free
 35835  006CB0  0012               	return		;funcret
 35836  006CB2                     __end_of__flash_write_page_from_buffer:
 35837                           	opt stack 0
 35838                           tosu	equ	0xFFF
 35839                           tosh	equ	0xFFE
 35840                           tosl	equ	0xFFD
 35841                           pclath	equ	0xFFA
 35842                           tblptru	equ	0xFF8
 35843                           tblptrh	equ	0xFF7
 35844                           tblptrl	equ	0xFF6
 35845                           tablat	equ	0xFF5
 35846                           prodh	equ	0xFF4
 35847                           prodl	equ	0xFF3
 35848                           intcon	equ	0xFF2
 35849                           intcon2	equ	0xFF1
 35850                           intcon3	equ	0xFF0
 35851                           indf0	equ	0xFEF
 35852                           postinc0	equ	0xFEE
 35853                           fsr0h	equ	0xFEA
 35854                           fsr0l	equ	0xFE9
 35855                           wreg	equ	0xFE8
 35856                           indf1	equ	0xFE7
 35857                           postdec1	equ	0xFE5
 35858                           plusw1	equ	0xFE3
 35859                           fsr1h	equ	0xFE2
 35860                           fsr1l	equ	0xFE1
 35861                           indf2	equ	0xFDF
 35862                           postinc2	equ	0xFDE
 35863                           postdec2	equ	0xFDD
 35864                           plusw2	equ	0xFDB
 35865                           fsr2h	equ	0xFDA
 35866                           fsr2l	equ	0xFD9
 35867                           status	equ	0xFD8
 35868                           
 35869 ;; *************** function __flash_copy_page_to_buffer *****************
 35870 ;; Defined at:
 35871 ;;		line 146 in file "flash.c"
 35872 ;; Parameters:    Size  Location     Type
 35873 ;;  page            2   19[COMRAM] unsigned int 
 35874 ;;  buffer          1   21[COMRAM] enum E6848
 35875 ;; Auto vars:     Size  Location     Type
 35876 ;;  command         4   25[COMRAM] unsigned char [4]
 35877 ;; Return value:  Size  Location     Type
 35878 ;;                  1    wreg      void 
 35879 ;; Registers used:
 35880 ;;		wreg, status,2, status,0, cstack
 35881 ;; Tracked objects:
 35882 ;;		On entry : 0/0
 35883 ;;		On exit  : 0/0
 35884 ;;		Unchanged: 0/0
 35885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35886 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35887 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35888 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35889 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35890 ;;Total ram usage:       10 bytes
 35891 ;; Hardware stack levels used:    1
 35892 ;; Hardware stack levels required when called:    4
 35893 ;; This function calls:
 35894 ;;		_flash_is_busy
 35895 ;;		_spi_tx
 35896 ;; This function is called by:
 35897 ;;		_flash_partial_write
 35898 ;; This function uses a non-reentrant model
 35899 ;;
 35900                           
 35901                           	psect	text186
 35902  006CB2                     __ptext186:
 35903                           	opt stack 0
 35904  006CB2                     __flash_copy_page_to_buffer:
 35905                           	opt stack 19
 35906                           
 35907                           ;flash.c: 148: uint8_t command[4];;flash.c: 151: while(flash_is_busy());
 35908                           
 35909                           ;incstack = 0
 35910  006CB2  EC38  F03C         	call	_flash_is_busy	;wreg free
 35911  006CB6  0900               	iorlw	0
 35912  006CB8  A4D8               	btfss	status,2,c
 35913  006CBA  D7FB               	goto	__flash_copy_page_to_buffer
 35914                           
 35915                           ;flash.c: 154: if(buffer==FLASH_BUFFER_1)
 35916  006CBC  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 35917  006CBE  A4D8               	btfss	status,2,c
 35918  006CC0  D002               	goto	l1604
 35919                           
 35920                           ;flash.c: 155: command[0] = 0x53;
 35921  006CC2  0E53               	movlw	83
 35922  006CC4  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 35923  006CC6                     l1604:
 35924                           
 35925                           ;flash.c: 156: if(buffer==FLASH_BUFFER_2)
 35926  006CC6  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 35927  006CC8  A4D8               	btfss	status,2,c
 35928  006CCA  D002               	goto	l1605
 35929                           
 35930                           ;flash.c: 157: command[0] = 0x55;
 35931  006CCC  0E55               	movlw	85
 35932  006CCE  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 35933  006CD0                     l1605:
 35934                           
 35935                           ;flash.c: 159: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35936  006CD0  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 35937  006CD4  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 35938  006CD8  0E07               	movlw	7
 35939  006CDA  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 35940  006CDC                     u6345:
 35941  006CDC  90D8               	bcf	status,0,c
 35942  006CDE  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 35943  006CE0  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 35944  006CE2  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 35945  006CE4  D7FB               	goto	u6345
 35946  006CE6  5017               	movf	??__flash_copy_page_to_buffer,w,c
 35947  006CE8  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 35948                           
 35949                           ;flash.c: 160: command[2] = ((unsigned char)((page<<1)&0xFF));
 35950  006CEA  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 35951  006CEC  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 35952  006CEE  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 35953                           
 35954                           ;flash.c: 161: command[3] = 0x00;
 35955  006CF0  0E00               	movlw	0
 35956  006CF2  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 35957                           
 35958                           ;flash.c: 164: spi_tx(command, 4);
 35959  006CF4  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 35960  006CF6  6E01               	movwf	spi_tx@data,c
 35961  006CF8  0E00               	movlw	high __flash_copy_page_to_buffer@command
 35962  006CFA  6E02               	movwf	spi_tx@data+1,c
 35963  006CFC  0E00               	movlw	0
 35964  006CFE  6E04               	movwf	spi_tx@length+1,c
 35965  006D00  0E04               	movlw	4
 35966  006D02  6E03               	movwf	spi_tx@length,c
 35967  006D04  EC7B  F035         	call	_spi_tx	;wreg free
 35968  006D08  0012               	return		;funcret
 35969  006D0A                     __end_of__flash_copy_page_to_buffer:
 35970                           	opt stack 0
 35971                           tosu	equ	0xFFF
 35972                           tosh	equ	0xFFE
 35973                           tosl	equ	0xFFD
 35974                           pclath	equ	0xFFA
 35975                           tblptru	equ	0xFF8
 35976                           tblptrh	equ	0xFF7
 35977                           tblptrl	equ	0xFF6
 35978                           tablat	equ	0xFF5
 35979                           prodh	equ	0xFF4
 35980                           prodl	equ	0xFF3
 35981                           intcon	equ	0xFF2
 35982                           intcon2	equ	0xFF1
 35983                           intcon3	equ	0xFF0
 35984                           indf0	equ	0xFEF
 35985                           postinc0	equ	0xFEE
 35986                           fsr0h	equ	0xFEA
 35987                           fsr0l	equ	0xFE9
 35988                           wreg	equ	0xFE8
 35989                           indf1	equ	0xFE7
 35990                           postdec1	equ	0xFE5
 35991                           plusw1	equ	0xFE3
 35992                           fsr1h	equ	0xFE2
 35993                           fsr1l	equ	0xFE1
 35994                           indf2	equ	0xFDF
 35995                           postinc2	equ	0xFDE
 35996                           postdec2	equ	0xFDD
 35997                           plusw2	equ	0xFDB
 35998                           fsr2h	equ	0xFDA
 35999                           fsr2l	equ	0xFD9
 36000                           status	equ	0xFD8
 36001                           
 36002 ;; *************** function __flash_compare_page_to_buffer *****************
 36003 ;; Defined at:
 36004 ;;		line 168 in file "flash.c"
 36005 ;; Parameters:    Size  Location     Type
 36006 ;;  page            2   19[COMRAM] unsigned int 
 36007 ;;  buffer          1   21[COMRAM] enum E6848
 36008 ;; Auto vars:     Size  Location     Type
 36009 ;;  command         4   27[COMRAM] unsigned char [4]
 36010 ;;  status          2   25[COMRAM] unsigned int 
 36011 ;; Return value:  Size  Location     Type
 36012 ;;                  1    wreg      enum E6852
 36013 ;; Registers used:
 36014 ;;		wreg, status,2, status,0, cstack
 36015 ;; Tracked objects:
 36016 ;;		On entry : 0/0
 36017 ;;		On exit  : 0/0
 36018 ;;		Unchanged: 0/0
 36019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36021 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36022 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36023 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36024 ;;Total ram usage:       12 bytes
 36025 ;; Hardware stack levels used:    1
 36026 ;; Hardware stack levels required when called:    4
 36027 ;; This function calls:
 36028 ;;		__flash_get_status
 36029 ;;		_flash_is_busy
 36030 ;;		_spi_tx
 36031 ;; This function is called by:
 36032 ;;		_flash_page_write
 36033 ;;		_flash_partial_write
 36034 ;; This function uses a non-reentrant model
 36035 ;;
 36036                           
 36037                           	psect	text187
 36038  006158                     __ptext187:
 36039                           	opt stack 0
 36040  006158                     __flash_compare_page_to_buffer:
 36041                           	opt stack 22
 36042                           
 36043                           ;flash.c: 170: uint8_t command[4];;flash.c: 171: uint16_t status;;flash.c: 174: while(fl
      +                          ash_is_busy());
 36044                           
 36045                           ;incstack = 0
 36046  006158  EC38  F03C         	call	_flash_is_busy	;wreg free
 36047  00615C  0900               	iorlw	0
 36048  00615E  A4D8               	btfss	status,2,c
 36049  006160  D7FB               	goto	__flash_compare_page_to_buffer
 36050                           
 36051                           ;flash.c: 177: if(buffer==FLASH_BUFFER_1)
 36052  006162  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 36053  006164  A4D8               	btfss	status,2,c
 36054  006166  D002               	goto	l1612
 36055                           
 36056                           ;flash.c: 178: command[0] = 0x60;
 36057  006168  0E60               	movlw	96
 36058  00616A  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36059  00616C                     l1612:
 36060                           
 36061                           ;flash.c: 179: if(buffer==FLASH_BUFFER_2)
 36062  00616C  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 36063  00616E  A4D8               	btfss	status,2,c
 36064  006170  D002               	goto	l1613
 36065                           
 36066                           ;flash.c: 180: command[0] = 0x60;
 36067  006172  0E60               	movlw	96
 36068  006174  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36069  006176                     l1613:
 36070                           
 36071                           ;flash.c: 182: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36072  006176  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 36073  00617A  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 36074  00617E  0E07               	movlw	7
 36075  006180  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 36076  006182                     u6055:
 36077  006182  90D8               	bcf	status,0,c
 36078  006184  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 36079  006186  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 36080  006188  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 36081  00618A  D7FB               	goto	u6055
 36082  00618C  5017               	movf	??__flash_compare_page_to_buffer,w,c
 36083  00618E  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 36084                           
 36085                           ;flash.c: 183: command[2] = ((unsigned char)((page<<1)&0xFF));
 36086  006190  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 36087  006192  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 36088  006194  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 36089                           
 36090                           ;flash.c: 184: command[3] = 0x00;
 36091  006196  0E00               	movlw	0
 36092  006198  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 36093                           
 36094                           ;flash.c: 187: spi_tx(command, 4);
 36095  00619A  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 36096  00619C  6E01               	movwf	spi_tx@data,c
 36097  00619E  0E00               	movlw	high __flash_compare_page_to_buffer@command
 36098  0061A0  6E02               	movwf	spi_tx@data+1,c
 36099  0061A2  0E00               	movlw	0
 36100  0061A4  6E04               	movwf	spi_tx@length+1,c
 36101  0061A6  0E04               	movlw	4
 36102  0061A8  6E03               	movwf	spi_tx@length,c
 36103  0061AA  EC7B  F035         	call	_spi_tx	;wreg free
 36104  0061AE  EC38  F03C         	call	_flash_is_busy	;wreg free
 36105  0061B2  0900               	iorlw	0
 36106  0061B4  A4D8               	btfss	status,2,c
 36107  0061B6  D7FB               	goto	l1615
 36108                           
 36109                           ;flash.c: 193: status = _flash_get_status();
 36110  0061B8  ECA5  F03A         	call	__flash_get_status	;wreg free
 36111  0061BC  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 36112  0061C0  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 36113                           
 36114                           ;flash.c: 196: if(status & 0b0000000001000000)
 36115  0061C4  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 36116  0061C6  D002               	goto	l1617
 36117                           
 36118                           ;flash.c: 197: {;flash.c: 199: return DATA_DOES_NOT_MATCH;
 36119  0061C8  0E01               	movlw	1
 36120                           
 36121                           ;flash.c: 200: }
 36122  0061CA  0012               	return	
 36123  0061CC                     l1617:
 36124                           
 36125                           ;flash.c: 201: else;flash.c: 202: {;flash.c: 204: return DATA_DOES_MATCH;
 36126  0061CC  0E00               	movlw	0
 36127  0061CE  0012               	return	
 36128  0061D0                     __end_of__flash_compare_page_to_buffer:
 36129                           	opt stack 0
 36130                           tosu	equ	0xFFF
 36131                           tosh	equ	0xFFE
 36132                           tosl	equ	0xFFD
 36133                           pclath	equ	0xFFA
 36134                           tblptru	equ	0xFF8
 36135                           tblptrh	equ	0xFF7
 36136                           tblptrl	equ	0xFF6
 36137                           tablat	equ	0xFF5
 36138                           prodh	equ	0xFF4
 36139                           prodl	equ	0xFF3
 36140                           intcon	equ	0xFF2
 36141                           intcon2	equ	0xFF1
 36142                           intcon3	equ	0xFF0
 36143                           indf0	equ	0xFEF
 36144                           postinc0	equ	0xFEE
 36145                           fsr0h	equ	0xFEA
 36146                           fsr0l	equ	0xFE9
 36147                           wreg	equ	0xFE8
 36148                           indf1	equ	0xFE7
 36149                           postdec1	equ	0xFE5
 36150                           plusw1	equ	0xFE3
 36151                           fsr1h	equ	0xFE2
 36152                           fsr1l	equ	0xFE1
 36153                           indf2	equ	0xFDF
 36154                           postinc2	equ	0xFDE
 36155                           postdec2	equ	0xFDD
 36156                           plusw2	equ	0xFDB
 36157                           fsr2h	equ	0xFDA
 36158                           fsr2l	equ	0xFD9
 36159                           status	equ	0xFD8
 36160                           
 36161 ;; *************** function __update_modified_time *****************
 36162 ;; Defined at:
 36163 ;;		line 53 in file "fat16.c"
 36164 ;; Parameters:    Size  Location     Type
 36165 ;;  root            2    4[COMRAM] PTR struct .
 36166 ;;		 -> fat_append_to_file@root(32), 
 36167 ;; Auto vars:     Size  Location     Type
 36168 ;;		None
 36169 ;; Return value:  Size  Location     Type
 36170 ;;                  1    wreg      void 
 36171 ;; Registers used:
 36172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36173 ;; Tracked objects:
 36174 ;;		On entry : 0/0
 36175 ;;		On exit  : 0/0
 36176 ;;		Unchanged: 0/0
 36177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36181 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36182 ;;Total ram usage:        2 bytes
 36183 ;; Hardware stack levels used:    1
 36184 ;; Hardware stack levels required when called:    1
 36185 ;; This function calls:
 36186 ;;		__get_date
 36187 ;;		__get_time
 36188 ;; This function is called by:
 36189 ;;		_fat_append_to_file
 36190 ;; This function uses a non-reentrant model
 36191 ;;
 36192                           
 36193                           	psect	text188
 36194  007518                     __ptext188:
 36195                           	opt stack 0
 36196  007518                     __update_modified_time:
 36197                           	opt stack 24
 36198                           
 36199                           ;fat16.c: 55: root->modifiedDate = _get_date();
 36200                           
 36201                           ;incstack = 0
 36202  007518  EC39  F03D         	call	__get_date	;wreg free
 36203  00751C  EE20 F018          	lfsr	2,24
 36204  007520  5005               	movf	__update_modified_time@root,w,c
 36205  007522  26D9               	addwf	fsr2l,f,c
 36206  007524  5006               	movf	__update_modified_time@root+1,w,c
 36207  007526  22DA               	addwfc	fsr2h,f,c
 36208  007528  C001  FFDE         	movff	?__get_date,postinc2
 36209  00752C  C002  FFDD         	movff	?__get_date+1,postdec2
 36210                           
 36211                           ;fat16.c: 56: root->modifiedTime = _get_time();
 36212  007530  EC34  F03D         	call	__get_time	;wreg free
 36213  007534  EE20 F016          	lfsr	2,22
 36214  007538  5005               	movf	__update_modified_time@root,w,c
 36215  00753A  26D9               	addwf	fsr2l,f,c
 36216  00753C  5006               	movf	__update_modified_time@root+1,w,c
 36217  00753E  22DA               	addwfc	fsr2h,f,c
 36218  007540  C001  FFDE         	movff	?__get_time,postinc2
 36219  007544  C002  FFDD         	movff	?__get_time+1,postdec2
 36220  007548  0012               	return		;funcret
 36221  00754A                     __end_of__update_modified_time:
 36222                           	opt stack 0
 36223                           tosu	equ	0xFFF
 36224                           tosh	equ	0xFFE
 36225                           tosl	equ	0xFFD
 36226                           pclath	equ	0xFFA
 36227                           tblptru	equ	0xFF8
 36228                           tblptrh	equ	0xFF7
 36229                           tblptrl	equ	0xFF6
 36230                           tablat	equ	0xFF5
 36231                           prodh	equ	0xFF4
 36232                           prodl	equ	0xFF3
 36233                           intcon	equ	0xFF2
 36234                           intcon2	equ	0xFF1
 36235                           intcon3	equ	0xFF0
 36236                           indf0	equ	0xFEF
 36237                           postinc0	equ	0xFEE
 36238                           fsr0h	equ	0xFEA
 36239                           fsr0l	equ	0xFE9
 36240                           wreg	equ	0xFE8
 36241                           indf1	equ	0xFE7
 36242                           postdec1	equ	0xFE5
 36243                           plusw1	equ	0xFE3
 36244                           fsr1h	equ	0xFE2
 36245                           fsr1l	equ	0xFE1
 36246                           indf2	equ	0xFDF
 36247                           postinc2	equ	0xFDE
 36248                           postdec2	equ	0xFDD
 36249                           plusw2	equ	0xFDB
 36250                           fsr2h	equ	0xFDA
 36251                           fsr2l	equ	0xFD9
 36252                           status	equ	0xFD8
 36253                           
 36254 ;; *************** function __get_time *****************
 36255 ;; Defined at:
 36256 ;;		line 29 in file "fat16.c"
 36257 ;; Parameters:    Size  Location     Type
 36258 ;;		None
 36259 ;; Auto vars:     Size  Location     Type
 36260 ;;  time            2    2[COMRAM] unsigned int 
 36261 ;; Return value:  Size  Location     Type
 36262 ;;                  2    0[COMRAM] unsigned int 
 36263 ;; Registers used:
 36264 ;;		None
 36265 ;; Tracked objects:
 36266 ;;		On entry : 0/0
 36267 ;;		On exit  : 0/0
 36268 ;;		Unchanged: 0/0
 36269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36274 ;;Total ram usage:        4 bytes
 36275 ;; Hardware stack levels used:    1
 36276 ;; This function calls:
 36277 ;;		Nothing
 36278 ;; This function is called by:
 36279 ;;		__update_modified_time
 36280 ;;		_fat_create_file
 36281 ;; This function uses a non-reentrant model
 36282 ;;
 36283                           
 36284                           	psect	text189
 36285  007A68                     __ptext189:
 36286                           	opt stack 0
 36287  007A68                     __get_time:
 36288                           	opt stack 25
 36289                           
 36290                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 36291                           
 36292                           ;incstack = 0
 36293  007A68  C003  F001         	movff	__get_time@time,?__get_time
 36294  007A6C  C004  F002         	movff	__get_time@time+1,?__get_time+1
 36295  007A70  0012               	return		;funcret
 36296  007A72                     __end_of__get_time:
 36297                           	opt stack 0
 36298                           tosu	equ	0xFFF
 36299                           tosh	equ	0xFFE
 36300                           tosl	equ	0xFFD
 36301                           pclath	equ	0xFFA
 36302                           tblptru	equ	0xFF8
 36303                           tblptrh	equ	0xFF7
 36304                           tblptrl	equ	0xFF6
 36305                           tablat	equ	0xFF5
 36306                           prodh	equ	0xFF4
 36307                           prodl	equ	0xFF3
 36308                           intcon	equ	0xFF2
 36309                           intcon2	equ	0xFF1
 36310                           intcon3	equ	0xFF0
 36311                           indf0	equ	0xFEF
 36312                           postinc0	equ	0xFEE
 36313                           fsr0h	equ	0xFEA
 36314                           fsr0l	equ	0xFE9
 36315                           wreg	equ	0xFE8
 36316                           indf1	equ	0xFE7
 36317                           postdec1	equ	0xFE5
 36318                           plusw1	equ	0xFE3
 36319                           fsr1h	equ	0xFE2
 36320                           fsr1l	equ	0xFE1
 36321                           indf2	equ	0xFDF
 36322                           postinc2	equ	0xFDE
 36323                           postdec2	equ	0xFDD
 36324                           plusw2	equ	0xFDB
 36325                           fsr2h	equ	0xFDA
 36326                           fsr2l	equ	0xFD9
 36327                           status	equ	0xFD8
 36328                           
 36329 ;; *************** function __get_date *****************
 36330 ;; Defined at:
 36331 ;;		line 41 in file "fat16.c"
 36332 ;; Parameters:    Size  Location     Type
 36333 ;;		None
 36334 ;; Auto vars:     Size  Location     Type
 36335 ;;  date            2    2[COMRAM] unsigned int 
 36336 ;; Return value:  Size  Location     Type
 36337 ;;                  2    0[COMRAM] unsigned int 
 36338 ;; Registers used:
 36339 ;;		None
 36340 ;; Tracked objects:
 36341 ;;		On entry : 0/0
 36342 ;;		On exit  : 0/0
 36343 ;;		Unchanged: 0/0
 36344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36349 ;;Total ram usage:        4 bytes
 36350 ;; Hardware stack levels used:    1
 36351 ;; This function calls:
 36352 ;;		Nothing
 36353 ;; This function is called by:
 36354 ;;		__update_modified_time
 36355 ;;		_fat_create_file
 36356 ;; This function uses a non-reentrant model
 36357 ;;
 36358                           
 36359                           	psect	text190
 36360  007A72                     __ptext190:
 36361                           	opt stack 0
 36362  007A72                     __get_date:
 36363                           	opt stack 25
 36364                           
 36365                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 36366                           
 36367                           ;incstack = 0
 36368  007A72  C003  F001         	movff	__get_date@date,?__get_date
 36369  007A76  C004  F002         	movff	__get_date@date+1,?__get_date+1
 36370  007A7A  0012               	return		;funcret
 36371  007A7C                     __end_of__get_date:
 36372                           	opt stack 0
 36373                           tosu	equ	0xFFF
 36374                           tosh	equ	0xFFE
 36375                           tosl	equ	0xFFD
 36376                           pclath	equ	0xFFA
 36377                           tblptru	equ	0xFF8
 36378                           tblptrh	equ	0xFF7
 36379                           tblptrl	equ	0xFF6
 36380                           tablat	equ	0xFF5
 36381                           prodh	equ	0xFF4
 36382                           prodl	equ	0xFF3
 36383                           intcon	equ	0xFF2
 36384                           intcon2	equ	0xFF1
 36385                           intcon3	equ	0xFF0
 36386                           indf0	equ	0xFEF
 36387                           postinc0	equ	0xFEE
 36388                           fsr0h	equ	0xFEA
 36389                           fsr0l	equ	0xFE9
 36390                           wreg	equ	0xFE8
 36391                           indf1	equ	0xFE7
 36392                           postdec1	equ	0xFE5
 36393                           plusw1	equ	0xFE3
 36394                           fsr1h	equ	0xFE2
 36395                           fsr1l	equ	0xFE1
 36396                           indf2	equ	0xFDF
 36397                           postinc2	equ	0xFDE
 36398                           postdec2	equ	0xFDD
 36399                           plusw2	equ	0xFDB
 36400                           fsr2h	equ	0xFDA
 36401                           fsr2l	equ	0xFD9
 36402                           status	equ	0xFD8
 36403                           
 36404 ;; *************** function __sector_from_cluster *****************
 36405 ;; Defined at:
 36406 ;;		line 443 in file "fat16.c"
 36407 ;; Parameters:    Size  Location     Type
 36408 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 36409 ;; Auto vars:     Size  Location     Type
 36410 ;;		None
 36411 ;; Return value:  Size  Location     Type
 36412 ;;                  2    0[COMRAM] unsigned int 
 36413 ;; Registers used:
 36414 ;;		wreg, status,2, status,0
 36415 ;; Tracked objects:
 36416 ;;		On entry : 0/0
 36417 ;;		On exit  : 0/0
 36418 ;;		Unchanged: 0/0
 36419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36424 ;;Total ram usage:        2 bytes
 36425 ;; Hardware stack levels used:    1
 36426 ;; This function calls:
 36427 ;;		Nothing
 36428 ;; This function is called by:
 36429 ;;		_fat_append_to_file
 36430 ;;		_fat_read_from_file
 36431 ;; This function uses a non-reentrant model
 36432 ;;
 36433                           
 36434                           	psect	text191
 36435  0079EA                     __ptext191:
 36436                           	opt stack 0
 36437  0079EA                     __sector_from_cluster:
 36438                           	opt stack 27
 36439                           
 36440                           ;fat16.c: 445: return fat_cluster + 22 - 2;
 36441                           
 36442                           ;incstack = 0
 36443  0079EA  0E14               	movlw	20
 36444  0079EC  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 36445  0079EE  6E01               	movwf	?__sector_from_cluster,c
 36446  0079F0  0E00               	movlw	0
 36447  0079F2  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 36448  0079F4  6E02               	movwf	?__sector_from_cluster+1,c
 36449  0079F6  0012               	return	
 36450  0079F8                     __end_of__sector_from_cluster:
 36451                           	opt stack 0
 36452                           tosu	equ	0xFFF
 36453                           tosh	equ	0xFFE
 36454                           tosl	equ	0xFFD
 36455                           pclath	equ	0xFFA
 36456                           tblptru	equ	0xFF8
 36457                           tblptrh	equ	0xFF7
 36458                           tblptrl	equ	0xFF6
 36459                           tablat	equ	0xFF5
 36460                           prodh	equ	0xFF4
 36461                           prodl	equ	0xFF3
 36462                           intcon	equ	0xFF2
 36463                           intcon2	equ	0xFF1
 36464                           intcon3	equ	0xFF0
 36465                           indf0	equ	0xFEF
 36466                           postinc0	equ	0xFEE
 36467                           fsr0h	equ	0xFEA
 36468                           fsr0l	equ	0xFE9
 36469                           wreg	equ	0xFE8
 36470                           indf1	equ	0xFE7
 36471                           postdec1	equ	0xFE5
 36472                           plusw1	equ	0xFE3
 36473                           fsr1h	equ	0xFE2
 36474                           fsr1l	equ	0xFE1
 36475                           indf2	equ	0xFDF
 36476                           postinc2	equ	0xFDE
 36477                           postdec2	equ	0xFDD
 36478                           plusw2	equ	0xFDB
 36479                           fsr2h	equ	0xFDA
 36480                           fsr2l	equ	0xFD9
 36481                           status	equ	0xFD8
 36482                           
 36483 ;; *************** function __read_fat *****************
 36484 ;; Defined at:
 36485 ;;		line 169 in file "fat16.c"
 36486 ;; Parameters:    Size  Location     Type
 36487 ;;  cluster         2   39[COMRAM] unsigned int 
 36488 ;; Auto vars:     Size  Location     Type
 36489 ;;  value           2   45[COMRAM] unsigned int 
 36490 ;;  offset          2   43[COMRAM] unsigned int 
 36491 ;;  fat_sector      2   41[COMRAM] unsigned int 
 36492 ;; Return value:  Size  Location     Type
 36493 ;;                  2   39[COMRAM] unsigned int 
 36494 ;; Registers used:
 36495 ;;		wreg, status,2, status,0, cstack
 36496 ;; Tracked objects:
 36497 ;;		On entry : 0/0
 36498 ;;		On exit  : 0/0
 36499 ;;		Unchanged: 0/0
 36500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36502 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36504 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36505 ;;Total ram usage:        8 bytes
 36506 ;; Hardware stack levels used:    1
 36507 ;; Hardware stack levels required when called:    5
 36508 ;; This function calls:
 36509 ;;		_flash_partial_read
 36510 ;; This function is called by:
 36511 ;;		_fat_delete_file
 36512 ;;		_fat_append_to_file
 36513 ;;		_fat_read_from_file
 36514 ;; This function uses a non-reentrant model
 36515 ;;
 36516                           
 36517                           	psect	text192
 36518  007122                     __ptext192:
 36519                           	opt stack 0
 36520  007122                     __read_fat:
 36521                           	opt stack 22
 36522                           
 36523                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 36524                           
 36525                           ;incstack = 0
 36526  007122  5029               	movf	__read_fat@cluster+1,w,c
 36527  007124  6E2A               	movwf	__read_fat@fat_sector,c
 36528  007126  6A2B               	clrf	__read_fat@fat_sector+1,c
 36529                           
 36530                           ;fat16.c: 175: fat_sector += 2;
 36531  007128  0E02               	movlw	2
 36532  00712A  262A               	addwf	__read_fat@fat_sector,f,c
 36533  00712C  0E00               	movlw	0
 36534  00712E  222B               	addwfc	__read_fat@fat_sector+1,f,c
 36535                           
 36536                           ;fat16.c: 176: offset = cluster & 0xFF;
 36537  007130  5028               	movf	__read_fat@cluster,w,c
 36538  007132  6E2C               	movwf	__read_fat@offset,c
 36539  007134  6A2D               	clrf	__read_fat@offset+1,c
 36540                           
 36541                           ;fat16.c: 177: offset <<= 1;
 36542  007136  90D8               	bcf	status,0,c
 36543  007138  362C               	rlcf	__read_fat@offset,f,c
 36544  00713A  362D               	rlcf	__read_fat@offset+1,f,c
 36545                           
 36546                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 36547  00713C  C02A  F014         	movff	__read_fat@fat_sector,flash_partial_read@page
 36548  007140  C02B  F015         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 36549  007144  C02C  F016         	movff	__read_fat@offset,flash_partial_read@start
 36550  007148  C02D  F017         	movff	__read_fat@offset+1,flash_partial_read@start+1
 36551  00714C  0E00               	movlw	0
 36552  00714E  6E19               	movwf	flash_partial_read@length+1,c
 36553  007150  0E02               	movlw	2
 36554  007152  6E18               	movwf	flash_partial_read@length,c
 36555  007154  0E2E               	movlw	low __read_fat@value
 36556  007156  6E1A               	movwf	flash_partial_read@data,c
 36557  007158  0E00               	movlw	high __read_fat@value
 36558  00715A  6E1B               	movwf	flash_partial_read@data+1,c
 36559  00715C  ECE8  F030         	call	_flash_partial_read	;wreg free
 36560                           
 36561                           ;fat16.c: 179: return value;
 36562  007160  C02E  F028         	movff	__read_fat@value,?__read_fat
 36563  007164  C02F  F029         	movff	__read_fat@value+1,?__read_fat+1
 36564  007168  0012               	return	
 36565  00716A                     __end_of__read_fat:
 36566                           	opt stack 0
 36567                           tosu	equ	0xFFF
 36568                           tosh	equ	0xFFE
 36569                           tosl	equ	0xFFD
 36570                           pclath	equ	0xFFA
 36571                           tblptru	equ	0xFF8
 36572                           tblptrh	equ	0xFF7
 36573                           tblptrl	equ	0xFF6
 36574                           tablat	equ	0xFF5
 36575                           prodh	equ	0xFF4
 36576                           prodl	equ	0xFF3
 36577                           intcon	equ	0xFF2
 36578                           intcon2	equ	0xFF1
 36579                           intcon3	equ	0xFF0
 36580                           indf0	equ	0xFEF
 36581                           postinc0	equ	0xFEE
 36582                           fsr0h	equ	0xFEA
 36583                           fsr0l	equ	0xFE9
 36584                           wreg	equ	0xFE8
 36585                           indf1	equ	0xFE7
 36586                           postdec1	equ	0xFE5
 36587                           plusw1	equ	0xFE3
 36588                           fsr1h	equ	0xFE2
 36589                           fsr1l	equ	0xFE1
 36590                           indf2	equ	0xFDF
 36591                           postinc2	equ	0xFDE
 36592                           postdec2	equ	0xFDD
 36593                           plusw2	equ	0xFDB
 36594                           fsr2h	equ	0xFDA
 36595                           fsr2l	equ	0xFD9
 36596                           status	equ	0xFD8
 36597                           
 36598 ;; *************** function __get_empty_cluster *****************
 36599 ;; Defined at:
 36600 ;;		line 107 in file "fat16.c"
 36601 ;; Parameters:    Size  Location     Type
 36602 ;;  first_cluste    2   39[COMRAM] unsigned int 
 36603 ;; Auto vars:     Size  Location     Type
 36604 ;;  cluster         2   47[COMRAM] unsigned int 
 36605 ;;  value           2   45[COMRAM] unsigned int 
 36606 ;;  offset          2   43[COMRAM] unsigned int 
 36607 ;;  fat_sector      2   41[COMRAM] unsigned int 
 36608 ;; Return value:  Size  Location     Type
 36609 ;;                  2   39[COMRAM] unsigned int 
 36610 ;; Registers used:
 36611 ;;		wreg, status,2, status,0, cstack
 36612 ;; Tracked objects:
 36613 ;;		On entry : 0/0
 36614 ;;		On exit  : 0/0
 36615 ;;		Unchanged: 0/0
 36616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36618 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36620 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36621 ;;Total ram usage:       10 bytes
 36622 ;; Hardware stack levels used:    1
 36623 ;; Hardware stack levels required when called:    5
 36624 ;; This function calls:
 36625 ;;		_flash_partial_read
 36626 ;; This function is called by:
 36627 ;;		_fat_create_file
 36628 ;;		_fat_append_to_file
 36629 ;; This function uses a non-reentrant model
 36630 ;;
 36631                           
 36632                           	psect	text193
 36633  0063A6                     __ptext193:
 36634                           	opt stack 0
 36635  0063A6                     __get_empty_cluster:
 36636                           	opt stack 20
 36637                           
 36638                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(4074+2); ++cluster)
 36639                           
 36640                           ;incstack = 0
 36641  0063A6  C028  F030         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 36642  0063AA  C029  F031         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 36643  0063AE                     l10045:
 36644  0063AE  0EEC               	movlw	236
 36645  0063B0  5C30               	subwf	__get_empty_cluster@cluster,w,c
 36646  0063B2  0E0F               	movlw	15
 36647  0063B4  5831               	subwfb	__get_empty_cluster@cluster+1,w,c
 36648  0063B6  B0D8               	btfsc	status,0,c
 36649  0063B8  D02B               	goto	u7460
 36650                           
 36651                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 36652  0063BA  5031               	movf	__get_empty_cluster@cluster+1,w,c
 36653  0063BC  6E2A               	movwf	__get_empty_cluster@fat_sector,c
 36654  0063BE  6A2B               	clrf	__get_empty_cluster@fat_sector+1,c
 36655                           
 36656                           ;fat16.c: 118: fat_sector += 2;
 36657  0063C0  0E02               	movlw	2
 36658  0063C2  262A               	addwf	__get_empty_cluster@fat_sector,f,c
 36659  0063C4  0E00               	movlw	0
 36660  0063C6  222B               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 36661                           
 36662                           ;fat16.c: 119: offset = cluster & 0xFF;
 36663  0063C8  5030               	movf	__get_empty_cluster@cluster,w,c
 36664  0063CA  6E2C               	movwf	__get_empty_cluster@offset,c
 36665  0063CC  6A2D               	clrf	__get_empty_cluster@offset+1,c
 36666                           
 36667                           ;fat16.c: 120: offset <<= 1;
 36668  0063CE  90D8               	bcf	status,0,c
 36669  0063D0  362C               	rlcf	__get_empty_cluster@offset,f,c
 36670  0063D2  362D               	rlcf	__get_empty_cluster@offset+1,f,c
 36671                           
 36672                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 36673  0063D4  C02A  F014         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 36674  0063D8  C02B  F015         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 36675  0063DC  C02C  F016         	movff	__get_empty_cluster@offset,flash_partial_read@start
 36676  0063E0  C02D  F017         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 36677  0063E4  0E00               	movlw	0
 36678  0063E6  6E19               	movwf	flash_partial_read@length+1,c
 36679  0063E8  0E02               	movlw	2
 36680  0063EA  6E18               	movwf	flash_partial_read@length,c
 36681  0063EC  0E2E               	movlw	low __get_empty_cluster@value
 36682  0063EE  6E1A               	movwf	flash_partial_read@data,c
 36683  0063F0  0E00               	movlw	high __get_empty_cluster@value
 36684  0063F2  6E1B               	movwf	flash_partial_read@data+1,c
 36685  0063F4  ECE8  F030         	call	_flash_partial_read	;wreg free
 36686                           
 36687                           ;fat16.c: 122: if(value==0x0000)
 36688  0063F8  502E               	movf	__get_empty_cluster@value,w,c
 36689  0063FA  102F               	iorwf	__get_empty_cluster@value+1,w,c
 36690  0063FC  A4D8               	btfss	status,2,c
 36691  0063FE  D005               	goto	l1764
 36692                           
 36693                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 36694  006400  C030  F028         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 36695  006404  C031  F029         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 36696  006408  0012               	return	
 36697  00640A                     l1764:
 36698  00640A  4A30               	infsnz	__get_empty_cluster@cluster,f,c
 36699  00640C  2A31               	incf	__get_empty_cluster@cluster+1,f,c
 36700  00640E  D7CF               	goto	l10045
 36701  006410                     u7460:
 36702                           
 36703                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 36704  006410  0E00               	movlw	0
 36705  006412  6E29               	movwf	?__get_empty_cluster+1,c
 36706  006414  0E00               	movlw	0
 36707  006416  6E28               	movwf	?__get_empty_cluster,c
 36708  006418  0012               	return	
 36709  00641A                     __end_of__get_empty_cluster:
 36710                           	opt stack 0
 36711                           tosu	equ	0xFFF
 36712                           tosh	equ	0xFFE
 36713                           tosl	equ	0xFFD
 36714                           pclath	equ	0xFFA
 36715                           tblptru	equ	0xFF8
 36716                           tblptrh	equ	0xFF7
 36717                           tblptrl	equ	0xFF6
 36718                           tablat	equ	0xFF5
 36719                           prodh	equ	0xFF4
 36720                           prodl	equ	0xFF3
 36721                           intcon	equ	0xFF2
 36722                           intcon2	equ	0xFF1
 36723                           intcon3	equ	0xFF0
 36724                           indf0	equ	0xFEF
 36725                           postinc0	equ	0xFEE
 36726                           fsr0h	equ	0xFEA
 36727                           fsr0l	equ	0xFE9
 36728                           wreg	equ	0xFE8
 36729                           indf1	equ	0xFE7
 36730                           postdec1	equ	0xFE5
 36731                           plusw1	equ	0xFE3
 36732                           fsr1h	equ	0xFE2
 36733                           fsr1l	equ	0xFE1
 36734                           indf2	equ	0xFDF
 36735                           postinc2	equ	0xFDE
 36736                           postdec2	equ	0xFDD
 36737                           plusw2	equ	0xFDB
 36738                           fsr2h	equ	0xFDA
 36739                           fsr2l	equ	0xFD9
 36740                           status	equ	0xFD8
 36741                           
 36742 ;; *************** function _flash_partial_read *****************
 36743 ;; Defined at:
 36744 ;;		line 378 in file "flash.c"
 36745 ;; Parameters:    Size  Location     Type
 36746 ;;  page            2   19[COMRAM] unsigned int 
 36747 ;;  start           2   21[COMRAM] unsigned int 
 36748 ;;  length          2   23[COMRAM] unsigned int 
 36749 ;;  data            2   25[COMRAM] PTR unsigned char 
 36750 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 36751 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 36752 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 36753 ;;		 -> _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 36754 ;; Auto vars:     Size  Location     Type
 36755 ;;  command         4   31[COMRAM] unsigned char [4]
 36756 ;;  address         4   35[COMRAM] unsigned long 
 36757 ;; Return value:  Size  Location     Type
 36758 ;;                  1    wreg      void 
 36759 ;; Registers used:
 36760 ;;		wreg, status,2, status,0, cstack
 36761 ;; Tracked objects:
 36762 ;;		On entry : 0/0
 36763 ;;		On exit  : 0/0
 36764 ;;		Unchanged: 0/0
 36765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36767 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36769 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36770 ;;Total ram usage:       20 bytes
 36771 ;; Hardware stack levels used:    1
 36772 ;; Hardware stack levels required when called:    4
 36773 ;; This function calls:
 36774 ;;		_flash_is_busy
 36775 ;;		_spi_tx_rx
 36776 ;; This function is called by:
 36777 ;;		_flash_page_read
 36778 ;;		__root_is_available
 36779 ;;		__get_empty_cluster
 36780 ;;		_fat_get_empty_clusters
 36781 ;;		__read_fat
 36782 ;;		__get_first_cluster
 36783 ;;		_fat_find_file
 36784 ;;		_fat_get_file_size
 36785 ;;		_fat_read_from_file
 36786 ;;		_fat_get_file_information
 36787 ;;		__get_file_size
 36788 ;; This function uses a non-reentrant model
 36789 ;;
 36790                           
 36791                           	psect	text194
 36792  0061D0                     __ptext194:
 36793                           	opt stack 0
 36794  0061D0                     _flash_partial_read:
 36795                           	opt stack 22
 36796                           
 36797                           ;flash.c: 380: uint32_t address;;flash.c: 381: uint8_t command[4];;flash.c: 384: while(f
      +                          lash_is_busy());
 36798                           
 36799                           ;incstack = 0
 36800  0061D0  EC38  F03C         	call	_flash_is_busy	;wreg free
 36801  0061D4  0900               	iorlw	0
 36802  0061D6  A4D8               	btfss	status,2,c
 36803  0061D8  D7FB               	goto	_flash_partial_read
 36804                           
 36805                           ;flash.c: 387: address = page;
 36806  0061DA  C014  F024         	movff	flash_partial_read@page,flash_partial_read@address
 36807  0061DE  C015  F025         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 36808  0061E2  6A26               	clrf	flash_partial_read@address+2,c
 36809  0061E4  6A27               	clrf	flash_partial_read@address+3,c
 36810                           
 36811                           ;flash.c: 388: address <<= 9;
 36812  0061E6  0E09               	movlw	9
 36813  0061E8                     u6165:
 36814  0061E8  90D8               	bcf	status,0,c
 36815  0061EA  3624               	rlcf	flash_partial_read@address,f,c
 36816  0061EC  3625               	rlcf	flash_partial_read@address+1,f,c
 36817  0061EE  3626               	rlcf	flash_partial_read@address+2,f,c
 36818  0061F0  3627               	rlcf	flash_partial_read@address+3,f,c
 36819  0061F2  2EE8               	decfsz	wreg,f,c
 36820  0061F4  D7F9               	goto	u6165
 36821                           
 36822                           ;flash.c: 389: address |= start;
 36823  0061F6  5016               	movf	flash_partial_read@start,w,c
 36824  0061F8  6E1C               	movwf	??_flash_partial_read& (0+255),c
 36825  0061FA  5017               	movf	flash_partial_read@start+1,w,c
 36826  0061FC  6E1D               	movwf	(??_flash_partial_read+1)& (0+255),c
 36827  0061FE  6A1E               	clrf	(??_flash_partial_read+2)& (0+255),c
 36828  006200  6A1F               	clrf	(??_flash_partial_read+3)& (0+255),c
 36829  006202  501C               	movf	??_flash_partial_read,w,c
 36830  006204  1224               	iorwf	flash_partial_read@address,f,c
 36831  006206  501D               	movf	??_flash_partial_read+1,w,c
 36832  006208  1225               	iorwf	flash_partial_read@address+1,f,c
 36833  00620A  501E               	movf	??_flash_partial_read+2,w,c
 36834  00620C  1226               	iorwf	flash_partial_read@address+2,f,c
 36835  00620E  501F               	movf	??_flash_partial_read+3,w,c
 36836  006210  1227               	iorwf	flash_partial_read@address+3,f,c
 36837                           
 36838                           ;flash.c: 392: command[0] = 0x03;
 36839  006212  0E03               	movlw	3
 36840  006214  6E20               	movwf	flash_partial_read@command,c
 36841                           
 36842                           ;flash.c: 393: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36843  006216  C026  F021         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 36844                           
 36845                           ;flash.c: 394: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36846  00621A  5025               	movf	flash_partial_read@address+1,w,c
 36847  00621C  6E22               	movwf	flash_partial_read@command+2,c
 36848                           
 36849                           ;flash.c: 395: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36850  00621E  C024  F023         	movff	flash_partial_read@address,flash_partial_read@command+3
 36851                           
 36852                           ;flash.c: 398: spi_tx_rx(command, 4, data, length);
 36853  006222  0E20               	movlw	low flash_partial_read@command
 36854  006224  6E01               	movwf	spi_tx_rx@command,c
 36855  006226  0E00               	movlw	high flash_partial_read@command
 36856  006228  6E02               	movwf	spi_tx_rx@command+1,c
 36857  00622A  0E00               	movlw	0
 36858  00622C  6E04               	movwf	spi_tx_rx@command_length+1,c
 36859  00622E  0E04               	movlw	4
 36860  006230  6E03               	movwf	spi_tx_rx@command_length,c
 36861  006232  C01A  F005         	movff	flash_partial_read@data,spi_tx_rx@data
 36862  006236  C01B  F006         	movff	flash_partial_read@data+1,spi_tx_rx@data+1
 36863  00623A  C018  F007         	movff	flash_partial_read@length,spi_tx_rx@data_length
 36864  00623E  C019  F008         	movff	flash_partial_read@length+1,spi_tx_rx@data_length+1
 36865  006242  ECA6  F02C         	call	_spi_tx_rx	;wreg free
 36866  006246  0012               	return		;funcret
 36867  006248                     __end_of_flash_partial_read:
 36868                           	opt stack 0
 36869                           tosu	equ	0xFFF
 36870                           tosh	equ	0xFFE
 36871                           tosl	equ	0xFFD
 36872                           pclath	equ	0xFFA
 36873                           tblptru	equ	0xFF8
 36874                           tblptrh	equ	0xFF7
 36875                           tblptrl	equ	0xFF6
 36876                           tablat	equ	0xFF5
 36877                           prodh	equ	0xFF4
 36878                           prodl	equ	0xFF3
 36879                           intcon	equ	0xFF2
 36880                           intcon2	equ	0xFF1
 36881                           intcon3	equ	0xFF0
 36882                           indf0	equ	0xFEF
 36883                           postinc0	equ	0xFEE
 36884                           fsr0h	equ	0xFEA
 36885                           fsr0l	equ	0xFE9
 36886                           wreg	equ	0xFE8
 36887                           indf1	equ	0xFE7
 36888                           postdec1	equ	0xFE5
 36889                           plusw1	equ	0xFE3
 36890                           fsr1h	equ	0xFE2
 36891                           fsr1l	equ	0xFE1
 36892                           indf2	equ	0xFDF
 36893                           postinc2	equ	0xFDE
 36894                           postdec2	equ	0xFDD
 36895                           plusw2	equ	0xFDB
 36896                           fsr2h	equ	0xFDA
 36897                           fsr2l	equ	0xFD9
 36898                           status	equ	0xFD8
 36899                           
 36900 ;; *************** function _flash_is_busy *****************
 36901 ;; Defined at:
 36902 ;;		line 289 in file "flash.c"
 36903 ;; Parameters:    Size  Location     Type
 36904 ;;		None
 36905 ;; Auto vars:     Size  Location     Type
 36906 ;;  status          2   17[COMRAM] unsigned int 
 36907 ;; Return value:  Size  Location     Type
 36908 ;;                  1    wreg      unsigned char 
 36909 ;; Registers used:
 36910 ;;		wreg, status,2, status,0, cstack
 36911 ;; Tracked objects:
 36912 ;;		On entry : 0/0
 36913 ;;		On exit  : 0/0
 36914 ;;		Unchanged: 0/0
 36915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36917 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36920 ;;Total ram usage:        2 bytes
 36921 ;; Hardware stack levels used:    1
 36922 ;; Hardware stack levels required when called:    3
 36923 ;; This function calls:
 36924 ;;		__flash_get_status
 36925 ;;		__flash_wakeup
 36926 ;; This function is called by:
 36927 ;;		__flash_set_page_size
 36928 ;;		__flash_copy_page_to_buffer
 36929 ;;		__flash_compare_page_to_buffer
 36930 ;;		__flash_write_to_buffer
 36931 ;;		__flash_write_page_from_buffer
 36932 ;;		_flash_partial_read
 36933 ;;		_flash_partial_write
 36934 ;;		_api_prepare
 36935 ;;		__fill_buffer_get_status
 36936 ;;		__flash_erase_page
 36937 ;;		_flash_set_power_state
 36938 ;; This function uses a non-reentrant model
 36939 ;;
 36940                           
 36941                           	psect	text195
 36942  007870                     __ptext195:
 36943                           	opt stack 0
 36944  007870                     _flash_is_busy:
 36945                           	opt stack 24
 36946                           
 36947                           ;flash.c: 292: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36948                           
 36949                           ;incstack = 0
 36950  007870  0100               	movlb	0	; () banked
 36951  007872  519E               	movf	_power_state& (0+255),w,b
 36952  007874  A4D8               	btfss	status,2,c
 36953                           
 36954                           ; BSR set to: 0
 36955                           ;flash.c: 293: {;flash.c: 294: _flash_wakeup();
 36956  007876  EC06  F037         	call	__flash_wakeup	;wreg free
 36957                           
 36958                           ;flash.c: 295: };flash.c: 298: uint16_t status = _flash_get_status();
 36959  00787A  ECA5  F03A         	call	__flash_get_status	;wreg free
 36960  00787E  C00D  F012         	movff	?__flash_get_status,flash_is_busy@status
 36961  007882  C00E  F013         	movff	?__flash_get_status+1,flash_is_busy@status+1
 36962                           
 36963                           ;flash.c: 299: if(status & 0b0000000010000000)
 36964  007886  AE12               	btfss	flash_is_busy@status,7,c
 36965  007888  D002               	goto	l1648
 36966                           
 36967                           ;flash.c: 300: {;flash.c: 302: return 0;
 36968  00788A  0E00               	movlw	0
 36969                           
 36970                           ;flash.c: 303: }
 36971  00788C  0012               	return	
 36972  00788E                     l1648:
 36973                           
 36974                           ;flash.c: 304: else;flash.c: 305: {;flash.c: 307: return 1;
 36975  00788E  0E01               	movlw	1
 36976  007890  0012               	return	
 36977  007892                     __end_of_flash_is_busy:
 36978                           	opt stack 0
 36979                           tosu	equ	0xFFF
 36980                           tosh	equ	0xFFE
 36981                           tosl	equ	0xFFD
 36982                           pclath	equ	0xFFA
 36983                           tblptru	equ	0xFF8
 36984                           tblptrh	equ	0xFF7
 36985                           tblptrl	equ	0xFF6
 36986                           tablat	equ	0xFF5
 36987                           prodh	equ	0xFF4
 36988                           prodl	equ	0xFF3
 36989                           intcon	equ	0xFF2
 36990                           intcon2	equ	0xFF1
 36991                           intcon3	equ	0xFF0
 36992                           indf0	equ	0xFEF
 36993                           postinc0	equ	0xFEE
 36994                           fsr0h	equ	0xFEA
 36995                           fsr0l	equ	0xFE9
 36996                           wreg	equ	0xFE8
 36997                           indf1	equ	0xFE7
 36998                           postdec1	equ	0xFE5
 36999                           plusw1	equ	0xFE3
 37000                           fsr1h	equ	0xFE2
 37001                           fsr1l	equ	0xFE1
 37002                           indf2	equ	0xFDF
 37003                           postinc2	equ	0xFDE
 37004                           postdec2	equ	0xFDD
 37005                           plusw2	equ	0xFDB
 37006                           fsr2h	equ	0xFDA
 37007                           fsr2l	equ	0xFD9
 37008                           status	equ	0xFD8
 37009                           
 37010 ;; *************** function __flash_wakeup *****************
 37011 ;; Defined at:
 37012 ;;		line 120 in file "flash.c"
 37013 ;; Parameters:    Size  Location     Type
 37014 ;;		None
 37015 ;; Auto vars:     Size  Location     Type
 37016 ;;  command         1    8[COMRAM] unsigned char 
 37017 ;; Return value:  Size  Location     Type
 37018 ;;                  1    wreg      void 
 37019 ;; Registers used:
 37020 ;;		wreg, status,2, status,0, cstack
 37021 ;; Tracked objects:
 37022 ;;		On entry : 0/0
 37023 ;;		On exit  : 0/0
 37024 ;;		Unchanged: 0/0
 37025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37030 ;;Total ram usage:        1 bytes
 37031 ;; Hardware stack levels used:    1
 37032 ;; Hardware stack levels required when called:    2
 37033 ;; This function calls:
 37034 ;;		_spi_tx
 37035 ;; This function is called by:
 37036 ;;		_flash_is_busy
 37037 ;;		_flash_set_power_state
 37038 ;; This function uses a non-reentrant model
 37039 ;;
 37040                           
 37041                           	psect	text196
 37042  006E0C                     __ptext196:
 37043                           	opt stack 0
 37044  006E0C                     __flash_wakeup:
 37045                           	opt stack 24
 37046                           
 37047                           ;flash.c: 122: uint8_t command;;flash.c: 124: switch(power_state)
 37048                           
 37049                           ;incstack = 0
 37050  006E0C  D021               	goto	l1594
 37051  006E0E                     
 37052                           ;flash.c: 127: command = 0xAB;
 37053  006E0E  0EAB               	movlw	171
 37054  006E10  6E09               	movwf	__flash_wakeup@command,c
 37055                           
 37056                           ;flash.c: 128: spi_tx(&command, 1);
 37057  006E12  0E09               	movlw	low __flash_wakeup@command
 37058  006E14  6E01               	movwf	spi_tx@data,c
 37059  006E16  0E00               	movlw	high __flash_wakeup@command
 37060  006E18  6E02               	movwf	spi_tx@data+1,c
 37061  006E1A  0E00               	movlw	0
 37062  006E1C  6E04               	movwf	spi_tx@length+1,c
 37063  006E1E  0E01               	movlw	1
 37064  006E20  6E03               	movwf	spi_tx@length,c
 37065  006E22  EC7B  F035         	call	_spi_tx	;wreg free
 37066                           
 37067                           ;flash.c: 129: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37068  006E26  0E17               	movlw	23
 37069  006E28                     u11797:
 37070  006E28  2EE8               	decfsz	wreg,f,c
 37071  006E2A  D7FE               	bra	u11797
 37072  006E2C  F000               	nop	
 37073                           
 37074                           ;flash.c: 130: power_state = FLASH_POWER_STATE_NORMAL;
 37075  006E2E  0E00               	movlw	0
 37076  006E30  0100               	movlb	0	; () banked
 37077  006E32  6F9E               	movwf	_power_state& (0+255),b
 37078                           
 37079                           ;flash.c: 131: break;
 37080  006E34  0012               	return	
 37081  006E36                     l1597:
 37082                           
 37083                           ; BSR set to: 0
 37084                           ;flash.c: 136: LATDbits.LD7 = 0;
 37085  006E36  9E8C               	bcf	3980,7,c	;volatile
 37086                           
 37087                           ; BSR set to: 0
 37088                           ;flash.c: 137: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37089  006E38  0E0D               	movlw	13
 37090  006E3A                     u11807:
 37091  006E3A  2EE8               	decfsz	wreg,f,c
 37092  006E3C  D7FE               	bra	u11807
 37093  006E3E  F000               	nop	
 37094                           
 37095                           ;flash.c: 138: LATDbits.LD7 = 1;
 37096  006E40  8E8C               	bsf	3980,7,c	;volatile
 37097                           
 37098                           ;flash.c: 139: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37099  006E42  0E50               	movlw	80
 37100  006E44                     u11817:
 37101  006E44  2EE8               	decfsz	wreg,f,c
 37102  006E46  D7FE               	bra	u11817
 37103                           
 37104                           ;flash.c: 140: power_state = FLASH_POWER_STATE_NORMAL;
 37105  006E48  0E00               	movlw	0
 37106  006E4A  0100               	movlb	0	; () banked
 37107  006E4C  6F9E               	movwf	_power_state& (0+255),b
 37108                           
 37109                           ; BSR set to: 0
 37110                           ;flash.c: 142: }
 37111                           
 37112                           ;flash.c: 141: break;
 37113  006E4E  0012               	return	
 37114  006E50                     l1594:
 37115                           
 37116                           ; BSR set to: 0
 37117  006E50  0100               	movlb	0	; () banked
 37118  006E52  519E               	movf	_power_state& (0+255),w,b
 37119                           
 37120                           ; Switch size 1, requested type "space"
 37121                           ; Number of cases is 2, Range of values is 1 to 2
 37122                           ; switch strategies available:
 37123                           ; Name         Instructions Cycles
 37124                           ; simple_byte            7     4 (average)
 37125                           ;	Chosen strategy is simple_byte
 37126  006E54  0A01               	xorlw	1	; case 1
 37127  006E56  B4D8               	btfsc	status,2,c
 37128  006E58  D7DA               	goto	l1595
 37129  006E5A  0A03               	xorlw	3	; case 2
 37130  006E5C  A4D8               	btfss	status,2,c
 37131  006E5E  0012               	return	
 37132  006E60  D7EA               	goto	l1597
 37133  006E62                     __end_of__flash_wakeup:
 37134                           	opt stack 0
 37135                           tosu	equ	0xFFF
 37136                           tosh	equ	0xFFE
 37137                           tosl	equ	0xFFD
 37138                           pclath	equ	0xFFA
 37139                           tblptru	equ	0xFF8
 37140                           tblptrh	equ	0xFF7
 37141                           tblptrl	equ	0xFF6
 37142                           tablat	equ	0xFF5
 37143                           prodh	equ	0xFF4
 37144                           prodl	equ	0xFF3
 37145                           intcon	equ	0xFF2
 37146                           intcon2	equ	0xFF1
 37147                           intcon3	equ	0xFF0
 37148                           indf0	equ	0xFEF
 37149                           postinc0	equ	0xFEE
 37150                           fsr0h	equ	0xFEA
 37151                           fsr0l	equ	0xFE9
 37152                           wreg	equ	0xFE8
 37153                           indf1	equ	0xFE7
 37154                           postdec1	equ	0xFE5
 37155                           plusw1	equ	0xFE3
 37156                           fsr1h	equ	0xFE2
 37157                           fsr1l	equ	0xFE1
 37158                           indf2	equ	0xFDF
 37159                           postinc2	equ	0xFDE
 37160                           postdec2	equ	0xFDD
 37161                           plusw2	equ	0xFDB
 37162                           fsr2h	equ	0xFDA
 37163                           fsr2l	equ	0xFD9
 37164                           status	equ	0xFD8
 37165                           
 37166 ;; *************** function _spi_tx *****************
 37167 ;; Defined at:
 37168 ;;		line 110 in file "spi.c"
 37169 ;; Parameters:    Size  Location     Type
 37170 ;;  data            2    0[COMRAM] PTR unsigned char 
 37171 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37172 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37173 ;;  length          2    2[COMRAM] unsigned int 
 37174 ;; Auto vars:     Size  Location     Type
 37175 ;;		None
 37176 ;; Return value:  Size  Location     Type
 37177 ;;                  1    wreg      void 
 37178 ;; Registers used:
 37179 ;;		wreg, status,2, status,0, cstack
 37180 ;; Tracked objects:
 37181 ;;		On entry : 0/0
 37182 ;;		On exit  : 0/0
 37183 ;;		Unchanged: 0/0
 37184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37188 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37189 ;;Total ram usage:        8 bytes
 37190 ;; Hardware stack levels used:    1
 37191 ;; Hardware stack levels required when called:    1
 37192 ;; This function calls:
 37193 ;;		__switch_mastermode
 37194 ;; This function is called by:
 37195 ;;		__flash_set_page_size
 37196 ;;		__flash_wakeup
 37197 ;;		__flash_copy_page_to_buffer
 37198 ;;		__flash_compare_page_to_buffer
 37199 ;;		__flash_write_page_from_buffer
 37200 ;;		__flash_erase_page
 37201 ;;		_flash_set_power_state
 37202 ;; This function uses a non-reentrant model
 37203 ;;
 37204                           
 37205                           	psect	text197
 37206  006AF6                     __ptext197:
 37207                           	opt stack 0
 37208  006AF6                     _spi_tx:
 37209                           	opt stack 26
 37210                           
 37211                           ;spi.c: 113: _switch_mastermode();
 37212                           
 37213                           ; BSR set to: 0
 37214                           ;incstack = 0
 37215  006AF6  EC62  F03D         	call	__switch_mastermode	;wreg free
 37216                           
 37217                           ;spi.c: 116: DMACON1bits.SSCON1 = 0;
 37218  006AFA  9E88               	bcf	3976,7,c	;volatile
 37219                           
 37220                           ;spi.c: 117: DMACON1bits.SSCON0 = 0;
 37221  006AFC  9C88               	bcf	3976,6,c	;volatile
 37222                           
 37223                           ;spi.c: 119: DMACON1bits.TXINC = 1;
 37224  006AFE  8A88               	bsf	3976,5,c	;volatile
 37225                           
 37226                           ;spi.c: 121: DMACON1bits.RXINC = 0;
 37227  006B00  9888               	bcf	3976,4,c	;volatile
 37228                           
 37229                           ;spi.c: 123: DMACON1bits.DUPLEX1 = 0;
 37230  006B02  9688               	bcf	3976,3,c	;volatile
 37231                           
 37232                           ;spi.c: 124: DMACON1bits.DUPLEX0 = 1;
 37233  006B04  8488               	bsf	3976,2,c	;volatile
 37234                           
 37235                           ;spi.c: 126: DMACON1bits.DLYINTEN = 0;
 37236  006B06  9288               	bcf	3976,1,c	;volatile
 37237                           
 37238                           ;spi.c: 128: DMACON2bits.DLYCYC = 0b0000;
 37239  006B08  9886               	bcf	3974,4,c	;volatile
 37240  006B0A  9A86               	bcf	3974,5,c	;volatile
 37241  006B0C  9C86               	bcf	3974,6,c	;volatile
 37242  006B0E  9E86               	bcf	3974,7,c	;volatile
 37243                           
 37244                           ;spi.c: 130: DMACON2bits.INTLVL = 0b0000;
 37245  006B10  9086               	bcf	3974,0,c	;volatile
 37246  006B12  9286               	bcf	3974,1,c	;volatile
 37247  006B14  9486               	bcf	3974,2,c	;volatile
 37248  006B16  9686               	bcf	3974,3,c	;volatile
 37249                           
 37250                           ;spi.c: 133: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37251  006B18  5002               	movf	spi_tx@data+1,w,c
 37252  006B1A  6E6A               	movwf	3946,c	;volatile
 37253                           
 37254                           ;spi.c: 134: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37255  006B1C  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 37256                           
 37257                           ;spi.c: 137: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37258  006B20  0EFF               	movlw	255
 37259  006B22  6E05               	movwf	??_spi_tx& (0+255),c
 37260  006B24  0EFF               	movlw	255
 37261  006B26  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 37262  006B28  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 37263  006B2C  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 37264  006B30  5005               	movf	??_spi_tx,w,c
 37265  006B32  2607               	addwf	??_spi_tx+2,f,c
 37266  006B34  5006               	movf	??_spi_tx+1,w,c
 37267  006B36  2208               	addwfc	??_spi_tx+3,f,c
 37268  006B38  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 37269  006B3C  6A08               	clrf	??_spi_tx+3,c
 37270  006B3E  5007               	movf	??_spi_tx+2,w,c
 37271  006B40  6E66               	movwf	3942,c	;volatile
 37272                           
 37273                           ;spi.c: 138: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37274  006B42  0403               	decf	spi_tx@length,w,c
 37275  006B44  6E67               	movwf	3943,c	;volatile
 37276                           
 37277                           ;spi.c: 141: LATDbits.LD7 = 0;
 37278  006B46  9E8C               	bcf	3980,7,c	;volatile
 37279                           
 37280                           ;spi.c: 142: DMACON1bits.DMAEN = 1;
 37281  006B48  8088               	bsf	3976,0,c	;volatile
 37282  006B4A  B088               	btfsc	3976,0,c	;volatile
 37283  006B4C  D7FE               	goto	l2600
 37284                           
 37285                           ;spi.c: 144: LATDbits.LD7 = 1;
 37286  006B4E  8E8C               	bsf	3980,7,c	;volatile
 37287  006B50  0012               	return		;funcret
 37288  006B52                     __end_of_spi_tx:
 37289                           	opt stack 0
 37290                           tosu	equ	0xFFF
 37291                           tosh	equ	0xFFE
 37292                           tosl	equ	0xFFD
 37293                           pclath	equ	0xFFA
 37294                           tblptru	equ	0xFF8
 37295                           tblptrh	equ	0xFF7
 37296                           tblptrl	equ	0xFF6
 37297                           tablat	equ	0xFF5
 37298                           prodh	equ	0xFF4
 37299                           prodl	equ	0xFF3
 37300                           intcon	equ	0xFF2
 37301                           intcon2	equ	0xFF1
 37302                           intcon3	equ	0xFF0
 37303                           indf0	equ	0xFEF
 37304                           postinc0	equ	0xFEE
 37305                           fsr0h	equ	0xFEA
 37306                           fsr0l	equ	0xFE9
 37307                           wreg	equ	0xFE8
 37308                           indf1	equ	0xFE7
 37309                           postdec1	equ	0xFE5
 37310                           plusw1	equ	0xFE3
 37311                           fsr1h	equ	0xFE2
 37312                           fsr1l	equ	0xFE1
 37313                           indf2	equ	0xFDF
 37314                           postinc2	equ	0xFDE
 37315                           postdec2	equ	0xFDD
 37316                           plusw2	equ	0xFDB
 37317                           fsr2h	equ	0xFDA
 37318                           fsr2l	equ	0xFD9
 37319                           status	equ	0xFD8
 37320                           
 37321 ;; *************** function __flash_get_status *****************
 37322 ;; Defined at:
 37323 ;;		line 109 in file "flash.c"
 37324 ;; Parameters:    Size  Location     Type
 37325 ;;		None
 37326 ;; Auto vars:     Size  Location     Type
 37327 ;;  status          2   15[COMRAM] unsigned int 
 37328 ;;  command         1   14[COMRAM] unsigned char 
 37329 ;; Return value:  Size  Location     Type
 37330 ;;                  2   12[COMRAM] unsigned int 
 37331 ;; Registers used:
 37332 ;;		wreg, status,2, status,0, cstack
 37333 ;; Tracked objects:
 37334 ;;		On entry : 0/0
 37335 ;;		On exit  : 0/0
 37336 ;;		Unchanged: 0/0
 37337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37341 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37342 ;;Total ram usage:        5 bytes
 37343 ;; Hardware stack levels used:    1
 37344 ;; Hardware stack levels required when called:    2
 37345 ;; This function calls:
 37346 ;;		_spi_tx_rx
 37347 ;; This function is called by:
 37348 ;;		__flash_compare_page_to_buffer
 37349 ;;		_flash_is_busy
 37350 ;; This function uses a non-reentrant model
 37351 ;;
 37352                           
 37353                           	psect	text198
 37354  00754A                     __ptext198:
 37355                           	opt stack 0
 37356  00754A                     __flash_get_status:
 37357                           	opt stack 24
 37358                           
 37359                           ;flash.c: 113: uint8_t command = 0xD7;
 37360                           
 37361                           ;incstack = 0
 37362  00754A  0ED7               	movlw	215
 37363  00754C  6E0F               	movwf	__flash_get_status@command,c
 37364                           
 37365                           ;flash.c: 114: uint16_t status;;flash.c: 115: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37366  00754E  0E0F               	movlw	low __flash_get_status@command
 37367  007550  6E01               	movwf	spi_tx_rx@command,c
 37368  007552  0E00               	movlw	high __flash_get_status@command
 37369  007554  6E02               	movwf	spi_tx_rx@command+1,c
 37370  007556  0E00               	movlw	0
 37371  007558  6E04               	movwf	spi_tx_rx@command_length+1,c
 37372  00755A  0E01               	movlw	1
 37373  00755C  6E03               	movwf	spi_tx_rx@command_length,c
 37374  00755E  0E10               	movlw	low __flash_get_status@status
 37375  007560  6E05               	movwf	spi_tx_rx@data,c
 37376  007562  0E00               	movlw	high __flash_get_status@status
 37377  007564  6E06               	movwf	spi_tx_rx@data+1,c
 37378  007566  0E00               	movlw	0
 37379  007568  6E08               	movwf	spi_tx_rx@data_length+1,c
 37380  00756A  0E02               	movlw	2
 37381  00756C  6E07               	movwf	spi_tx_rx@data_length,c
 37382  00756E  ECA6  F02C         	call	_spi_tx_rx	;wreg free
 37383                           
 37384                           ;flash.c: 116: return status;
 37385  007572  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 37386  007576  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37387  00757A  0012               	return	
 37388  00757C                     __end_of__flash_get_status:
 37389                           	opt stack 0
 37390                           tosu	equ	0xFFF
 37391                           tosh	equ	0xFFE
 37392                           tosl	equ	0xFFD
 37393                           pclath	equ	0xFFA
 37394                           tblptru	equ	0xFF8
 37395                           tblptrh	equ	0xFF7
 37396                           tblptrl	equ	0xFF6
 37397                           tablat	equ	0xFF5
 37398                           prodh	equ	0xFF4
 37399                           prodl	equ	0xFF3
 37400                           intcon	equ	0xFF2
 37401                           intcon2	equ	0xFF1
 37402                           intcon3	equ	0xFF0
 37403                           indf0	equ	0xFEF
 37404                           postinc0	equ	0xFEE
 37405                           fsr0h	equ	0xFEA
 37406                           fsr0l	equ	0xFE9
 37407                           wreg	equ	0xFE8
 37408                           indf1	equ	0xFE7
 37409                           postdec1	equ	0xFE5
 37410                           plusw1	equ	0xFE3
 37411                           fsr1h	equ	0xFE2
 37412                           fsr1l	equ	0xFE1
 37413                           indf2	equ	0xFDF
 37414                           postinc2	equ	0xFDE
 37415                           postdec2	equ	0xFDD
 37416                           plusw2	equ	0xFDB
 37417                           fsr2h	equ	0xFDA
 37418                           fsr2l	equ	0xFD9
 37419                           status	equ	0xFD8
 37420                           
 37421 ;; *************** function _spi_tx_rx *****************
 37422 ;; Defined at:
 37423 ;;		line 207 in file "spi.c"
 37424 ;; Parameters:    Size  Location     Type
 37425 ;;  command         2    0[COMRAM] PTR unsigned char 
 37426 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 37427 ;;  command_leng    2    2[COMRAM] unsigned int 
 37428 ;;  data            2    4[COMRAM] PTR unsigned char 
 37429 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 37430 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 37431 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 37432 ;;		 -> _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 37433 ;;  data_length     2    6[COMRAM] unsigned int 
 37434 ;; Auto vars:     Size  Location     Type
 37435 ;;		None
 37436 ;; Return value:  Size  Location     Type
 37437 ;;                  1    wreg      void 
 37438 ;; Registers used:
 37439 ;;		wreg, status,2, status,0, cstack
 37440 ;; Tracked objects:
 37441 ;;		On entry : 0/0
 37442 ;;		On exit  : 0/0
 37443 ;;		Unchanged: 0/0
 37444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37448 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37449 ;;Total ram usage:       12 bytes
 37450 ;; Hardware stack levels used:    1
 37451 ;; Hardware stack levels required when called:    1
 37452 ;; This function calls:
 37453 ;;		__switch_mastermode
 37454 ;; This function is called by:
 37455 ;;		__flash_get_status
 37456 ;;		_flash_partial_read
 37457 ;; This function uses a non-reentrant model
 37458 ;;
 37459                           
 37460                           	psect	text199
 37461  00594C                     __ptext199:
 37462                           	opt stack 0
 37463  00594C                     _spi_tx_rx:
 37464                           	opt stack 24
 37465                           
 37466                           ;spi.c: 210: _switch_mastermode();
 37467                           
 37468                           ;incstack = 0
 37469  00594C  EC62  F03D         	call	__switch_mastermode	;wreg free
 37470                           
 37471                           ;spi.c: 213: DMACON1bits.SSCON1 = 0;
 37472  005950  9E88               	bcf	3976,7,c	;volatile
 37473                           
 37474                           ;spi.c: 214: DMACON1bits.SSCON0 = 0;
 37475  005952  9C88               	bcf	3976,6,c	;volatile
 37476                           
 37477                           ;spi.c: 216: DMACON1bits.TXINC = 1;
 37478  005954  8A88               	bsf	3976,5,c	;volatile
 37479                           
 37480                           ;spi.c: 218: DMACON1bits.RXINC = 0;
 37481  005956  9888               	bcf	3976,4,c	;volatile
 37482                           
 37483                           ;spi.c: 220: DMACON1bits.DUPLEX1 = 0;
 37484  005958  9688               	bcf	3976,3,c	;volatile
 37485                           
 37486                           ;spi.c: 221: DMACON1bits.DUPLEX0 = 1;
 37487  00595A  8488               	bsf	3976,2,c	;volatile
 37488                           
 37489                           ;spi.c: 223: DMACON1bits.DLYINTEN = 0;
 37490  00595C  9288               	bcf	3976,1,c	;volatile
 37491                           
 37492                           ;spi.c: 225: DMACON2bits.DLYCYC = 0b0000;
 37493  00595E  9886               	bcf	3974,4,c	;volatile
 37494  005960  9A86               	bcf	3974,5,c	;volatile
 37495  005962  9C86               	bcf	3974,6,c	;volatile
 37496  005964  9E86               	bcf	3974,7,c	;volatile
 37497                           
 37498                           ;spi.c: 227: DMACON2bits.INTLVL = 0b0000;
 37499  005966  9086               	bcf	3974,0,c	;volatile
 37500  005968  9286               	bcf	3974,1,c	;volatile
 37501  00596A  9486               	bcf	3974,2,c	;volatile
 37502  00596C  9686               	bcf	3974,3,c	;volatile
 37503                           
 37504                           ;spi.c: 230: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37505  00596E  5002               	movf	spi_tx_rx@command+1,w,c
 37506  005970  6E6A               	movwf	3946,c	;volatile
 37507                           
 37508                           ;spi.c: 231: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37509  005972  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37510                           
 37511                           ;spi.c: 234: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37512  005976  0EFF               	movlw	255
 37513  005978  6E09               	movwf	??_spi_tx_rx& (0+255),c
 37514  00597A  0EFF               	movlw	255
 37515  00597C  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 37516  00597E  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37517  005982  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37518  005986  5009               	movf	??_spi_tx_rx,w,c
 37519  005988  260B               	addwf	??_spi_tx_rx+2,f,c
 37520  00598A  500A               	movf	??_spi_tx_rx+1,w,c
 37521  00598C  220C               	addwfc	??_spi_tx_rx+3,f,c
 37522  00598E  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37523  005992  6A0C               	clrf	??_spi_tx_rx+3,c
 37524  005994  500B               	movf	??_spi_tx_rx+2,w,c
 37525  005996  6E66               	movwf	3942,c	;volatile
 37526                           
 37527                           ;spi.c: 235: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37528  005998  0403               	decf	spi_tx_rx@command_length,w,c
 37529  00599A  6E67               	movwf	3943,c	;volatile
 37530                           
 37531                           ;spi.c: 238: LATDbits.LD7 = 0;
 37532  00599C  9E8C               	bcf	3980,7,c	;volatile
 37533                           
 37534                           ;spi.c: 241: DMACON1bits.DMAEN = 1;
 37535  00599E  8088               	bsf	3976,0,c	;volatile
 37536  0059A0  B088               	btfsc	3976,0,c	;volatile
 37537  0059A2  D7FE               	goto	l2615
 37538                           
 37539                           ;spi.c: 245: DMACON1bits.TXINC = 0;
 37540  0059A4  9A88               	bcf	3976,5,c	;volatile
 37541                           
 37542                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 37543  0059A6  8888               	bsf	3976,4,c	;volatile
 37544                           
 37545                           ;spi.c: 249: DMACON1bits.DUPLEX1 = 0;
 37546  0059A8  9688               	bcf	3976,3,c	;volatile
 37547                           
 37548                           ;spi.c: 250: DMACON1bits.DUPLEX0 = 0;
 37549  0059AA  9488               	bcf	3976,2,c	;volatile
 37550                           
 37551                           ;spi.c: 253: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37552  0059AC  5006               	movf	spi_tx_rx@data+1,w,c
 37553  0059AE  6E68               	movwf	3944,c	;volatile
 37554                           
 37555                           ;spi.c: 254: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37556  0059B0  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37557                           
 37558                           ;spi.c: 257: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37559  0059B4  0EFF               	movlw	255
 37560  0059B6  6E09               	movwf	??_spi_tx_rx& (0+255),c
 37561  0059B8  0EFF               	movlw	255
 37562  0059BA  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 37563  0059BC  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37564  0059C0  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37565  0059C4  5009               	movf	??_spi_tx_rx,w,c
 37566  0059C6  260B               	addwf	??_spi_tx_rx+2,f,c
 37567  0059C8  500A               	movf	??_spi_tx_rx+1,w,c
 37568  0059CA  220C               	addwfc	??_spi_tx_rx+3,f,c
 37569  0059CC  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37570  0059D0  6A0C               	clrf	??_spi_tx_rx+3,c
 37571  0059D2  500B               	movf	??_spi_tx_rx+2,w,c
 37572  0059D4  6E66               	movwf	3942,c	;volatile
 37573                           
 37574                           ;spi.c: 258: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37575  0059D6  0407               	decf	spi_tx_rx@data_length,w,c
 37576  0059D8  6E67               	movwf	3943,c	;volatile
 37577                           
 37578                           ;spi.c: 261: DMACON1bits.DMAEN = 1;
 37579  0059DA  8088               	bsf	3976,0,c	;volatile
 37580  0059DC  B088               	btfsc	3976,0,c	;volatile
 37581  0059DE  D7FE               	goto	l2618
 37582                           
 37583                           ;spi.c: 265: LATDbits.LD7 = 1;
 37584  0059E0  8E8C               	bsf	3980,7,c	;volatile
 37585  0059E2  0012               	return		;funcret
 37586  0059E4                     __end_of_spi_tx_rx:
 37587                           	opt stack 0
 37588                           tosu	equ	0xFFF
 37589                           tosh	equ	0xFFE
 37590                           tosl	equ	0xFFD
 37591                           pclath	equ	0xFFA
 37592                           tblptru	equ	0xFF8
 37593                           tblptrh	equ	0xFF7
 37594                           tblptrl	equ	0xFF6
 37595                           tablat	equ	0xFF5
 37596                           prodh	equ	0xFF4
 37597                           prodl	equ	0xFF3
 37598                           intcon	equ	0xFF2
 37599                           intcon2	equ	0xFF1
 37600                           intcon3	equ	0xFF0
 37601                           indf0	equ	0xFEF
 37602                           postinc0	equ	0xFEE
 37603                           fsr0h	equ	0xFEA
 37604                           fsr0l	equ	0xFE9
 37605                           wreg	equ	0xFE8
 37606                           indf1	equ	0xFE7
 37607                           postdec1	equ	0xFE5
 37608                           plusw1	equ	0xFE3
 37609                           fsr1h	equ	0xFE2
 37610                           fsr1l	equ	0xFE1
 37611                           indf2	equ	0xFDF
 37612                           postinc2	equ	0xFDE
 37613                           postdec2	equ	0xFDD
 37614                           plusw2	equ	0xFDB
 37615                           fsr2h	equ	0xFDA
 37616                           fsr2l	equ	0xFD9
 37617                           status	equ	0xFD8
 37618                           
 37619 ;; *************** function __switch_mastermode *****************
 37620 ;; Defined at:
 37621 ;;		line 53 in file "spi.c"
 37622 ;; Parameters:    Size  Location     Type
 37623 ;;		None
 37624 ;; Auto vars:     Size  Location     Type
 37625 ;;		None
 37626 ;; Return value:  Size  Location     Type
 37627 ;;                  1    wreg      void 
 37628 ;; Registers used:
 37629 ;;		None
 37630 ;; Tracked objects:
 37631 ;;		On entry : 0/0
 37632 ;;		On exit  : 0/0
 37633 ;;		Unchanged: 0/0
 37634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37639 ;;Total ram usage:        0 bytes
 37640 ;; Hardware stack levels used:    1
 37641 ;; This function calls:
 37642 ;;		Nothing
 37643 ;; This function is called by:
 37644 ;;		_spi_tx
 37645 ;;		_spi_tx_tx
 37646 ;;		_spi_tx_rx
 37647 ;; This function uses a non-reentrant model
 37648 ;;
 37649                           
 37650                           	psect	text200
 37651  007AC4                     __ptext200:
 37652                           	opt stack 0
 37653  007AC4                     __switch_mastermode:
 37654                           	opt stack 26
 37655                           
 37656                           ;incstack = 0
 37657  007AC4  0012               	return		;funcret
 37658  007AC6                     __end_of__switch_mastermode:
 37659                           	opt stack 0
 37660                           tosu	equ	0xFFF
 37661                           tosh	equ	0xFFE
 37662                           tosl	equ	0xFFD
 37663                           pclath	equ	0xFFA
 37664                           tblptru	equ	0xFF8
 37665                           tblptrh	equ	0xFF7
 37666                           tblptrl	equ	0xFF6
 37667                           tablat	equ	0xFF5
 37668                           prodh	equ	0xFF4
 37669                           prodl	equ	0xFF3
 37670                           intcon	equ	0xFF2
 37671                           intcon2	equ	0xFF1
 37672                           intcon3	equ	0xFF0
 37673                           indf0	equ	0xFEF
 37674                           postinc0	equ	0xFEE
 37675                           fsr0h	equ	0xFEA
 37676                           fsr0l	equ	0xFE9
 37677                           wreg	equ	0xFE8
 37678                           indf1	equ	0xFE7
 37679                           postdec1	equ	0xFE5
 37680                           plusw1	equ	0xFE3
 37681                           fsr1h	equ	0xFE2
 37682                           fsr1l	equ	0xFE1
 37683                           indf2	equ	0xFDF
 37684                           postinc2	equ	0xFDE
 37685                           postdec2	equ	0xFDD
 37686                           plusw2	equ	0xFDB
 37687                           fsr2h	equ	0xFDA
 37688                           fsr2l	equ	0xFD9
 37689                           status	equ	0xFD8
 37690                           
 37691 ;; *************** function _USBTransferOnePacket *****************
 37692 ;; Defined at:
 37693 ;;		line 995 in file "usb_device.c"
 37694 ;; Parameters:    Size  Location     Type
 37695 ;;  ep              1    wreg     unsigned char 
 37696 ;;  dir             1    0[COMRAM] unsigned char 
 37697 ;;  data            2    1[COMRAM] PTR unsigned char 
 37698 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 37699 ;;		 -> msd_cbw(31), NULL(0), 
 37700 ;;  len             1    3[COMRAM] unsigned char 
 37701 ;; Auto vars:     Size  Location     Type
 37702 ;;  ep              1    8[COMRAM] unsigned char 
 37703 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 37704 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37705 ;; Return value:  Size  Location     Type
 37706 ;;                  2    0[COMRAM] PTR void 
 37707 ;; Registers used:
 37708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37709 ;; Tracked objects:
 37710 ;;		On entry : 0/0
 37711 ;;		On exit  : 0/0
 37712 ;;		Unchanged: 0/0
 37713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37717 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37718 ;;Total ram usage:       11 bytes
 37719 ;; Hardware stack levels used:    1
 37720 ;; This function calls:
 37721 ;;		Nothing
 37722 ;; This function is called by:
 37723 ;;		_USBMSDInit
 37724 ;;		_USBCheckMSDRequest
 37725 ;;		_MSDTasks
 37726 ;;		_MSDProcessCommandMediaPresent
 37727 ;;		_MSDReadHandler
 37728 ;;		_MSDWriteHandler
 37729 ;;		_MSDTransferTerminated
 37730 ;;		_APP_DeviceCustomHIDInitialize
 37731 ;;		_APP_DeviceCustomHIDTasks
 37732 ;; This function uses a non-reentrant model
 37733 ;;
 37734                           
 37735                           	psect	text201
 37736  0040A4                     __ptext201:
 37737                           	opt stack 0
 37738  0040A4                     _USBTransferOnePacket:
 37739                           	opt stack 27
 37740                           
 37741                           ;incstack = 0
 37742                           ;USBTransferOnePacket@ep stored from wreg
 37743  0040A4  6E09               	movwf	USBTransferOnePacket@ep,c
 37744                           
 37745                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 37746  0040A6  5001               	movf	USBTransferOnePacket@dir,w,c
 37747  0040A8  B4D8               	btfsc	status,2,c
 37748  0040AA  D007               	goto	l183
 37749                           
 37750                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 37751  0040AC  5009               	movf	USBTransferOnePacket@ep,w,c
 37752  0040AE  0D02               	mullw	2
 37753  0040B0  0E6C               	movlw	low _pBDTEntryIn
 37754  0040B2  24F3               	addwf	prodl,w,c
 37755  0040B4  6ED9               	movwf	fsr2l,c
 37756  0040B6  0E00               	movlw	high _pBDTEntryIn
 37757  0040B8  D006               	goto	L41
 37758  0040BA                     l183:
 37759                           
 37760                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 37761  0040BA  5009               	movf	USBTransferOnePacket@ep,w,c
 37762  0040BC  0D02               	mullw	2
 37763  0040BE  0E72               	movlw	low _pBDTEntryOut
 37764  0040C0  24F3               	addwf	prodl,w,c
 37765  0040C2  6ED9               	movwf	fsr2l,c
 37766  0040C4  0E00               	movlw	high _pBDTEntryOut
 37767  0040C6                     L41:
 37768  0040C6  20F4               	addwfc	prodh,w,c
 37769  0040C8  6EDA               	movwf	fsr2h,c
 37770  0040CA  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 37771  0040CE  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 37772                           
 37773                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 37774  0040D2  500A               	movf	USBTransferOnePacket@handle,w,c
 37775  0040D4  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 37776  0040D6  A4D8               	btfss	status,2,c
 37777  0040D8  D005               	goto	l185
 37778                           
 37779                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 37780  0040DA  0E00               	movlw	0
 37781  0040DC  6E01               	movwf	?_USBTransferOnePacket,c
 37782  0040DE  0E00               	movlw	0
 37783  0040E0  6E02               	movwf	?_USBTransferOnePacket+1,c
 37784  0040E2  0012               	return	
 37785  0040E4                     l185:
 37786                           
 37787                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 37788  0040E4  EE20 F002          	lfsr	2,2
 37789  0040E8  500A               	movf	USBTransferOnePacket@handle,w,c
 37790  0040EA  26D9               	addwf	fsr2l,f,c
 37791  0040EC  500B               	movf	USBTransferOnePacket@handle+1,w,c
 37792  0040EE  22DA               	addwfc	fsr2h,f,c
 37793  0040F0  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 37794  0040F4  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 37795                           
 37796                           ;usb_device.c: 1030: handle->CNT = len;
 37797  0040F8  EE20 F001          	lfsr	2,1
 37798  0040FC  500A               	movf	USBTransferOnePacket@handle,w,c
 37799  0040FE  26D9               	addwf	fsr2l,f,c
 37800  004100  500B               	movf	USBTransferOnePacket@handle+1,w,c
 37801  004102  22DA               	addwfc	fsr2h,f,c
 37802  004104  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 37803                           
 37804                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 37805  004108  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37806  00410C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37807  004110  0E40               	movlw	64
 37808  004112  16DF               	andwf	indf2,f,c
 37809                           
 37810                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 37811  004114  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37812  004118  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37813  00411C  0E00               	movlw	0
 37814  00411E  86DB               	bsf	plusw2,3,c
 37815                           
 37816                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 37817  004120  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37818  004124  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37819  004128  0E00               	movlw	0
 37820  00412A  8EDB               	bsf	plusw2,7,c
 37821                           
 37822                           ;usb_device.c: 1036: if(dir != 0)
 37823  00412C  5001               	movf	USBTransferOnePacket@dir,w,c
 37824  00412E  B4D8               	btfsc	status,2,c
 37825  004130  D018               	goto	l187
 37826                           
 37827                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 37828  004132  5009               	movf	USBTransferOnePacket@ep,w,c
 37829  004134  0D02               	mullw	2
 37830  004136  0E6C               	movlw	low _pBDTEntryIn
 37831  004138  24F3               	addwf	prodl,w,c
 37832  00413A  6ED9               	movwf	fsr2l,c
 37833  00413C  0E00               	movlw	high _pBDTEntryIn
 37834  00413E  20F4               	addwfc	prodh,w,c
 37835  004140  6EDA               	movwf	fsr2h,c
 37836  004142  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 37837  004146  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 37838  00414A  0E04               	movlw	4
 37839  00414C  1805               	xorwf	??_USBTransferOnePacket,w,c
 37840  00414E  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 37841  004150  5006               	movf	??_USBTransferOnePacket+1,w,c
 37842  004152  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 37843  004154  5009               	movf	USBTransferOnePacket@ep,w,c
 37844  004156  0D02               	mullw	2
 37845  004158  0E6C               	movlw	low _pBDTEntryIn
 37846  00415A  24F3               	addwf	prodl,w,c
 37847  00415C  6ED9               	movwf	fsr2l,c
 37848  00415E  0E00               	movlw	high _pBDTEntryIn
 37849  004160  D017               	goto	L42
 37850  004162                     l187:
 37851                           
 37852                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 37853  004162  5009               	movf	USBTransferOnePacket@ep,w,c
 37854  004164  0D02               	mullw	2
 37855  004166  0E72               	movlw	low _pBDTEntryOut
 37856  004168  24F3               	addwf	prodl,w,c
 37857  00416A  6ED9               	movwf	fsr2l,c
 37858  00416C  0E00               	movlw	high _pBDTEntryOut
 37859  00416E  20F4               	addwfc	prodh,w,c
 37860  004170  6EDA               	movwf	fsr2h,c
 37861  004172  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 37862  004176  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 37863  00417A  0E04               	movlw	4
 37864  00417C  1805               	xorwf	??_USBTransferOnePacket,w,c
 37865  00417E  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 37866  004180  5006               	movf	??_USBTransferOnePacket+1,w,c
 37867  004182  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 37868  004184  5009               	movf	USBTransferOnePacket@ep,w,c
 37869  004186  0D02               	mullw	2
 37870  004188  0E72               	movlw	low _pBDTEntryOut
 37871  00418A  24F3               	addwf	prodl,w,c
 37872  00418C  6ED9               	movwf	fsr2l,c
 37873  00418E  0E00               	movlw	high _pBDTEntryOut
 37874  004190                     L42:
 37875  004190  20F4               	addwfc	prodh,w,c
 37876  004192  6EDA               	movwf	fsr2h,c
 37877  004194  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 37878  004198  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 37879                           
 37880                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 37881  00419C  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 37882  0041A0  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 37883  0041A4  0012               	return	
 37884  0041A6                     __end_of_USBTransferOnePacket:
 37885                           	opt stack 0
 37886                           tosu	equ	0xFFF
 37887                           tosh	equ	0xFFE
 37888                           tosl	equ	0xFFD
 37889                           pclath	equ	0xFFA
 37890                           tblptru	equ	0xFF8
 37891                           tblptrh	equ	0xFF7
 37892                           tblptrl	equ	0xFF6
 37893                           tablat	equ	0xFF5
 37894                           prodh	equ	0xFF4
 37895                           prodl	equ	0xFF3
 37896                           intcon	equ	0xFF2
 37897                           intcon2	equ	0xFF1
 37898                           intcon3	equ	0xFF0
 37899                           indf0	equ	0xFEF
 37900                           postinc0	equ	0xFEE
 37901                           fsr0h	equ	0xFEA
 37902                           fsr0l	equ	0xFE9
 37903                           wreg	equ	0xFE8
 37904                           indf1	equ	0xFE7
 37905                           postdec1	equ	0xFE5
 37906                           plusw1	equ	0xFE3
 37907                           fsr1h	equ	0xFE2
 37908                           fsr1l	equ	0xFE1
 37909                           indf2	equ	0xFDF
 37910                           postinc2	equ	0xFDE
 37911                           postdec2	equ	0xFDD
 37912                           plusw2	equ	0xFDB
 37913                           fsr2h	equ	0xFDA
 37914                           fsr2l	equ	0xFD9
 37915                           status	equ	0xFD8
 37916                           tosu	equ	0xFFF
 37917                           tosh	equ	0xFFE
 37918                           tosl	equ	0xFFD
 37919                           pclath	equ	0xFFA
 37920                           tblptru	equ	0xFF8
 37921                           tblptrh	equ	0xFF7
 37922                           tblptrl	equ	0xFF6
 37923                           tablat	equ	0xFF5
 37924                           prodh	equ	0xFF4
 37925                           prodl	equ	0xFF3
 37926                           intcon	equ	0xFF2
 37927                           intcon2	equ	0xFF1
 37928                           intcon3	equ	0xFF0
 37929                           indf0	equ	0xFEF
 37930                           postinc0	equ	0xFEE
 37931                           fsr0h	equ	0xFEA
 37932                           fsr0l	equ	0xFE9
 37933                           wreg	equ	0xFE8
 37934                           indf1	equ	0xFE7
 37935                           postdec1	equ	0xFE5
 37936                           plusw1	equ	0xFE3
 37937                           fsr1h	equ	0xFE2
 37938                           fsr1l	equ	0xFE1
 37939                           indf2	equ	0xFDF
 37940                           postinc2	equ	0xFDE
 37941                           postdec2	equ	0xFDD
 37942                           plusw2	equ	0xFDB
 37943                           fsr2h	equ	0xFDA
 37944                           fsr2l	equ	0xFD9
 37945                           status	equ	0xFD8
 37946                           
 37947                           	psect	text202
 37948  000000                     __ptext202:
 37949                           	opt stack 0
 37950                           tosu	equ	0xFFF
 37951                           tosh	equ	0xFFE
 37952                           tosl	equ	0xFFD
 37953                           pclath	equ	0xFFA
 37954                           tblptru	equ	0xFF8
 37955                           tblptrh	equ	0xFF7
 37956                           tblptrl	equ	0xFF6
 37957                           tablat	equ	0xFF5
 37958                           prodh	equ	0xFF4
 37959                           prodl	equ	0xFF3
 37960                           intcon	equ	0xFF2
 37961                           intcon2	equ	0xFF1
 37962                           intcon3	equ	0xFF0
 37963                           indf0	equ	0xFEF
 37964                           postinc0	equ	0xFEE
 37965                           fsr0h	equ	0xFEA
 37966                           fsr0l	equ	0xFE9
 37967                           wreg	equ	0xFE8
 37968                           indf1	equ	0xFE7
 37969                           postdec1	equ	0xFE5
 37970                           plusw1	equ	0xFE3
 37971                           fsr1h	equ	0xFE2
 37972                           fsr1l	equ	0xFE1
 37973                           indf2	equ	0xFDF
 37974                           postinc2	equ	0xFDE
 37975                           postdec2	equ	0xFDD
 37976                           plusw2	equ	0xFDB
 37977                           fsr2h	equ	0xFDA
 37978                           fsr2l	equ	0xFD9
 37979                           status	equ	0xFD8
 37980                           
 37981                           	psect	rparam
 37982  0000                     tosu	equ	0xFFF
 37983                           tosh	equ	0xFFE
 37984                           tosl	equ	0xFFD
 37985                           pclath	equ	0xFFA
 37986                           tblptru	equ	0xFF8
 37987                           tblptrh	equ	0xFF7
 37988                           tblptrl	equ	0xFF6
 37989                           tablat	equ	0xFF5
 37990                           prodh	equ	0xFF4
 37991                           prodl	equ	0xFF3
 37992                           intcon	equ	0xFF2
 37993                           intcon2	equ	0xFF1
 37994                           intcon3	equ	0xFF0
 37995                           indf0	equ	0xFEF
 37996                           postinc0	equ	0xFEE
 37997                           fsr0h	equ	0xFEA
 37998                           fsr0l	equ	0xFE9
 37999                           wreg	equ	0xFE8
 38000                           indf1	equ	0xFE7
 38001                           postdec1	equ	0xFE5
 38002                           plusw1	equ	0xFE3
 38003                           fsr1h	equ	0xFE2
 38004                           fsr1l	equ	0xFE1
 38005                           indf2	equ	0xFDF
 38006                           postinc2	equ	0xFDE
 38007                           postdec2	equ	0xFDD
 38008                           plusw2	equ	0xFDB
 38009                           fsr2h	equ	0xFDA
 38010                           fsr2l	equ	0xFD9
 38011                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    770
    Data        30
    BSS         2020
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     64     159
    BANK1           256      0     241
    BANK2           256      0     178
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), inq_resp(CODE[36]), 
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), inq_resp(CODE[36]), 
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_rename
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_copy_page_to_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _api_parse->__parse_command_long
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  835693
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0    7310
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   30866
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                           _i2c_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    5881
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0      88
                                              0 COMRAM     1     1      0
                   __spi_init_master
                      __spi_init_pps
                    __spi_init_slave
 ---------------------------------------------------------------------------------
 (4) __spi_init_slave                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __spi_init_pps                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __spi_init_master                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    5793
                                             19 COMRAM     5     5      0
                      _flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24941
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8549
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16392
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   63681
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   14817
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21428
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14409
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  102728
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   44539
                                             76 COMRAM    17    17      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   41729
                                             76 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    2992
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2634
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   16438
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5282
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143080
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82712
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  105026
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  105026
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   99862
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   50682
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   48924
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22649
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15061
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14716
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   15646
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    8250
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    7969
                                             39 COMRAM     4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  373098
                                             60 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   74319
                                             84 COMRAM     5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_read_file                              20    16      4   41269
                                             76 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   32936
                                             54 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7529
                                             39 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    2821
                                             19 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_file_details                        5     1      4   15851
                                             54 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_configuration                      10     8      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_find_file                               9     5      4    9353
                                             59 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (2) _api_parse                                            6     3      3  295466
                                             54 BANK0      6     3      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0    2697
                                             19 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (4) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_writeByte                                 9     6      3    2629
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  3     1      2  292301
                                             51 BANK0      3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (4) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_rename                                   3     1      2   38117
                                             92 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (5) _fat_rename_file                                     38    34      4   37896
                                             54 COMRAM    38    34      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (4) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_delete                                   3     1      2   67463
                                             54 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (5) _fat_delete_file                                      5     5      0   67286
                                             49 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (6) __get_first_cluster                                  10     8      2    7528
                                             39 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __delete_root                                         7     7      0   21618
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) __parse_file_create                                   3     1      2   79973
                                             71 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (5) _fat_create_file                                     53    45      8   79774
                                             59 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2012
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (6) _fat_get_empty_clusters                              12    10      2    7752
                                             39 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    8909
                                             39 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) __get_available_root_entry                            1     1      0    7660
                                             46 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (4) __parse_file_append                                   3     1      2  106298
                                             66 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (5) _fat_append_to_file                                  63    59      4  106055
                                             54 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   15474
                                             46 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    7570
                                             39 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __write_root                                          8     6      2   21884
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) __write_fat                                           8     4      4   22508
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (7) _flash_partial_write                                  9     1      8   21504
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                      _flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                      _flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (8) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                      _flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                      _flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (6) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (6) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    7883
                                             39 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __get_empty_cluster                                  10     8      2    7884
                                             39 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                  20    12      8    7391
                                             19 COMRAM    20    12      8
                      _flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __switch_mastermode                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __read_fat
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __root_is_available
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_rx
                     __switch_mastermode
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_copy_page_to_buffer
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_write_page_from_buffer
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_write_to_buffer
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_tx
                   __switch_mastermode
               _flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_rx
                     __switch_mastermode
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
             _fat_find_file
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
             __get_first_cluster
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __read_fat
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __root_is_available
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_rx
                     __switch_mastermode
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               _flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_tx_rx
                 __switch_mastermode
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
       __fill_buffer_get_status
         _flash_is_busy
           __flash_get_status
             _spi_tx_rx
               __switch_mastermode
           __flash_wakeup
             _spi_tx
               __switch_mastermode
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               _flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_tx_rx
                 __switch_mastermode
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 _flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_rx
                   __switch_mastermode
             _flash_partial_read
               _flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_tx_rx
                 __switch_mastermode
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
       _flash_is_busy
         __flash_get_status
           _spi_tx_rx
             __switch_mastermode
         __flash_wakeup
           _spi_tx
             __switch_mastermode
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     _flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx_rx
                       __switch_mastermode
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     _flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx
                       __switch_mastermode
                   __flash_write_page_from_buffer
                     _flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx
                       __switch_mastermode
                   __flash_write_to_buffer
                     _flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx_tx
                       __switch_mastermode
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_rx
                     __switch_mastermode
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   _flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           _flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_tx_rx
             __switch_mastermode
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           _flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_tx_rx
             __switch_mastermode
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               _flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_tx_rx
                 __switch_mastermode
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
         _flash_partial_read
           _flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_tx_rx
             __switch_mastermode
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           _flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_tx_rx
             __switch_mastermode
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               _flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_tx_rx
                 __switch_mastermode
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
         _flash_partial_read
           _flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_tx_rx
             __switch_mastermode
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx
               __switch_mastermode
           __flash_write_page_from_buffer
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx
               __switch_mastermode
           __flash_write_to_buffer
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_tx
               __switch_mastermode
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           _flash_partial_read
             _flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_rx
               __switch_mastermode
     _flash_init
       __flash_set_page_size
         _flash_is_busy
           __flash_get_status
             _spi_tx_rx
               __switch_mastermode
           __flash_wakeup
             _spi_tx
               __switch_mastermode
         _memcpy
         _spi_tx
           __switch_mastermode
       _spi_init
         __spi_init_master
         __spi_init_pps
         __spi_init_slave
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      B2       9       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F1       7       94.1%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      9F       5       99.4%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1      31        0.0%
DATA                 0      0     8A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jul 27 00:15:14 2018

                          __end_of_fat_read_from_file 20EE  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 003E  
              __end_of_i2c_display_send_init_sequence 7606  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 75DA  
                                 __system_timer0_init 7892  
                                                  _os 0060  
                                       _USBDeviceInit 37B2  
                                  _USBCheckHIDRequest 455C  
                __bootloader_verify_file@return_value 0056  
                                        __CFG_CP0$OFF 000000  
                                     ??__spi_init_pps 0001  
                      __root_is_available@root_sector 0029  
                                 __end_of_system_init 67E6  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4F7C  
                                                 l210 57DE  
                                                 l220 41CE  
                                                 l141 3820  
                                                 l214 5A46  
                                                 l310 5384  
                                                 l150 321A  
                                                 l143 385C  
                                                 l303 740A  
                                                 l151 3210  
                                                 l320 6A4A  
                                                 l208 57C4  
                                                 l224 4250  
                                                 l304 7408  
                                                 l152 320E  
                                                 l241 4CD8  
                                                 l233 4C34  
                                                 l161 3296  
                                                 l242 4CA2  
                                                 l330 4E62  
                                                 l322 6A94  
                                                 l235 4C3E  
                                                 l331 4E28  
                                                 l251 3C2E  
                                                 l411 45AA  
                                                 l219 4226  
                                                 l139 37F8  
                                                 l171 3326  
                                                 l163 32AC  
                                                 l155 3236  
                                                 l252 3C14  
                                                 l412 4578  
                                                 l260 44C4  
                                                 l164 32B8  
                                                 l156 3246  
                                                 l237 4C9A  
                                                 l333 4E48  
                                                 l309 538A  
                                                 l173 334A  
                                                 l165 32E0  
                                                 l157 324E  
                                                 l238 4C64  
                                                 l422 45CC  
                                                 l414 45BC  
                         __end_of_USBStdGetDscHandler 3A3A  
                                                 l262 4538  
                                                 l350 43D8  
                                                 l166 32EC  
                                                 l158 3264  
                                                 l183 40BA  
                                                 l191 3DF0  
                                                 l423 45E4  
                                                 l415 4596  
                                                 l271 3926  
                                                 l343 4436  
                                                 l175 3366  
                                                 l159 3270  
                                                 l328 4DE0  
                                                 l248 3BB8  
                                                 l424 45F0  
                                                 l360 17A8  
                                                 l272 39B4  
                                                 l352 43DE  
                                                 l344 43A8  
                                                 l168 32FE  
                                                 l185 40E4  
                                                 l329 4DE6  
                                                 l249 3B96  
                                                 l521 3F8E  
                                                 l425 4608  
                                                 l361 17AE  
                                                 l281 541A  
                                                 l353 43FC  
                                                 l610 694C  
                                                 l178 7340  
                                                 l418 4614  
                                                 l530 500C  
                                                 l274 39BC  
                                                 l282 53A8  
                                                 l354 4418  
                                                 l346 43B2  
                                                 l187 4162  
                                                 l603 6954  
                                                 l179 734E  
                                                 l371 18CE  
                                                 l363 181A  
                                                 l275 3A12  
                                                 l347 43B8  
                                                 l620 04BE  
                                                 l604 6918  
                                                 l372 18EA  
                                                 l268 3A22  
                                                 l348 43BE  
                                                 l621 04C8  
                                                 l381 19E2  
                                                 l365 1862  
                                                 l277 3A1A  
                                                 l269 3912  
                                                 l285 5430  
                                                 l349 43D2  
                                                 l710 464E  
                                                 l702 1468  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6934  
                                                 l518 3F96  
                                                 l534 5072  
                                                 l374 1950  
                                                 l286 53BA  
                                                 l703 1480  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3F0A  
                                                 l375 195C  
                                                 l367 1884  
                                                 l287 53C0  
                                                 l295 71AA  
                                                 l712 4664  
                                                 l704 1498  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6940  
                                                 l800 5E0A  
                                                 l376 19D6  
                                                 l288 53DE  
                                                 l296 71A8  
                                                 l721 46F0  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6946  
                                                 l561 1DBE  
                                                 l529 50A8  
                                                 l369 1904  
                                                 l722 46DA  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1EAA  
                                                 l562 1DA8  
                                                 l546 507A  
                                                 l810 5DFC  
                                                 l715 4694  
                                                 l651 07CC  
                                                 l571 1DDA  
                                                 l563 1D7C  
                                                 l555 1C7C  
                                                 l379 1990  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1D84  
                                                 l804 5DD8  
                                                 l661 5904  
                                                 l741 3FCA  
                                                 l733 4702  
                                                 l645 0784  
                                                 l573 1DEC  
                                                 l805 5DE0  
                                                 l750 3FFE  
                                                 l718 46A0  
                                                 l670 2B50  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1D9C  
                                                 l806 5DE8  
                                                 l751 400A  
                                                 l719 46BA  
                                                 l671 2B5A  
                                                 l575 1E0E  
                                                 l559 1C9C  
                                                 l752 401C  
                                                 l680 2C86  
                                                 l672 2B6E  
                                                 l648 07CE  
                                                 l592 3CEE  
                                                 l576 1E16  
                                                 l808 5DF2  
                                                 l753 4028  
                                                 l737 4712  
                                                 l665 2C9C  
                                                 l649 07A8  
                                                 l577 1E3A  
                                                 l754 403A  
                                                 l674 2BB8  
                                                 l666 2AF0  
                                                 l690 12CE  
                                                 l586 1E8C  
                                                 l659 58EE  
                                                 l747 407C  
                                                 l755 4070  
                                                 l675 2BE0  
                                                 l691 12DA  
                                                 l748 3FF6  
                                                 l668 2CC0  
                                                 l676 2C0E  
                                                 l684 14B0  
                                                 l692 12F8  
                                                 l596 3D86  
                                                 l764 6DD4  
                                                 l860 4DA0  
                                                 _BDT 000D00  
                                                 l677 2C20  
                                                 l669 2B44  
                                                 l693 1342  
                                                 l685 1228  
                                                 l597 3D80  
                                                 l589 1E94  
                                                 l861 4D20  
                                                 l934 54BA  
                                                 l678 2C26  
                                                 l694 131C  
                                                 l862 4D28  
                                                 l679 2C3A  
                                                 l687 14D4  
                                                 l695 1384  
                                                 l599 3D8A  
                                                 l767 6E0A  
                                                 l863 4D30  
                                                 l928 5450  
                                                 l696 1380  
                                                 l688 12C8  
                                                 l880 6BA6  
                                                 l864 4D38  
                                                 l856 4CFA  
                                                 l865 4D40  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1398  
                                                 l970 795A  
                                                 l858 4D6C  
                                                 l866 4D48  
                                                 l699 1400  
                                                 l891 6E70  
                                                 l875 6B78  
                                                 l859 4D18  
                                                 l868 4D5C  
                                                 l878 6B9E  
                                                 l895 6E82  
                                                 l888 6EA0  
                                                 l897 6E8E  
                                                 l889 6E66  
                                                 _LBA 0080  
                                                 _LUN 01D4  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0031  
                                _i2c_digipot_reset_on 780A  
                            __size_of__display_failed 02F6  
                                         _start_line1 8D88  
                                         _start_line2 8D77  
                                         _start_line3 8CF6  
                                         _start_line4 8E62  
                                  api_prepare@command 0059  
                                          _USBSuspend 757C  
                                  _internalFlash_read 7416  
                              __end_of_display_update 6640  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 31EE  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 00B7  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 002A  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 0055  
                            fat_create_file@root_slot 00C2  
                         __flash_write_to_buffer@data 0016  
                                                l1101 7A7E  
                                                l2000 5586  
                                                l1113 7A12  
                                                l1042 77DC  
                                                l1043 77CA  
                                                l1107 7A26  
                                                l1035 73C8  
                                                l1211 6302  
                                                l1132 7114  
                                                l1124 7670  
                                                l1036 73D2  
                                                l1133 70F8  
                                                l1125 7662  
                                                l1221 62F2  
                                                l2030 634E  
                                                l1126 7684  
                                                l1214 62C0  
                                                l1127 7666  
                                                l1128 766A  
                                                l1232 4982  
                                                l1240 493A  
                                                l2033 7616  
                                                l1161 6DA8  
                                                l1241 4958  
                                                l1233 48DE  
                                                l1138 5D86  
                                                l2050 00B4  
                                                l1162 6D8C  
                                                l1218 62DA  
                                                l1242 4974  
                                                l1139 5D6A  
                                                l2035 7620  
                                                l2051 0202  
                                                l2131 7004  
                                                l1411 4B7A  
                                                l2028 633E  
                                                l2060 0426  
                                                l2052 0188  
                                                l2132 700A  
                                                l1420 4BCC  
                                                l1412 4B50  
                                                l1236 48F2  
                                                l2141 48D0  
                                                l2037 762E  
                                                l1501 11AC  
                                                l1421 4BB8  
                                                l1237 4902  
                                                l1086 7A86  
                                                l2142 480C  
                                                l2062 0458  
                                                l2054 033E  
                                                l1430 3694  
                                                l1422 4BBE  
                                                l1414 4B56  
                                                l1238 4916  
                                                l1095 7A1A  
                                                l2143 4862  
                                                l2055 0310  
                                                l2135 7010  
                                                l3103 6ED4  
                                                l1511 10FC  
                                                l1503 105C  
                                                l1431 3666  
                                                l1423 4BC4  
                                                l1415 4B5C  
                                                l2400 4328  
                                                l2064 048A  
                                                l2048 003E  
                                                l2160 1588  
                                                l2128 701C  
                                                l3104 6ECC  
                                                l3032 6804  
                                                l1512 10CE  
                                                l1504 102E  
                                                l1440 3762  
                                                l1424 4BF6  
                                                l1416 4B62  
                                                l2153 575A  
                                                l2145 48B8  
                                                l2057 039C  
                                                l2161 15E2  
                                                l2129 6FFE  
                                                l3113 7206  
                                                l1361 70AA  
                                                l3033 67F8  
                                                l1433 36E8  
                                                l1425 4C00  
                                                l1417 4B68  
                                                l2402 4336  
                                                l2146 48BA  
                                                l2058 03C0  
                                                l2162 165E  
                                                l3114 71FE  
                                                l1530 2DA2  
                                                l1434 36BA  
                                                l1418 4B6E  
                                                l2411 4A92  
                                                l2403 4348  
                                                l2147 48C4  
                                                l3107 6EF4  
                                                l1371 4EFC  
                                                l1515 114C  
                                                l1507 10AC  
                                                l1451 29EC  
                                                l1531 2D74  
                                                l1419 4B74  
                                                l1612 616C  
                                                l1604 6CC6  
                                                l3300 6862  
                                                l2404 435A  
                                                l2180 0F18  
                                                l2164 16A0  
                                                l3108 6EFE  
                                                l1540 34F0  
                                                l3036 682C  
                                                l1516 111E  
                                                l1508 107E  
                                                l1452 29BE  
                                                l1524 2CFA  
                                                l1436 373C  
                                                l1613 6176  
                                                l1605 6CD0  
                                                l2413 4B08  
                                                l2405 4368  
                                                l2181 0D22  
                                                l2165 16C4  
                                                l3117 721E  
                                                l1373 4F20  
                                                l3037 683A  
                                                l1381 09D8  
                                                l1445 2944  
                                                l1533 2E56  
                                                l1525 2CCC  
                                                l1437 370E  
                                                l2502 5F9E  
                                                l2414 4AAC  
                                                l2430 5292  
                                                l2190 0EC8  
                                                l2174 0BE2  
                                                l2166 16F2  
                                                l3118 7228  
                                                l1366 4EB2  
                                                l1542 3572  
                                                l1518 11E0  
                                                l1454 2A78  
                                                l1446 2916  
                                                l1534 2E28  
                                                l1470 3AE8  
                                                l1615 61AE  
                                                l1631 6FBE  
                                                l2415 4B3E  
                                                l2431 529E  
                                                l2175 0C5E  
                                                l2167 174A  
                                                l1359 709E  
                                                l1543 3544  
                                                l1383 0A84  
                                                l1519 11B2  
                                                l1455 2A40  
                                                l1527 2D4E  
                                                l1439 3790  
                                                l1463 3A6E  
                                                l2600 6B4A  
                                                l1640 6C78  
                                                l1632 6FC8  
                                                l1800 51D2  
                                                l2416 4AC4  
                                                l2408 4A8A  
                                                l2272 6020  
                                                l2192 0EE4  
                                                l2184 0D5E  
                                                l2176 0CB8  
                                                l1448 2998  
                                                l1528 2D20  
                                                l1464 3A40  
                                                l1617 61CC  
                                                l2417 4AE0  
                                                l2425 524E  
                                                l1713 7500  
                                                l3305 764C  
                                                l2177 0D10  
                                                l2169 176E  
                                                l1369 4ED8  
                                                l1481 3474  
                                                l1545 35C6  
                                                l1385 0B30  
                                                l1377 0882  
                                                l1457 2ACC  
                                                l1449 296A  
                                                l2450 569A  
                                                l3306 763C  
                                                l2274 602C  
                                                l2186 0E0C  
                                                l1482 343C  
                                                l1546 3598  
                                                l1490 0F64  
                                                l1458 2A9E  
                                                l1466 3AC2  
                                                l2427 5288  
                                                l2187 0ECE  
                                                l1475 33A2  
                                                l1539 351E  
                                                l1379 092C  
                                                l1491 0F36  
                                                l1467 3A94  
                                                l2460 6066  
                                                l2188 0E16  
                                                l1484 34C8  
                                                l1476 3374  
                                                l1548 363E  
                                                l1900 1A48  
                          USBConfigureEndpoint@handle 0007  
                                                l3317 5162  
                                                l2437 28D8  
                                                l2429 52C6  
                                                l1717 74CE  
                                                l2189 0E8E  
                                                l1485 349A  
                                                l1549 3610  
                                                l1493 0FB8  
                                                l1469 3B16  
                                                l1901 1A58  
                                                l2606 5C80  
                                                l1750 62BA  
                                                l3318 50BC  
                                                l1806 5226  
                                                l2470 5B6A  
                                                l2462 606C  
                                                l2438 2906  
                                                l1478 33F6  
                                                l1494 0F8A  
                                                l1910 1AAC  
                                                l1902 1A68  
                                                l2615 59A0  
                                                l1639 6C6E  
                                                l3319 515A  
                                                l1815 2F12  
                                                l1823 66B4  
                                                l2471 5B12  
                                                l2463 6088  
                                                l2439 28DE  
                                                l2455 24C6  
                                                l2279 7712  
                                                l1479 33C8  
                                                l1911 1AB0  
                                                l1903 1A78  
                                                l1648 788E  
                                                l1840 2144  
                                                l1816 304A  
                                                l2472 5B98  
                                                l2464 60A4  
                                                l2288 744A  
                                                l1496 118A  
                                                l1920 1AD4  
                                                l1912 1AB4  
                                                l1904 1A88  
                                                l2609 5CB4  
                                                l1817 2FEC  
                                                l2473 5B20  
                                                l2465 60AA  
                                                l2393 4312  
                                                l1921 1AD8  
                                                l1913 1AB8  
                                                l1905 1A98  
                                                l2618 59DC  
                                                l1594 6E50  
                                                l1842 22C0  
                                                l1818 300E  
                                                l2490 65A6  
                                                l1826 66CE  
                                                l2474 5B2E  
                                                l2466 60B0  
                                                l2394 42D0  
                                                l1498 100C  
                                                l1930 1AFC  
                                                l1922 1ADC  
                                                l1914 1ABC  
                                                l1906 1A9C  
                                                l1586 6116  
                                                l1595 6E0E  
                                                l1843 21E2  
                                                l1771 5D30  
                                                l1819 3044  
                                                l1851 5BEC  
                                                l2475 5B3C  
                                                l2459 60B6  
                                                l3291 5598  
                                                l2651 5F0E  
                                                l1499 0FDE  
                                                l1931 1B00  
                                                l1923 1AE0  
                                                l1915 1AC0  
                                                l1907 1AA0  
                                                l1587 6142  
                                                l1764 640A  
                                                l1748 6254  
                                                l1844 2238  
                                                l1836 20FC  
                                                l1756 77F2  
                                                l1828 670C  
                                                l2484 6F44  
                                                l2476 5B4A  
                                                l2396 42E6  
                                                l2652 5F02  
                                                l1940 1B24  
                                                l1932 1B04  
                                                l1924 1AE4  
                                                l1916 1AC4  
                                                l1908 1AA4  
                                                l1597 6E36  
                                                l1845 227E  
                                                l2477 5B58  
                                                l1861 20D6  
                                                l2397 42FC  
                                                l3293 55D2  
                                                l1941 1B28  
                                                l1933 1B08  
                                                l1925 1AE8  
                                                l1917 1AC8  
                                                l1909 1AA8  
                                                l1758 7802  
                                                l1862 1FC4  
                                                l3294 5610  
                                                l1950 6D14  
                                                l1942 1B2C  
                                                l1934 1B0C  
                                                l1926 1AEC  
                                                l1918 1ACC  
                                                l2590 7320  
                                                l1839 216A  
                                                l1863 1FEC  
                                                l2399 4376  
                                                l3287 71D2  
                                                l2655 5F42  
                                                l1951 6D18  
                                                l1935 1B10  
                                                l1927 1AF0  
                                                l1919 1AD0  
                                                l1871 49B2  
                                                l2591 730C  
                                                l1768 5CCE  
                                                l2496 667C  
                                                l1864 2094  
                                                l1856 1F16  
                                                l2656 5F50  
                                                l1952 6D1C  
                                                l1936 1B14  
                                                l1928 1AF4  
                                                l1880 49D6  
                                                l1872 49B6  
                                                l1849 5BB8  
                                                l1953 6D20  
                                                l1937 1B18  
                                                l1929 1AF8  
                                                l1881 49DA  
                                                l1873 49BA  
                                                l1961 3096  
                                                l2593 7316  
                                                l1858 1F4E  
                                                l1946 6D28  
                                                l1954 6D24  
                                                l1938 1B1C  
                                                l1882 49DE  
                                                l1874 49BE  
                                                l1970 311A  
                                                l3299 68A0  
                                                l1859 1F28  
                                                l1947 6D0C  
                                                l1939 1B20  
                                                l1883 49E2  
                                                l1875 49C2  
                                                l1971 311E  
                                                l1963 30CE  
                                                l1892 1B30  
                                                l1868 49FA  
                                                l1884 49E6  
                                                l1876 49C6  
                                                l1980 3142  
                                                l1972 3122  
                                                l1949 6D10  
                                                l1893 1A0A  
                                                l1885 49EA  
                                                l1877 49CA  
                                                l1869 49AE  
                                                l1965 315E  
                                                l1981 3146  
                                                l1973 3126  
                                                l1990 7700  
                                                l1886 49EE  
                                                l1878 49CE  
                                                l1982 314A  
                                                l1974 312A  
                                                l1966 310A  
                                                l1895 1A0E  
                                                l1887 49F2  
                                                l1879 49D2  
                                                l1983 314E  
                                                l1975 312E  
                                                l1967 310E  
                                                l1959 3088  
                                                l1896 1A12  
                                                l1888 49F6  
                                                l1984 3152  
                                                l1976 3132  
                                                l1968 3112  
                                                l1897 1A16  
                                                l1985 3156  
                                                l1977 3136  
                                                l1969 3116  
                                                l1898 1A28  
                                                l1986 315A  
                                                l1978 313A  
                                                l1899 1A38  
                                                l1987 31EA  
                                                l1979 313E  
                                                l1996 5536  
                                                l9401 4590  
                                                l9519 46A0  
                                                l9815 6862  
                                                l9591 6E8E  
                                                l9735 763C  
                                                l9587 6E70  
                                                l9679 50BC  
                                                l9783 4C3E  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                l9893 2C96  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CE2  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D77  
                                      _bootloader_run 6FFA  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 00A0  
                                                u6055 6182  
                                                u7015 2B16  
                                                u6145 6C84  
                                                u6234 3F80  
                                                u6218 3F4E  
                                                u6235 3F7A  
                                                u6219 3F62  
                                                u6260 3FB6  
                                                u6165 61E8  
                                                u7125 124E  
                                                u7320 6BB4  
                                                u7208 134E  
                                                u8040 1976  
                                                u6345 6CDC  
                                                u7209 1362  
                                                u7330 6BC0  
                                                u7250 143A  
                                                u8210 074C  
                                                u9020 5F9A  
                                                u7340 6BCC  
                                                u6620 46EC  
                                                u7068 2B92  
                                                u7260 143C  
                                                u7148 1282  
                                                u8220 075E  
                                                u8140 062C  
                                                u8108 052C  
                                                u6460 5054  
                                                u7069 2BA6  
                                                u7149 1296  
                                                u8109 0540  
                                                u7430 7806  
                                                u8310 2EE2  
                                                u7350 6BD8  
                                                u8118 055C  
                                                u6198 3F2A  
                                                u8119 0570  
                                                u6199 3F3C  
                               ??_USBCtrlTrfTxService 0001  
                                                u7600 5232  
                                                u8320 2F10  
                                                u7360 6BE4  
                                                u7328 6BB6  
                                                u6640 46FE  
                                                u9040 5F12  
                                                u6810 5114  
                                                u7610 5238  
                                                u7370 6BEE  
                                                u7338 6BC2  
                                                u6730 74FC  
                                                u8250 07D6  
                                                u7515 6C2A  
                                                u8315 2ED8  
                                                u7460 6410  
                                                u6820 514A  
                                                u7348 6BCE  
                                                u6660 470E  
                                                u6740 74CA  
                                                u9204 3CD2  
                                                u9300 09EC  
                                                u7525 6AC2  
                                                u9205 3CCC  
                                                u7358 6BDA  
                                                u6590 46D6  
                                                u7278 1442  
                                                u8158 064C  
                                                u9214 3D04  
                                                u9070 6808  
                                                u9310 0A98  
                                                u6815 510E  
                                                u7535 673E  
                                                u7279 1456  
                                                u8159 0660  
                                                u9215 3CFE  
                                                _UCFG 000F39  
                                                u7376 6BF0  
                                                u7368 6BE6  
                                                u7800 39AE  
                                                u6817 5104  
                                                u8450 5BE0  
                                                u6850 6ED8  
                                                u6827 5140  
                                                u6780 62B6  
                                                u7820 3A06  
                                                u8700 4EC4  
                                                u9500 2616  
                                                u9420 558C  
                                                _UEP0 000F26  
                                                u6765 627A  
                                                u7645 6374  
                                                _UEP1 000F27  
                                                u6790 50DC  
                                                u8470 5C1C  
                                                u9254 3D56  
                                                u9238 3D26  
                                                u9190 3CBC  
                                                u6950 4C8C  
                                                u7750 44F0  
                                                u8710 4EE8  
                                    ?_fat_create_file 003C  
                                                u9255 3D50  
                                                u9239 3D38  
                                                u7807 39A4  
                                                u6880 720A  
                                                u8720 4F0C  
                                                u9600 270C  
                                                u9520 2644  
                                                u9440 2554  
                                                u9178 3C8A  
                                                u6970 4CCA  
                                                u9290 0940  
                                                u9179 3C9E  
                                                u7827 39FC  
                                                _UEIE 000F37  
                                                u9700 4832  
                                                u9620 00A2  
                                                u9540 2674  
                                                u9460 2598  
                                                u6797 50D2  
                                                u8645 7280  
                                                u6957 4C82  
                                                u8821 30A0  
                                                u6990 6882  
                                                u7790 397E  
                                                u9390 553C  
                                                u8735 643C  
                                                u9720 488E  
                                                u9560 26AE  
                                                u9480 25DC  
                                                u6977 4CC0  
                                                u8930 6F40  
                                                u8690 4E9E  
                                                u9900 52C4  
                                                u9820 6046  
                                                u9580 26DC  
                                                u6997 6878  
                                                u7797 3974  
                                                u8960 65A2  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8865 649A  
                                                u9860 24B6  
                                                u8885 75BA  
                                                u8990 6678  
                                                u9950 3814  
                                                u9775 78F0  
                                                u9785 745A  
                                                u9795 5FF2  
                                                u9980 38B8  
                               _i2c_digipot_reset_off 782C  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6978  
              __end_of__fill_buffer_get_configuration 58B0  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5812  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0094  
                                                _main 4CE0  
                                                _itoa 71AE  
                          __end_of_fat_append_to_file 230E  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4C14  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                        spi_init@mode 0001  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5590  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 0044  
                             __bootloader_verify_file 14DA  
                           _ExternalFlash_MediaDetect 7AB6  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 79DC  
                               _display_get_character 768A  
                                ??_USBCheckHIDRequest 0001  
                          __end_of__switch_mastermode 7AC6  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D54  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 447A  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 0BC8  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 003E  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 004A  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 008A  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 34EA  
                                      _hex_file_entry 01B8  
                              _bootloader_get_entries 7A5E  
                                   ??__spi_init_slave 0001  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 754A  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0086  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 677E  
                                               l10025 77EA  
                                               l10045 63AE  
                                               l10143 5188  
                                               l10307 44BC  
                                               l10149 519C  
                                               l11141 1F28  
                                               l10095 5D30  
                                               l10185 5238  
                                               l10097 5D34  
                                               l12041 60E0  
                                               l12131 2570  
                                               l12221 26E4  
                                               l12117 252C  
                                               l12321 4862  
                                               l12209 26B6  
                                               l12145 25B4  
                                               l10539 05FC  
                                               l12219 26DC  
                                               l12171 261E  
                              ?_i2c_digipot_backlight 0001  
                                               l11533 30CE  
                                               l11525 3096  
                                               l12181 2644  
                                               l13143 70A2  
                                               l11519 3088  
                                               l12183 264C  
                                               l12159 25F8  
                                               l12079 5508  
                                               l10729 300E  
                                               l10817 5BB0  
                                               l13137 7096  
                                               l11641 7700  
                                               l11625 315E  
                                               l12097 5558  
                                               l10771 2144  
                                               l10829 5BE4  
                                               l12541 5296  
                                               l12197 2690  
                             ?__fill_buffer_find_file 003C  
                                               l12467 5692  
                                               l12395 6024  
                                               l12389 6018  
                                               l13461 1506  
                                               l12727 3854  
                                               l13711 32F6  
                                               l12837 1C94  
                                               l13585 0E8E  
                                               l11985 0882  
                                               l12699 37F0  
                                               l14387 1B48  
                                               l14397 5E22  
                                               l14389 1C60  
                                               l14399 5E56  
                                        spi_tx@length 0003  
                                               l12995 4ADA  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 5C2C  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5F62  
                                               u10100 1C90  
                                               ?_utoa 0008  
                                               u10120 1CC4  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10305 6F66  
                                               u11210 336A  
                                               u11300 5468  
                                               u11320 547C  
                                               u10440 70D6  
                                               u11400 4926  
                                               u10290 1E6E  
                                               u10371 75E4  
                                               u11430 496E  
                                               u10800 1558  
                                     __end_of___llmod 684C  
                              __end_of_USBDeviceTasks 336E  
                                               u11807 6E3A  
                                               u11817 6E44  
                                               u10890 0C2E  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11787 77D0  
                                               u11797 6E28  
                                     __end_of___lwdiv 6F08  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 7232  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00FA  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6A9A  
                                     ??_flash_is_busy 0012  
                                    __end_of_MSDTasks 1EC8  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 002E  
                                  _USBCheckMSDRequest 4FF8  
                     __end_of_internalFlash_getBuffer 7A0E  
                     __end_of_USBCtrlEPAllowDataStage 5812  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 7048  
                       __end_of_MSDTransferTerminated 6E0C  
                 i2c_display_send_init_sequence@F6765 01E8  
                                        _gblCBWLength 00A4  
                          __end_of__parse_file_delete 6F5A  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 5FE4  
                          __end_of__parse_file_create 65D6  
                              __end_of_ResetSenseData 69DA  
                            __get_empty_cluster@value 002E  
                          __end_of__parse_file_modify 7AC2  
                          __end_of__parse_file_rename 66AA  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 00F1  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 004D  
                                               pclath 000FFA  
                                     __end_of_ui_init 7976  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A8  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 7480  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 517C  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 004D  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7752  
             __fill_buffer_get_file_details@outBuffer 0039  
                                      _MSDReadHandler 2AEE  
                                   __delete_root@slot 002F  
                             __CFG_DSWDTOSC$INTOSCREF 000000  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 00C3  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 5E5C  
                       fat_read_from_file@file_number 00C0  
                                   ?__spi_init_master 0001  
                           __end_of__flash_get_status 757C  
                        fat_get_file_information@data 002F  
               __end_of_ExternalFlash_MediaInitialize 7922  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7908  
                                         _system_init 677E  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 015E  
                                        __end_of_main 4DA8  
                                        __end_of_itoa 71F0  
                       __end_of_system_encoder_enable 79BC  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 6DB6  
                                        __end_of_utoa 5634  
                                __end_of__normal_mode 6BAA  
                                    _timer_pseudo_isr 73A6  
                            __parse_command_short@cmd 0014  
                                  ??__spi_init_master 0001  
                                    __end_of_i2c_init 7A04  
                            __end_of__i2c_acknowledge 7A2C  
                      __end_of__fill_buffer_find_file 56D6  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 641A  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0014  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 793A  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                api_prepare@outBuffer 0057  
                                              ??_main 0060  
                                    __end_of__i2c_get 7A22  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0074  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00EB  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 6332  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7AB6  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7AB2  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00F2  
                               ??__bootloader_program 004D  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                _i2c_eeprom_writeByte 7274  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 77C2  
                              __flash_write_to_buffer 6FAA  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 2524  
                                _start_from_byte_next 009C  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 002F  
                                          __i2c_start 7A84  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 70DA  
                           fat_read_from_file@cluster 00E1  
                                      __CFG_WDTEN$OFF 000000  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 004D  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0014  
                                    __end_of__get_fat 6D60  
                                    __end_of__get_fbr 1C70  
                                    __end_of__get_mbr 4A7A  
                                              _OSCCON 000FD3  
                                              _TBLPTR 000FF6  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2CC6  
                                 _flash_pages_written 0160  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00C0  
            __fill_buffer_get_bootloader_details@cntr 000B  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 56D6  
                                    __read_fat@offset 002C  
                                    __end_of_fat_init 79CC  
                   __bootloader_program@page_to_write 00FC  
                                   _shortPacketStatus 00B6  
                   fat_append_to_file@number_of_bytes 0037  
                          __get_empty_cluster@cluster 0030  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6062  
                        __end_of__flash_set_page_size 6158  
                                     _hexCharsToUint8 78D0  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 0018  
                                              _gblCBW 0100  
                                   _fat_get_file_size 641A  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_2821 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0064  
                                          _SoftDetach 00A3  
                                           ??___lwmod 0005  
                                              _buffer 02B2  
                                   _USBEnableEndpoint 7330  
                       __bootloader_program@address32 00F5  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 684C  
                                  ?_fat_get_file_size 0028  
                                              _memset 7632  
                                              clear_0 5E96  
                                              clear_1 5EAA  
                                              clear_2 5EBC  
                                              clear_3 5EC8  
                                              clear_4 5ED4  
                           _ExternalFlash_SectorWrite 74B4  
                                   api_parse@inBuffer 00F4  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 48DC  
                                              _spi_tx 6AF6  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 61D0  
                                    ?_fat_rename_file 0037  
                          __parse_command_long@length 00F3  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 765E  
                               __end_of_fat_find_file 523C  
                         fat_get_empty_clusters@value 002E  
                                 ??_fat_get_file_size 002C  
                              _fat_get_empty_clusters 5CBC  
                       __size_of__parse_command_short 007C  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8CCC  
                                 __end_of__i2c_open_1 793A  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6A3A  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 69DA  
                                              tblptru 000FF8  
                                    __end_of_spi_init 7330  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0014  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0026  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 62BE  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                               __end_of_ui_get_status 7A9A  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00B5  
                          ??_APP_DeviceCustomHIDTasks 00FA  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 6E62  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00E5  
                                          __accesstop 0060  
                             __end_of__initialization 5EDA  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7A18  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00EB  
                         __end_of__parse_command_long 5B9C  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 648C  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 001C  
                                    _flash_page_write 7048  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 736C  
                            _bootloader_get_file_size 799A  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7AC6  
                                        __pidataBANK1 78B2  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7A5E  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7A54  
                           __get_available_root_entry 77E6  
                                 fat_rename_file@cntr 005C  
                                 fat_rename_file@name 0037  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 003C  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00BA  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 1784  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4E70  
                                 _userInterfaceStatus 009F  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3F9E  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 768A  
                       __size_of__display_programming 01D6  
                             __end_of_system_delay_ms 77E6  
                                  __size_of_api_parse 00CE  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0084  
                      __end_of_failed_line3_startCode 8D1D  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 002A  
                                  _fat_read_from_file 1EC8  
                          fat_delete_file@file_number 0036  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D42  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 001A  
                              flash_partial_read@page 0014  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00AA  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 6EB6  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 5DD6  
                                   __end_of__i2c_send 7A94  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 539C  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 7A84  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0037  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                       fat_append_to_file@fat_cluster 00C6  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 3D90  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                                     __spi_init_slave 7AC2  
                    __fill_buffer_read_file@outBuffer 004F  
                        __end_of__sector_from_cluster 79F8  
                                    _mediaInformation 01CF  
                             __end_of_hexCharsToUint8 78EC  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0034  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5590  
                     ??__fill_buffer_get_file_details 003B  
                                       __flash_wakeup 6E0C  
                            __fill_buffer_get_display 523C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 42A6  
               __end_of_APP_DeviceCustomHIDInitialize 74B4  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 7480  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4802  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2524  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 0041  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 20EE  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 0036  
                                    ??_display_update 0011  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 7922  
                                    _USBCtrlEPService 52F0  
                                             ?_ui_run 0001  
                                          _ep_data_in 015B  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00CA  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 34EA  
                    __sector_from_cluster@fat_cluster 0001  
                                  __switch_mastermode 7AC4  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3C7E  
                                  _USBCheckStdRequest 4398  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                               __end_of__spi_init_pps 76DC  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0037  
                              fat_append_to_file@data 0039  
                                          _flash_init 79DC  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4CE0  
                                   __end_of__get_data 7704  
                                   __end_of__get_date 7A7C  
                                 _USBStdSetCfgHandler 447A  
                              fat_append_to_file@root 00D1  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 7A72  
                                   __end_of__get_root 31EE  
                                  __size_of_spi_tx_rx 0098  
                                  __size_of_spi_tx_tx 0090  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                          _done_line3 8DA9  
                                          _done_line4 8D99  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7950  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                                 ?__switch_mastermode 0001  
                              _total_hex_file_entries 0162  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 60DE  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 73DE  
                                  __get_first_cluster 6714  
                                        __normal_mode 6B52  
                          __end_of_APP_DeviceMSDTasks 7964  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 716A  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0055  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 61D0  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 6158  
                                          __write_fat 72B4  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                   __read_fat@cluster 0028  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 7A68  
                              fat_find_file@extension 002A  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 4B48  
                                 ?__get_first_cluster 0028  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3C7E  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 003B  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 6F08  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 5F62  
                                             __Lparam 0000  
                                  __parse_file_create 656A  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 40A4  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                        ?_system_init 0001  
                                  __parse_file_modify 7ABE  
                                ??__switch_mastermode 0001  
                                  __parse_file_rename 6640  
                          ??_fat_get_file_information 0031  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 648C  
                                          _last_error 009D  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 5EE0  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 67E6  
                                             ___lwdiv 6EB6  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 71F0  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0037  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 0043  
                                 ?__parse_file_create 0048  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 73A6  
                                             __pcinit 5E5C  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 4CE0  
                                             __ptext1 48DC  
                                     __display_failed 0F30  
                                             __ptext2 79AC  
                                             __ptext3 75DA  
                                             __ptext4 780A  
                                             __ptext5 782C  
                                             __ptext6 772C  
                                             __ptext7 62BE  
                                             __ptext8 73A6  
                                 ?__parse_file_modify 0001  
                                             __ptext9 677E  
                                             _inPipes 0066  
                                 ?__parse_file_rename 005D  
                                     __size_of_ui_run 00D0  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 005C  
                         _USBDeferOUTDataStagePackets 00AB  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 78B2  
                                ??__get_first_cluster 002A  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 3F9E  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 79CC  
                                             _msd_cbw 000D40  
                                     __display_verify 3A3A  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7A0E  
                           __size_of__spi_init_master 0012  
                                             _ui_init 7964  
                             __end_of__spi_init_slave 7AC4  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7892  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 63A6  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                        fat_get_file_size@file_number 0035  
                                             _strncmp 50BA  
                                 _flash_partial_write 68B2  
                                end_of_initialization 5EDA  
                                ??__parse_file_delete 0039  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 6DB6  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2910  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2722  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 0045  
                                ??__parse_file_create 004A  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0096  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 3D90  
                                             itoa@buf 0011  
                                ??__parse_file_rename 005F  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 0034  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0028  
                        fat_get_empty_clusters@offset 002C  
                              _internalFlash_readPage 7232  
                            ?_USBStdFeatureReqHandler 0001  
                            fat_append_to_file@length 00CB  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00C8  
           __fill_buffer_get_file_details@file_number 003B  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00BE  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 75AC  
                        __end_of__parse_file_truncate 7ABE  
                             _USBCtrlEPAllowDataStage 5774  
                                   __end_of_spi_tx_rx 59E4  
                                   __end_of_spi_tx_tx 5CBC  
               __end_of__fill_buffer_get_file_details 656A  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 64FC  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7A36  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 7A2C  
                                          ??_spi_init 0001  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 41A6  
                                             utoa@val 000A  
                                           _MSD_State 00A9  
                         __end_of__bootloader_program 0F30  
                               _system_encoder_enable 79AC  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 0059  
                          _USBStatusStageEnabledFlag1 00AE  
                          _USBStatusStageEnabledFlag2 00AD  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0028  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 002A  
                      __end_of__flash_write_to_buffer 6FFA  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 79EA  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00C4  
                                   ??_fat_delete_file 0032  
                              fat_create_file@cluster 00C5  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 0032  
                     __fill_buffer_find_file@inBuffer 003C  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00B1  
                       fat_get_empty_clusters@maximum 0028  
                            __end_of_flash_page_write 7092  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02B2  
                                    ??_MSDReadHandler 0036  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 6D60  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00BC  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CCD  
                                       _checked_line3 8E73  
                                       _checked_line4 8D66  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                        __end_of_USBTransferOnePacket 41A6  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 60DE  
               __end_of_internalFlash_pageFromAddress 7908  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 78EC  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 6248  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1226  
                       __get_empty_cluster@fat_sector 002A  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 5A78  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00ED  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00CC  
                               __end_of_USBDeviceInit 3900  
               __end_of_USBIncrement1msInternalTimers 7870  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 784E  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 5D4A  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3B66  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 3E98  
                                 _i2c_eeprom_readByte 6F5A  
                                   ??_fat_create_file 0044  
                 __bootloader_program@start_from_byte 00F9  
                  __fill_buffer_read_file@data_length 00EF  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CE2  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 68B2  
                                     _MSDRetryAttempt 00A5  
                                      __end_of_memset 765E  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00B3  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 49AC  
                                      __end_of_spi_tx 6B52  
               __get_available_root_entry@file_number 002F  
                                 __end_of__ui_encoder 6332  
                           __flash_set_page_size@size 0018  
                                 start_initialization 5E5C  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 4398  
                   __end_of__get_available_root_entry 780A  
                            ?__bootloader_verify_file 0001  
                                    ?__spi_init_slave 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0090  
                                     _USBMSDOutHandle 0090  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5A78  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A08  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 003C  
                                       _MSDHostNoData 00A2  
                                      _hexCharToUint8 7606  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0028  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 4FF8  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 754A  
                        __end_of__display_programming 2E9C  
                fat_get_empty_clusters@empty_clusters 0030  
                            __end_of_USBCtrlEPService 539C  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 736C  
                                           __i2c_read 5D4A  
                                           __i2c_send 7A8C  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7A7C  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0040  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7AB2  
                       __end_of_failed_line3_checksum 8E38  
                       __root_is_available@first_byte 002E  
                              _pBDTEntryEP0OutCurrent 0098  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 63A6  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 000E  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D30  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0078  
                                      __get_date@date 0003  
                             flash_partial_read@start 0016  
                                 _USBStdGetDscHandler 3900  
                              ?_system_encoder_enable 0001  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A6  
                          fat_get_file_size@file_size 002F  
                                         __pdataBANK0 00FE  
                                         __pdataBANK1 01D4  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 0068  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 0092  
                       __end_of_i2c_digipot_backlight 7752  
                                        ?__i2c_open_1 0001  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 7A8C  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0037  
                                  __end_of__i2c_write 7122  
                           __root_is_available@offset 002B  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00BD  
                            ??__fill_buffer_read_file 0051  
                      __end_of_USBStdGetStatusHandler 5446  
                         api_parse@receivedDataLength 00F6  
                   __end_of__bootloader_check_address 48DC  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 75DA  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 75AC  
                          fat_append_to_file@position 00CD  
                         fat_create_file@next_cluster 00BE  
                                    __spi_init_master 7976  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0268  
                                     _flash_page_read 7778  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00BE  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 4720  
             __bootloader_program@address_within_page 00EF  
                              __end_of_hexCharToUint8 7632  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 64FC  
                                __parse_file_truncate 7ABA  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 76DC  
                                           __get_date 7A72  
                    __bootloader_program@return_value 00F1  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0032  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 7A68  
                                           __get_root 3058  
                                 __end_of__write_root 6C5A  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7416  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 77C2  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 716A  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 003B  
                                           __read_fat 7122  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D42  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 7518  
                __end_of_bootloader_get_total_entries 7A40  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7A36  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 54EC  
                                 flash_is_busy@status 0012  
                                   fat_find_file@name 0028  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 002C  
                                   fat_find_file@slot 0037  
                                           _api_parse 4A7A  
                           fat_create_file@root_entry 00C7  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4720  
                                  _APP_DeviceMSDTasks 7950  
                                       __pmediumconst 8CCC  
                                 fat_find_file@offset 003A  
                                           __ptext100 6A3A  
                                           __ptext101 3B66  
                                           __ptext110 1226  
                                           __ptext102 4F34  
                                           __ptext111 7AB2  
                                           __ptext103 4DA8  
                                           __ptext200 7AC4  
                                           __ptext120 7778  
                                           __ptext112 74B4  
                                           __ptext104 4C14  
                                           __ptext201 40A4  
                                           __ptext121 58B0  
                                           __ptext113 7048  
                                           __ptext105 7950  
                                           __ptext202 0000  
                                           __ptext130 641A  
                                           __ptext122 7A2C  
                                           __ptext114 2AEE  
                                           __ptext106 1C70  
                                           __ptext131 4720  
                                           __ptext123 7988  
                                           __ptext115 463E  
                                           __ptext107 3C7E  
                                           __ptext140 7A40  
                                           __ptext132 7A94  
                                           __ptext124 7908  
                                           __ptext116 3F9E  
                                           __ptext108 6916  
                                           __ptext141 793A  
                                           __ptext133 64FC  
                                           __ptext125 7AB6  
                                           __ptext117 3D90  
                                           __ptext109 049C  
                                           __ptext150 4A7A  
                                           __ptext142 7AA0  
                                           __ptext134 523C  
                                           __ptext126 5446  
                                           __ptext118 6978  
                                           __ptext151 6062  
                                           __ptext143 7AA6  
                                           __ptext135 768A  
                                           __ptext127 42A6  
                                           __ptext119 74E6  
                                           __ptext160 5B0A  
                                           __ptext152 77C2  
                                           __ptext144 7A4A  
                                           __ptext136 5812  
                                           __ptext128 230E  
                                           __ptext161 7ABA  
                                           __ptext153 7274  
                                           __ptext145 7A54  
                                           __ptext137 2722  
                                           __ptext129 1EC8  
                                           __ptext170 2E9C  
                                           __ptext162 6640  
                                           __ptext154 765E  
                                           __ptext146 799A  
                                           __ptext138 7A36  
                                           __ptext171 684C  
                                           __ptext163 5B9C  
                                           __ptext155 70DA  
                                           __ptext147 7AAC  
                                           __ptext139 7A9A  
                                           __ptext180 6C02  
                                           __ptext172 5CBC  
                                           __ptext164 7ABE  
                                           __ptext156 6BAA  
                                           __ptext148 7A5E  
                                           __ptext181 72B4  
                                           __ptext173 517C  
                                           __ptext165 6F08  
                                           __ptext157 7A7C  
                                           __ptext149 5634  
                                           __ptext190 7A72  
                                           __ptext182 68B2  
                                           __ptext174 50BA  
                                           __ptext166 66AA  
                                           __ptext158 7A84  
                                           __ptext191 79EA  
                                           __ptext183 6FAA  
                                           __ptext175 77E6  
                                           __ptext167 6714  
                                           __ptext159 7A8C  
                                           __ptext192 7122  
                                           __ptext184 5C2C  
                                           __ptext176 5F62  
                                           __ptext168 6A9A  
                                           __ptext193 63A6  
                                           __ptext185 6C5A  
                                           __ptext177 20EE  
                                           __ptext169 656A  
                                           __ptext194 61D0  
                                           __ptext186 6CB2  
                                           __ptext178 6332  
                                           __ptext195 7870  
                                           __ptext187 6158  
                                           __ptext179 6248  
                                           __ptext196 6E0C  
                                           __ptext188 7518  
                                           __ptext197 6AF6  
                                           __ptext189 7A68  
                                           __ptext198 754A  
                                           __ptext199 594C  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0038  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 62BE  
                           __get_first_cluster@offset 002D  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00BB  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 002B  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 42A6  
                             __parse_file_delete@data 0037  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 003C  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0040  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 40A4  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6062  
                              fat_read_from_file@data 003F  
                 __fill_buffer_get_display@secondHalf 0007  
                                       _fat_find_file 517C  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00C1  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 085A  
                                   __display_itoa_u16 4E70  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6A9A  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D30  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D66  
                                         _ep_data_out 0158  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 7A4A  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 784E  
                       _bootloader_get_rec_dataLength 7A40  
                                       _MSDWriteState 00A6  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7092  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2910  
                    __end_of_bootloader_get_file_size 79AC  
                                         _file_buffer 0280  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 7A94  
                                      __display_start 3660  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 76B4  
                                         _file_number 00FE  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 463E  
                      __root_is_available@file_number 002D  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0028  
                                   ??_fat_rename_file 003B  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                              __size_of__spi_init_pps 0028  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
              __fill_buffer_get_file_details@inBuffer 0037  
                   __bootloader_verify_file@address32 005A  
                          __end_of_internalFlash_read 744C  
                                          ?_api_parse 00F4  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 0043  
                                            _MSDTasks 1C70  
                          _USBDeferINDataStagePackets 00AC  
                                        ??_fat_format 0025  
                                     _fat_delete_file 66AA  
                         __size_of__switch_mastermode 0002  
                           ?__ic2_display_set_address 0001  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0048  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                _USBConfigureEndpoint 59E4  
                                           _spi_speed 009A  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 779E  
                                           _spi_tx_rx 594C  
                                           _spi_tx_tx 5C2C  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 008E  
                                __display_programming 2CC6  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 4F34  
                           __end_of__display_itoa_u32 0BC8  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0028  
                            fat_rename_file@extension 0039  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00B4  
                   __end_of_ExternalFlash_MediaDetect 7ABA  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                    __end_of__fill_buffer_get_display 52F0  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 6C02  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 70DA  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 7AAC  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 002F  
                              __end_of__display_found 2AEE  
                             __end_of_USBStallHandler 71AE  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7274  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 37B2  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 5E70  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00C0  
                         __end_of_USBStdSetCfgHandler 455C  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 2722  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 79F8  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A7  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7A18  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 2E9C  
                           ??__fill_buffer_get_status 0016  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 003B  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00E3  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 00BE  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 79EA  
                                      _TransferLength 008C  
                                _bootloader_extension 8FC7  
                           __get_empty_cluster@offset 002C  
                          __end_of_USBCheckMSDRequest 50BA  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                            _ExternalFlash_SectorRead 74E6  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0022  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8DB9  
                                  __end_of_done_line4 8DA9  
                                      __i2c_wait_idle 6BAA  
                                     _MSDWriteHandler 1226  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00A1  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D1D  
                                         _found_line3 8E98  
                                         _found_line4 8D54  
                                            __get_fat 6D0A  
                                            __get_fbr 1A08  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 49AC  
                                  __end_of__write_fat 72F4  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 799A  
                          _ExternalFlash_CapacityRead 7988  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5634  
                                       __spi_init_pps 76B4  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 0368  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 79BC  
                    __get_first_cluster@first_cluster 002F  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 336E  
               __end_of_bootloader_get_rec_recordType 7AA0  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7A9A  
                                            __ptext10 7964  
                                            __ptext11 79F8  
                                            __ptext20 54EC  
                                            __ptext12 7922  
                                            __ptext21 2524  
                                            __ptext13 79DC  
                                            __ptext30 6D60  
                                            __ptext22 3058  
                                            __ptext14 72F4  
                                            __ptext31 779E  
                                            __ptext23 49AC  
                                            __ptext15 7AC2  
                                            __ptext40 67E6  
                                            __ptext32 7752  
                                            __ptext24 1A08  
                                            __ptext16 76B4  
                                            __ptext41 5EE0  
                                            __ptext33 4B48  
                                            __ptext25 6D0A  
                                            __ptext17 7976  
                                            __ptext50 6FFA  
                                            __ptext42 34EA  
                                            __ptext34 3A3A  
                                            __ptext26 76DC  
                                            __ptext18 60DE  
                                            __ptext51 14DA  
                                            __ptext43 7092  
                                            __ptext35 3660  
                                            __ptext27 7892  
                                            __ptext19 79BC  
                                            __ptext60 78EC  
                                            __ptext52 0BC8  
                                            __ptext44 336E  
                                            __ptext36 2CC6  
                                            __ptext28 736C  
                                            __ptext61 7A04  
                                            __ptext53 0020  
                                            __ptext45 4E70  
                                            __ptext37 2910  
                                            __ptext29 65D6  
                                            __ptext70 5D4A  
                                            __ptext62 744C  
                                            __ptext54 78D0  
                                            __ptext46 71AE  
                                            __ptext38 0F30  
                                            __ptext71 7A0E  
                                            __ptext63 7704  
                                            __ptext55 648C  
                                            __ptext47 5590  
                                            __ptext39 085A  
                                            __ptext80 52F0  
                                            __ptext72 7A18  
                                            __ptext64 69DA  
                                            __ptext56 7606  
                                            __ptext48 71F0  
                                            __ptext81 5A78  
                                            __ptext73 7A22  
                                            __ptext65 75AC  
                                            __ptext57 5FE4  
                                            __ptext49 6EB6  
                                            __ptext90 5DD6  
                                            __ptext82 41A6  
                                            __ptext74 31EE  
                                            __ptext66 4802  
                                            __ptext58 7232  
                                            __ptext91 4FF8  
                                            __ptext83 5774  
                                            __ptext75 73DE  
                                            __ptext67 56D6  
                                            __ptext59 7416  
                                            __ptext92 455C  
                                            __ptext84 4398  
                                            __ptext76 757C  
                                            __ptext68 6B52  
                                            __ptext93 6E62  
                                            __ptext85 447A  
                                            __ptext77 716A  
                                            __ptext69 6F5A  
                                            __ptext94 6DB6  
                                            __ptext86 7632  
                                            __ptext78 784E  
                                            __ptext95 79CC  
                                            __ptext87 539C  
                                            __ptext79 37B2  
                                            __ptext96 3E98  
                                            __ptext88 3900  
                                            __ptext97 7480  
                                            __ptext89 1784  
                                            __ptext98 7330  
                                            __ptext99 59E4  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6978  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6916  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 004E  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 5B0A  
                   __end_of_failed_line3_addressRange 8CF6  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 00F9  
                      __size_of__bootloader_find_file 009E  
                  __end_of__flash_copy_page_to_buffer 6D0A  
                          __flash_copy_page_to_buffer 6CB2  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 54EC  
                       __end_of__bootloader_find_file 5774  
                        __end_of_i2c_digipot_reset_on 782C  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 6E62  
                      __end_of_USBCtrlTrfSetupHandler 5B0A  
                                       __size_of_main 00C8  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6714  
                                         ??__read_fat 002A  
                              __fill_buffer_read_file 230E  
                         __end_of_flash_partial_write 6916  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 0033  
                             fat_get_file_size@sector 002D  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6AF6  
                    __size_of__bootloader_verify_file 02AA  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 7AA6  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7AA0  
                            __end_of__spi_init_master 7988  
                                 _USBCtrlTrfInHandler 4DA8  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0028  
                                         ??_api_parse 00F7  
                              __end_of__i2c_wait_idle 6C02  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                            _spi_init 72F4  
                                            _spi_mode 009B  
                                _USBCtrlTrfOutHandler 6A3A  
                           _USBCtrlEPAllowStatusStage 4F34  
                             _internalFlash_getBuffer 7A04  
                                ?__parse_command_long 00F1  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3660  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 002C  
                              ??__parse_command_short 0014  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00AF  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                                      ?__spi_init_pps 0001  
                     __end_of__fill_buffer_get_status 4802  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 772C  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7704  
                             _internalFlash_erasePage 744C  
                                   __write_fat@offset 002F  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 594C  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 58B0  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8D99  
                                 __end_of_start_line2 8D88  
                                 __end_of_start_line3 8D0A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7870  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7A22  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 3058  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 005D  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5E5C  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5DD6  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 74E6  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 6CB2  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6C5A  
                SYSTEM_Initialize@pll_startup_counter 0001  
                            __size_of__spi_init_slave 0002  
                               __update_modified_time 7518  
                        fat_read_from_file@start_byte 0037  
                                     _display_content 0168  
                          __end_of_flash_partial_read 6248  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 14DA  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7AAC  
                         _bootloader_get_rec_checksum 7AA6  
                             __size_of_MSDReadHandler 01D8  
                                       ??_system_init 0030  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 4B48  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 3B66  
                           __size_of_timer_pseudo_isr 0038  
                                  _USBWakeFromSuspend 73DE  
                               ??__parse_command_long 0060  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 779E  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1784  
                        __fill_buffer_read_file@start 00F3  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4C14  
                         fat_delete_file@next_cluster 0032  
                                        ?_api_prepare 0055  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0164  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 772C  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7A54  
                          _bootloader_get_rec_address 7A4A  
                               _USBAlternateInterface 00B8  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 6FAA  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0092  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5B9C  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00B2  
                                      _display_update 65D6  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D0A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 463E  
                          fat_read_from_file@position 00E7  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7778  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0166  
                             _internalFlash_writePage 5FE4  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                           flash_partial_read@address 0024  
                                          _USBMSDInit 3E98  
                        _USBStatusStageTimeoutCounter 00B0  
                     ??_ExternalFlash_MediaInitialize 0003  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                           flash_partial_read@command 0020  
                        __end_of_i2c_eeprom_writeByte 72B4  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 002A  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 009E  
                                         _USBInHandle 0088  
                            _APP_DeviceCustomHIDTasks 5446  
