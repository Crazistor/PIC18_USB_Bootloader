

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Sep 23 22:51:10 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=2
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=2
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	text222,global,reloc=2,class=CODE,delta=1
   244                           	psect	text223,global,reloc=2,class=CODE,delta=1
   245                           	psect	text224,global,reloc=2,class=CODE,delta=1
   246                           	psect	text225,global,reloc=2,class=CODE,delta=1
   247                           	psect	text226,global,reloc=2,class=CODE,delta=1
   248                           	psect	text227,global,reloc=2,class=CODE,delta=1
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	text229,global,reloc=2,class=CODE,delta=1
   251                           	psect	text230,global,reloc=2,class=CODE,delta=1
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	text232,global,reloc=2,class=CODE,delta=1
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   256                           	psect	text234,global,reloc=2,class=CODE,delta=1
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	dabs	1,0x600,512,_msd_buffer
   259                           	dabs	1,0xD00,48,_BDT
   260                           	dabs	1,0xD40,31,_msd_cbw
   261                           	dabs	1,0xD80,13,_msd_csw
   262                           	dabs	1,0xD38,8,_CtrlTrfData
   263                           	dabs	1,0xD30,8,_SetupPkt
   264  0000                     
   265                           ; Version 2.00
   266                           ; Generated 27/05/2018 GMT
   267                           ; 
   268                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   269                           ; All rights reserved.
   270                           ; 
   271                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   272                           ; 
   273                           ; Redistribution and use in source and binary forms, with or without modification, are
   274                           ; permitted provided that the following conditions are met:
   275                           ; 
   276                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   277                           ;        conditions and the following disclaimer.
   278                           ; 
   279                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   280                           ;        of conditions and the following disclaimer in the documentation and/or other
   281                           ;        materials provided with the distribution.
   282                           ; 
   283                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   284                           ;        software without specific prior written permission.
   285                           ; 
   286                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   287                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   288                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   289                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   290                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   291                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   292                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   293                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   294                           ; 
   295                           ; 
   296                           ; Code-generator required, PIC18F47J53 Definitions
   297                           ; 
   298                           ; SFR Addresses
   299  0000                     
   300                           	psect	intcode
   301  000008  EF04 F050          	goto	40968	;# 
   302                           
   303                           	psect	intcodelo
   304  000018  EF0C F050          	goto	40984	; ;# 
   305  0000                     
   306                           	psect	idataBANK0
   307  008FD4                     __pidataBANK0:
   308                           	opt stack 0
   309                           
   310                           ;initializer for _file_number
   311  008FD4  FF                 	db	255
   312                           
   313                           	psect	idataBANK1
   314  008B8E                     __pidataBANK1:
   315                           	opt stack 0
   316                           
   317                           ;initializer for _LUN
   318  008B8E  90                 	db	low _ExternalFlash_MediaInitialize
   319  008B8F  8D                 	db	high _ExternalFlash_MediaInitialize
   320  008B90  76                 	db	low _ExternalFlash_CapacityRead
   321  008B91  8E                 	db	high _ExternalFlash_CapacityRead
   322  008B92  3E                 	db	low _ExternalFlash_SectorSizeRead
   323  008B93  8F                 	db	high _ExternalFlash_SectorSizeRead
   324  008B94  CE                 	db	low _ExternalFlash_MediaDetect
   325  008B95  8F                 	db	high _ExternalFlash_MediaDetect
   326  008B96  4C                 	db	low _ExternalFlash_SectorRead
   327  008B97  88                 	db	high _ExternalFlash_SectorRead
   328  008B98  CA                 	db	low _ExternalFlash_WriteProtectStateGet
   329  008B99  8F                 	db	high _ExternalFlash_WriteProtectStateGet
   330  008B9A  1A                 	db	low _ExternalFlash_SectorWrite
   331  008B9B  88                 	db	high _ExternalFlash_SectorWrite
   332  008B9C  00                 	db	0
   333  008B9D  00                 	db	0
   334  008B9E  00                 	db	0
   335  008B9F  00                 	db	0
   336  008BA0  00                 	db	0
   337  008BA1  00                 	db	0
   338                           
   339                           ;initializer for i2c_display_send_init_sequence@F6808
   340  008BA2  3A                 	db	58
   341  008BA3  1E                 	db	30
   342  008BA4  39                 	db	57
   343  008BA5  0C                 	db	12
   344  008BA6  74                 	db	116
   345  008BA7  5C                 	db	92
   346  008BA8  6D                 	db	109
   347  008BA9  0C                 	db	12
   348  008BAA  01                 	db	1
   349                           
   350                           ;initializer for _tx_buf
   351  008BAB  01                 	db	1
   352  008BAC  02                 	db	2
   353  008BAD  03                 	db	3
   354  008BAE  04                 	db	4
   355  008BAF  05                 	db	5
   356  008BB0  06                 	db	6
   357  008BB1  07                 	db	7
   358  008BB2  08                 	db	8
   359                           
   360                           	psect	mediumconst
   361  009C98                     __pmediumconst:
   362                           	opt stack 0
   363  009C98  00                 	db	0
   364  009C99                     _checked_line2:
   365                           	opt stack 0
   366  009C99  46                 	db	70
   367  009C9A  69                 	db	105
   368  009C9B  6C                 	db	108
   369  009C9C  65                 	db	101
   370  009C9D  20                 	db	32
   371  009C9E  63                 	db	99
   372  009C9F  68                 	db	104
   373  009CA0  65                 	db	101
   374  009CA1  63                 	db	99
   375  009CA2  6B                 	db	107
   376  009CA3  20                 	db	32
   377  009CA4  63                 	db	99
   378  009CA5  6F                 	db	111
   379  009CA6  6D                 	db	109
   380  009CA7  70                 	db	112
   381  009CA8  6C                 	db	108
   382  009CA9  65                 	db	101
   383  009CAA  74                 	db	116
   384  009CAB  65                 	db	101
   385  009CAC  64                 	db	100
   386  009CAD  00                 	db	0
   387  009CAE                     __end_of_checked_line2:
   388                           	opt stack 0
   389  009CAE                     _failed_line3_addressRange:
   390                           	opt stack 0
   391  009CAE  41                 	db	65
   392  009CAF  64                 	db	100
   393  009CB0  64                 	db	100
   394  009CB1  72                 	db	114
   395  009CB2  2E                 	db	46
   396  009CB3  20                 	db	32
   397  009CB4  6F                 	db	111
   398  009CB5  75                 	db	117
   399  009CB6  74                 	db	116
   400  009CB7  73                 	db	115
   401  009CB8  69                 	db	105
   402  009CB9  64                 	db	100
   403  009CBA  65                 	db	101
   404  009CBB  20                 	db	32
   405  009CBC  72                 	db	114
   406  009CBD  61                 	db	97
   407  009CBE  6E                 	db	110
   408  009CBF  67                 	db	103
   409  009CC0  65                 	db	101
   410  009CC1  00                 	db	0
   411  009CC2                     __end_of_failed_line3_addressRange:
   412                           	opt stack 0
   413  009CC2                     _search_line3:
   414                           	opt stack 0
   415  009CC2  46                 	db	70
   416  009CC3  49                 	db	73
   417  009CC4  52                 	db	82
   418  009CC5  4D                 	db	77
   419  009CC6  57                 	db	87
   420  009CC7  41                 	db	65
   421  009CC8  52                 	db	82
   422  009CC9  45                 	db	69
   423  009CCA  2E                 	db	46
   424  009CCB  48                 	db	72
   425  009CCC  45                 	db	69
   426  009CCD  58                 	db	88
   427  009CCE  20                 	db	32
   428  009CCF  6F                 	db	111
   429  009CD0  6E                 	db	110
   430  009CD1  20                 	db	32
   431  009CD2  55                 	db	85
   432  009CD3  53                 	db	83
   433  009CD4  42                 	db	66
   434  009CD5  00                 	db	0
   435  009CD6                     __end_of_search_line3:
   436                           	opt stack 0
   437  009CD6                     _failed_line3_startCode:
   438                           	opt stack 0
   439  009CD6  4D                 	db	77
   440  009CD7  69                 	db	105
   441  009CD8  73                 	db	115
   442  009CD9  73                 	db	115
   443  009CDA  69                 	db	105
   444  009CDB  6E                 	db	110
   445  009CDC  67                 	db	103
   446  009CDD  20                 	db	32
   447  009CDE  73                 	db	115
   448  009CDF  74                 	db	116
   449  009CE0  61                 	db	97
   450  009CE1  72                 	db	114
   451  009CE2  74                 	db	116
   452  009CE3  20                 	db	32
   453  009CE4  63                 	db	99
   454  009CE5  6F                 	db	111
   455  009CE6  64                 	db	100
   456  009CE7  65                 	db	101
   457  009CE8  00                 	db	0
   458  009CE9                     __end_of_failed_line3_startCode:
   459                           	opt stack 0
   460  009CE9                     _found_line2:
   461                           	opt stack 0
   462  009CE9  46                 	db	70
   463  009CEA  49                 	db	73
   464  009CEB  52                 	db	82
   465  009CEC  4D                 	db	77
   466  009CED  57                 	db	87
   467  009CEE  41                 	db	65
   468  009CEF  52                 	db	82
   469  009CF0  45                 	db	69
   470  009CF1  2E                 	db	46
   471  009CF2  48                 	db	72
   472  009CF3  45                 	db	69
   473  009CF4  58                 	db	88
   474  009CF5  20                 	db	32
   475  009CF6  66                 	db	102
   476  009CF7  6F                 	db	111
   477  009CF8  75                 	db	117
   478  009CF9  6E                 	db	110
   479  009CFA  64                 	db	100
   480  009CFB  00                 	db	0
   481  009CFC                     __end_of_found_line2:
   482                           	opt stack 0
   483  009CFC                     _programming_line2:
   484                           	opt stack 0
   485  009CFC  50                 	db	80
   486  009CFD  72                 	db	114
   487  009CFE  6F                 	db	111
   488  009CFF  67                 	db	103
   489  009D00  72                 	db	114
   490  009D01  61                 	db	97
   491  009D02  6D                 	db	109
   492  009D03  6D                 	db	109
   493  009D04  69                 	db	105
   494  009D05  6E                 	db	110
   495  009D06  67                 	db	103
   496  009D07  20                 	db	32
   497  009D08  66                 	db	102
   498  009D09  6C                 	db	108
   499  009D0A  61                 	db	97
   500  009D0B  73                 	db	115
   501  009D0C  68                 	db	104
   502  009D0D  00                 	db	0
   503  009D0E                     __end_of_programming_line2:
   504                           	opt stack 0
   505  009D0E                     _failed_line2:
   506                           	opt stack 0
   507  009D0E  46                 	db	70
   508  009D0F  69                 	db	105
   509  009D10  6C                 	db	108
   510  009D11  65                 	db	101
   511  009D12  20                 	db	32
   512  009D13  63                 	db	99
   513  009D14  68                 	db	104
   514  009D15  65                 	db	101
   515  009D16  63                 	db	99
   516  009D17  6B                 	db	107
   517  009D18  20                 	db	32
   518  009D19  66                 	db	102
   519  009D1A  61                 	db	97
   520  009D1B  69                 	db	105
   521  009D1C  6C                 	db	108
   522  009D1D  65                 	db	101
   523  009D1E  64                 	db	100
   524  009D1F  00                 	db	0
   525  009D20                     __end_of_failed_line2:
   526                           	opt stack 0
   527  009D20                     _found_line4:
   528                           	opt stack 0
   529  009D20  50                 	db	80
   530  009D21  72                 	db	114
   531  009D22  65                 	db	101
   532  009D23  73                 	db	115
   533  009D24  73                 	db	115
   534  009D25  20                 	db	32
   535  009D26  74                 	db	116
   536  009D27  6F                 	db	111
   537  009D28  20                 	db	32
   538  009D29  75                 	db	117
   539  009D2A  73                 	db	115
   540  009D2B  65                 	db	101
   541  009D2C  20                 	db	32
   542  009D2D  66                 	db	102
   543  009D2E  69                 	db	105
   544  009D2F  6C                 	db	108
   545  009D30  65                 	db	101
   546  009D31  00                 	db	0
   547  009D32                     __end_of_found_line4:
   548                           	opt stack 0
   549  009D32                     _checked_line4:
   550                           	opt stack 0
   551  009D32  50                 	db	80
   552  009D33  72                 	db	114
   553  009D34  65                 	db	101
   554  009D35  73                 	db	115
   555  009D36  73                 	db	115
   556  009D37  20                 	db	32
   557  009D38  74                 	db	116
   558  009D39  6F                 	db	111
   559  009D3A  20                 	db	32
   560  009D3B  70                 	db	112
   561  009D3C  72                 	db	114
   562  009D3D  6F                 	db	111
   563  009D3E  67                 	db	103
   564  009D3F  72                 	db	114
   565  009D40  61                 	db	97
   566  009D41  6D                 	db	109
   567  009D42  00                 	db	0
   568  009D43                     __end_of_checked_line4:
   569                           	opt stack 0
   570  009D43                     _search_line2:
   571                           	opt stack 0
   572  009D43  4C                 	db	76
   573  009D44  6F                 	db	111
   574  009D45  6F                 	db	111
   575  009D46  6B                 	db	107
   576  009D47  69                 	db	105
   577  009D48  6E                 	db	110
   578  009D49  67                 	db	103
   579  009D4A  20                 	db	32
   580  009D4B  66                 	db	102
   581  009D4C  6F                 	db	111
   582  009D4D  72                 	db	114
   583  009D4E  20                 	db	32
   584  009D4F  66                 	db	102
   585  009D50  69                 	db	105
   586  009D51  6C                 	db	108
   587  009D52  65                 	db	101
   588  009D53  00                 	db	0
   589  009D54                     __end_of_search_line2:
   590                           	opt stack 0
   591  009D54                     _done_line4:
   592                           	opt stack 0
   593  009D54  50                 	db	80
   594  009D55  72                 	db	114
   595  009D56  65                 	db	101
   596  009D57  73                 	db	115
   597  009D58  73                 	db	115
   598  009D59  20                 	db	32
   599  009D5A  74                 	db	116
   600  009D5B  6F                 	db	111
   601  009D5C  20                 	db	32
   602  009D5D  72                 	db	114
   603  009D5E  65                 	db	101
   604  009D5F  62                 	db	98
   605  009D60  6F                 	db	111
   606  009D61  6F                 	db	111
   607  009D62  74                 	db	116
   608  009D63  00                 	db	0
   609  009D64                     __end_of_done_line4:
   610                           	opt stack 0
   611  009D64                     _done_line3:
   612                           	opt stack 0
   613  009D64  50                 	db	80
   614  009D65  61                 	db	97
   615  009D66  67                 	db	103
   616  009D67  65                 	db	101
   617  009D68  73                 	db	115
   618  009D69  20                 	db	32
   619  009D6A  77                 	db	119
   620  009D6B  72                 	db	114
   621  009D6C  69                 	db	105
   622  009D6D  74                 	db	116
   623  009D6E  74                 	db	116
   624  009D6F  65                 	db	101
   625  009D70  6E                 	db	110
   626  009D71  3A                 	db	58
   627  009D72  20                 	db	32
   628  009D73  00                 	db	0
   629  009D74                     __end_of_done_line3:
   630                           	opt stack 0
   631  009D74                     _done_line1:
   632                           	opt stack 0
   633  009D74  42                 	db	66
   634  009D75  6F                 	db	111
   635  009D76  6F                 	db	111
   636  009D77  74                 	db	116
   637  009D78  6C                 	db	108
   638  009D79  6F                 	db	111
   639  009D7A  61                 	db	97
   640  009D7B  64                 	db	100
   641  009D7C  65                 	db	101
   642  009D7D  72                 	db	114
   643  009D7E  20                 	db	32
   644  009D7F  4D                 	db	77
   645  009D80  6F                 	db	111
   646  009D81  64                 	db	100
   647  009D82  65                 	db	101
   648  009D83  00                 	db	0
   649  009D84                     __end_of_done_line1:
   650                           	opt stack 0
   651  009D84                     _programming_line4:
   652                           	opt stack 0
   653  009D84  50                 	db	80
   654  009D85  61                 	db	97
   655  009D86  67                 	db	103
   656  009D87  65                 	db	101
   657  009D88  73                 	db	115
   658  009D89  20                 	db	32
   659  009D8A  77                 	db	119
   660  009D8B  72                 	db	114
   661  009D8C  69                 	db	105
   662  009D8D  74                 	db	116
   663  009D8E  74                 	db	116
   664  009D8F  65                 	db	101
   665  009D90  6E                 	db	110
   666  009D91  3A                 	db	58
   667  009D92  20                 	db	32
   668  009D93  00                 	db	0
   669  009D94                     __end_of_programming_line4:
   670                           	opt stack 0
   671  009D94                     _programming_line1:
   672                           	opt stack 0
   673  009D94  42                 	db	66
   674  009D95  6F                 	db	111
   675  009D96  6F                 	db	111
   676  009D97  74                 	db	116
   677  009D98  6C                 	db	108
   678  009D99  6F                 	db	111
   679  009D9A  61                 	db	97
   680  009D9B  64                 	db	100
   681  009D9C  65                 	db	101
   682  009D9D  72                 	db	114
   683  009D9E  20                 	db	32
   684  009D9F  4D                 	db	77
   685  009DA0  6F                 	db	111
   686  009DA1  64                 	db	100
   687  009DA2  65                 	db	101
   688  009DA3  00                 	db	0
   689  009DA4                     __end_of_programming_line1:
   690                           	opt stack 0
   691  009DA4                     _failed_line1:
   692                           	opt stack 0
   693  009DA4  42                 	db	66
   694  009DA5  6F                 	db	111
   695  009DA6  6F                 	db	111
   696  009DA7  74                 	db	116
   697  009DA8  6C                 	db	108
   698  009DA9  6F                 	db	111
   699  009DAA  61                 	db	97
   700  009DAB  64                 	db	100
   701  009DAC  65                 	db	101
   702  009DAD  72                 	db	114
   703  009DAE  20                 	db	32
   704  009DAF  4D                 	db	77
   705  009DB0  6F                 	db	111
   706  009DB1  64                 	db	100
   707  009DB2  65                 	db	101
   708  009DB3  00                 	db	0
   709  009DB4                     __end_of_failed_line1:
   710                           	opt stack 0
   711  009DB4                     _checked_line1:
   712                           	opt stack 0
   713  009DB4  42                 	db	66
   714  009DB5  6F                 	db	111
   715  009DB6  6F                 	db	111
   716  009DB7  74                 	db	116
   717  009DB8  6C                 	db	108
   718  009DB9  6F                 	db	111
   719  009DBA  61                 	db	97
   720  009DBB  64                 	db	100
   721  009DBC  65                 	db	101
   722  009DBD  72                 	db	114
   723  009DBE  20                 	db	32
   724  009DBF  4D                 	db	77
   725  009DC0  6F                 	db	111
   726  009DC1  64                 	db	100
   727  009DC2  65                 	db	101
   728  009DC3  00                 	db	0
   729  009DC4                     __end_of_checked_line1:
   730                           	opt stack 0
   731  009DC4                     _verify_line1:
   732                           	opt stack 0
   733  009DC4  42                 	db	66
   734  009DC5  6F                 	db	111
   735  009DC6  6F                 	db	111
   736  009DC7  74                 	db	116
   737  009DC8  6C                 	db	108
   738  009DC9  6F                 	db	111
   739  009DCA  61                 	db	97
   740  009DCB  64                 	db	100
   741  009DCC  65                 	db	101
   742  009DCD  72                 	db	114
   743  009DCE  20                 	db	32
   744  009DCF  4D                 	db	77
   745  009DD0  6F                 	db	111
   746  009DD1  64                 	db	100
   747  009DD2  65                 	db	101
   748  009DD3  00                 	db	0
   749  009DD4                     __end_of_verify_line1:
   750                           	opt stack 0
   751  009DD4                     _found_line1:
   752                           	opt stack 0
   753  009DD4  42                 	db	66
   754  009DD5  6F                 	db	111
   755  009DD6  6F                 	db	111
   756  009DD7  74                 	db	116
   757  009DD8  6C                 	db	108
   758  009DD9  6F                 	db	111
   759  009DDA  61                 	db	97
   760  009DDB  64                 	db	100
   761  009DDC  65                 	db	101
   762  009DDD  72                 	db	114
   763  009DDE  20                 	db	32
   764  009DDF  4D                 	db	77
   765  009DE0  6F                 	db	111
   766  009DE1  64                 	db	100
   767  009DE2  65                 	db	101
   768  009DE3  00                 	db	0
   769  009DE4                     __end_of_found_line1:
   770                           	opt stack 0
   771  009DE4                     _search_line1:
   772                           	opt stack 0
   773  009DE4  42                 	db	66
   774  009DE5  6F                 	db	111
   775  009DE6  6F                 	db	111
   776  009DE7  74                 	db	116
   777  009DE8  6C                 	db	108
   778  009DE9  6F                 	db	111
   779  009DEA  61                 	db	97
   780  009DEB  64                 	db	100
   781  009DEC  65                 	db	101
   782  009DED  72                 	db	114
   783  009DEE  20                 	db	32
   784  009DEF  4D                 	db	77
   785  009DF0  6F                 	db	111
   786  009DF1  64                 	db	100
   787  009DF2  65                 	db	101
   788  009DF3  00                 	db	0
   789  009DF4                     __end_of_search_line1:
   790                           	opt stack 0
   791  009DF4                     _start_line1:
   792                           	opt stack 0
   793  009DF4  42                 	db	66
   794  009DF5  6F                 	db	111
   795  009DF6  6F                 	db	111
   796  009DF7  74                 	db	116
   797  009DF8  6C                 	db	108
   798  009DF9  6F                 	db	111
   799  009DFA  61                 	db	97
   800  009DFB  64                 	db	100
   801  009DFC  65                 	db	101
   802  009DFD  72                 	db	114
   803  009DFE  20                 	db	32
   804  009DFF  4D                 	db	77
   805  009E00  6F                 	db	111
   806  009E01  64                 	db	100
   807  009E02  65                 	db	101
   808  009E03  00                 	db	0
   809  009E04                     __end_of_start_line1:
   810                           	opt stack 0
   811  009E04                     _failed_line3_checksum:
   812                           	opt stack 0
   813  009E04  43                 	db	67
   814  009E05  68                 	db	104
   815  009E06  65                 	db	101
   816  009E07  63                 	db	99
   817  009E08  6B                 	db	107
   818  009E09  73                 	db	115
   819  009E0A  75                 	db	117
   820  009E0B  6D                 	db	109
   821  009E0C  20                 	db	32
   822  009E0D  65                 	db	101
   823  009E0E  72                 	db	114
   824  009E0F  72                 	db	114
   825  009E10  6F                 	db	111
   826  009E11  72                 	db	114
   827  009E12  00                 	db	0
   828  009E13                     __end_of_failed_line3_checksum:
   829                           	opt stack 0
   830  009E13                     _failed_line3_noNextRecord:
   831                           	opt stack 0
   832  009E13  4E                 	db	78
   833  009E14  6F                 	db	111
   834  009E15  20                 	db	32
   835  009E16  6E                 	db	110
   836  009E17  65                 	db	101
   837  009E18  78                 	db	120
   838  009E19  74                 	db	116
   839  009E1A  20                 	db	32
   840  009E1B  72                 	db	114
   841  009E1C  65                 	db	101
   842  009E1D  63                 	db	99
   843  009E1E  6F                 	db	111
   844  009E1F  72                 	db	114
   845  009E20  64                 	db	100
   846  009E21  00                 	db	0
   847  009E22                     __end_of_failed_line3_noNextRecord:
   848                           	opt stack 0
   849  009E22                     _start_line4:
   850                           	opt stack 0
   851  009E22  73                 	db	115
   852  009E23  6F                 	db	111
   853  009E24  6C                 	db	108
   854  009E25  64                 	db	100
   855  009E26  65                 	db	101
   856  009E27  72                 	db	114
   857  009E28  6E                 	db	110
   858  009E29  65                 	db	101
   859  009E2A  72                 	db	114
   860  009E2B  64                 	db	100
   861  009E2C  2E                 	db	46
   862  009E2D  63                 	db	99
   863  009E2E  6F                 	db	111
   864  009E2F  6D                 	db	109
   865  009E30  00                 	db	0
   866  009E31                     __end_of_start_line4:
   867                           	opt stack 0
   868  009E31                     _failed_line3_dataTooLong:
   869                           	opt stack 0
   870  009E31  44                 	db	68
   871  009E32  61                 	db	97
   872  009E33  74                 	db	116
   873  009E34  61                 	db	97
   874  009E35  20                 	db	32
   875  009E36  74                 	db	116
   876  009E37  6F                 	db	111
   877  009E38  6F                 	db	111
   878  009E39  20                 	db	32
   879  009E3A  6C                 	db	108
   880  009E3B  6F                 	db	111
   881  009E3C  6E                 	db	110
   882  009E3D  67                 	db	103
   883  009E3E  00                 	db	0
   884  009E3F                     __end_of_failed_line3_dataTooLong:
   885                           	opt stack 0
   886  009E3F                     _reboot_line1:
   887                           	opt stack 0
   888  009E3F  52                 	db	82
   889  009E40  65                 	db	101
   890  009E41  62                 	db	98
   891  009E42  6F                 	db	111
   892  009E43  6F                 	db	111
   893  009E44  74                 	db	116
   894  009E45  69                 	db	105
   895  009E46  6E                 	db	110
   896  009E47  67                 	db	103
   897  009E48  2E                 	db	46
   898  009E49  2E                 	db	46
   899  009E4A  2E                 	db	46
   900  009E4B  00                 	db	0
   901  009E4C                     __end_of_reboot_line1:
   902                           	opt stack 0
   903  009E4C                     _verify_line2:
   904                           	opt stack 0
   905  009E4C  56                 	db	86
   906  009E4D  65                 	db	101
   907  009E4E  72                 	db	114
   908  009E4F  69                 	db	105
   909  009E50  66                 	db	102
   910  009E51  79                 	db	121
   911  009E52  69                 	db	105
   912  009E53  6E                 	db	110
   913  009E54  67                 	db	103
   914  009E55  2E                 	db	46
   915  009E56  2E                 	db	46
   916  009E57  2E                 	db	46
   917  009E58  00                 	db	0
   918  009E59                     __end_of_verify_line2:
   919                           	opt stack 0
   920  009E59                     _search_line4:
   921                           	opt stack 0
   922  009E59  64                 	db	100
   923  009E5A  72                 	db	114
   924  009E5B  69                 	db	105
   925  009E5C  76                 	db	118
   926  009E5D  65                 	db	101
   927  009E5E  2E                 	db	46
   928  009E5F  2E                 	db	46
   929  009E60  2E                 	db	46
   930  009E61  00                 	db	0
   931  009E62                     __end_of_search_line4:
   932                           	opt stack 0
   933  009E62                     _start_line2:
   934                           	opt stack 0
   935  009E62  56                 	db	86
   936  009E63  65                 	db	101
   937  009E64  72                 	db	114
   938  009E65  73                 	db	115
   939  009E66  69                 	db	105
   940  009E67  6F                 	db	111
   941  009E68  6E                 	db	110
   942  009E69  20                 	db	32
   943  009E6A  00                 	db	0
   944  009E6B                     __end_of_start_line2:
   945                           	opt stack 0
   946  009E6B                     _failed_line4:
   947                           	opt stack 0
   948  009E6B  52                 	db	82
   949  009E6C  65                 	db	101
   950  009E6D  63                 	db	99
   951  009E6E  6F                 	db	111
   952  009E6F  72                 	db	114
   953  009E70  64                 	db	100
   954  009E71  20                 	db	32
   955  009E72  00                 	db	0
   956  009E73                     __end_of_failed_line4:
   957                           	opt stack 0
   958  009E73                     _checked_line3:
   959                           	opt stack 0
   960  009E73  72                 	db	114
   961  009E74  65                 	db	101
   962  009E75  63                 	db	99
   963  009E76  6F                 	db	111
   964  009E77  72                 	db	114
   965  009E78  64                 	db	100
   966  009E79  73                 	db	115
   967  009E7A  00                 	db	0
   968  009E7B                     __end_of_checked_line3:
   969                           	opt stack 0
   970  009E7B                     _USB_SD_Ptr:
   971                           	opt stack 0
   972  009E7B  CC                 	db	low _sd000
   973  009E7C  9F                 	db	high _sd000
   974  009E7D  E8                 	db	low _sd001
   975  009E7E  9E                 	db	high _sd001
   976  009E7F  1C                 	db	low _sd002
   977  009E80  9F                 	db	high _sd002
   978  009E81  8B                 	db	low _sd003
   979  009E82  9F                 	db	high _sd003
   980  009E83                     __end_of_USB_SD_Ptr:
   981                           	opt stack 0
   982  009E83                     _programming_line3:
   983                           	opt stack 0
   984  009E83  45                 	db	69
   985  009E84  6E                 	db	110
   986  009E85  74                 	db	116
   987  009E86  72                 	db	114
   988  009E87  79                 	db	121
   989  009E88  20                 	db	32
   990  009E89  00                 	db	0
   991  009E8A                     __end_of_programming_line3:
   992                           	opt stack 0
   993  009E8A                     _verify_line3:
   994                           	opt stack 0
   995  009E8A  52                 	db	82
   996  009E8B  65                 	db	101
   997  009E8C  63                 	db	99
   998  009E8D  6F                 	db	111
   999  009E8E  72                 	db	114
  1000  009E8F  64                 	db	100
  1001  009E90  00                 	db	0
  1002  009E91                     __end_of_verify_line3:
  1003                           	opt stack 0
  1004  009E91                     _found_line3b:
  1005                           	opt stack 0
  1006  009E91  20                 	db	32
  1007  009E92  62                 	db	98
  1008  009E93  79                 	db	121
  1009  009E94  74                 	db	116
  1010  009E95  65                 	db	101
  1011  009E96  73                 	db	115
  1012  009E97  00                 	db	0
  1013  009E98                     __end_of_found_line3b:
  1014                           	opt stack 0
  1015  009E98                     _found_line3:
  1016                           	opt stack 0
  1017  009E98  53                 	db	83
  1018  009E99  69                 	db	105
  1019  009E9A  7A                 	db	122
  1020  009E9B  65                 	db	101
  1021  009E9C  3A                 	db	58
  1022  009E9D  20                 	db	32
  1023  009E9E  00                 	db	0
  1024  009E9F                     __end_of_found_line3:
  1025                           	opt stack 0
  1026  009E9F                     _done_line2:
  1027                           	opt stack 0
  1028  009E9F  44                 	db	68
  1029  009EA0  6F                 	db	111
  1030  009EA1  6E                 	db	110
  1031  009EA2  65                 	db	101
  1032  009EA3  21                 	db	33
  1033  009EA4  00                 	db	0
  1034  009EA5                     __end_of_done_line2:
  1035                           	opt stack 0
  1036  009EA5                     _USB_CD_Ptr:
  1037                           	opt stack 0
  1038  009EA5  A8                 	db	low _configDescriptor1
  1039  009EA6  9E                 	db	high _configDescriptor1
  1040  009EA7                     __end_of_USB_CD_Ptr:
  1041                           	opt stack 0
  1042  009EA7                     _start_line3:
  1043                           	opt stack 0
  1044  009EA7  00                 	db	0
  1045  009EA8                     __end_of_start_line3:
  1046                           	opt stack 0
  1047  009EA8                     _configDescriptor1:
  1048                           	opt stack 0
  1049  009EA8  09                 	db	9
  1050  009EA9  02                 	db	2
  1051  009EAA  40                 	db	64
  1052  009EAB  00                 	db	0
  1053  009EAC  02                 	db	2
  1054  009EAD  01                 	db	1
  1055  009EAE  00                 	db	0
  1056  009EAF  C0                 	db	192
  1057  009EB0  32                 	db	50
  1058  009EB1  09                 	db	9
  1059  009EB2  04                 	db	4
  1060  009EB3  00                 	db	0
  1061  009EB4  00                 	db	0
  1062  009EB5  02                 	db	2
  1063  009EB6  03                 	db	3
  1064  009EB7  00                 	db	0
  1065  009EB8  00                 	db	0
  1066  009EB9  00                 	db	0
  1067  009EBA  09                 	db	9
  1068  009EBB  21                 	db	33
  1069  009EBC  11                 	db	17
  1070  009EBD  01                 	db	1
  1071  009EBE  00                 	db	0
  1072  009EBF  01                 	db	1
  1073  009EC0  22                 	db	34
  1074  009EC1  1D                 	db	29
  1075  009EC2  00                 	db	0
  1076  009EC3  07                 	db	7
  1077  009EC4  05                 	db	5
  1078  009EC5  81                 	db	129
  1079  009EC6  03                 	db	3
  1080  009EC7  40                 	db	64
  1081  009EC8  00                 	db	0
  1082  009EC9  01                 	db	1
  1083  009ECA  07                 	db	7
  1084  009ECB  05                 	db	5
  1085  009ECC  01                 	db	1
  1086  009ECD  03                 	db	3
  1087  009ECE  40                 	db	64
  1088  009ECF  00                 	db	0
  1089  009ED0  01                 	db	1
  1090  009ED1  09                 	db	9
  1091  009ED2  04                 	db	4
  1092  009ED3  01                 	db	1
  1093  009ED4  00                 	db	0
  1094  009ED5  02                 	db	2
  1095  009ED6  08                 	db	8
  1096  009ED7  06                 	db	6
  1097  009ED8  50                 	db	80
  1098  009ED9  00                 	db	0
  1099  009EDA  07                 	db	7
  1100  009EDB  05                 	db	5
  1101  009EDC  82                 	db	130
  1102  009EDD  02                 	db	2
  1103  009EDE  40                 	db	64
  1104  009EDF  00                 	db	0
  1105  009EE0  01                 	db	1
  1106  009EE1  07                 	db	7
  1107  009EE2  05                 	db	5
  1108  009EE3  02                 	db	2
  1109  009EE4  02                 	db	2
  1110  009EE5  40                 	db	64
  1111  009EE6  00                 	db	0
  1112  009EE7  01                 	db	1
  1113  009EE8                     __end_of_configDescriptor1:
  1114                           	opt stack 0
  1115  009EE8                     _sd001:
  1116                           	opt stack 0
  1117  009EE8  34                 	db	52
  1118  009EE9  03                 	db	3
  1119  009EEA  0053               	dw	83
  1120  009EEC  006F               	dw	111
  1121  009EEE  006C               	dw	108
  1122  009EF0  0064               	dw	100
  1123  009EF2  0065               	dw	101
  1124  009EF4  0072               	dw	114
  1125  009EF6  006E               	dw	110
  1126  009EF8  0065               	dw	101
  1127  009EFA  0072               	dw	114
  1128  009EFC  0064               	dw	100
  1129  009EFE  002E               	dw	46
  1130  009F00  0063               	dw	99
  1131  009F02  006F               	dw	111
  1132  009F04  006D               	dw	109
  1133  009F06  0020               	dw	32
  1134  009F08  0020               	dw	32
  1135  009F0A  0020               	dw	32
  1136  009F0C  0020               	dw	32
  1137  009F0E  0020               	dw	32
  1138  009F10  0020               	dw	32
  1139  009F12  0020               	dw	32
  1140  009F14  0020               	dw	32
  1141  009F16  0020               	dw	32
  1142  009F18  0020               	dw	32
  1143  009F1A  0020               	dw	32
  1144  009F1C                     __end_of_sd001:
  1145                           	opt stack 0
  1146  009F1C                     _sd002:
  1147                           	opt stack 0
  1148  009F1C  2E                 	db	46
  1149  009F1D  03                 	db	3
  1150  009F1E  004D               	dw	77
  1151  009F20  0050               	dw	80
  1152  009F22  0050               	dw	80
  1153  009F24  0054               	dw	84
  1154  009F26  0053               	dw	83
  1155  009F28  006F               	dw	111
  1156  009F2A  006C               	dw	108
  1157  009F2C  0061               	dw	97
  1158  009F2E  0072               	dw	114
  1159  009F30  0020               	dw	32
  1160  009F32  0043               	dw	67
  1161  009F34  0068               	dw	104
  1162  009F36  0061               	dw	97
  1163  009F38  0072               	dw	114
  1164  009F3A  0067               	dw	103
  1165  009F3C  0065               	dw	101
  1166  009F3E  0072               	dw	114
  1167  009F40  0020               	dw	32
  1168  009F42  0052               	dw	82
  1169  009F44  0065               	dw	101
  1170  009F46  0076               	dw	118
  1171  009F48  0043               	dw	67
  1172  009F4A                     __end_of_sd002:
  1173                           	opt stack 0
  1174  009F4A                     _inq_resp:
  1175                           	opt stack 0
  1176  009F4A  00                 	db	0
  1177  009F4B  80                 	db	128
  1178  009F4C  04                 	db	4
  1179  009F4D  02                 	db	2
  1180  009F4E  20                 	db	32
  1181  009F4F  00                 	db	0
  1182  009F50  00                 	db	0
  1183  009F51  00                 	db	0
  1184  009F52  4D                 	db	77
  1185  009F53  69                 	db	105
  1186  009F54  63                 	db	99
  1187  009F55  72                 	db	114
  1188  009F56  6F                 	db	111
  1189  009F57  63                 	db	99
  1190  009F58  68                 	db	104
  1191  009F59  70                 	db	112
  1192  009F5A  4D                 	db	77
  1193  009F5B  61                 	db	97
  1194  009F5C  73                 	db	115
  1195  009F5D  73                 	db	115
  1196  009F5E  20                 	db	32
  1197  009F5F  53                 	db	83
  1198  009F60  74                 	db	116
  1199  009F61  6F                 	db	111
  1200  009F62  72                 	db	114
  1201  009F63  61                 	db	97
  1202  009F64  67                 	db	103
  1203  009F65  65                 	db	101
  1204  009F66  20                 	db	32
  1205  009F67  20                 	db	32
  1206  009F68  20                 	db	32
  1207  009F69  20                 	db	32
  1208  009F6A  30                 	db	48
  1209  009F6B  30                 	db	48
  1210  009F6C  30                 	db	48
  1211  009F6D  31                 	db	49
  1212  009F6E                     __end_of_inq_resp:
  1213                           	opt stack 0
  1214  009F6E                     _hid_rpt01:
  1215                           	opt stack 0
  1216  009F6E  06                 	db	6
  1217  009F6F  00                 	db	0
  1218  009F70  FF                 	db	255
  1219  009F71  09                 	db	9
  1220  009F72  01                 	db	1
  1221  009F73  A1                 	db	161
  1222  009F74  01                 	db	1
  1223  009F75  19                 	db	25
  1224  009F76  01                 	db	1
  1225  009F77  29                 	db	41
  1226  009F78  40                 	db	64
  1227  009F79  15                 	db	21
  1228  009F7A  00                 	db	0
  1229  009F7B  26                 	db	38
  1230  009F7C  FF                 	db	255
  1231  009F7D  00                 	db	0
  1232  009F7E  75                 	db	117
  1233  009F7F  08                 	db	8
  1234  009F80  95                 	db	149
  1235  009F81  40                 	db	64
  1236  009F82  81                 	db	129
  1237  009F83  00                 	db	0
  1238  009F84  19                 	db	25
  1239  009F85  01                 	db	1
  1240  009F86  29                 	db	41
  1241  009F87  40                 	db	64
  1242  009F88  91                 	db	145
  1243  009F89  00                 	db	0
  1244  009F8A  C0                 	db	192
  1245  009F8B                     __end_of_hid_rpt01:
  1246                           	opt stack 0
  1247  009F8B                     _sd003:
  1248                           	opt stack 0
  1249  009F8B  1A                 	db	26
  1250  009F8C  03                 	db	3
  1251  009F8D  0031               	dw	49
  1252  009F8F  0032               	dw	50
  1253  009F91  0033               	dw	51
  1254  009F93  0034               	dw	52
  1255  009F95  0035               	dw	53
  1256  009F97  0036               	dw	54
  1257  009F99  0037               	dw	55
  1258  009F9B  0038               	dw	56
  1259  009F9D  0039               	dw	57
  1260  009F9F  0030               	dw	48
  1261  009FA1  0039               	dw	57
  1262  009FA3  0039               	dw	57
  1263  009FA5                     __end_of_sd003:
  1264                           	opt stack 0
  1265  009FA5                     _device_dsc:
  1266                           	opt stack 0
  1267  009FA5  12                 	db	18
  1268  009FA6  01                 	db	1
  1269  009FA7  0200               	dw	512
  1270  009FA9  00                 	db	0
  1271  009FAA  00                 	db	0
  1272  009FAB  00                 	db	0
  1273  009FAC  08                 	db	8
  1274  009FAD  04D8               	dw	1240
  1275  009FAF  F08E               	dw	61582
  1276  009FB1  0100               	dw	256
  1277  009FB3  01                 	db	1
  1278  009FB4  02                 	db	2
  1279  009FB5  00                 	db	0
  1280  009FB6  01                 	db	1
  1281  009FB7                     __end_of_device_dsc:
  1282                           	opt stack 0
  1283  009FB7                     _bootloader_filename:
  1284                           	opt stack 0
  1285  009FB7  46                 	db	70
  1286  009FB8  49                 	db	73
  1287  009FB9  52                 	db	82
  1288  009FBA  4D                 	db	77
  1289  009FBB  57                 	db	87
  1290  009FBC  41                 	db	65
  1291  009FBD  52                 	db	82
  1292  009FBE  45                 	db	69
  1293  009FBF  00                 	db	0
  1294  009FC0                     __end_of_bootloader_filename:
  1295                           	opt stack 0
  1296  009FC0                     _flash_command_pagesize_528:
  1297                           	opt stack 0
  1298  009FC0  3D                 	db	61
  1299  009FC1  2A                 	db	42
  1300  009FC2  80                 	db	128
  1301  009FC3  A7                 	db	167
  1302  009FC4                     __end_of_flash_command_pagesize_528:
  1303                           	opt stack 0
  1304  009FC4                     _flash_command_pagesize_512:
  1305                           	opt stack 0
  1306  009FC4  3D                 	db	61
  1307  009FC5  2A                 	db	42
  1308  009FC6  80                 	db	128
  1309  009FC7  A6                 	db	166
  1310  009FC8                     __end_of_flash_command_pagesize_512:
  1311                           	opt stack 0
  1312  009FC8                     _bootloader_extension:
  1313                           	opt stack 0
  1314  009FC8  48                 	db	72
  1315  009FC9  45                 	db	69
  1316  009FCA  58                 	db	88
  1317  009FCB  00                 	db	0
  1318  009FCC                     __end_of_bootloader_extension:
  1319                           	opt stack 0
  1320  009FCC                     _sd000:
  1321                           	opt stack 0
  1322  009FCC  04                 	db	4
  1323  009FCD  03                 	db	3
  1324  009FCE  0409               	dw	1033
  1325  009FD0                     __end_of_sd000:
  1326                           	opt stack 0
  1327  0000                     _RPINR23	set	3838
  1328  0000                     _RPOR23	set	3799
  1329  0000                     _RPINR22	set	3837
  1330  0000                     _RPOR22	set	3798
  1331  0000                     _RPOR21	set	3797
  1332  0000                     _RPINR21	set	3836
  1333  0000                     _RPINR2	set	3810
  1334  0000                     _RPINR3	set	3811
  1335  0000                     _RPINR1	set	3809
  1336  0000                     _PPSCONbits	set	3775
  1337  0000                     _ODCON3bits	set	3904
  1338  0000                     _ANCON0bits	set	3912
  1339  0000                     _UEP0bits	set	3878
  1340  0000                     _UIEbits	set	3894
  1341  0000                     _UADDR	set	3896
  1342  0000                     _UIE	set	3894
  1343  0000                     _UEIE	set	3895
  1344  0000                     _UCFG	set	3897
  1345  0000                     _UEP1	set	3879
  1346  0000                     _UEP0	set	3878
  1347  0000                     _TBLPTR	set	4086
  1348  0000                     _DMACON2bits	set	3974
  1349  0000                     _SSP2CON1bits	set	3954
  1350  0000                     _SSP2STATbits	set	3955
  1351  0000                     _INTCON	set	4082
  1352  0000                     _EECON1	set	4006
  1353  0000                     _TABLAT	set	4085
  1354  0000                     _EECON1bits	set	4006
  1355  0000                     _SSP1CON1	set	4038
  1356  0000                     _SSP1BUF	set	4041
  1357  0000                     _SSP1CON2bits	set	4037
  1358  0000                     _SSP1CON1bits	set	4038
  1359  0000                     _SSP1ADD	set	4040
  1360  0000                     _SSP1STATbits	set	4039
  1361  0000                     _LATEbits	set	3981
  1362  0000                     _TRISEbits	set	3990
  1363  0000                     _LATBbits	set	3978
  1364  0000                     _TRISBbits	set	3987
  1365  0000                     _LATDbits	set	3980
  1366  0000                     _TRISDbits	set	3989
  1367  0000                     _LATCbits	set	3979
  1368  0000                     _TRISCbits	set	3988
  1369  0000                     _T0CONbits	set	4053
  1370  0000                     _INTCON2bits	set	4081
  1371  0000                     _EECON2	set	4007
  1372  0000                     _PORTBbits	set	3969
  1373  0000                     _INTCON3bits	set	4080
  1374  0000                     _TMR0L	set	4054
  1375  0000                     _TMR0H	set	4055
  1376  0000                     _INTCONbits	set	4082
  1377  0000                     _OSCCON	set	4051
  1378  0000                     _OSCTUNEbits	set	3995
  1379  0000                     _PORTAbits	set	3968
  1380  0000                     _TRISAbits	set	3986
  1381  0000                     _LATAbits	set	3977
  1382  0000                     _PIR3bits	set	4004
  1383  0000                     _DMABCL	set	3943
  1384  0000                     _DMABCH	set	3942
  1385  0000                     _RXADDRL	set	3945
  1386  0000                     _RXADDRH	set	3944
  1387  0000                     _DMACON1bits	set	3976
  1388  0000                     _TXADDRL	set	3947
  1389  0000                     _TXADDRH	set	3946
  1390  0000                     _PORTDbits	set	3971
  1391  0000                     _USTAT	set	3940
  1392  0000                     _PIR2bits	set	4001
  1393  0000                     _UCON	set	3941
  1394  0000                     _UIRbits	set	3938
  1395  0000                     _UCONbits	set	3941
  1396  0000                     _UIR	set	3938
  1397  0000                     _UEIR	set	3939
  1398  0000                     _PIE2bits	set	4000
  1399  009FD0                     STR_12:
  1400  009FD0  68                 	db	104	;'h'
  1401  009FD1  65                 	db	101	;'e'
  1402  009FD2  6C                 	db	108	;'l'
  1403  009FD3  6C                 	db	108	;'l'
  1404  009FD4  6F                 	db	111	;'o'
  1405  009FD5  20                 	db	32
  1406  009FD6  77                 	db	119	;'w'
  1407  009FD7  6F                 	db	111	;'o'
  1408  009FD8  72                 	db	114	;'r'
  1409  009FD9  6C                 	db	108	;'l'
  1410  009FDA  64                 	db	100	;'d'
  1411  009FDB  21                 	db	33
  1412  009FDC  00                 	db	0
  1413  009FDD                     STR_9:
  1414  009FDD  53                 	db	83	;'S'
  1415  009FDE  6F                 	db	111	;'o'
  1416  009FDF  6C                 	db	108	;'l'
  1417  009FE0  61                 	db	97	;'a'
  1418  009FE1  72                 	db	114	;'r'
  1419  009FE2  43                 	db	67	;'C'
  1420  009FE3  68                 	db	104	;'h'
  1421  009FE4  61                 	db	97	;'a'
  1422  009FE5  72                 	db	114	;'r'
  1423  009FE6  67                 	db	103	;'g'
  1424  009FE7  72                 	db	114	;'r'
  1425  009FE8  00                 	db	0
  1426  009FE9                     STR_10:
  1427  009FE9  46                 	db	70	;'F'
  1428  009FEA  49                 	db	73	;'I'
  1429  009FEB  4C                 	db	76	;'L'
  1430  009FEC  45                 	db	69	;'E'
  1431  009FED  20                 	db	32
  1432  009FEE  20                 	db	32
  1433  009FEF  20                 	db	32
  1434  009FF0  20                 	db	32
  1435  009FF1  00                 	db	0
  1436  009FF2                     STR_1:
  1437  009FF2  4D                 	db	77	;'M'
  1438  009FF3  53                 	db	83	;'S'
  1439  009FF4  44                 	db	68	;'D'
  1440  009FF5  4F                 	db	79	;'O'
  1441  009FF6  53                 	db	83	;'S'
  1442  009FF7  35                 	db	53	;'5'
  1443  009FF8  2E                 	db	46
  1444  009FF9  30                 	db	48	;'0'
  1445  009FFA  00                 	db	0
  1446  009FFB                     STR_11:
  1447  009FFB  54                 	db	84	;'T'
  1448  009FFC  58                 	db	88	;'X'
  1449  009FFD  54                 	db	84	;'T'
  1450  009FFE  00                 	db	0
  1451  0000                     
  1452                           ; #config settings
  1453  009FFF  00                 	db	0	; dummy byte at the end
  1454  0000                     
  1455                           	psect	cinit
  1456  006FBA                     __pcinit:
  1457                           	opt stack 0
  1458  006FBA                     start_initialization:
  1459                           	opt stack 0
  1460  006FBA                     __initialization:
  1461                           	opt stack 0
  1462                           
  1463                           ; Initialize objects allocated to BANK1 (37 bytes)
  1464                           ; load TBLPTR registers with __pidataBANK1
  1465  006FBA  0E8E               	movlw	low __pidataBANK1
  1466  006FBC  6EF6               	movwf	tblptrl,c
  1467  006FBE  0E8B               	movlw	high __pidataBANK1
  1468  006FC0  6EF7               	movwf	tblptrh,c
  1469  006FC2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1470  006FC4  6EF8               	movwf	tblptru,c
  1471  006FC6  EE01  F0B3         	lfsr	0,__pdataBANK1
  1472  006FCA  EE10 F025          	lfsr	1,37
  1473  006FCE                     copy_data0:
  1474  006FCE  0009               	tblrd		*+
  1475  006FD0  CFF5 FFEE          	movff	tablat,postinc0
  1476  006FD4  50E5               	movf	postdec1,w,c
  1477  006FD6  50E1               	movf	fsr1l,w,c
  1478  006FD8  E1FA               	bnz	copy_data0
  1479                           
  1480                           ; Initialize objects allocated to BANK0 (1 bytes)
  1481                           ; load TBLPTR registers with __pidataBANK0
  1482  006FDA  0ED4               	movlw	low __pidataBANK0
  1483  006FDC  6EF6               	movwf	tblptrl,c
  1484  006FDE  0E8F               	movlw	high __pidataBANK0
  1485  006FE0  6EF7               	movwf	tblptrh,c
  1486  006FE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1487  006FE4  6EF8               	movwf	tblptru,c
  1488  006FE6  0009               	tblrd		*+	;fetch initializer
  1489  006FE8  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1490                           
  1491                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1492  006FEC  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1493  006FF0  EE12 F000          	lfsr	1,512
  1494  006FF4                     clear_0:
  1495  006FF4  6AEE               	clrf	postinc0,c
  1496  006FF6  50E5               	movf	postdec1,w,c
  1497  006FF8  50E1               	movf	fsr1l,w,c
  1498  006FFA  E1FC               	bnz	clear_0
  1499  006FFC  50E2               	movf	fsr1h,w,c
  1500  006FFE  E1FA               	bnz	clear_0
  1501                           
  1502                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1503  007000  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1504  007004  EE14 F000          	lfsr	1,1024
  1505  007008                     clear_1:
  1506  007008  6AEE               	clrf	postinc0,c
  1507  00700A  50E5               	movf	postdec1,w,c
  1508  00700C  50E1               	movf	fsr1l,w,c
  1509  00700E  E1FC               	bnz	clear_1
  1510  007010  50E2               	movf	fsr1h,w,c
  1511  007012  E1FA               	bnz	clear_1
  1512                           
  1513                           ; Clear objects allocated to BANK3 (192 bytes)
  1514  007014  EE03  F000         	lfsr	0,__pbssBANK3
  1515  007018  0EC0               	movlw	192
  1516  00701A                     clear_2:
  1517  00701A  6AEE               	clrf	postinc0,c
  1518  00701C  06E8               	decf	wreg,f,c
  1519  00701E  E1FD               	bnz	clear_2
  1520                           
  1521                           ; Clear objects allocated to BANK2 (194 bytes)
  1522  007020  EE02  F000         	lfsr	0,__pbssBANK2
  1523  007024  0EC2               	movlw	194
  1524  007026                     clear_3:
  1525  007026  6AEE               	clrf	postinc0,c
  1526  007028  06E8               	decf	wreg,f,c
  1527  00702A  E1FD               	bnz	clear_3
  1528                           
  1529                           ; Clear objects allocated to BANK1 (179 bytes)
  1530  00702C  EE01  F000         	lfsr	0,__pbssBANK1
  1531  007030  0EB3               	movlw	179
  1532  007032                     clear_4:
  1533  007032  6AEE               	clrf	postinc0,c
  1534  007034  06E8               	decf	wreg,f,c
  1535  007036  E1FD               	bnz	clear_4
  1536                           
  1537                           ; Clear objects allocated to BANK0 (58 bytes)
  1538  007038  EE00  F0C5         	lfsr	0,__pbssBANK0
  1539  00703C  0E3A               	movlw	58
  1540  00703E                     clear_5:
  1541  00703E  6AEE               	clrf	postinc0,c
  1542  007040  06E8               	decf	wreg,f,c
  1543  007042  E1FD               	bnz	clear_5
  1544  007044                     end_of_initialization:
  1545                           	opt stack 0
  1546  007044                     __end_of__initialization:
  1547                           	opt stack 0
  1548  007044  0100               	movlb	0
  1549  007046  EF36  F01D         	goto	_main	;jump to C main() function
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           postdec1	equ	0xFE5
  1557                           fsr1h	equ	0xFE2
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	bssBANK0
  1561  0000C5                     __pbssBANK0:
  1562                           	opt stack 0
  1563  0000C5                     _os:
  1564                           	opt stack 0
  1565  0000C5                     	ds	6
  1566  0000CB                     _inPipes:
  1567                           	opt stack 0
  1568  0000CB                     	ds	6
  1569  0000D1                     _pBDTEntryIn:
  1570                           	opt stack 0
  1571  0000D1                     	ds	6
  1572  0000D7                     _hex_file_offset:
  1573                           	opt stack 0
  1574  0000D7                     	ds	4
  1575  0000DB                     _TransferLength:
  1576                           	opt stack 0
  1577  0000DB                     	ds	2
  1578  0000DD                     _USBMSDInHandle:
  1579                           	opt stack 0
  1580  0000DD                     	ds	2
  1581  0000DF                     _USBMSDOutHandle:
  1582                           	opt stack 0
  1583  0000DF                     	ds	2
  1584  0000E1                     _pBDTEntryEP0OutNext:
  1585                           	opt stack 0
  1586  0000E1                     	ds	2
  1587  0000E3                     _pBDTEntryEP0OutCurrent:
  1588                           	opt stack 0
  1589  0000E3                     	ds	2
  1590  0000E5                     _power_state:
  1591                           	opt stack 0
  1592  0000E5                     	ds	1
  1593  0000E6                     _userInterfaceStatus:
  1594                           	opt stack 0
  1595  0000E6                     	ds	1
  1596  0000E7                     _MSDHostNoData:
  1597                           	opt stack 0
  1598  0000E7                     	ds	1
  1599  0000E8                     _SoftDetach:
  1600                           	opt stack 0
  1601  0000E8                     	ds	1
  1602  0000E9                     _MSDRetryAttempt:
  1603                           	opt stack 0
  1604  0000E9                     	ds	1
  1605  0000EA                     _MSDWriteState:
  1606                           	opt stack 0
  1607  0000EA                     	ds	1
  1608  0000EB                     _MSDReadState:
  1609                           	opt stack 0
  1610  0000EB                     	ds	1
  1611  0000EC                     _MSDCommandState:
  1612                           	opt stack 0
  1613  0000EC                     	ds	1
  1614  0000ED                     _MSD_State:
  1615                           	opt stack 0
  1616  0000ED                     	ds	1
  1617  0000EE                     _USBDeferOUTDataStagePackets:
  1618                           	opt stack 0
  1619  0000EE                     	ds	1
  1620  0000EF                     _USBDeferINDataStagePackets:
  1621                           	opt stack 0
  1622  0000EF                     	ds	1
  1623  0000F0                     _USBStatusStageEnabledFlag2:
  1624                           	opt stack 0
  1625  0000F0                     	ds	1
  1626  0000F1                     _USBStatusStageEnabledFlag1:
  1627                           	opt stack 0
  1628  0000F1                     	ds	1
  1629  0000F2                     _USBDeferStatusStagePacket:
  1630                           	opt stack 0
  1631  0000F2                     	ds	1
  1632  0000F3                     _USBStatusStageTimeoutCounter:
  1633                           	opt stack 0
  1634  0000F3                     	ds	1
  1635  0000F4                     _endpoint_number:
  1636                           	opt stack 0
  1637  0000F4                     	ds	1
  1638  0000F5                     _RemoteWakeup:
  1639                           	opt stack 0
  1640  0000F5                     	ds	1
  1641  0000F6                     _controlTransferState:
  1642                           	opt stack 0
  1643  0000F6                     	ds	1
  1644  0000F7                     _shortPacketStatus:
  1645                           	opt stack 0
  1646  0000F7                     	ds	1
  1647  0000F8                     _USBDeviceState:
  1648                           	opt stack 0
  1649  0000F8                     	ds	1
  1650  0000F9                     _fast_read_cluster_number:
  1651                           	opt stack 0
  1652  0000F9                     	ds	2
  1653  0000FB                     _fast_read_cluster:
  1654                           	opt stack 0
  1655  0000FB                     	ds	2
  1656  0000FD                     _USTATcopy:
  1657                           	opt stack 0
  1658  0000FD                     	ds	1
  1659  0000FE                     _USBActiveConfiguration:
  1660                           	opt stack 0
  1661  0000FE                     	ds	1
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           
  1672                           	psect	dataBANK0
  1673  0000FF                     __pdataBANK0:
  1674                           	opt stack 0
  1675  0000FF                     _file_number:
  1676                           	opt stack 0
  1677  0000FF                     	ds	1
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           
  1688                           	psect	bssBANK1
  1689  000100                     __pbssBANK1:
  1690                           	opt stack 0
  1691  000100                     _gblCBW:
  1692                           	opt stack 0
  1693  000100                     	ds	31
  1694  00011F                     _gblSenseData:
  1695                           	opt stack 0
  1696  00011F                     	ds	18
  1697  000131                     _outPipes:
  1698                           	opt stack 0
  1699  000131                     	ds	8
  1700  000139                     _communicationSettings:
  1701                           	opt stack 0
  1702  000139                     	ds	7
  1703  000140                     _pBDTEntryOut:
  1704                           	opt stack 0
  1705  000140                     	ds	6
  1706  000146                     _extended_linear_address:
  1707                           	opt stack 0
  1708  000146                     	ds	4
  1709  00014A                     _hex_file_size:
  1710                           	opt stack 0
  1711  00014A                     	ds	4
  1712  00014E                     _file_maximum_address:
  1713                           	opt stack 0
  1714  00014E                     	ds	4
  1715  000152                     _file_minimum_address:
  1716                           	opt stack 0
  1717  000152                     	ds	4
  1718  000156                     _gblBLKLen:
  1719                           	opt stack 0
  1720  000156                     	ds	4
  1721  00015A                     _gblNumBLKS:
  1722                           	opt stack 0
  1723  00015A                     	ds	4
  1724  00015E                     _LBA:
  1725                           	opt stack 0
  1726  00015E                     	ds	4
  1727  000162                     _USB1msTickCount:
  1728                           	opt stack 0
  1729  000162                     	ds	4
  1730  000166                     _config_external:
  1731                           	opt stack 0
  1732  000166                     	ds	3
  1733  000169                     _config_internal:
  1734                           	opt stack 0
  1735  000169                     	ds	3
  1736  00016C                     _ep_data_out:
  1737                           	opt stack 0
  1738  00016C                     	ds	3
  1739  00016F                     _ep_data_in:
  1740                           	opt stack 0
  1741  00016F                     	ds	3
  1742  000172                     _FileAddress:
  1743                           	opt stack 0
  1744  000172                     	ds	2
  1745  000174                     _flash_pages_written:
  1746                           	opt stack 0
  1747  000174                     	ds	2
  1748  000176                     _total_hex_file_entries:
  1749                           	opt stack 0
  1750  000176                     	ds	2
  1751  000178                     _hex_file_entries:
  1752                           	opt stack 0
  1753  000178                     	ds	2
  1754  00017A                     _startup_timer:
  1755                           	opt stack 0
  1756  00017A                     	ds	2
  1757  00017C                     _system_ui_inactive_count:
  1758                           	opt stack 0
  1759  00017C                     	ds	2
  1760  00017E                     _USBInHandle:
  1761                           	opt stack 0
  1762  00017E                     	ds	2
  1763  000180                     _USBOutHandle:
  1764                           	opt stack 0
  1765  000180                     	ds	2
  1766  000182                     _gblMediaPresent:
  1767                           	opt stack 0
  1768  000182                     	ds	2
  1769  000184                     _MSBBufferIndex:
  1770                           	opt stack 0
  1771  000184                     	ds	2
  1772  000186                     _ptrNextData:
  1773                           	opt stack 0
  1774  000186                     	ds	2
  1775  000188                     _pDst:
  1776                           	opt stack 0
  1777  000188                     	ds	2
  1778  00018A                     _active_configuration:
  1779                           	opt stack 0
  1780  00018A                     	ds	1
  1781  00018B                     _start_from_byte_next:
  1782                           	opt stack 0
  1783  00018B                     	ds	1
  1784  00018C                     _last_error:
  1785                           	opt stack 0
  1786  00018C                     	ds	1
  1787  00018D                     _i2c_frequency:
  1788                           	opt stack 0
  1789  00018D                     	ds	1
  1790  00018E                     _MSDCBWValid:
  1791                           	opt stack 0
  1792  00018E                     	ds	1
  1793  00018F                     _gblCBWLength:
  1794                           	opt stack 0
  1795  00018F                     	ds	1
  1796  000190                     _USBTicksSinceSuspendEnd:
  1797                           	opt stack 0
  1798  000190                     	ds	1
  1799  000191                     _BothEP0OutUOWNsSet:
  1800                           	opt stack 0
  1801  000191                     	ds	1
  1802  000192                     _USBBusIsSuspended:
  1803                           	opt stack 0
  1804  000192                     	ds	1
  1805  000193                     _hex_file_entry:
  1806                           	opt stack 0
  1807  000193                     	ds	23
  1808  0001AA                     _mediaInformation:
  1809                           	opt stack 0
  1810  0001AA                     	ds	5
  1811  0001AF                     _USBAlternateInterface:
  1812                           	opt stack 0
  1813  0001AF                     	ds	2
  1814  0001B1                     _active_protocol:
  1815                           	opt stack 0
  1816  0001B1                     	ds	1
  1817  0001B2                     _idle_rate:
  1818                           	opt stack 0
  1819  0001B2                     	ds	1
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           postdec1	equ	0xFE5
  1827                           fsr1h	equ	0xFE2
  1828                           fsr1l	equ	0xFE1
  1829                           
  1830                           	psect	dataBANK1
  1831  0001B3                     __pdataBANK1:
  1832                           	opt stack 0
  1833  0001B3                     _LUN:
  1834                           	opt stack 0
  1835  0001B3                     	ds	20
  1836  0001C7                     i2c_display_send_init_sequence@F6808:
  1837                           	opt stack 0
  1838  0001C7                     	ds	9
  1839  0001D0                     	ds	8
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           postinc0	equ	0xFEE
  1845                           wreg	equ	0xFE8
  1846                           postdec1	equ	0xFE5
  1847                           fsr1h	equ	0xFE2
  1848                           fsr1l	equ	0xFE1
  1849                           
  1850                           	psect	bssBANK2
  1851  000200                     __pbssBANK2:
  1852                           	opt stack 0
  1853  000200                     _display_content:
  1854                           	opt stack 0
  1855  000200                     	ds	80
  1856  000250                     _ReceivedDataBuffer:
  1857                           	opt stack 0
  1858  000250                     	ds	64
  1859  000290                     _file_buffer:
  1860                           	opt stack 0
  1861  000290                     	ds	50
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postdec1	equ	0xFE5
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           
  1872                           	psect	bssBANK3
  1873  000300                     __pbssBANK3:
  1874                           	opt stack 0
  1875  000300                     __spi_external_rx_buffer:
  1876                           	opt stack 0
  1877  000300                     	ds	64
  1878  000340                     __spi_external_tx_buffer:
  1879                           	opt stack 0
  1880  000340                     	ds	64
  1881  000380                     _ToSendDataBuffer:
  1882                           	opt stack 0
  1883  000380                     	ds	64
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           postdec1	equ	0xFE5
  1891                           fsr1h	equ	0xFE2
  1892                           fsr1l	equ	0xFE1
  1893                           
  1894                           	psect	bssBIGRAMlh
  1895  000800                     __pbssBIGRAMlh:
  1896                           	opt stack 0
  1897  000800                     _pageBuffer:
  1898                           	opt stack 0
  1899  000800                     	ds	1024
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           postdec1	equ	0xFE5
  1907                           fsr1h	equ	0xFE2
  1908                           fsr1l	equ	0xFE1
  1909                           
  1910                           	psect	bssBIGRAMll
  1911  0003C0                     __pbssBIGRAMll:
  1912                           	opt stack 0
  1913  0003C0                     _buffer:
  1914                           	opt stack 0
  1915  0003C0                     	ds	512
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           postinc0	equ	0xFEE
  1921                           wreg	equ	0xFE8
  1922                           postdec1	equ	0xFE5
  1923                           fsr1h	equ	0xFE2
  1924                           fsr1l	equ	0xFE1
  1925                           
  1926                           	psect	cstackBANK0
  1927  000060                     __pcstackBANK0:
  1928                           	opt stack 0
  1929  000060                     fat_create_file@number_of_clusters:
  1930                           	opt stack 0
  1931  000060                     fat_read_from_file_fast@sector:
  1932                           	opt stack 0
  1933  000060                     fat_resize_file@old_number_of_clusters:
  1934                           	opt stack 0
  1935  000060                     fat_modify_file@sector:
  1936                           	opt stack 0
  1937  000060                     __parse_file_rename@data:
  1938                           	opt stack 0
  1939                           
  1940                           ; 2 bytes @ 0x0
  1941  000060                     	ds	2
  1942  000062                     fat_modify_file@file_number:
  1943                           	opt stack 0
  1944  000062                     fat_create_file@first_cluster:
  1945                           	opt stack 0
  1946  000062                     fat_read_from_file_fast@working_cluster:
  1947                           	opt stack 0
  1948  000062                     fat_resize_file@new_number_of_clusters:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0x2
  1952  000062                     	ds	1
  1953  000063                     fat_modify_file@return_code:
  1954                           	opt stack 0
  1955                           
  1956                           ; 1 bytes @ 0x3
  1957  000063                     	ds	1
  1958  000064                     fat_create_file@file_number:
  1959                           	opt stack 0
  1960  000064                     fat_read_from_file_fast@offset:
  1961                           	opt stack 0
  1962  000064                     fat_resize_file@first_cluster:
  1963                           	opt stack 0
  1964  000064                     fat_modify_file@cluster:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x4
  1968  000064                     	ds	1
  1969  000065                     fat_create_file@root_entry:
  1970                           	opt stack 0
  1971                           
  1972                           ; 32 bytes @ 0x5
  1973  000065                     	ds	1
  1974  000066                     fat_resize_file@file_number:
  1975                           	opt stack 0
  1976  000066                     fat_read_from_file_fast@needed_cluster:
  1977                           	opt stack 0
  1978  000066                     fat_modify_file@offset:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x6
  1982  000066                     	ds	1
  1983  000067                     fat_resize_file@root:
  1984                           	opt stack 0
  1985                           
  1986                           ; 32 bytes @ 0x7
  1987  000067                     	ds	1
  1988  000068                     fat_read_from_file_fast@read_length:
  1989                           	opt stack 0
  1990  000068                     fat_modify_file@number_of_bytes:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x8
  1994  000068                     	ds	2
  1995  00006A                     fat_read_from_file_fast@position:
  1996                           	opt stack 0
  1997  00006A                     fat_modify_file@position:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0xA
  2001  00006A                     	ds	4
  2002  00006E                     ??__bootloader_verify_file:
  2003  00006E                     ??__bootloader_program:
  2004  00006E                     fat_read_from_file@start_byte:
  2005                           	opt stack 0
  2006  00006E                     fat_modify_file@root:
  2007                           	opt stack 0
  2008                           
  2009                           ; 32 bytes @ 0xE
  2010  00006E                     	ds	4
  2011  000072                     fat_read_from_file@length:
  2012                           	opt stack 0
  2013                           
  2014                           ; 4 bytes @ 0x12
  2015  000072                     	ds	4
  2016  000076                     fat_read_from_file@data:
  2017                           	opt stack 0
  2018  000076                     __bootloader_program@buffer:
  2019                           	opt stack 0
  2020  000076                     __bootloader_verify_file@root:
  2021                           	opt stack 0
  2022                           
  2023                           ; 32 bytes @ 0x16
  2024  000076                     	ds	2
  2025  000078                     fat_read_from_file@file_number:
  2026                           	opt stack 0
  2027  000078                     __bootloader_program@entry_page:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x18
  2031  000078                     	ds	1
  2032  000079                     fat_read_from_file@cluster:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x19
  2036  000079                     	ds	1
  2037  00007A                     __bootloader_program@address_within_page:
  2038                           	opt stack 0
  2039                           
  2040                           ; 2 bytes @ 0x1A
  2041  00007A                     	ds	1
  2042  00007B                     fat_read_from_file@cluster_number:
  2043                           	opt stack 0
  2044                           
  2045                           ; 2 bytes @ 0x1B
  2046  00007B                     	ds	1
  2047  00007C                     __bootloader_program@root:
  2048                           	opt stack 0
  2049                           
  2050                           ; 32 bytes @ 0x1C
  2051  00007C                     	ds	1
  2052  00007D                     fat_read_from_file@return_code:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0x1D
  2056  00007D                     	ds	1
  2057  00007E                     fat_read_from_file@root:
  2058                           	opt stack 0
  2059                           
  2060                           ; 32 bytes @ 0x1E
  2061  00007E                     	ds	16
  2062  00008E                     fat_append_to_file@new_file_size:
  2063                           	opt stack 0
  2064                           
  2065                           ; 4 bytes @ 0x2E
  2066  00008E                     	ds	4
  2067  000092                     fat_append_to_file@return_code:
  2068                           	opt stack 0
  2069                           
  2070                           ; 1 bytes @ 0x32
  2071  000092                     	ds	1
  2072  000093                     fat_append_to_file@old_file_size:
  2073                           	opt stack 0
  2074                           
  2075                           ; 4 bytes @ 0x33
  2076  000093                     	ds	3
  2077  000096                     __bootloader_verify_file@rec_counter:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x36
  2081  000096                     	ds	1
  2082  000097                     fat_append_to_file@file_number:
  2083                           	opt stack 0
  2084  000097                     __bootloader_verify_file@return_value:
  2085                           	opt stack 0
  2086                           
  2087                           ; 4 bytes @ 0x37
  2088  000097                     	ds	1
  2089  000098                     __parse_command_long@data:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0x38
  2093  000098                     	ds	2
  2094  00009A                     __parse_command_long@length:
  2095                           	opt stack 0
  2096                           
  2097                           ; 1 bytes @ 0x3A
  2098  00009A                     	ds	1
  2099  00009B                     api_parse@inBuffer:
  2100                           	opt stack 0
  2101  00009B                     __bootloader_verify_file@address32:
  2102                           	opt stack 0
  2103                           
  2104                           ; 4 bytes @ 0x3B
  2105  00009B                     	ds	1
  2106  00009C                     __bootloader_program@return_value:
  2107                           	opt stack 0
  2108                           
  2109                           ; 4 bytes @ 0x3C
  2110  00009C                     	ds	1
  2111  00009D                     api_parse@receivedDataLength:
  2112                           	opt stack 0
  2113                           
  2114                           ; 1 bytes @ 0x3D
  2115  00009D                     	ds	1
  2116  00009E                     ??_api_parse:
  2117  00009E                     __fill_buffer_read_file@inBuffer:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x3E
  2121  00009E                     	ds	2
  2122  0000A0                     api_parse@idx:
  2123                           	opt stack 0
  2124  0000A0                     __fill_buffer_read_file@outBuffer:
  2125                           	opt stack 0
  2126  0000A0                     __bootloader_program@address32:
  2127                           	opt stack 0
  2128                           
  2129                           ; 4 bytes @ 0x40
  2130  0000A0                     	ds	2
  2131  0000A2                     ??__fill_buffer_read_file:
  2132                           
  2133                           ; 1 bytes @ 0x42
  2134  0000A2                     	ds	2
  2135  0000A4                     __bootloader_program@start_from_byte:
  2136                           	opt stack 0
  2137                           
  2138                           ; 1 bytes @ 0x44
  2139  0000A4                     	ds	1
  2140  0000A5                     __bootloader_program@cntr:
  2141                           	opt stack 0
  2142                           
  2143                           ; 2 bytes @ 0x45
  2144  0000A5                     	ds	1
  2145  0000A6                     __fill_buffer_read_file@file_size:
  2146                           	opt stack 0
  2147                           
  2148                           ; 4 bytes @ 0x46
  2149  0000A6                     	ds	1
  2150  0000A7                     __bootloader_program@page_to_write:
  2151                           	opt stack 0
  2152                           
  2153                           ; 2 bytes @ 0x47
  2154  0000A7                     	ds	3
  2155  0000AA                     __fill_buffer_read_file@data_length:
  2156                           	opt stack 0
  2157                           
  2158                           ; 4 bytes @ 0x4A
  2159  0000AA                     	ds	4
  2160  0000AE                     __fill_buffer_read_file@start:
  2161                           	opt stack 0
  2162                           
  2163                           ; 4 bytes @ 0x4E
  2164  0000AE                     	ds	4
  2165  0000B2                     api_prepare@inBuffer:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0x52
  2169  0000B2                     	ds	2
  2170  0000B4                     api_prepare@outBuffer:
  2171                           	opt stack 0
  2172                           
  2173                           ; 2 bytes @ 0x54
  2174  0000B4                     	ds	2
  2175  0000B6                     api_prepare@command:
  2176                           	opt stack 0
  2177                           
  2178                           ; 1 bytes @ 0x56
  2179  0000B6                     	ds	1
  2180  0000B7                     ??_APP_DeviceCustomHIDTasks:
  2181                           
  2182                           ; 1 bytes @ 0x57
  2183  0000B7                     	ds	4
  2184  0000BB                     ??_main:
  2185                           
  2186                           ; 1 bytes @ 0x5B
  2187  0000BB                     	ds	2
  2188  0000BD                     main@tx_start_addr:
  2189                           	opt stack 0
  2190                           
  2191                           ; 2 bytes @ 0x5D
  2192  0000BD                     	ds	2
  2193  0000BF                     main@bytes_transmitted:
  2194                           	opt stack 0
  2195                           
  2196                           ; 2 bytes @ 0x5F
  2197  0000BF                     	ds	2
  2198  0000C1                     main@rx_buffer:
  2199                           	opt stack 0
  2200                           
  2201                           ; 2 bytes @ 0x61
  2202  0000C1                     	ds	2
  2203  0000C3                     main@tx_buffer:
  2204                           	opt stack 0
  2205                           
  2206                           ; 2 bytes @ 0x63
  2207  0000C3                     	ds	2
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	cstackCOMRAM
  2219  000001                     __pcstackCOMRAM:
  2220                           	opt stack 0
  2221  000001                     ??_USBStdGetDscHandler:
  2222  000001                     ??_USBStdGetStatusHandler:
  2223  000001                     ??_system_delay_ms:
  2224  000001                     ??__i2c_wait_idle:
  2225  000001                     ??__display_clear:
  2226  000001                     ?_USBTransferOnePacket:
  2227                           	opt stack 0
  2228  000001                     ?_spi_get_external_rx_buffer:
  2229                           	opt stack 0
  2230  000001                     ?_spi_get_external_tx_buffer:
  2231                           	opt stack 0
  2232  000001                     ?_ExternalFlash_MediaInitialize:
  2233                           	opt stack 0
  2234  000001                     ?_ExternalFlash_SectorSizeRead:
  2235                           	opt stack 0
  2236  000001                     ?_bootloader_get_entries:
  2237                           	opt stack 0
  2238  000001                     ?_bootloader_get_total_entries:
  2239                           	opt stack 0
  2240  000001                     ?_bootloader_get_rec_address:
  2241                           	opt stack 0
  2242  000001                     ?_bootloader_get_flashPagesWritten:
  2243                           	opt stack 0
  2244  000001                     ?_strncmp:
  2245                           	opt stack 0
  2246  000001                     ?_internalFlash_pageFromAddress:
  2247                           	opt stack 0
  2248  000001                     ?_internalFlash_getBuffer:
  2249                           	opt stack 0
  2250  000001                     ?__sector_from_file_number:
  2251                           	opt stack 0
  2252  000001                     ?__offset_from_file_number:
  2253                           	opt stack 0
  2254  000001                     ?__data_sector_from_cluster:
  2255                           	opt stack 0
  2256  000001                     ?__fat_sector_from_cluster:
  2257                           	opt stack 0
  2258  000001                     ?__fat_offset_from_cluster:
  2259                           	opt stack 0
  2260  000001                     ?__cluster_from_sector_and_offset:
  2261                           	opt stack 0
  2262  000001                     ?__get_available_offset_from_buffer:
  2263                           	opt stack 0
  2264  000001                     ?__read_value_from_offset:
  2265                           	opt stack 0
  2266  000001                     ?__get_time:
  2267                           	opt stack 0
  2268  000001                     ?__get_date:
  2269                           	opt stack 0
  2270  000001                     ?_bootloader_get_rec_dataLength:
  2271                           	opt stack 0
  2272  000001                     ?___lwdiv:
  2273                           	opt stack 0
  2274  000001                     ?___lwmod:
  2275                           	opt stack 0
  2276  000001                     ?_ExternalFlash_CapacityRead:
  2277                           	opt stack 0
  2278  000001                     ?_bootloader_get_file_size:
  2279                           	opt stack 0
  2280  000001                     ?_internalFlash_addressFromPage:
  2281                           	opt stack 0
  2282  000001                     ?___lldiv:
  2283                           	opt stack 0
  2284  000001                     ?___llmod:
  2285                           	opt stack 0
  2286  000001                     USBTransferOnePacket@dir:
  2287                           	opt stack 0
  2288  000001                     USBStallEndpoint@dir:
  2289                           	opt stack 0
  2290  000001                     USBConfigureEndpoint@direction:
  2291                           	opt stack 0
  2292  000001                     USBCtrlTrfTxService@byteToSend:
  2293                           	opt stack 0
  2294  000001                     USBCtrlTrfRxService@i:
  2295                           	opt stack 0
  2296  000001                     __i2c_send@dat:
  2297                           	opt stack 0
  2298  000001                     i2c_set_frequency@frequency:
  2299                           	opt stack 0
  2300  000001                     display_get_character@position:
  2301                           	opt stack 0
  2302  000001                     __display_search@cntr:
  2303                           	opt stack 0
  2304  000001                     __display_rebooting@cntr:
  2305                           	opt stack 0
  2306  000001                     hexCharToUint8@c:
  2307                           	opt stack 0
  2308  000001                     bootloader_get_rec_data@index:
  2309                           	opt stack 0
  2310  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2311                           	opt stack 0
  2312  000001                     spi_set_configuration@configuration:
  2313                           	opt stack 0
  2314  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2315                           	opt stack 0
  2316  000001                     SYSTEM_Initialize@pll_startup_counter:
  2317                           	opt stack 0
  2318  000001                     flash_read_from_buffer@start:
  2319                           	opt stack 0
  2320  000001                     ExternalFlash_MediaInitialize@config:
  2321                           	opt stack 0
  2322  000001                     ExternalFlash_SectorSizeRead@config:
  2323                           	opt stack 0
  2324  000001                     ExternalFlash_CapacityRead@config:
  2325                           	opt stack 0
  2326  000001                     ExternalFlash_MediaDetect@config:
  2327                           	opt stack 0
  2328  000001                     ExternalFlash_WriteProtectStateGet@config:
  2329                           	opt stack 0
  2330  000001                     __data_sector_from_cluster@fat_cluster:
  2331                           	opt stack 0
  2332  000001                     __fat_sector_from_cluster@cluster:
  2333                           	opt stack 0
  2334  000001                     __fat_offset_from_cluster@cluster:
  2335                           	opt stack 0
  2336  000001                     __cluster_from_sector_and_offset@sector:
  2337                           	opt stack 0
  2338  000001                     __get_available_offset_from_buffer@minimum_offset:
  2339                           	opt stack 0
  2340  000001                     __read_value_from_offset@offset:
  2341                           	opt stack 0
  2342  000001                     __write_value_to_offset@offset:
  2343                           	opt stack 0
  2344  000001                     __get_mbr@idx:
  2345                           	opt stack 0
  2346  000001                     __get_fbr@idx:
  2347                           	opt stack 0
  2348  000001                     __get_fat@idx:
  2349                           	opt stack 0
  2350  000001                     __get_root@idx:
  2351                           	opt stack 0
  2352  000001                     __get_data@idx:
  2353                           	opt stack 0
  2354  000001                     internalFlash_addressFromPage@page:
  2355                           	opt stack 0
  2356  000001                     __fill_buffer_get_configuration@outBuffer:
  2357                           	opt stack 0
  2358  000001                     spi_tx@data:
  2359                           	opt stack 0
  2360  000001                     spi_tx_tx@command:
  2361                           	opt stack 0
  2362  000001                     spi_tx_rx@command:
  2363                           	opt stack 0
  2364  000001                     ___lwdiv@dividend:
  2365                           	opt stack 0
  2366  000001                     ___lwmod@dividend:
  2367                           	opt stack 0
  2368  000001                     memcpy@d1:
  2369                           	opt stack 0
  2370  000001                     memset@p1:
  2371                           	opt stack 0
  2372  000001                     strncmp@s1:
  2373                           	opt stack 0
  2374  000001                     __spi_init@details:
  2375                           	opt stack 0
  2376  000001                     __bootloader_check_address@address:
  2377                           	opt stack 0
  2378  000001                     internalFlash_pageFromAddress@address:
  2379                           	opt stack 0
  2380  000001                     ___lldiv@dividend:
  2381                           	opt stack 0
  2382  000001                     ___llmod@dividend:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x0
  2386  000001                     	ds	1
  2387  000002                     ??_USBConfigureEndpoint:
  2388  000002                     ??_USBStallEndpoint:
  2389  000002                     ??_display_get_character:
  2390  000002                     USBCtrlTrfRxService@byteToRead:
  2391                           	opt stack 0
  2392  000002                     USBCtrlTrfInHandler@lastDTS:
  2393                           	opt stack 0
  2394  000002                     system_delay_ms@ms:
  2395                           	opt stack 0
  2396  000002                     hexCharToUint8@ascii:
  2397                           	opt stack 0
  2398  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2399                           	opt stack 0
  2400  000002                     USBTransferOnePacket@data:
  2401                           	opt stack 0
  2402  000002                     USBStdGetStatusHandler@p:
  2403                           	opt stack 0
  2404                           
  2405                           ; 2 bytes @ 0x1
  2406  000002                     	ds	1
  2407  000003                     ??_MSDComputeDeviceInAndResidue:
  2408  000003                     ??__get_mbr:
  2409  000003                     ??__get_fbr:
  2410  000003                     ??__get_fat:
  2411  000003                     ??__get_root:
  2412  000003                     ?_hexCharsToUint16:
  2413                           	opt stack 0
  2414  000003                     system_delay_ms@cntr:
  2415                           	opt stack 0
  2416  000003                     __display_clear@row:
  2417                           	opt stack 0
  2418  000003                     __sector_from_file_number@file_number:
  2419                           	opt stack 0
  2420  000003                     __offset_from_file_number@file_number:
  2421                           	opt stack 0
  2422  000003                     hexCharsToUint8@c2:
  2423                           	opt stack 0
  2424  000003                     hexCharsToUint16@c2:
  2425                           	opt stack 0
  2426  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2427                           	opt stack 0
  2428  000003                     flash_read_from_buffer@length:
  2429                           	opt stack 0
  2430  000003                     __cluster_from_sector_and_offset@offset:
  2431                           	opt stack 0
  2432  000003                     __get_available_offset_from_buffer@buffer:
  2433                           	opt stack 0
  2434  000003                     __read_value_from_offset@buffer:
  2435                           	opt stack 0
  2436  000003                     __write_value_to_offset@buffer:
  2437                           	opt stack 0
  2438  000003                     internalFlash_erasePage@page:
  2439                           	opt stack 0
  2440  000003                     internalFlash_writePage@page:
  2441                           	opt stack 0
  2442  000003                     spi_tx@length:
  2443                           	opt stack 0
  2444  000003                     spi_tx_tx@command_length:
  2445                           	opt stack 0
  2446  000003                     spi_tx_rx@command_length:
  2447                           	opt stack 0
  2448  000003                     ___lwdiv@divisor:
  2449                           	opt stack 0
  2450  000003                     ___lwmod@divisor:
  2451                           	opt stack 0
  2452  000003                     memset@c:
  2453                           	opt stack 0
  2454  000003                     strncmp@s2:
  2455                           	opt stack 0
  2456  000003                     memcpy@s1:
  2457                           	opt stack 0
  2458                           
  2459                           ; 3 bytes @ 0x2
  2460  000003                     	ds	1
  2461  000004                     ??_hexCharsToUint8:
  2462  000004                     USBTransferOnePacket@len:
  2463                           	opt stack 0
  2464  000004                     display_get_character@line:
  2465                           	opt stack 0
  2466  000004                     __display_clear@col:
  2467                           	opt stack 0
  2468  000004                     hexCharsToUint16@c3:
  2469                           	opt stack 0
  2470  000004                     spi_init@configuration:
  2471                           	opt stack 0
  2472  000004                     __sector_from_file_number@sector:
  2473                           	opt stack 0
  2474  000004                     __offset_from_file_number@offset:
  2475                           	opt stack 0
  2476                           
  2477                           ; 2 bytes @ 0x3
  2478  000004                     	ds	1
  2479  000005                     ??_USBTransferOnePacket:
  2480  000005                     ??_spi_tx:
  2481  000005                     ??_internalFlash_pageFromAddress:
  2482  000005                     ??__get_available_offset_from_buffer:
  2483  000005                     ??__read_value_from_offset:
  2484  000005                     SYSTEM_Initialize@state:
  2485                           	opt stack 0
  2486  000005                     hexCharsToUint8@c1:
  2487                           	opt stack 0
  2488  000005                     hexCharsToUint16@c4:
  2489                           	opt stack 0
  2490  000005                     __bootloader_check_address@dataLength:
  2491                           	opt stack 0
  2492  000005                     ___lwmod@counter:
  2493                           	opt stack 0
  2494  000005                     flash_read_from_buffer@data:
  2495                           	opt stack 0
  2496  000005                     __write_value_to_offset@value:
  2497                           	opt stack 0
  2498  000005                     __fill_buffer_get_display@outBuffer:
  2499                           	opt stack 0
  2500  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2501                           	opt stack 0
  2502  000005                     spi_tx_tx@data:
  2503                           	opt stack 0
  2504  000005                     spi_tx_rx@data:
  2505                           	opt stack 0
  2506  000005                     ___lwdiv@quotient:
  2507                           	opt stack 0
  2508  000005                     memset@n:
  2509                           	opt stack 0
  2510  000005                     strncmp@len:
  2511                           	opt stack 0
  2512  000005                     internalFlash_erasePage@address:
  2513                           	opt stack 0
  2514  000005                     internalFlash_writePage@address:
  2515                           	opt stack 0
  2516  000005                     internalFlash_addressFromPage@address:
  2517                           	opt stack 0
  2518  000005                     ___lldiv@divisor:
  2519                           	opt stack 0
  2520  000005                     ___llmod@divisor:
  2521                           	opt stack 0
  2522                           
  2523                           ; 4 bytes @ 0x4
  2524  000005                     	ds	1
  2525  000006                     ??_hexCharsToUint16:
  2526  000006                     ??__bootloader_check_address:
  2527  000006                     USBStallEndpoint@ep:
  2528                           	opt stack 0
  2529  000006                     USBConfigureEndpoint@EPNum:
  2530                           	opt stack 0
  2531  000006                     hexCharsToUint8@retVal:
  2532                           	opt stack 0
  2533  000006                     __i2c_write@data:
  2534                           	opt stack 0
  2535  000006                     __i2c_read@data:
  2536                           	opt stack 0
  2537  000006                     i2c_display_write_fixed@data:
  2538                           	opt stack 0
  2539  000006                     memcpy@n:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x5
  2543  000006                     	ds	1
  2544  000007                     ??_strncmp:
  2545  000007                     ??__fill_buffer_get_bootloader_details:
  2546  000007                     ??__write_value_to_offset:
  2547  000007                     __fill_buffer_get_display@secondHalf:
  2548                           	opt stack 0
  2549  000007                     ___lwdiv@counter:
  2550                           	opt stack 0
  2551  000007                     USBStallEndpoint@p:
  2552                           	opt stack 0
  2553  000007                     USBConfigureEndpoint@handle:
  2554                           	opt stack 0
  2555  000007                     __get_available_offset_from_buffer@offset:
  2556                           	opt stack 0
  2557  000007                     fat_read_from_buffer@start:
  2558                           	opt stack 0
  2559  000007                     spi_tx_tx@data_length:
  2560                           	opt stack 0
  2561  000007                     spi_tx_rx@data_length:
  2562                           	opt stack 0
  2563  000007                     memset@p:
  2564                           	opt stack 0
  2565                           
  2566                           ; 2 bytes @ 0x6
  2567  000007                     	ds	1
  2568  000008                     ??__fill_buffer_get_display:
  2569  000008                     __i2c_write@length:
  2570                           	opt stack 0
  2571  000008                     __i2c_read@length:
  2572                           	opt stack 0
  2573  000008                     i2c_display_write_fixed@length:
  2574                           	opt stack 0
  2575  000008                     __read_value_from_offset@value:
  2576                           	opt stack 0
  2577  000008                     utoa@buf:
  2578                           	opt stack 0
  2579  000008                     memcpy@s:
  2580                           	opt stack 0
  2581                           
  2582                           ; 3 bytes @ 0x7
  2583  000008                     	ds	1
  2584  000009                     ??_spi_tx_rx:
  2585  000009                     ??_spi_tx_tx:
  2586  000009                     ??__i2c_read:
  2587  000009                     ?_internalFlash_addressWithinPage:
  2588                           	opt stack 0
  2589  000009                     USBDeviceInit@i:
  2590                           	opt stack 0
  2591  000009                     USBEnableEndpoint@options:
  2592                           	opt stack 0
  2593  000009                     USBTransferOnePacket@ep:
  2594                           	opt stack 0
  2595  000009                     MSDErrorHandler@ErrorCase:
  2596                           	opt stack 0
  2597  000009                     __i2c_write@slave_address:
  2598                           	opt stack 0
  2599  000009                     i2c_display_write_fixed@pos:
  2600                           	opt stack 0
  2601  000009                     __flash_wakeup@command:
  2602                           	opt stack 0
  2603  000009                     hexCharsToUint16@c1:
  2604                           	opt stack 0
  2605  000009                     ___llmod@counter:
  2606                           	opt stack 0
  2607  000009                     fat_read_from_buffer@length:
  2608                           	opt stack 0
  2609  000009                     internalFlash_writePage@cntr:
  2610                           	opt stack 0
  2611  000009                     internalFlash_addressWithinPage@address:
  2612                           	opt stack 0
  2613  000009                     ___lldiv@quotient:
  2614                           	opt stack 0
  2615                           
  2616                           ; 4 bytes @ 0x8
  2617  000009                     	ds	1
  2618  00000A                     MSDErrorHandler@OldMSD_State:
  2619                           	opt stack 0
  2620  00000A                     __i2c_write@cntr:
  2621                           	opt stack 0
  2622  00000A                     __bootloader_check_address@worst_case:
  2623                           	opt stack 0
  2624  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2625                           	opt stack 0
  2626  00000A                     USBEnableEndpoint@p:
  2627                           	opt stack 0
  2628  00000A                     USBTransferOnePacket@handle:
  2629                           	opt stack 0
  2630  00000A                     hexCharsToUint16@retVal:
  2631                           	opt stack 0
  2632  00000A                     utoa@val:
  2633                           	opt stack 0
  2634                           
  2635                           ; 2 bytes @ 0x9
  2636  00000A                     	ds	1
  2637  00000B                     __ic2_display_set_address@address:
  2638                           	opt stack 0
  2639  00000B                     i2c_digipot_backlight@level:
  2640                           	opt stack 0
  2641  00000B                     __bootloader_check_address@byte_status:
  2642                           	opt stack 0
  2643  00000B                     internalFlash_writePage@block_cntr:
  2644                           	opt stack 0
  2645  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2646                           	opt stack 0
  2647  00000B                     i2c_digipot_reset_on@data_array:
  2648                           	opt stack 0
  2649  00000B                     i2c_digipot_reset_off@data_array:
  2650                           	opt stack 0
  2651  00000B                     i2c_eeprom_writeByte@address:
  2652                           	opt stack 0
  2653  00000B                     fat_read_from_buffer@data:
  2654                           	opt stack 0
  2655  00000B                     memcpy@d:
  2656                           	opt stack 0
  2657  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2658                           	opt stack 0
  2659  00000B                     i2c_display_send_init_sequence@init_sequence:
  2660                           	opt stack 0
  2661                           
  2662                           ; 9 bytes @ 0xA
  2663  00000B                     	ds	1
  2664  00000C                     ??_USBMSDInit:
  2665  00000C                     ?_parseHexFileEntry:
  2666                           	opt stack 0
  2667  00000C                     USBEnableEndpoint@ep:
  2668                           	opt stack 0
  2669  00000C                     __bootloader_check_address@cntr:
  2670                           	opt stack 0
  2671  00000C                     internalFlash_writePage@byte_cntr:
  2672                           	opt stack 0
  2673  00000C                     _USBCheckMSDRequest$2319:
  2674                           	opt stack 0
  2675  00000C                     MSDTransferTerminated@handle:
  2676                           	opt stack 0
  2677  00000C                     __ic2_display_set_address@data_array:
  2678                           	opt stack 0
  2679  00000C                     i2c_digipot_backlight@data_array:
  2680                           	opt stack 0
  2681  00000C                     parseHexFileEntry@data:
  2682                           	opt stack 0
  2683  00000C                     utoa@base:
  2684                           	opt stack 0
  2685  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2686                           	opt stack 0
  2687                           
  2688                           ; 4 bytes @ 0xB
  2689  00000C                     	ds	1
  2690  00000D                     ?__flash_get_status:
  2691                           	opt stack 0
  2692  00000D                     i2c_eeprom_writeByte@data:
  2693                           	opt stack 0
  2694  00000D                     __fill_buffer_get_display@cntr:
  2695                           	opt stack 0
  2696  00000D                     ___lldiv@counter:
  2697                           	opt stack 0
  2698  00000D                     memcpy@tmp:
  2699                           	opt stack 0
  2700  00000D                     internalFlash_addressWithinPage@page:
  2701                           	opt stack 0
  2702  00000D                     __fill_buffer_read_buffer@inBuffer:
  2703                           	opt stack 0
  2704                           
  2705                           ; 2 bytes @ 0xC
  2706  00000D                     	ds	1
  2707  00000E                     ??_i2c_eeprom_writeByte:
  2708  00000E                     i2c_display_cursor@position:
  2709                           	opt stack 0
  2710  00000E                     __fill_buffer_get_display@line:
  2711                           	opt stack 0
  2712  00000E                     _USBCheckMSDRequest$2320:
  2713                           	opt stack 0
  2714  00000E                     _MSDTransferTerminated$2407:
  2715                           	opt stack 0
  2716  00000E                     utoa@v:
  2717                           	opt stack 0
  2718  00000E                     parseHexFileEntry@offset:
  2719                           	opt stack 0
  2720  00000E                     internalFlash_read@address:
  2721                           	opt stack 0
  2722                           
  2723                           ; 4 bytes @ 0xD
  2724  00000E                     	ds	1
  2725  00000F                     ??_internalFlash_addressWithinPage:
  2726  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2727                           	opt stack 0
  2728  00000F                     i2c_display_cursor@line:
  2729                           	opt stack 0
  2730  00000F                     __flash_get_status@command:
  2731                           	opt stack 0
  2732  00000F                     __fill_buffer_get_display@start_line:
  2733                           	opt stack 0
  2734  00000F                     __fill_buffer_read_buffer@outBuffer:
  2735                           	opt stack 0
  2736                           
  2737                           ; 2 bytes @ 0xE
  2738  00000F                     	ds	1
  2739  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2740                           	opt stack 0
  2741  000010                     __i2c_read@slave_address:
  2742                           	opt stack 0
  2743  000010                     i2c_display_cursor@address:
  2744                           	opt stack 0
  2745  000010                     __fill_buffer_get_display@position:
  2746                           	opt stack 0
  2747  000010                     utoa@c:
  2748                           	opt stack 0
  2749  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2750                           	opt stack 0
  2751  000010                     __flash_get_status@status:
  2752                           	opt stack 0
  2753  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0xF
  2757  000010                     	ds	1
  2758  000011                     ??__fill_buffer_read_buffer:
  2759  000011                     MSDCheckForErrorCases@DeviceNoData:
  2760                           	opt stack 0
  2761  000011                     __i2c_read@cntr:
  2762                           	opt stack 0
  2763  000011                     i2c_eeprom_writeByte@dat:
  2764                           	opt stack 0
  2765  000011                     itoa@buf:
  2766                           	opt stack 0
  2767                           
  2768                           ; 2 bytes @ 0x10
  2769  000011                     	ds	1
  2770  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2771                           	opt stack 0
  2772  000012                     i2c_eeprom_readByte@address:
  2773                           	opt stack 0
  2774  000012                     __flash_is_busy@status:
  2775                           	opt stack 0
  2776  000012                     parseHexFileEntry@hexEntry:
  2777                           	opt stack 0
  2778  000012                     internalFlash_read@data_length:
  2779                           	opt stack 0
  2780                           
  2781                           ; 2 bytes @ 0x11
  2782  000012                     	ds	1
  2783  000013                     i2c_eeprom_writeByte@slave_address:
  2784                           	opt stack 0
  2785  000013                     __fill_buffer_read_buffer@start:
  2786                           	opt stack 0
  2787  000013                     itoa@val:
  2788                           	opt stack 0
  2789  000013                     internalFlash_addressWithinPage@page_start_address:
  2790                           	opt stack 0
  2791                           
  2792                           ; 4 bytes @ 0x12
  2793  000013                     	ds	1
  2794  000014                     ??_i2c_eeprom_readByte:
  2795  000014                     ??_parseHexFileEntry:
  2796  000014                     flash_is_busy@result:
  2797                           	opt stack 0
  2798  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2799                           	opt stack 0
  2800  000014                     __flash_copy_page_to_buffer@page:
  2801                           	opt stack 0
  2802  000014                     __flash_compare_page_to_buffer@page:
  2803                           	opt stack 0
  2804  000014                     __flash_write_to_buffer@start:
  2805                           	opt stack 0
  2806  000014                     __flash_write_page_from_buffer@page:
  2807                           	opt stack 0
  2808  000014                     __flash_partial_read@page:
  2809                           	opt stack 0
  2810  000014                     internalFlash_read@buffer:
  2811                           	opt stack 0
  2812  000014                     __flash_set_page_size@command:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x13
  2816  000014                     	ds	1
  2817  000015                     __fill_buffer_get_status@outBuffer:
  2818                           	opt stack 0
  2819  000015                     __fill_buffer_read_buffer@data_length:
  2820                           	opt stack 0
  2821  000015                     itoa@base:
  2822                           	opt stack 0
  2823                           
  2824                           ; 2 bytes @ 0x14
  2825  000015                     	ds	1
  2826  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2827  000016                     __flash_copy_page_to_buffer@buffer:
  2828                           	opt stack 0
  2829  000016                     __flash_compare_page_to_buffer@buffer:
  2830                           	opt stack 0
  2831  000016                     __flash_write_page_from_buffer@buffer:
  2832                           	opt stack 0
  2833  000016                     __flash_write_to_buffer@data:
  2834                           	opt stack 0
  2835  000016                     __flash_partial_read@start:
  2836                           	opt stack 0
  2837  000016                     internalFlash_readPage@page:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x15
  2841  000016                     	ds	1
  2842  000017                     ??__flash_copy_page_to_buffer:
  2843  000017                     ??__flash_compare_page_to_buffer:
  2844  000017                     ??__flash_write_page_from_buffer:
  2845  000017                     i2c_eeprom_readByte@slave_address:
  2846                           	opt stack 0
  2847  000017                     itoa@cp:
  2848                           	opt stack 0
  2849                           
  2850                           ; 2 bytes @ 0x16
  2851  000017                     	ds	1
  2852  000018                     ??_USBStdFeatureReqHandler:
  2853  000018                     USBStdSetCfgHandler@i:
  2854                           	opt stack 0
  2855  000018                     i2c_eeprom_readByte@addr:
  2856                           	opt stack 0
  2857  000018                     __flash_set_page_size@size:
  2858                           	opt stack 0
  2859  000018                     __flash_write_to_buffer@data_length:
  2860                           	opt stack 0
  2861  000018                     __flash_partial_read@length:
  2862                           	opt stack 0
  2863  000018                     internalFlash_readPage@address:
  2864                           	opt stack 0
  2865                           
  2866                           ; 4 bytes @ 0x17
  2867  000018                     	ds	1
  2868  000019                     USBStdFeatureReqHandler@pUEP:
  2869                           	opt stack 0
  2870  000019                     __display_itoa_u16@value:
  2871                           	opt stack 0
  2872                           
  2873                           ; 4 bytes @ 0x18
  2874  000019                     	ds	1
  2875  00001A                     __flash_write_to_buffer@buffer:
  2876                           	opt stack 0
  2877  00001A                     __flash_compare_page_to_buffer@status:
  2878                           	opt stack 0
  2879  00001A                     __flash_partial_read@data:
  2880                           	opt stack 0
  2881  00001A                     __flash_copy_page_to_buffer@command:
  2882                           	opt stack 0
  2883  00001A                     __flash_write_page_from_buffer@command:
  2884                           	opt stack 0
  2885                           
  2886                           ; 4 bytes @ 0x19
  2887  00001A                     	ds	1
  2888  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2889                           	opt stack 0
  2890  00001B                     __flash_write_to_buffer@command:
  2891                           	opt stack 0
  2892                           
  2893                           ; 4 bytes @ 0x1A
  2894  00001B                     	ds	1
  2895  00001C                     ??__flash_partial_read:
  2896  00001C                     parseHexFileEntry@i:
  2897                           	opt stack 0
  2898  00001C                     USBStdFeatureReqHandler@p:
  2899                           	opt stack 0
  2900  00001C                     __flash_compare_page_to_buffer@command:
  2901                           	opt stack 0
  2902                           
  2903                           ; 4 bytes @ 0x1B
  2904  00001C                     	ds	1
  2905  00001D                     __display_itoa_u16@text:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x1C
  2909  00001D                     	ds	1
  2910  00001E                     ??_USBCtrlEPService:
  2911  00001E                     flash_copy_page_to_buffer@page:
  2912                           	opt stack 0
  2913  00001E                     flash_write_page_from_buffer@page:
  2914                           	opt stack 0
  2915                           
  2916                           ; 2 bytes @ 0x1D
  2917  00001E                     	ds	1
  2918  00001F                     ??__display_verify:
  2919  00001F                     ??__display_checked:
  2920  00001F                     __display_programming@cntr:
  2921                           	opt stack 0
  2922  00001F                     __display_done@cntr:
  2923                           	opt stack 0
  2924  00001F                     flash_write_to_buffer@start:
  2925                           	opt stack 0
  2926  00001F                     __display_itoa_u32@value:
  2927                           	opt stack 0
  2928                           
  2929                           ; 4 bytes @ 0x1E
  2930  00001F                     	ds	1
  2931  000020                     USBDeviceTasks@i:
  2932                           	opt stack 0
  2933  000020                     flash_sector_write@page:
  2934                           	opt stack 0
  2935  000020                     flash_partial_write@page:
  2936                           	opt stack 0
  2937  000020                     __flash_partial_read@command:
  2938                           	opt stack 0
  2939                           
  2940                           ; 4 bytes @ 0x1F
  2941  000020                     	ds	1
  2942  000021                     __display_verify@cntr:
  2943                           	opt stack 0
  2944  000021                     __display_checked@start:
  2945                           	opt stack 0
  2946  000021                     flash_write_to_buffer@length:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x20
  2950  000021                     	ds	1
  2951  000022                     __display_checked@cntr:
  2952                           	opt stack 0
  2953  000022                     flash_sector_write@data:
  2954                           	opt stack 0
  2955  000022                     flash_partial_write@start:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x21
  2959  000022                     	ds	1
  2960  000023                     __display_itoa_u32@text:
  2961                           	opt stack 0
  2962  000023                     flash_write_to_buffer@data:
  2963                           	opt stack 0
  2964                           
  2965                           ; 2 bytes @ 0x22
  2966  000023                     	ds	1
  2967  000024                     flash_sector_write@match:
  2968                           	opt stack 0
  2969  000024                     flash_partial_write@length:
  2970                           	opt stack 0
  2971  000024                     __flash_partial_read@address:
  2972                           	opt stack 0
  2973                           
  2974                           ; 4 bytes @ 0x23
  2975  000024                     	ds	1
  2976  000025                     ??__display_found:
  2977  000025                     __display_start@cntr:
  2978                           	opt stack 0
  2979  000025                     __display_failed@cntr:
  2980                           	opt stack 0
  2981  000025                     ExternalFlash_SectorWrite@config:
  2982                           	opt stack 0
  2983  000025                     fat_format@cntr:
  2984                           	opt stack 0
  2985  000025                     fat_write_to_buffer@start:
  2986                           	opt stack 0
  2987                           
  2988                           ; 2 bytes @ 0x24
  2989  000025                     	ds	1
  2990  000026                     flash_partial_write@data:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x25
  2994  000026                     	ds	1
  2995  000027                     __display_found@start:
  2996                           	opt stack 0
  2997  000027                     fat_write_to_buffer@length:
  2998                           	opt stack 0
  2999  000027                     __parse_format_drive@data:
  3000                           	opt stack 0
  3001  000027                     ExternalFlash_SectorWrite@sector_addr:
  3002                           	opt stack 0
  3003                           
  3004                           ; 4 bytes @ 0x26
  3005  000027                     	ds	1
  3006  000028                     __display_found@cntr:
  3007                           	opt stack 0
  3008  000028                     flash_partial_write@match:
  3009                           	opt stack 0
  3010  000028                     flash_sector_read@page:
  3011                           	opt stack 0
  3012  000028                     flash_partial_read@page:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x27
  3016  000028                     	ds	1
  3017  000029                     ??_display_prepare:
  3018  000029                     __write_root@data:
  3019                           	opt stack 0
  3020  000029                     __delete_root@sector:
  3021                           	opt stack 0
  3022  000029                     fat_write_to_buffer@data:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x28
  3026  000029                     	ds	1
  3027  00002A                     flash_sector_read@data:
  3028                           	opt stack 0
  3029  00002A                     flash_partial_read@start:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x29
  3033  00002A                     	ds	1
  3034  00002B                     display_prepare@mode:
  3035                           	opt stack 0
  3036  00002B                     ExternalFlash_SectorWrite@buffer:
  3037                           	opt stack 0
  3038  00002B                     __write_root@sector:
  3039                           	opt stack 0
  3040  00002B                     __delete_root@offset:
  3041                           	opt stack 0
  3042  00002B                     __parse_write_buffer@data:
  3043                           	opt stack 0
  3044                           
  3045                           ; 2 bytes @ 0x2A
  3046  00002B                     	ds	1
  3047  00002C                     ??_fat_get_format_status:
  3048  00002C                     ?__get_available_cluster:
  3049                           	opt stack 0
  3050  00002C                     __parse_command_short@cmd:
  3051                           	opt stack 0
  3052  00002C                     flash_partial_read@length:
  3053                           	opt stack 0
  3054  00002C                     ExternalFlash_SectorRead@config:
  3055                           	opt stack 0
  3056  00002C                     __get_available_cluster@first_sector:
  3057                           	opt stack 0
  3058  00002C                     fat_find_file@name:
  3059                           	opt stack 0
  3060                           
  3061                           ; 2 bytes @ 0x2B
  3062  00002C                     	ds	1
  3063  00002D                     ??__parse_write_buffer:
  3064  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3065                           	opt stack 0
  3066  00002D                     __delete_root@deleted_value:
  3067                           	opt stack 0
  3068  00002D                     __write_root@offset:
  3069                           	opt stack 0
  3070                           
  3071                           ; 2 bytes @ 0x2C
  3072  00002D                     	ds	1
  3073  00002E                     __delete_root@file_number:
  3074                           	opt stack 0
  3075  00002E                     flash_partial_read@data:
  3076                           	opt stack 0
  3077  00002E                     ExternalFlash_SectorWrite@page:
  3078                           	opt stack 0
  3079  00002E                     __get_available_cluster@skip_sector:
  3080                           	opt stack 0
  3081  00002E                     fat_find_file@extension:
  3082                           	opt stack 0
  3083  00002E                     fat_get_format_status@cntr:
  3084                           	opt stack 0
  3085  00002E                     __parse_write_buffer@start_byte:
  3086                           	opt stack 0
  3087  00002E                     ExternalFlash_SectorRead@sector_addr:
  3088                           	opt stack 0
  3089                           
  3090                           ; 4 bytes @ 0x2D
  3091  00002E                     	ds	1
  3092  00002F                     __write_root@file_number:
  3093                           	opt stack 0
  3094                           
  3095                           ; 1 bytes @ 0x2E
  3096  00002F                     	ds	1
  3097  000030                     ??_MSDWriteHandler:
  3098  000030                     ??_fat_find_file:
  3099  000030                     ?__read_fat:
  3100                           	opt stack 0
  3101  000030                     ?__get_first_cluster:
  3102                           	opt stack 0
  3103  000030                     __get_available_cluster@cluster:
  3104                           	opt stack 0
  3105  000030                     __root_is_available@root_sector:
  3106                           	opt stack 0
  3107  000030                     __read_fat@cluster:
  3108                           	opt stack 0
  3109  000030                     fat_get_file_information@data:
  3110                           	opt stack 0
  3111  000030                     __parse_write_buffer@number_of_bytes:
  3112                           	opt stack 0
  3113                           
  3114                           ; 2 bytes @ 0x2F
  3115  000030                     	ds	2
  3116  000032                     fat_find_file@file_number:
  3117                           	opt stack 0
  3118  000032                     ExternalFlash_SectorRead@buffer:
  3119                           	opt stack 0
  3120  000032                     __get_available_cluster@offset:
  3121                           	opt stack 0
  3122  000032                     __root_is_available@offset:
  3123                           	opt stack 0
  3124  000032                     __read_fat@sector:
  3125                           	opt stack 0
  3126  000032                     __get_first_cluster@sector:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x31
  3130  000032                     	ds	1
  3131  000033                     fat_find_file@sector:
  3132                           	opt stack 0
  3133  000033                     fat_get_file_information@root_sector:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x32
  3137  000033                     	ds	1
  3138  000034                     __root_is_available@file_number:
  3139                           	opt stack 0
  3140  000034                     ExternalFlash_SectorRead@page:
  3141                           	opt stack 0
  3142  000034                     __get_available_cluster@sector:
  3143                           	opt stack 0
  3144  000034                     __read_fat@offset:
  3145                           	opt stack 0
  3146  000034                     __get_first_cluster@offset:
  3147                           	opt stack 0
  3148                           
  3149                           ; 2 bytes @ 0x33
  3150  000034                     	ds	1
  3151  000035                     __root_is_available@first_byte:
  3152                           	opt stack 0
  3153  000035                     fat_find_file@offset:
  3154                           	opt stack 0
  3155  000035                     fat_get_file_information@offset:
  3156                           	opt stack 0
  3157                           
  3158                           ; 2 bytes @ 0x34
  3159  000035                     	ds	1
  3160  000036                     ??_MSDReadHandler:
  3161  000036                     ?__make_cluster_chain:
  3162                           	opt stack 0
  3163  000036                     ?_fat_get_file_size:
  3164                           	opt stack 0
  3165  000036                     __get_available_root_entry@file_number:
  3166                           	opt stack 0
  3167  000036                     __make_cluster_chain@first_cluster:
  3168                           	opt stack 0
  3169  000036                     __read_fat@value:
  3170                           	opt stack 0
  3171  000036                     __get_first_cluster@first_cluster:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x35
  3175  000036                     	ds	1
  3176  000037                     fat_get_file_information@file_number:
  3177                           	opt stack 0
  3178  000037                     __fill_buffer_find_file@inBuffer:
  3179                           	opt stack 0
  3180                           
  3181                           ; 2 bytes @ 0x36
  3182  000037                     	ds	1
  3183  000038                     ?__find_nth_cluster:
  3184                           	opt stack 0
  3185  000038                     __get_first_cluster@file_number:
  3186                           	opt stack 0
  3187  000038                     __find_nth_cluster@cluster:
  3188                           	opt stack 0
  3189  000038                     __make_cluster_chain@number_of_clusters:
  3190                           	opt stack 0
  3191  000038                     fat_rename_file@name:
  3192                           	opt stack 0
  3193  000038                     __fill_buffer_get_file_details@inBuffer:
  3194                           	opt stack 0
  3195                           
  3196                           ; 2 bytes @ 0x37
  3197  000038                     	ds	1
  3198  000039                     __fill_buffer_find_file@outBuffer:
  3199                           	opt stack 0
  3200                           
  3201                           ; 2 bytes @ 0x38
  3202  000039                     	ds	1
  3203  00003A                     ??_MSDProcessCommandMediaPresent:
  3204  00003A                     ??__make_cluster_chain:
  3205  00003A                     __find_nth_cluster@n:
  3206                           	opt stack 0
  3207  00003A                     fat_get_file_size@sector:
  3208                           	opt stack 0
  3209  00003A                     fat_rename_file@extension:
  3210                           	opt stack 0
  3211  00003A                     __fill_buffer_get_file_details@outBuffer:
  3212                           	opt stack 0
  3213                           
  3214                           ; 2 bytes @ 0x39
  3215  00003A                     	ds	1
  3216  00003B                     ??__fill_buffer_find_file:
  3217                           
  3218                           ; 1 bytes @ 0x3A
  3219  00003B                     	ds	1
  3220  00003C                     ??__fill_buffer_get_file_details:
  3221  00003C                     fat_rename_file@return_code:
  3222                           	opt stack 0
  3223  00003C                     _MSDProcessCommandMediaPresent$2390:
  3224                           	opt stack 0
  3225  00003C                     __find_nth_cluster@offset:
  3226                           	opt stack 0
  3227  00003C                     __make_cluster_chain@next_offset:
  3228                           	opt stack 0
  3229  00003C                     fat_get_file_size@offset:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x3B
  3233  00003C                     	ds	1
  3234  00003D                     fat_rename_file@file_number:
  3235                           	opt stack 0
  3236  00003D                     __fill_buffer_get_file_details@file_number:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0x3C
  3240  00003D                     	ds	1
  3241  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3242                           	opt stack 0
  3243  00003E                     __find_nth_cluster@sector_in_buffer:
  3244                           	opt stack 0
  3245  00003E                     __make_cluster_chain@minimum_sector:
  3246                           	opt stack 0
  3247  00003E                     fat_get_file_size@file_size:
  3248                           	opt stack 0
  3249  00003E                     fat_rename_file@root:
  3250                           	opt stack 0
  3251                           
  3252                           ; 32 bytes @ 0x3D
  3253  00003E                     	ds	1
  3254  00003F                     __fill_buffer_find_file@cntr:
  3255                           	opt stack 0
  3256  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3257                           	opt stack 0
  3258                           
  3259                           ; 4 bytes @ 0x3E
  3260  00003F                     	ds	1
  3261  000040                     __find_nth_cluster@sector:
  3262                           	opt stack 0
  3263  000040                     __make_cluster_chain@different_sector_cluster:
  3264                           	opt stack 0
  3265                           
  3266                           ; 2 bytes @ 0x3F
  3267  000040                     	ds	2
  3268  000042                     __make_cluster_chain@data_changed:
  3269                           	opt stack 0
  3270  000042                     fat_get_file_size@file_number:
  3271                           	opt stack 0
  3272  000042                     fat_read_from_file_fast@start_byte:
  3273                           	opt stack 0
  3274  000042                     fat_modify_file@start_byte:
  3275                           	opt stack 0
  3276                           
  3277                           ; 4 bytes @ 0x41
  3278  000042                     	ds	1
  3279  000043                     __make_cluster_chain@remaining_clusters:
  3280                           	opt stack 0
  3281  000043                     fat_copy_sector_to_buffer@sector:
  3282                           	opt stack 0
  3283  000043                     fat_write_sector_from_buffer@sector:
  3284                           	opt stack 0
  3285  000043                     MSDProcessCommandMediaPresent@capacity:
  3286                           	opt stack 0
  3287                           
  3288                           ; 4 bytes @ 0x42
  3289  000043                     	ds	2
  3290  000045                     ??_fat_copy_sector_to_buffer:
  3291  000045                     ??_fat_write_sector_from_buffer:
  3292  000045                     __make_cluster_chain@sector:
  3293                           	opt stack 0
  3294                           
  3295                           ; 2 bytes @ 0x44
  3296  000045                     	ds	1
  3297  000046                     fat_modify_file@length:
  3298                           	opt stack 0
  3299  000046                     fat_read_from_file_fast@length:
  3300                           	opt stack 0
  3301                           
  3302                           ; 4 bytes @ 0x45
  3303  000046                     	ds	1
  3304  000047                     MSDProcessCommandMediaPresent@i:
  3305                           	opt stack 0
  3306  000047                     __make_cluster_chain@sector_in_buffer:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x46
  3310  000047                     	ds	1
  3311  000048                     ??_MSDProcessCommand:
  3312  000048                     fat_modify_file@data:
  3313                           	opt stack 0
  3314                           
  3315                           ; 2 bytes @ 0x47
  3316  000048                     	ds	1
  3317  000049                     __make_cluster_chain@offset:
  3318                           	opt stack 0
  3319  000049                     fat_copy_sector_to_buffer@file_size:
  3320                           	opt stack 0
  3321  000049                     fat_write_sector_from_buffer@file_size:
  3322                           	opt stack 0
  3323                           
  3324                           ; 4 bytes @ 0x48
  3325  000049                     	ds	1
  3326  00004A                     ??_fat_modify_file:
  3327  00004A                     fat_read_from_file_fast@data:
  3328                           	opt stack 0
  3329                           
  3330                           ; 2 bytes @ 0x49
  3331  00004A                     	ds	1
  3332  00004B                     __make_cluster_chain@next_cluster:
  3333                           	opt stack 0
  3334                           
  3335                           ; 2 bytes @ 0x4A
  3336  00004B                     	ds	1
  3337  00004C                     fat_read_from_file_fast@cluster:
  3338                           	opt stack 0
  3339                           
  3340                           ; 2 bytes @ 0x4B
  3341  00004C                     	ds	1
  3342  00004D                     ??_MSDTasks:
  3343  00004D                     fat_create_file@name:
  3344                           	opt stack 0
  3345  00004D                     fat_delete_file@first_cluster:
  3346                           	opt stack 0
  3347  00004D                     fat_copy_sector_to_buffer@number_of_clusters:
  3348                           	opt stack 0
  3349  00004D                     fat_write_sector_from_buffer@number_of_clusters:
  3350                           	opt stack 0
  3351  00004D                     fat_resize_file@new_file_size:
  3352                           	opt stack 0
  3353                           
  3354                           ; 4 bytes @ 0x4C
  3355  00004D                     	ds	1
  3356  00004E                     _MSDTasks$2372:
  3357                           	opt stack 0
  3358  00004E                     fat_read_from_file_fast@cluster_number:
  3359                           	opt stack 0
  3360                           
  3361                           ; 2 bytes @ 0x4D
  3362  00004E                     	ds	1
  3363  00004F                     fat_delete_file@file_number:
  3364                           	opt stack 0
  3365  00004F                     fat_create_file@extension:
  3366                           	opt stack 0
  3367  00004F                     fat_copy_sector_to_buffer@physical_sector:
  3368                           	opt stack 0
  3369  00004F                     fat_write_sector_from_buffer@physical_sector:
  3370                           	opt stack 0
  3371                           
  3372                           ; 2 bytes @ 0x4E
  3373  00004F                     	ds	1
  3374  000050                     ??_fat_read_from_file_fast:
  3375  000050                     _MSDTasks$2373:
  3376                           	opt stack 0
  3377  000050                     __parse_file_delete@data:
  3378                           	opt stack 0
  3379                           
  3380                           ; 2 bytes @ 0x4F
  3381  000050                     	ds	1
  3382  000051                     ??_fat_resize_file:
  3383  000051                     fat_copy_sector_to_buffer@cluster:
  3384                           	opt stack 0
  3385  000051                     fat_write_sector_from_buffer@cluster:
  3386                           	opt stack 0
  3387  000051                     fat_create_file@size:
  3388                           	opt stack 0
  3389                           
  3390                           ; 4 bytes @ 0x50
  3391  000051                     	ds	1
  3392  000052                     MSDTasks@i:
  3393                           	opt stack 0
  3394                           
  3395                           ; 1 bytes @ 0x51
  3396  000052                     	ds	1
  3397  000053                     fat_copy_sector_to_buffer@file_number:
  3398                           	opt stack 0
  3399  000053                     fat_write_sector_from_buffer@file_number:
  3400                           	opt stack 0
  3401                           
  3402                           ; 1 bytes @ 0x52
  3403  000053                     	ds	1
  3404  000054                     __parse_sector_to_buffer@data:
  3405                           	opt stack 0
  3406  000054                     __parse_buffer_to_sector@data:
  3407                           	opt stack 0
  3408                           
  3409                           ; 2 bytes @ 0x53
  3410  000054                     	ds	1
  3411  000055                     ??_fat_create_file:
  3412  000055                     __parse_file_resize@data:
  3413                           	opt stack 0
  3414                           
  3415                           ; 2 bytes @ 0x54
  3416  000055                     	ds	1
  3417  000056                     ??__parse_sector_to_buffer:
  3418  000056                     ??__parse_buffer_to_sector:
  3419  000056                     fat_append_to_file@number_of_bytes:
  3420                           	opt stack 0
  3421  000056                     __parse_file_modify@data:
  3422                           	opt stack 0
  3423                           
  3424                           ; 2 bytes @ 0x55
  3425  000056                     	ds	1
  3426  000057                     ??__parse_file_resize:
  3427  000057                     __parse_sector_to_buffer@sector:
  3428                           	opt stack 0
  3429  000057                     __parse_buffer_to_sector@sector:
  3430                           	opt stack 0
  3431                           
  3432                           ; 2 bytes @ 0x56
  3433  000057                     	ds	1
  3434  000058                     ??__parse_file_modify:
  3435  000058                     fat_append_to_file@data:
  3436                           	opt stack 0
  3437  000058                     __parse_file_resize@file_size:
  3438                           	opt stack 0
  3439                           
  3440                           ; 4 bytes @ 0x57
  3441  000058                     	ds	1
  3442  000059                     __parse_file_create@data:
  3443                           	opt stack 0
  3444  000059                     __parse_file_modify@number_of_bytes:
  3445                           	opt stack 0
  3446                           
  3447                           ; 2 bytes @ 0x58
  3448  000059                     	ds	1
  3449  00005A                     __parse_file_append@data:
  3450                           	opt stack 0
  3451                           
  3452                           ; 2 bytes @ 0x59
  3453  00005A                     	ds	1
  3454  00005B                     ??__parse_file_create:
  3455  00005B                     __parse_file_modify@start_byte:
  3456                           	opt stack 0
  3457                           
  3458                           ; 4 bytes @ 0x5A
  3459  00005B                     	ds	1
  3460  00005C                     ??__parse_file_append:
  3461  00005C                     ??_fat_read_from_file:
  3462  00005C                     bootloader_run@timeslot:
  3463                           	opt stack 0
  3464  00005C                     __parse_file_create@file_size:
  3465                           	opt stack 0
  3466                           
  3467                           ; 4 bytes @ 0x5B
  3468  00005C                     	ds	2
  3469  00005E                     fat_rename_file@cntr:
  3470                           	opt stack 0
  3471                           
  3472                           ; 1 bytes @ 0x5D
  3473  00005E                     	ds	1
  3474  00005F                     
  3475                           ; 1 bytes @ 0x5E
  3476  00005F                     	ds	1
  3477  000060                     tblptru	equ	0xFF8
  3478                           tblptrh	equ	0xFF7
  3479                           tblptrl	equ	0xFF6
  3480                           tablat	equ	0xFF5
  3481                           postinc0	equ	0xFEE
  3482                           wreg	equ	0xFE8
  3483                           postdec1	equ	0xFE5
  3484                           fsr1h	equ	0xFE2
  3485                           fsr1l	equ	0xFE1
  3486                           
  3487                           ; 1 bytes @ 0x5F
  3488 ;;
  3489 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3490 ;;
  3491 ;; *************** function _main *****************
  3492 ;; Defined at:
  3493 ;;		line 54 in file "main.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;		None
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  tx_buffer       2   99[BANK0 ] PTR unsigned char 
  3498 ;;		 -> _spi_external_tx_buffer(64), 
  3499 ;;  rx_buffer       2   97[BANK0 ] PTR unsigned char 
  3500 ;;		 -> _spi_external_rx_buffer(64), 
  3501 ;;  bytes_transm    2   95[BANK0 ] unsigned int 
  3502 ;;  tx_start_add    2   93[BANK0 ] unsigned int 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3516 ;;Total ram usage:       10 bytes
  3517 ;; Hardware stack levels required when called:   13
  3518 ;; This function calls:
  3519 ;;		_APP_DeviceCustomHIDTasks
  3520 ;;		_APP_DeviceMSDTasks
  3521 ;;		_SYSTEM_Initialize
  3522 ;;		_USBDeviceInit
  3523 ;;		_USBDeviceTasks
  3524 ;;		__normal_mode
  3525 ;;		_api_parse
  3526 ;;		_api_prepare
  3527 ;;		_bootloader_run
  3528 ;;		_display_prepare
  3529 ;;		_display_update
  3530 ;;		_jump_to_main_program
  3531 ;;		_spi_get_external_rx_buffer
  3532 ;;		_spi_get_external_tx_buffer
  3533 ;;		_system_full_init
  3534 ;;		_system_minimal_init
  3535 ;;		_system_minimal_init_undo
  3536 ;;		_timer_pseudo_isr
  3537 ;;		_ui_get_status
  3538 ;;		_ui_run
  3539 ;; This function is called by:
  3540 ;;		Startup code after reset
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text0
  3545  003A6C                     __ptext0:
  3546                           	opt stack 0
  3547  003A6C                     _main:
  3548                           	opt stack 18
  3549                           
  3550                           ;incstack = 0
  3551  003A6C  0004               	clrwdt		;# 
  3552                           
  3553                           ;main.c: 65: rx_buffer = spi_get_external_rx_buffer();
  3554  003A6E  EC86  F047         	call	_spi_get_external_rx_buffer	;wreg free
  3555  003A72  C001  F0C1         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3556  003A76  C002  F0C2         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3557                           
  3558                           ;main.c: 66: tx_buffer = spi_get_external_tx_buffer();
  3559  003A7A  EC81  F047         	call	_spi_get_external_tx_buffer	;wreg free
  3560  003A7E  C001  F0C3         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3561  003A82  C002  F0C4         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3562                           
  3563                           ;main.c: 67: tx_start_addr = (uint16_t) tx_buffer;
  3564  003A86  C0C3  F0BD         	movff	main@tx_buffer,main@tx_start_addr
  3565  003A8A  C0C4  F0BE         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3566                           
  3567                           ;main.c: 71: system_minimal_init();
  3568  003A8E  EC06  F047         	call	_system_minimal_init	;wreg free
  3569                           
  3570                           ;main.c: 74: if(_normal_mode())
  3571  003A92  EC04  F03E         	call	__normal_mode	;wreg free
  3572  003A96  0900               	iorlw	0
  3573  003A98  B4D8               	btfsc	status,2,c
  3574  003A9A  D004               	goto	l893
  3575                           
  3576                           ;main.c: 75: {;main.c: 77: system_minimal_init_undo();
  3577  003A9C  EC55  F047         	call	_system_minimal_init_undo	;wreg free
  3578                           
  3579                           ;main.c: 78: jump_to_main_program();
  3580  003AA0  ECD3  F047         	call	_jump_to_main_program	;wreg free
  3581  003AA4                     l893:
  3582                           
  3583                           ;main.c: 79: };main.c: 83: system_full_init();
  3584  003AA4  EC33  F03E         	call	_system_full_init	;wreg free
  3585                           
  3586                           ;main.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3587  003AA8  0E00               	movlw	0
  3588  003AAA  EC6B  F040         	call	_SYSTEM_Initialize
  3589                           
  3590                           ;main.c: 88: USBDeviceInit();
  3591  003AAE  EC4C  F01F         	call	_USBDeviceInit	;wreg free
  3592  003AB2                     l894:
  3593  003AB2  0004               	clrwdt		;# 
  3594                           
  3595                           ;main.c: 101: USBDeviceTasks();
  3596  003AB4  ECFD  F01A         	call	_USBDeviceTasks	;wreg free
  3597                           
  3598                           ;main.c: 102: APP_DeviceMSDTasks();
  3599  003AB8  EC31  F047         	call	_APP_DeviceMSDTasks	;wreg free
  3600                           
  3601                           ;main.c: 103: APP_DeviceCustomHIDTasks();
  3602  003ABC  EC3E  F033         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3603                           
  3604                           ;main.c: 107: timer_pseudo_isr();
  3605  003AC0  ECA5  F043         	call	_timer_pseudo_isr	;wreg free
  3606                           
  3607                           ;main.c: 110: if(PORTDbits.RD2)
  3608  003AC4  A483               	btfss	3971,2,c	;volatile
  3609  003AC6  D039               	goto	l896
  3610                           
  3611                           ;main.c: 111: {;main.c: 114: bytes_transmitted = TXADDRH;
  3612  003AC8  CF6A F0BF          	movff	3946,main@bytes_transmitted	;volatile
  3613  003ACC  0100               	movlb	0	; () banked
  3614  003ACE  6BC0               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;main.c: 115: bytes_transmitted <<= 8;
  3618  003AD0  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3619  003AD2  6FC0               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3620  003AD4  6BBF               	clrf	main@bytes_transmitted& (0+255),b
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;main.c: 116: bytes_transmitted |= TXADDRL;
  3624  003AD6  506B               	movf	3947,w,c	;volatile
  3625  003AD8  13BF               	iorwf	main@bytes_transmitted& (0+255),f,b
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;main.c: 117: --bytes_transmitted;
  3629  003ADA  07BF               	decf	main@bytes_transmitted& (0+255),f,b
  3630  003ADC  A0D8               	btfss	status,0,c
  3631  003ADE  07C0               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;main.c: 118: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3635  003AE0  EC81  F047         	call	_spi_get_external_tx_buffer	;wreg free
  3636  003AE4  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3637  003AE6  0100               	movlb	0	; () banked
  3638  003AE8  5FBF               	subwf	main@bytes_transmitted& (0+255),f,b
  3639  003AEA  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3640  003AEC  5BC0               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;main.c: 121: if(bytes_transmitted>0)
  3644  003AEE  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3645  003AF0  11C0               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3646  003AF2  B4D8               	btfsc	status,2,c
  3647  003AF4  D022               	goto	l896
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;main.c: 122: {;main.c: 124: DMACON1bits.DMAEN = 0;
  3651  003AF6  9088               	bcf	3976,0,c	;volatile
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;main.c: 127: api_prepare(rx_buffer, tx_buffer);
  3655  003AF8  C0C1  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3656  003AFC  C0C2  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3657  003B00  C0C3  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3658  003B04  C0C4  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3659  003B08  ECEF  F01D         	call	_api_prepare	;wreg free
  3660                           
  3661                           ;main.c: 128: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3662  003B0C  C0C1  F09B         	movff	main@rx_buffer,api_parse@inBuffer
  3663  003B10  C0C2  F09C         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3664  003B14  C0BF  F09D         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3665  003B18  EC11  F02E         	call	_api_parse	;wreg free
  3666                           
  3667                           ;main.c: 131: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3668  003B1C  0100               	movlb	0	; () banked
  3669  003B1E  51C4               	movf	(main@tx_buffer+1)& (0+255),w,b
  3670  003B20  6E6A               	movwf	3946,c	;volatile
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;main.c: 132: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3674  003B22  C0C3  FF6B         	movff	main@tx_buffer,3947	;volatile
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;main.c: 135: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3678  003B26  51C2               	movf	(main@rx_buffer+1)& (0+255),w,b
  3679  003B28  6E68               	movwf	3944,c	;volatile
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;main.c: 136: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3683  003B2A  C0C1  FF69         	movff	main@rx_buffer,3945	;volatile
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;main.c: 139: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3687  003B2E  0E00               	movlw	0
  3688  003B30  6E66               	movwf	3942,c	;volatile
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;main.c: 140: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3692  003B32  0E3F               	movlw	63
  3693  003B34  6E67               	movwf	3943,c	;volatile
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 143: PIR3bits.SSP2IF = 0;
  3697  003B36  9EA4               	bcf	4004,7,c	;volatile
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;main.c: 145: DMACON1bits.DMAEN = 1;
  3701  003B38  8088               	bsf	3976,0,c	;volatile
  3702  003B3A                     l896:
  3703                           
  3704                           ;main.c: 146: };main.c: 147: };main.c: 151: if(!os.done)
  3705                           
  3706                           ; BSR set to: 0
  3707                           
  3708                           ; BSR set to: 0
  3709  003B3A  0100               	movlb	0	; () banked
  3710  003B3C  51C8               	movf	(_os+3)& (0+255),w,b	;volatile
  3711  003B3E  A4D8               	btfss	status,2,c
  3712  003B40  D7B8               	goto	l894
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;main.c: 152: {;main.c: 154: ui_run();
  3716  003B42  EC6B  F024         	call	_ui_run	;wreg free
  3717                           
  3718                           ;main.c: 159: switch(os.timeSlot&0b00000111)
  3719  003B46  D025               	goto	l898
  3720  003B48                     
  3721                           ;main.c: 162: bootloader_run(0);
  3722  003B48  0E00               	movlw	0
  3723  003B4A  EC10  F03D         	call	_bootloader_run
  3724                           
  3725                           ;main.c: 163: break;
  3726  003B4E  D043               	goto	l900
  3727  003B50                     
  3728                           ;main.c: 166: bootloader_run(1);
  3729  003B50  0E01               	movlw	1
  3730  003B52  EC10  F03D         	call	_bootloader_run
  3731                           
  3732                           ;main.c: 167: break;
  3733  003B56  D03F               	goto	l900
  3734  003B58                     
  3735                           ;main.c: 170: bootloader_run(2);
  3736  003B58  0E02               	movlw	2
  3737  003B5A  EC10  F03D         	call	_bootloader_run
  3738                           
  3739                           ;main.c: 171: break;
  3740  003B5E  D03B               	goto	l900
  3741  003B60                     
  3742                           ;main.c: 174: bootloader_run(3);
  3743  003B60  0E03               	movlw	3
  3744  003B62  EC10  F03D         	call	_bootloader_run
  3745                           
  3746                           ;main.c: 175: break;
  3747  003B66  D037               	goto	l900
  3748  003B68                     
  3749                           ;main.c: 178: bootloader_run(4);
  3750  003B68  0E04               	movlw	4
  3751  003B6A  EC10  F03D         	call	_bootloader_run
  3752                           
  3753                           ;main.c: 179: break;
  3754  003B6E  D033               	goto	l900
  3755  003B70                     
  3756                           ;main.c: 182: bootloader_run(5);
  3757  003B70  0E05               	movlw	5
  3758  003B72  EC10  F03D         	call	_bootloader_run
  3759                           
  3760                           ;main.c: 183: break;
  3761  003B76  D02F               	goto	l900
  3762  003B78                     
  3763                           ;main.c: 186: display_prepare(os.display_mode);
  3764  003B78  0100               	movlb	0	; () banked
  3765  003B7A  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  3766  003B7C  ECA8  F02D         	call	_display_prepare
  3767                           
  3768                           ;main.c: 187: break;
  3769  003B80  D02A               	goto	l900
  3770  003B82                     
  3771                           ;main.c: 190: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3772  003B82  ECDF  F047         	call	_ui_get_status	;wreg free
  3773  003B86  0A05               	xorlw	5
  3774  003B88  A4D8               	btfss	status,2,c
  3775  003B8A  D025               	goto	l900
  3776                           
  3777                           ;main.c: 191: {;main.c: 192: display_update();
  3778  003B8C  EC42  F03C         	call	_display_update	;wreg free
  3779                           
  3780                           ;main.c: 195: }
  3781                           
  3782                           ;main.c: 193: };main.c: 194: break;
  3783  003B90  D022               	goto	l900
  3784  003B92                     l898:
  3785  003B92  0100               	movlb	0	; () banked
  3786  003B94  51C7               	movf	(_os+2)& (0+255),w,b	;volatile
  3787  003B96  0B07               	andlw	7
  3788  003B98  6FBB               	movwf	??_main& (0+255),b
  3789  003B9A  6BBC               	clrf	(??_main+1)& (0+255),b
  3790                           
  3791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3792                           ; Switch size 1, requested type "space"
  3793                           ; Number of cases is 1, Range of values is 0 to 0
  3794                           ; switch strategies available:
  3795                           ; Name         Instructions Cycles
  3796                           ; simple_byte            4     3 (average)
  3797                           ;	Chosen strategy is simple_byte
  3798  003B9C  51BC               	movf	(??_main+1)& (0+255),w,b
  3799  003B9E  0A00               	xorlw	0	; case 0
  3800  003BA0  A4D8               	btfss	status,2,c
  3801  003BA2  D019               	goto	l900
  3802                           
  3803                           ; BSR set to: 0
  3804                           ; Switch size 1, requested type "space"
  3805                           ; Number of cases is 8, Range of values is 0 to 7
  3806                           ; switch strategies available:
  3807                           ; Name         Instructions Cycles
  3808                           ; simple_byte           25    13 (average)
  3809                           ;	Chosen strategy is simple_byte
  3810  003BA4  51BB               	movf	??_main& (0+255),w,b
  3811  003BA6  0A00               	xorlw	0	; case 0
  3812  003BA8  B4D8               	btfsc	status,2,c
  3813  003BAA  D7CE               	goto	l899
  3814  003BAC  0A01               	xorlw	1	; case 1
  3815  003BAE  B4D8               	btfsc	status,2,c
  3816  003BB0  D7CF               	goto	l901
  3817  003BB2  0A03               	xorlw	3	; case 2
  3818  003BB4  B4D8               	btfsc	status,2,c
  3819  003BB6  D7D0               	goto	l902
  3820  003BB8  0A01               	xorlw	1	; case 3
  3821  003BBA  B4D8               	btfsc	status,2,c
  3822  003BBC  D7D1               	goto	l903
  3823  003BBE  0A07               	xorlw	7	; case 4
  3824  003BC0  B4D8               	btfsc	status,2,c
  3825  003BC2  D7D2               	goto	l904
  3826  003BC4  0A01               	xorlw	1	; case 5
  3827  003BC6  B4D8               	btfsc	status,2,c
  3828  003BC8  D7D3               	goto	l905
  3829  003BCA  0A03               	xorlw	3	; case 6
  3830  003BCC  B4D8               	btfsc	status,2,c
  3831  003BCE  D7D4               	goto	l906
  3832  003BD0  0A01               	xorlw	1	; case 7
  3833  003BD2  B4D8               	btfsc	status,2,c
  3834  003BD4  D7D6               	goto	l907
  3835  003BD6                     l900:
  3836                           
  3837                           ;main.c: 196: os.done = 1;
  3838                           
  3839                           ; BSR set to: 0
  3840  003BD6  0E01               	movlw	1
  3841  003BD8  0100               	movlb	0	; () banked
  3842  003BDA  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  3843                           
  3844                           ; BSR set to: 0
  3845                           
  3846                           ; BSR set to: 0
  3847  003BDC  D76A               	goto	l894
  3848  003BDE                     __end_of_main:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           postdec1	equ	0xFE5
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           status	equ	0xFD8
  3860                           
  3861 ;; *************** function _ui_run *****************
  3862 ;; Defined at:
  3863 ;;		line 110 in file "ui.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        0 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    9
  3884 ;; This function calls:
  3885 ;;		__ui_encoder
  3886 ;;		_i2c_digipot_backlight
  3887 ;;		_i2c_digipot_reset_off
  3888 ;;		_i2c_digipot_reset_on
  3889 ;;		_i2c_display_send_init_sequence
  3890 ;;		_system_encoder_enable
  3891 ;;		_ui_init
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text1
  3898  0048D6                     __ptext1:
  3899                           	opt stack 0
  3900  0048D6                     _ui_run:
  3901                           	opt stack 21
  3902                           
  3903                           ;ui.c: 112: switch(userInterfaceStatus)
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;incstack = 0
  3907  0048D6  D06D               	goto	l1319
  3908  0048D8                     
  3909                           ;ui.c: 116: if (os.buttonCount!=0)
  3910  0048D8  0100               	movlb	0	; () banked
  3911  0048DA  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  3912  0048DC  B4D8               	btfsc	status,2,c
  3913  0048DE  0012               	return	
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3917  0048E0  EC27  F047         	call	_ui_init	;wreg free
  3918                           
  3919                           ;ui.c: 119: os.buttonCount = 0;
  3920  0048E4  0E00               	movlw	0
  3921  0048E6  0100               	movlb	0	; () banked
  3922  0048E8  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;ui.c: 120: };ui.c: 121: break;
  3926  0048EA  0012               	return	
  3927  0048EC                     l1323:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;ui.c: 125: LATDbits.LD0 = 0;
  3931  0048EC  908C               	bcf	3980,0,c	;volatile
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;ui.c: 127: system_ui_inactive_count = 0;
  3935  0048EE  0E00               	movlw	0
  3936  0048F0  0101               	movlb	1	; () banked
  3937  0048F2  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3938  0048F4  0E00               	movlw	0
  3939  0048F6  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3940                           
  3941                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3942  0048F8  0E02               	movlw	2
  3943  0048FA  0100               	movlb	0	; () banked
  3944  0048FC  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3945                           
  3946                           ;ui.c: 129: break;
  3947  0048FE  0012               	return	
  3948  004900                     
  3949                           ; BSR set to: 0
  3950                           ;ui.c: 133: i2c_digipot_reset_on();
  3951                           
  3952                           ; BSR set to: 0
  3953  004900  EC10  F046         	call	_i2c_digipot_reset_on	;wreg free
  3954                           
  3955                           ;ui.c: 135: system_ui_inactive_count = 0;
  3956  004904  0E00               	movlw	0
  3957  004906  0101               	movlb	1	; () banked
  3958  004908  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3959  00490A  0E00               	movlw	0
  3960  00490C  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3964  00490E  0E03               	movlw	3
  3965  004910  0100               	movlb	0	; () banked
  3966  004912  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3967                           
  3968                           ;ui.c: 137: break;
  3969  004914  0012               	return	
  3970  004916                     
  3971                           ; BSR set to: 0
  3972                           ;ui.c: 140: ++system_ui_inactive_count;
  3973                           
  3974                           ; BSR set to: 0
  3975  004916  0101               	movlb	1	; () banked
  3976  004918  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3977  00491A  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3978                           
  3979                           ; BSR set to: 1
  3980                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3981  00491C  517D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3982  00491E  E104               	bnz	u12830
  3983  004920  0E04               	movlw	4
  3984  004922  5D7C               	subwf	_system_ui_inactive_count& (0+255),w,b
  3985  004924  A0D8               	btfss	status,0,c
  3986  004926  0012               	return	
  3987  004928                     u12830:
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3991  004928  EC21  F046         	call	_i2c_digipot_reset_off	;wreg free
  3992                           
  3993                           ;ui.c: 145: system_ui_inactive_count = 0;
  3994  00492C  0E00               	movlw	0
  3995  00492E  0101               	movlb	1	; () banked
  3996  004930  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3997  004932  0E00               	movlw	0
  3998  004934  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4002  004936  0E04               	movlw	4
  4003  004938  0100               	movlb	0	; () banked
  4004  00493A  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;ui.c: 147: };ui.c: 148: break;
  4008  00493C  0012               	return	
  4009  00493E                     
  4010                           ; BSR set to: 0
  4011                           ;ui.c: 152: i2c_display_send_init_sequence();
  4012                           
  4013                           ; BSR set to: 0
  4014  00493E  ECD0  F044         	call	_i2c_display_send_init_sequence	;wreg free
  4015                           
  4016                           ;ui.c: 154: i2c_digipot_backlight(150);
  4017  004942  0E96               	movlw	150
  4018  004944  EC7B  F045         	call	_i2c_digipot_backlight
  4019                           
  4020                           ;ui.c: 156: system_encoder_enable();
  4021  004948  EC4D  F047         	call	_system_encoder_enable	;wreg free
  4022                           
  4023                           ;ui.c: 158: system_ui_inactive_count = 0;
  4024  00494C  0E00               	movlw	0
  4025  00494E  0101               	movlb	1	; () banked
  4026  004950  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4027  004952  0E00               	movlw	0
  4028  004954  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4029                           
  4030                           ; BSR set to: 1
  4031                           ;ui.c: 159: startup_timer = 0;
  4032  004956  0E00               	movlw	0
  4033  004958  6F7B               	movwf	(_startup_timer+1)& (0+255),b
  4034  00495A  0E00               	movlw	0
  4035  00495C  6F7A               	movwf	_startup_timer& (0+255),b
  4036                           
  4037                           ; BSR set to: 1
  4038                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4039  00495E  0E05               	movlw	5
  4040  004960  0100               	movlb	0	; () banked
  4041  004962  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4042                           
  4043                           ;ui.c: 161: break;
  4044  004964  0012               	return	
  4045  004966                     
  4046                           ; BSR set to: 0
  4047                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  4048                           
  4049                           ; BSR set to: 0
  4050  004966  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4051  004968  A4D8               	btfss	status,2,c
  4052  00496A  D00B               	goto	l1330
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  4056  00496C  0101               	movlb	1	; () banked
  4057  00496E  4B7A               	infsnz	_startup_timer& (0+255),f,b
  4058  004970  2B7B               	incf	(_startup_timer+1)& (0+255),f,b
  4059                           
  4060                           ; BSR set to: 1
  4061                           ;ui.c: 167: if(startup_timer==250)
  4062  004972  0EFA               	movlw	250
  4063  004974  197A               	xorwf	_startup_timer& (0+255),w,b
  4064  004976  117B               	iorwf	(_startup_timer+1)& (0+255),w,b
  4065  004978  A4D8               	btfss	status,2,c
  4066  00497A  D003               	goto	l1330
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4070  00497C  0E10               	movlw	16
  4071  00497E  0100               	movlb	0	; () banked
  4072  004980  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4073  004982                     l1330:
  4074                           
  4075                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  4076                           
  4077                           ; BSR set to: 0
  4078  004982  0100               	movlb	0	; () banked
  4079  004984  51C5               	movf	_os& (0+255),w,b	;volatile
  4080  004986  A4D8               	btfss	status,2,c
  4081  004988  D00C               	goto	l1331
  4082                           
  4083                           ; BSR set to: 0
  4084  00498A  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4085  00498C  A4D8               	btfss	status,2,c
  4086  00498E  D009               	goto	l1331
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  4090  004990  0101               	movlb	1	; () banked
  4091  004992  297C               	incf	_system_ui_inactive_count& (0+255),w,b
  4092  004994  E103               	bnz	u12880
  4093  004996  297D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  4094  004998  B4D8               	btfsc	status,2,c
  4095  00499A  0012               	return	
  4096  00499C                     u12880:
  4097                           
  4098                           ; BSR set to: 1
  4099                           ;ui.c: 175: ++system_ui_inactive_count;
  4100  00499C  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4101  00499E  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4102                           
  4103                           ; BSR set to: 1
  4104                           ;ui.c: 176: }
  4105  0049A0  0012               	return	
  4106  0049A2                     l1331:
  4107                           
  4108                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  4109                           
  4110                           ; BSR set to: 1
  4111  0049A2  0E00               	movlw	0
  4112  0049A4  0101               	movlb	1	; () banked
  4113  0049A6  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4114  0049A8  0E00               	movlw	0
  4115  0049AA  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4116                           
  4117                           ; BSR set to: 1
  4118                           ;ui.c: 180: _ui_encoder();
  4119  0049AC  ECF1  F02B         	call	__ui_encoder	;wreg free
  4120                           
  4121                           ;ui.c: 183: }
  4122                           
  4123                           ;ui.c: 181: };ui.c: 182: break;
  4124  0049B0  0012               	return	
  4125  0049B2                     l1319:
  4126  0049B2  0100               	movlb	0	; () banked
  4127  0049B4  51E6               	movf	_userInterfaceStatus& (0+255),w,b
  4128                           
  4129                           ; Switch size 1, requested type "space"
  4130                           ; Number of cases is 6, Range of values is 0 to 5
  4131                           ; switch strategies available:
  4132                           ; Name         Instructions Cycles
  4133                           ; simple_byte           19    10 (average)
  4134                           ;	Chosen strategy is simple_byte
  4135  0049B6  0A00               	xorlw	0	; case 0
  4136  0049B8  B4D8               	btfsc	status,2,c
  4137  0049BA  D78E               	goto	l1320
  4138  0049BC  0A01               	xorlw	1	; case 1
  4139  0049BE  B4D8               	btfsc	status,2,c
  4140  0049C0  D795               	goto	l1323
  4141  0049C2  0A03               	xorlw	3	; case 2
  4142  0049C4  B4D8               	btfsc	status,2,c
  4143  0049C6  D79C               	goto	l1324
  4144  0049C8  0A01               	xorlw	1	; case 3
  4145  0049CA  B4D8               	btfsc	status,2,c
  4146  0049CC  D7A4               	goto	l1325
  4147  0049CE  0A07               	xorlw	7	; case 4
  4148  0049D0  B4D8               	btfsc	status,2,c
  4149  0049D2  D7B5               	goto	l1327
  4150  0049D4  0A01               	xorlw	1	; case 5
  4151  0049D6  A4D8               	btfss	status,2,c
  4152  0049D8  0012               	return	
  4153  0049DA  D7C5               	goto	l1328
  4154  0049DC                     __end_of_ui_run:
  4155                           	opt stack 0
  4156                           tblptru	equ	0xFF8
  4157                           tblptrh	equ	0xFF7
  4158                           tblptrl	equ	0xFF6
  4159                           tablat	equ	0xFF5
  4160                           postinc0	equ	0xFEE
  4161                           wreg	equ	0xFE8
  4162                           postdec1	equ	0xFE5
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _system_encoder_enable *****************
  4168 ;; Defined at:
  4169 ;;		line 96 in file "os.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_ui_run
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text2
  4197  008E9A                     __ptext2:
  4198                           	opt stack 0
  4199  008E9A                     _system_encoder_enable:
  4200                           	opt stack 29
  4201                           
  4202                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4203                           
  4204                           ;incstack = 0
  4205  008E9A  92F0               	bcf	intcon3,1,c	;volatile
  4206                           
  4207                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4208  008E9C  94F0               	bcf	intcon3,2,c	;volatile
  4209                           
  4210                           ;os.c: 103: os.encoderCount = 0;
  4211  008E9E  0E00               	movlw	0
  4212  008EA0  0100               	movlb	0	; () banked
  4213  008EA2  6FC5               	movwf	_os& (0+255),b	;volatile
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4217  008EA4  88F0               	bsf	intcon3,4,c	;volatile
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4221  008EA6  8AF0               	bsf	intcon3,5,c	;volatile
  4222                           
  4223                           ; BSR set to: 0
  4224  008EA8  0012               	return		;funcret
  4225  008EAA                     __end_of_system_encoder_enable:
  4226                           	opt stack 0
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           intcon3	equ	0xFF0
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           postdec1	equ	0xFE5
  4235                           fsr1h	equ	0xFE2
  4236                           fsr1l	equ	0xFE1
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _i2c_display_send_init_sequence *****************
  4240 ;; Defined at:
  4241 ;;		line 207 in file "i2c.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;Total ram usage:        9 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    2
  4262 ;; This function calls:
  4263 ;;		__i2c_write
  4264 ;;		_i2c_set_frequency
  4265 ;; This function is called by:
  4266 ;;		_ui_run
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text3
  4271  0089A0                     __ptext3:
  4272                           	opt stack 0
  4273  0089A0                     _i2c_display_send_init_sequence:
  4274                           	opt stack 27
  4275                           
  4276                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280  0089A0  EE21  F0C7         	lfsr	2,i2c_display_send_init_sequence@F6808
  4281  0089A4  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4282  0089A8  0E08               	movlw	8
  4283  0089AA                     u12101:
  4284  0089AA  CFDB FFE3          	movff	plusw2,plusw1
  4285  0089AE  06E8               	decf	wreg,f,c
  4286  0089B0  E2FC               	bc	u12101
  4287                           
  4288                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4289  0089B2  0E00               	movlw	0
  4290  0089B4  EC12  F045         	call	_i2c_set_frequency
  4291                           
  4292                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4293  0089B8  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4294  0089BA  6E06               	movwf	__i2c_write@data,c
  4295  0089BC  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4296  0089BE  6E07               	movwf	__i2c_write@data+1,c
  4297  0089C0  0E09               	movlw	9
  4298  0089C2  6E08               	movwf	__i2c_write@length,c
  4299  0089C4  0E78               	movlw	120
  4300  0089C6  EC85  F041         	call	__i2c_write
  4301  0089CA  0012               	return		;funcret
  4302  0089CC                     __end_of_i2c_display_send_init_sequence:
  4303                           	opt stack 0
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           intcon3	equ	0xFF0
  4309                           postinc0	equ	0xFEE
  4310                           wreg	equ	0xFE8
  4311                           postdec1	equ	0xFE5
  4312                           plusw1	equ	0xFE3
  4313                           fsr1h	equ	0xFE2
  4314                           fsr1l	equ	0xFE1
  4315                           plusw2	equ	0xFDB
  4316                           status	equ	0xFD8
  4317                           
  4318 ;; *************** function _i2c_digipot_reset_on *****************
  4319 ;; Defined at:
  4320 ;;		line 310 in file "i2c.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;Total ram usage:        2 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    2
  4341 ;; This function calls:
  4342 ;;		__i2c_write
  4343 ;;		_i2c_set_frequency
  4344 ;; This function is called by:
  4345 ;;		_ui_run
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text4
  4350  008C20                     __ptext4:
  4351                           	opt stack 0
  4352  008C20                     _i2c_digipot_reset_on:
  4353                           	opt stack 27
  4354                           
  4355                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4356                           
  4357                           ;incstack = 0
  4358  008C20  0E10               	movlw	16
  4359  008C22  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4360                           
  4361                           ;i2c.c: 315: data_array[1] = 0x00;
  4362  008C24  0E00               	movlw	0
  4363  008C26  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4364                           
  4365                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4366  008C28  0E02               	movlw	2
  4367  008C2A  EC12  F045         	call	_i2c_set_frequency
  4368                           
  4369                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4370  008C2E  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4371  008C30  6E06               	movwf	__i2c_write@data,c
  4372  008C32  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4373  008C34  6E07               	movwf	__i2c_write@data+1,c
  4374  008C36  0E02               	movlw	2
  4375  008C38  6E08               	movwf	__i2c_write@length,c
  4376  008C3A  0E5C               	movlw	92
  4377  008C3C  EC85  F041         	call	__i2c_write
  4378  008C40  0012               	return		;funcret
  4379  008C42                     __end_of_i2c_digipot_reset_on:
  4380                           	opt stack 0
  4381                           tblptru	equ	0xFF8
  4382                           tblptrh	equ	0xFF7
  4383                           tblptrl	equ	0xFF6
  4384                           tablat	equ	0xFF5
  4385                           intcon3	equ	0xFF0
  4386                           postinc0	equ	0xFEE
  4387                           wreg	equ	0xFE8
  4388                           postdec1	equ	0xFE5
  4389                           plusw1	equ	0xFE3
  4390                           fsr1h	equ	0xFE2
  4391                           fsr1l	equ	0xFE1
  4392                           plusw2	equ	0xFDB
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _i2c_digipot_reset_off *****************
  4396 ;; Defined at:
  4397 ;;		line 323 in file "i2c.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    2
  4418 ;; This function calls:
  4419 ;;		__i2c_write
  4420 ;;		_i2c_set_frequency
  4421 ;; This function is called by:
  4422 ;;		_ui_run
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text5
  4427  008C42                     __ptext5:
  4428                           	opt stack 0
  4429  008C42                     _i2c_digipot_reset_off:
  4430                           	opt stack 27
  4431                           
  4432                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4433                           
  4434                           ;incstack = 0
  4435  008C42  0E10               	movlw	16
  4436  008C44  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4437                           
  4438                           ;i2c.c: 327: data_array[1] = 0x80;
  4439  008C46  0E80               	movlw	128
  4440  008C48  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4441                           
  4442                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4443  008C4A  0E02               	movlw	2
  4444  008C4C  EC12  F045         	call	_i2c_set_frequency
  4445                           
  4446                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4447  008C50  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4448  008C52  6E06               	movwf	__i2c_write@data,c
  4449  008C54  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4450  008C56  6E07               	movwf	__i2c_write@data+1,c
  4451  008C58  0E02               	movlw	2
  4452  008C5A  6E08               	movwf	__i2c_write@length,c
  4453  008C5C  0E5C               	movlw	92
  4454  008C5E  EC85  F041         	call	__i2c_write
  4455  008C62  0012               	return		;funcret
  4456  008C64                     __end_of_i2c_digipot_reset_off:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           intcon3	equ	0xFF0
  4463                           postinc0	equ	0xFEE
  4464                           wreg	equ	0xFE8
  4465                           postdec1	equ	0xFE5
  4466                           plusw1	equ	0xFE3
  4467                           fsr1h	equ	0xFE2
  4468                           fsr1l	equ	0xFE1
  4469                           plusw2	equ	0xFDB
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _i2c_digipot_backlight *****************
  4473 ;; Defined at:
  4474 ;;		line 335 in file "i2c.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  level           1    wreg     unsigned char 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  level           1   10[COMRAM] unsigned char 
  4479 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;Total ram usage:        3 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    2
  4496 ;; This function calls:
  4497 ;;		__i2c_write
  4498 ;;		_i2c_set_frequency
  4499 ;; This function is called by:
  4500 ;;		_ui_run
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text6
  4505  008AF6                     __ptext6:
  4506                           	opt stack 0
  4507  008AF6                     _i2c_digipot_backlight:
  4508                           	opt stack 27
  4509                           
  4510                           ;incstack = 0
  4511                           ;i2c_digipot_backlight@level stored from wreg
  4512  008AF6  6E0B               	movwf	i2c_digipot_backlight@level,c
  4513                           
  4514                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4515  008AF8  0E00               	movlw	0
  4516  008AFA  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4517                           
  4518                           ;i2c.c: 339: data_array[1] = level>>1;
  4519  008AFC  90D8               	bcf	status,0,c
  4520  008AFE  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4521  008B00  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4522                           
  4523                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4524  008B02  0E02               	movlw	2
  4525  008B04  EC12  F045         	call	_i2c_set_frequency
  4526                           
  4527                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4528  008B08  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4529  008B0A  6E06               	movwf	__i2c_write@data,c
  4530  008B0C  0E00               	movlw	high i2c_digipot_backlight@data_array
  4531  008B0E  6E07               	movwf	__i2c_write@data+1,c
  4532  008B10  0E02               	movlw	2
  4533  008B12  6E08               	movwf	__i2c_write@length,c
  4534  008B14  0E5C               	movlw	92
  4535  008B16  EC85  F041         	call	__i2c_write
  4536  008B1A  0012               	return		;funcret
  4537  008B1C                     __end_of_i2c_digipot_backlight:
  4538                           	opt stack 0
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           intcon3	equ	0xFF0
  4544                           postinc0	equ	0xFEE
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           plusw1	equ	0xFE3
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           plusw2	equ	0xFDB
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function __ui_encoder *****************
  4554 ;; Defined at:
  4555 ;;		line 22 in file "ui.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    8
  4576 ;; This function calls:
  4577 ;;		_i2c_eeprom_writeByte
  4578 ;;		_reboot
  4579 ;;		_system_delay_ms
  4580 ;; This function is called by:
  4581 ;;		_ui_run
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text7
  4586  0057E2                     __ptext7:
  4587                           	opt stack 0
  4588  0057E2                     __ui_encoder:
  4589                           	opt stack 21
  4590                           
  4591                           ;ui.c: 24: switch(os.display_mode)
  4592                           
  4593                           ;incstack = 0
  4594  0057E2  D054               	goto	l1292
  4595  0057E4                     
  4596                           ;ui.c: 27: if(os.buttonCount>0)
  4597  0057E4  0100               	movlb	0	; () banked
  4598  0057E6  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4599  0057E8  0A80               	xorlw	128
  4600  0057EA  0F7F               	addlw	-129
  4601  0057EC  A0D8               	btfss	status,0,c
  4602  0057EE  0012               	return	
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4606  0057F0  0E00               	movlw	0
  4607  0057F2  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;ui.c: 30: };ui.c: 31: break;
  4611  0057F4  0012               	return	
  4612  0057F6                     
  4613                           ; BSR set to: 0
  4614                           ;ui.c: 34: if(os.buttonCount>0)
  4615                           
  4616                           ; BSR set to: 0
  4617  0057F6  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4618  0057F8  0A80               	xorlw	128
  4619  0057FA  0F7F               	addlw	-129
  4620  0057FC  A0D8               	btfss	status,0,c
  4621  0057FE  0012               	return	
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4625  005800  0E00               	movlw	0
  4626  005802  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;ui.c: 37: };ui.c: 38: break;
  4630  005804  0012               	return	
  4631  005806                     
  4632                           ; BSR set to: 0
  4633                           ;ui.c: 41: if(os.buttonCount>0)
  4634                           
  4635                           ; BSR set to: 0
  4636  005806  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4637  005808  0A80               	xorlw	128
  4638  00580A  0F7F               	addlw	-129
  4639  00580C  A0D8               	btfss	status,0,c
  4640  00580E  0012               	return	
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4644  005810  0E30               	movlw	48
  4645  005812  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4646                           
  4647                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4648  005814  0E30               	movlw	48
  4649  005816  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4650                           
  4651                           ;ui.c: 45: os.buttonCount = 0;
  4652  005818  0E00               	movlw	0
  4653  00581A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;ui.c: 46: };ui.c: 47: break;
  4657  00581C  0012               	return	
  4658  00581E                     
  4659                           ; BSR set to: 0
  4660                           ;ui.c: 50: if(os.buttonCount>0)
  4661                           
  4662                           ; BSR set to: 0
  4663  00581E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4664  005820  0A80               	xorlw	128
  4665  005822  0F7F               	addlw	-129
  4666  005824  A0D8               	btfss	status,0,c
  4667  005826  0012               	return	
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4671  005828  0E00               	movlw	0
  4672  00582A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;ui.c: 53: };ui.c: 54: break;
  4676  00582C  0012               	return	
  4677  00582E                     
  4678                           ; BSR set to: 0
  4679                           ;ui.c: 57: if(os.buttonCount>0)
  4680                           
  4681                           ; BSR set to: 0
  4682  00582E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4683  005830  0A80               	xorlw	128
  4684  005832  0F7F               	addlw	-129
  4685  005834  A0D8               	btfss	status,0,c
  4686  005836  0012               	return	
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4690  005838  0E00               	movlw	0
  4691  00583A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;ui.c: 60: };ui.c: 61: break;
  4695  00583C  0012               	return	
  4696  00583E                     
  4697                           ; BSR set to: 0
  4698                           ;ui.c: 64: if(os.buttonCount>0)
  4699                           
  4700                           ; BSR set to: 0
  4701  00583E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4702  005840  0A80               	xorlw	128
  4703  005842  0F7F               	addlw	-129
  4704  005844  A0D8               	btfss	status,0,c
  4705  005846  0012               	return	
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4709  005848  0E60               	movlw	96
  4710  00584A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4711                           
  4712                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4713  00584C  0E60               	movlw	96
  4714  00584E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4715                           
  4716                           ;ui.c: 68: os.buttonCount = 0;
  4717  005850  0E00               	movlw	0
  4718  005852  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;ui.c: 69: };ui.c: 70: break;
  4722  005854  0012               	return	
  4723  005856                     
  4724                           ; BSR set to: 0
  4725                           ;ui.c: 73: if(os.buttonCount>0)
  4726                           
  4727                           ; BSR set to: 0
  4728  005856  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4729  005858  0A80               	xorlw	128
  4730  00585A  0F7F               	addlw	-129
  4731  00585C  A0D8               	btfss	status,0,c
  4732  00585E  0012               	return	
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4736  005860  0E00               	movlw	0
  4737  005862  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;ui.c: 76: };ui.c: 77: break;
  4741  005864  0012               	return	
  4742  005866                     
  4743                           ; BSR set to: 0
  4744                           ;ui.c: 80: if(os.buttonCount>0)
  4745                           
  4746                           ; BSR set to: 0
  4747  005866  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4748  005868  0A80               	xorlw	128
  4749  00586A  0F7F               	addlw	-129
  4750  00586C  A0D8               	btfss	status,0,c
  4751  00586E  0012               	return	
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4755  005870  0E01               	movlw	1
  4756  005872  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4757  005874  0E00               	movlw	0
  4758  005876  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4759  005878  0E78               	movlw	120
  4760  00587A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4761  00587C  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
  4762                           
  4763                           ;ui.c: 83: system_delay_ms(10);
  4764  005880  0E0A               	movlw	10
  4765  005882  ECDA  F045         	call	_system_delay_ms
  4766                           
  4767                           ;ui.c: 84: reboot();
  4768  005886  ECD5  F046         	call	_reboot	;wreg free
  4769                           
  4770                           ;ui.c: 87: }
  4771                           
  4772                           ;ui.c: 85: };ui.c: 86: break;
  4773  00588A  0012               	return	
  4774  00588C                     l1292:
  4775  00588C  0100               	movlb	0	; () banked
  4776  00588E  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4777                           
  4778                           ; Switch size 1, requested type "space"
  4779                           ; Number of cases is 8, Range of values is 0 to 112
  4780                           ; switch strategies available:
  4781                           ; Name         Instructions Cycles
  4782                           ; simple_byte           25    13 (average)
  4783                           ;	Chosen strategy is simple_byte
  4784  005890  0A00               	xorlw	0	; case 0
  4785  005892  B4D8               	btfsc	status,2,c
  4786  005894  D7A7               	goto	l1293
  4787  005896  0A10               	xorlw	16	; case 16
  4788  005898  B4D8               	btfsc	status,2,c
  4789  00589A  D7AD               	goto	l1296
  4790  00589C  0A30               	xorlw	48	; case 32
  4791  00589E  B4D8               	btfsc	status,2,c
  4792  0058A0  D7B2               	goto	l1298
  4793  0058A2  0A10               	xorlw	16	; case 48
  4794  0058A4  B4D8               	btfsc	status,2,c
  4795  0058A6  D7BB               	goto	l1300
  4796  0058A8  0A70               	xorlw	112	; case 64
  4797  0058AA  B4D8               	btfsc	status,2,c
  4798  0058AC  D7C8               	goto	l1304
  4799  0058AE  0A10               	xorlw	16	; case 80
  4800  0058B0  B4D8               	btfsc	status,2,c
  4801  0058B2  D7BD               	goto	l1302
  4802  0058B4  0A30               	xorlw	48	; case 96
  4803  0058B6  B4D8               	btfsc	status,2,c
  4804  0058B8  D7CE               	goto	l1306
  4805  0058BA  0A10               	xorlw	16	; case 112
  4806  0058BC  A4D8               	btfss	status,2,c
  4807  0058BE  0012               	return	
  4808  0058C0  D7D2               	goto	l1308
  4809  0058C2                     __end_of__ui_encoder:
  4810                           	opt stack 0
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           intcon3	equ	0xFF0
  4816                           postinc0	equ	0xFEE
  4817                           wreg	equ	0xFE8
  4818                           postdec1	equ	0xFE5
  4819                           plusw1	equ	0xFE3
  4820                           fsr1h	equ	0xFE2
  4821                           fsr1l	equ	0xFE1
  4822                           plusw2	equ	0xFDB
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _timer_pseudo_isr *****************
  4826 ;; Defined at:
  4827 ;;		line 19 in file "os.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text8
  4855  00874A                     __ptext8:
  4856                           	opt stack 0
  4857  00874A                     _timer_pseudo_isr:
  4858                           	opt stack 30
  4859                           
  4860                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4861                           
  4862                           ;incstack = 0
  4863  00874A  A4F2               	btfss	intcon,2,c	;volatile
  4864  00874C  0012               	return	
  4865                           
  4866                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4867                           
  4868                           ;os.c: 23: {;os.c: 24: return;
  4869  00874E  0ED1               	movlw	209
  4870  008750  6ED7               	movwf	4055,c	;volatile
  4871                           
  4872                           ;os.c: 30: TMR0L = 0x20;
  4873  008752  0E20               	movlw	32
  4874  008754  6ED6               	movwf	4054,c	;volatile
  4875                           
  4876                           ;os.c: 31: ++os.timeSlot;
  4877  008756  0100               	movlb	0	; () banked
  4878  008758  2BC7               	incf	(_os+2)& (0+255),f,b	;volatile
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;os.c: 33: os.done = 0;
  4882  00875A  0E00               	movlw	0
  4883  00875C  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;os.c: 34: INTCONbits.T0IF = 0;
  4887  00875E  94F2               	bcf	intcon,2,c	;volatile
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4891  008760  A0F0               	btfss	intcon3,0,c	;volatile
  4892  008762  D002               	goto	l1083
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4896  008764  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4900  008766  90F0               	bcf	intcon3,0,c	;volatile
  4901  008768                     l1083:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4905                           
  4906                           ; BSR set to: 0
  4907  008768  A2F0               	btfss	intcon3,1,c	;volatile
  4908  00876A  D003               	goto	l1084
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4912  00876C  AC81               	btfss	3969,6,c	;volatile
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4916  00876E  07C5               	decf	_os& (0+255),f,b	;volatile
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4920                           
  4921                           ; BSR set to: 0
  4922  008770  92F0               	bcf	intcon3,1,c	;volatile
  4923  008772                     l1084:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4927                           
  4928                           ; BSR set to: 0
  4929  008772  A4F0               	btfss	intcon3,2,c	;volatile
  4930  008774  0012               	return	
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4934  008776  AE81               	btfss	3969,7,c	;volatile
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4938  008778  2BC5               	incf	_os& (0+255),f,b	;volatile
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4942                           
  4943                           ; BSR set to: 0
  4944  00877A  94F0               	bcf	intcon3,2,c	;volatile
  4945  00877C  0012               	return	
  4946  00877E                     __end_of_timer_pseudo_isr:
  4947                           	opt stack 0
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           intcon	equ	0xFF2
  4953                           intcon3	equ	0xFF0
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           postdec1	equ	0xFE5
  4957                           plusw1	equ	0xFE3
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           plusw2	equ	0xFDB
  4961                           status	equ	0xFD8
  4962                           
  4963 ;; *************** function _system_minimal_init_undo *****************
  4964 ;; Defined at:
  4965 ;;		line 157 in file "os.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    1
  4986 ;; This function calls:
  4987 ;;		_i2c_reset
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text9
  4994  008EAA                     __ptext9:
  4995                           	opt stack 0
  4996  008EAA                     _system_minimal_init_undo:
  4997                           	opt stack 29
  4998                           
  4999                           ;os.c: 160: i2c_reset();
  5000                           
  5001                           ;incstack = 0
  5002  008EAA  EC6D  F047         	call	_i2c_reset	;wreg free
  5003                           
  5004                           ;os.c: 163: TRISAbits.TRISA0 = 1;
  5005  008EAE  8092               	bsf	3986,0,c	;volatile
  5006                           
  5007                           ;os.c: 164: ANCON0bits.PCFG0 = 0;
  5008  008EB0  010F               	movlb	15	; () banked
  5009  008EB2  9148               	bcf	72,0,b	;volatile
  5010                           
  5011                           ; BSR set to: 15
  5012                           ;os.c: 167: LATCbits.LC2 = 0;
  5013  008EB4  948B               	bcf	3979,2,c	;volatile
  5014                           
  5015                           ; BSR set to: 15
  5016                           ;os.c: 168: TRISCbits.TRISC2 = 1;
  5017  008EB6  8494               	bsf	3988,2,c	;volatile
  5018                           
  5019                           ; BSR set to: 15
  5020  008EB8  0012               	return		;funcret
  5021  008EBA                     __end_of_system_minimal_init_undo:
  5022                           	opt stack 0
  5023                           tblptru	equ	0xFF8
  5024                           tblptrh	equ	0xFF7
  5025                           tblptrl	equ	0xFF6
  5026                           tablat	equ	0xFF5
  5027                           intcon	equ	0xFF2
  5028                           intcon3	equ	0xFF0
  5029                           postinc0	equ	0xFEE
  5030                           wreg	equ	0xFE8
  5031                           postdec1	equ	0xFE5
  5032                           plusw1	equ	0xFE3
  5033                           fsr1h	equ	0xFE2
  5034                           fsr1l	equ	0xFE1
  5035                           plusw2	equ	0xFDB
  5036                           status	equ	0xFD8
  5037                           
  5038 ;; *************** function _i2c_reset *****************
  5039 ;; Defined at:
  5040 ;;		line 110 in file "i2c.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_system_minimal_init_undo
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text10
  5068  008EDA                     __ptext10:
  5069                           	opt stack 0
  5070  008EDA                     _i2c_reset:
  5071                           	opt stack 29
  5072                           
  5073                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  5074                           
  5075                           ; BSR set to: 15
  5076                           ;incstack = 0
  5077  008EDA  9EC7               	bcf	4039,7,c	;volatile
  5078                           
  5079                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  5080  008EDC  9CC7               	bcf	4039,6,c	;volatile
  5081                           
  5082                           ;i2c.c: 114: SSP1CON1 = 0x00;
  5083  008EDE  0E00               	movlw	0
  5084  008EE0  6EC6               	movwf	4038,c	;volatile
  5085                           
  5086                           ;i2c.c: 115: SSP1ADD = 0x00;
  5087  008EE2  0E00               	movlw	0
  5088  008EE4  6EC8               	movwf	4040,c	;volatile
  5089  008EE6  0012               	return		;funcret
  5090  008EE8                     __end_of_i2c_reset:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           intcon	equ	0xFF2
  5097                           intcon3	equ	0xFF0
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           postdec1	equ	0xFE5
  5101                           plusw1	equ	0xFE3
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           plusw2	equ	0xFDB
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _system_minimal_init *****************
  5108 ;; Defined at:
  5109 ;;		line 139 in file "os.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    2
  5130 ;; This function calls:
  5131 ;;		_i2c_init
  5132 ;;		_system_delay_ms
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text11
  5139  008E0C                     __ptext11:
  5140                           	opt stack 0
  5141  008E0C                     _system_minimal_init:
  5142                           	opt stack 28
  5143                           
  5144                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  5145                           
  5146                           ;incstack = 0
  5147  008E0C  9494               	bcf	3988,2,c	;volatile
  5148                           
  5149                           ;os.c: 143: LATCbits.LC2 = 1;
  5150  008E0E  848B               	bsf	3979,2,c	;volatile
  5151                           
  5152                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  5153  008E10  8092               	bsf	3986,0,c	;volatile
  5154                           
  5155                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  5156  008E12  010F               	movlb	15	; () banked
  5157  008E14  8148               	bsf	72,0,b	;volatile
  5158                           
  5159                           ; BSR set to: 15
  5160                           ;os.c: 150: i2c_init();
  5161  008E16  EC7B  F047         	call	_i2c_init	;wreg free
  5162                           
  5163                           ;os.c: 153: system_delay_ms(50);
  5164  008E1A  0E32               	movlw	50
  5165  008E1C  ECDA  F045         	call	_system_delay_ms
  5166  008E20  0012               	return		;funcret
  5167  008E22                     __end_of_system_minimal_init:
  5168                           	opt stack 0
  5169                           tblptru	equ	0xFF8
  5170                           tblptrh	equ	0xFF7
  5171                           tblptrl	equ	0xFF6
  5172                           tablat	equ	0xFF5
  5173                           intcon	equ	0xFF2
  5174                           intcon3	equ	0xFF0
  5175                           postinc0	equ	0xFEE
  5176                           wreg	equ	0xFE8
  5177                           postdec1	equ	0xFE5
  5178                           plusw1	equ	0xFE3
  5179                           fsr1h	equ	0xFE2
  5180                           fsr1l	equ	0xFE1
  5181                           plusw2	equ	0xFDB
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function _i2c_init *****************
  5185 ;; Defined at:
  5186 ;;		line 102 in file "i2c.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    1
  5207 ;; This function calls:
  5208 ;;		__i2c_open_1
  5209 ;;		_i2c_set_frequency
  5210 ;; This function is called by:
  5211 ;;		_system_minimal_init
  5212 ;; This function uses a non-reentrant model
  5213 ;;
  5214                           
  5215                           	psect	text12
  5216  008EF6                     __ptext12:
  5217                           	opt stack 0
  5218  008EF6                     _i2c_init:
  5219                           	opt stack 28
  5220                           
  5221                           ;i2c.c: 105: _i2c_open_1();
  5222                           
  5223                           ;incstack = 0
  5224  008EF6  ECE2  F046         	call	__i2c_open_1	;wreg free
  5225                           
  5226                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5227  008EFA  0E00               	movlw	0
  5228  008EFC  EC12  F045         	call	_i2c_set_frequency
  5229  008F00  0012               	return		;funcret
  5230  008F02                     __end_of_i2c_init:
  5231                           	opt stack 0
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           intcon	equ	0xFF2
  5237                           intcon3	equ	0xFF0
  5238                           postinc0	equ	0xFEE
  5239                           wreg	equ	0xFE8
  5240                           postdec1	equ	0xFE5
  5241                           plusw1	equ	0xFE3
  5242                           fsr1h	equ	0xFE2
  5243                           fsr1l	equ	0xFE1
  5244                           plusw2	equ	0xFDB
  5245                           status	equ	0xFD8
  5246                           
  5247 ;; *************** function __i2c_open_1 *****************
  5248 ;; Defined at:
  5249 ;;		line 36 in file "i2c.c"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;Total ram usage:        0 bytes
  5268 ;; Hardware stack levels used:    1
  5269 ;; This function calls:
  5270 ;;		Nothing
  5271 ;; This function is called by:
  5272 ;;		_i2c_init
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text13
  5277  008DC4                     __ptext13:
  5278                           	opt stack 0
  5279  008DC4                     __i2c_open_1:
  5280                           	opt stack 28
  5281                           
  5282                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5283                           
  5284                           ;incstack = 0
  5285  008DC4  9EC7               	bcf	4039,7,c	;volatile
  5286                           
  5287                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5288  008DC6  9CC7               	bcf	4039,6,c	;volatile
  5289                           
  5290                           ;i2c.c: 40: SSP1ADD = 29;
  5291  008DC8  0E1D               	movlw	29
  5292  008DCA  6EC8               	movwf	4040,c	;volatile
  5293                           
  5294                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5295  008DCC  9EC6               	bcf	4038,7,c	;volatile
  5296                           
  5297                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5298  008DCE  9CC6               	bcf	4038,6,c	;volatile
  5299                           
  5300                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5301  008DD0  50C6               	movf	4038,w,c	;volatile
  5302  008DD2  0BF0               	andlw	-16
  5303  008DD4  0908               	iorlw	8
  5304  008DD6  6EC6               	movwf	4038,c	;volatile
  5305                           
  5306                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5307  008DD8  8AC6               	bsf	4038,5,c	;volatile
  5308  008DDA  0012               	return		;funcret
  5309  008DDC                     __end_of__i2c_open_1:
  5310                           	opt stack 0
  5311                           tblptru	equ	0xFF8
  5312                           tblptrh	equ	0xFF7
  5313                           tblptrl	equ	0xFF6
  5314                           tablat	equ	0xFF5
  5315                           intcon	equ	0xFF2
  5316                           intcon3	equ	0xFF0
  5317                           postinc0	equ	0xFEE
  5318                           wreg	equ	0xFE8
  5319                           postdec1	equ	0xFE5
  5320                           plusw1	equ	0xFE3
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           plusw2	equ	0xFDB
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _system_full_init *****************
  5327 ;; Defined at:
  5328 ;;		line 172 in file "os.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    7
  5349 ;; This function calls:
  5350 ;;		__system_encoder_init
  5351 ;;		__system_timer0_init
  5352 ;;		_fat_init
  5353 ;;		_flash_init
  5354 ;;		_ui_init
  5355 ;; This function is called by:
  5356 ;;		_main
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text14
  5361  007C66                     __ptext14:
  5362                           	opt stack 0
  5363  007C66                     _system_full_init:
  5364                           	opt stack 23
  5365                           
  5366                           ;os.c: 179: TRISDbits.TRISD0 = 0;
  5367                           
  5368                           ;incstack = 0
  5369  007C66  9095               	bcf	3989,0,c	;volatile
  5370                           
  5371                           ;os.c: 180: LATDbits.LD0 = 0;
  5372  007C68  908C               	bcf	3980,0,c	;volatile
  5373                           
  5374                           ;os.c: 183: TRISDbits.TRISD3 = 0;
  5375  007C6A  9695               	bcf	3989,3,c	;volatile
  5376                           
  5377                           ;os.c: 184: LATDbits.LD3 = 0;
  5378  007C6C  968C               	bcf	3980,3,c	;volatile
  5379                           
  5380                           ;os.c: 187: TRISDbits.TRISD1 = 0;
  5381  007C6E  9295               	bcf	3989,1,c	;volatile
  5382                           
  5383                           ;os.c: 188: LATDbits.LD1 = 0;
  5384  007C70  928C               	bcf	3980,1,c	;volatile
  5385                           
  5386                           ;os.c: 191: TRISBbits.TRISB1 = 0;
  5387  007C72  9293               	bcf	3987,1,c	;volatile
  5388                           
  5389                           ;os.c: 192: LATBbits.LB1 = 0;
  5390  007C74  928A               	bcf	3978,1,c	;volatile
  5391                           
  5392                           ;os.c: 195: TRISBbits.TRISB2 = 0;
  5393  007C76  9493               	bcf	3987,2,c	;volatile
  5394                           
  5395                           ;os.c: 196: LATBbits.LB2 = 0;
  5396  007C78  948A               	bcf	3978,2,c	;volatile
  5397                           
  5398                           ;os.c: 197: TRISBbits.TRISB3 = 0;
  5399  007C7A  9693               	bcf	3987,3,c	;volatile
  5400                           
  5401                           ;os.c: 198: LATBbits.LB3 = 0;
  5402  007C7C  968A               	bcf	3978,3,c	;volatile
  5403                           
  5404                           ;os.c: 201: TRISDbits.TRISD6 = 1;
  5405  007C7E  8C95               	bsf	3989,6,c	;volatile
  5406                           
  5407                           ;os.c: 202: TRISDbits.TRISD4 = 0;
  5408  007C80  9895               	bcf	3989,4,c	;volatile
  5409                           
  5410                           ;os.c: 203: TRISDbits.TRISD5 = 0;
  5411  007C82  9A95               	bcf	3989,5,c	;volatile
  5412                           
  5413                           ;os.c: 204: TRISDbits.TRISD7 = 0;
  5414  007C84  9E95               	bcf	3989,7,c	;volatile
  5415                           
  5416                           ;os.c: 205: LATDbits.LD7 = 1;
  5417  007C86  8E8C               	bsf	3980,7,c	;volatile
  5418                           
  5419                           ;os.c: 206: TRISDbits.TRISD2 = 1;
  5420  007C88  8495               	bsf	3989,2,c	;volatile
  5421                           
  5422                           ;os.c: 209: TRISCbits.TRISC7 = 0;
  5423  007C8A  9E94               	bcf	3988,7,c	;volatile
  5424                           
  5425                           ;os.c: 210: LATCbits.LC7 = 0;
  5426  007C8C  9E8B               	bcf	3979,7,c	;volatile
  5427                           
  5428                           ;os.c: 213: TRISEbits.TRISE2 = 0;
  5429  007C8E  9496               	bcf	3990,2,c	;volatile
  5430                           
  5431                           ;os.c: 214: LATEbits.LE2 = 1;
  5432  007C90  848D               	bsf	3981,2,c	;volatile
  5433                           
  5434                           ;os.c: 215: TRISEbits.TRISE1 = 0;
  5435  007C92  9296               	bcf	3990,1,c	;volatile
  5436                           
  5437                           ;os.c: 216: LATEbits.LE1 = 1;
  5438  007C94  828D               	bsf	3981,1,c	;volatile
  5439                           
  5440                           ;os.c: 217: TRISEbits.TRISE0 = 0;
  5441  007C96  9096               	bcf	3990,0,c	;volatile
  5442                           
  5443                           ;os.c: 218: LATEbits.LE0 = 1;
  5444  007C98  808D               	bsf	3981,0,c	;volatile
  5445                           
  5446                           ;os.c: 219: TRISAbits.TRISA5 = 0;
  5447  007C9A  9A92               	bcf	3986,5,c	;volatile
  5448                           
  5449                           ;os.c: 220: LATAbits.LA5 = 1;
  5450  007C9C  8A89               	bsf	3977,5,c	;volatile
  5451                           
  5452                           ;os.c: 223: TRISBbits.TRISB7 = 1;
  5453  007C9E  8E93               	bsf	3987,7,c	;volatile
  5454                           
  5455                           ;os.c: 224: TRISBbits.TRISB6 = 1;
  5456  007CA0  8C93               	bsf	3987,6,c	;volatile
  5457                           
  5458                           ;os.c: 227: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5459  007CA2  0E10               	movlw	16
  5460  007CA4  0100               	movlb	0	; () banked
  5461  007CA6  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  5462                           
  5463                           ;os.c: 228: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5464  007CA8  0E00               	movlw	0
  5465  007CAA  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;os.c: 231: flash_init();
  5469  007CAC  ECBB  F046         	call	_flash_init	;wreg free
  5470                           
  5471                           ;os.c: 234: fat_init();
  5472  007CB0  EC5D  F047         	call	_fat_init	;wreg free
  5473                           
  5474                           ;os.c: 237: _system_encoder_init();
  5475  007CB4  EC35  F043         	call	__system_encoder_init	;wreg free
  5476                           
  5477                           ;os.c: 240: ui_init();
  5478  007CB8  EC27  F047         	call	_ui_init	;wreg free
  5479                           
  5480                           ;os.c: 243: _system_timer0_init();
  5481  007CBC  EC43  F046         	call	__system_timer0_init	;wreg free
  5482  007CC0  0012               	return		;funcret
  5483  007CC2                     __end_of_system_full_init:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           intcon	equ	0xFF2
  5490                           intcon3	equ	0xFF0
  5491                           postinc0	equ	0xFEE
  5492                           wreg	equ	0xFE8
  5493                           postdec1	equ	0xFE5
  5494                           plusw1	equ	0xFE3
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           plusw2	equ	0xFDB
  5498                           status	equ	0xFD8
  5499                           
  5500 ;; *************** function _ui_init *****************
  5501 ;; Defined at:
  5502 ;;		line 101 in file "ui.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_system_full_init
  5526 ;;		_ui_run
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text15
  5531  008E4E                     __ptext15:
  5532                           	opt stack 0
  5533  008E4E                     _ui_init:
  5534                           	opt stack 29
  5535                           
  5536                           ;ui.c: 103: system_ui_inactive_count = 0;
  5537                           
  5538                           ;incstack = 0
  5539  008E4E  0E00               	movlw	0
  5540  008E50  0101               	movlb	1	; () banked
  5541  008E52  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5542  008E54  0E00               	movlw	0
  5543  008E56  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;ui.c: 105: LATCbits.LC2 = 1;
  5547  008E58  848B               	bsf	3979,2,c	;volatile
  5548                           
  5549                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5550  008E5A  0E01               	movlw	1
  5551  008E5C  0100               	movlb	0	; () banked
  5552  008E5E  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  5553                           
  5554                           ; BSR set to: 0
  5555  008E60  0012               	return		;funcret
  5556  008E62                     __end_of_ui_init:
  5557                           	opt stack 0
  5558                           tblptru	equ	0xFF8
  5559                           tblptrh	equ	0xFF7
  5560                           tblptrl	equ	0xFF6
  5561                           tablat	equ	0xFF5
  5562                           intcon	equ	0xFF2
  5563                           intcon3	equ	0xFF0
  5564                           postinc0	equ	0xFEE
  5565                           wreg	equ	0xFE8
  5566                           postdec1	equ	0xFE5
  5567                           plusw1	equ	0xFE3
  5568                           fsr1h	equ	0xFE2
  5569                           fsr1l	equ	0xFE1
  5570                           plusw2	equ	0xFDB
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function _flash_init *****************
  5574 ;; Defined at:
  5575 ;;		line 337 in file "flash.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;Total ram usage:        0 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    4
  5596 ;; This function calls:
  5597 ;;		__flash_set_page_size
  5598 ;;		_spi_init
  5599 ;;		_spi_set_configuration
  5600 ;; This function is called by:
  5601 ;;		_system_full_init
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text16
  5606  008D76                     __ptext16:
  5607                           	opt stack 0
  5608  008D76                     _flash_init:
  5609                           	opt stack 25
  5610                           
  5611                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;incstack = 0
  5615  008D76  0E00               	movlw	0
  5616  008D78  ECF9  F042         	call	_spi_init
  5617                           
  5618                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5619  008D7C  0E00               	movlw	0
  5620  008D7E  EC62  F023         	call	_spi_set_configuration
  5621                           
  5622                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5623  008D82  0E00               	movlw	0
  5624  008D84  EC3D  F03A         	call	__flash_set_page_size
  5625                           
  5626                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5627  008D88  0E01               	movlw	1
  5628  008D8A  EC62  F023         	call	_spi_set_configuration
  5629  008D8E  0012               	return		;funcret
  5630  008D90                     __end_of_flash_init:
  5631                           	opt stack 0
  5632                           tblptru	equ	0xFF8
  5633                           tblptrh	equ	0xFF7
  5634                           tblptrl	equ	0xFF6
  5635                           tablat	equ	0xFF5
  5636                           intcon	equ	0xFF2
  5637                           intcon3	equ	0xFF0
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           postdec1	equ	0xFE5
  5641                           plusw1	equ	0xFE3
  5642                           fsr1h	equ	0xFE2
  5643                           fsr1l	equ	0xFE1
  5644                           plusw2	equ	0xFDB
  5645                           status	equ	0xFD8
  5646                           
  5647 ;; *************** function _spi_init *****************
  5648 ;; Defined at:
  5649 ;;		line 122 in file "spi.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  configuratio    1    wreg     enum E6749
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  configuratio    1    3[COMRAM] enum E6749
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;Total ram usage:        1 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    1
  5670 ;; This function calls:
  5671 ;;		__spi_init
  5672 ;; This function is called by:
  5673 ;;		_flash_init
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text17
  5678  0085F2                     __ptext17:
  5679                           	opt stack 0
  5680  0085F2                     _spi_init:
  5681                           	opt stack 27
  5682                           
  5683                           ;incstack = 0
  5684                           ;spi_init@configuration stored from wreg
  5685  0085F2  6E04               	movwf	spi_init@configuration,c
  5686                           
  5687                           ;spi.c: 124: switch(configuration)
  5688  0085F4  D012               	goto	l2967
  5689  0085F6                     
  5690                           ;spi.c: 127: _spi_init(config_internal);
  5691  0085F6  C169  F001         	movff	_config_internal,__spi_init@details
  5692  0085FA  C16A  F002         	movff	_config_internal+1,__spi_init@details+1
  5693  0085FE  C16B  F003         	movff	_config_internal+2,__spi_init@details+2
  5694  008602  EC52  F043         	call	__spi_init	;wreg free
  5695                           
  5696                           ;spi.c: 128: break;
  5697  008606  D010               	goto	l2969
  5698  008608                     
  5699                           ;spi.c: 131: _spi_init(config_external);
  5700  008608  C166  F001         	movff	_config_external,__spi_init@details
  5701  00860C  C167  F002         	movff	_config_external+1,__spi_init@details+1
  5702  008610  C168  F003         	movff	_config_external+2,__spi_init@details+2
  5703  008614  EC52  F043         	call	__spi_init	;wreg free
  5704                           
  5705                           ;spi.c: 133: }
  5706                           
  5707                           ;spi.c: 132: break;
  5708  008618  D007               	goto	l2969
  5709  00861A                     l2967:
  5710  00861A  5004               	movf	spi_init@configuration,w,c
  5711                           
  5712                           ; Switch size 1, requested type "space"
  5713                           ; Number of cases is 2, Range of values is 0 to 1
  5714                           ; switch strategies available:
  5715                           ; Name         Instructions Cycles
  5716                           ; simple_byte            7     4 (average)
  5717                           ;	Chosen strategy is simple_byte
  5718  00861C  0A00               	xorlw	0	; case 0
  5719  00861E  B4D8               	btfsc	status,2,c
  5720  008620  D7EA               	goto	l2968
  5721  008622  0A01               	xorlw	1	; case 1
  5722  008624  B4D8               	btfsc	status,2,c
  5723  008626  D7F0               	goto	l2970
  5724  008628                     l2969:
  5725                           
  5726                           ;spi.c: 135: active_configuration = configuration;
  5727  008628  C004  F18A         	movff	spi_init@configuration,_active_configuration
  5728  00862C  0012               	return		;funcret
  5729  00862E                     __end_of_spi_init:
  5730                           	opt stack 0
  5731                           tblptru	equ	0xFF8
  5732                           tblptrh	equ	0xFF7
  5733                           tblptrl	equ	0xFF6
  5734                           tablat	equ	0xFF5
  5735                           intcon	equ	0xFF2
  5736                           intcon3	equ	0xFF0
  5737                           postinc0	equ	0xFEE
  5738                           wreg	equ	0xFE8
  5739                           postdec1	equ	0xFE5
  5740                           plusw1	equ	0xFE3
  5741                           fsr1h	equ	0xFE2
  5742                           fsr1l	equ	0xFE1
  5743                           plusw2	equ	0xFDB
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function __spi_init *****************
  5747 ;; Defined at:
  5748 ;;		line 25 in file "spi.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  details         3    0[COMRAM] struct .
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5762 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;Total ram usage:        3 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_spi_init
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text18
  5776  0086A4                     __ptext18:
  5777                           	opt stack 0
  5778  0086A4                     __spi_init:
  5779                           	opt stack 27
  5780                           
  5781                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5782                           
  5783                           ;incstack = 0
  5784  0086A4  0E55               	movlw	85
  5785  0086A6  6EA7               	movwf	4007,c	;volsfr
  5786  0086A8  0EAA               	movlw	170
  5787  0086AA  6EA7               	movwf	4007,c	;volsfr
  5788  0086AC  010E               	movlb	14	; () banked
  5789  0086AE  91BF               	bcf	191,0,b	;volatile
  5790                           
  5791                           ;spi.c: 32: RPINR21 = 23;
  5792  0086B0  0E17               	movlw	23
  5793  0086B2  6FFC               	movwf	252,b	;volatile
  5794                           
  5795                           ;spi.c: 33: RPOR21 = 10;
  5796  0086B4  0E0A               	movlw	10
  5797  0086B6  6FD5               	movwf	213,b	;volatile
  5798                           
  5799                           ;spi.c: 35: RPOR22 = 11;
  5800  0086B8  0E0B               	movlw	11
  5801  0086BA  6FD6               	movwf	214,b	;volatile
  5802                           
  5803                           ;spi.c: 36: RPINR22 = 22;
  5804  0086BC  0E16               	movlw	22
  5805  0086BE  6FFD               	movwf	253,b	;volatile
  5806                           
  5807                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5808  0086C0  0E55               	movlw	85
  5809  0086C2  6EA7               	movwf	4007,c	;volsfr
  5810  0086C4  0EAA               	movlw	170
  5811  0086C6  6EA7               	movwf	4007,c	;volsfr
  5812                           
  5813                           ; BSR set to: 14
  5814  0086C8  81BF               	bsf	191,0,b	;volatile
  5815                           
  5816                           ; BSR set to: 14
  5817                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5818  0086CA  8E73               	bsf	3955,7,c	;volatile
  5819                           
  5820                           ; BSR set to: 14
  5821                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5822  0086CC  8C73               	bsf	3955,6,c	;volatile
  5823                           
  5824                           ; BSR set to: 14
  5825                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5826  0086CE  9872               	bcf	3954,4,c	;volatile
  5827                           
  5828                           ; BSR set to: 14
  5829                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5830  0086D0  9072               	bcf	3954,0,c	;volatile
  5831  0086D2  9272               	bcf	3954,1,c	;volatile
  5832  0086D4  9472               	bcf	3954,2,c	;volatile
  5833  0086D6  9672               	bcf	3954,3,c	;volatile
  5834                           
  5835                           ; BSR set to: 14
  5836                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5837  0086D8  8A72               	bsf	3954,5,c	;volatile
  5838                           
  5839                           ; BSR set to: 14
  5840  0086DA  0012               	return		;funcret
  5841  0086DC                     __end_of__spi_init:
  5842                           	opt stack 0
  5843                           tblptru	equ	0xFF8
  5844                           tblptrh	equ	0xFF7
  5845                           tblptrl	equ	0xFF6
  5846                           tablat	equ	0xFF5
  5847                           intcon	equ	0xFF2
  5848                           intcon3	equ	0xFF0
  5849                           postinc0	equ	0xFEE
  5850                           wreg	equ	0xFE8
  5851                           postdec1	equ	0xFE5
  5852                           plusw1	equ	0xFE3
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           plusw2	equ	0xFDB
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function __flash_set_page_size *****************
  5859 ;; Defined at:
  5860 ;;		line 95 in file "flash.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  size            1    wreg     enum E6898
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  size            1   23[COMRAM] enum E6898
  5865 ;;  command         4   19[COMRAM] unsigned char [4]
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5876 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5878 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5879 ;;Total ram usage:        5 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    3
  5882 ;; This function calls:
  5883 ;;		__flash_is_busy
  5884 ;;		_memcpy
  5885 ;;		_spi_tx
  5886 ;; This function is called by:
  5887 ;;		_flash_init
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text19
  5892  00747A                     __ptext19:
  5893                           	opt stack 0
  5894  00747A                     __flash_set_page_size:
  5895                           	opt stack 25
  5896                           
  5897                           ; BSR set to: 14
  5898                           ;incstack = 0
  5899                           ;__flash_set_page_size@size stored from wreg
  5900  00747A  6E18               	movwf	__flash_set_page_size@size,c
  5901  00747C                     
  5902                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5903  00747C  EC32  F046         	call	__flash_is_busy	;wreg free
  5904  007480  0900               	iorlw	0
  5905  007482  A4D8               	btfss	status,2,c
  5906  007484  D7FB               	goto	l14219
  5907                           
  5908                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5909  007486  5018               	movf	__flash_set_page_size@size,w,c
  5910  007488  A4D8               	btfss	status,2,c
  5911  00748A  D013               	goto	l1741
  5912                           
  5913                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5914  00748C  0E14               	movlw	low __flash_set_page_size@command
  5915  00748E  6E01               	movwf	memcpy@d1,c
  5916  007490  0E00               	movlw	high __flash_set_page_size@command
  5917  007492  6E02               	movwf	memcpy@d1+1,c
  5918  007494  0EC4               	movlw	low _flash_command_pagesize_512
  5919  007496  6E03               	movwf	memcpy@s1,c
  5920  007498  0E9F               	movlw	high _flash_command_pagesize_512
  5921  00749A  6E04               	movwf	memcpy@s1+1,c
  5922  00749C  5003               	movf	memcpy@s1,w,c
  5923  00749E  1004               	iorwf	memcpy@s1+1,w,c
  5924  0074A0  A4D8               	btfss	status,2,c
  5925  0074A2  0E00               	movlw	low (__mediumconst shr (0+16))
  5926  0074A4  6E05               	movwf	memcpy@s1+2,c
  5927  0074A6  0E00               	movlw	0
  5928  0074A8  6E07               	movwf	memcpy@n+1,c
  5929  0074AA  0E04               	movlw	4
  5930  0074AC  6E06               	movwf	memcpy@n,c
  5931  0074AE  ECDD  F03C         	call	_memcpy	;wreg free
  5932  0074B2                     l1741:
  5933                           
  5934                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5935  0074B2  0418               	decf	__flash_set_page_size@size,w,c
  5936  0074B4  A4D8               	btfss	status,2,c
  5937  0074B6  D013               	goto	l1742
  5938                           
  5939                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5940  0074B8  0E14               	movlw	low __flash_set_page_size@command
  5941  0074BA  6E01               	movwf	memcpy@d1,c
  5942  0074BC  0E00               	movlw	high __flash_set_page_size@command
  5943  0074BE  6E02               	movwf	memcpy@d1+1,c
  5944  0074C0  0EC0               	movlw	low _flash_command_pagesize_528
  5945  0074C2  6E03               	movwf	memcpy@s1,c
  5946  0074C4  0E9F               	movlw	high _flash_command_pagesize_528
  5947  0074C6  6E04               	movwf	memcpy@s1+1,c
  5948  0074C8  5003               	movf	memcpy@s1,w,c
  5949  0074CA  1004               	iorwf	memcpy@s1+1,w,c
  5950  0074CC  A4D8               	btfss	status,2,c
  5951  0074CE  0E00               	movlw	low (__mediumconst shr (0+16))
  5952  0074D0  6E05               	movwf	memcpy@s1+2,c
  5953  0074D2  0E00               	movlw	0
  5954  0074D4  6E07               	movwf	memcpy@n+1,c
  5955  0074D6  0E04               	movlw	4
  5956  0074D8  6E06               	movwf	memcpy@n,c
  5957  0074DA  ECDD  F03C         	call	_memcpy	;wreg free
  5958  0074DE                     l1742:
  5959                           
  5960                           ;flash.c: 109: spi_tx(command, 4);
  5961  0074DE  0E14               	movlw	low __flash_set_page_size@command
  5962  0074E0  6E01               	movwf	spi_tx@data,c
  5963  0074E2  0E00               	movlw	high __flash_set_page_size@command
  5964  0074E4  6E02               	movwf	spi_tx@data+1,c
  5965  0074E6  0E00               	movlw	0
  5966  0074E8  6E04               	movwf	spi_tx@length+1,c
  5967  0074EA  0E04               	movlw	4
  5968  0074EC  6E03               	movwf	spi_tx@length,c
  5969  0074EE  EC12  F03F         	call	_spi_tx	;wreg free
  5970  0074F2  0012               	return		;funcret
  5971  0074F4                     __end_of__flash_set_page_size:
  5972                           	opt stack 0
  5973                           tblptru	equ	0xFF8
  5974                           tblptrh	equ	0xFF7
  5975                           tblptrl	equ	0xFF6
  5976                           tablat	equ	0xFF5
  5977                           intcon	equ	0xFF2
  5978                           intcon3	equ	0xFF0
  5979                           postinc0	equ	0xFEE
  5980                           wreg	equ	0xFE8
  5981                           postdec1	equ	0xFE5
  5982                           plusw1	equ	0xFE3
  5983                           fsr1h	equ	0xFE2
  5984                           fsr1l	equ	0xFE1
  5985                           plusw2	equ	0xFDB
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function _fat_init *****************
  5989 ;; Defined at:
  5990 ;;		line 1318 in file "fat16.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    6
  6011 ;; This function calls:
  6012 ;;		_fat_format
  6013 ;;		_fat_get_format_status
  6014 ;; This function is called by:
  6015 ;;		_system_full_init
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text20
  6020  008EBA                     __ptext20:
  6021                           	opt stack 0
  6022  008EBA                     _fat_init:
  6023                           	opt stack 23
  6024                           
  6025                           ;fat16.c: 1321: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6026                           
  6027                           ;incstack = 0
  6028  008EBA  ECE6  F033         	call	_fat_get_format_status	;wreg free
  6029  008EBE  0900               	iorlw	0
  6030  008EC0  A4D8               	btfss	status,2,c
  6031  008EC2  0012               	return	
  6032                           
  6033                           ;fat16.c: 1322: {;fat16.c: 1323: fat_format();
  6034  008EC4  EC7D  F014         	call	_fat_format	;wreg free
  6035  008EC8  0012               	return	
  6036  008ECA                     __end_of_fat_init:
  6037                           	opt stack 0
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           intcon	equ	0xFF2
  6043                           intcon3	equ	0xFF0
  6044                           postinc0	equ	0xFEE
  6045                           wreg	equ	0xFE8
  6046                           postdec1	equ	0xFE5
  6047                           plusw1	equ	0xFE3
  6048                           fsr1h	equ	0xFE2
  6049                           fsr1l	equ	0xFE1
  6050                           plusw2	equ	0xFDB
  6051                           status	equ	0xFD8
  6052                           
  6053 ;; *************** function _fat_get_format_status *****************
  6054 ;; Defined at:
  6055 ;;		line 1230 in file "fat16.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  cntr            2   45[COMRAM] unsigned int 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      enum E6872
  6062 ;; Registers used:
  6063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;Total ram usage:        4 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    5
  6076 ;; This function calls:
  6077 ;;		__get_fbr
  6078 ;;		__get_mbr
  6079 ;;		_flash_sector_read
  6080 ;; This function is called by:
  6081 ;;		_fat_init
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text21
  6086  0067CC                     __ptext21:
  6087                           	opt stack 0
  6088  0067CC                     _fat_get_format_status:
  6089                           	opt stack 23
  6090                           
  6091                           ;fat16.c: 1232: uint16_t cntr;;fat16.c: 1235: flash_sector_read(0, buffer);
  6092                           
  6093                           ;incstack = 0
  6094  0067CC  0E00               	movlw	0
  6095  0067CE  6E29               	movwf	flash_sector_read@page+1,c
  6096  0067D0  0E00               	movlw	0
  6097  0067D2  6E28               	movwf	flash_sector_read@page,c
  6098  0067D4  0EC0               	movlw	low _buffer
  6099  0067D6  6E2A               	movwf	flash_sector_read@data,c
  6100  0067D8  0E03               	movlw	high _buffer
  6101  0067DA  6E2B               	movwf	flash_sector_read@data+1,c
  6102  0067DC  EC3F  F044         	call	_flash_sector_read	;wreg free
  6103                           
  6104                           ;fat16.c: 1236: for(cntr=0; cntr<512; ++cntr)
  6105  0067E0  0E00               	movlw	0
  6106  0067E2  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6107  0067E4  0E00               	movlw	0
  6108  0067E6  6E2E               	movwf	fat_get_format_status@cntr,c
  6109  0067E8                     l14247:
  6110  0067E8  0E02               	movlw	2
  6111  0067EA  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6112  0067EC  B0D8               	btfsc	status,0,c
  6113  0067EE  D016               	goto	u11290
  6114                           
  6115                           ;fat16.c: 1237: {;fat16.c: 1238: if(buffer[cntr] != _get_mbr(cntr))
  6116  0067F0  0EC0               	movlw	low _buffer
  6117  0067F2  242E               	addwf	fat_get_format_status@cntr,w,c
  6118  0067F4  6ED9               	movwf	fsr2l,c
  6119  0067F6  0E03               	movlw	high _buffer
  6120  0067F8  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6121  0067FA  6EDA               	movwf	fsr2h,c
  6122  0067FC  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6123  006800  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6124  006804  EC79  F02E         	call	__get_mbr	;wreg free
  6125  006808  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6126  00680A  50DE               	movf	postinc2,w,c
  6127  00680C  182D               	xorwf	??_fat_get_format_status+1,w,c
  6128  00680E  B4D8               	btfsc	status,2,c
  6129  006810  D002               	goto	l2244
  6130                           
  6131                           ;fat16.c: 1239: {;fat16.c: 1240: return DRIVE_NOT_FORMATED;
  6132  006812  0E00               	movlw	0
  6133  006814  0012               	return	
  6134  006816                     l2244:
  6135  006816  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6136  006818  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6137  00681A  D7E6               	goto	l14247
  6138  00681C                     u11290:
  6139                           
  6140                           ;fat16.c: 1241: };fat16.c: 1242: };fat16.c: 1245: flash_sector_read(1, buffer);
  6141  00681C  0E00               	movlw	0
  6142  00681E  6E29               	movwf	flash_sector_read@page+1,c
  6143  006820  0E01               	movlw	1
  6144  006822  6E28               	movwf	flash_sector_read@page,c
  6145  006824  0EC0               	movlw	low _buffer
  6146  006826  6E2A               	movwf	flash_sector_read@data,c
  6147  006828  0E03               	movlw	high _buffer
  6148  00682A  6E2B               	movwf	flash_sector_read@data+1,c
  6149  00682C  EC3F  F044         	call	_flash_sector_read	;wreg free
  6150                           
  6151                           ;fat16.c: 1246: for(cntr=0; cntr<512; ++cntr)
  6152  006830  0E00               	movlw	0
  6153  006832  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6154  006834  0E00               	movlw	0
  6155  006836  6E2E               	movwf	fat_get_format_status@cntr,c
  6156  006838                     l14265:
  6157  006838  0E02               	movlw	2
  6158  00683A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6159  00683C  B0D8               	btfsc	status,0,c
  6160  00683E  D016               	goto	u11320
  6161                           
  6162                           ;fat16.c: 1247: {;fat16.c: 1248: if(buffer[cntr] != _get_fbr(cntr))
  6163  006840  0EC0               	movlw	low _buffer
  6164  006842  242E               	addwf	fat_get_format_status@cntr,w,c
  6165  006844  6ED9               	movwf	fsr2l,c
  6166  006846  0E03               	movlw	high _buffer
  6167  006848  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6168  00684A  6EDA               	movwf	fsr2h,c
  6169  00684C  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6170  006850  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6171  006854  ECE6  F00E         	call	__get_fbr	;wreg free
  6172  006858  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6173  00685A  50DE               	movf	postinc2,w,c
  6174  00685C  182D               	xorwf	??_fat_get_format_status+1,w,c
  6175  00685E  B4D8               	btfsc	status,2,c
  6176  006860  D002               	goto	l2248
  6177                           
  6178                           ;fat16.c: 1249: {;fat16.c: 1250: return DRIVE_NOT_FORMATED;
  6179  006862  0E00               	movlw	0
  6180  006864  0012               	return	
  6181  006866                     l2248:
  6182  006866  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6183  006868  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6184  00686A  D7E6               	goto	l14265
  6185  00686C                     u11320:
  6186                           
  6187                           ;fat16.c: 1251: };fat16.c: 1252: };fat16.c: 1255: return DRIVE_FORMATED;
  6188  00686C  0E01               	movlw	1
  6189  00686E  0012               	return	
  6190  006870                     __end_of_fat_get_format_status:
  6191                           	opt stack 0
  6192                           tblptru	equ	0xFF8
  6193                           tblptrh	equ	0xFF7
  6194                           tblptrl	equ	0xFF6
  6195                           tablat	equ	0xFF5
  6196                           intcon	equ	0xFF2
  6197                           intcon3	equ	0xFF0
  6198                           postinc0	equ	0xFEE
  6199                           wreg	equ	0xFE8
  6200                           postdec1	equ	0xFE5
  6201                           plusw1	equ	0xFE3
  6202                           fsr1h	equ	0xFE2
  6203                           fsr1l	equ	0xFE1
  6204                           postinc2	equ	0xFDE
  6205                           plusw2	equ	0xFDB
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function __system_timer0_init *****************
  6211 ;; Defined at:
  6212 ;;		line 112 in file "os.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_system_full_init
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text22
  6240  008C86                     __ptext22:
  6241                           	opt stack 0
  6242  008C86                     __system_timer0_init:
  6243                           	opt stack 29
  6244                           
  6245                           ;os.c: 115: T0CONbits.T0CS = 0;
  6246                           
  6247                           ;incstack = 0
  6248  008C86  9AD5               	bcf	4053,5,c	;volatile
  6249                           
  6250                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6251  008C88  9CD5               	bcf	4053,6,c	;volatile
  6252                           
  6253                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6254  008C8A  94D5               	bcf	4053,2,c	;volatile
  6255                           
  6256                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6257  008C8C  82D5               	bsf	4053,1,c	;volatile
  6258                           
  6259                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6260  008C8E  90D5               	bcf	4053,0,c	;volatile
  6261                           
  6262                           ;os.c: 123: T0CONbits.PSA = 0;
  6263  008C90  96D5               	bcf	4053,3,c	;volatile
  6264                           
  6265                           ;os.c: 125: TMR0H = 0xD1;
  6266  008C92  0ED1               	movlw	209
  6267  008C94  6ED7               	movwf	4055,c	;volatile
  6268                           
  6269                           ;os.c: 126: TMR0L = 0x20;
  6270  008C96  0E20               	movlw	32
  6271  008C98  6ED6               	movwf	4054,c	;volatile
  6272                           
  6273                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6274  008C9A  8ED5               	bsf	4053,7,c	;volatile
  6275                           
  6276                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6277  008C9C  94F2               	bcf	intcon,2,c	;volatile
  6278                           
  6279                           ;os.c: 135: os.timeSlot = 0;
  6280  008C9E  0E00               	movlw	0
  6281  008CA0  0100               	movlb	0	; () banked
  6282  008CA2  6FC7               	movwf	(_os+2)& (0+255),b	;volatile
  6283                           
  6284                           ; BSR set to: 0
  6285  008CA4  0012               	return		;funcret
  6286  008CA6                     __end_of__system_timer0_init:
  6287                           	opt stack 0
  6288                           tblptru	equ	0xFF8
  6289                           tblptrh	equ	0xFF7
  6290                           tblptrl	equ	0xFF6
  6291                           tablat	equ	0xFF5
  6292                           intcon	equ	0xFF2
  6293                           intcon3	equ	0xFF0
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           plusw1	equ	0xFE3
  6298                           fsr1h	equ	0xFE2
  6299                           fsr1l	equ	0xFE1
  6300                           postinc2	equ	0xFDE
  6301                           plusw2	equ	0xFDB
  6302                           fsr2h	equ	0xFDA
  6303                           fsr2l	equ	0xFD9
  6304                           status	equ	0xFD8
  6305                           
  6306 ;; *************** function __system_encoder_init *****************
  6307 ;; Defined at:
  6308 ;;		line 73 in file "os.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;Total ram usage:        0 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_system_full_init
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text23
  6336  00866A                     __ptext23:
  6337                           	opt stack 0
  6338  00866A                     __system_encoder_init:
  6339                           	opt stack 29
  6340                           
  6341                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;incstack = 0
  6345  00866A  0E55               	movlw	85
  6346  00866C  6EA7               	movwf	4007,c	;volsfr
  6347  00866E  0EAA               	movlw	170
  6348  008670  6EA7               	movwf	4007,c	;volsfr
  6349  008672  010E               	movlb	14	; () banked
  6350  008674  91BF               	bcf	191,0,b	;volatile
  6351                           
  6352                           ;os.c: 76: RPINR1 = 0;
  6353  008676  0E00               	movlw	0
  6354  008678  6FE1               	movwf	225,b	;volatile
  6355                           
  6356                           ;os.c: 77: RPINR3 = 9;
  6357  00867A  0E09               	movlw	9
  6358  00867C  6FE3               	movwf	227,b	;volatile
  6359                           
  6360                           ;os.c: 78: RPINR2 = 10;
  6361  00867E  0E0A               	movlw	10
  6362  008680  6FE2               	movwf	226,b	;volatile
  6363                           
  6364                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6365  008682  0E55               	movlw	85
  6366  008684  6EA7               	movwf	4007,c	;volsfr
  6367  008686  0EAA               	movlw	170
  6368  008688  6EA7               	movwf	4007,c	;volsfr
  6369                           
  6370                           ; BSR set to: 14
  6371  00868A  91BF               	bcf	191,0,b	;volatile
  6372                           
  6373                           ; BSR set to: 14
  6374                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6375  00868C  9AF1               	bcf	intcon2,5,c	;volatile
  6376                           
  6377                           ; BSR set to: 14
  6378                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6379  00868E  90F0               	bcf	intcon3,0,c	;volatile
  6380                           
  6381                           ; BSR set to: 14
  6382                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6383  008690  88F1               	bsf	intcon2,4,c	;volatile
  6384                           
  6385                           ; BSR set to: 14
  6386                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6387  008692  92F0               	bcf	intcon3,1,c	;volatile
  6388                           
  6389                           ; BSR set to: 14
  6390                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6391  008694  86F1               	bsf	intcon2,3,c	;volatile
  6392                           
  6393                           ; BSR set to: 14
  6394                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6395  008696  94F0               	bcf	intcon3,2,c	;volatile
  6396                           
  6397                           ;os.c: 91: os.encoderCount = 0;
  6398  008698  0E00               	movlw	0
  6399  00869A  0100               	movlb	0	; () banked
  6400  00869C  6FC5               	movwf	_os& (0+255),b	;volatile
  6401                           
  6402                           ;os.c: 92: os.buttonCount = 0;
  6403  00869E  0E00               	movlw	0
  6404  0086A0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  6405                           
  6406                           ; BSR set to: 0
  6407  0086A2  0012               	return		;funcret
  6408  0086A4                     __end_of__system_encoder_init:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           intcon	equ	0xFF2
  6415                           intcon2	equ	0xFF1
  6416                           intcon3	equ	0xFF0
  6417                           postinc0	equ	0xFEE
  6418                           wreg	equ	0xFE8
  6419                           postdec1	equ	0xFE5
  6420                           plusw1	equ	0xFE3
  6421                           fsr1h	equ	0xFE2
  6422                           fsr1l	equ	0xFE1
  6423                           postinc2	equ	0xFDE
  6424                           plusw2	equ	0xFDB
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function _spi_get_external_tx_buffer *****************
  6430 ;; Defined at:
  6431 ;;		line 75 in file "spi.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  2    0[COMRAM] PTR unsigned char 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;Total ram usage:        2 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_main
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text24
  6459  008F02                     __ptext24:
  6460                           	opt stack 0
  6461  008F02                     _spi_get_external_tx_buffer:
  6462                           	opt stack 30
  6463                           
  6464                           ;spi.c: 77: return _spi_external_tx_buffer;
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;incstack = 0
  6468  008F02  0E40               	movlw	low __spi_external_tx_buffer
  6469  008F04  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6470  008F06  0E03               	movlw	high __spi_external_tx_buffer
  6471  008F08  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6472  008F0A  0012               	return	
  6473  008F0C                     __end_of_spi_get_external_tx_buffer:
  6474                           	opt stack 0
  6475                           tblptru	equ	0xFF8
  6476                           tblptrh	equ	0xFF7
  6477                           tblptrl	equ	0xFF6
  6478                           tablat	equ	0xFF5
  6479                           intcon	equ	0xFF2
  6480                           intcon2	equ	0xFF1
  6481                           intcon3	equ	0xFF0
  6482                           postinc0	equ	0xFEE
  6483                           wreg	equ	0xFE8
  6484                           postdec1	equ	0xFE5
  6485                           plusw1	equ	0xFE3
  6486                           fsr1h	equ	0xFE2
  6487                           fsr1l	equ	0xFE1
  6488                           postinc2	equ	0xFDE
  6489                           plusw2	equ	0xFDB
  6490                           fsr2h	equ	0xFDA
  6491                           fsr2l	equ	0xFD9
  6492                           status	equ	0xFD8
  6493                           
  6494 ;; *************** function _spi_get_external_rx_buffer *****************
  6495 ;; Defined at:
  6496 ;;		line 80 in file "spi.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;		None
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;		None
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  2    0[COMRAM] PTR unsigned char 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;Total ram usage:        2 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_main
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text25
  6524  008F0C                     __ptext25:
  6525                           	opt stack 0
  6526  008F0C                     _spi_get_external_rx_buffer:
  6527                           	opt stack 30
  6528                           
  6529                           ;spi.c: 82: return _spi_external_rx_buffer;
  6530                           
  6531                           ;incstack = 0
  6532  008F0C  0E00               	movlw	low __spi_external_rx_buffer
  6533  008F0E  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6534  008F10  0E03               	movlw	high __spi_external_rx_buffer
  6535  008F12  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6536  008F14  0012               	return	
  6537  008F16                     __end_of_spi_get_external_rx_buffer:
  6538                           	opt stack 0
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           intcon	equ	0xFF2
  6544                           intcon2	equ	0xFF1
  6545                           intcon3	equ	0xFF0
  6546                           postinc0	equ	0xFEE
  6547                           wreg	equ	0xFE8
  6548                           postdec1	equ	0xFE5
  6549                           plusw1	equ	0xFE3
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           postinc2	equ	0xFDE
  6553                           plusw2	equ	0xFDB
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function _jump_to_main_program *****************
  6559 ;; Defined at:
  6560 ;;		line 251 in file "os.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		None
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text26
  6588  008FA6                     __ptext26:
  6589                           	opt stack 0
  6590  008FA6                     _jump_to_main_program:
  6591                           	opt stack 30
  6592                           
  6593                           ;incstack = 0
  6594  008FA6  EF00 F050          	goto	40960	; ;# 
  6595  008FAA  0012               	return		;funcret
  6596  008FAC                     __end_of_jump_to_main_program:
  6597                           	opt stack 0
  6598                           tblptru	equ	0xFF8
  6599                           tblptrh	equ	0xFF7
  6600                           tblptrl	equ	0xFF6
  6601                           tablat	equ	0xFF5
  6602                           intcon	equ	0xFF2
  6603                           intcon2	equ	0xFF1
  6604                           intcon3	equ	0xFF0
  6605                           postinc0	equ	0xFEE
  6606                           wreg	equ	0xFE8
  6607                           postdec1	equ	0xFE5
  6608                           plusw1	equ	0xFE3
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           postinc2	equ	0xFDE
  6612                           plusw2	equ	0xFDB
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _bootloader_run *****************
  6618 ;; Defined at:
  6619 ;;		line 63 in file "bootloader.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  timeslot        1    wreg     unsigned char 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  timeslot        1   91[COMRAM] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;Total ram usage:        1 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    9
  6640 ;; This function calls:
  6641 ;;		__bootloader_find_file
  6642 ;;		__bootloader_program
  6643 ;;		__bootloader_verify_file
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text27
  6650  007A20                     __ptext27:
  6651                           	opt stack 0
  6652  007A20                     _bootloader_run:
  6653                           	opt stack 21
  6654                           
  6655                           ;incstack = 0
  6656                           ;bootloader_run@timeslot stored from wreg
  6657  007A20  6E5C               	movwf	bootloader_run@timeslot,c
  6658                           
  6659                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6660  007A22  0100               	movlb	0	; () banked
  6661  007A24  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  6662  007A26  B4D8               	btfsc	status,2,c
  6663  007A28  0012               	return	
  6664  007A2A  D015               	goto	l2404
  6665  007A2C                     
  6666                           ; BSR set to: 0
  6667                           ;bootloader.c: 74: if(timeslot==0)
  6668                           
  6669                           ; BSR set to: 0
  6670  007A2C  505C               	movf	bootloader_run@timeslot,w,c
  6671  007A2E  A4D8               	btfss	status,2,c
  6672  007A30  0012               	return	
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6676  007A32  EC38  F034         	call	__bootloader_find_file	;wreg free
  6677                           
  6678                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6679  007A36  0012               	return	
  6680  007A38                     
  6681                           ;bootloader.c: 81: if(timeslot==0)
  6682  007A38  505C               	movf	bootloader_run@timeslot,w,c
  6683  007A3A  A4D8               	btfss	status,2,c
  6684  007A3C  0012               	return	
  6685                           
  6686                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6687  007A3E  EC38  F034         	call	__bootloader_find_file	;wreg free
  6688                           
  6689                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6690  007A42  0012               	return	
  6691  007A44                     
  6692                           ;bootloader.c: 88: _bootloader_verify_file();
  6693  007A44  ECCC  F007         	call	__bootloader_verify_file	;wreg free
  6694                           
  6695                           ;bootloader.c: 95: break;
  6696                           
  6697                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6698                           
  6699                           ;bootloader.c: 92: break;
  6700                           
  6701                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6702                           
  6703                           ;bootloader.c: 89: break;
  6704  007A48  0012               	return	
  6705  007A4A                     
  6706                           ;bootloader.c: 98: if(timeslot==0)
  6707  007A4A  505C               	movf	bootloader_run@timeslot,w,c
  6708  007A4C  A4D8               	btfss	status,2,c
  6709  007A4E  0012               	return	
  6710                           
  6711                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6712  007A50  EC4E  F002         	call	__bootloader_program	;wreg free
  6713                           
  6714                           ;bootloader.c: 106: }
  6715                           
  6716                           ;bootloader.c: 105: break;
  6717                           
  6718                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6719                           
  6720                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6721  007A54  0012               	return	
  6722  007A56                     l2404:
  6723  007A56  0100               	movlb	0	; () banked
  6724  007A58  51C9               	movf	(_os+4)& (0+255),w,b	;volatile
  6725                           
  6726                           ; Switch size 1, requested type "space"
  6727                           ; Number of cases is 7, Range of values is 16 to 112
  6728                           ; switch strategies available:
  6729                           ; Name         Instructions Cycles
  6730                           ; simple_byte           22    12 (average)
  6731                           ;	Chosen strategy is simple_byte
  6732  007A5A  0A10               	xorlw	16	; case 16
  6733  007A5C  B4D8               	btfsc	status,2,c
  6734  007A5E  D7E6               	goto	l2405
  6735  007A60  0A30               	xorlw	48	; case 32
  6736  007A62  B4D8               	btfsc	status,2,c
  6737  007A64  D7E9               	goto	l2408
  6738  007A66  0A10               	xorlw	16	; case 48
  6739  007A68  B4D8               	btfsc	status,2,c
  6740  007A6A  D7EC               	goto	l2410
  6741  007A6C  0A70               	xorlw	112	; case 64
  6742  007A6E  B4D8               	btfsc	status,2,c
  6743  007A70  0012               	return	
  6744  007A72  0A10               	xorlw	16	; case 80
  6745  007A74  B4D8               	btfsc	status,2,c
  6746  007A76  0012               	return	
  6747  007A78  0A30               	xorlw	48	; case 96
  6748  007A7A  B4D8               	btfsc	status,2,c
  6749  007A7C  D7E6               	goto	l2413
  6750  007A7E  0A10               	xorlw	16	; case 112
  6751  007A80  0012               	return	
  6752  007A82                     __end_of_bootloader_run:
  6753                           	opt stack 0
  6754                           tblptru	equ	0xFF8
  6755                           tblptrh	equ	0xFF7
  6756                           tblptrl	equ	0xFF6
  6757                           tablat	equ	0xFF5
  6758                           intcon	equ	0xFF2
  6759                           intcon2	equ	0xFF1
  6760                           intcon3	equ	0xFF0
  6761                           postinc0	equ	0xFEE
  6762                           wreg	equ	0xFE8
  6763                           postdec1	equ	0xFE5
  6764                           plusw1	equ	0xFE3
  6765                           fsr1h	equ	0xFE2
  6766                           fsr1l	equ	0xFE1
  6767                           postinc2	equ	0xFDE
  6768                           plusw2	equ	0xFDB
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function __bootloader_verify_file *****************
  6774 ;; Defined at:
  6775 ;;		line 182 in file "bootloader.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  root           32   22[BANK0 ] struct .
  6780 ;;  address32       4   59[BANK0 ] unsigned long 
  6781 ;;  return_value    4   55[BANK0 ] unsigned long 
  6782 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6795 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;Total ram usage:       49 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    8
  6799 ;; This function calls:
  6800 ;;		__bootloader_check_address
  6801 ;;		_fat_get_file_information
  6802 ;;		_fat_get_file_size
  6803 ;;		_fat_read_from_file_fast
  6804 ;;		_parseHexFileEntry
  6805 ;; This function is called by:
  6806 ;;		_bootloader_run
  6807 ;; This function uses a non-reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text28
  6811  000F98                     __ptext28:
  6812                           	opt stack 0
  6813  000F98                     __bootloader_verify_file:
  6814                           	opt stack 21
  6815                           
  6816                           ;bootloader.c: 184: uint8_t rec_counter;;bootloader.c: 185: uint32_t return_value = 0;
  6817                           
  6818                           ;incstack = 0
  6819  000F98  0E00               	movlw	0
  6820  000F9A  0100               	movlb	0	; () banked
  6821  000F9C  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6822  000F9E  0E00               	movlw	0
  6823  000FA0  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6824  000FA2  0E00               	movlw	0
  6825  000FA4  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6826  000FA6  0E00               	movlw	0
  6827  000FA8  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;bootloader.c: 186: uint32_t address32;;bootloader.c: 187: rootEntry_t root;;bootloader.
      +                          c: 189: if(hex_file_offset==0)
  6831  000FAA  51D7               	movf	_hex_file_offset& (0+255),w,b
  6832  000FAC  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6833  000FAE  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6834  000FB0  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6835  000FB2  A4D8               	btfss	status,2,c
  6836  000FB4  D010               	goto	l2435
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;bootloader.c: 190: {;bootloader.c: 192: fat_get_file_information(file_number, &root);
  6840  000FB6  0E76               	movlw	low __bootloader_verify_file@root
  6841  000FB8  6E30               	movwf	fat_get_file_information@data,c
  6842  000FBA  0E00               	movlw	high __bootloader_verify_file@root
  6843  000FBC  6E31               	movwf	fat_get_file_information@data+1,c
  6844  000FBE  51FF               	movf	_file_number& (0+255),w,b
  6845  000FC0  EC2B  F03B         	call	_fat_get_file_information
  6846                           
  6847                           ;bootloader.c: 193: fast_read_cluster = root.firstCluster;
  6848  000FC4  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6849  000FC8  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6850                           
  6851                           ;bootloader.c: 194: fast_read_cluster_number = 0;
  6852  000FCC  0E00               	movlw	0
  6853  000FCE  0100               	movlb	0	; () banked
  6854  000FD0  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6855  000FD2  0E00               	movlw	0
  6856  000FD4  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  6857  000FD6                     l2435:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;bootloader.c: 195: };bootloader.c: 198: hex_file_size = fat_get_file_size(file_number);
  6861                           
  6862                           ; BSR set to: 0
  6863  000FD6  51FF               	movf	_file_number& (0+255),w,b
  6864  000FD8  EC0B  F03C         	call	_fat_get_file_size
  6865  000FDC  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
  6866  000FE0  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6867  000FE4  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6868  000FE8  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6869                           
  6870                           ;bootloader.c: 201: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6871  000FEC  0E00               	movlw	0
  6872  000FEE  0100               	movlb	0	; () banked
  6873  000FF0  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6874  000FF2                     l15277:
  6875                           
  6876                           ; BSR set to: 0
  6877  000FF2  0E0F               	movlw	15
  6878  000FF4  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6879  000FF6  D001               	goto	l2436
  6880  000FF8  0012               	return	
  6881  000FFA                     l2436:
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;bootloader.c: 202: {;bootloader.c: 204: if((hex_file_size-hex_file_offset)>=50)
  6885                           
  6886                           ; BSR set to: 0
  6887  000FFA  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6888  000FFE  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6889  001002  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6890  001006  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6891  00100A  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6892  00100C  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6893  00100E  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6894  001010  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6895  001012  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6896  001014  0E00               	movlw	0
  6897  001016  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6898  001018  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6899  00101A  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6900  00101C  0101               	movlb	1	; () banked
  6901  00101E  514A               	movf	_hex_file_size& (0+255),w,b
  6902  001020  0100               	movlb	0	; () banked
  6903  001022  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6904  001024  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6905  001026  0101               	movlb	1	; () banked
  6906  001028  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6907  00102A  0100               	movlb	0	; () banked
  6908  00102C  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6909  00102E  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6910  001030  0101               	movlb	1	; () banked
  6911  001032  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6912  001034  0100               	movlb	0	; () banked
  6913  001036  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6914  001038  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6915  00103A  0101               	movlb	1	; () banked
  6916  00103C  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6917  00103E  0100               	movlb	0	; () banked
  6918  001040  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6919  001042  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6920  001044  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6921  001046  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6922  001048  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6923  00104A  E104               	bnz	u12220
  6924  00104C  0E32               	movlw	50
  6925  00104E  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6926  001050  A0D8               	btfss	status,0,c
  6927  001052  D01F               	goto	l2438
  6928  001054                     u12220:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;bootloader.c: 205: {;bootloader.c: 207: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6932  001054  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6933  001058  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6934  00105C  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6935  001060  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6936  001064  0E32               	movlw	50
  6937  001066  6E46               	movwf	fat_read_from_file_fast@length,c
  6938  001068  0E00               	movlw	0
  6939  00106A  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6940  00106C  0E00               	movlw	0
  6941  00106E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6942  001070  0E00               	movlw	0
  6943  001072  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6944  001074  0E90               	movlw	low _file_buffer
  6945  001076  6E4A               	movwf	fat_read_from_file_fast@data,c
  6946  001078  0E02               	movlw	high _file_buffer
  6947  00107A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6948  00107C  0EFB               	movlw	low _fast_read_cluster
  6949  00107E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6950  001080  0E00               	movlw	high _fast_read_cluster
  6951  001082  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6952  001084  0EF9               	movlw	low _fast_read_cluster_number
  6953  001086  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6954  001088  0E00               	movlw	high _fast_read_cluster_number
  6955  00108A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6956  00108C  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  6957                           
  6958                           ;bootloader.c: 208: }
  6959  001090  D03C               	goto	l2439
  6960  001092                     l2438:
  6961                           
  6962                           ;bootloader.c: 209: else;bootloader.c: 210: {;bootloader.c: 212: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6963  001092  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6964  001096  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6965  00109A  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6966  00109E  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6967  0010A2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6968  0010A6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6969  0010AA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6970  0010AE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6971  0010B2  0100               	movlb	0	; () banked
  6972  0010B4  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6973  0010B6  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6974  0010B8  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6975  0010BA  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6976  0010BC  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6977  0010BE  0E00               	movlw	0
  6978  0010C0  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6979  0010C2  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6980  0010C4  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6981  0010C6  0101               	movlb	1	; () banked
  6982  0010C8  514A               	movf	_hex_file_size& (0+255),w,b
  6983  0010CA  0100               	movlb	0	; () banked
  6984  0010CC  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6985  0010CE  6E46               	movwf	fat_read_from_file_fast@length,c
  6986  0010D0  0101               	movlb	1	; () banked
  6987  0010D2  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6988  0010D4  0100               	movlb	0	; () banked
  6989  0010D6  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6990  0010D8  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6991  0010DA  0101               	movlb	1	; () banked
  6992  0010DC  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6993  0010DE  0100               	movlb	0	; () banked
  6994  0010E0  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6995  0010E2  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6996  0010E4  0101               	movlb	1	; () banked
  6997  0010E6  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6998  0010E8  0100               	movlb	0	; () banked
  6999  0010EA  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7000  0010EC  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7001  0010EE  0E90               	movlw	low _file_buffer
  7002  0010F0  6E4A               	movwf	fat_read_from_file_fast@data,c
  7003  0010F2  0E02               	movlw	high _file_buffer
  7004  0010F4  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7005  0010F6  0EFB               	movlw	low _fast_read_cluster
  7006  0010F8  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7007  0010FA  0E00               	movlw	high _fast_read_cluster
  7008  0010FC  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7009  0010FE  0EF9               	movlw	low _fast_read_cluster_number
  7010  001100  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7011  001102  0E00               	movlw	high _fast_read_cluster_number
  7012  001104  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7013  001106  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  7014  00110A                     l2439:
  7015                           
  7016                           ;bootloader.c: 213: };bootloader.c: 216: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7017  00110A  0E90               	movlw	low _file_buffer
  7018  00110C  6E0C               	movwf	parseHexFileEntry@data,c
  7019  00110E  0E02               	movlw	high _file_buffer
  7020  001110  6E0D               	movwf	parseHexFileEntry@data+1,c
  7021  001112  0E00               	movlw	0
  7022  001114  6E0E               	movwf	parseHexFileEntry@offset,c
  7023  001116  0E00               	movlw	0
  7024  001118  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7025  00111A  0E00               	movlw	0
  7026  00111C  6E10               	movwf	parseHexFileEntry@offset+2,c
  7027  00111E  0E00               	movlw	0
  7028  001120  6E11               	movwf	parseHexFileEntry@offset+3,c
  7029  001122  0E93               	movlw	low _hex_file_entry
  7030  001124  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7031  001126  0E01               	movlw	high _hex_file_entry
  7032  001128  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7033  00112A  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7034  00112E  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  7035  001132  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  7036  001136  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  7037  00113A  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  7038                           
  7039                           ;bootloader.c: 219: ++hex_file_entries;
  7040  00113E  0101               	movlb	1	; () banked
  7041  001140  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7042  001142  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;bootloader.c: 222: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  7046  001144  0E04               	movlw	4
  7047  001146  1997               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  7048  001148  A4D8               	btfss	status,2,c
  7049  00114A  D01C               	goto	l2440
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;bootloader.c: 223: {;bootloader.c: 224: extended_linear_address = hex_file_entry.data[0
      +                          ];
  7053  00114C  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7054  00114E  6F46               	movwf	_extended_linear_address& (0+255),b
  7055  001150  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7056  001152  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7057  001154  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7058                           
  7059                           ; BSR set to: 1
  7060                           ;bootloader.c: 225: extended_linear_address <<= 8;
  7061  001156  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7062  00115A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7063  00115E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7064  001162  6B46               	clrf	_extended_linear_address& (0+255),b
  7065                           
  7066                           ; BSR set to: 1
  7067                           ;bootloader.c: 226: extended_linear_address |= hex_file_entry.data[1];
  7068  001164  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7069  001166  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7070                           
  7071                           ; BSR set to: 1
  7072                           ;bootloader.c: 227: extended_linear_address <<= 8;
  7073  001168  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7074  00116C  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7075  001170  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7076  001174  6B46               	clrf	_extended_linear_address& (0+255),b
  7077                           
  7078                           ; BSR set to: 1
  7079                           ;bootloader.c: 228: extended_linear_address <<= 8;
  7080  001176  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7081  00117A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7082  00117E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7083  001182  6B46               	clrf	_extended_linear_address& (0+255),b
  7084  001184                     l2440:
  7085                           
  7086                           ; BSR set to: 1
  7087                           ;bootloader.c: 229: };bootloader.c: 232: if(hex_file_entry.recordType==RecordTypeData)
  7088                           
  7089                           ; BSR set to: 1
  7090  001184  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7091  001186  A4D8               	btfss	status,2,c
  7092  001188  D05E               	goto	l2444
  7093                           
  7094                           ; BSR set to: 1
  7095                           ;bootloader.c: 233: {;bootloader.c: 235: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7096  00118A  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7097  00118C  2546               	addwf	_extended_linear_address& (0+255),w,b
  7098  00118E  0100               	movlb	0	; () banked
  7099  001190  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7100  001192  0101               	movlb	1	; () banked
  7101  001194  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7102  001196  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7103  001198  0100               	movlb	0	; () banked
  7104  00119A  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7105  00119C  0E00               	movlw	0
  7106  00119E  0101               	movlb	1	; () banked
  7107  0011A0  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7108  0011A2  0100               	movlb	0	; () banked
  7109  0011A4  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7110  0011A6  0E00               	movlw	0
  7111  0011A8  0101               	movlb	1	; () banked
  7112  0011AA  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7113  0011AC  0100               	movlb	0	; () banked
  7114  0011AE  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7115                           
  7116                           ;bootloader.c: 238: if(address32<file_minimum_address)
  7117  0011B0  0101               	movlb	1	; () banked
  7118  0011B2  5152               	movf	_file_minimum_address& (0+255),w,b
  7119  0011B4  0100               	movlb	0	; () banked
  7120  0011B6  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7121  0011B8  0101               	movlb	1	; () banked
  7122  0011BA  5153               	movf	(_file_minimum_address+1)& (0+255),w,b
  7123  0011BC  0100               	movlb	0	; () banked
  7124  0011BE  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7125  0011C0  0101               	movlb	1	; () banked
  7126  0011C2  5154               	movf	(_file_minimum_address+2)& (0+255),w,b
  7127  0011C4  0100               	movlb	0	; () banked
  7128  0011C6  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7129  0011C8  0101               	movlb	1	; () banked
  7130  0011CA  5155               	movf	(_file_minimum_address+3)& (0+255),w,b
  7131  0011CC  0100               	movlb	0	; () banked
  7132  0011CE  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7133  0011D0  B0D8               	btfsc	status,0,c
  7134  0011D2  D008               	goto	l2442
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;bootloader.c: 239: {;bootloader.c: 240: file_minimum_address = address32;
  7138  0011D4  C09B  F152         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7139  0011D8  C09C  F153         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7140  0011DC  C09D  F154         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7141  0011E0  C09E  F155         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7142  0011E4                     l2442:
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;bootloader.c: 241: };bootloader.c: 242: if(address32>file_maximum_address)
  7146                           
  7147                           ; BSR set to: 0
  7148  0011E4  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7149  0011E6  0101               	movlb	1	; () banked
  7150  0011E8  5D4E               	subwf	_file_maximum_address& (0+255),w,b
  7151  0011EA  0100               	movlb	0	; () banked
  7152  0011EC  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7153  0011EE  0101               	movlb	1	; () banked
  7154  0011F0  594F               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7155  0011F2  0100               	movlb	0	; () banked
  7156  0011F4  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7157  0011F6  0101               	movlb	1	; () banked
  7158  0011F8  5950               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7159  0011FA  0100               	movlb	0	; () banked
  7160  0011FC  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7161  0011FE  0101               	movlb	1	; () banked
  7162  001200  5951               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7163  001202  B0D8               	btfsc	status,0,c
  7164  001204  D008               	goto	l2443
  7165                           
  7166                           ; BSR set to: 1
  7167                           ;bootloader.c: 243: {;bootloader.c: 244: file_maximum_address = address32;
  7168  001206  C09B  F14E         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7169  00120A  C09C  F14F         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7170  00120E  C09D  F150         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7171  001212  C09E  F151         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7172  001216                     l2443:
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;bootloader.c: 245: };bootloader.c: 248: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7176                           
  7177                           ; BSR set to: 1
  7178  001216  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7179  00121A  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7180  00121E  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7181  001222  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7182  001226  C193  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7183  00122A  ECD1  F02C         	call	__bootloader_check_address	;wreg free
  7184  00122E  0AFF               	xorlw	255
  7185  001230  A4D8               	btfss	status,2,c
  7186  001232  D009               	goto	l2444
  7187                           
  7188                           ;bootloader.c: 249: {;bootloader.c: 251: last_error = ShortRecordErrorAddressRange;
  7189  001234  0E0B               	movlw	11
  7190  001236  0101               	movlb	1	; () banked
  7191  001238  6F8C               	movwf	_last_error& (0+255),b
  7192                           
  7193                           ;bootloader.c: 253: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7194  00123A  0E50               	movlw	80
  7195  00123C  0100               	movlb	0	; () banked
  7196  00123E  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7197                           
  7198                           ;bootloader.c: 254: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7199  001240  0E50               	movlw	80
  7200  001242  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7201                           
  7202                           ;bootloader.c: 255: break;
  7203  001244  0012               	return	
  7204  001246                     l2444:
  7205                           
  7206                           ;bootloader.c: 256: };bootloader.c: 257: };bootloader.c: 259: if(return_value==0)
  7207                           
  7208                           ; BSR set to: 0
  7209                           
  7210                           ; BSR set to: 0
  7211  001246  0100               	movlb	0	; () banked
  7212  001248  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7213  00124A  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7214  00124C  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7215  00124E  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7216  001250  A4D8               	btfss	status,2,c
  7217  001252  D027               	goto	l2445
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;bootloader.c: 260: {;bootloader.c: 263: total_hex_file_entries = hex_file_entries;
  7221  001254  C178  F176         	movff	_hex_file_entries,_total_hex_file_entries
  7222  001258  C179  F177         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;bootloader.c: 264: hex_file_entries = 0;
  7226  00125C  0E00               	movlw	0
  7227  00125E  0101               	movlb	1	; () banked
  7228  001260  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
  7229  001262  0E00               	movlw	0
  7230  001264  6F78               	movwf	_hex_file_entries& (0+255),b
  7231                           
  7232                           ;bootloader.c: 265: hex_file_offset = 0;
  7233  001266  0E00               	movlw	0
  7234  001268  0100               	movlb	0	; () banked
  7235  00126A  6FD7               	movwf	_hex_file_offset& (0+255),b
  7236  00126C  0E00               	movlw	0
  7237  00126E  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
  7238  001270  0E00               	movlw	0
  7239  001272  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
  7240  001274  0E00               	movlw	0
  7241  001276  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
  7242                           
  7243                           ;bootloader.c: 266: extended_linear_address = 0;
  7244  001278  0E00               	movlw	0
  7245  00127A  0101               	movlb	1	; () banked
  7246  00127C  6F46               	movwf	_extended_linear_address& (0+255),b
  7247  00127E  0E00               	movlw	0
  7248  001280  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7249  001282  0E00               	movlw	0
  7250  001284  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7251  001286  0E00               	movlw	0
  7252  001288  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7253                           
  7254                           ;bootloader.c: 267: flash_pages_written = 0;
  7255  00128A  0E00               	movlw	0
  7256  00128C  6F75               	movwf	(_flash_pages_written+1)& (0+255),b
  7257  00128E  0E00               	movlw	0
  7258  001290  6F74               	movwf	_flash_pages_written& (0+255),b
  7259                           
  7260                           ;bootloader.c: 268: start_from_byte_next = 0;
  7261  001292  0E00               	movlw	0
  7262  001294  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7263                           
  7264                           ;bootloader.c: 270: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7265  001296  0E40               	movlw	64
  7266  001298  0100               	movlb	0	; () banked
  7267  00129A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7268                           
  7269                           ;bootloader.c: 271: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7270  00129C  0E40               	movlw	64
  7271  00129E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7272                           
  7273                           ;bootloader.c: 272: break;
  7274  0012A0  0012               	return	
  7275  0012A2                     l2445:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;bootloader.c: 274: else if(return_value>0xFFFFFFF0)
  7279                           
  7280                           ; BSR set to: 0
  7281  0012A2  0EF1               	movlw	241
  7282  0012A4  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7283  0012A6  0EFF               	movlw	255
  7284  0012A8  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7285  0012AA  0EFF               	movlw	255
  7286  0012AC  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7287  0012AE  0EFF               	movlw	255
  7288  0012B0  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7289  0012B2  A0D8               	btfss	status,0,c
  7290  0012B4  D009               	goto	l2447
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;bootloader.c: 275: {;bootloader.c: 277: last_error = return_value & 0xF;
  7294  0012B6  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7295  0012B8  0B0F               	andlw	15
  7296  0012BA  0101               	movlb	1	; () banked
  7297  0012BC  6F8C               	movwf	_last_error& (0+255),b
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;bootloader.c: 279: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7301  0012BE  0E50               	movlw	80
  7302  0012C0  0100               	movlb	0	; () banked
  7303  0012C2  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;bootloader.c: 280: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7307  0012C4  0E50               	movlw	80
  7308  0012C6  D7EB               	goto	L1
  7309  0012C8                     l2447:
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;bootloader.c: 283: else;bootloader.c: 284: {;bootloader.c: 286: hex_file_offset += retu
      +                          rn_value;
  7313                           
  7314                           ; BSR set to: 0
  7315  0012C8  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7316  0012CA  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7317  0012CC  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7318  0012CE  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7319  0012D0  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7320  0012D2  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7321  0012D4  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7322  0012D6  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7323                           
  7324                           ; BSR set to: 0
  7325                           
  7326                           ; BSR set to: 0
  7327                           
  7328                           ; BSR set to: 0
  7329  0012D8  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7330  0012DA  D68B               	goto	l15277
  7331  0012DC                     __end_of__bootloader_verify_file:
  7332                           	opt stack 0
  7333                           tblptru	equ	0xFF8
  7334                           tblptrh	equ	0xFF7
  7335                           tblptrl	equ	0xFF6
  7336                           tablat	equ	0xFF5
  7337                           intcon	equ	0xFF2
  7338                           intcon2	equ	0xFF1
  7339                           intcon3	equ	0xFF0
  7340                           postinc0	equ	0xFEE
  7341                           wreg	equ	0xFE8
  7342                           postdec1	equ	0xFE5
  7343                           plusw1	equ	0xFE3
  7344                           fsr1h	equ	0xFE2
  7345                           fsr1l	equ	0xFE1
  7346                           postinc2	equ	0xFDE
  7347                           plusw2	equ	0xFDB
  7348                           fsr2h	equ	0xFDA
  7349                           fsr2l	equ	0xFD9
  7350                           status	equ	0xFD8
  7351                           
  7352 ;; *************** function __bootloader_program *****************
  7353 ;; Defined at:
  7354 ;;		line 291 in file "bootloader.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  root           32   28[BANK0 ] struct .
  7359 ;;  address32       4   64[BANK0 ] unsigned long 
  7360 ;;  return_value    4   60[BANK0 ] unsigned long 
  7361 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7362 ;;  cntr            2   69[BANK0 ] unsigned int 
  7363 ;;  address_with    2   26[BANK0 ] unsigned int 
  7364 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7365 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7366 ;;		 -> pageBuffer(1024), 
  7367 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;Total ram usage:       59 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    8
  7384 ;; This function calls:
  7385 ;;		__bootloader_check_address
  7386 ;;		_fat_get_file_information
  7387 ;;		_fat_read_from_file_fast
  7388 ;;		_internalFlash_addressWithinPage
  7389 ;;		_internalFlash_erasePage
  7390 ;;		_internalFlash_getBuffer
  7391 ;;		_internalFlash_pageFromAddress
  7392 ;;		_internalFlash_readPage
  7393 ;;		_internalFlash_writePage
  7394 ;;		_parseHexFileEntry
  7395 ;; This function is called by:
  7396 ;;		_bootloader_run
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text29
  7401  00049C                     __ptext29:
  7402                           	opt stack 0
  7403  00049C                     __bootloader_program:
  7404                           	opt stack 21
  7405                           
  7406                           ;bootloader.c: 293: uint16_t cntr;;bootloader.c: 294: uint8_t* buffer;;bootloader.c: 295
      +                          : uint16_t entry_page;;bootloader.c: 296: uint16_t page_to_write = 0;
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;incstack = 0
  7410  00049C  0E00               	movlw	0
  7411  00049E  0100               	movlb	0	; () banked
  7412  0004A0  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7413  0004A2  0E00               	movlw	0
  7414  0004A4  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7415                           
  7416                           ;bootloader.c: 297: uint8_t start_from_byte;;bootloader.c: 298: uint32_t address32;;boot
      +                          loader.c: 299: uint32_t return_value = 0;
  7417  0004A6  0E00               	movlw	0
  7418  0004A8  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7419  0004AA  0E00               	movlw	0
  7420  0004AC  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7421  0004AE  0E00               	movlw	0
  7422  0004B0  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7423  0004B2  0E00               	movlw	0
  7424  0004B4  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;bootloader.c: 300: uint16_t address_within_page;;bootloader.c: 301: rootEntry_t root;;b
      +                          ootloader.c: 303: if(hex_file_offset==0)
  7428  0004B6  51D7               	movf	_hex_file_offset& (0+255),w,b
  7429  0004B8  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7430  0004BA  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7431  0004BC  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7432  0004BE  A4D8               	btfss	status,2,c
  7433  0004C0  D010               	goto	l2452
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;bootloader.c: 304: {;bootloader.c: 306: fat_get_file_information(file_number, &root);
  7437  0004C2  0E7C               	movlw	low __bootloader_program@root
  7438  0004C4  6E30               	movwf	fat_get_file_information@data,c
  7439  0004C6  0E00               	movlw	high __bootloader_program@root
  7440  0004C8  6E31               	movwf	fat_get_file_information@data+1,c
  7441  0004CA  51FF               	movf	_file_number& (0+255),w,b
  7442  0004CC  EC2B  F03B         	call	_fat_get_file_information
  7443                           
  7444                           ;bootloader.c: 307: fast_read_cluster = root.firstCluster;
  7445  0004D0  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7446  0004D4  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7447                           
  7448                           ;bootloader.c: 308: fast_read_cluster_number = 0;
  7449  0004D8  0E00               	movlw	0
  7450  0004DA  0100               	movlb	0	; () banked
  7451  0004DC  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7452  0004DE  0E00               	movlw	0
  7453  0004E0  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7454  0004E2                     l2452:
  7455                           
  7456                           ;bootloader.c: 313: {;bootloader.c: 318: if((hex_file_size-hex_file_offset)>=50)
  7457                           
  7458                           ; BSR set to: 0
  7459                           
  7460                           ;bootloader.c: 309: };bootloader.c: 312: while(1)
  7461                           
  7462                           ; BSR set to: 0
  7463  0004E2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7464  0004E6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7465  0004EA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7466  0004EE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7467  0004F2  0100               	movlb	0	; () banked
  7468  0004F4  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7469  0004F6  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7470  0004F8  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7471  0004FA  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7472  0004FC  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7473  0004FE  0E00               	movlw	0
  7474  000500  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7475  000502  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7476  000504  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7477  000506  0101               	movlb	1	; () banked
  7478  000508  514A               	movf	_hex_file_size& (0+255),w,b
  7479  00050A  0100               	movlb	0	; () banked
  7480  00050C  256E               	addwf	??__bootloader_program& (0+255),w,b
  7481  00050E  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7482  000510  0101               	movlb	1	; () banked
  7483  000512  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7484  000514  0100               	movlb	0	; () banked
  7485  000516  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7486  000518  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7487  00051A  0101               	movlb	1	; () banked
  7488  00051C  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7489  00051E  0100               	movlb	0	; () banked
  7490  000520  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7491  000522  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7492  000524  0101               	movlb	1	; () banked
  7493  000526  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7494  000528  0100               	movlb	0	; () banked
  7495  00052A  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7496  00052C  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7497  00052E  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7498  000530  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7499  000532  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7500  000534  E104               	bnz	u12320
  7501  000536  0E32               	movlw	50
  7502  000538  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7503  00053A  A0D8               	btfss	status,0,c
  7504  00053C  D01F               	goto	l2454
  7505  00053E                     u12320:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;bootloader.c: 319: {;bootloader.c: 321: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7509  00053E  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7510  000542  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7511  000546  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7512  00054A  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7513  00054E  0E32               	movlw	50
  7514  000550  6E46               	movwf	fat_read_from_file_fast@length,c
  7515  000552  0E00               	movlw	0
  7516  000554  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7517  000556  0E00               	movlw	0
  7518  000558  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7519  00055A  0E00               	movlw	0
  7520  00055C  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7521  00055E  0E90               	movlw	low _file_buffer
  7522  000560  6E4A               	movwf	fat_read_from_file_fast@data,c
  7523  000562  0E02               	movlw	high _file_buffer
  7524  000564  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7525  000566  0EFB               	movlw	low _fast_read_cluster
  7526  000568  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7527  00056A  0E00               	movlw	high _fast_read_cluster
  7528  00056C  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7529  00056E  0EF9               	movlw	low _fast_read_cluster_number
  7530  000570  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7531  000572  0E00               	movlw	high _fast_read_cluster_number
  7532  000574  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7533  000576  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  7534                           
  7535                           ;bootloader.c: 322: }
  7536  00057A  D03C               	goto	l2455
  7537  00057C                     l2454:
  7538                           
  7539                           ;bootloader.c: 323: else;bootloader.c: 324: {;bootloader.c: 326: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7540  00057C  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7541  000580  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7542  000584  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7543  000588  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7544  00058C  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7545  000590  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7546  000594  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7547  000598  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7548  00059C  0100               	movlb	0	; () banked
  7549  00059E  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7550  0005A0  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7551  0005A2  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7552  0005A4  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7553  0005A6  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7554  0005A8  0E00               	movlw	0
  7555  0005AA  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7556  0005AC  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7557  0005AE  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7558  0005B0  0101               	movlb	1	; () banked
  7559  0005B2  514A               	movf	_hex_file_size& (0+255),w,b
  7560  0005B4  0100               	movlb	0	; () banked
  7561  0005B6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7562  0005B8  6E46               	movwf	fat_read_from_file_fast@length,c
  7563  0005BA  0101               	movlb	1	; () banked
  7564  0005BC  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7565  0005BE  0100               	movlb	0	; () banked
  7566  0005C0  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7567  0005C2  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7568  0005C4  0101               	movlb	1	; () banked
  7569  0005C6  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7570  0005C8  0100               	movlb	0	; () banked
  7571  0005CA  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7572  0005CC  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7573  0005CE  0101               	movlb	1	; () banked
  7574  0005D0  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7575  0005D2  0100               	movlb	0	; () banked
  7576  0005D4  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7577  0005D6  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7578  0005D8  0E90               	movlw	low _file_buffer
  7579  0005DA  6E4A               	movwf	fat_read_from_file_fast@data,c
  7580  0005DC  0E02               	movlw	high _file_buffer
  7581  0005DE  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7582  0005E0  0EFB               	movlw	low _fast_read_cluster
  7583  0005E2  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7584  0005E4  0E00               	movlw	high _fast_read_cluster
  7585  0005E6  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7586  0005E8  0EF9               	movlw	low _fast_read_cluster_number
  7587  0005EA  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7588  0005EC  0E00               	movlw	high _fast_read_cluster_number
  7589  0005EE  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7590  0005F0  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  7591  0005F4                     l2455:
  7592                           
  7593                           ;bootloader.c: 327: };bootloader.c: 330: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7594  0005F4  0E90               	movlw	low _file_buffer
  7595  0005F6  6E0C               	movwf	parseHexFileEntry@data,c
  7596  0005F8  0E02               	movlw	high _file_buffer
  7597  0005FA  6E0D               	movwf	parseHexFileEntry@data+1,c
  7598  0005FC  0E00               	movlw	0
  7599  0005FE  6E0E               	movwf	parseHexFileEntry@offset,c
  7600  000600  0E00               	movlw	0
  7601  000602  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7602  000604  0E00               	movlw	0
  7603  000606  6E10               	movwf	parseHexFileEntry@offset+2,c
  7604  000608  0E00               	movlw	0
  7605  00060A  6E11               	movwf	parseHexFileEntry@offset+3,c
  7606  00060C  0E93               	movlw	low _hex_file_entry
  7607  00060E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7608  000610  0E01               	movlw	high _hex_file_entry
  7609  000612  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7610  000614  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7611  000618  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7612  00061C  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7613  000620  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7614  000624  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7615                           
  7616                           ;bootloader.c: 333: ++hex_file_entries;
  7617  000628  0101               	movlb	1	; () banked
  7618  00062A  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7619  00062C  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7620                           
  7621                           ; BSR set to: 1
  7622                           ;bootloader.c: 336: if(return_value>RecordErrorNoError)
  7623  00062E  0EF1               	movlw	241
  7624  000630  0100               	movlb	0	; () banked
  7625  000632  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7626  000634  0EFF               	movlw	255
  7627  000636  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7628  000638  0EFF               	movlw	255
  7629  00063A  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7630  00063C  0EFF               	movlw	255
  7631  00063E  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7632  000640  A0D8               	btfss	status,0,c
  7633  000642  D005               	goto	l2456
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;bootloader.c: 337: {;bootloader.c: 339: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7637  000644  0E50               	movlw	80
  7638  000646  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7639                           
  7640                           ;bootloader.c: 340: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7641  000648  0E50               	movlw	80
  7642  00064A  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;bootloader.c: 341: return;
  7646  00064C  0012               	return	
  7647  00064E                     l2456:
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;bootloader.c: 343: else;bootloader.c: 344: {;bootloader.c: 346: hex_file_offset += retu
      +                          rn_value;
  7651                           
  7652                           ; BSR set to: 0
  7653  00064E  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7654  000650  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7655  000652  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7656  000654  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7657  000656  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7658  000658  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7659  00065A  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7660  00065C  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;bootloader.c: 347: };bootloader.c: 349: switch(hex_file_entry.recordType)
  7664  00065E  D0FA               	goto	l2459
  7665  000660                     
  7666                           ;bootloader.c: 355: extended_linear_address = hex_file_entry.data[0];
  7667                           
  7668                           ; BSR set to: 0
  7669  000660  0101               	movlb	1	; () banked
  7670  000662  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7671  000664  6F46               	movwf	_extended_linear_address& (0+255),b
  7672  000666  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7673  000668  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7674  00066A  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7675                           
  7676                           ; BSR set to: 1
  7677                           ;bootloader.c: 356: extended_linear_address <<= 8;
  7678  00066C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7679  000670  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7680  000674  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7681  000678  6B46               	clrf	_extended_linear_address& (0+255),b
  7682                           
  7683                           ; BSR set to: 1
  7684                           ;bootloader.c: 357: extended_linear_address |= hex_file_entry.data[1];
  7685  00067A  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7686  00067C  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7687                           
  7688                           ; BSR set to: 1
  7689                           ;bootloader.c: 358: extended_linear_address <<= 8;
  7690  00067E  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7691  000682  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7692  000686  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7693  00068A  6B46               	clrf	_extended_linear_address& (0+255),b
  7694                           
  7695                           ; BSR set to: 1
  7696                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7697  00068C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7698  000690  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7699  000694  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7700  000698  6B46               	clrf	_extended_linear_address& (0+255),b
  7701                           
  7702                           ; BSR set to: 1
  7703                           ;bootloader.c: 361: break;
  7704                           
  7705                           ;bootloader.c: 360: continue;
  7706  00069A  D723               	goto	l2452
  7707  00069C                     l2463:
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;bootloader.c: 366: start_from_byte = start_from_byte_next;
  7711  00069C  C18B  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7712                           
  7713                           ; BSR set to: 1
  7714                           ;bootloader.c: 368: start_from_byte_next = 0;
  7715  0006A0  0E00               	movlw	0
  7716  0006A2  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7717                           
  7718                           ; BSR set to: 1
  7719                           ;bootloader.c: 371: address32 = extended_linear_address + hex_file_entry.address;
  7720  0006A4  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7721  0006A6  2546               	addwf	_extended_linear_address& (0+255),w,b
  7722  0006A8  0100               	movlb	0	; () banked
  7723  0006AA  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  7724  0006AC  0101               	movlb	1	; () banked
  7725  0006AE  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7726  0006B0  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7727  0006B2  0100               	movlb	0	; () banked
  7728  0006B4  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7729  0006B6  0E00               	movlw	0
  7730  0006B8  0101               	movlb	1	; () banked
  7731  0006BA  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7732  0006BC  0100               	movlb	0	; () banked
  7733  0006BE  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7734  0006C0  0E00               	movlw	0
  7735  0006C2  0101               	movlb	1	; () banked
  7736  0006C4  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7737  0006C6  0100               	movlb	0	; () banked
  7738  0006C8  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;bootloader.c: 372: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7742  0006CA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7743  0006CC  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7744  0006CE  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7745  0006D0  0E00               	movlw	0
  7746  0006D2  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7747  0006D4  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7748  0006D6  0E00               	movlw	0
  7749  0006D8  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7750  0006DA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7751  0006DC  0E00               	movlw	0
  7752  0006DE  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7753  0006E0  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7754  0006E2  ECAD  F046         	call	_internalFlash_pageFromAddress	;wreg free
  7755  0006E6  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7756  0006EA  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7757                           
  7758                           ;bootloader.c: 375: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7759  0006EE  0100               	movlb	0	; () banked
  7760  0006F0  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7761  0006F2  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7762  0006F4  6E01               	movwf	__bootloader_check_address@address,c
  7763  0006F6  0E00               	movlw	0
  7764  0006F8  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7765  0006FA  6E02               	movwf	__bootloader_check_address@address+1,c
  7766  0006FC  0E00               	movlw	0
  7767  0006FE  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7768  000700  6E03               	movwf	__bootloader_check_address@address+2,c
  7769  000702  0E00               	movlw	0
  7770  000704  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7771  000706  6E04               	movwf	__bootloader_check_address@address+3,c
  7772  000708  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7773  00070A  0800               	sublw	0
  7774  00070C  0101               	movlb	1	; () banked
  7775  00070E  2593               	addwf	_hex_file_entry& (0+255),w,b
  7776  000710  6E05               	movwf	__bootloader_check_address@dataLength,c
  7777  000712  ECD1  F02C         	call	__bootloader_check_address	;wreg free
  7778  000716  0900               	iorlw	0
  7779  000718  A4D8               	btfss	status,2,c
  7780  00071A  D6E3               	goto	l2452
  7781                           
  7782                           ;bootloader.c: 378: };bootloader.c: 380: if(page_to_write==0)
  7783                           
  7784                           ;bootloader.c: 376: {;bootloader.c: 377: break;
  7785  00071C  0100               	movlb	0	; () banked
  7786  00071E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7787  000720  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7788  000722  A4D8               	btfss	status,2,c
  7789  000724  D010               	goto	l2465
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;bootloader.c: 381: {;bootloader.c: 385: page_to_write = entry_page;
  7793  000726  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7794  00072A  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;bootloader.c: 386: internalFlash_readPage(page_to_write);
  7798  00072E  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7799  000732  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7800  000736  EC56  F042         	call	_internalFlash_readPage	;wreg free
  7801                           
  7802                           ;bootloader.c: 387: buffer = internalFlash_getBuffer();
  7803  00073A  EC8B  F047         	call	_internalFlash_getBuffer	;wreg free
  7804  00073E  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7805  000742  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7806  000746                     l2465:
  7807                           
  7808                           ;bootloader.c: 388: };bootloader.c: 390: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7809  000746  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7810  00074A  0100               	movlb	0	; () banked
  7811  00074C  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7812  00074E  D05D               	goto	l2466
  7813  000750                     
  7814                           ; BSR set to: 0
  7815                           ;bootloader.c: 391: {;bootloader.c: 394: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7816                           
  7817                           ; BSR set to: 0
  7818  000750  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7819  000752  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7820  000754  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7821  000756  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7822  000758  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7823  00075A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7824  00075C  0E00               	movlw	0
  7825  00075E  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7826  000760  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7827  000762  0E00               	movlw	0
  7828  000764  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7829  000766  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7830  000768  ECAD  F046         	call	_internalFlash_pageFromAddress	;wreg free
  7831  00076C  0100               	movlb	0	; () banked
  7832  00076E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7833  000770  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7834  000772  E12A               	bnz	l15409
  7835  000774  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7836  000776  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7837  000778  A4D8               	btfss	status,2,c
  7838  00077A  D026               	goto	l2468
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;bootloader.c: 395: {;bootloader.c: 396: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7842  00077C  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7843  00077E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7844  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7845  000782  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7846  000784  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7847  000786  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7848  000788  0E00               	movlw	0
  7849  00078A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7850  00078C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7851  00078E  0E00               	movlw	0
  7852  000790  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7853  000792  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7854  000794  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7855  000798  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7856  00079C  ECD4  F03D         	call	_internalFlash_addressWithinPage	;wreg free
  7857  0007A0  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7858  0007A4  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7859                           
  7860                           ;bootloader.c: 397: buffer[address_within_page] = hex_file_entry.data[cntr];
  7861  0007A8  0E98               	movlw	low (_hex_file_entry+5)
  7862  0007AA  0100               	movlb	0	; () banked
  7863  0007AC  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  7864  0007AE  6ED9               	movwf	fsr2l,c
  7865  0007B0  0E01               	movlw	high (_hex_file_entry+5)
  7866  0007B2  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7867  0007B4  6EDA               	movwf	fsr2h,c
  7868  0007B6  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7869  0007B8  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  7870  0007BA  6EE1               	movwf	fsr1l,c
  7871  0007BC  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7872  0007BE  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7873  0007C0  6EE2               	movwf	fsr1h,c
  7874  0007C2  CFDF FFE7          	movff	indf2,indf1
  7875                           
  7876                           ;bootloader.c: 398: }
  7877  0007C6  D01E               	goto	l2469
  7878  0007C8                     l2468:
  7879  0007C8                     l15409:
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;bootloader.c: 399: else;bootloader.c: 400: {;bootloader.c: 402: hex_file_offset -= retu
      +                          rn_value;
  7883  0007C8  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7884  0007CA  5FD7               	subwf	_hex_file_offset& (0+255),f,b
  7885  0007CC  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7886  0007CE  5BD8               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7887  0007D0  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7888  0007D2  5BD9               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7889  0007D4  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7890  0007D6  5BDA               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;bootloader.c: 403: --hex_file_entries;
  7894  0007D8  0101               	movlb	1	; () banked
  7895  0007DA  0778               	decf	_hex_file_entries& (0+255),f,b
  7896  0007DC  A0D8               	btfss	status,0,c
  7897  0007DE  0779               	decf	(_hex_file_entries+1)& (0+255),f,b
  7898                           
  7899                           ; BSR set to: 1
  7900                           ;bootloader.c: 405: start_from_byte_next = cntr;
  7901  0007E0  C0A5  F18B         	movff	__bootloader_program@cntr,_start_from_byte_next
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;bootloader.c: 407: internalFlash_erasePage(page_to_write);
  7905  0007E4  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7906  0007E8  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7907  0007EC  ECBF  F043         	call	_internalFlash_erasePage	;wreg free
  7908                           
  7909                           ;bootloader.c: 408: internalFlash_writePage(page_to_write);
  7910  0007F0  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7911  0007F4  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7912  0007F8  ECFE  F039         	call	_internalFlash_writePage	;wreg free
  7913                           
  7914                           ;bootloader.c: 409: ++flash_pages_written;
  7915  0007FC  0101               	movlb	1	; () banked
  7916  0007FE  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7917  000800  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7918                           
  7919                           ; BSR set to: 1
  7920                           ;bootloader.c: 411: return;
  7921  000802  0012               	return	
  7922  000804                     l2469:
  7923                           
  7924                           ; BSR set to: 1
  7925  000804  0100               	movlb	0	; () banked
  7926  000806  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7927  000808  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7928  00080A                     l2466:
  7929                           
  7930                           ; BSR set to: 0
  7931                           
  7932                           ; BSR set to: 0
  7933  00080A  0101               	movlb	1	; () banked
  7934  00080C  5193               	movf	_hex_file_entry& (0+255),w,b
  7935  00080E  0100               	movlb	0	; () banked
  7936  000810  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  7937  000812  0101               	movlb	1	; () banked
  7938  000814  5194               	movf	(_hex_file_entry+1)& (0+255),w,b
  7939  000816  0100               	movlb	0	; () banked
  7940  000818  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7941  00081A  B0D8               	btfsc	status,0,c
  7942  00081C  D662               	goto	l2452
  7943  00081E  D798               	goto	l2467
  7944  000820                     
  7945                           ;bootloader.c: 419: if(page_to_write!=0)
  7946                           
  7947                           ; BSR set to: 0
  7948  000820  0100               	movlb	0	; () banked
  7949  000822  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7950  000824  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7951  000826  B4D8               	btfsc	status,2,c
  7952  000828  0012               	return	
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;bootloader.c: 420: {;bootloader.c: 422: internalFlash_erasePage(page_to_write);
  7956  00082A  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7957  00082E  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7958  000832  ECBF  F043         	call	_internalFlash_erasePage	;wreg free
  7959                           
  7960                           ;bootloader.c: 423: internalFlash_writePage(page_to_write);
  7961  000836  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7962  00083A  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7963  00083E  ECFE  F039         	call	_internalFlash_writePage	;wreg free
  7964                           
  7965                           ;bootloader.c: 424: ++flash_pages_written;
  7966  000842  0101               	movlb	1	; () banked
  7967  000844  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7968  000846  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7969                           
  7970                           ; BSR set to: 1
  7971                           ;bootloader.c: 426: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7972  000848  0E70               	movlw	112
  7973  00084A  0100               	movlb	0	; () banked
  7974  00084C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;bootloader.c: 427: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7978  00084E  0E70               	movlw	112
  7979  000850  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;bootloader.c: 428: };bootloader.c: 430: return;
  7983                           
  7984                           ; BSR set to: 0
  7985  000852  0012               	return	
  7986  000854                     l2459:
  7987                           
  7988                           ; BSR set to: 0
  7989                           
  7990                           ; BSR set to: 0
  7991  000854  0101               	movlb	1	; () banked
  7992  000856  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7993                           
  7994                           ; Switch size 1, requested type "space"
  7995                           ; Number of cases is 3, Range of values is 0 to 4
  7996                           ; switch strategies available:
  7997                           ; Name         Instructions Cycles
  7998                           ; simple_byte           10     6 (average)
  7999                           ;	Chosen strategy is simple_byte
  8000  000858  0A00               	xorlw	0	; case 0
  8001  00085A  B4D8               	btfsc	status,2,c
  8002  00085C  D71F               	goto	l2463
  8003  00085E  0A01               	xorlw	1	; case 1
  8004  000860  B4D8               	btfsc	status,2,c
  8005  000862  D7DE               	goto	l2471
  8006  000864  0A05               	xorlw	5	; case 4
  8007  000866  B4D8               	btfsc	status,2,c
  8008  000868  D6FB               	goto	l2460
  8009                           
  8010                           ; BSR set to: 1
  8011                           
  8012                           ; BSR set to: 1
  8013  00086A  D63B               	goto	l2452
  8014  00086C                     __end_of__bootloader_program:
  8015                           	opt stack 0
  8016                           tblptru	equ	0xFF8
  8017                           tblptrh	equ	0xFF7
  8018                           tblptrl	equ	0xFF6
  8019                           tablat	equ	0xFF5
  8020                           intcon	equ	0xFF2
  8021                           intcon2	equ	0xFF1
  8022                           intcon3	equ	0xFF0
  8023                           postinc0	equ	0xFEE
  8024                           wreg	equ	0xFE8
  8025                           indf1	equ	0xFE7
  8026                           postdec1	equ	0xFE5
  8027                           plusw1	equ	0xFE3
  8028                           fsr1h	equ	0xFE2
  8029                           fsr1l	equ	0xFE1
  8030                           indf2	equ	0xFDF
  8031                           postinc2	equ	0xFDE
  8032                           plusw2	equ	0xFDB
  8033                           fsr2h	equ	0xFDA
  8034                           fsr2l	equ	0xFD9
  8035                           status	equ	0xFD8
  8036                           
  8037 ;; *************** function _parseHexFileEntry *****************
  8038 ;; Defined at:
  8039 ;;		line 59 in file "hex.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  data            2   11[COMRAM] PTR unsigned char 
  8042 ;;		 -> file_buffer(50), 
  8043 ;;  offset          4   13[COMRAM] unsigned long 
  8044 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  8045 ;;		 -> hex_file_entry(23), 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  i               1   27[COMRAM] unsigned char 
  8048 ;; Return value:  Size  Location     Type
  8049 ;;                  4   11[COMRAM] unsigned long 
  8050 ;; Registers used:
  8051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8052 ;; Tracked objects:
  8053 ;;		On entry : 0/0
  8054 ;;		On exit  : 0/0
  8055 ;;		Unchanged: 0/0
  8056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8057 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8059 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;Total ram usage:       17 bytes
  8062 ;; Hardware stack levels used:    1
  8063 ;; Hardware stack levels required when called:    2
  8064 ;; This function calls:
  8065 ;;		_hexCharsToUint16
  8066 ;;		_hexCharsToUint8
  8067 ;; This function is called by:
  8068 ;;		__bootloader_verify_file
  8069 ;;		__bootloader_program
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text30
  8074  000020                     __ptext30:
  8075                           	opt stack 0
  8076  000020                     _parseHexFileEntry:
  8077                           	opt stack 26
  8078                           
  8079                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  8080                           
  8081                           ;incstack = 0
  8082  000020  500E               	movf	parseHexFileEntry@offset,w,c
  8083  000022  240C               	addwf	parseHexFileEntry@data,w,c
  8084  000024  6ED9               	movwf	fsr2l,c
  8085  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  8086  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8087  00002A  6EDA               	movwf	fsr2h,c
  8088  00002C  0E3A               	movlw	58
  8089  00002E  18DE               	xorwf	postinc2,w,c
  8090  000030  B4D8               	btfsc	status,2,c
  8091  000032  D005               	goto	l2314
  8092                           
  8093                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  8094  000034  680C               	setf	?_parseHexFileEntry,c
  8095  000036  680D               	setf	?_parseHexFileEntry+1,c
  8096  000038  680E               	setf	?_parseHexFileEntry+2,c
  8097  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8098  00003C  0012               	return	
  8099  00003E                     l2314:
  8100                           
  8101                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8102  00003E  0E02               	movlw	2
  8103  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8104  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8105  000044  0E00               	movlw	0
  8106  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8107  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8108  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8109  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8110  00004E  6ED9               	movwf	fsr2l,c
  8111  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8112  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8113  000054  6EDA               	movwf	fsr2h,c
  8114  000056  50DF               	movf	indf2,w,c
  8115  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8116  00005A  0E01               	movlw	1
  8117  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8118  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8119  000060  0E00               	movlw	0
  8120  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8121  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8122  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8123  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8124  00006A  6ED9               	movwf	fsr2l,c
  8125  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8126  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8127  000070  6EDA               	movwf	fsr2h,c
  8128  000072  50DF               	movf	indf2,w,c
  8129  000074  EC9F  F046         	call	_hexCharsToUint8
  8130  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8131  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8132  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8133  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8134  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8135  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8136                           
  8137                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8138  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8139  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8140  000094  0E01               	movlw	1
  8141  000096  50DB               	movf	plusw2,w,c
  8142  000098  E104               	bnz	u11340
  8143  00009A  0E11               	movlw	17
  8144  00009C  5CDE               	subwf	postinc2,w,c
  8145  00009E  A0D8               	btfss	status,0,c
  8146  0000A0  D009               	goto	l2316
  8147  0000A2                     u11340:
  8148                           
  8149                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8150  0000A2  0EFC               	movlw	252
  8151  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8152  0000A6  0EFF               	movlw	255
  8153  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8154  0000AA  0EFF               	movlw	255
  8155  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8156  0000AE  0EFF               	movlw	255
  8157  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8158  0000B2  0012               	return	
  8159  0000B4                     l2316:
  8160                           
  8161                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8162  0000B4  0E04               	movlw	4
  8163  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8164  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8165  0000BA  0E00               	movlw	0
  8166  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8167  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8168  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8169  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8170  0000C4  6ED9               	movwf	fsr2l,c
  8171  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8172  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8173  0000CA  6EDA               	movwf	fsr2h,c
  8174  0000CC  50DF               	movf	indf2,w,c
  8175  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8176  0000D0  0E05               	movlw	5
  8177  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8178  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8179  0000D6  0E00               	movlw	0
  8180  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8181  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8182  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8183  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8184  0000E0  6ED9               	movwf	fsr2l,c
  8185  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8186  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8187  0000E6  6EDA               	movwf	fsr2h,c
  8188  0000E8  50DF               	movf	indf2,w,c
  8189  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8190  0000EC  0E06               	movlw	6
  8191  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8192  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8193  0000F2  0E00               	movlw	0
  8194  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8195  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8196  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8197  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8198  0000FC  6ED9               	movwf	fsr2l,c
  8199  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8200  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8201  000102  6EDA               	movwf	fsr2h,c
  8202  000104  50DF               	movf	indf2,w,c
  8203  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8204  000108  0E03               	movlw	3
  8205  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8206  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8207  00010E  0E00               	movlw	0
  8208  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8209  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8210  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8211  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8212  000118  6ED9               	movwf	fsr2l,c
  8213  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8214  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8215  00011E  6EDA               	movwf	fsr2h,c
  8216  000120  50DF               	movf	indf2,w,c
  8217  000122  EC64  F03B         	call	_hexCharsToUint16
  8218  000126  EE20 F002          	lfsr	2,2
  8219  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8220  00012C  26D9               	addwf	fsr2l,f,c
  8221  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8222  000130  22DA               	addwfc	fsr2h,f,c
  8223  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8224  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8225                           
  8226                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8227  00013A  EE20 F004          	lfsr	2,4
  8228  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8229  000140  26D9               	addwf	fsr2l,f,c
  8230  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8231  000144  22DA               	addwfc	fsr2h,f,c
  8232  000146  0E08               	movlw	8
  8233  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8234  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8235  00014C  0E00               	movlw	0
  8236  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8237  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8238  000152  5014               	movf	??_parseHexFileEntry,w,c
  8239  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8240  000156  6EE1               	movwf	fsr1l,c
  8241  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8242  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8243  00015C  6EE2               	movwf	fsr1h,c
  8244  00015E  50E7               	movf	indf1,w,c
  8245  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8246  000162  0E07               	movlw	7
  8247  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8248  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8249  000168  0E00               	movlw	0
  8250  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8251  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8252  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8253  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8254  000172  6EE1               	movwf	fsr1l,c
  8255  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8256  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8257  000178  6EE2               	movwf	fsr1h,c
  8258  00017A  50E7               	movf	indf1,w,c
  8259  00017C  EC9F  F046         	call	_hexCharsToUint8
  8260  000180  6EDF               	movwf	indf2,c
  8261                           
  8262                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8263  000182  0E00               	movlw	0
  8264  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8265  000186  D03D               	goto	l2317
  8266  000188                     
  8267                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8268  000188  501C               	movf	parseHexFileEntry@i,w,c
  8269  00018A  0D01               	mullw	1
  8270  00018C  0E05               	movlw	5
  8271  00018E  26F3               	addwf	prodl,f,c
  8272  000190  0E00               	movlw	0
  8273  000192  22F4               	addwfc	prodh,f,c
  8274  000194  50F3               	movf	prodl,w,c
  8275  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8276  000198  6ED9               	movwf	fsr2l,c
  8277  00019A  50F4               	movf	prodh,w,c
  8278  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8279  00019E  6EDA               	movwf	fsr2h,c
  8280  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8281  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8282  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8283  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8284  0001AA  0E00               	movlw	0
  8285  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8286  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8287  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8288  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8289  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8290  0001B6  0E0A               	movlw	10
  8291  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8292  0001BA  0E00               	movlw	0
  8293  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8294  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8295  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8296  0001C2  6EE1               	movwf	fsr1l,c
  8297  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8298  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8299  0001C8  6EE2               	movwf	fsr1h,c
  8300  0001CA  50E7               	movf	indf1,w,c
  8301  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8302  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8303  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8304  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8305  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8306  0001D8  0E00               	movlw	0
  8307  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8308  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8309  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8310  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8311  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8312  0001E4  0E09               	movlw	9
  8313  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8314  0001E8  0E00               	movlw	0
  8315  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8316  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8317  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8318  0001F0  6EE1               	movwf	fsr1l,c
  8319  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8320  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8321  0001F6  6EE2               	movwf	fsr1h,c
  8322  0001F8  50E7               	movf	indf1,w,c
  8323  0001FA  EC9F  F046         	call	_hexCharsToUint8
  8324  0001FE  6EDF               	movwf	indf2,c
  8325  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8326  000202                     l2317:
  8327  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8328  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8329  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8330  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8331  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8332  000210  50DE               	movf	postinc2,w,c
  8333  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8334  000214  50DE               	movf	postinc2,w,c
  8335  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8336  000218  A0D8               	btfss	status,0,c
  8337  00021A  D7B6               	goto	l2318
  8338                           
  8339                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8340  00021C  EE20 F015          	lfsr	2,21
  8341  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8342  000222  26D9               	addwf	fsr2l,f,c
  8343  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8344  000226  22DA               	addwfc	fsr2h,f,c
  8345  000228  501C               	movf	parseHexFileEntry@i,w,c
  8346  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8347  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8348  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8349  000232  0E00               	movlw	0
  8350  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8351  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8352  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8353  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8354  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8355  00023E  0E0A               	movlw	10
  8356  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8357  000242  0E00               	movlw	0
  8358  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8359  000246  5014               	movf	??_parseHexFileEntry,w,c
  8360  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8361  00024A  6EE1               	movwf	fsr1l,c
  8362  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8363  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8364  000250  6EE2               	movwf	fsr1h,c
  8365  000252  50E7               	movf	indf1,w,c
  8366  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8367  000256  501C               	movf	parseHexFileEntry@i,w,c
  8368  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8369  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8370  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8371  000260  0E00               	movlw	0
  8372  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8373  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8374  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8375  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8376  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8377  00026C  0E09               	movlw	9
  8378  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8379  000270  0E00               	movlw	0
  8380  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8381  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8382  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8383  000278  6EE1               	movwf	fsr1l,c
  8384  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8385  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8386  00027E  6EE2               	movwf	fsr1h,c
  8387  000280  50E7               	movf	indf1,w,c
  8388  000282  EC9F  F046         	call	_hexCharsToUint8
  8389  000286  6EDF               	movwf	indf2,c
  8390                           
  8391                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8392  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8393  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8394  000290  EE10 F016          	lfsr	1,22
  8395  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8396  000296  26E1               	addwf	fsr1l,f,c
  8397  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8398  00029A  22E2               	addwfc	fsr1h,f,c
  8399  00029C  CFDF FFE7          	movff	indf2,indf1
  8400                           
  8401                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8402  0002A0  EE20 F002          	lfsr	2,2
  8403  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8404  0002A6  26D9               	addwf	fsr2l,f,c
  8405  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8406  0002AA  22DA               	addwfc	fsr2h,f,c
  8407  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8408  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8409  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8410  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8411  0002BA  EE20 F016          	lfsr	2,22
  8412  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8413  0002C0  26D9               	addwf	fsr2l,f,c
  8414  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8415  0002C4  22DA               	addwfc	fsr2h,f,c
  8416  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8417  0002C8  26DF               	addwf	indf2,f,c
  8418                           
  8419                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8420  0002CA  EE20 F002          	lfsr	2,2
  8421  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8422  0002D0  26D9               	addwf	fsr2l,f,c
  8423  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8424  0002D4  22DA               	addwfc	fsr2h,f,c
  8425  0002D6  50DF               	movf	indf2,w,c
  8426  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8427  0002DA  EE20 F016          	lfsr	2,22
  8428  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8429  0002E0  26D9               	addwf	fsr2l,f,c
  8430  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8431  0002E4  22DA               	addwfc	fsr2h,f,c
  8432  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8433  0002E8  26DF               	addwf	indf2,f,c
  8434                           
  8435                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8436  0002EA  EE20 F004          	lfsr	2,4
  8437  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8438  0002F0  26D9               	addwf	fsr2l,f,c
  8439  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8440  0002F4  22DA               	addwfc	fsr2h,f,c
  8441  0002F6  50DF               	movf	indf2,w,c
  8442  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8443  0002FA  EE20 F016          	lfsr	2,22
  8444  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8445  000300  26D9               	addwf	fsr2l,f,c
  8446  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8447  000304  22DA               	addwfc	fsr2h,f,c
  8448  000306  5014               	movf	??_parseHexFileEntry,w,c
  8449  000308  26DF               	addwf	indf2,f,c
  8450                           
  8451                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8452  00030A  0E00               	movlw	0
  8453  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8454  00030E  D017               	goto	l2320
  8455  000310                     
  8456                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8457  000310  501C               	movf	parseHexFileEntry@i,w,c
  8458  000312  0D01               	mullw	1
  8459  000314  0E05               	movlw	5
  8460  000316  26F3               	addwf	prodl,f,c
  8461  000318  0E00               	movlw	0
  8462  00031A  22F4               	addwfc	prodh,f,c
  8463  00031C  50F3               	movf	prodl,w,c
  8464  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8465  000320  6ED9               	movwf	fsr2l,c
  8466  000322  50F4               	movf	prodh,w,c
  8467  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8468  000326  6EDA               	movwf	fsr2h,c
  8469  000328  50DF               	movf	indf2,w,c
  8470  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8471  00032C  EE20 F016          	lfsr	2,22
  8472  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8473  000332  26D9               	addwf	fsr2l,f,c
  8474  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8475  000336  22DA               	addwfc	fsr2h,f,c
  8476  000338  5014               	movf	??_parseHexFileEntry,w,c
  8477  00033A  26DF               	addwf	indf2,f,c
  8478  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8479  00033E                     l2320:
  8480  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8481  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8482  000346  501C               	movf	parseHexFileEntry@i,w,c
  8483  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8484  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8485  00034C  50DE               	movf	postinc2,w,c
  8486  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8487  000350  50DE               	movf	postinc2,w,c
  8488  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8489  000354  A0D8               	btfss	status,0,c
  8490  000356  D7DC               	goto	l2321
  8491                           
  8492                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8493  000358  EE20 F015          	lfsr	2,21
  8494  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8495  00035E  26D9               	addwf	fsr2l,f,c
  8496  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8497  000362  22DA               	addwfc	fsr2h,f,c
  8498  000364  50DF               	movf	indf2,w,c
  8499  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8500  000368  EE20 F016          	lfsr	2,22
  8501  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8502  00036E  26D9               	addwf	fsr2l,f,c
  8503  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8504  000372  22DA               	addwfc	fsr2h,f,c
  8505  000374  5014               	movf	??_parseHexFileEntry,w,c
  8506  000376  26DF               	addwf	indf2,f,c
  8507                           
  8508                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8509  000378  EE20 F016          	lfsr	2,22
  8510  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8511  00037E  26D9               	addwf	fsr2l,f,c
  8512  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8513  000382  22DA               	addwfc	fsr2h,f,c
  8514  000384  50DF               	movf	indf2,w,c
  8515  000386  B4D8               	btfsc	status,2,c
  8516  000388  D009               	goto	l2323
  8517                           
  8518                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8519  00038A  0EFE               	movlw	254
  8520  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8521  00038E  0EFF               	movlw	255
  8522  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8523  000392  0EFF               	movlw	255
  8524  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8525  000396  0EFF               	movlw	255
  8526  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8527  00039A  0012               	return	
  8528  00039C                     l2323:
  8529                           
  8530                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8531  00039C  EE20 F004          	lfsr	2,4
  8532  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8533  0003A2  26D9               	addwf	fsr2l,f,c
  8534  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8535  0003A6  22DA               	addwfc	fsr2h,f,c
  8536  0003A8  04DE               	decf	postinc2,w,c
  8537  0003AA  A4D8               	btfss	status,2,c
  8538  0003AC  D009               	goto	l2324
  8539                           
  8540                           ;hex.c: 110: {;hex.c: 112: return 0;
  8541  0003AE  0E00               	movlw	0
  8542  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8543  0003B2  0E00               	movlw	0
  8544  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8545  0003B6  0E00               	movlw	0
  8546  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8547  0003BA  0E00               	movlw	0
  8548  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8549                           
  8550                           ;hex.c: 113: }
  8551  0003BE  0012               	return	
  8552  0003C0                     l2324:
  8553                           
  8554                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8555  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8556  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8557  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8558  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8559  0003CA  0E00               	movlw	0
  8560  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8561  0003CE  0E0B               	movlw	11
  8562  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8563  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8564  0003D4  0E00               	movlw	0
  8565  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8566  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8567  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8568  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8569  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8570  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8571  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8572  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8573  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8574  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8575  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8576  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8577  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8578  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8579  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8580                           
  8581                           ;hex.c: 117: if (data[++offset] == ':')
  8582  0003F4  0E01               	movlw	1
  8583  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8584  0003F8  0E00               	movlw	0
  8585  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8586  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8587  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8588  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8589  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8590  000404  6ED9               	movwf	fsr2l,c
  8591  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8592  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8593  00040A  6EDA               	movwf	fsr2h,c
  8594  00040C  0E3A               	movlw	58
  8595  00040E  18DE               	xorwf	postinc2,w,c
  8596  000410  A4D8               	btfss	status,2,c
  8597  000412  D009               	goto	l2326
  8598                           
  8599                           ;hex.c: 118: {;hex.c: 119: return offset;
  8600  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8601  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8602  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8603  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8604                           
  8605                           ;hex.c: 120: }
  8606  000424  0012               	return	
  8607  000426                     l2326:
  8608                           
  8609                           ;hex.c: 121: else if (data[++offset] == ':')
  8610  000426  0E01               	movlw	1
  8611  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8612  00042A  0E00               	movlw	0
  8613  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8614  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8615  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8616  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8617  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8618  000436  6ED9               	movwf	fsr2l,c
  8619  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8620  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8621  00043C  6EDA               	movwf	fsr2h,c
  8622  00043E  0E3A               	movlw	58
  8623  000440  18DE               	xorwf	postinc2,w,c
  8624  000442  A4D8               	btfss	status,2,c
  8625  000444  D009               	goto	l2328
  8626                           
  8627                           ;hex.c: 122: {;hex.c: 123: return offset;
  8628  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8629  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8630  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8631  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8632                           
  8633                           ;hex.c: 124: }
  8634  000456  0012               	return	
  8635  000458                     l2328:
  8636                           
  8637                           ;hex.c: 125: else if (data[++offset] == ':')
  8638  000458  0E01               	movlw	1
  8639  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8640  00045C  0E00               	movlw	0
  8641  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8642  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8643  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8644  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8645  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8646  000468  6ED9               	movwf	fsr2l,c
  8647  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8648  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8649  00046E  6EDA               	movwf	fsr2h,c
  8650  000470  0E3A               	movlw	58
  8651  000472  18DE               	xorwf	postinc2,w,c
  8652  000474  A4D8               	btfss	status,2,c
  8653  000476  D009               	goto	l2330
  8654                           
  8655                           ;hex.c: 126: {;hex.c: 127: return offset;
  8656  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8657  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8658  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8659  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8660                           
  8661                           ;hex.c: 128: }
  8662  000488  0012               	return	
  8663  00048A                     l2330:
  8664                           
  8665                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8666  00048A  0EFD               	movlw	253
  8667  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8668  00048E  0EFF               	movlw	255
  8669  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8670  000492  0EFF               	movlw	255
  8671  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8672  000496  0EFF               	movlw	255
  8673  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8674  00049A  0012               	return	
  8675  00049C                     __end_of_parseHexFileEntry:
  8676                           	opt stack 0
  8677                           tblptru	equ	0xFF8
  8678                           tblptrh	equ	0xFF7
  8679                           tblptrl	equ	0xFF6
  8680                           tablat	equ	0xFF5
  8681                           prodh	equ	0xFF4
  8682                           prodl	equ	0xFF3
  8683                           intcon	equ	0xFF2
  8684                           intcon2	equ	0xFF1
  8685                           intcon3	equ	0xFF0
  8686                           postinc0	equ	0xFEE
  8687                           wreg	equ	0xFE8
  8688                           indf1	equ	0xFE7
  8689                           postdec1	equ	0xFE5
  8690                           plusw1	equ	0xFE3
  8691                           fsr1h	equ	0xFE2
  8692                           fsr1l	equ	0xFE1
  8693                           indf2	equ	0xFDF
  8694                           postinc2	equ	0xFDE
  8695                           postdec2	equ	0xFDD
  8696                           plusw2	equ	0xFDB
  8697                           fsr2h	equ	0xFDA
  8698                           fsr2l	equ	0xFD9
  8699                           status	equ	0xFD8
  8700                           
  8701 ;; *************** function _hexCharsToUint8 *****************
  8702 ;; Defined at:
  8703 ;;		line 42 in file "hex.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  c1              1    wreg     unsigned char 
  8706 ;;  c2              1    2[COMRAM] unsigned char 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  c1              1    4[COMRAM] unsigned char 
  8709 ;;  retVal          1    5[COMRAM] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      unsigned char 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8719 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;Total ram usage:        4 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    1
  8726 ;; This function calls:
  8727 ;;		_hexCharToUint8
  8728 ;; This function is called by:
  8729 ;;		_parseHexFileEntry
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text31
  8734  008D3E                     __ptext31:
  8735                           	opt stack 0
  8736  008D3E                     _hexCharsToUint8:
  8737                           	opt stack 26
  8738                           
  8739                           ;incstack = 0
  8740                           ;hexCharsToUint8@c1 stored from wreg
  8741  008D3E  6E05               	movwf	hexCharsToUint8@c1,c
  8742                           
  8743                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8744  008D40  5005               	movf	hexCharsToUint8@c1,w,c
  8745  008D42  ECE6  F044         	call	_hexCharToUint8
  8746  008D46  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8747  008D48  3804               	swapf	??_hexCharsToUint8,w,c
  8748  008D4A  0BF0               	andlw	240
  8749  008D4C  6E06               	movwf	hexCharsToUint8@retVal,c
  8750                           
  8751                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8752  008D4E  5003               	movf	hexCharsToUint8@c2,w,c
  8753  008D50  ECE6  F044         	call	_hexCharToUint8
  8754  008D54  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8755                           
  8756                           ;hex.c: 46: return retVal;
  8757  008D56  5006               	movf	hexCharsToUint8@retVal,w,c
  8758  008D58  0012               	return	
  8759  008D5A                     __end_of_hexCharsToUint8:
  8760                           	opt stack 0
  8761                           tblptru	equ	0xFF8
  8762                           tblptrh	equ	0xFF7
  8763                           tblptrl	equ	0xFF6
  8764                           tablat	equ	0xFF5
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           intcon2	equ	0xFF1
  8769                           intcon3	equ	0xFF0
  8770                           postinc0	equ	0xFEE
  8771                           wreg	equ	0xFE8
  8772                           indf1	equ	0xFE7
  8773                           postdec1	equ	0xFE5
  8774                           plusw1	equ	0xFE3
  8775                           fsr1h	equ	0xFE2
  8776                           fsr1l	equ	0xFE1
  8777                           indf2	equ	0xFDF
  8778                           postinc2	equ	0xFDE
  8779                           postdec2	equ	0xFDD
  8780                           plusw2	equ	0xFDB
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8
  8784                           
  8785 ;; *************** function _hexCharsToUint16 *****************
  8786 ;; Defined at:
  8787 ;;		line 49 in file "hex.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  c1              1    wreg     unsigned char 
  8790 ;;  c2              1    2[COMRAM] unsigned char 
  8791 ;;  c3              1    3[COMRAM] unsigned char 
  8792 ;;  c4              1    4[COMRAM] unsigned char 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  c1              1    8[COMRAM] unsigned char 
  8795 ;;  retVal          2    9[COMRAM] unsigned int 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  2    2[COMRAM] unsigned int 
  8798 ;; Registers used:
  8799 ;;		wreg, status,2, status,0, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8805 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;Total ram usage:        9 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    1
  8812 ;; This function calls:
  8813 ;;		_hexCharToUint8
  8814 ;; This function is called by:
  8815 ;;		_parseHexFileEntry
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text32
  8820  0076C8                     __ptext32:
  8821                           	opt stack 0
  8822  0076C8                     _hexCharsToUint16:
  8823                           	opt stack 26
  8824                           
  8825                           ;incstack = 0
  8826                           ;hexCharsToUint16@c1 stored from wreg
  8827  0076C8  6E09               	movwf	hexCharsToUint16@c1,c
  8828                           
  8829                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8830  0076CA  5009               	movf	hexCharsToUint16@c1,w,c
  8831  0076CC  ECE6  F044         	call	_hexCharToUint8
  8832  0076D0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8833  0076D2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8834  0076D4  0E0C               	movlw	12
  8835  0076D6                     u10715:
  8836  0076D6  90D8               	bcf	status,0,c
  8837  0076D8  3606               	rlcf	??_hexCharsToUint16,f,c
  8838  0076DA  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8839  0076DC  2EE8               	decfsz	wreg,f,c
  8840  0076DE  D7FB               	goto	u10715
  8841  0076E0  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8842  0076E4  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8843                           
  8844                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8845  0076E8  5003               	movf	hexCharsToUint16@c2,w,c
  8846  0076EA  ECE6  F044         	call	_hexCharToUint8
  8847  0076EE  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8848  0076F0  5006               	movf	??_hexCharsToUint16,w,c
  8849  0076F2  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8850  0076F4  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8851  0076F6  5007               	movf	??_hexCharsToUint16+1,w,c
  8852  0076F8  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8853  0076FA  5008               	movf	??_hexCharsToUint16+2,w,c
  8854  0076FC  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8855                           
  8856                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8857  0076FE  5004               	movf	hexCharsToUint16@c3,w,c
  8858  007700  ECE6  F044         	call	_hexCharToUint8
  8859  007704  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8860  007706  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8861  007708  3A06               	swapf	??_hexCharsToUint16,f,c
  8862  00770A  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8863  00770C  0EF0               	movlw	240
  8864  00770E  1607               	andwf	??_hexCharsToUint16+1,f,c
  8865  007710  5006               	movf	??_hexCharsToUint16,w,c
  8866  007712  0B0F               	andlw	15
  8867  007714  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8868  007716  0EF0               	movlw	240
  8869  007718  1606               	andwf	??_hexCharsToUint16,f,c
  8870  00771A  5006               	movf	??_hexCharsToUint16,w,c
  8871  00771C  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8872  00771E  5007               	movf	??_hexCharsToUint16+1,w,c
  8873  007720  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8874                           
  8875                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8876  007722  5005               	movf	hexCharsToUint16@c4,w,c
  8877  007724  ECE6  F044         	call	_hexCharToUint8
  8878  007728  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8879  00772A  5006               	movf	??_hexCharsToUint16,w,c
  8880  00772C  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8881                           
  8882                           ;hex.c: 55: return retVal;
  8883  00772E  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8884  007732  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8885  007736  0012               	return	
  8886  007738                     __end_of_hexCharsToUint16:
  8887                           	opt stack 0
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           intcon	equ	0xFF2
  8895                           intcon2	equ	0xFF1
  8896                           intcon3	equ	0xFF0
  8897                           postinc0	equ	0xFEE
  8898                           wreg	equ	0xFE8
  8899                           indf1	equ	0xFE7
  8900                           postdec1	equ	0xFE5
  8901                           plusw1	equ	0xFE3
  8902                           fsr1h	equ	0xFE2
  8903                           fsr1l	equ	0xFE1
  8904                           indf2	equ	0xFDF
  8905                           postinc2	equ	0xFDE
  8906                           postdec2	equ	0xFDD
  8907                           plusw2	equ	0xFDB
  8908                           fsr2h	equ	0xFDA
  8909                           fsr2l	equ	0xFD9
  8910                           status	equ	0xFD8
  8911                           
  8912 ;; *************** function _hexCharToUint8 *****************
  8913 ;; Defined at:
  8914 ;;		line 11 in file "hex.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  c               1    wreg     unsigned char 
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  c               1    0[COMRAM] unsigned char 
  8919 ;;  ascii           1    1[COMRAM] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      unsigned char 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8933 ;;Total ram usage:        2 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_hexCharsToUint8
  8939 ;;		_hexCharsToUint16
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text33
  8944  0089CC                     __ptext33:
  8945                           	opt stack 0
  8946  0089CC                     _hexCharToUint8:
  8947                           	opt stack 26
  8948                           
  8949                           ;incstack = 0
  8950                           ;hexCharToUint8@c stored from wreg
  8951  0089CC  6E01               	movwf	hexCharToUint8@c,c
  8952                           
  8953                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8954  0089CE  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8955                           
  8956                           ;hex.c: 16: if (ascii >= 97)
  8957  0089D2  0E60               	movlw	96
  8958  0089D4  6402               	cpfsgt	hexCharToUint8@ascii,c
  8959  0089D6  D002               	goto	l2299
  8960                           
  8961                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8962  0089D8  0E57               	movlw	87
  8963  0089DA  D006               	goto	L3
  8964  0089DC                     l2299:
  8965                           
  8966                           ;hex.c: 21: else if (ascii >= 65)
  8967  0089DC  0E40               	movlw	64
  8968  0089DE  6402               	cpfsgt	hexCharToUint8@ascii,c
  8969  0089E0  D002               	goto	l2301
  8970                           
  8971                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8972  0089E2  0E37               	movlw	55
  8973  0089E4  D001               	goto	L3
  8974  0089E6                     l2301:
  8975                           
  8976                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8977  0089E6  0E30               	movlw	48
  8978  0089E8                     L3:
  8979  0089E8  5E02               	subwf	hexCharToUint8@ascii,f,c
  8980                           
  8981                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8982  0089EA  0E0F               	movlw	15
  8983  0089EC  6402               	cpfsgt	hexCharToUint8@ascii,c
  8984  0089EE  D002               	goto	l2303
  8985                           
  8986                           ;hex.c: 32: {;hex.c: 33: return 0;
  8987  0089F0  0E00               	movlw	0
  8988                           
  8989                           ;hex.c: 34: }
  8990  0089F2  0012               	return	
  8991  0089F4                     l2303:
  8992                           
  8993                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8994  0089F4  5002               	movf	hexCharToUint8@ascii,w,c
  8995  0089F6  0012               	return	
  8996  0089F8                     __end_of_hexCharToUint8:
  8997                           	opt stack 0
  8998                           tblptru	equ	0xFF8
  8999                           tblptrh	equ	0xFF7
  9000                           tblptrl	equ	0xFF6
  9001                           tablat	equ	0xFF5
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           intcon	equ	0xFF2
  9005                           intcon2	equ	0xFF1
  9006                           intcon3	equ	0xFF0
  9007                           postinc0	equ	0xFEE
  9008                           wreg	equ	0xFE8
  9009                           indf1	equ	0xFE7
  9010                           postdec1	equ	0xFE5
  9011                           plusw1	equ	0xFE3
  9012                           fsr1h	equ	0xFE2
  9013                           fsr1l	equ	0xFE1
  9014                           indf2	equ	0xFDF
  9015                           postinc2	equ	0xFDE
  9016                           postdec2	equ	0xFDD
  9017                           plusw2	equ	0xFDB
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022 ;; *************** function _internalFlash_writePage *****************
  9023 ;; Defined at:
  9024 ;;		line 63 in file "internal_flash.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  page            2    2[COMRAM] unsigned int 
  9027 ;; Auto vars:     Size  Location     Type
  9028 ;;  address         4    4[COMRAM] unsigned long 
  9029 ;;  cntr            2    8[COMRAM] unsigned int 
  9030 ;;  byte_cntr       1   11[COMRAM] unsigned char 
  9031 ;;  block_cntr      1   10[COMRAM] unsigned char 
  9032 ;;  i               1    0        unsigned char 
  9033 ;;  gie             1    0        unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9044 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9047 ;;Total ram usage:       10 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    1
  9050 ;; This function calls:
  9051 ;;		__internalFlash_unlockAndActivate
  9052 ;; This function is called by:
  9053 ;;		__bootloader_program
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text34
  9058  0073FC                     __ptext34:
  9059                           	opt stack 0
  9060  0073FC                     _internalFlash_writePage:
  9061                           	opt stack 27
  9062                           
  9063                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
  9064                           
  9065                           ;incstack = 0
  9066  0073FC  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
  9067  007400  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
  9068  007404  6A07               	clrf	internalFlash_writePage@address+2,c
  9069  007406  6A08               	clrf	internalFlash_writePage@address+3,c
  9070                           
  9071                           ;internal_flash.c: 74: address <<= 10;
  9072  007408  0E0A               	movlw	10
  9073  00740A                     u11515:
  9074  00740A  90D8               	bcf	status,0,c
  9075  00740C  3605               	rlcf	internalFlash_writePage@address,f,c
  9076  00740E  3606               	rlcf	internalFlash_writePage@address+1,f,c
  9077  007410  3607               	rlcf	internalFlash_writePage@address+2,f,c
  9078  007412  3608               	rlcf	internalFlash_writePage@address+3,f,c
  9079  007414  2EE8               	decfsz	wreg,f,c
  9080  007416  D7F9               	goto	u11515
  9081                           
  9082                           ;internal_flash.c: 76: TBLPTR = address;
  9083  007418  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  9084  00741C  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  9085  007420  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  9086                           
  9087                           ;internal_flash.c: 79: cntr = 0;
  9088  007424  0E00               	movlw	0
  9089  007426  6E0A               	movwf	internalFlash_writePage@cntr+1,c
  9090  007428  0E00               	movlw	0
  9091  00742A  6E09               	movwf	internalFlash_writePage@cntr,c
  9092                           
  9093                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
  9094  00742C  0E00               	movlw	0
  9095  00742E  6E0B               	movwf	internalFlash_writePage@block_cntr,c
  9096  007430                     l14439:
  9097  007430  0E0F               	movlw	15
  9098  007432  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
  9099  007434  D001               	goto	l2551
  9100  007436  0012               	return	
  9101  007438                     l2551:
  9102                           
  9103                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9104  007438  0E00               	movlw	0
  9105  00743A  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
  9106  00743C                     l14445:
  9107  00743C  0E3F               	movlw	63
  9108  00743E  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9109  007440  D001               	goto	l2553
  9110  007442  D00D               	goto	u11540
  9111  007444                     l2553:
  9112                           
  9113                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
  9114  007444  0E00               	movlw	low _pageBuffer
  9115  007446  2409               	addwf	internalFlash_writePage@cntr,w,c
  9116  007448  6ED9               	movwf	fsr2l,c
  9117  00744A  0E08               	movlw	high _pageBuffer
  9118  00744C  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
  9119  00744E  6EDA               	movwf	fsr2h,c
  9120  007450  50DF               	movf	indf2,w,c
  9121  007452  6EF5               	movwf	tablat,c	;volatile
  9122  007454  000D               	tblwt		*+	;# 
  9123                           
  9124                           ;internal_flash.c: 91: ++cntr;
  9125  007456  4A09               	infsnz	internalFlash_writePage@cntr,f,c
  9126  007458  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
  9127  00745A  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
  9128  00745C  D7EF               	goto	l14445
  9129  00745E                     u11540:
  9130  00745E  000A               	tblrd		*-	;# 
  9131                           
  9132                           ;internal_flash.c: 98: EECON1 = 0x84;
  9133  007460  0E84               	movlw	132
  9134  007462  6EA6               	movwf	4006,c	;volsfr
  9135                           
  9136                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9137  007464  0EB5               	movlw	181
  9138  007466  EC53  F045         	call	__internalFlash_unlockAndActivate
  9139                           
  9140                           ;internal_flash.c: 100: TBLPTR++;
  9141  00746A  0E01               	movlw	1
  9142  00746C  26F6               	addwf	tblptrl,f,c	;volatile
  9143  00746E  0E00               	movlw	0
  9144  007470  22F7               	addwfc	tblptrh,f,c	;volatile
  9145  007472  0E00               	movlw	0
  9146  007474  22F8               	addwfc	tblptru,f,c	;volatile
  9147  007476  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
  9148  007478  D7DB               	goto	l14439
  9149  00747A                     __end_of_internalFlash_writePage:
  9150                           	opt stack 0
  9151                           tblptru	equ	0xFF8
  9152                           tblptrh	equ	0xFF7
  9153                           tblptrl	equ	0xFF6
  9154                           tablat	equ	0xFF5
  9155                           prodh	equ	0xFF4
  9156                           prodl	equ	0xFF3
  9157                           intcon	equ	0xFF2
  9158                           intcon2	equ	0xFF1
  9159                           intcon3	equ	0xFF0
  9160                           postinc0	equ	0xFEE
  9161                           wreg	equ	0xFE8
  9162                           indf1	equ	0xFE7
  9163                           postdec1	equ	0xFE5
  9164                           plusw1	equ	0xFE3
  9165                           fsr1h	equ	0xFE2
  9166                           fsr1l	equ	0xFE1
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           postdec2	equ	0xFDD
  9170                           plusw2	equ	0xFDB
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8
  9174                           
  9175 ;; *************** function _internalFlash_readPage *****************
  9176 ;; Defined at:
  9177 ;;		line 37 in file "internal_flash.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  page            2   21[COMRAM] unsigned int 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  address         4   23[COMRAM] unsigned long 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;Total ram usage:        6 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:    2
  9198 ;; This function calls:
  9199 ;;		_internalFlash_addressFromPage
  9200 ;;		_internalFlash_read
  9201 ;; This function is called by:
  9202 ;;		__bootloader_program
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205                           
  9206                           	psect	text35
  9207  0084AC                     __ptext35:
  9208                           	opt stack 0
  9209  0084AC                     _internalFlash_readPage:
  9210                           	opt stack 26
  9211                           
  9212                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9213                           
  9214                           ;incstack = 0
  9215  0084AC  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9216  0084B0  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9217  0084B4  ECA2  F044         	call	_internalFlash_addressFromPage	;wreg free
  9218  0084B8  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9219  0084BC  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9220  0084C0  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9221  0084C4  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9222                           
  9223                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9224  0084C8  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9225  0084CC  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9226  0084D0  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9227  0084D4  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9228  0084D8  0E04               	movlw	4
  9229  0084DA  6E13               	movwf	internalFlash_read@data_length+1,c
  9230  0084DC  0E00               	movlw	0
  9231  0084DE  6E12               	movwf	internalFlash_read@data_length,c
  9232  0084E0  0E00               	movlw	low _pageBuffer
  9233  0084E2  6E14               	movwf	internalFlash_read@buffer,c
  9234  0084E4  0E08               	movlw	high _pageBuffer
  9235  0084E6  6E15               	movwf	internalFlash_read@buffer+1,c
  9236  0084E8  EC8A  F043         	call	_internalFlash_read	;wreg free
  9237  0084EC  0012               	return		;funcret
  9238  0084EE                     __end_of_internalFlash_readPage:
  9239                           	opt stack 0
  9240                           tblptru	equ	0xFF8
  9241                           tblptrh	equ	0xFF7
  9242                           tblptrl	equ	0xFF6
  9243                           tablat	equ	0xFF5
  9244                           prodh	equ	0xFF4
  9245                           prodl	equ	0xFF3
  9246                           intcon	equ	0xFF2
  9247                           intcon2	equ	0xFF1
  9248                           intcon3	equ	0xFF0
  9249                           postinc0	equ	0xFEE
  9250                           wreg	equ	0xFE8
  9251                           indf1	equ	0xFE7
  9252                           postdec1	equ	0xFE5
  9253                           plusw1	equ	0xFE3
  9254                           fsr1h	equ	0xFE2
  9255                           fsr1l	equ	0xFE1
  9256                           indf2	equ	0xFDF
  9257                           postinc2	equ	0xFDE
  9258                           postdec2	equ	0xFDD
  9259                           plusw2	equ	0xFDB
  9260                           fsr2h	equ	0xFDA
  9261                           fsr2l	equ	0xFD9
  9262                           status	equ	0xFD8
  9263                           
  9264 ;; *************** function _internalFlash_read *****************
  9265 ;; Defined at:
  9266 ;;		line 144 in file "internal_flash.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;  address         4   13[COMRAM] unsigned long 
  9269 ;;  data_length     2   17[COMRAM] unsigned int 
  9270 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9271 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      unsigned char 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9283 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9286 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;Total ram usage:        8 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    1
  9290 ;; This function calls:
  9291 ;;		_memcpy
  9292 ;; This function is called by:
  9293 ;;		_internalFlash_readPage
  9294 ;;		__bootloader_verify_program_memory
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text36
  9299  008714                     __ptext36:
  9300                           	opt stack 0
  9301  008714                     _internalFlash_read:
  9302                           	opt stack 26
  9303                           
  9304                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
  9305                           
  9306                           ;incstack = 0
  9307  008714  5011               	movf	internalFlash_read@address+3,w,c
  9308  008716  E118               	bnz	l2567
  9309  008718  280E               	incf	internalFlash_read@address,w,c
  9310  00871A  0EFF               	movlw	255
  9311  00871C  580F               	subwfb	internalFlash_read@address+1,w,c
  9312  00871E  0E01               	movlw	1
  9313  008720  5810               	subwfb	internalFlash_read@address+2,w,c
  9314  008722  B0D8               	btfsc	status,0,c
  9315  008724  0012               	return	
  9316                           
  9317                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
  9318                           
  9319                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9320  008726  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9321  00872A  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9322  00872E  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9323  008732  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9324  008736  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9325  00873A  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9326  00873E  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9327  008742  ECDD  F03C         	call	_memcpy	;wreg free
  9328  008746  0012               	return	
  9329  008748                     l2567:
  9330  008748  0012               	return		;funcret
  9331  00874A                     __end_of_internalFlash_read:
  9332                           	opt stack 0
  9333                           tblptru	equ	0xFF8
  9334                           tblptrh	equ	0xFF7
  9335                           tblptrl	equ	0xFF6
  9336                           tablat	equ	0xFF5
  9337                           prodh	equ	0xFF4
  9338                           prodl	equ	0xFF3
  9339                           intcon	equ	0xFF2
  9340                           intcon2	equ	0xFF1
  9341                           intcon3	equ	0xFF0
  9342                           postinc0	equ	0xFEE
  9343                           wreg	equ	0xFE8
  9344                           indf1	equ	0xFE7
  9345                           postdec1	equ	0xFE5
  9346                           plusw1	equ	0xFE3
  9347                           fsr1h	equ	0xFE2
  9348                           fsr1l	equ	0xFE1
  9349                           indf2	equ	0xFDF
  9350                           postinc2	equ	0xFDE
  9351                           postdec2	equ	0xFDD
  9352                           plusw2	equ	0xFDB
  9353                           fsr2h	equ	0xFDA
  9354                           fsr2l	equ	0xFD9
  9355                           status	equ	0xFD8
  9356                           
  9357 ;; *************** function _internalFlash_pageFromAddress *****************
  9358 ;; Defined at:
  9359 ;;		line 308 in file "internal_flash.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  address         4    0[COMRAM] unsigned long 
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  2    0[COMRAM] unsigned int 
  9366 ;; Registers used:
  9367 ;;		wreg, status,2, status,0
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;Total ram usage:        5 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		__bootloader_program
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text37
  9387  008D5A                     __ptext37:
  9388                           	opt stack 0
  9389  008D5A                     _internalFlash_pageFromAddress:
  9390                           	opt stack 28
  9391                           
  9392                           ;internal_flash.c: 310: address >>= 10;
  9393                           
  9394                           ;incstack = 0
  9395  008D5A  0E0A               	movlw	10
  9396  008D5C  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9397  008D5E                     u11495:
  9398  008D5E  90D8               	bcf	status,0,c
  9399  008D60  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9400  008D62  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9401  008D64  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9402  008D66  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9403  008D68  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9404  008D6A  D7F9               	goto	u11495
  9405                           
  9406                           ;internal_flash.c: 311: return (uint16_t) address;
  9407  008D6C  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9408  008D70  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9409  008D74  0012               	return	
  9410  008D76                     __end_of_internalFlash_pageFromAddress:
  9411                           	opt stack 0
  9412                           tblptru	equ	0xFF8
  9413                           tblptrh	equ	0xFF7
  9414                           tblptrl	equ	0xFF6
  9415                           tablat	equ	0xFF5
  9416                           prodh	equ	0xFF4
  9417                           prodl	equ	0xFF3
  9418                           intcon	equ	0xFF2
  9419                           intcon2	equ	0xFF1
  9420                           intcon3	equ	0xFF0
  9421                           postinc0	equ	0xFEE
  9422                           wreg	equ	0xFE8
  9423                           indf1	equ	0xFE7
  9424                           postdec1	equ	0xFE5
  9425                           plusw1	equ	0xFE3
  9426                           fsr1h	equ	0xFE2
  9427                           fsr1l	equ	0xFE1
  9428                           indf2	equ	0xFDF
  9429                           postinc2	equ	0xFDE
  9430                           postdec2	equ	0xFDD
  9431                           plusw2	equ	0xFDB
  9432                           fsr2h	equ	0xFDA
  9433                           fsr2l	equ	0xFD9
  9434                           status	equ	0xFD8
  9435                           
  9436 ;; *************** function _internalFlash_getBuffer *****************
  9437 ;; Defined at:
  9438 ;;		line 32 in file "internal_flash.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;		None
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;		None
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  2    0[COMRAM] PTR unsigned char 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, status,0
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9456 ;;Total ram usage:        2 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		__bootloader_program
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text38
  9466  008F16                     __ptext38:
  9467                           	opt stack 0
  9468  008F16                     _internalFlash_getBuffer:
  9469                           	opt stack 28
  9470                           
  9471                           ;internal_flash.c: 34: return pageBuffer;
  9472                           
  9473                           ;incstack = 0
  9474  008F16  0E00               	movlw	low _pageBuffer
  9475  008F18  6E01               	movwf	?_internalFlash_getBuffer,c
  9476  008F1A  0E08               	movlw	high _pageBuffer
  9477  008F1C  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9478  008F1E  0012               	return	
  9479  008F20                     __end_of_internalFlash_getBuffer:
  9480                           	opt stack 0
  9481                           tblptru	equ	0xFF8
  9482                           tblptrh	equ	0xFF7
  9483                           tblptrl	equ	0xFF6
  9484                           tablat	equ	0xFF5
  9485                           prodh	equ	0xFF4
  9486                           prodl	equ	0xFF3
  9487                           intcon	equ	0xFF2
  9488                           intcon2	equ	0xFF1
  9489                           intcon3	equ	0xFF0
  9490                           postinc0	equ	0xFEE
  9491                           wreg	equ	0xFE8
  9492                           indf1	equ	0xFE7
  9493                           postdec1	equ	0xFE5
  9494                           plusw1	equ	0xFE3
  9495                           fsr1h	equ	0xFE2
  9496                           fsr1l	equ	0xFE1
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           plusw2	equ	0xFDB
  9501                           fsr2h	equ	0xFDA
  9502                           fsr2l	equ	0xFD9
  9503                           status	equ	0xFD8
  9504                           
  9505 ;; *************** function _internalFlash_erasePage *****************
  9506 ;; Defined at:
  9507 ;;		line 44 in file "internal_flash.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  page            2    2[COMRAM] unsigned int 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  address         4    4[COMRAM] unsigned long 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;Total ram usage:        6 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; Hardware stack levels required when called:    1
  9528 ;; This function calls:
  9529 ;;		__internalFlash_unlockAndActivate
  9530 ;; This function is called by:
  9531 ;;		__bootloader_program
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           	psect	text39
  9536  00877E                     __ptext39:
  9537                           	opt stack 0
  9538  00877E                     _internalFlash_erasePage:
  9539                           	opt stack 27
  9540                           
  9541                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
  9542                           
  9543                           ;incstack = 0
  9544  00877E  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
  9545  008782  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
  9546  008786  6A07               	clrf	internalFlash_erasePage@address+2,c
  9547  008788  6A08               	clrf	internalFlash_erasePage@address+3,c
  9548                           
  9549                           ;internal_flash.c: 50: address <<= 10;
  9550  00878A  0E0A               	movlw	10
  9551  00878C                     u11505:
  9552  00878C  90D8               	bcf	status,0,c
  9553  00878E  3605               	rlcf	internalFlash_erasePage@address,f,c
  9554  008790  3606               	rlcf	internalFlash_erasePage@address+1,f,c
  9555  008792  3607               	rlcf	internalFlash_erasePage@address+2,f,c
  9556  008794  3608               	rlcf	internalFlash_erasePage@address+3,f,c
  9557  008796  2EE8               	decfsz	wreg,f,c
  9558  008798  D7F9               	goto	u11505
  9559                           
  9560                           ;internal_flash.c: 51: TBLPTR = address;
  9561  00879A  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9562  00879E  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9563  0087A2  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9564                           
  9565                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
  9566  0087A6  84A6               	bsf	4006,2,c	;volsfr
  9567                           
  9568                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
  9569  0087A8  88A6               	bsf	4006,4,c	;volsfr
  9570                           
  9571                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9572  0087AA  0EB5               	movlw	181
  9573  0087AC  EC53  F045         	call	__internalFlash_unlockAndActivate
  9574  0087B0  0012               	return		;funcret
  9575  0087B2                     __end_of_internalFlash_erasePage:
  9576                           	opt stack 0
  9577                           tblptru	equ	0xFF8
  9578                           tblptrh	equ	0xFF7
  9579                           tblptrl	equ	0xFF6
  9580                           tablat	equ	0xFF5
  9581                           prodh	equ	0xFF4
  9582                           prodl	equ	0xFF3
  9583                           intcon	equ	0xFF2
  9584                           intcon2	equ	0xFF1
  9585                           intcon3	equ	0xFF0
  9586                           postinc0	equ	0xFEE
  9587                           wreg	equ	0xFE8
  9588                           indf1	equ	0xFE7
  9589                           postdec1	equ	0xFE5
  9590                           plusw1	equ	0xFE3
  9591                           fsr1h	equ	0xFE2
  9592                           fsr1l	equ	0xFE1
  9593                           indf2	equ	0xFDF
  9594                           postinc2	equ	0xFDE
  9595                           postdec2	equ	0xFDD
  9596                           plusw2	equ	0xFDB
  9597                           fsr2h	equ	0xFDA
  9598                           fsr2l	equ	0xFD9
  9599                           status	equ	0xFD8
  9600                           
  9601 ;; *************** function __internalFlash_unlockAndActivate *****************
  9602 ;; Defined at:
  9603 ;;		line 106 in file "internal_flash.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  UnlockKey       1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9608 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;Total ram usage:        2 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; This function calls:
  9625 ;;		Nothing
  9626 ;; This function is called by:
  9627 ;;		_internalFlash_erasePage
  9628 ;;		_internalFlash_writePage
  9629 ;;		_EraseBlock
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text40
  9634  008AA6                     __ptext40:
  9635                           	opt stack 0
  9636  008AA6                     __internalFlash_unlockAndActivate:
  9637                           	opt stack 27
  9638                           
  9639                           ;incstack = 0
  9640                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9641  008AA6  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9642                           
  9643                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9644  008AA8  0EB5               	movlw	181
  9645  008AAA  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9646  008AAC  B4D8               	btfsc	status,2,c
  9647  008AAE  D002               	goto	l2558
  9648                           
  9649                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
  9650  008AB0  94A6               	bcf	4006,2,c	;volsfr
  9651                           
  9652                           ;internal_flash.c: 118: return;
  9653  008AB2  0012               	return	
  9654  008AB4                     l2558:
  9655                           
  9656                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
  9657  008AB4  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9658                           
  9659                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
  9660  008AB8  9EF2               	bcf	intcon,7,c	;volatile
  9661                           
  9662                           ;internal_flash.c: 123: EECON2 = 0x55;
  9663  008ABA  0E55               	movlw	85
  9664  008ABC  6EA7               	movwf	4007,c	;volsfr
  9665                           
  9666                           ;internal_flash.c: 124: EECON2 = 0xAA;
  9667  008ABE  0EAA               	movlw	170
  9668  008AC0  6EA7               	movwf	4007,c	;volsfr
  9669                           
  9670                           ;internal_flash.c: 125: EECON1bits.WR = 1;
  9671  008AC2  82A6               	bsf	4006,1,c	;volsfr
  9672                           
  9673                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
  9674  008AC4  94A6               	bcf	4006,2,c	;volsfr
  9675                           
  9676                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
  9677  008AC6  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9678  008AC8  0012               	return	
  9679                           
  9680                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
  9681  008ACA  8EF2               	bsf	intcon,7,c	;volatile
  9682  008ACC  0012               	return	
  9683  008ACE                     __end_of__internalFlash_unlockAndActivate:
  9684                           	opt stack 0
  9685                           tblptru	equ	0xFF8
  9686                           tblptrh	equ	0xFF7
  9687                           tblptrl	equ	0xFF6
  9688                           tablat	equ	0xFF5
  9689                           prodh	equ	0xFF4
  9690                           prodl	equ	0xFF3
  9691                           intcon	equ	0xFF2
  9692                           intcon2	equ	0xFF1
  9693                           intcon3	equ	0xFF0
  9694                           postinc0	equ	0xFEE
  9695                           wreg	equ	0xFE8
  9696                           indf1	equ	0xFE7
  9697                           postdec1	equ	0xFE5
  9698                           plusw1	equ	0xFE3
  9699                           fsr1h	equ	0xFE2
  9700                           fsr1l	equ	0xFE1
  9701                           indf2	equ	0xFDF
  9702                           postinc2	equ	0xFDE
  9703                           postdec2	equ	0xFDD
  9704                           plusw2	equ	0xFDB
  9705                           fsr2h	equ	0xFDA
  9706                           fsr2l	equ	0xFD9
  9707                           status	equ	0xFD8
  9708                           
  9709 ;; *************** function _internalFlash_addressWithinPage *****************
  9710 ;; Defined at:
  9711 ;;		line 322 in file "internal_flash.c"
  9712 ;; Parameters:    Size  Location     Type
  9713 ;;  address         4    8[COMRAM] unsigned long 
  9714 ;;  page            2   12[COMRAM] unsigned int 
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2    8[COMRAM] unsigned int 
  9719 ;; Registers used:
  9720 ;;		wreg, status,2, status,0, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9726 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9729 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9730 ;;Total ram usage:       14 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; Hardware stack levels required when called:    1
  9733 ;; This function calls:
  9734 ;;		_internalFlash_addressFromPage
  9735 ;; This function is called by:
  9736 ;;		__bootloader_program
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text41
  9741  007BA8                     __ptext41:
  9742                           	opt stack 0
  9743  007BA8                     _internalFlash_addressWithinPage:
  9744                           	opt stack 27
  9745                           
  9746                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9747                           
  9748                           ;incstack = 0
  9749  007BA8  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9750  007BAC  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9751  007BB0  ECA2  F044         	call	_internalFlash_addressFromPage	;wreg free
  9752  007BB4  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9753  007BB8  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9754  007BBC  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9755  007BC0  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9756                           
  9757                           ;internal_flash.c: 326: address = address - page_start_address;
  9758  007BC4  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9759  007BC8  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9760  007BCC  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9761  007BD0  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9762  007BD4  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9763  007BD6  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9764  007BD8  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9765  007BDA  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9766  007BDC  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9767  007BDE  0E00               	movlw	0
  9768  007BE0  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9769  007BE2  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9770  007BE4  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9771  007BE6  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9772  007BE8  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9773  007BEA  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9774  007BEC  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9775  007BEE  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9776  007BF0  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9777  007BF2  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9778  007BF4  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9779  007BF6  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9780  007BF8  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9781  007BFA  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9782  007BFC  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9783                           
  9784                           ;internal_flash.c: 327: return (uint16_t) address;
  9785  007BFE  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9786  007C02  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9787  007C06  0012               	return	
  9788  007C08                     __end_of_internalFlash_addressWithinPage:
  9789                           	opt stack 0
  9790                           tblptru	equ	0xFF8
  9791                           tblptrh	equ	0xFF7
  9792                           tblptrl	equ	0xFF6
  9793                           tablat	equ	0xFF5
  9794                           prodh	equ	0xFF4
  9795                           prodl	equ	0xFF3
  9796                           intcon	equ	0xFF2
  9797                           intcon2	equ	0xFF1
  9798                           intcon3	equ	0xFF0
  9799                           postinc0	equ	0xFEE
  9800                           wreg	equ	0xFE8
  9801                           indf1	equ	0xFE7
  9802                           postdec1	equ	0xFE5
  9803                           plusw1	equ	0xFE3
  9804                           fsr1h	equ	0xFE2
  9805                           fsr1l	equ	0xFE1
  9806                           indf2	equ	0xFDF
  9807                           postinc2	equ	0xFDE
  9808                           postdec2	equ	0xFDD
  9809                           plusw2	equ	0xFDB
  9810                           fsr2h	equ	0xFDA
  9811                           fsr2l	equ	0xFD9
  9812                           status	equ	0xFD8
  9813                           
  9814 ;; *************** function _internalFlash_addressFromPage *****************
  9815 ;; Defined at:
  9816 ;;		line 314 in file "internal_flash.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  page            2    0[COMRAM] unsigned int 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  address         4    4[COMRAM] unsigned long 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  4    0[COMRAM] unsigned long 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;Total ram usage:        8 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_internalFlash_readPage
  9840 ;;		_internalFlash_addressWithinPage
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           	psect	text42
  9845  008944                     __ptext42:
  9846                           	opt stack 0
  9847  008944                     _internalFlash_addressFromPage:
  9848                           	opt stack 27
  9849                           
  9850                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
  9851                           
  9852                           ;incstack = 0
  9853  008944  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9854  008948  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9855  00894C  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9856  00894E  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9857                           
  9858                           ;internal_flash.c: 318: address <<= 10;
  9859  008950  0E0A               	movlw	10
  9860  008952                     u10735:
  9861  008952  90D8               	bcf	status,0,c
  9862  008954  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9863  008956  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9864  008958  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9865  00895A  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9866  00895C  2EE8               	decfsz	wreg,f,c
  9867  00895E  D7F9               	goto	u10735
  9868                           
  9869                           ;internal_flash.c: 319: return address;
  9870  008960  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9871  008964  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9872  008968  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9873  00896C  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9874  008970  0012               	return	
  9875  008972                     __end_of_internalFlash_addressFromPage:
  9876                           	opt stack 0
  9877                           tblptru	equ	0xFF8
  9878                           tblptrh	equ	0xFF7
  9879                           tblptrl	equ	0xFF6
  9880                           tablat	equ	0xFF5
  9881                           prodh	equ	0xFF4
  9882                           prodl	equ	0xFF3
  9883                           intcon	equ	0xFF2
  9884                           intcon2	equ	0xFF1
  9885                           intcon3	equ	0xFF0
  9886                           postinc0	equ	0xFEE
  9887                           wreg	equ	0xFE8
  9888                           indf1	equ	0xFE7
  9889                           postdec1	equ	0xFE5
  9890                           plusw1	equ	0xFE3
  9891                           fsr1h	equ	0xFE2
  9892                           fsr1l	equ	0xFE1
  9893                           indf2	equ	0xFDF
  9894                           postinc2	equ	0xFDE
  9895                           postdec2	equ	0xFDD
  9896                           plusw2	equ	0xFDB
  9897                           fsr2h	equ	0xFDA
  9898                           fsr2l	equ	0xFD9
  9899                           status	equ	0xFD8
  9900                           
  9901 ;; *************** function __bootloader_check_address *****************
  9902 ;; Defined at:
  9903 ;;		line 109 in file "bootloader.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  address         4    0[COMRAM] unsigned long 
  9906 ;;  dataLength      1    4[COMRAM] unsigned char 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  cntr            1   11[COMRAM] unsigned char 
  9909 ;;  byte_status     1   10[COMRAM] enum E6963
  9910 ;;  worst_case      1    9[COMRAM] enum E6963
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      enum E6963
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, status,0
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9920 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;Total ram usage:       12 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		__bootloader_verify_file
  9930 ;;		__bootloader_program
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text43
  9935  0059A2                     __ptext43:
  9936                           	opt stack 0
  9937  0059A2                     __bootloader_check_address:
  9938                           	opt stack 28
  9939                           
  9940                           ;bootloader.c: 111: addressCheckResult_t byte_status;;bootloader.c: 112: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 113: uint8_t cntr;;bootloader.c: 115: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
  9941                           
  9942                           ;incstack = 0
  9943  0059A2  0E00               	movlw	0
  9944  0059A4  6E0A               	movwf	__bootloader_check_address@worst_case,c
  9945                           
  9946                           ;bootloader.c: 118: for(cntr=0; cntr<dataLength; ++cntr)
  9947  0059A6  0E00               	movlw	0
  9948  0059A8  6E0C               	movwf	__bootloader_check_address@cntr,c
  9949  0059AA  D062               	goto	l2418
  9950  0059AC                     
  9951                           ;bootloader.c: 119: {;bootloader.c: 121: if(((address+cntr)>=0x0A000) && ((address+cntr)
      +                          <=0x1FFF7))
  9952  0059AC  500C               	movf	__bootloader_check_address@cntr,w,c
  9953  0059AE  2401               	addwf	__bootloader_check_address@address,w,c
  9954  0059B0  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9955  0059B2  0E00               	movlw	0
  9956  0059B4  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9957  0059B6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9958  0059B8  0E00               	movlw	0
  9959  0059BA  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9960  0059BC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9961  0059BE  0E00               	movlw	0
  9962  0059C0  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9963  0059C2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9964  0059C4  5009               	movf	??__bootloader_check_address+3,w,c
  9965  0059C6  1008               	iorwf	??__bootloader_check_address+2,w,c
  9966  0059C8  E104               	bnz	u11420
  9967  0059CA  0EA0               	movlw	160
  9968  0059CC  5C07               	subwf	??__bootloader_check_address+1,w,c
  9969  0059CE  A0D8               	btfss	status,0,c
  9970  0059D0  D018               	goto	l2420
  9971  0059D2                     u11420:
  9972  0059D2  500C               	movf	__bootloader_check_address@cntr,w,c
  9973  0059D4  2401               	addwf	__bootloader_check_address@address,w,c
  9974  0059D6  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9975  0059D8  0E00               	movlw	0
  9976  0059DA  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9977  0059DC  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9978  0059DE  0E00               	movlw	0
  9979  0059E0  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9980  0059E2  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9981  0059E4  0E00               	movlw	0
  9982  0059E6  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9983  0059E8  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9984  0059EA  5009               	movf	??__bootloader_check_address+3,w,c
  9985  0059EC  E10A               	bnz	l14371
  9986  0059EE  0EF8               	movlw	248
  9987  0059F0  5C06               	subwf	??__bootloader_check_address,w,c
  9988  0059F2  0EFF               	movlw	255
  9989  0059F4  5807               	subwfb	??__bootloader_check_address+1,w,c
  9990  0059F6  0E01               	movlw	1
  9991  0059F8  5808               	subwfb	??__bootloader_check_address+2,w,c
  9992  0059FA  B0D8               	btfsc	status,0,c
  9993  0059FC  D002               	goto	l2420
  9994                           
  9995                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_OK;
  9996  0059FE  0E00               	movlw	0
  9997  005A00  D029               	goto	L4
  9998  005A02                     l2420:
  9999  005A02                     l14371:
 10000                           
 10001                           ;bootloader.c: 127: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10002  005A02  500C               	movf	__bootloader_check_address@cntr,w,c
 10003  005A04  2401               	addwf	__bootloader_check_address@address,w,c
 10004  005A06  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10005  005A08  0E00               	movlw	0
 10006  005A0A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10007  005A0C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10008  005A0E  0E00               	movlw	0
 10009  005A10  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10010  005A12  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10011  005A14  0E00               	movlw	0
 10012  005A16  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10013  005A18  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10014  005A1A  5009               	movf	??__bootloader_check_address+3,w,c
 10015  005A1C  E108               	bnz	u11440
 10016  005A1E  0EF8               	movlw	248
 10017  005A20  5C06               	subwf	??__bootloader_check_address,w,c
 10018  005A22  0EFF               	movlw	255
 10019  005A24  5807               	subwfb	??__bootloader_check_address+1,w,c
 10020  005A26  0E01               	movlw	1
 10021  005A28  5808               	subwfb	??__bootloader_check_address+2,w,c
 10022  005A2A  A0D8               	btfss	status,0,c
 10023  005A2C  D015               	goto	l2422
 10024  005A2E                     u11440:
 10025  005A2E  500C               	movf	__bootloader_check_address@cntr,w,c
 10026  005A30  2401               	addwf	__bootloader_check_address@address,w,c
 10027  005A32  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10028  005A34  0E00               	movlw	0
 10029  005A36  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10030  005A38  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10031  005A3A  0E00               	movlw	0
 10032  005A3C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10033  005A3E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10034  005A40  0E00               	movlw	0
 10035  005A42  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10036  005A44  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10037  005A46  5009               	movf	??__bootloader_check_address+3,w,c
 10038  005A48  E107               	bnz	l2422
 10039  005A4A  0E02               	movlw	2
 10040  005A4C  5C08               	subwf	??__bootloader_check_address+2,w,c
 10041  005A4E  B0D8               	btfsc	status,0,c
 10042  005A50  D003               	goto	l2422
 10043                           
 10044                           ;bootloader.c: 128: {;bootloader.c: 129: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10045  005A52  0E01               	movlw	1
 10046  005A54                     L4:
 10047  005A54  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10048                           
 10049                           ;bootloader.c: 130: }
 10050  005A56  D001               	goto	l2423
 10051  005A58                     l2422:
 10052                           
 10053                           ;bootloader.c: 131: else;bootloader.c: 132: {;bootloader.c: 133: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10054  005A58  680B               	setf	__bootloader_check_address@byte_status,c
 10055  005A5A                     l2423:
 10056                           
 10057                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10058  005A5A  280B               	incf	__bootloader_check_address@byte_status,w,c
 10059  005A5C  A4D8               	btfss	status,2,c
 10060  005A5E  D002               	goto	l2424
 10061                           
 10062                           ;bootloader.c: 138: {;bootloader.c: 139: return ADDRESS_CHECK_RESULT_ERROR;
 10063  005A60  0EFF               	movlw	255
 10064  005A62  0012               	return	
 10065  005A64                     l2424:
 10066                           
 10067                           ;bootloader.c: 140: };bootloader.c: 143: if(byte_status > worst_case)
 10068  005A64  500B               	movf	__bootloader_check_address@byte_status,w,c
 10069  005A66  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10070  005A68  A0D8               	btfss	status,0,c
 10071                           
 10072                           ;bootloader.c: 144: {;bootloader.c: 145: worst_case = byte_status;
 10073  005A6A  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10074  005A6E  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10075  005A70                     l2418:
 10076  005A70  5005               	movf	__bootloader_check_address@dataLength,w,c
 10077  005A72  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10078  005A74  A0D8               	btfss	status,0,c
 10079  005A76  D79A               	goto	l2419
 10080                           
 10081                           ;bootloader.c: 146: };bootloader.c: 147: };bootloader.c: 149: return worst_case;
 10082  005A78  500A               	movf	__bootloader_check_address@worst_case,w,c
 10083  005A7A  0012               	return	
 10084  005A7C                     __end_of__bootloader_check_address:
 10085                           	opt stack 0
 10086                           tblptru	equ	0xFF8
 10087                           tblptrh	equ	0xFF7
 10088                           tblptrl	equ	0xFF6
 10089                           tablat	equ	0xFF5
 10090                           prodh	equ	0xFF4
 10091                           prodl	equ	0xFF3
 10092                           intcon	equ	0xFF2
 10093                           intcon2	equ	0xFF1
 10094                           intcon3	equ	0xFF0
 10095                           postinc0	equ	0xFEE
 10096                           wreg	equ	0xFE8
 10097                           indf1	equ	0xFE7
 10098                           postdec1	equ	0xFE5
 10099                           plusw1	equ	0xFE3
 10100                           fsr1h	equ	0xFE2
 10101                           fsr1l	equ	0xFE1
 10102                           indf2	equ	0xFDF
 10103                           postinc2	equ	0xFDE
 10104                           postdec2	equ	0xFDD
 10105                           plusw2	equ	0xFDB
 10106                           fsr2h	equ	0xFDA
 10107                           fsr2l	equ	0xFD9
 10108                           status	equ	0xFD8
 10109                           
 10110 ;; *************** function __bootloader_find_file *****************
 10111 ;; Defined at:
 10112 ;;		line 152 in file "bootloader.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    7
 10133 ;; This function calls:
 10134 ;;		_fat_find_file
 10135 ;;		_fat_get_file_size
 10136 ;; This function is called by:
 10137 ;;		_bootloader_run
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text44
 10142  006870                     __ptext44:
 10143                           	opt stack 0
 10144  006870                     __bootloader_find_file:
 10145                           	opt stack 22
 10146                           
 10147                           ;bootloader.c: 155: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10148                           
 10149                           ;incstack = 0
 10150  006870  0EB7               	movlw	low _bootloader_filename
 10151  006872  6E2C               	movwf	fat_find_file@name,c
 10152  006874  0E9F               	movlw	high _bootloader_filename
 10153  006876  6E2D               	movwf	fat_find_file@name+1,c
 10154  006878  0EC8               	movlw	low _bootloader_extension
 10155  00687A  6E2E               	movwf	fat_find_file@extension,c
 10156  00687C  0E9F               	movlw	high _bootloader_extension
 10157  00687E  6E2F               	movwf	fat_find_file@extension+1,c
 10158  006880  EC61  F02C         	call	_fat_find_file	;wreg free
 10159  006884  0100               	movlb	0	; () banked
 10160  006886  6FFF               	movwf	_file_number& (0+255),b
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;bootloader.c: 158: if(file_number!=0xFF)
 10164  006888  29FF               	incf	_file_number& (0+255),w,b
 10165  00688A  B4D8               	btfsc	status,2,c
 10166  00688C  D034               	goto	l2430
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;bootloader.c: 159: {;bootloader.c: 161: hex_file_size = fat_get_file_size(file_number);
 10170  00688E  51FF               	movf	_file_number& (0+255),w,b
 10171  006890  EC0B  F03C         	call	_fat_get_file_size
 10172  006894  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
 10173  006898  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10174  00689C  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10175  0068A0  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10176                           
 10177                           ;bootloader.c: 163: hex_file_entries = 0;
 10178  0068A4  0E00               	movlw	0
 10179  0068A6  0101               	movlb	1	; () banked
 10180  0068A8  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
 10181  0068AA  0E00               	movlw	0
 10182  0068AC  6F78               	movwf	_hex_file_entries& (0+255),b
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;bootloader.c: 164: hex_file_offset = 0;
 10186  0068AE  0E00               	movlw	0
 10187  0068B0  0100               	movlb	0	; () banked
 10188  0068B2  6FD7               	movwf	_hex_file_offset& (0+255),b
 10189  0068B4  0E00               	movlw	0
 10190  0068B6  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
 10191  0068B8  0E00               	movlw	0
 10192  0068BA  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
 10193  0068BC  0E00               	movlw	0
 10194  0068BE  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;bootloader.c: 165: file_minimum_address = 0xFFFFFFFF;
 10198  0068C0  0101               	movlb	1	; () banked
 10199  0068C2  6952               	setf	_file_minimum_address& (0+255),b
 10200  0068C4  6953               	setf	(_file_minimum_address+1)& (0+255),b
 10201  0068C6  6954               	setf	(_file_minimum_address+2)& (0+255),b
 10202  0068C8  6955               	setf	(_file_minimum_address+3)& (0+255),b
 10203                           
 10204                           ; BSR set to: 1
 10205                           ;bootloader.c: 166: file_maximum_address = 0x00000000;
 10206  0068CA  0E00               	movlw	0
 10207  0068CC  6F4E               	movwf	_file_maximum_address& (0+255),b
 10208  0068CE  0E00               	movlw	0
 10209  0068D0  6F4F               	movwf	(_file_maximum_address+1)& (0+255),b
 10210  0068D2  0E00               	movlw	0
 10211  0068D4  6F50               	movwf	(_file_maximum_address+2)& (0+255),b
 10212  0068D6  0E00               	movlw	0
 10213  0068D8  6F51               	movwf	(_file_maximum_address+3)& (0+255),b
 10214                           
 10215                           ; BSR set to: 1
 10216                           ;bootloader.c: 167: extended_linear_address = 0x00000000;
 10217  0068DA  0E00               	movlw	0
 10218  0068DC  6F46               	movwf	_extended_linear_address& (0+255),b
 10219  0068DE  0E00               	movlw	0
 10220  0068E0  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10221  0068E2  0E00               	movlw	0
 10222  0068E4  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10223  0068E6  0E00               	movlw	0
 10224  0068E8  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10225                           
 10226                           ; BSR set to: 1
 10227                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10228  0068EA  0E20               	movlw	32
 10229  0068EC  0100               	movlb	0	; () banked
 10230  0068EE  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10234  0068F0  0E20               	movlw	32
 10235  0068F2  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10236                           
 10237                           ;bootloader.c: 170: }
 10238  0068F4  0012               	return	
 10239  0068F6                     l2430:
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;bootloader.c: 172: else;bootloader.c: 173: {;bootloader.c: 175: hex_file_size = 0;
 10243                           
 10244                           ; BSR set to: 0
 10245  0068F6  0E00               	movlw	0
 10246  0068F8  0101               	movlb	1	; () banked
 10247  0068FA  6F4A               	movwf	_hex_file_size& (0+255),b
 10248  0068FC  0E00               	movlw	0
 10249  0068FE  6F4B               	movwf	(_hex_file_size+1)& (0+255),b
 10250  006900  0E00               	movlw	0
 10251  006902  6F4C               	movwf	(_hex_file_size+2)& (0+255),b
 10252  006904  0E00               	movlw	0
 10253  006906  6F4D               	movwf	(_hex_file_size+3)& (0+255),b
 10254                           
 10255                           ;bootloader.c: 177: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10256  006908  0E10               	movlw	16
 10257  00690A  0100               	movlb	0	; () banked
 10258  00690C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10259                           
 10260                           ;bootloader.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10261  00690E  0E10               	movlw	16
 10262  006910  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10263  006912  0012               	return	
 10264  006914                     __end_of__bootloader_find_file:
 10265                           	opt stack 0
 10266                           tblptru	equ	0xFF8
 10267                           tblptrh	equ	0xFF7
 10268                           tblptrl	equ	0xFF6
 10269                           tablat	equ	0xFF5
 10270                           prodh	equ	0xFF4
 10271                           prodl	equ	0xFF3
 10272                           intcon	equ	0xFF2
 10273                           intcon2	equ	0xFF1
 10274                           intcon3	equ	0xFF0
 10275                           postinc0	equ	0xFEE
 10276                           wreg	equ	0xFE8
 10277                           indf1	equ	0xFE7
 10278                           postdec1	equ	0xFE5
 10279                           plusw1	equ	0xFE3
 10280                           fsr1h	equ	0xFE2
 10281                           fsr1l	equ	0xFE1
 10282                           indf2	equ	0xFDF
 10283                           postinc2	equ	0xFDE
 10284                           postdec2	equ	0xFDD
 10285                           plusw2	equ	0xFDB
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290 ;; *************** function __normal_mode *****************
 10291 ;; Defined at:
 10292 ;;		line 208 in file "main.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;		None
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      unsigned char 
 10299 ;; Registers used:
 10300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10310 ;;Total ram usage:        0 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    3
 10313 ;; This function calls:
 10314 ;;		_i2c_eeprom_readByte
 10315 ;;		_i2c_eeprom_writeByte
 10316 ;; This function is called by:
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321                           	psect	text45
 10322  007C08                     __ptext45:
 10323                           	opt stack 0
 10324  007C08                     __normal_mode:
 10325                           	opt stack 27
 10326                           
 10327                           ;main.c: 210: if(i2c_eeprom_readByte(0x100)==0x94)
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;incstack = 0
 10331  007C08  0E01               	movlw	1
 10332  007C0A  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10333  007C0C  0E00               	movlw	0
 10334  007C0E  6E12               	movwf	i2c_eeprom_readByte@address,c
 10335  007C10  EC11  F041         	call	_i2c_eeprom_readByte	;wreg free
 10336  007C14  0A94               	xorlw	148
 10337  007C16  A4D8               	btfss	status,2,c
 10338  007C18  D00A               	goto	l914
 10339                           
 10340                           ;main.c: 211: {;main.c: 213: i2c_eeprom_writeByte(0x100, 0x00);
 10341  007C1A  0E01               	movlw	1
 10342  007C1C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10343  007C1E  0E00               	movlw	0
 10344  007C20  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10345  007C22  0E00               	movlw	0
 10346  007C24  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10347  007C26  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 10348                           
 10349                           ;main.c: 215: return 0;
 10350  007C2A  0E00               	movlw	0
 10351  007C2C  0012               	return	
 10352  007C2E                     l914:
 10353                           
 10354                           ;main.c: 217: else if(i2c_eeprom_readByte(0x100)==0x78)
 10355  007C2E  0E01               	movlw	1
 10356  007C30  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10357  007C32  0E00               	movlw	0
 10358  007C34  6E12               	movwf	i2c_eeprom_readByte@address,c
 10359  007C36  EC11  F041         	call	_i2c_eeprom_readByte	;wreg free
 10360  007C3A  0A78               	xorlw	120
 10361  007C3C  A4D8               	btfss	status,2,c
 10362  007C3E  D00A               	goto	l917
 10363                           
 10364                           ;main.c: 218: {;main.c: 220: i2c_eeprom_writeByte(0x100, 0x00);
 10365  007C40  0E01               	movlw	1
 10366  007C42  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10367  007C44  0E00               	movlw	0
 10368  007C46  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10369  007C48  0E00               	movlw	0
 10370  007C4A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10371  007C4C  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 10372                           
 10373                           ;main.c: 222: return 1;
 10374  007C50  0E01               	movlw	1
 10375  007C52  0012               	return	
 10376  007C54                     l917:
 10377                           
 10378                           ;main.c: 223: };main.c: 229: LATAbits.LA0 = 1;
 10379  007C54  8089               	bsf	3977,0,c	;volatile
 10380                           
 10381                           ;main.c: 230: TRISAbits.TRISA0 = 0;
 10382  007C56  9092               	bcf	3986,0,c	;volatile
 10383                           
 10384                           ;main.c: 231: TRISAbits.TRISA0 = 1;
 10385  007C58  8092               	bsf	3986,0,c	;volatile
 10386                           
 10387                           ;main.c: 233: if(!PORTAbits.RA0)
 10388  007C5A  B080               	btfsc	3968,0,c	;volatile
 10389  007C5C  D002               	goto	l918
 10390                           
 10391                           ;main.c: 234: {;main.c: 236: return 0;
 10392  007C5E  0E00               	movlw	0
 10393                           
 10394                           ;main.c: 237: }
 10395  007C60  0012               	return	
 10396  007C62                     l918:
 10397                           
 10398                           ;main.c: 238: else;main.c: 239: {;main.c: 241: return 1;
 10399  007C62  0E01               	movlw	1
 10400  007C64  0012               	return	
 10401  007C66                     __end_of__normal_mode:
 10402                           	opt stack 0
 10403                           tblptru	equ	0xFF8
 10404                           tblptrh	equ	0xFF7
 10405                           tblptrl	equ	0xFF6
 10406                           tablat	equ	0xFF5
 10407                           prodh	equ	0xFF4
 10408                           prodl	equ	0xFF3
 10409                           intcon	equ	0xFF2
 10410                           intcon2	equ	0xFF1
 10411                           intcon3	equ	0xFF0
 10412                           postinc0	equ	0xFEE
 10413                           wreg	equ	0xFE8
 10414                           indf1	equ	0xFE7
 10415                           postdec1	equ	0xFE5
 10416                           plusw1	equ	0xFE3
 10417                           fsr1h	equ	0xFE2
 10418                           fsr1l	equ	0xFE1
 10419                           indf2	equ	0xFDF
 10420                           postinc2	equ	0xFDE
 10421                           postdec2	equ	0xFDD
 10422                           plusw2	equ	0xFDB
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function _i2c_eeprom_readByte *****************
 10428 ;; Defined at:
 10429 ;;		line 367 in file "i2c.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  address         2   17[COMRAM] unsigned int 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  addr            1   23[COMRAM] unsigned char 
 10434 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      unsigned char 
 10437 ;; Registers used:
 10438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10448 ;;Total ram usage:        7 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:    2
 10451 ;; This function calls:
 10452 ;;		__i2c_read
 10453 ;;		__i2c_write
 10454 ;;		_i2c_set_frequency
 10455 ;; This function is called by:
 10456 ;;		__normal_mode
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text46
 10461  008222                     __ptext46:
 10462                           	opt stack 0
 10463  008222                     _i2c_eeprom_readByte:
 10464                           	opt stack 27
 10465                           
 10466                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10467                           
 10468                           ;incstack = 0
 10469  008222  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10470  008226  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10471  00822A  0E07               	movlw	7
 10472  00822C  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10473  00822E                     u12085:
 10474  00822E  90D8               	bcf	status,0,c
 10475  008230  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10476  008232  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10477  008234  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10478  008236  D7FB               	goto	u12085
 10479  008238  5014               	movf	??_i2c_eeprom_readByte,w,c
 10480  00823A  0B0E               	andlw	14
 10481  00823C  09A0               	iorlw	160
 10482  00823E  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10483                           
 10484                           ;i2c.c: 372: addr = address & 0xFF;
 10485  008240  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10486                           
 10487                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10488  008244  0E02               	movlw	2
 10489  008246  EC12  F045         	call	_i2c_set_frequency
 10490                           
 10491                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10492  00824A  0E18               	movlw	low i2c_eeprom_readByte@addr
 10493  00824C  6E06               	movwf	__i2c_write@data,c
 10494  00824E  0E00               	movlw	high i2c_eeprom_readByte@addr
 10495  008250  6E07               	movwf	__i2c_write@data+1,c
 10496  008252  0E01               	movlw	1
 10497  008254  6E08               	movwf	__i2c_write@length,c
 10498  008256  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10499  008258  EC85  F041         	call	__i2c_write
 10500                           
 10501                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10502  00825C  0E18               	movlw	low i2c_eeprom_readByte@addr
 10503  00825E  6E06               	movwf	__i2c_read@data,c
 10504  008260  0E00               	movlw	high i2c_eeprom_readByte@addr
 10505  008262  6E07               	movwf	__i2c_read@data+1,c
 10506  008264  0E01               	movlw	1
 10507  008266  6E08               	movwf	__i2c_read@length,c
 10508  008268  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10509  00826A  EC25  F038         	call	__i2c_read
 10510                           
 10511                           ;i2c.c: 379: return addr;
 10512  00826E  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10513  008270  0012               	return	
 10514  008272                     __end_of_i2c_eeprom_readByte:
 10515                           	opt stack 0
 10516                           tblptru	equ	0xFF8
 10517                           tblptrh	equ	0xFF7
 10518                           tblptrl	equ	0xFF6
 10519                           tablat	equ	0xFF5
 10520                           prodh	equ	0xFF4
 10521                           prodl	equ	0xFF3
 10522                           intcon	equ	0xFF2
 10523                           intcon2	equ	0xFF1
 10524                           intcon3	equ	0xFF0
 10525                           postinc0	equ	0xFEE
 10526                           wreg	equ	0xFE8
 10527                           indf1	equ	0xFE7
 10528                           postdec1	equ	0xFE5
 10529                           plusw1	equ	0xFE3
 10530                           fsr1h	equ	0xFE2
 10531                           fsr1l	equ	0xFE1
 10532                           indf2	equ	0xFDF
 10533                           postinc2	equ	0xFDE
 10534                           postdec2	equ	0xFDD
 10535                           plusw2	equ	0xFDB
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function __i2c_read *****************
 10541 ;; Defined at:
 10542 ;;		line 161 in file "i2c.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  slave_addres    1    wreg     unsigned char 
 10545 ;;  data            2    5[COMRAM] PTR unsigned char 
 10546 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10547 ;;  length          1    7[COMRAM] unsigned char 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10550 ;;  cntr            1   16[COMRAM] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10560 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;Total ram usage:       12 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    1
 10567 ;; This function calls:
 10568 ;;		__i2c_acknowledge
 10569 ;;		__i2c_get
 10570 ;;		__i2c_not_acknowledge
 10571 ;;		__i2c_send
 10572 ;;		__i2c_start
 10573 ;;		__i2c_stop
 10574 ;;		__i2c_wait_idle
 10575 ;; This function is called by:
 10576 ;;		_i2c_eeprom_readByte
 10577 ;;		_i2c_eeprom_read
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text47
 10582  00704A                     __ptext47:
 10583                           	opt stack 0
 10584  00704A                     __i2c_read:
 10585                           	opt stack 27
 10586                           
 10587                           ;incstack = 0
 10588                           ;__i2c_read@slave_address stored from wreg
 10589  00704A  6E10               	movwf	__i2c_read@slave_address,c
 10590                           
 10591                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10592  00704C  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 10593                           
 10594                           ;i2c.c: 166: _i2c_start();
 10595  007050  ECCB  F047         	call	__i2c_start	;wreg free
 10596                           
 10597                           ;i2c.c: 167: _i2c_wait_idle();
 10598  007054  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 10599                           
 10600                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10601  007058  5010               	movf	__i2c_read@slave_address,w,c
 10602  00705A  0901               	iorlw	1
 10603  00705C  ECCF  F047         	call	__i2c_send
 10604                           
 10605                           ;i2c.c: 169: _i2c_wait_idle();
 10606  007060  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 10607                           
 10608                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10609  007064  0E00               	movlw	0
 10610  007066  6E11               	movwf	__i2c_read@cntr,c
 10611  007068  D00E               	goto	l1209
 10612  00706A                     
 10613                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10614  00706A  5011               	movf	__i2c_read@cntr,w,c
 10615  00706C  0D01               	mullw	1
 10616  00706E  50F3               	movf	prodl,w,c
 10617  007070  2406               	addwf	__i2c_read@data,w,c
 10618  007072  6ED9               	movwf	fsr2l,c
 10619  007074  50F4               	movf	prodh,w,c
 10620  007076  2007               	addwfc	__i2c_read@data+1,w,c
 10621  007078  6EDA               	movwf	fsr2h,c
 10622  00707A  EC95  F047         	call	__i2c_get	;wreg free
 10623  00707E  6EDF               	movwf	indf2,c
 10624                           
 10625                           ;i2c.c: 174: _i2c_acknowledge();
 10626  007080  EC9A  F047         	call	__i2c_acknowledge	;wreg free
 10627  007084  2A11               	incf	__i2c_read@cntr,f,c
 10628  007086                     l1209:
 10629  007086  0EFF               	movlw	255
 10630  007088  6E09               	movwf	??__i2c_read& (0+255),c
 10631  00708A  0EFF               	movlw	255
 10632  00708C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10633  00708E  5008               	movf	__i2c_read@length,w,c
 10634  007090  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10635  007092  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10636  007094  5009               	movf	??__i2c_read,w,c
 10637  007096  260B               	addwf	??__i2c_read+2,f,c
 10638  007098  500A               	movf	??__i2c_read+1,w,c
 10639  00709A  220C               	addwfc	??__i2c_read+3,f,c
 10640  00709C  5011               	movf	__i2c_read@cntr,w,c
 10641  00709E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10642  0070A0  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10643  0070A2  500B               	movf	??__i2c_read+2,w,c
 10644  0070A4  5C0D               	subwf	??__i2c_read+4,w,c
 10645  0070A6  500E               	movf	??__i2c_read+5,w,c
 10646  0070A8  0A80               	xorlw	128
 10647  0070AA  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10648  0070AC  500C               	movf	??__i2c_read+3,w,c
 10649  0070AE  0A80               	xorlw	128
 10650  0070B0  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10651  0070B2  A0D8               	btfss	status,0,c
 10652  0070B4  D7DA               	goto	l1210
 10653                           
 10654                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10655  0070B6  5011               	movf	__i2c_read@cntr,w,c
 10656  0070B8  0D01               	mullw	1
 10657  0070BA  50F3               	movf	prodl,w,c
 10658  0070BC  2406               	addwf	__i2c_read@data,w,c
 10659  0070BE  6ED9               	movwf	fsr2l,c
 10660  0070C0  50F4               	movf	prodh,w,c
 10661  0070C2  2007               	addwfc	__i2c_read@data+1,w,c
 10662  0070C4  6EDA               	movwf	fsr2h,c
 10663  0070C6  EC95  F047         	call	__i2c_get	;wreg free
 10664  0070CA  6EDF               	movwf	indf2,c
 10665                           
 10666                           ;i2c.c: 177: _i2c_not_acknowledge();
 10667  0070CC  EC90  F047         	call	__i2c_not_acknowledge	;wreg free
 10668                           
 10669                           ;i2c.c: 179: _i2c_stop();
 10670  0070D0  ECC7  F047         	call	__i2c_stop	;wreg free
 10671  0070D4  0012               	return		;funcret
 10672  0070D6                     __end_of__i2c_read:
 10673                           	opt stack 0
 10674                           tblptru	equ	0xFF8
 10675                           tblptrh	equ	0xFF7
 10676                           tblptrl	equ	0xFF6
 10677                           tablat	equ	0xFF5
 10678                           prodh	equ	0xFF4
 10679                           prodl	equ	0xFF3
 10680                           intcon	equ	0xFF2
 10681                           intcon2	equ	0xFF1
 10682                           intcon3	equ	0xFF0
 10683                           postinc0	equ	0xFEE
 10684                           wreg	equ	0xFE8
 10685                           indf1	equ	0xFE7
 10686                           postdec1	equ	0xFE5
 10687                           plusw1	equ	0xFE3
 10688                           fsr1h	equ	0xFE2
 10689                           fsr1l	equ	0xFE1
 10690                           indf2	equ	0xFDF
 10691                           postinc2	equ	0xFDE
 10692                           postdec2	equ	0xFDD
 10693                           plusw2	equ	0xFDB
 10694                           fsr2h	equ	0xFDA
 10695                           fsr2l	equ	0xFD9
 10696                           status	equ	0xFD8
 10697                           
 10698 ;; *************** function __i2c_not_acknowledge *****************
 10699 ;; Defined at:
 10700 ;;		line 90 in file "i2c.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;		None
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;		None
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		None
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10718 ;;Total ram usage:        0 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; This function calls:
 10721 ;;		Nothing
 10722 ;; This function is called by:
 10723 ;;		__i2c_read
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text48
 10728  008F20                     __ptext48:
 10729                           	opt stack 0
 10730  008F20                     __i2c_not_acknowledge:
 10731                           	opt stack 27
 10732                           
 10733                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 10734                           
 10735                           ;incstack = 0
 10736  008F20  8AC5               	bsf	4037,5,c	;volatile
 10737                           
 10738                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 10739  008F22  88C5               	bsf	4037,4,c	;volatile
 10740  008F24  A8C5               	btfss	4037,4,c	;volatile
 10741  008F26  0012               	return	
 10742  008F28  D7FD               	goto	l1181
 10743  008F2A                     __end_of__i2c_not_acknowledge:
 10744                           	opt stack 0
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           intcon2	equ	0xFF1
 10753                           intcon3	equ	0xFF0
 10754                           postinc0	equ	0xFEE
 10755                           wreg	equ	0xFE8
 10756                           indf1	equ	0xFE7
 10757                           postdec1	equ	0xFE5
 10758                           plusw1	equ	0xFE3
 10759                           fsr1h	equ	0xFE2
 10760                           fsr1l	equ	0xFE1
 10761                           indf2	equ	0xFDF
 10762                           postinc2	equ	0xFDE
 10763                           postdec2	equ	0xFDD
 10764                           plusw2	equ	0xFDB
 10765                           fsr2h	equ	0xFDA
 10766                           fsr2l	equ	0xFD9
 10767                           status	equ	0xFD8
 10768                           
 10769 ;; *************** function __i2c_get *****************
 10770 ;; Defined at:
 10771 ;;		line 67 in file "i2c.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;		None
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      unsigned char 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;Total ram usage:        0 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		__i2c_read
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text49
 10799  008F2A                     __ptext49:
 10800                           	opt stack 0
 10801  008F2A                     __i2c_get:
 10802                           	opt stack 27
 10803                           
 10804                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 10805                           
 10806                           ;incstack = 0
 10807  008F2A  86C5               	bsf	4037,3,c	;volatile
 10808  008F2C  B6C5               	btfsc	4037,3,c	;volatile
 10809  008F2E  D7FE               	goto	l1163
 10810                           
 10811                           ;i2c.c: 71: return SSP1BUF;
 10812  008F30  50C9               	movf	4041,w,c	;volatile
 10813  008F32  0012               	return	
 10814  008F34                     __end_of__i2c_get:
 10815                           	opt stack 0
 10816                           tblptru	equ	0xFF8
 10817                           tblptrh	equ	0xFF7
 10818                           tblptrl	equ	0xFF6
 10819                           tablat	equ	0xFF5
 10820                           prodh	equ	0xFF4
 10821                           prodl	equ	0xFF3
 10822                           intcon	equ	0xFF2
 10823                           intcon2	equ	0xFF1
 10824                           intcon3	equ	0xFF0
 10825                           postinc0	equ	0xFEE
 10826                           wreg	equ	0xFE8
 10827                           indf1	equ	0xFE7
 10828                           postdec1	equ	0xFE5
 10829                           plusw1	equ	0xFE3
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           postdec2	equ	0xFDD
 10835                           plusw2	equ	0xFDB
 10836                           fsr2h	equ	0xFDA
 10837                           fsr2l	equ	0xFD9
 10838                           status	equ	0xFD8
 10839                           
 10840 ;; *************** function __i2c_acknowledge *****************
 10841 ;; Defined at:
 10842 ;;		line 82 in file "i2c.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;		None
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;		None
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		None
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;Total ram usage:        0 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; This function calls:
 10863 ;;		Nothing
 10864 ;; This function is called by:
 10865 ;;		__i2c_read
 10866 ;; This function uses a non-reentrant model
 10867 ;;
 10868                           
 10869                           	psect	text50
 10870  008F34                     __ptext50:
 10871                           	opt stack 0
 10872  008F34                     __i2c_acknowledge:
 10873                           	opt stack 27
 10874                           
 10875                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 10876                           
 10877                           ;incstack = 0
 10878  008F34  9AC5               	bcf	4037,5,c	;volatile
 10879                           
 10880                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 10881  008F36  88C5               	bsf	4037,4,c	;volatile
 10882  008F38  A8C5               	btfss	4037,4,c	;volatile
 10883  008F3A  0012               	return	
 10884  008F3C  D7FD               	goto	l1175
 10885  008F3E                     __end_of__i2c_acknowledge:
 10886                           	opt stack 0
 10887                           tblptru	equ	0xFF8
 10888                           tblptrh	equ	0xFF7
 10889                           tblptrl	equ	0xFF6
 10890                           tablat	equ	0xFF5
 10891                           prodh	equ	0xFF4
 10892                           prodl	equ	0xFF3
 10893                           intcon	equ	0xFF2
 10894                           intcon2	equ	0xFF1
 10895                           intcon3	equ	0xFF0
 10896                           postinc0	equ	0xFEE
 10897                           wreg	equ	0xFE8
 10898                           indf1	equ	0xFE7
 10899                           postdec1	equ	0xFE5
 10900                           plusw1	equ	0xFE3
 10901                           fsr1h	equ	0xFE2
 10902                           fsr1l	equ	0xFE1
 10903                           indf2	equ	0xFDF
 10904                           postinc2	equ	0xFDE
 10905                           postdec2	equ	0xFDD
 10906                           plusw2	equ	0xFDB
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function _USBDeviceTasks *****************
 10912 ;; Defined at:
 10913 ;;		line 477 in file "usb_device.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;		None
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  i               1   31[COMRAM] unsigned char 
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10931 ;;Total ram usage:        1 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    8
 10934 ;; This function calls:
 10935 ;;		_USBCtrlEPAllowStatusStage
 10936 ;;		_USBCtrlEPService
 10937 ;;		_USBDeviceInit
 10938 ;;		_USBIncrement1msInternalTimers
 10939 ;;		_USBStallHandler
 10940 ;;		_USBSuspend
 10941 ;;		_USBWakeFromSuspend
 10942 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10943 ;; This function is called by:
 10944 ;;		_main
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text51
 10949  0035FA                     __ptext51:
 10950                           	opt stack 0
 10951  0035FA                     _USBDeviceTasks:
 10952                           	opt stack 22
 10953                           
 10954                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 10955                           
 10956                           ; BSR set to: 0
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;usb_device.c: 543: return;
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 10963                           
 10964                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 10965                           
 10966                           ;usb_device.c: 511: UIE = 0;
 10967                           
 10968                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 10969                           
 10970                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 10971                           
 10972                           ;incstack = 0
 10973  0035FA  0100               	movlb	0	; () banked
 10974  0035FC  51F8               	movf	_USBDeviceState& (0+255),w,b
 10975  0035FE  A4D8               	btfss	status,2,c
 10976  003600  D012               	goto	l150
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 10980  003602  0E00               	movlw	0
 10981  003604  6E65               	movwf	3941,c	;volatile
 10982                           
 10983                           ;usb_device.c: 572: UIE = 0;
 10984  003606  0E00               	movlw	0
 10985  003608  010F               	movlb	15	; () banked
 10986  00360A  6F36               	movwf	54,b	;volatile
 10987                           
 10988                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10989  00360C  0E16               	movlw	22
 10990  00360E  6F39               	movwf	57,b	;volatile
 10991  003610  0E9F               	movlw	159
 10992  003612  6F37               	movwf	55,b	;volatile
 10993  003614  0E7B               	movlw	123
 10994  003616  6F36               	movwf	54,b	;volatile
 10995                           
 10996                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10997  003618  D001               	goto	l151
 10998  00361A                     l152:
 10999  00361A  8665               	bsf	3941,3,c	;volatile
 11000  00361C                     l151:
 11001  00361C  A665               	btfss	3941,3,c	;volatile
 11002  00361E  D7FD               	goto	l152
 11003                           
 11004                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11005  003620  0E01               	movlw	1
 11006  003622  0100               	movlb	0	; () banked
 11007  003624  6FF8               	movwf	_USBDeviceState& (0+255),b
 11008  003626                     l150:
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11012                           
 11013                           ; BSR set to: 0
 11014  003626  05F8               	decf	_USBDeviceState& (0+255),w,b
 11015  003628  B4D8               	btfsc	status,2,c
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11019  00362A  BA65               	btfsc	3941,5,c	;volatile
 11020  00362C  D00A               	goto	l155
 11021                           
 11022                           ; BSR set to: 0
 11023                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11024  00362E  0E00               	movlw	0
 11025  003630  6E62               	movwf	3938,c	;volatile
 11026                           
 11027                           ;usb_device.c: 612: UIE=0;
 11028  003632  0E00               	movlw	0
 11029  003634  010F               	movlb	15	; () banked
 11030  003636  6F36               	movwf	54,b	;volatile
 11031                           
 11032                           ; BSR set to: 15
 11033                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11034  003638  8136               	bsf	54,0,b	;volatile
 11035                           
 11036                           ; BSR set to: 15
 11037                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11038  00363A  8936               	bsf	54,4,b	;volatile
 11039                           
 11040                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11041  00363C  0E02               	movlw	2
 11042  00363E  0100               	movlb	0	; () banked
 11043  003640  6FF8               	movwf	_USBDeviceState& (0+255),b
 11044  003642                     l155:
 11045                           
 11046                           ; BSR set to: 0
 11047                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11048                           
 11049                           ; BSR set to: 0
 11050                           
 11051                           ; BSR set to: 0
 11052  003642  A462               	btfss	3938,2,c	;volatile
 11053  003644  D006               	goto	l156
 11054                           
 11055                           ; BSR set to: 0
 11056  003646  010F               	movlb	15	; () banked
 11057  003648  A536               	btfss	54,2,b	;volatile
 11058  00364A  D003               	goto	l156
 11059                           
 11060                           ; BSR set to: 15
 11061                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 11062  00364C  9462               	bcf	3938,2,c	;volatile
 11063                           
 11064                           ; BSR set to: 15
 11065                           ;usb_device.c: 640: USBWakeFromSuspend();
 11066  00364E  EC6E  F043         	call	_USBWakeFromSuspend	;wreg free
 11067  003652                     l156:
 11068                           
 11069                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 11070  003652  A265               	btfss	3941,1,c	;volatile
 11071  003654  D002               	goto	l157
 11072                           
 11073                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 11074  003656  98A1               	bcf	4001,4,c	;volatile
 11075                           
 11076                           ;usb_device.c: 650: return;
 11077  003658  0012               	return	
 11078  00365A                     l157:
 11079                           
 11080                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11081  00365A  A062               	btfss	3938,0,c	;volatile
 11082  00365C  D009               	goto	l158
 11083  00365E  010F               	movlb	15	; () banked
 11084  003660  A136               	btfss	54,0,b	;volatile
 11085  003662  D006               	goto	l158
 11086                           
 11087                           ; BSR set to: 15
 11088                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 11089  003664  EC4C  F01F         	call	_USBDeviceInit	;wreg free
 11090                           
 11091                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11092  003668  0E04               	movlw	4
 11093  00366A  0100               	movlb	0	; () banked
 11094  00366C  6FF8               	movwf	_USBDeviceState& (0+255),b
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;usb_device.c: 681: (UIR &= 0xFE);
 11098  00366E  9062               	bcf	3938,0,c	;volatile
 11099  003670                     l158:
 11100                           
 11101                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11102                           
 11103                           ; BSR set to: 0
 11104  003670  A862               	btfss	3938,4,c	;volatile
 11105  003672  D004               	goto	l159
 11106  003674  010F               	movlb	15	; () banked
 11107  003676  B936               	btfsc	54,4,b	;volatile
 11108                           
 11109                           ; BSR set to: 15
 11110                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11111  003678  EC8A  F044         	call	_USBSuspend	;wreg free
 11112  00367C                     l159:
 11113                           
 11114                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11115  00367C  AC62               	btfss	3938,6,c	;volatile
 11116  00367E  D01C               	goto	l163
 11117                           
 11118                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11119  003680  010F               	movlb	15	; () banked
 11120  003682  AD36               	btfss	54,6,b	;volatile
 11121  003684  D00E               	goto	l161
 11122                           
 11123                           ; BSR set to: 15
 11124                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11125  003686  0E00               	movlw	0
 11126  003688  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11127  00368A  0E73               	movlw	115
 11128  00368C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11129  00368E  0E00               	movlw	0
 11130  003690  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11131  003692  0E00               	movlw	0
 11132  003694  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11133  003696  0E00               	movlw	0
 11134  003698  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11135  00369A  0E01               	movlw	1
 11136  00369C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11137  00369E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11138  0036A2                     l161:
 11139                           
 11140                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11141  0036A2  9C62               	bcf	3938,6,c	;volatile
 11142                           
 11143                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11144  0036A4  EC53  F046         	call	_USBIncrement1msInternalTimers	;wreg free
 11145                           
 11146                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11147  0036A8  0100               	movlb	0	; () banked
 11148  0036AA  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11149  0036AC  A4D8               	btfss	status,2,c
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11153  0036AE  07F3               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11157                           
 11158                           ; BSR set to: 0
 11159  0036B0  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11160  0036B2  B4D8               	btfsc	status,2,c
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11164  0036B4  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11165  0036B8                     l163:
 11166                           
 11167                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11168  0036B8  AA62               	btfss	3938,5,c	;volatile
 11169  0036BA  D004               	goto	l164
 11170  0036BC  010F               	movlb	15	; () banked
 11171  0036BE  BB36               	btfsc	54,5,b	;volatile
 11172                           
 11173                           ; BSR set to: 15
 11174                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11175  0036C0  ECF0  F041         	call	_USBStallHandler	;wreg free
 11176  0036C4                     l164:
 11177                           
 11178                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11179  0036C4  A262               	btfss	3938,1,c	;volatile
 11180  0036C6  D012               	goto	l165
 11181  0036C8  010F               	movlb	15	; () banked
 11182  0036CA  A336               	btfss	54,1,b	;volatile
 11183  0036CC  D00F               	goto	l165
 11184                           
 11185                           ; BSR set to: 15
 11186                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11187  0036CE  0E7F               	movlw	127
 11188  0036D0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11189  0036D2  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11190  0036D4  0E00               	movlw	0
 11191  0036D6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11192  0036D8  0E00               	movlw	0
 11193  0036DA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11194  0036DC  0E00               	movlw	0
 11195  0036DE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11196  0036E0  0E01               	movlw	1
 11197  0036E2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11198  0036E4  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11199                           
 11200                           ;usb_device.c: 759: {UEIR = 0;};
 11201  0036E8  0E00               	movlw	0
 11202  0036EA  6E63               	movwf	3939,c	;volatile
 11203  0036EC                     l165:
 11204                           
 11205                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11206  0036EC  0E04               	movlw	4
 11207  0036EE  0100               	movlb	0	; () banked
 11208  0036F0  61F8               	cpfslt	_USBDeviceState& (0+255),b
 11209  0036F2  D002               	goto	l166
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11213  0036F4  98A1               	bcf	4001,4,c	;volatile
 11214                           
 11215                           ;usb_device.c: 777: return;
 11216  0036F6  0012               	return	
 11217  0036F8                     l166:
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11221  0036F8  010F               	movlb	15	; () banked
 11222  0036FA  A736               	btfss	54,3,b	;volatile
 11223  0036FC  D03C               	goto	u12640
 11224                           
 11225                           ; BSR set to: 15
 11226                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11227  0036FE  0E00               	movlw	0
 11228  003700  6E20               	movwf	USBDeviceTasks@i,c
 11229  003702                     l15535:
 11230                           
 11231                           ; BSR set to: 15
 11232  003702  0E03               	movlw	3
 11233  003704  6420               	cpfsgt	USBDeviceTasks@i,c
 11234  003706  D001               	goto	l168
 11235  003708  D036               	goto	u12640
 11236  00370A                     l168:
 11237                           
 11238                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11239  00370A  A662               	btfss	3938,3,c	;volatile
 11240  00370C  D034               	goto	u12640
 11241                           
 11242                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11243  00370E  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11244                           
 11245                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11246  003712  0100               	movlb	0	; () banked
 11247  003714  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11248  003716  32E8               	rrcf	wreg,f,c
 11249  003718  32E8               	rrcf	wreg,f,c
 11250  00371A  0B0F               	andlw	15
 11251  00371C  6FF4               	movwf	_endpoint_number& (0+255),b
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;usb_device.c: 793: (UIR &= 0xF7);
 11255  00371E  9662               	bcf	3938,3,c	;volatile
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11259  003720  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11260  003722  D007               	goto	l171
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11264  003724  51F4               	movf	_endpoint_number& (0+255),w,b
 11265  003726  0D01               	mullw	1
 11266  003728  0E6C               	movlw	low _ep_data_out
 11267  00372A  24F3               	addwf	prodl,w,c
 11268  00372C  6ED9               	movwf	fsr2l,c
 11269  00372E  0E01               	movlw	high _ep_data_out
 11270  003730  D007               	goto	L5
 11271  003732                     l171:
 11272                           
 11273                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11274                           
 11275                           ; BSR set to: 1
 11276  003732  0100               	movlb	0	; () banked
 11277  003734  51F4               	movf	_endpoint_number& (0+255),w,b
 11278  003736  0D01               	mullw	1
 11279  003738  0E6F               	movlw	low _ep_data_in
 11280  00373A  24F3               	addwf	prodl,w,c
 11281  00373C  6ED9               	movwf	fsr2l,c
 11282  00373E  0E01               	movlw	high _ep_data_in
 11283  003740                     L5:
 11284  003740  20F4               	addwfc	prodh,w,c
 11285  003742  6EDA               	movwf	fsr2h,c
 11286  003744  0101               	movlb	1	; () banked
 11287  003746  70DF               	btg	indf2,0,c
 11288                           
 11289                           ; BSR set to: 1
 11290                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11291                           
 11292                           ; BSR set to: 1
 11293  003748  0100               	movlb	0	; () banked
 11294  00374A  51F4               	movf	_endpoint_number& (0+255),w,b
 11295  00374C  A4D8               	btfss	status,2,c
 11296  00374E  D003               	goto	l173
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11300  003750  EC93  F032         	call	_USBCtrlEPService	;wreg free
 11301                           
 11302                           ;usb_device.c: 813: }
 11303  003754  D00E               	goto	l175
 11304  003756                     l173:
 11305                           
 11306                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11307  003756  0E00               	movlw	0
 11308  003758  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11309  00375A  0E72               	movlw	114
 11310  00375C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11311  00375E  0EFD               	movlw	low _USTATcopy
 11312  003760  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11313  003762  0E00               	movlw	high _USTATcopy
 11314  003764  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11315  003766  0E00               	movlw	0
 11316  003768  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11317  00376A  0E00               	movlw	0
 11318  00376C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11319  00376E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11320  003772                     l175:
 11321  003772  2A20               	incf	USBDeviceTasks@i,f,c
 11322  003774  D7C6               	goto	l15535
 11323  003776                     u12640:
 11324                           
 11325                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11326  003776  98A1               	bcf	4001,4,c	;volatile
 11327  003778  0012               	return		;funcret
 11328  00377A                     __end_of_USBDeviceTasks:
 11329                           	opt stack 0
 11330                           tblptru	equ	0xFF8
 11331                           tblptrh	equ	0xFF7
 11332                           tblptrl	equ	0xFF6
 11333                           tablat	equ	0xFF5
 11334                           prodh	equ	0xFF4
 11335                           prodl	equ	0xFF3
 11336                           intcon	equ	0xFF2
 11337                           intcon2	equ	0xFF1
 11338                           intcon3	equ	0xFF0
 11339                           postinc0	equ	0xFEE
 11340                           wreg	equ	0xFE8
 11341                           indf1	equ	0xFE7
 11342                           postdec1	equ	0xFE5
 11343                           plusw1	equ	0xFE3
 11344                           fsr1h	equ	0xFE2
 11345                           fsr1l	equ	0xFE1
 11346                           indf2	equ	0xFDF
 11347                           postinc2	equ	0xFDE
 11348                           postdec2	equ	0xFDD
 11349                           plusw2	equ	0xFDB
 11350                           fsr2h	equ	0xFDA
 11351                           fsr2l	equ	0xFD9
 11352                           status	equ	0xFD8
 11353                           
 11354 ;; *************** function _USBWakeFromSuspend *****************
 11355 ;; Defined at:
 11356 ;;		line 2305 in file "usb_device.c"
 11357 ;; Parameters:    Size  Location     Type
 11358 ;;		None
 11359 ;; Auto vars:     Size  Location     Type
 11360 ;;		None
 11361 ;; Return value:  Size  Location     Type
 11362 ;;                  1    wreg      void 
 11363 ;; Registers used:
 11364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11365 ;; Tracked objects:
 11366 ;;		On entry : 0/0
 11367 ;;		On exit  : 0/0
 11368 ;;		Unchanged: 0/0
 11369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11374 ;;Total ram usage:        0 bytes
 11375 ;; Hardware stack levels used:    1
 11376 ;; Hardware stack levels required when called:    4
 11377 ;; This function calls:
 11378 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11379 ;; This function is called by:
 11380 ;;		_USBDeviceTasks
 11381 ;; This function uses a non-reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text52
 11385  0086DC                     __ptext52:
 11386                           	opt stack 0
 11387  0086DC                     _USBWakeFromSuspend:
 11388                           	opt stack 25
 11389                           
 11390                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11391                           
 11392                           ;incstack = 0
 11393  0086DC  0E00               	movlw	0
 11394  0086DE  0101               	movlb	1	; () banked
 11395  0086E0  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11396                           
 11397                           ; BSR set to: 1
 11398                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11399  0086E2  0E00               	movlw	0
 11400  0086E4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11401  0086E6  0E74               	movlw	116
 11402  0086E8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11403  0086EA  0E00               	movlw	0
 11404  0086EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11405  0086EE  0E00               	movlw	0
 11406  0086F0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11407  0086F2  0E00               	movlw	0
 11408  0086F4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11409  0086F6  0E00               	movlw	0
 11410  0086F8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11411  0086FA  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11412                           
 11413                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11414  0086FE  9265               	bcf	3941,1,c	;volatile
 11415                           
 11416                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11417  008700  010F               	movlb	15	; () banked
 11418  008702  9536               	bcf	54,2,b	;volatile
 11419                           
 11420                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11421  008704  D001               	goto	l303
 11422  008706                     
 11423                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11424                           
 11425                           ; BSR set to: 15
 11426  008706  9462               	bcf	3938,2,c	;volatile
 11427  008708                     l303:
 11428  008708  B462               	btfsc	3938,2,c	;volatile
 11429  00870A  D7FD               	goto	l304
 11430                           
 11431                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11432  00870C  0E00               	movlw	0
 11433  00870E  0101               	movlb	1	; () banked
 11434  008710  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11435                           
 11436                           ; BSR set to: 1
 11437  008712  0012               	return		;funcret
 11438  008714                     __end_of_USBWakeFromSuspend:
 11439                           	opt stack 0
 11440                           tblptru	equ	0xFF8
 11441                           tblptrh	equ	0xFF7
 11442                           tblptrl	equ	0xFF6
 11443                           tablat	equ	0xFF5
 11444                           prodh	equ	0xFF4
 11445                           prodl	equ	0xFF3
 11446                           intcon	equ	0xFF2
 11447                           intcon2	equ	0xFF1
 11448                           intcon3	equ	0xFF0
 11449                           postinc0	equ	0xFEE
 11450                           wreg	equ	0xFE8
 11451                           indf1	equ	0xFE7
 11452                           postdec1	equ	0xFE5
 11453                           plusw1	equ	0xFE3
 11454                           fsr1h	equ	0xFE2
 11455                           fsr1l	equ	0xFE1
 11456                           indf2	equ	0xFDF
 11457                           postinc2	equ	0xFDE
 11458                           postdec2	equ	0xFDD
 11459                           plusw2	equ	0xFDB
 11460                           fsr2h	equ	0xFDA
 11461                           fsr2l	equ	0xFD9
 11462                           status	equ	0xFD8
 11463                           
 11464 ;; *************** function _USBSuspend *****************
 11465 ;; Defined at:
 11466 ;;		line 2247 in file "usb_device.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;		None
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;Total ram usage:        0 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    4
 11487 ;; This function calls:
 11488 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11489 ;; This function is called by:
 11490 ;;		_USBDeviceTasks
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text53
 11495  008914                     __ptext53:
 11496                           	opt stack 0
 11497  008914                     _USBSuspend:
 11498                           	opt stack 25
 11499                           
 11500                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11501                           
 11502                           ; BSR set to: 1
 11503                           ;incstack = 0
 11504  008914  010F               	movlb	15	; () banked
 11505  008916  8536               	bsf	54,2,b	;volatile
 11506                           
 11507                           ; BSR set to: 15
 11508                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11509  008918  9862               	bcf	3938,4,c	;volatile
 11510                           
 11511                           ; BSR set to: 15
 11512                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11513  00891A  8265               	bsf	3941,1,c	;volatile
 11514                           
 11515                           ; BSR set to: 15
 11516                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11517  00891C  0E01               	movlw	1
 11518  00891E  0101               	movlb	1	; () banked
 11519  008920  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11520                           
 11521                           ; BSR set to: 1
 11522                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11523  008922  0E00               	movlw	0
 11524  008924  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11525                           
 11526                           ; BSR set to: 1
 11527                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11528  008926  0E00               	movlw	0
 11529  008928  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11530  00892A  0E75               	movlw	117
 11531  00892C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11532  00892E  0E00               	movlw	0
 11533  008930  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11534  008932  0E00               	movlw	0
 11535  008934  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11536  008936  0E00               	movlw	0
 11537  008938  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11538  00893A  0E00               	movlw	0
 11539  00893C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11540  00893E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11541  008942  0012               	return		;funcret
 11542  008944                     __end_of_USBSuspend:
 11543                           	opt stack 0
 11544                           tblptru	equ	0xFF8
 11545                           tblptrh	equ	0xFF7
 11546                           tblptrl	equ	0xFF6
 11547                           tablat	equ	0xFF5
 11548                           prodh	equ	0xFF4
 11549                           prodl	equ	0xFF3
 11550                           intcon	equ	0xFF2
 11551                           intcon2	equ	0xFF1
 11552                           intcon3	equ	0xFF0
 11553                           postinc0	equ	0xFEE
 11554                           wreg	equ	0xFE8
 11555                           indf1	equ	0xFE7
 11556                           postdec1	equ	0xFE5
 11557                           plusw1	equ	0xFE3
 11558                           fsr1h	equ	0xFE2
 11559                           fsr1l	equ	0xFE1
 11560                           indf2	equ	0xFDF
 11561                           postinc2	equ	0xFDE
 11562                           postdec2	equ	0xFDD
 11563                           plusw2	equ	0xFDB
 11564                           fsr2h	equ	0xFDA
 11565                           fsr2l	equ	0xFD9
 11566                           status	equ	0xFD8
 11567                           
 11568 ;; *************** function _USBStallHandler *****************
 11569 ;; Defined at:
 11570 ;;		line 2204 in file "usb_device.c"
 11571 ;; Parameters:    Size  Location     Type
 11572 ;;		None
 11573 ;; Auto vars:     Size  Location     Type
 11574 ;;		None
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11579 ;; Tracked objects:
 11580 ;;		On entry : 0/0
 11581 ;;		On exit  : 0/0
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11588 ;;Total ram usage:        1 bytes
 11589 ;; Hardware stack levels used:    1
 11590 ;; This function calls:
 11591 ;;		Nothing
 11592 ;; This function is called by:
 11593 ;;		_USBDeviceTasks
 11594 ;; This function uses a non-reentrant model
 11595 ;;
 11596                           
 11597                           	psect	text54
 11598  0083E0                     __ptext54:
 11599                           	opt stack 0
 11600  0083E0                     _USBStallHandler:
 11601                           	opt stack 29
 11602                           
 11603                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11604                           
 11605                           ;incstack = 0
 11606  0083E0  010F               	movlb	15	; () banked
 11607  0083E2  A126               	btfss	38,0,b	;volatile
 11608  0083E4  D01D               	goto	l295
 11609                           
 11610                           ; BSR set to: 15
 11611                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11612  0083E6  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11613  0083EA  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11614  0083EE  0E80               	movlw	128
 11615  0083F0  18DE               	xorwf	postinc2,w,c
 11616  0083F2  A4D8               	btfss	status,2,c
 11617  0083F4  D014               	goto	l296
 11618                           
 11619                           ; BSR set to: 15
 11620  0083F6  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 11621  0083FA  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11622  0083FE  0E84               	movlw	132
 11623  008400  18DE               	xorwf	postinc2,w,c
 11624  008402  A4D8               	btfss	status,2,c
 11625  008404  D00C               	goto	l296
 11626                           
 11627                           ; BSR set to: 15
 11628                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11629  008406  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11630  00840A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11631  00840E  0E0C               	movlw	12
 11632  008410  6EDF               	movwf	indf2,c
 11633                           
 11634                           ; BSR set to: 15
 11635                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11636  008412  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11637  008416  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11638  00841A  0E00               	movlw	0
 11639  00841C  8EDB               	bsf	plusw2,7,c
 11640  00841E                     l296:
 11641                           
 11642                           ; BSR set to: 15
 11643                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11644                           
 11645                           ; BSR set to: 15
 11646  00841E  9126               	bcf	38,0,b	;volatile
 11647  008420                     l295:
 11648                           
 11649                           ; BSR set to: 15
 11650                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11651  008420  9A62               	bcf	3938,5,c	;volatile
 11652                           
 11653                           ; BSR set to: 15
 11654  008422  0012               	return		;funcret
 11655  008424                     __end_of_USBStallHandler:
 11656                           	opt stack 0
 11657                           tblptru	equ	0xFF8
 11658                           tblptrh	equ	0xFF7
 11659                           tblptrl	equ	0xFF6
 11660                           tablat	equ	0xFF5
 11661                           prodh	equ	0xFF4
 11662                           prodl	equ	0xFF3
 11663                           intcon	equ	0xFF2
 11664                           intcon2	equ	0xFF1
 11665                           intcon3	equ	0xFF0
 11666                           postinc0	equ	0xFEE
 11667                           wreg	equ	0xFE8
 11668                           indf1	equ	0xFE7
 11669                           postdec1	equ	0xFE5
 11670                           plusw1	equ	0xFE3
 11671                           fsr1h	equ	0xFE2
 11672                           fsr1l	equ	0xFE1
 11673                           indf2	equ	0xFDF
 11674                           postinc2	equ	0xFDE
 11675                           postdec2	equ	0xFDD
 11676                           plusw2	equ	0xFDB
 11677                           fsr2h	equ	0xFDA
 11678                           fsr2l	equ	0xFD9
 11679                           status	equ	0xFD8
 11680                           
 11681 ;; *************** function _USBIncrement1msInternalTimers *****************
 11682 ;; Defined at:
 11683 ;;		line 3027 in file "usb_device.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2, status,0
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11701 ;;Total ram usage:        0 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; This function calls:
 11704 ;;		Nothing
 11705 ;; This function is called by:
 11706 ;;		_USBDeviceTasks
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text55
 11711  008CA6                     __ptext55:
 11712                           	opt stack 0
 11713  008CA6                     _USBIncrement1msInternalTimers:
 11714                           	opt stack 29
 11715                           
 11716                           ;usb_device.c: 3035: USB1msTickCount++;
 11717                           
 11718                           ; BSR set to: 15
 11719                           ;incstack = 0
 11720  008CA6  0E01               	movlw	1
 11721  008CA8  0101               	movlb	1	; () banked
 11722  008CAA  2762               	addwf	_USB1msTickCount& (0+255),f,b
 11723  008CAC  0E00               	movlw	0
 11724  008CAE  2363               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 11725  008CB0  2364               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 11726  008CB2  2365               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 11727                           
 11728                           ; BSR set to: 1
 11729                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 11730  008CB4  5192               	movf	_USBBusIsSuspended& (0+255),w,b
 11731  008CB6  A4D8               	btfss	status,2,c
 11732  008CB8  0012               	return	
 11733                           
 11734                           ; BSR set to: 1
 11735                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 11736  008CBA  2B90               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 11737                           
 11738                           ; BSR set to: 1
 11739                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 11740  008CBC  5190               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 11741  008CBE  A4D8               	btfss	status,2,c
 11742  008CC0  0012               	return	
 11743                           
 11744                           ; BSR set to: 1
 11745                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 11746  008CC2  6990               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 11747                           
 11748                           ; BSR set to: 1
 11749  008CC4  0012               	return	
 11750  008CC6                     __end_of_USBIncrement1msInternalTimers:
 11751                           	opt stack 0
 11752                           tblptru	equ	0xFF8
 11753                           tblptrh	equ	0xFF7
 11754                           tblptrl	equ	0xFF6
 11755                           tablat	equ	0xFF5
 11756                           prodh	equ	0xFF4
 11757                           prodl	equ	0xFF3
 11758                           intcon	equ	0xFF2
 11759                           intcon2	equ	0xFF1
 11760                           intcon3	equ	0xFF0
 11761                           postinc0	equ	0xFEE
 11762                           wreg	equ	0xFE8
 11763                           indf1	equ	0xFE7
 11764                           postdec1	equ	0xFE5
 11765                           plusw1	equ	0xFE3
 11766                           fsr1h	equ	0xFE2
 11767                           fsr1l	equ	0xFE1
 11768                           indf2	equ	0xFDF
 11769                           postinc2	equ	0xFDE
 11770                           postdec2	equ	0xFDD
 11771                           plusw2	equ	0xFDB
 11772                           fsr2h	equ	0xFDA
 11773                           fsr2l	equ	0xFD9
 11774                           status	equ	0xFD8
 11775                           
 11776 ;; *************** function _USBDeviceInit *****************
 11777 ;; Defined at:
 11778 ;;		line 277 in file "usb_device.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;		None
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;  i               1    8[COMRAM] unsigned char 
 11783 ;; Return value:  Size  Location     Type
 11784 ;;                  1    wreg      void 
 11785 ;; Registers used:
 11786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11787 ;; Tracked objects:
 11788 ;;		On entry : 0/0
 11789 ;;		On exit  : 0/0
 11790 ;;		Unchanged: 0/0
 11791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11796 ;;Total ram usage:        1 bytes
 11797 ;; Hardware stack levels used:    1
 11798 ;; Hardware stack levels required when called:    1
 11799 ;; This function calls:
 11800 ;;		_memset
 11801 ;; This function is called by:
 11802 ;;		_USBDeviceTasks
 11803 ;;		_main
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text56
 11808  003E98                     __ptext56:
 11809                           	opt stack 0
 11810  003E98                     _USBDeviceInit:
 11811                           	opt stack 28
 11812                           
 11813                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11814                           
 11815                           ; BSR set to: 1
 11816                           ;incstack = 0
 11817  003E98  98A0               	bcf	4000,4,c	;volatile
 11818                           
 11819                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 11820  003E9A  0E00               	movlw	0
 11821  003E9C  6E63               	movwf	3939,c	;volatile
 11822                           
 11823                           ;usb_device.c: 291: {UIR = 0;};
 11824  003E9E  0E00               	movlw	0
 11825  003EA0  6E62               	movwf	3938,c	;volatile
 11826                           
 11827                           ;usb_device.c: 294: UEP0 = 0;
 11828  003EA2  0E00               	movlw	0
 11829  003EA4  010F               	movlb	15	; () banked
 11830  003EA6  6F26               	movwf	38,b	;volatile
 11831                           
 11832                           ; BSR set to: 15
 11833                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 11834  003EA8  0E27               	movlw	39
 11835  003EAA  6E01               	movwf	memset@p1,c
 11836  003EAC  0E0F               	movlw	15
 11837  003EAE  6E02               	movwf	memset@p1+1,c
 11838  003EB0  0E00               	movlw	0
 11839  003EB2  6E04               	movwf	memset@c+1,c
 11840  003EB4  0E00               	movlw	0
 11841  003EB6  6E03               	movwf	memset@c,c
 11842  003EB8  0E00               	movlw	0
 11843  003EBA  6E06               	movwf	memset@n+1,c
 11844  003EBC  0E02               	movlw	2
 11845  003EBE  6E05               	movwf	memset@n,c
 11846  003EC0  ECFC  F044         	call	_memset	;wreg free
 11847                           
 11848                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11849  003EC4  0E16               	movlw	22
 11850  003EC6  010F               	movlb	15	; () banked
 11851  003EC8  6F39               	movwf	57,b	;volatile
 11852                           
 11853                           ; BSR set to: 15
 11854  003ECA  0E9F               	movlw	159
 11855  003ECC  6F37               	movwf	55,b	;volatile
 11856                           
 11857                           ; BSR set to: 15
 11858  003ECE  0E7B               	movlw	123
 11859  003ED0  6F36               	movwf	54,b	;volatile
 11860                           
 11861                           ; BSR set to: 15
 11862                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 11863  003ED2  0E00               	movlw	0
 11864  003ED4  6E09               	movwf	USBDeviceInit@i,c
 11865  003ED6                     l14799:
 11866                           
 11867                           ; BSR set to: 15
 11868  003ED6  0E0B               	movlw	11
 11869  003ED8  6409               	cpfsgt	USBDeviceInit@i,c
 11870  003EDA  D001               	goto	l139
 11871  003EDC  D00E               	goto	u11680
 11872  003EDE                     l139:
 11873                           
 11874                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 11875                           
 11876                           ; BSR set to: 15
 11877  003EDE  5009               	movf	USBDeviceInit@i,w,c
 11878  003EE0  0D04               	mullw	4
 11879  003EE2  0E00               	movlw	0
 11880  003EE4  24F3               	addwf	prodl,w,c
 11881  003EE6  6ED9               	movwf	fsr2l,c
 11882  003EE8  0E0D               	movlw	13
 11883  003EEA  20F4               	addwfc	prodh,w,c
 11884  003EEC  6EDA               	movwf	fsr2h,c
 11885  003EEE  6ADE               	clrf	postinc2,c
 11886  003EF0  6ADE               	clrf	postinc2,c
 11887  003EF2  6ADE               	clrf	postinc2,c
 11888  003EF4  6ADD               	clrf	postdec2,c
 11889  003EF6  2A09               	incf	USBDeviceInit@i,f,c
 11890  003EF8  D7EE               	goto	l14799
 11891  003EFA                     u11680:
 11892                           
 11893                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 11894  003EFA  8C65               	bsf	3941,6,c	;volatile
 11895                           
 11896                           ;usb_device.c: 316: UADDR = 0x00;
 11897  003EFC  0E00               	movlw	0
 11898  003EFE  010F               	movlb	15	; () banked
 11899  003F00  6F38               	movwf	56,b	;volatile
 11900                           
 11901                           ; BSR set to: 15
 11902                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11903  003F02  9865               	bcf	3941,4,c	;volatile
 11904                           
 11905                           ; BSR set to: 15
 11906                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11907  003F04  9C65               	bcf	3941,6,c	;volatile
 11908  003F06                     
 11909                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 11910                           
 11911                           ; BSR set to: 15
 11912  003F06  9662               	bcf	3938,3,c	;volatile
 11913                           
 11914                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11915  003F08  0E00               	movlw	0
 11916  003F0A  0100               	movlb	0	; () banked
 11917  003F0C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11921  003F0E  0E00               	movlw	0
 11922  003F10  0101               	movlb	1	; () banked
 11923  003F12  6F34               	movwf	(_outPipes+3)& (0+255),b
 11924                           
 11925                           ; BSR set to: 1
 11926                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11927  003F14  0E00               	movlw	0
 11928  003F16  6F36               	movwf	(_outPipes+5)& (0+255),b
 11929  003F18  0E00               	movlw	0
 11930  003F1A  6F35               	movwf	(_outPipes+4)& (0+255),b
 11931                           
 11932                           ; BSR set to: 1
 11933                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11934  003F1C  B662               	btfsc	3938,3,c	;volatile
 11935  003F1E  D7F3               	goto	l141
 11936                           
 11937                           ; BSR set to: 1
 11938                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11939                           
 11940                           ; BSR set to: 1
 11941  003F20  0E01               	movlw	1
 11942  003F22  0100               	movlb	0	; () banked
 11943  003F24  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11944                           
 11945                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11946  003F26  0E01               	movlw	1
 11947  003F28  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11948                           
 11949                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11950  003F2A  0E00               	movlw	0
 11951  003F2C  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11952                           
 11953                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11954  003F2E  0E00               	movlw	0
 11955  003F30  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11956                           
 11957                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11958  003F32  0E00               	movlw	0
 11959  003F34  0101               	movlb	1	; () banked
 11960  003F36  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11961                           
 11962                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11963  003F38  0E00               	movlw	0
 11964  003F3A  6E09               	movwf	USBDeviceInit@i,c
 11965  003F3C                     l14827:
 11966                           
 11967                           ; BSR set to: 1
 11968  003F3C  0E02               	movlw	2
 11969  003F3E  6409               	cpfsgt	USBDeviceInit@i,c
 11970  003F40  D001               	goto	l143
 11971  003F42  D02E               	goto	u11710
 11972  003F44                     l143:
 11973                           
 11974                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11975                           
 11976                           ; BSR set to: 1
 11977  003F44  5009               	movf	USBDeviceInit@i,w,c
 11978  003F46  0D02               	mullw	2
 11979  003F48  0ED1               	movlw	low _pBDTEntryIn
 11980  003F4A  24F3               	addwf	prodl,w,c
 11981  003F4C  6ED9               	movwf	fsr2l,c
 11982  003F4E  0E00               	movlw	high _pBDTEntryIn
 11983  003F50  20F4               	addwfc	prodh,w,c
 11984  003F52  6EDA               	movwf	fsr2h,c
 11985  003F54  0E00               	movlw	0
 11986  003F56  6EDE               	movwf	postinc2,c
 11987  003F58  0E00               	movlw	0
 11988  003F5A  6EDD               	movwf	postdec2,c
 11989                           
 11990                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11991  003F5C  5009               	movf	USBDeviceInit@i,w,c
 11992  003F5E  0D02               	mullw	2
 11993  003F60  0E40               	movlw	low _pBDTEntryOut
 11994  003F62  24F3               	addwf	prodl,w,c
 11995  003F64  6ED9               	movwf	fsr2l,c
 11996  003F66  0E01               	movlw	high _pBDTEntryOut
 11997  003F68  20F4               	addwfc	prodh,w,c
 11998  003F6A  6EDA               	movwf	fsr2h,c
 11999  003F6C  0E00               	movlw	0
 12000  003F6E  6EDE               	movwf	postinc2,c
 12001  003F70  0E00               	movlw	0
 12002  003F72  6EDD               	movwf	postdec2,c
 12003                           
 12004                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12005  003F74  5009               	movf	USBDeviceInit@i,w,c
 12006  003F76  0D01               	mullw	1
 12007  003F78  0E6F               	movlw	low _ep_data_in
 12008  003F7A  24F3               	addwf	prodl,w,c
 12009  003F7C  6ED9               	movwf	fsr2l,c
 12010  003F7E  0E01               	movlw	high _ep_data_in
 12011  003F80  20F4               	addwfc	prodh,w,c
 12012  003F82  6EDA               	movwf	fsr2h,c
 12013  003F84  0E00               	movlw	0
 12014  003F86  6EDF               	movwf	indf2,c
 12015                           
 12016                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12017  003F88  5009               	movf	USBDeviceInit@i,w,c
 12018  003F8A  0D01               	mullw	1
 12019  003F8C  0E6C               	movlw	low _ep_data_out
 12020  003F8E  24F3               	addwf	prodl,w,c
 12021  003F90  6ED9               	movwf	fsr2l,c
 12022  003F92  0E01               	movlw	high _ep_data_out
 12023  003F94  20F4               	addwfc	prodh,w,c
 12024  003F96  6EDA               	movwf	fsr2h,c
 12025  003F98  0E00               	movlw	0
 12026  003F9A  6EDF               	movwf	indf2,c
 12027  003F9C  2A09               	incf	USBDeviceInit@i,f,c
 12028  003F9E  D7CE               	goto	l14827
 12029  003FA0                     u11710:
 12030                           
 12031                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12032  003FA0  0E08               	movlw	8
 12033  003FA2  0100               	movlb	0	; () banked
 12034  003FA4  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12035  003FA6  0E0D               	movlw	13
 12036  003FA8  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12040  003FAA  0E16               	movlw	22
 12041  003FAC  010F               	movlb	15	; () banked
 12042  003FAE  6F26               	movwf	38,b	;volatile
 12043                           
 12044                           ; BSR set to: 15
 12045                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12046  003FB0  0E0D               	movlw	13
 12047  003FB2  010D               	movlb	13	; () banked
 12048  003FB4  6F03               	movwf	3,b	;volatile
 12049  003FB6  0E30               	movlw	48
 12050  003FB8  6F02               	movwf	2,b	;volatile
 12051                           
 12052                           ; BSR set to: 13
 12053                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12054  003FBA  0E08               	movlw	8
 12055  003FBC  6F01               	movwf	1,b	;volatile
 12056                           
 12057                           ; BSR set to: 13
 12058                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12059  003FBE  0E04               	movlw	4
 12060  003FC0  6F00               	movwf	0,b	;volatile
 12061                           
 12062                           ; BSR set to: 13
 12063                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12064  003FC2  8F00               	bsf	0,7,b	;volatile
 12065                           
 12066                           ; BSR set to: 13
 12067                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12068  003FC4  0E00               	movlw	0
 12069  003FC6  0100               	movlb	0	; () banked
 12070  003FC8  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;usb_device.c: 366: USB1msTickCount = 0;
 12074  003FCA  0E00               	movlw	0
 12075  003FCC  0101               	movlb	1	; () banked
 12076  003FCE  6F62               	movwf	_USB1msTickCount& (0+255),b
 12077  003FD0  0E00               	movlw	0
 12078  003FD2  6F63               	movwf	(_USB1msTickCount+1)& (0+255),b
 12079  003FD4  0E00               	movlw	0
 12080  003FD6  6F64               	movwf	(_USB1msTickCount+2)& (0+255),b
 12081  003FD8  0E00               	movlw	0
 12082  003FDA  6F65               	movwf	(_USB1msTickCount+3)& (0+255),b
 12083                           
 12084                           ; BSR set to: 1
 12085                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12086  003FDC  0E00               	movlw	0
 12087  003FDE  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12088                           
 12089                           ; BSR set to: 1
 12090                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12091  003FE0  0E00               	movlw	0
 12092  003FE2  0100               	movlb	0	; () banked
 12093  003FE4  6FF8               	movwf	_USBDeviceState& (0+255),b
 12094                           
 12095                           ; BSR set to: 0
 12096  003FE6  0012               	return		;funcret
 12097  003FE8                     __end_of_USBDeviceInit:
 12098                           	opt stack 0
 12099                           tblptru	equ	0xFF8
 12100                           tblptrh	equ	0xFF7
 12101                           tblptrl	equ	0xFF6
 12102                           tablat	equ	0xFF5
 12103                           prodh	equ	0xFF4
 12104                           prodl	equ	0xFF3
 12105                           intcon	equ	0xFF2
 12106                           intcon2	equ	0xFF1
 12107                           intcon3	equ	0xFF0
 12108                           postinc0	equ	0xFEE
 12109                           wreg	equ	0xFE8
 12110                           indf1	equ	0xFE7
 12111                           postdec1	equ	0xFE5
 12112                           plusw1	equ	0xFE3
 12113                           fsr1h	equ	0xFE2
 12114                           fsr1l	equ	0xFE1
 12115                           indf2	equ	0xFDF
 12116                           postinc2	equ	0xFDE
 12117                           postdec2	equ	0xFDD
 12118                           plusw2	equ	0xFDB
 12119                           fsr2h	equ	0xFDA
 12120                           fsr2l	equ	0xFD9
 12121                           status	equ	0xFD8
 12122                           
 12123 ;; *************** function _USBCtrlEPService *****************
 12124 ;; Defined at:
 12125 ;;		line 2374 in file "usb_device.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;		None
 12128 ;; Auto vars:     Size  Location     Type
 12129 ;;		None
 12130 ;; Return value:  Size  Location     Type
 12131 ;;                  1    wreg      void 
 12132 ;; Registers used:
 12133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12134 ;; Tracked objects:
 12135 ;;		On entry : 0/0
 12136 ;;		On exit  : 0/0
 12137 ;;		Unchanged: 0/0
 12138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12143 ;;Total ram usage:        2 bytes
 12144 ;; Hardware stack levels used:    1
 12145 ;; Hardware stack levels required when called:    7
 12146 ;; This function calls:
 12147 ;;		_USBCtrlTrfInHandler
 12148 ;;		_USBCtrlTrfOutHandler
 12149 ;;		_USBCtrlTrfSetupHandler
 12150 ;;		_memcpy
 12151 ;; This function is called by:
 12152 ;;		_USBDeviceTasks
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           	psect	text57
 12157  006526                     __ptext57:
 12158                           	opt stack 0
 12159  006526                     _USBCtrlEPService:
 12160                           	opt stack 22
 12161                           
 12162                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;incstack = 0
 12166  006526  0E2D               	movlw	45
 12167  006528  0100               	movlb	0	; () banked
 12168  00652A  6FF3               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12172  00652C  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12173  006530  0EFD               	movlw	253
 12174  006532  161E               	andwf	??_USBCtrlEPService,f,c
 12175  006534  A4D8               	btfss	status,2,c
 12176  006536  D044               	goto	l309
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12180  006538  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12181  00653C  90D8               	bcf	status,0,c
 12182  00653E  321E               	rrcf	??_USBCtrlEPService,f,c
 12183  006540  0E3F               	movlw	63
 12184  006542  161E               	andwf	??_USBCtrlEPService,f,c
 12185  006544  501E               	movf	??_USBCtrlEPService,w,c
 12186  006546  0D04               	mullw	4
 12187  006548  0E00               	movlw	0
 12188  00654A  24F3               	addwf	prodl,w,c
 12189  00654C  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12190  00654E  0E0D               	movlw	13
 12191  006550  20F4               	addwfc	prodh,w,c
 12192  006552  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12196  006554  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12197  006558  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12201  00655C  0E04               	movlw	4
 12202  00655E  19E1               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12203  006560  6FE1               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12204  006562  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12205  006564  6FE2               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12209  006566  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12210  00656A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12211  00656E  30DF               	rrcf	223,w,c
 12212  006570  32E8               	rrcf	wreg,f,c
 12213  006572  0B0F               	andlw	15
 12214  006574  0A0D               	xorlw	13
 12215  006576  A4D8               	btfss	status,2,c
 12216  006578  D020               	goto	l310
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12220  00657A  0E30               	movlw	48
 12221  00657C  6E01               	movwf	memcpy@d1,c
 12222  00657E  0E0D               	movlw	13
 12223  006580  6E02               	movwf	memcpy@d1+1,c
 12224  006582  EE20 F002          	lfsr	2,2
 12225  006586  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12226  006588  26D9               	addwf	fsr2l,f,c
 12227  00658A  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12228  00658C  22DA               	addwfc	fsr2h,f,c
 12229  00658E  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12230  006592  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12231  006596  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12232  00659A  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12233  00659E  5003               	movf	memcpy@s1,w,c
 12234  0065A0  1004               	iorwf	memcpy@s1+1,w,c
 12235  0065A2  A4D8               	btfss	status,2,c
 12236  0065A4  0E20               	movlw	32
 12237  0065A6  6E05               	movwf	memcpy@s1+2,c
 12238  0065A8  0E00               	movlw	0
 12239  0065AA  6E07               	movwf	memcpy@n+1,c
 12240  0065AC  0E08               	movlw	8
 12241  0065AE  6E06               	movwf	memcpy@n,c
 12242  0065B0  ECDD  F03C         	call	_memcpy	;wreg free
 12243                           
 12244                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12245  0065B4  ECB4  F036         	call	_USBCtrlTrfSetupHandler	;wreg free
 12246                           
 12247                           ;usb_device.c: 2411: }
 12248  0065B8  0012               	return	
 12249  0065BA                     l310:
 12250                           
 12251                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12252  0065BA  EC77  F03C         	call	_USBCtrlTrfOutHandler	;wreg free
 12253                           
 12254                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12255  0065BE  0012               	return	
 12256  0065C0                     l309:
 12257                           
 12258                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12259  0065C0  0100               	movlb	0	; () banked
 12260  0065C2  51FD               	movf	_USTATcopy& (0+255),w,b
 12261  0065C4  0BFD               	andlw	253
 12262  0065C6  0A04               	xorlw	4
 12263  0065C8  A4D8               	btfss	status,2,c
 12264  0065CA  0012               	return	
 12265                           
 12266                           ; BSR set to: 0
 12267                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12268  0065CC  EC46  F02F         	call	_USBCtrlTrfInHandler	;wreg free
 12269  0065D0  0012               	return	
 12270  0065D2                     __end_of_USBCtrlEPService:
 12271                           	opt stack 0
 12272                           tblptru	equ	0xFF8
 12273                           tblptrh	equ	0xFF7
 12274                           tblptrl	equ	0xFF6
 12275                           tablat	equ	0xFF5
 12276                           prodh	equ	0xFF4
 12277                           prodl	equ	0xFF3
 12278                           intcon	equ	0xFF2
 12279                           intcon2	equ	0xFF1
 12280                           intcon3	equ	0xFF0
 12281                           postinc0	equ	0xFEE
 12282                           wreg	equ	0xFE8
 12283                           indf1	equ	0xFE7
 12284                           postdec1	equ	0xFE5
 12285                           plusw1	equ	0xFE3
 12286                           fsr1h	equ	0xFE2
 12287                           fsr1l	equ	0xFE1
 12288                           indf2	equ	0xFDF
 12289                           postinc2	equ	0xFDE
 12290                           postdec2	equ	0xFDD
 12291                           plusw2	equ	0xFDB
 12292                           fsr2h	equ	0xFDA
 12293                           fsr2l	equ	0xFD9
 12294                           status	equ	0xFD8
 12295                           
 12296 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12297 ;; Defined at:
 12298 ;;		line 2467 in file "usb_device.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;		None
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;		None
 12303 ;; Return value:  Size  Location     Type
 12304 ;;                  1    wreg      void 
 12305 ;; Registers used:
 12306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12307 ;; Tracked objects:
 12308 ;;		On entry : 0/0
 12309 ;;		On exit  : 0/0
 12310 ;;		Unchanged: 0/0
 12311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12316 ;;Total ram usage:        0 bytes
 12317 ;; Hardware stack levels used:    1
 12318 ;; Hardware stack levels required when called:    6
 12319 ;; This function calls:
 12320 ;;		_USBCheckStdRequest
 12321 ;;		_USBCtrlEPServiceComplete
 12322 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12323 ;; This function is called by:
 12324 ;;		_USBCtrlEPService
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           	psect	text58
 12329  006D68                     __ptext58:
 12330                           	opt stack 0
 12331  006D68                     _USBCtrlTrfSetupHandler:
 12332                           	opt stack 22
 12333                           
 12334                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12335                           
 12336                           ;incstack = 0
 12337  006D68  0E00               	movlw	0
 12338  006D6A  0100               	movlb	0	; () banked
 12339  006D6C  6FF7               	movwf	_shortPacketStatus& (0+255),b
 12340                           
 12341                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12342  006D6E  0E00               	movlw	0
 12343  006D70  6FF2               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12344                           
 12345                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12346  006D72  0E00               	movlw	0
 12347  006D74  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12348                           
 12349                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12350  006D76  0E00               	movlw	0
 12351  006D78  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12352                           
 12353                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12354  006D7A  0E00               	movlw	0
 12355  006D7C  0101               	movlb	1	; () banked
 12356  006D7E  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12357                           
 12358                           ;usb_device.c: 2477: controlTransferState = 0;
 12359  006D80  0E00               	movlw	0
 12360  006D82  0100               	movlb	0	; () banked
 12361  006D84  6FF6               	movwf	_controlTransferState& (0+255),b
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12365  006D86  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12366  006D8A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12367  006D8E  0E7F               	movlw	127
 12368  006D90  16DF               	andwf	indf2,f,c
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12372  006D92  0E04               	movlw	4
 12373  006D94  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12374  006D96  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12375  006D98  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12376  006D9A  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12380  006D9C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12381  006DA0  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12382  006DA4  0E7F               	movlw	127
 12383  006DA6  16DF               	andwf	indf2,f,c
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12387  006DA8  0E04               	movlw	4
 12388  006DAA  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12389  006DAC  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12390  006DAE  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12391  006DB0  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12392                           
 12393                           ; BSR set to: 0
 12394                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12395  006DB2  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12396  006DB6  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12397  006DBA  0E7F               	movlw	127
 12398  006DBC  16DF               	andwf	indf2,f,c
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12402  006DBE  0E00               	movlw	0
 12403  006DC0  6FCE               	movwf	(_inPipes+3)& (0+255),b
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12407  006DC2  0E00               	movlw	0
 12408  006DC4  6FD0               	movwf	(_inPipes+5)& (0+255),b
 12409  006DC6  0E00               	movlw	0
 12410  006DC8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12414  006DCA  0E00               	movlw	0
 12415  006DCC  0101               	movlb	1	; () banked
 12416  006DCE  6F34               	movwf	(_outPipes+3)& (0+255),b
 12417                           
 12418                           ; BSR set to: 1
 12419                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12420  006DD0  0E00               	movlw	0
 12421  006DD2  6F36               	movwf	(_outPipes+5)& (0+255),b
 12422  006DD4  0E00               	movlw	0
 12423  006DD6  6F35               	movwf	(_outPipes+4)& (0+255),b
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;usb_device.c: 2502: USBCheckStdRequest();
 12427  006DD8  ECDA  F028         	call	_USBCheckStdRequest	;wreg free
 12428                           
 12429                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12430  006DDC  0E00               	movlw	0
 12431  006DDE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12432  006DE0  0E03               	movlw	3
 12433  006DE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12434  006DE4  0E00               	movlw	0
 12435  006DE6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12436  006DE8  0E00               	movlw	0
 12437  006DEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12438  006DEC  0E00               	movlw	0
 12439  006DEE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12440  006DF0  0E00               	movlw	0
 12441  006DF2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12442  006DF4  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12443                           
 12444                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12445  006DF8  EC73  F026         	call	_USBCtrlEPServiceComplete	;wreg free
 12446  006DFC  0012               	return		;funcret
 12447  006DFE                     __end_of_USBCtrlTrfSetupHandler:
 12448                           	opt stack 0
 12449                           tblptru	equ	0xFF8
 12450                           tblptrh	equ	0xFF7
 12451                           tblptrl	equ	0xFF6
 12452                           tablat	equ	0xFF5
 12453                           prodh	equ	0xFF4
 12454                           prodl	equ	0xFF3
 12455                           intcon	equ	0xFF2
 12456                           intcon2	equ	0xFF1
 12457                           intcon3	equ	0xFF0
 12458                           postinc0	equ	0xFEE
 12459                           wreg	equ	0xFE8
 12460                           indf1	equ	0xFE7
 12461                           postdec1	equ	0xFE5
 12462                           plusw1	equ	0xFE3
 12463                           fsr1h	equ	0xFE2
 12464                           fsr1l	equ	0xFE1
 12465                           indf2	equ	0xFDF
 12466                           postinc2	equ	0xFDE
 12467                           postdec2	equ	0xFDD
 12468                           plusw2	equ	0xFDB
 12469                           fsr2h	equ	0xFDA
 12470                           fsr2l	equ	0xFD9
 12471                           status	equ	0xFD8
 12472                           
 12473 ;; *************** function _USBCtrlEPServiceComplete *****************
 12474 ;; Defined at:
 12475 ;;		line 1618 in file "usb_device.c"
 12476 ;; Parameters:    Size  Location     Type
 12477 ;;		None
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;		None
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      void 
 12482 ;; Registers used:
 12483 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12493 ;;Total ram usage:        0 bytes
 12494 ;; Hardware stack levels used:    1
 12495 ;; Hardware stack levels required when called:    2
 12496 ;; This function calls:
 12497 ;;		_USBCtrlEPAllowDataStage
 12498 ;;		_USBCtrlEPAllowStatusStage
 12499 ;; This function is called by:
 12500 ;;		_USBCtrlTrfSetupHandler
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           	psect	text59
 12505  004CE6                     __ptext59:
 12506                           	opt stack 0
 12507  004CE6                     _USBCtrlEPServiceComplete:
 12508                           	opt stack 25
 12509                           
 12510                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12511                           
 12512                           ;incstack = 0
 12513  004CE6  9865               	bcf	3941,4,c	;volatile
 12514                           
 12515                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12516  004CE8  0100               	movlb	0	; () banked
 12517  004CEA  BFCE               	btfsc	(_inPipes+3)& (0+255),7,b
 12518  004CEC  D03C               	goto	l219
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12522  004CEE  0101               	movlb	1	; () banked
 12523  004CF0  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12524  004CF2  D00D               	goto	l220
 12525                           
 12526                           ; BSR set to: 1
 12527                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12528  004CF4  0E02               	movlw	2
 12529  004CF6  0100               	movlb	0	; () banked
 12530  004CF8  6FF6               	movwf	_controlTransferState& (0+255),b
 12531                           
 12532                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12533  004CFA  51EE               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12534  004CFC  B4D8               	btfsc	status,2,c
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12538  004CFE  EC2D  F035         	call	_USBCtrlEPAllowDataStage	;wreg free
 12539                           
 12540                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12541  004D02  0E00               	movlw	0
 12542  004D04  0100               	movlb	0	; () banked
 12543  004D06  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12544                           
 12545                           ; BSR set to: 0
 12546                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12547  004D08  0E00               	movlw	0
 12548  004D0A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12549                           
 12550                           ;usb_device.c: 1654: }
 12551  004D0C  0012               	return	
 12552  004D0E                     l220:
 12553                           
 12554                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12555                           
 12556                           ; BSR set to: 0
 12557  004D0E  0100               	movlb	0	; () banked
 12558  004D10  EE20 F001          	lfsr	2,1
 12559  004D14  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12560  004D16  26D9               	addwf	fsr2l,f,c
 12561  004D18  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12562  004D1A  22DA               	addwfc	fsr2h,f,c
 12563  004D1C  0E08               	movlw	8
 12564  004D1E  6EDF               	movwf	indf2,c
 12565                           
 12566                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12567  004D20  EE20 F002          	lfsr	2,2
 12568  004D24  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12569  004D26  26D9               	addwf	fsr2l,f,c
 12570  004D28  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12571  004D2A  22DA               	addwfc	fsr2h,f,c
 12572  004D2C  0E30               	movlw	48
 12573  004D2E  6EDE               	movwf	postinc2,c
 12574  004D30  0E0D               	movlw	13
 12575  004D32  6EDD               	movwf	postdec2,c
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12579  004D34  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12580  004D38  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12581  004D3C  0E0C               	movlw	12
 12582  004D3E  6EDF               	movwf	indf2,c
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12586  004D40  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12587  004D44  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12588  004D48  0E00               	movlw	0
 12589  004D4A  8EDB               	bsf	plusw2,7,c
 12590                           
 12591                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12592  004D4C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12593  004D50  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12594  004D54  0E04               	movlw	4
 12595  004D56  6EDF               	movwf	indf2,c
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12599  004D58  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12600  004D5C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12601  004D60  0E00               	movlw	0
 12602  004D62  8EDB               	bsf	plusw2,7,c
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12606  004D64  0012               	return	
 12607  004D66                     l219:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12611  004D66  010D               	movlb	13	; () banked
 12612  004D68  AF30               	btfss	48,7,b	;volatile
 12613  004D6A  D012               	goto	l224
 12614                           
 12615                           ; BSR set to: 13
 12616                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12617  004D6C  0E01               	movlw	1
 12618  004D6E  0100               	movlb	0	; () banked
 12619  004D70  6FF6               	movwf	_controlTransferState& (0+255),b
 12620                           
 12621                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12622  004D72  51EF               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12623  004D74  B4D8               	btfsc	status,2,c
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12627  004D76  EC2D  F035         	call	_USBCtrlEPAllowDataStage	;wreg free
 12628                           
 12629                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12630  004D7A  0E00               	movlw	0
 12631  004D7C  0100               	movlb	0	; () banked
 12632  004D7E  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12636  004D80  0E00               	movlw	0
 12637  004D82  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12641  004D84  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12642  004D86  A4D8               	btfss	status,2,c
 12643  004D88  0012               	return	
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12647  004D8A  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12648                           
 12649                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12650  004D8E  0012               	return	
 12651  004D90                     l224:
 12652                           
 12653                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12654  004D90  0E02               	movlw	2
 12655  004D92  0100               	movlb	0	; () banked
 12656  004D94  6FF6               	movwf	_controlTransferState& (0+255),b
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 12660  004D96  EE20 F001          	lfsr	2,1
 12661  004D9A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12662  004D9C  26D9               	addwf	fsr2l,f,c
 12663  004D9E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12664  004DA0  22DA               	addwfc	fsr2h,f,c
 12665  004DA2  0E08               	movlw	8
 12666  004DA4  6EDF               	movwf	indf2,c
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12670  004DA6  EE20 F002          	lfsr	2,2
 12671  004DAA  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12672  004DAC  26D9               	addwf	fsr2l,f,c
 12673  004DAE  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12674  004DB0  22DA               	addwfc	fsr2h,f,c
 12675  004DB2  0E30               	movlw	48
 12676  004DB4  6EDE               	movwf	postinc2,c
 12677  004DB6  0E0D               	movlw	13
 12678  004DB8  6EDD               	movwf	postdec2,c
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12682  004DBA  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12683  004DBE  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12684  004DC2  0E04               	movlw	4
 12685  004DC4  6EDF               	movwf	indf2,c
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12689  004DC6  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12690  004DCA  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12691  004DCE  0E00               	movlw	0
 12692  004DD0  8EDB               	bsf	plusw2,7,c
 12693                           
 12694                           ; BSR set to: 0
 12695                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 12696  004DD2  0E00               	movlw	0
 12697  004DD4  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 12701  004DD6  0E00               	movlw	0
 12702  004DD8  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12703                           
 12704                           ; BSR set to: 0
 12705                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 12706  004DDA  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12707  004DDC  A4D8               	btfss	status,2,c
 12708  004DDE  0012               	return	
 12709                           
 12710                           ; BSR set to: 0
 12711                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 12712  004DE0  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12713  004DE4  0012               	return	
 12714  004DE6                     __end_of_USBCtrlEPServiceComplete:
 12715                           	opt stack 0
 12716                           tblptru	equ	0xFF8
 12717                           tblptrh	equ	0xFF7
 12718                           tblptrl	equ	0xFF6
 12719                           tablat	equ	0xFF5
 12720                           prodh	equ	0xFF4
 12721                           prodl	equ	0xFF3
 12722                           intcon	equ	0xFF2
 12723                           intcon2	equ	0xFF1
 12724                           intcon3	equ	0xFF0
 12725                           postinc0	equ	0xFEE
 12726                           wreg	equ	0xFE8
 12727                           indf1	equ	0xFE7
 12728                           postdec1	equ	0xFE5
 12729                           plusw1	equ	0xFE3
 12730                           fsr1h	equ	0xFE2
 12731                           fsr1l	equ	0xFE1
 12732                           indf2	equ	0xFDF
 12733                           postinc2	equ	0xFDE
 12734                           postdec2	equ	0xFDD
 12735                           plusw2	equ	0xFDB
 12736                           fsr2h	equ	0xFDA
 12737                           fsr2l	equ	0xFD9
 12738                           status	equ	0xFD8
 12739                           
 12740 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12741 ;; Defined at:
 12742 ;;		line 1490 in file "usb_device.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;		None
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;		None
 12747 ;; Return value:  Size  Location     Type
 12748 ;;                  1    wreg      void 
 12749 ;; Registers used:
 12750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12751 ;; Tracked objects:
 12752 ;;		On entry : 0/0
 12753 ;;		On exit  : 0/0
 12754 ;;		Unchanged: 0/0
 12755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12760 ;;Total ram usage:        0 bytes
 12761 ;; Hardware stack levels used:    1
 12762 ;; Hardware stack levels required when called:    1
 12763 ;; This function calls:
 12764 ;;		_USBCtrlTrfTxService
 12765 ;; This function is called by:
 12766 ;;		_USBCtrlEPServiceComplete
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text60
 12771  006A5A                     __ptext60:
 12772                           	opt stack 0
 12773  006A5A                     _USBCtrlEPAllowDataStage:
 12774                           	opt stack 25
 12775                           
 12776                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 12777                           
 12778                           ;incstack = 0
 12779  006A5A  0E00               	movlw	0
 12780  006A5C  0100               	movlb	0	; () banked
 12781  006A5E  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12782                           
 12783                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 12784  006A60  0E00               	movlw	0
 12785  006A62  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;usb_device.c: 1495: if(controlTransferState == 2)
 12789  006A64  0E02               	movlw	2
 12790  006A66  19F6               	xorwf	_controlTransferState& (0+255),w,b
 12791  006A68  A4D8               	btfss	status,2,c
 12792  006A6A  D01F               	goto	l208
 12793                           
 12794                           ; BSR set to: 0
 12795                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 12796  006A6C  EE20 F001          	lfsr	2,1
 12797  006A70  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12798  006A72  26D9               	addwf	fsr2l,f,c
 12799  006A74  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12800  006A76  22DA               	addwfc	fsr2h,f,c
 12801  006A78  0E08               	movlw	8
 12802  006A7A  6EDF               	movwf	indf2,c
 12803                           
 12804                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12805  006A7C  EE20 F002          	lfsr	2,2
 12806  006A80  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12807  006A82  26D9               	addwf	fsr2l,f,c
 12808  006A84  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12809  006A86  22DA               	addwfc	fsr2h,f,c
 12810  006A88  0E38               	movlw	56
 12811  006A8A  6EDE               	movwf	postinc2,c
 12812  006A8C  0E0D               	movlw	13
 12813  006A8E  6EDD               	movwf	postdec2,c
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12817  006A90  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12818  006A94  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12819  006A98  0E48               	movlw	72
 12820  006A9A  6EDF               	movwf	indf2,c
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12824  006A9C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12825  006AA0  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12826  006AA4  0E00               	movlw	0
 12827  006AA6  8EDB               	bsf	plusw2,7,c
 12828                           
 12829                           ;usb_device.c: 1502: }
 12830  006AA8  0012               	return	
 12831  006AAA                     l208:
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 12835                           
 12836                           ; BSR set to: 0
 12837  006AAA  51CF               	movf	(_inPipes+4)& (0+255),w,b
 12838  006AAC  010D               	movlb	13	; () banked
 12839  006AAE  5D36               	subwf	54,w,b	;volatile
 12840  006AB0  0100               	movlb	0	; () banked
 12841  006AB2  51D0               	movf	(_inPipes+5)& (0+255),w,b
 12842  006AB4  010D               	movlb	13	; () banked
 12843  006AB6  5937               	subwfb	55,w,b	;volatile
 12844  006AB8  B0D8               	btfsc	status,0,c
 12845  006ABA  D004               	goto	l210
 12846                           
 12847                           ; BSR set to: 13
 12848                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 12849  006ABC  CD36 F0CF          	movff	3382,_inPipes+4	;volatile
 12850  006AC0  CD37 F0D0          	movff	3383,_inPipes+5	;volatile
 12851  006AC4                     l210:
 12852                           
 12853                           ; BSR set to: 13
 12854                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 12855                           
 12856                           ; BSR set to: 13
 12857  006AC4  EC3E  F02D         	call	_USBCtrlTrfTxService	;wreg free
 12858                           
 12859                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12860  006AC8  0100               	movlb	0	; () banked
 12861  006ACA  EE20 F002          	lfsr	2,2
 12862  006ACE  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 12863  006AD0  26D9               	addwf	fsr2l,f,c
 12864  006AD2  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12865  006AD4  22DA               	addwfc	fsr2h,f,c
 12866  006AD6  0E38               	movlw	56
 12867  006AD8  6EDE               	movwf	postinc2,c
 12868  006ADA  0E0D               	movlw	13
 12869  006ADC  6EDD               	movwf	postdec2,c
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12873  006ADE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12874  006AE2  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12875  006AE6  0E48               	movlw	72
 12876  006AE8  6EDF               	movwf	indf2,c
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12880  006AEA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12881  006AEE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12882  006AF2  0E00               	movlw	0
 12883  006AF4  8EDB               	bsf	plusw2,7,c
 12884  006AF6  0012               	return	
 12885  006AF8                     __end_of_USBCtrlEPAllowDataStage:
 12886                           	opt stack 0
 12887                           tblptru	equ	0xFF8
 12888                           tblptrh	equ	0xFF7
 12889                           tblptrl	equ	0xFF6
 12890                           tablat	equ	0xFF5
 12891                           prodh	equ	0xFF4
 12892                           prodl	equ	0xFF3
 12893                           intcon	equ	0xFF2
 12894                           intcon2	equ	0xFF1
 12895                           intcon3	equ	0xFF0
 12896                           postinc0	equ	0xFEE
 12897                           wreg	equ	0xFE8
 12898                           indf1	equ	0xFE7
 12899                           postdec1	equ	0xFE5
 12900                           plusw1	equ	0xFE3
 12901                           fsr1h	equ	0xFE2
 12902                           fsr1l	equ	0xFE1
 12903                           indf2	equ	0xFDF
 12904                           postinc2	equ	0xFDE
 12905                           postdec2	equ	0xFDD
 12906                           plusw2	equ	0xFDB
 12907                           fsr2h	equ	0xFDA
 12908                           fsr2l	equ	0xFD9
 12909                           status	equ	0xFD8
 12910                           
 12911 ;; *************** function _USBCheckStdRequest *****************
 12912 ;; Defined at:
 12913 ;;		line 2688 in file "usb_device.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;		None
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;		None
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      void 
 12920 ;; Registers used:
 12921 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;Total ram usage:        0 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    5
 12934 ;; This function calls:
 12935 ;;		_USBStdFeatureReqHandler
 12936 ;;		_USBStdGetDscHandler
 12937 ;;		_USBStdGetStatusHandler
 12938 ;;		_USBStdSetCfgHandler
 12939 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12940 ;; This function is called by:
 12941 ;;		_USBCtrlTrfSetupHandler
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text61
 12946  0051B4                     __ptext61:
 12947                           	opt stack 0
 12948  0051B4                     _USBCheckStdRequest:
 12949                           	opt stack 22
 12950                           
 12951                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;incstack = 0
 12955  0051B4  010D               	movlb	13	; () banked
 12956  0051B6  3930               	swapf	48,w,b	;volatile
 12957  0051B8  32E8               	rrcf	wreg,f,c
 12958  0051BA  0B03               	andlw	3
 12959  0051BC  0900               	iorlw	0
 12960  0051BE  A4D8               	btfss	status,2,c
 12961  0051C0  0012               	return	
 12962  0051C2  D047               	goto	l343
 12963  0051C4                     l344:
 12964                           
 12965                           ; BSR set to: 13
 12966                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 12967  0051C4  0100               	movlb	0	; () banked
 12968  0051C6  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 12972  0051C8  0E08               	movlw	8
 12973  0051CA  6FF8               	movwf	_USBDeviceState& (0+255),b
 12974                           
 12975                           ;usb_device.c: 2698: break;
 12976  0051CC  0012               	return	
 12977  0051CE                     
 12978                           ;usb_device.c: 2700: USBStdGetDscHandler();
 12979                           
 12980                           ; BSR set to: 0
 12981  0051CE  EC93  F020         	call	_USBStdGetDscHandler	;wreg free
 12982                           
 12983                           ;usb_device.c: 2701: break;
 12984  0051D2  0012               	return	
 12985  0051D4                     
 12986                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 12987  0051D4  EC4B  F029         	call	_USBStdSetCfgHandler	;wreg free
 12988                           
 12989                           ;usb_device.c: 2704: break;
 12990  0051D8  0012               	return	
 12991  0051DA                     
 12992                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12993  0051DA  0EFE               	movlw	low _USBActiveConfiguration
 12994  0051DC  0100               	movlb	0	; () banked
 12995  0051DE  6FCB               	movwf	_inPipes& (0+255),b
 12996  0051E0  0E00               	movlw	high _USBActiveConfiguration
 12997  0051E2  6FCC               	movwf	(_inPipes+1)& (0+255),b
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13001  0051E4  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13005  0051E6  0E01               	movlw	1
 13006  0051E8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13010  0051EA  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13011                           
 13012                           ;usb_device.c: 2710: break;
 13013  0051EC  0012               	return	
 13014  0051EE                     
 13015                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13016                           
 13017                           ; BSR set to: 0
 13018  0051EE  ECE9  F032         	call	_USBStdGetStatusHandler	;wreg free
 13019                           
 13020                           ;usb_device.c: 2713: break;
 13021  0051F2  0012               	return	
 13022  0051F4                     
 13023                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13024  0051F4  ECA4  F00D         	call	_USBStdFeatureReqHandler	;wreg free
 13025                           
 13026                           ;usb_device.c: 2717: break;
 13027  0051F8  0012               	return	
 13028  0051FA                     
 13029                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13030  0051FA  010D               	movlb	13	; () banked
 13031  0051FC  5134               	movf	52,w,b	;volatile
 13032  0051FE  0D01               	mullw	1
 13033  005200  0EAF               	movlw	low _USBAlternateInterface
 13034  005202  24F3               	addwf	prodl,w,c
 13035  005204  0100               	movlb	0	; () banked
 13036  005206  6FCB               	movwf	_inPipes& (0+255),b
 13037  005208  0E01               	movlw	high _USBAlternateInterface
 13038  00520A  20F4               	addwfc	prodh,w,c
 13039  00520C  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13043  00520E  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13047  005210  0E01               	movlw	1
 13048  005212  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13052  005214  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13053                           
 13054                           ;usb_device.c: 2723: break;
 13055  005216  0012               	return	
 13056  005218                     l353:
 13057                           
 13058                           ; BSR set to: 13
 13059                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13060  005218  0100               	movlb	0	; () banked
 13061  00521A  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13065  00521C  010D               	movlb	13	; () banked
 13066  00521E  5134               	movf	52,w,b	;volatile
 13067  005220  0D01               	mullw	1
 13068  005222  0EAF               	movlw	low _USBAlternateInterface
 13069  005224  24F3               	addwf	prodl,w,c
 13070  005226  6ED9               	movwf	fsr2l,c
 13071  005228  0E01               	movlw	high _USBAlternateInterface
 13072  00522A  20F4               	addwfc	prodh,w,c
 13073  00522C  6EDA               	movwf	fsr2h,c
 13074  00522E  CD32 FFDF          	movff	3378,indf2	;volatile
 13075                           
 13076                           ;usb_device.c: 2727: break;
 13077  005232  0012               	return	
 13078  005234                     
 13079                           ; BSR set to: 13
 13080                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13081                           
 13082                           ; BSR set to: 13
 13083  005234  0E00               	movlw	0
 13084  005236  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13085  005238  0E02               	movlw	2
 13086  00523A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13087  00523C  0E00               	movlw	0
 13088  00523E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13089  005240  0E00               	movlw	0
 13090  005242  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13091  005244  0E00               	movlw	0
 13092  005246  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13093  005248  0E00               	movlw	0
 13094  00524A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13095  00524C  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13096                           
 13097                           ;usb_device.c: 2734: }
 13098                           
 13099                           ;usb_device.c: 2733: break;
 13100                           
 13101                           ;usb_device.c: 2732: default:
 13102                           
 13103                           ;usb_device.c: 2731: case 12:
 13104                           
 13105                           ;usb_device.c: 2730: break;
 13106  005250  0012               	return	
 13107  005252                     l343:
 13108  005252  010D               	movlb	13	; () banked
 13109  005254  5131               	movf	49,w,b	;volatile
 13110                           
 13111                           ; Switch size 1, requested type "space"
 13112                           ; Number of cases is 11, Range of values is 0 to 12
 13113                           ; switch strategies available:
 13114                           ; Name         Instructions Cycles
 13115                           ; simple_byte           34    18 (average)
 13116                           ;	Chosen strategy is simple_byte
 13117  005256  0A00               	xorlw	0	; case 0
 13118  005258  B4D8               	btfsc	status,2,c
 13119  00525A  D7C9               	goto	l349
 13120  00525C  0A01               	xorlw	1	; case 1
 13121  00525E  B4D8               	btfsc	status,2,c
 13122  005260  D7C9               	goto	l350
 13123  005262  0A02               	xorlw	2	; case 3
 13124  005264  B4D8               	btfsc	status,2,c
 13125  005266  D7C6               	goto	l350
 13126  005268  0A06               	xorlw	6	; case 5
 13127  00526A  B4D8               	btfsc	status,2,c
 13128  00526C  D7AB               	goto	l344
 13129  00526E  0A03               	xorlw	3	; case 6
 13130  005270  B4D8               	btfsc	status,2,c
 13131  005272  D7AD               	goto	l346
 13132  005274  0A01               	xorlw	1	; case 7
 13133  005276  B4D8               	btfsc	status,2,c
 13134  005278  D7DD               	goto	l354
 13135  00527A  0A0F               	xorlw	15	; case 8
 13136  00527C  B4D8               	btfsc	status,2,c
 13137  00527E  D7AD               	goto	l348
 13138  005280  0A01               	xorlw	1	; case 9
 13139  005282  B4D8               	btfsc	status,2,c
 13140  005284  D7A7               	goto	l347
 13141  005286  0A03               	xorlw	3	; case 10
 13142  005288  B4D8               	btfsc	status,2,c
 13143  00528A  D7B7               	goto	l352
 13144  00528C  0A01               	xorlw	1	; case 11
 13145  00528E  B4D8               	btfsc	status,2,c
 13146  005290  D7C3               	goto	l353
 13147  005292  0A07               	xorlw	7	; case 12
 13148  005294  0012               	return	
 13149  005296                     __end_of_USBCheckStdRequest:
 13150                           	opt stack 0
 13151                           tblptru	equ	0xFF8
 13152                           tblptrh	equ	0xFF7
 13153                           tblptrl	equ	0xFF6
 13154                           tablat	equ	0xFF5
 13155                           prodh	equ	0xFF4
 13156                           prodl	equ	0xFF3
 13157                           intcon	equ	0xFF2
 13158                           intcon2	equ	0xFF1
 13159                           intcon3	equ	0xFF0
 13160                           postinc0	equ	0xFEE
 13161                           wreg	equ	0xFE8
 13162                           indf1	equ	0xFE7
 13163                           postdec1	equ	0xFE5
 13164                           plusw1	equ	0xFE3
 13165                           fsr1h	equ	0xFE2
 13166                           fsr1l	equ	0xFE1
 13167                           indf2	equ	0xFDF
 13168                           postinc2	equ	0xFDE
 13169                           postdec2	equ	0xFDD
 13170                           plusw2	equ	0xFDB
 13171                           fsr2h	equ	0xFDA
 13172                           fsr2l	equ	0xFD9
 13173                           status	equ	0xFD8
 13174                           
 13175 ;; *************** function _USBStdSetCfgHandler *****************
 13176 ;; Defined at:
 13177 ;;		line 1970 in file "usb_device.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;		None
 13180 ;; Auto vars:     Size  Location     Type
 13181 ;;  i               1   23[COMRAM] unsigned char 
 13182 ;; Return value:  Size  Location     Type
 13183 ;;                  1    wreg      void 
 13184 ;; Registers used:
 13185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13186 ;; Tracked objects:
 13187 ;;		On entry : 0/0
 13188 ;;		On exit  : 0/0
 13189 ;;		Unchanged: 0/0
 13190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13195 ;;Total ram usage:        1 bytes
 13196 ;; Hardware stack levels used:    1
 13197 ;; Hardware stack levels required when called:    4
 13198 ;; This function calls:
 13199 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13200 ;;		_memset
 13201 ;; This function is called by:
 13202 ;;		_USBCheckStdRequest
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           	psect	text62
 13207  005296                     __ptext62:
 13208                           	opt stack 0
 13209  005296                     _USBStdSetCfgHandler:
 13210                           	opt stack 22
 13211                           
 13212                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13213                           
 13214                           ;incstack = 0
 13215  005296  0100               	movlb	0	; () banked
 13216  005298  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13220  00529A  0E27               	movlw	39
 13221  00529C  6E01               	movwf	memset@p1,c
 13222  00529E  0E0F               	movlw	15
 13223  0052A0  6E02               	movwf	memset@p1+1,c
 13224  0052A2  0E00               	movlw	0
 13225  0052A4  6E04               	movwf	memset@c+1,c
 13226  0052A6  0E00               	movlw	0
 13227  0052A8  6E03               	movwf	memset@c,c
 13228  0052AA  0E00               	movlw	0
 13229  0052AC  6E06               	movwf	memset@n+1,c
 13230  0052AE  0E02               	movlw	2
 13231  0052B0  6E05               	movwf	memset@n,c
 13232  0052B2  ECFC  F044         	call	_memset	;wreg free
 13233                           
 13234                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13235  0052B6  0E00               	movlw	0
 13236  0052B8  6E01               	movwf	memset@p1,c
 13237  0052BA  0E0D               	movlw	13
 13238  0052BC  6E02               	movwf	memset@p1+1,c
 13239  0052BE  0E00               	movlw	0
 13240  0052C0  6E04               	movwf	memset@c+1,c
 13241  0052C2  0E00               	movlw	0
 13242  0052C4  6E03               	movwf	memset@c,c
 13243  0052C6  0E00               	movlw	0
 13244  0052C8  6E06               	movwf	memset@n+1,c
 13245  0052CA  0E30               	movlw	48
 13246  0052CC  6E05               	movwf	memset@n,c
 13247  0052CE  ECFC  F044         	call	_memset	;wreg free
 13248                           
 13249                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13250  0052D2  8C65               	bsf	3941,6,c	;volatile
 13251                           
 13252                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13253  0052D4  0E00               	movlw	0
 13254  0052D6  6E18               	movwf	USBStdSetCfgHandler@i,c
 13255  0052D8                     l12839:
 13256  0052D8  0E02               	movlw	2
 13257  0052DA  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13258  0052DC  D001               	goto	l260
 13259  0052DE  D016               	goto	u9490
 13260  0052E0                     l260:
 13261                           
 13262                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13263  0052E0  5018               	movf	USBStdSetCfgHandler@i,w,c
 13264  0052E2  0D01               	mullw	1
 13265  0052E4  0E6F               	movlw	low _ep_data_in
 13266  0052E6  24F3               	addwf	prodl,w,c
 13267  0052E8  6ED9               	movwf	fsr2l,c
 13268  0052EA  0E01               	movlw	high _ep_data_in
 13269  0052EC  20F4               	addwfc	prodh,w,c
 13270  0052EE  6EDA               	movwf	fsr2h,c
 13271  0052F0  0E00               	movlw	0
 13272  0052F2  6EDF               	movwf	indf2,c
 13273                           
 13274                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13275  0052F4  5018               	movf	USBStdSetCfgHandler@i,w,c
 13276  0052F6  0D01               	mullw	1
 13277  0052F8  0E6C               	movlw	low _ep_data_out
 13278  0052FA  24F3               	addwf	prodl,w,c
 13279  0052FC  6ED9               	movwf	fsr2l,c
 13280  0052FE  0E01               	movlw	high _ep_data_out
 13281  005300  20F4               	addwfc	prodh,w,c
 13282  005302  6EDA               	movwf	fsr2h,c
 13283  005304  0E00               	movlw	0
 13284  005306  6EDF               	movwf	indf2,c
 13285  005308  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13286  00530A  D7E6               	goto	l12839
 13287  00530C                     u9490:
 13288                           
 13289                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13290  00530C  0EAF               	movlw	low _USBAlternateInterface
 13291  00530E  6E01               	movwf	memset@p1,c
 13292  005310  0E01               	movlw	high _USBAlternateInterface
 13293  005312  6E02               	movwf	memset@p1+1,c
 13294  005314  0E00               	movlw	0
 13295  005316  6E04               	movwf	memset@c+1,c
 13296  005318  0E00               	movlw	0
 13297  00531A  6E03               	movwf	memset@c,c
 13298  00531C  0E00               	movlw	0
 13299  00531E  6E06               	movwf	memset@n+1,c
 13300  005320  0E02               	movlw	2
 13301  005322  6E05               	movwf	memset@n,c
 13302  005324  ECFC  F044         	call	_memset	;wreg free
 13303                           
 13304                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13305  005328  9C65               	bcf	3941,6,c	;volatile
 13306                           
 13307                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13308  00532A  0E08               	movlw	8
 13309  00532C  0100               	movlb	0	; () banked
 13310  00532E  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 13311  005330  0E0D               	movlw	13
 13312  005332  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13316  005334  0E00               	movlw	0
 13317  005336  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13318  005338  0E0D               	movlw	13
 13319  00533A  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13323  00533C  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13324  005340  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13328  005344  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13332  005348  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13333  00534A  A4D8               	btfss	status,2,c
 13334  00534C  D003               	goto	l262
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13338  00534E  0E10               	movlw	16
 13339  005350  6FF8               	movwf	_USBDeviceState& (0+255),b
 13340                           
 13341                           ;usb_device.c: 2015: }
 13342  005352  0012               	return	
 13343  005354                     l262:
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13347                           
 13348                           ; BSR set to: 0
 13349  005354  0E00               	movlw	0
 13350  005356  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13351  005358  0E01               	movlw	1
 13352  00535A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13353  00535C  0EFE               	movlw	low _USBActiveConfiguration
 13354  00535E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13355  005360  0E00               	movlw	high _USBActiveConfiguration
 13356  005362  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13357  005364  0E00               	movlw	0
 13358  005366  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13359  005368  0E01               	movlw	1
 13360  00536A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13361  00536C  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13362                           
 13363                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13364  005370  0E20               	movlw	32
 13365  005372  0100               	movlb	0	; () banked
 13366  005374  6FF8               	movwf	_USBDeviceState& (0+255),b
 13367  005376  0012               	return	
 13368  005378                     __end_of_USBStdSetCfgHandler:
 13369                           	opt stack 0
 13370                           tblptru	equ	0xFF8
 13371                           tblptrh	equ	0xFF7
 13372                           tblptrl	equ	0xFF6
 13373                           tablat	equ	0xFF5
 13374                           prodh	equ	0xFF4
 13375                           prodl	equ	0xFF3
 13376                           intcon	equ	0xFF2
 13377                           intcon2	equ	0xFF1
 13378                           intcon3	equ	0xFF0
 13379                           postinc0	equ	0xFEE
 13380                           wreg	equ	0xFE8
 13381                           indf1	equ	0xFE7
 13382                           postdec1	equ	0xFE5
 13383                           plusw1	equ	0xFE3
 13384                           fsr1h	equ	0xFE2
 13385                           fsr1l	equ	0xFE1
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           postdec2	equ	0xFDD
 13389                           plusw2	equ	0xFDB
 13390                           fsr2h	equ	0xFDA
 13391                           fsr2l	equ	0xFD9
 13392                           status	equ	0xFD8
 13393                           
 13394 ;; *************** function _memset *****************
 13395 ;; Defined at:
 13396 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;  p1              2    0[COMRAM] PTR void 
 13399 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13400 ;;  c               2    2[COMRAM] int 
 13401 ;;  n               2    4[COMRAM] unsigned int 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  p               2    6[COMRAM] PTR unsigned char 
 13404 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  2    0[COMRAM] PTR void 
 13407 ;; Registers used:
 13408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13414 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13417 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13418 ;;Total ram usage:        8 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; This function calls:
 13421 ;;		Nothing
 13422 ;; This function is called by:
 13423 ;;		_USBDeviceInit
 13424 ;;		_USBStdSetCfgHandler
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text63
 13429  0089F8                     __ptext63:
 13430                           	opt stack 0
 13431  0089F8                     _memset:
 13432                           	opt stack 28
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;incstack = 0
 13436  0089F8  C001  F007         	movff	memset@p1,memset@p
 13437  0089FC  C002  F008         	movff	memset@p1+1,memset@p+1
 13438  008A00  D008               	goto	l3693
 13439  008A02                     l11467:
 13440  008A02  C007  FFD9         	movff	memset@p,fsr2l
 13441  008A06  C008  FFDA         	movff	memset@p+1,fsr2h
 13442  008A0A  C003  FFDF         	movff	memset@c,indf2
 13443  008A0E  4A07               	infsnz	memset@p,f,c
 13444  008A10  2A08               	incf	memset@p+1,f,c
 13445  008A12                     l3693:
 13446  008A12  0605               	decf	memset@n,f,c
 13447  008A14  A0D8               	btfss	status,0,c
 13448  008A16  0606               	decf	memset@n+1,f,c
 13449  008A18  2805               	incf	memset@n,w,c
 13450  008A1A  E1F3               	bnz	l11467
 13451  008A1C  2806               	incf	memset@n+1,w,c
 13452  008A1E  B4D8               	btfsc	status,2,c
 13453  008A20  0012               	return	
 13454  008A22  D7EF               	goto	l3694
 13455  008A24                     __end_of_memset:
 13456                           	opt stack 0
 13457                           tblptru	equ	0xFF8
 13458                           tblptrh	equ	0xFF7
 13459                           tblptrl	equ	0xFF6
 13460                           tablat	equ	0xFF5
 13461                           prodh	equ	0xFF4
 13462                           prodl	equ	0xFF3
 13463                           intcon	equ	0xFF2
 13464                           intcon2	equ	0xFF1
 13465                           intcon3	equ	0xFF0
 13466                           postinc0	equ	0xFEE
 13467                           wreg	equ	0xFE8
 13468                           indf1	equ	0xFE7
 13469                           postdec1	equ	0xFE5
 13470                           plusw1	equ	0xFE3
 13471                           fsr1h	equ	0xFE2
 13472                           fsr1l	equ	0xFE1
 13473                           indf2	equ	0xFDF
 13474                           postinc2	equ	0xFDE
 13475                           postdec2	equ	0xFDD
 13476                           plusw2	equ	0xFDB
 13477                           fsr2h	equ	0xFDA
 13478                           fsr2l	equ	0xFD9
 13479                           status	equ	0xFD8
 13480                           
 13481 ;; *************** function _USBStdGetStatusHandler *****************
 13482 ;; Defined at:
 13483 ;;		line 2131 in file "usb_device.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;		None
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;  p               2    1[COMRAM] PTR struct __BDT
 13488 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  1    wreg      void 
 13491 ;; Registers used:
 13492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13501 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;Total ram usage:        3 bytes
 13503 ;; Hardware stack levels used:    1
 13504 ;; This function calls:
 13505 ;;		Nothing
 13506 ;; This function is called by:
 13507 ;;		_USBCheckStdRequest
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511                           	psect	text64
 13512  0065D2                     __ptext64:
 13513                           	opt stack 0
 13514  0065D2                     _USBStdGetStatusHandler:
 13515                           	opt stack 26
 13516                           
 13517                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13518                           
 13519                           ;incstack = 0
 13520  0065D2  0E00               	movlw	0
 13521  0065D4  010D               	movlb	13	; () banked
 13522  0065D6  6F38               	movwf	56,b	;volatile
 13523                           
 13524                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13525  0065D8  0E00               	movlw	0
 13526  0065DA  6F39               	movwf	57,b	;volatile
 13527                           
 13528                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13529  0065DC  D039               	goto	l281
 13530  0065DE                     l282:
 13531                           
 13532                           ; BSR set to: 13
 13533                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13534  0065DE  0100               	movlb	0	; () banked
 13535  0065E0  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13536                           
 13537                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13538                           
 13539                           ; BSR set to: 13
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13543                           
 13544                           ;usb_device.c: 2144: if(0 == 1)
 13545  0065E2  0100               	movlb	0	; () banked
 13546  0065E4  05F5               	decf	_RemoteWakeup& (0+255),w,b
 13547  0065E6  A4D8               	btfss	status,2,c
 13548  0065E8  D03E               	goto	l285
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13552  0065EA  010D               	movlb	13	; () banked
 13553  0065EC  8338               	bsf	56,1,b	;volatile
 13554                           
 13555                           ; BSR set to: 13
 13556                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13557  0065EE  D03B               	goto	l285
 13558  0065F0                     l286:
 13559                           
 13560                           ; BSR set to: 13
 13561                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13562  0065F0  0100               	movlb	0	; () banked
 13563  0065F2  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13564                           
 13565                           ;usb_device.c: 2156: break;
 13566  0065F4  D038               	goto	l285
 13567  0065F6                     l287:
 13568                           
 13569                           ; BSR set to: 13
 13570                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13571  0065F6  0100               	movlb	0	; () banked
 13572  0065F8  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13573                           
 13574                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13575  0065FA  010D               	movlb	13	; () banked
 13576  0065FC  BF34               	btfsc	52,7,b	;volatile
 13577  0065FE  D00A               	goto	l288
 13578                           
 13579                           ; BSR set to: 13
 13580                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13581  006600  5134               	movf	52,w,b	;volatile
 13582  006602  0B0F               	andlw	15
 13583  006604  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13584  006606  5001               	movf	??_USBStdGetStatusHandler,w,c
 13585  006608  0D02               	mullw	2
 13586  00660A  0E40               	movlw	low _pBDTEntryOut
 13587  00660C  24F3               	addwf	prodl,w,c
 13588  00660E  6ED9               	movwf	fsr2l,c
 13589  006610  0E01               	movlw	high _pBDTEntryOut
 13590  006612  D009               	goto	L6
 13591  006614                     l288:
 13592                           
 13593                           ; BSR set to: 13
 13594                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13595                           
 13596                           ; BSR set to: 13
 13597  006614  5134               	movf	52,w,b	;volatile
 13598  006616  0B0F               	andlw	15
 13599  006618  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13600  00661A  5001               	movf	??_USBStdGetStatusHandler,w,c
 13601  00661C  0D02               	mullw	2
 13602  00661E  0ED1               	movlw	low _pBDTEntryIn
 13603  006620  24F3               	addwf	prodl,w,c
 13604  006622  6ED9               	movwf	fsr2l,c
 13605  006624  0E00               	movlw	high _pBDTEntryIn
 13606  006626                     L6:
 13607  006626  20F4               	addwfc	prodh,w,c
 13608  006628  6EDA               	movwf	fsr2h,c
 13609  00662A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13610  00662E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13611                           
 13612                           ; BSR set to: 13
 13613                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13614                           
 13615                           ; BSR set to: 13
 13616  006632  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13617  006636  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13618  00663A  AEDF               	btfss	indf2,7,c
 13619  00663C  D014               	goto	l285
 13620                           
 13621                           ; BSR set to: 13
 13622  00663E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13623  006642  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13624  006646  A4DF               	btfss	indf2,2,c
 13625  006648  D00E               	goto	l285
 13626                           
 13627                           ; BSR set to: 13
 13628                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13629  00664A  0E01               	movlw	1
 13630  00664C  6F38               	movwf	56,b	;volatile
 13631                           
 13632                           ; BSR set to: 13
 13633                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13634                           
 13635                           ; BSR set to: 13
 13636                           ;usb_device.c: 2176: break;
 13637  00664E  D00B               	goto	l285
 13638  006650                     l281:
 13639                           
 13640                           ; BSR set to: 13
 13641                           
 13642                           ; BSR set to: 13
 13643  006650  5130               	movf	48,w,b	;volatile
 13644  006652  0B1F               	andlw	31
 13645                           
 13646                           ; Switch size 1, requested type "space"
 13647                           ; Number of cases is 3, Range of values is 0 to 2
 13648                           ; switch strategies available:
 13649                           ; Name         Instructions Cycles
 13650                           ; simple_byte           10     6 (average)
 13651                           ;	Chosen strategy is simple_byte
 13652  006654  0A00               	xorlw	0	; case 0
 13653  006656  B4D8               	btfsc	status,2,c
 13654  006658  D7C2               	goto	l282
 13655  00665A  0A01               	xorlw	1	; case 1
 13656  00665C  B4D8               	btfsc	status,2,c
 13657  00665E  D7C8               	goto	l286
 13658  006660  0A03               	xorlw	3	; case 2
 13659  006662  B4D8               	btfsc	status,2,c
 13660  006664  D7C8               	goto	l287
 13661  006666                     l285:
 13662                           
 13663                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 13664  006666  0100               	movlb	0	; () banked
 13665  006668  AFCE               	btfss	(_inPipes+3)& (0+255),7,b
 13666  00666A  0012               	return	
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 13670  00666C  0E38               	movlw	56
 13671  00666E  6FCB               	movwf	_inPipes& (0+255),b
 13672  006670  0E0D               	movlw	13
 13673  006672  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13677  006674  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 13681  006676  0E02               	movlw	2
 13682  006678  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13683  00667A  0012               	return	
 13684  00667C                     __end_of_USBStdGetStatusHandler:
 13685                           	opt stack 0
 13686                           tblptru	equ	0xFF8
 13687                           tblptrh	equ	0xFF7
 13688                           tblptrl	equ	0xFF6
 13689                           tablat	equ	0xFF5
 13690                           prodh	equ	0xFF4
 13691                           prodl	equ	0xFF3
 13692                           intcon	equ	0xFF2
 13693                           intcon2	equ	0xFF1
 13694                           intcon3	equ	0xFF0
 13695                           postinc0	equ	0xFEE
 13696                           wreg	equ	0xFE8
 13697                           indf1	equ	0xFE7
 13698                           postdec1	equ	0xFE5
 13699                           plusw1	equ	0xFE3
 13700                           fsr1h	equ	0xFE2
 13701                           fsr1l	equ	0xFE1
 13702                           indf2	equ	0xFDF
 13703                           postinc2	equ	0xFDE
 13704                           postdec2	equ	0xFDD
 13705                           plusw2	equ	0xFDB
 13706                           fsr2h	equ	0xFDA
 13707                           fsr2l	equ	0xFD9
 13708                           status	equ	0xFD8
 13709                           
 13710 ;; *************** function _USBStdGetDscHandler *****************
 13711 ;; Defined at:
 13712 ;;		line 2045 in file "usb_device.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;		None
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;		None
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  1    wreg      void 
 13719 ;; Registers used:
 13720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13730 ;;Total ram usage:        2 bytes
 13731 ;; Hardware stack levels used:    1
 13732 ;; This function calls:
 13733 ;;		Nothing
 13734 ;; This function is called by:
 13735 ;;		_USBCheckStdRequest
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text65
 13740  004126                     __ptext65:
 13741                           	opt stack 0
 13742  004126                     _USBStdGetDscHandler:
 13743                           	opt stack 26
 13744                           
 13745                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;incstack = 0
 13749  004126  0E80               	movlw	128
 13750  004128  010D               	movlb	13	; () banked
 13751  00412A  1930               	xorwf	48,w,b	;volatile
 13752  00412C  A4D8               	btfss	status,2,c
 13753  00412E  0012               	return	
 13754                           
 13755                           ; BSR set to: 13
 13756                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13757  004130  0EC0               	movlw	192
 13758  004132  0100               	movlb	0	; () banked
 13759  004134  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13760                           
 13761                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 13762  004136  D088               	goto	l268
 13763  004138                     
 13764                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13765                           
 13766                           ; BSR set to: 0
 13767  004138  0EA5               	movlw	low _device_dsc
 13768  00413A  0100               	movlb	0	; () banked
 13769  00413C  6FCB               	movwf	_inPipes& (0+255),b
 13770  00413E  0E9F               	movlw	high _device_dsc
 13771  004140  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 13775  004142  0E00               	movlw	0
 13776  004144  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13777  004146  0E12               	movlw	18
 13778  004148  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13779                           
 13780                           ;usb_device.c: 2060: break;
 13781  00414A  0012               	return	
 13782  00414C                     
 13783                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 13784                           
 13785                           ; BSR set to: 0
 13786  00414C  010D               	movlb	13	; () banked
 13787  00414E  5132               	movf	50,w,b	;volatile
 13788  004150  A4D8               	btfss	status,2,c
 13789  004152  D043               	goto	l272
 13790                           
 13791                           ; BSR set to: 13
 13792                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 13793  004154  5132               	movf	50,w,b	;volatile
 13794  004156  0D02               	mullw	2
 13795  004158  0EA5               	movlw	low _USB_CD_Ptr
 13796  00415A  24F3               	addwf	prodl,w,c
 13797  00415C  6EF6               	movwf	tblptrl,c
 13798  00415E  0E9E               	movlw	high _USB_CD_Ptr
 13799  004160  20F4               	addwfc	prodh,w,c
 13800  004162  6EF7               	movwf	tblptrh,c
 13801  004164                     	if	1	;There are 3 active tblptr bytes
 13802  004164  6AF8               	clrf	tblptru,c
 13803  004166  0E00               	movlw	low (__mediumconst shr (0+16))
 13804  004168  22F8               	addwfc	tblptru,f,c
 13805  00416A                     	endif
 13806  00416A  0009               	tblrd		*+
 13807  00416C  CFF5 F0CB          	movff	tablat,_inPipes
 13808  004170  000A               	tblrd		*-
 13809  004172  CFF5 F0CC          	movff	tablat,_inPipes+1
 13810                           
 13811                           ; BSR set to: 13
 13812                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13813  004176  0E02               	movlw	2
 13814  004178  0100               	movlb	0	; () banked
 13815  00417A  25CB               	addwf	_inPipes& (0+255),w,b
 13816  00417C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13817  00417E  0E00               	movlw	0
 13818  004180  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13819  004182  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13820  004184  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13821  004188  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13822  00418C  6AF8               	clrf	tblptru,c
 13823  00418E  0E0E               	movlw	(high __ramtop+-1)
 13824  004190  64F7               	cpfsgt	tblptrh,c
 13825  004192  D003               	bra	u9537
 13826  004194  0008               	tblrd		*
 13827  004196  50F5               	movf	tablat,w,c
 13828  004198  D005               	bra	u9530
 13829  00419A                     u9537:
 13830  00419A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13831  00419E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13832  0041A2  50EF               	movf	indf0,w,c
 13833  0041A4                     u9530:
 13834  0041A4  0100               	movlb	0	; () banked
 13835  0041A6  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13839  0041A8  0E03               	movlw	3
 13840  0041AA  25CB               	addwf	_inPipes& (0+255),w,b
 13841  0041AC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13842  0041AE  0E00               	movlw	0
 13843  0041B0  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13844  0041B2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13845  0041B4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13846  0041B8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13847  0041BC  6AF8               	clrf	tblptru,c
 13848  0041BE  0E0E               	movlw	(high __ramtop+-1)
 13849  0041C0  64F7               	cpfsgt	tblptrh,c
 13850  0041C2  D003               	bra	u9547
 13851  0041C4  0008               	tblrd		*
 13852  0041C6  50F5               	movf	tablat,w,c
 13853  0041C8  D005               	bra	u9540
 13854  0041CA                     u9547:
 13855  0041CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13856  0041CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13857  0041D2  50EF               	movf	indf0,w,c
 13858  0041D4                     u9540:
 13859  0041D4  0100               	movlb	0	; () banked
 13860  0041D6  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13861                           
 13862                           ;usb_device.c: 2078: }
 13863  0041D8  0012               	return	
 13864  0041DA                     l272:
 13865                           
 13866                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 13867                           
 13868                           ; BSR set to: 0
 13869  0041DA  0E00               	movlw	0
 13870  0041DC  0100               	movlb	0	; () banked
 13871  0041DE  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 13875  0041E0  0012               	return	
 13876  0041E2                     
 13877                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 13878                           
 13879                           ; BSR set to: 0
 13880  0041E2  0E04               	movlw	4
 13881  0041E4  010D               	movlb	13	; () banked
 13882  0041E6  6132               	cpfslt	50,b	;volatile
 13883  0041E8  D027               	goto	l275
 13884                           
 13885                           ; BSR set to: 13
 13886                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 13887  0041EA  5132               	movf	50,w,b	;volatile
 13888  0041EC  0D02               	mullw	2
 13889  0041EE  0E7B               	movlw	low _USB_SD_Ptr
 13890  0041F0  24F3               	addwf	prodl,w,c
 13891  0041F2  6EF6               	movwf	tblptrl,c
 13892  0041F4  0E9E               	movlw	high _USB_SD_Ptr
 13893  0041F6  20F4               	addwfc	prodh,w,c
 13894  0041F8  6EF7               	movwf	tblptrh,c
 13895  0041FA                     	if	1	;There are 3 active tblptr bytes
 13896  0041FA  6AF8               	clrf	tblptru,c
 13897  0041FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13898  0041FE  22F8               	addwfc	tblptru,f,c
 13899  004200                     	endif
 13900  004200  0009               	tblrd		*+
 13901  004202  CFF5 F0CB          	movff	tablat,_inPipes
 13902  004206  000A               	tblrd		*-
 13903  004208  CFF5 F0CC          	movff	tablat,_inPipes+1
 13904                           
 13905                           ; BSR set to: 13
 13906                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13907  00420C  C0CB  FFF6         	movff	_inPipes,tblptrl
 13908  004210  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 13909  004214  6AF8               	clrf	tblptru,c
 13910  004216  0E0E               	movlw	(high __ramtop+-1)
 13911  004218  64F7               	cpfsgt	tblptrh,c
 13912  00421A  D003               	bra	u9567
 13913  00421C  0008               	tblrd		*
 13914  00421E  50F5               	movf	tablat,w,c
 13915  004220  D005               	bra	u9560
 13916  004222                     u9567:
 13917  004222  CFF6 FFE9          	movff	tblptrl,fsr0l
 13918  004226  CFF7 FFEA          	movff	tblptrh,fsr0h
 13919  00422A  50EF               	movf	indf0,w,c
 13920  00422C                     u9560:
 13921  00422C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13922  00422E  5001               	movf	??_USBStdGetDscHandler,w,c
 13923  004230  0100               	movlb	0	; () banked
 13924  004232  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13925  004234  6BD0               	clrf	(_inPipes+5)& (0+255),b
 13926                           
 13927                           ;usb_device.c: 2094: }
 13928  004236  0012               	return	
 13929  004238                     l275:
 13930                           
 13931                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 13932                           
 13933                           ; BSR set to: 0
 13934  004238  0E00               	movlw	0
 13935  00423A  0100               	movlb	0	; () banked
 13936  00423C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13937                           
 13938                           ; BSR set to: 0
 13939                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 13940  00423E  0012               	return	
 13941  004240                     
 13942                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 13943                           
 13944                           ; BSR set to: 0
 13945  004240  0E00               	movlw	0
 13946  004242  0100               	movlb	0	; () banked
 13947  004244  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;usb_device.c: 2112: }
 13951                           
 13952                           ;usb_device.c: 2111: break;
 13953  004246  0012               	return	
 13954  004248                     l268:
 13955                           
 13956                           ; BSR set to: 0
 13957                           
 13958                           ; BSR set to: 0
 13959  004248  010D               	movlb	13	; () banked
 13960  00424A  5133               	movf	51,w,b	;volatile
 13961                           
 13962                           ; Switch size 1, requested type "space"
 13963                           ; Number of cases is 3, Range of values is 1 to 3
 13964                           ; switch strategies available:
 13965                           ; Name         Instructions Cycles
 13966                           ; simple_byte           10     6 (average)
 13967                           ;	Chosen strategy is simple_byte
 13968  00424C  0A01               	xorlw	1	; case 1
 13969  00424E  B4D8               	btfsc	status,2,c
 13970  004250  D773               	goto	l269
 13971  004252  0A03               	xorlw	3	; case 2
 13972  004254  B4D8               	btfsc	status,2,c
 13973  004256  D77A               	goto	l271
 13974  004258  0A01               	xorlw	1	; case 3
 13975  00425A  B4D8               	btfsc	status,2,c
 13976  00425C  D7C2               	goto	l274
 13977  00425E  D7F0               	goto	l277
 13978  004260                     __end_of_USBStdGetDscHandler:
 13979                           	opt stack 0
 13980                           tblptru	equ	0xFF8
 13981                           tblptrh	equ	0xFF7
 13982                           tblptrl	equ	0xFF6
 13983                           tablat	equ	0xFF5
 13984                           prodh	equ	0xFF4
 13985                           prodl	equ	0xFF3
 13986                           intcon	equ	0xFF2
 13987                           intcon2	equ	0xFF1
 13988                           intcon3	equ	0xFF0
 13989                           indf0	equ	0xFEF
 13990                           postinc0	equ	0xFEE
 13991                           fsr0h	equ	0xFEA
 13992                           fsr0l	equ	0xFE9
 13993                           wreg	equ	0xFE8
 13994                           indf1	equ	0xFE7
 13995                           postdec1	equ	0xFE5
 13996                           plusw1	equ	0xFE3
 13997                           fsr1h	equ	0xFE2
 13998                           fsr1l	equ	0xFE1
 13999                           indf2	equ	0xFDF
 14000                           postinc2	equ	0xFDE
 14001                           postdec2	equ	0xFDD
 14002                           plusw2	equ	0xFDB
 14003                           fsr2h	equ	0xFDA
 14004                           fsr2l	equ	0xFD9
 14005                           status	equ	0xFD8
 14006                           
 14007 ;; *************** function _USBStdFeatureReqHandler *****************
 14008 ;; Defined at:
 14009 ;;		line 2756 in file "usb_device.c"
 14010 ;; Parameters:    Size  Location     Type
 14011 ;;		None
 14012 ;; Auto vars:     Size  Location     Type
 14013 ;;  p               2   27[COMRAM] PTR struct __BDT
 14014 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14015 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14016 ;;		 -> UEP0(1), 
 14017 ;;  current_ep_d    1   26[COMRAM] struct .
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1    wreg      void 
 14020 ;; Registers used:
 14021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14028 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14030 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14031 ;;Total ram usage:        6 bytes
 14032 ;; Hardware stack levels used:    1
 14033 ;; Hardware stack levels required when called:    4
 14034 ;; This function calls:
 14035 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14036 ;; This function is called by:
 14037 ;;		_USBCheckStdRequest
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text66
 14042  001B48                     __ptext66:
 14043                           	opt stack 0
 14044  001B48                     _USBStdFeatureReqHandler:
 14045                           	opt stack 22
 14046                           
 14047                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14048                           
 14049                           ;incstack = 0
 14050  001B48  010D               	movlb	13	; () banked
 14051  001B4A  0532               	decf	50,w,b	;volatile
 14052  001B4C  A4D8               	btfss	status,2,c
 14053  001B4E  D011               	goto	l361
 14054                           
 14055                           ; BSR set to: 13
 14056  001B50  5130               	movf	48,w,b	;volatile
 14057  001B52  0B1F               	andlw	31
 14058  001B54  0900               	iorlw	0
 14059  001B56  A4D8               	btfss	status,2,c
 14060  001B58  D00C               	goto	l361
 14061                           
 14062                           ; BSR set to: 13
 14063                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14064  001B5A  0100               	movlb	0	; () banked
 14065  001B5C  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 14069  001B5E  0E03               	movlw	3
 14070  001B60  010D               	movlb	13	; () banked
 14071  001B62  1931               	xorwf	49,w,b	;volatile
 14072  001B64  A4D8               	btfss	status,2,c
 14073  001B66  D002               	goto	l360
 14074                           
 14075                           ; BSR set to: 13
 14076                           ;usb_device.c: 2806: RemoteWakeup = 1;
 14077  001B68  0E01               	movlw	1
 14078  001B6A  D001               	goto	L7
 14079  001B6C                     l360:
 14080                           
 14081                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 14082                           
 14083                           ; BSR set to: 0
 14084  001B6C  0E00               	movlw	0
 14085  001B6E                     L7:
 14086  001B6E  0100               	movlb	0	; () banked
 14087  001B70  6FF5               	movwf	_RemoteWakeup& (0+255),b
 14088  001B72                     l361:
 14089                           
 14090                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 14091                           
 14092                           ; BSR set to: 0
 14093  001B72  010D               	movlb	13	; () banked
 14094  001B74  5132               	movf	50,w,b	;volatile
 14095  001B76  A4D8               	btfss	status,2,c
 14096  001B78  0012               	return	
 14097                           
 14098                           ; BSR set to: 13
 14099  001B7A  5130               	movf	48,w,b	;volatile
 14100  001B7C  0B1F               	andlw	31
 14101  001B7E  0A02               	xorlw	2
 14102  001B80  A4D8               	btfss	status,2,c
 14103  001B82  0012               	return	
 14104                           
 14105                           ; BSR set to: 13
 14106  001B84  5134               	movf	52,w,b	;volatile
 14107  001B86  0B0F               	andlw	15
 14108  001B88  0900               	iorlw	0
 14109  001B8A  B4D8               	btfsc	status,2,c
 14110  001B8C  0012               	return	
 14111                           
 14112                           ; BSR set to: 13
 14113  001B8E  5134               	movf	52,w,b	;volatile
 14114  001B90  0B0F               	andlw	15
 14115  001B92  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14116  001B94  0E03               	movlw	3
 14117  001B96  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14118  001B98  0012               	return	
 14119                           
 14120                           ; BSR set to: 13
 14121  001B9A  0E20               	movlw	32
 14122  001B9C  0100               	movlb	0	; () banked
 14123  001B9E  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 14124  001BA0  A4D8               	btfss	status,2,c
 14125  001BA2  0012               	return	
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14129  001BA4  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14130                           
 14131                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14132  001BA6  010D               	movlb	13	; () banked
 14133  001BA8  BF34               	btfsc	52,7,b	;volatile
 14134  001BAA  D019               	goto	l363
 14135                           
 14136                           ; BSR set to: 13
 14137                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14138  001BAC  5134               	movf	52,w,b	;volatile
 14139  001BAE  0B0F               	andlw	15
 14140  001BB0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14141  001BB2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14142  001BB4  0D02               	mullw	2
 14143  001BB6  0E40               	movlw	low _pBDTEntryOut
 14144  001BB8  24F3               	addwf	prodl,w,c
 14145  001BBA  6ED9               	movwf	fsr2l,c
 14146  001BBC  0E01               	movlw	high _pBDTEntryOut
 14147  001BBE  20F4               	addwfc	prodh,w,c
 14148  001BC0  6EDA               	movwf	fsr2h,c
 14149  001BC2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14150  001BC6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14151                           
 14152                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14153  001BCA  5134               	movf	52,w,b	;volatile
 14154  001BCC  0B0F               	andlw	15
 14155  001BCE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14156  001BD0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14157  001BD2  0D01               	mullw	1
 14158  001BD4  0E6C               	movlw	low _ep_data_out
 14159  001BD6  24F3               	addwf	prodl,w,c
 14160  001BD8  6ED9               	movwf	fsr2l,c
 14161  001BDA  0E01               	movlw	high _ep_data_out
 14162  001BDC  D018               	goto	L8
 14163  001BDE                     l363:
 14164                           
 14165                           ; BSR set to: 13
 14166                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14167                           
 14168                           ; BSR set to: 13
 14169  001BDE  5134               	movf	52,w,b	;volatile
 14170  001BE0  0B0F               	andlw	15
 14171  001BE2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14172  001BE4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14173  001BE6  0D02               	mullw	2
 14174  001BE8  0ED1               	movlw	low _pBDTEntryIn
 14175  001BEA  24F3               	addwf	prodl,w,c
 14176  001BEC  6ED9               	movwf	fsr2l,c
 14177  001BEE  0E00               	movlw	high _pBDTEntryIn
 14178  001BF0  20F4               	addwfc	prodh,w,c
 14179  001BF2  6EDA               	movwf	fsr2h,c
 14180  001BF4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14181  001BF8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14182                           
 14183                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14184  001BFC  5134               	movf	52,w,b	;volatile
 14185  001BFE  0B0F               	andlw	15
 14186  001C00  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14187  001C02  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14188  001C04  0D01               	mullw	1
 14189  001C06  0E6F               	movlw	low _ep_data_in
 14190  001C08  24F3               	addwf	prodl,w,c
 14191  001C0A  6ED9               	movwf	fsr2l,c
 14192  001C0C  0E01               	movlw	high _ep_data_in
 14193  001C0E                     L8:
 14194  001C0E  20F4               	addwfc	prodh,w,c
 14195  001C10  6EDA               	movwf	fsr2h,c
 14196  001C12  50DF               	movf	indf2,w,c
 14197  001C14  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14198                           
 14199                           ; BSR set to: 13
 14200                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14201                           
 14202                           ; BSR set to: 13
 14203  001C16  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14204  001C18  D006               	goto	l365
 14205                           
 14206                           ; BSR set to: 13
 14207                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14208  001C1A  0EFB               	movlw	251
 14209  001C1C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14210  001C1E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14211  001C20  0EFF               	movlw	255
 14212  001C22  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14213  001C24  D004               	goto	L9
 14214  001C26                     l365:
 14215                           
 14216                           ; BSR set to: 13
 14217                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14218                           
 14219                           ; BSR set to: 13
 14220  001C26  0E04               	movlw	4
 14221  001C28  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14222  001C2A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14223  001C2C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14224  001C2E                     L9:
 14225  001C2E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14226                           
 14227                           ; BSR set to: 13
 14228                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14229                           
 14230                           ; BSR set to: 13
 14231  001C30  BF34               	btfsc	52,7,b	;volatile
 14232  001C32  D00A               	goto	l367
 14233                           
 14234                           ; BSR set to: 13
 14235                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14236  001C34  5134               	movf	52,w,b	;volatile
 14237  001C36  0B0F               	andlw	15
 14238  001C38  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14239  001C3A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14240  001C3C  0D02               	mullw	2
 14241  001C3E  0E40               	movlw	low _pBDTEntryOut
 14242  001C40  24F3               	addwf	prodl,w,c
 14243  001C42  6ED9               	movwf	fsr2l,c
 14244  001C44  0E01               	movlw	high _pBDTEntryOut
 14245  001C46  D009               	goto	L10
 14246  001C48                     l367:
 14247                           
 14248                           ; BSR set to: 13
 14249                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14250                           
 14251                           ; BSR set to: 13
 14252  001C48  5134               	movf	52,w,b	;volatile
 14253  001C4A  0B0F               	andlw	15
 14254  001C4C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14255  001C4E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14256  001C50  0D02               	mullw	2
 14257  001C52  0ED1               	movlw	low _pBDTEntryIn
 14258  001C54  24F3               	addwf	prodl,w,c
 14259  001C56  6ED9               	movwf	fsr2l,c
 14260  001C58  0E00               	movlw	high _pBDTEntryIn
 14261  001C5A                     L10:
 14262  001C5A  20F4               	addwfc	prodh,w,c
 14263  001C5C  6EDA               	movwf	fsr2h,c
 14264  001C5E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14265  001C62  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14266                           
 14267                           ; BSR set to: 13
 14268                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14269                           
 14270                           ; BSR set to: 13
 14271  001C66  0E03               	movlw	3
 14272  001C68  1931               	xorwf	49,w,b	;volatile
 14273  001C6A  A4D8               	btfss	status,2,c
 14274  001C6C  D02D               	goto	l369
 14275                           
 14276                           ; BSR set to: 13
 14277                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14278  001C6E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14279  001C72  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14280  001C76  AEDF               	btfss	indf2,7,c
 14281  001C78  D01A               	goto	l372
 14282                           
 14283                           ; BSR set to: 13
 14284                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14285  001C7A  BF34               	btfsc	52,7,b	;volatile
 14286  001C7C  D00A               	goto	l371
 14287                           
 14288                           ; BSR set to: 13
 14289                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14290  001C7E  5134               	movf	52,w,b	;volatile
 14291  001C80  0B0F               	andlw	15
 14292  001C82  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14293  001C84  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14294  001C86  0D01               	mullw	1
 14295  001C88  0E6C               	movlw	low _ep_data_out
 14296  001C8A  24F3               	addwf	prodl,w,c
 14297  001C8C  6ED9               	movwf	fsr2l,c
 14298  001C8E  0E01               	movlw	high _ep_data_out
 14299  001C90  D00A               	goto	L11
 14300  001C92                     l371:
 14301                           
 14302                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14303                           
 14304                           ; BSR set to: 1
 14305  001C92  010D               	movlb	13	; () banked
 14306  001C94  5134               	movf	52,w,b	;volatile
 14307  001C96  0B0F               	andlw	15
 14308  001C98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14309  001C9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14310  001C9C  0D01               	mullw	1
 14311  001C9E  0E6F               	movlw	low _ep_data_in
 14312  001CA0  24F3               	addwf	prodl,w,c
 14313  001CA2  6ED9               	movwf	fsr2l,c
 14314  001CA4  0E01               	movlw	high _ep_data_in
 14315  001CA6                     L11:
 14316  001CA6  20F4               	addwfc	prodh,w,c
 14317  001CA8  6EDA               	movwf	fsr2h,c
 14318  001CAA  0101               	movlb	1	; () banked
 14319  001CAC  82DF               	bsf	indf2,1,c
 14320  001CAE                     l372:
 14321                           
 14322                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14323                           
 14324                           ; BSR set to: 1
 14325                           
 14326                           ; BSR set to: 1
 14327  001CAE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14328  001CB2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14329  001CB6  0E00               	movlw	0
 14330  001CB8  84DB               	bsf	plusw2,2,c
 14331                           
 14332                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14333  001CBA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14334  001CBE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14335  001CC2  0E00               	movlw	0
 14336  001CC4  8EDB               	bsf	plusw2,7,c
 14337                           
 14338                           ;usb_device.c: 2878: }
 14339  001CC6  0012               	return	
 14340  001CC8                     l369:
 14341                           
 14342                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14343  001CC8  0E04               	movlw	4
 14344  001CCA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14345  001CCC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14346  001CCE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14347  001CD0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14348                           
 14349                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14350  001CD2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14351  001CD6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14352  001CDA  AEDF               	btfss	indf2,7,c
 14353  001CDC  D01B               	goto	l374
 14354                           
 14355                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14356  001CDE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14357  001CE2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14358  001CE6  0E7F               	movlw	127
 14359  001CE8  16DF               	andwf	indf2,f,c
 14360                           
 14361                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14362  001CEA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14363  001CEE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14364  001CF2  0E00               	movlw	0
 14365  001CF4  8CDB               	bsf	plusw2,6,c
 14366                           
 14367                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14368  001CF6  0E00               	movlw	0
 14369  001CF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14370  001CFA  0E05               	movlw	5
 14371  001CFC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14372  001CFE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14373  001D02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14374  001D06  0E00               	movlw	0
 14375  001D08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14376  001D0A  0E02               	movlw	2
 14377  001D0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14378  001D0E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14379                           
 14380                           ;usb_device.c: 2893: }
 14381  001D12  D006               	goto	l375
 14382  001D14                     l374:
 14383                           
 14384                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14385  001D14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14386  001D18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14387  001D1C  0E00               	movlw	0
 14388  001D1E  8CDB               	bsf	plusw2,6,c
 14389  001D20                     l375:
 14390                           
 14391                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14392  001D20  0E04               	movlw	4
 14393  001D22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14394  001D24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14395  001D26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14396  001D28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14397                           
 14398                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14399  001D2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14400  001D2C  D006               	goto	u9780
 14401  001D2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14402  001D32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14403  001D36  AEDF               	btfss	indf2,7,c
 14404  001D38  D030               	goto	l376
 14405  001D3A                     u9780:
 14406                           
 14407                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14408  001D3A  010D               	movlb	13	; () banked
 14409  001D3C  BF34               	btfsc	52,7,b	;volatile
 14410  001D3E  D00A               	goto	l379
 14411                           
 14412                           ; BSR set to: 13
 14413                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14414  001D40  5134               	movf	52,w,b	;volatile
 14415  001D42  0B0F               	andlw	15
 14416  001D44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14417  001D46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14418  001D48  0D01               	mullw	1
 14419  001D4A  0E6C               	movlw	low _ep_data_out
 14420  001D4C  24F3               	addwf	prodl,w,c
 14421  001D4E  6ED9               	movwf	fsr2l,c
 14422  001D50  0E01               	movlw	high _ep_data_out
 14423  001D52  D00A               	goto	L12
 14424  001D54                     l379:
 14425                           
 14426                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14427                           
 14428                           ; BSR set to: 1
 14429  001D54  010D               	movlb	13	; () banked
 14430  001D56  5134               	movf	52,w,b	;volatile
 14431  001D58  0B0F               	andlw	15
 14432  001D5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14433  001D5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14434  001D5E  0D01               	mullw	1
 14435  001D60  0E6F               	movlw	low _ep_data_in
 14436  001D62  24F3               	addwf	prodl,w,c
 14437  001D64  6ED9               	movwf	fsr2l,c
 14438  001D66  0E01               	movlw	high _ep_data_in
 14439  001D68                     L12:
 14440  001D68  20F4               	addwfc	prodh,w,c
 14441  001D6A  6EDA               	movwf	fsr2h,c
 14442  001D6C  0101               	movlb	1	; () banked
 14443  001D6E  92DF               	bcf	indf2,1,c
 14444                           
 14445                           ; BSR set to: 1
 14446                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14447                           
 14448                           ; BSR set to: 1
 14449  001D70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14450  001D74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14451  001D78  0E3B               	movlw	59
 14452  001D7A  16DF               	andwf	indf2,f,c
 14453                           
 14454                           ; BSR set to: 1
 14455                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14456  001D7C  0E00               	movlw	0
 14457  001D7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14458  001D80  0E05               	movlw	5
 14459  001D82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14460  001D84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14461  001D88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14462  001D8C  0E00               	movlw	0
 14463  001D8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14464  001D90  0E02               	movlw	2
 14465  001D92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14466  001D94  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14467                           
 14468                           ;usb_device.c: 2923: }
 14469  001D98  D006               	goto	l381
 14470  001D9A                     l376:
 14471                           
 14472                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14473  001D9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14474  001D9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14475  001DA2  0E3B               	movlw	59
 14476  001DA4  16DF               	andwf	indf2,f,c
 14477  001DA6                     l381:
 14478                           
 14479                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14480  001DA6  010D               	movlb	13	; () banked
 14481  001DA8  5134               	movf	52,w,b	;volatile
 14482  001DAA  0B0F               	andlw	15
 14483  001DAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14484  001DAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14485  001DB0  0D01               	mullw	1
 14486  001DB2  0E26               	movlw	38
 14487  001DB4  24F3               	addwf	prodl,w,c
 14488  001DB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14489  001DB8  0E0F               	movlw	15
 14490  001DBA  20F4               	addwfc	prodh,w,c
 14491  001DBC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14492                           
 14493                           ; BSR set to: 13
 14494                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14495  001DBE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14496  001DC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14497  001DC6  0EFE               	movlw	254
 14498  001DC8  16DF               	andwf	indf2,f,c
 14499                           
 14500                           ; BSR set to: 13
 14501  001DCA  0012               	return	
 14502  001DCC                     __end_of_USBStdFeatureReqHandler:
 14503                           	opt stack 0
 14504                           tblptru	equ	0xFF8
 14505                           tblptrh	equ	0xFF7
 14506                           tblptrl	equ	0xFF6
 14507                           tablat	equ	0xFF5
 14508                           prodh	equ	0xFF4
 14509                           prodl	equ	0xFF3
 14510                           intcon	equ	0xFF2
 14511                           intcon2	equ	0xFF1
 14512                           intcon3	equ	0xFF0
 14513                           indf0	equ	0xFEF
 14514                           postinc0	equ	0xFEE
 14515                           fsr0h	equ	0xFEA
 14516                           fsr0l	equ	0xFE9
 14517                           wreg	equ	0xFE8
 14518                           indf1	equ	0xFE7
 14519                           postdec1	equ	0xFE5
 14520                           plusw1	equ	0xFE3
 14521                           fsr1h	equ	0xFE2
 14522                           fsr1l	equ	0xFE1
 14523                           indf2	equ	0xFDF
 14524                           postinc2	equ	0xFDE
 14525                           postdec2	equ	0xFDD
 14526                           plusw2	equ	0xFDB
 14527                           fsr2h	equ	0xFDA
 14528                           fsr2l	equ	0xFD9
 14529                           status	equ	0xFD8
 14530                           
 14531 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14532 ;; Defined at:
 14533 ;;		line 54 in file "usb_events.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;  event           2   15[COMRAM] enum E6832
 14536 ;;  pdata           2   17[COMRAM] PTR void 
 14537 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14538 ;;		 -> BDT(48), 
 14539 ;;  size            2   19[COMRAM] unsigned int 
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;		None
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      unsigned char 
 14544 ;; Registers used:
 14545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14551 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14554 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14555 ;;Total ram usage:        8 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; Hardware stack levels required when called:    3
 14558 ;; This function calls:
 14559 ;;		_APP_DeviceCustomHIDInitialize
 14560 ;;		_APP_DeviceMSDInitialize
 14561 ;;		_MSDTransferTerminated
 14562 ;;		_SYSTEM_Initialize
 14563 ;;		_USBCheckHIDRequest
 14564 ;;		_USBCheckMSDRequest
 14565 ;; This function is called by:
 14566 ;;		_USBDeviceTasks
 14567 ;;		_USBStdSetCfgHandler
 14568 ;;		_USBSuspend
 14569 ;;		_USBWakeFromSuspend
 14570 ;;		_USBCtrlTrfSetupHandler
 14571 ;;		_USBCheckStdRequest
 14572 ;;		_USBStdFeatureReqHandler
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576                           	psect	text67
 14577  007272                     __ptext67:
 14578                           	opt stack 0
 14579  007272                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14580                           	opt stack 26
 14581                           
 14582                           ;usb_events.c: 56: switch((int)event)
 14583                           
 14584                           ;incstack = 0
 14585  007272  D019               	goto	l800
 14586  007274                     
 14587                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14588  007274  0E01               	movlw	1
 14589  007276  EC6B  F040         	call	_SYSTEM_Initialize
 14590                           
 14591                           ;usb_events.c: 79: break;
 14592  00727A  0012               	return	
 14593  00727C                     
 14594                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14595  00727C  0E02               	movlw	2
 14596  00727E  EC6B  F040         	call	_SYSTEM_Initialize
 14597                           
 14598                           ;usb_events.c: 90: break;
 14599  007282  0012               	return	
 14600  007284                     
 14601                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14602  007284  ECD9  F043         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14603                           
 14604                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14605  007288  EC65  F047         	call	_APP_DeviceMSDInitialize	;wreg free
 14606                           
 14607                           ;usb_events.c: 100: break;
 14608                           
 14609                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14610                           
 14611                           ;usb_events.c: 97: break;
 14612  00728C  0012               	return	
 14613  00728E                     
 14614                           ;usb_events.c: 105: USBCheckHIDRequest();
 14615  00728E  ECBC  F029         	call	_USBCheckHIDRequest	;wreg free
 14616                           
 14617                           ;usb_events.c: 108: USBCheckMSDRequest();
 14618  007292  ECAA  F02F         	call	_USBCheckMSDRequest	;wreg free
 14619                           
 14620                           ;usb_events.c: 112: break;
 14621                           
 14622                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14623                           
 14624                           ;usb_events.c: 109: break;
 14625  007296  0012               	return	
 14626  007298                     
 14627                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14628  007298  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14629  00729C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14630  0072A0  EC3E  F03F         	call	_MSDTransferTerminated	;wreg free
 14631                           
 14632                           ;usb_events.c: 129: }
 14633                           
 14634                           ;usb_events.c: 128: break;
 14635                           
 14636                           ;usb_events.c: 127: default:
 14637                           
 14638                           ;usb_events.c: 125: break;
 14639  0072A4  0012               	return	
 14640  0072A6                     l800:
 14641  0072A6  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14642  0072AA  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14643                           
 14644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14645                           ; Switch size 1, requested type "space"
 14646                           ; Number of cases is 2, Range of values is 0 to 127
 14647                           ; switch strategies available:
 14648                           ; Name         Instructions Cycles
 14649                           ; simple_byte            7     4 (average)
 14650                           ;	Chosen strategy is simple_byte
 14651  0072AE  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14652  0072B0  0A00               	xorlw	0	; case 0
 14653  0072B2  B4D8               	btfsc	status,2,c
 14654  0072B4  D004               	goto	l16269
 14655  0072B6  0A7F               	xorlw	127	; case 127
 14656  0072B8  A4D8               	btfss	status,2,c
 14657  0072BA  0012               	return	
 14658  0072BC  D01A               	goto	l16271
 14659  0072BE                     l16269:
 14660                           
 14661                           ; Switch size 1, requested type "space"
 14662                           ; Number of cases is 8, Range of values is 1 to 117
 14663                           ; switch strategies available:
 14664                           ; Name         Instructions Cycles
 14665                           ; simple_byte           25    13 (average)
 14666                           ;	Chosen strategy is simple_byte
 14667  0072BE  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14668  0072C0  0A01               	xorlw	1	; case 1
 14669  0072C2  B4D8               	btfsc	status,2,c
 14670  0072C4  D7DF               	goto	l806
 14671  0072C6  0A03               	xorlw	3	; case 2
 14672  0072C8  B4D8               	btfsc	status,2,c
 14673  0072CA  0012               	return	
 14674  0072CC  0A01               	xorlw	1	; case 3
 14675  0072CE  B4D8               	btfsc	status,2,c
 14676  0072D0  D7DE               	goto	l808
 14677  0072D2  0A06               	xorlw	6	; case 5
 14678  0072D4  B4D8               	btfsc	status,2,c
 14679  0072D6  D7E0               	goto	l810
 14680  0072D8  0A77               	xorlw	119	; case 114
 14681  0072DA  B4D8               	btfsc	status,2,c
 14682  0072DC  0012               	return	
 14683  0072DE  0A01               	xorlw	1	; case 115
 14684  0072E0  B4D8               	btfsc	status,2,c
 14685  0072E2  0012               	return	
 14686  0072E4  0A07               	xorlw	7	; case 116
 14687  0072E6  B4D8               	btfsc	status,2,c
 14688  0072E8  D7C9               	goto	l805
 14689  0072EA  0A01               	xorlw	1	; case 117
 14690  0072EC  A4D8               	btfss	status,2,c
 14691  0072EE  0012               	return	
 14692  0072F0  D7C1               	goto	l804
 14693  0072F2                     l16271:
 14694                           
 14695                           ; Switch size 1, requested type "space"
 14696                           ; Number of cases is 1, Range of values is 255 to 255
 14697                           ; switch strategies available:
 14698                           ; Name         Instructions Cycles
 14699                           ; simple_byte            4     3 (average)
 14700                           ;	Chosen strategy is simple_byte
 14701  0072F2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14702  0072F4  0AFF               	xorlw	255	; case 255
 14703  0072F6  0012               	return	
 14704  0072F8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14705                           	opt stack 0
 14706                           tblptru	equ	0xFF8
 14707                           tblptrh	equ	0xFF7
 14708                           tblptrl	equ	0xFF6
 14709                           tablat	equ	0xFF5
 14710                           prodh	equ	0xFF4
 14711                           prodl	equ	0xFF3
 14712                           intcon	equ	0xFF2
 14713                           intcon2	equ	0xFF1
 14714                           intcon3	equ	0xFF0
 14715                           indf0	equ	0xFEF
 14716                           postinc0	equ	0xFEE
 14717                           fsr0h	equ	0xFEA
 14718                           fsr0l	equ	0xFE9
 14719                           wreg	equ	0xFE8
 14720                           indf1	equ	0xFE7
 14721                           postdec1	equ	0xFE5
 14722                           plusw1	equ	0xFE3
 14723                           fsr1h	equ	0xFE2
 14724                           fsr1l	equ	0xFE1
 14725                           indf2	equ	0xFDF
 14726                           postinc2	equ	0xFDE
 14727                           postdec2	equ	0xFDD
 14728                           plusw2	equ	0xFDB
 14729                           fsr2h	equ	0xFDA
 14730                           fsr2l	equ	0xFD9
 14731                           status	equ	0xFD8
 14732                           
 14733 ;; *************** function _USBCheckMSDRequest *****************
 14734 ;; Defined at:
 14735 ;;		line 218 in file "usb_device_msd.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;		None
 14738 ;; Auto vars:     Size  Location     Type
 14739 ;;		None
 14740 ;; Return value:  Size  Location     Type
 14741 ;;                  1    wreg      void 
 14742 ;; Registers used:
 14743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14744 ;; Tracked objects:
 14745 ;;		On entry : 0/0
 14746 ;;		On exit  : 0/0
 14747 ;;		Unchanged: 0/0
 14748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14750 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14753 ;;Total ram usage:        4 bytes
 14754 ;; Hardware stack levels used:    1
 14755 ;; Hardware stack levels required when called:    1
 14756 ;; This function calls:
 14757 ;;		_USBTransferOnePacket
 14758 ;; This function is called by:
 14759 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14760 ;; This function uses a non-reentrant model
 14761 ;;
 14762                           
 14763                           	psect	text68
 14764  005F54                     __ptext68:
 14765                           	opt stack 0
 14766  005F54                     _USBCheckMSDRequest:
 14767                           	opt stack 27
 14768                           
 14769                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 14770                           
 14771                           ;incstack = 0
 14772  005F54  010D               	movlb	13	; () banked
 14773  005F56  5130               	movf	48,w,b	;volatile
 14774  005F58  0B1F               	andlw	31
 14775  005F5A  06E8               	decf	wreg,f,c
 14776  005F5C  A4D8               	btfss	status,2,c
 14777  005F5E  0012               	return	
 14778                           
 14779                           ; BSR set to: 13
 14780                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 14781                           
 14782                           ; BSR set to: 13
 14783                           
 14784                           ; BSR set to: 13
 14785                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 14786  005F60  5134               	movf	52,w,b	;volatile
 14787  005F62  A4D8               	btfss	status,2,c
 14788  005F64  0012               	return	
 14789  005F66  D04F               	goto	l529
 14790  005F68                     
 14791                           ; BSR set to: 13
 14792                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 14793                           
 14794                           ; BSR set to: 13
 14795  005F68  5132               	movf	50,w,b	;volatile
 14796  005F6A  1133               	iorwf	51,w,b	;volatile
 14797  005F6C  A4D8               	btfss	status,2,c
 14798  005F6E  0012               	return	
 14799                           
 14800                           ; BSR set to: 13
 14801  005F70  5136               	movf	54,w,b	;volatile
 14802  005F72  1137               	iorwf	55,w,b	;volatile
 14803  005F74  A4D8               	btfss	status,2,c
 14804  005F76  0012               	return	
 14805                           
 14806                           ; BSR set to: 13
 14807                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 14808                           
 14809                           ; BSR set to: 13
 14810                           
 14811                           ; BSR set to: 13
 14812                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 14813  005F78  0E00               	movlw	0
 14814  005F7A  0100               	movlb	0	; () banked
 14815  005F7C  6FED               	movwf	_MSD_State& (0+255),b
 14816                           
 14817                           ; BSR set to: 0
 14818                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 14819  005F7E  69EC               	setf	_MSDCommandState& (0+255),b
 14820                           
 14821                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 14822  005F80  0E00               	movlw	0
 14823  005F82  6FEB               	movwf	_MSDReadState& (0+255),b
 14824                           
 14825                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 14826  005F84  0E00               	movlw	0
 14827  005F86  6FEA               	movwf	_MSDWriteState& (0+255),b
 14828                           
 14829                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 14830  005F88  0E01               	movlw	1
 14831  005F8A  0101               	movlb	1	; () banked
 14832  005F8C  6F8E               	movwf	_MSDCBWValid& (0+255),b
 14833                           
 14834                           ; BSR set to: 1
 14835                           
 14836                           ; BSR set to: 1
 14837                           
 14838                           ; BSR set to: 1
 14839                           
 14840                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 14841  005F8E  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 14842  005F92  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 14843                           
 14844                           ; BSR set to: 1
 14845  005F96  500C               	movf	_USBCheckMSDRequest$2319,w,c
 14846  005F98  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 14847  005F9A  B4D8               	btfsc	status,2,c
 14848  005F9C  D00A               	goto	u7630
 14849                           
 14850                           ; BSR set to: 1
 14851                           
 14852                           ; BSR set to: 1
 14853                           
 14854                           ; BSR set to: 1
 14855                           
 14856                           ; BSR set to: 1
 14857  005F9E  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 14858  005FA2  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 14859                           
 14860                           ; BSR set to: 1
 14861                           
 14862                           ; BSR set to: 1
 14863  005FA6  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 14864  005FAA  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 14865  005FAE  BEDF               	btfsc	indf2,7,c
 14866  005FB0  D00F               	goto	l534
 14867  005FB2                     u7630:
 14868                           
 14869                           ; BSR set to: 1
 14870                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 14871                           
 14872                           ; BSR set to: 1
 14873  005FB2  0E00               	movlw	0
 14874  005FB4  6E01               	movwf	USBTransferOnePacket@dir,c
 14875  005FB6  0E40               	movlw	64
 14876  005FB8  6E02               	movwf	USBTransferOnePacket@data,c
 14877  005FBA  0E0D               	movlw	13
 14878  005FBC  6E03               	movwf	USBTransferOnePacket@data+1,c
 14879  005FBE  0E40               	movlw	64
 14880  005FC0  6E04               	movwf	USBTransferOnePacket@len,c
 14881  005FC2  0E02               	movlw	2
 14882  005FC4  ECF2  F025         	call	_USBTransferOnePacket
 14883  005FC8  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 14884  005FCC  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 14885  005FD0                     l534:
 14886                           
 14887                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 14888  005FD0  0E80               	movlw	128
 14889  005FD2  0100               	movlb	0	; () banked
 14890  005FD4  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14891                           
 14892                           ;usb_device_msd.c: 263: break;
 14893  005FD6  0012               	return	
 14894  005FD8                     
 14895                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 14896                           
 14897                           ; BSR set to: 0
 14898  005FD8  010D               	movlb	13	; () banked
 14899  005FDA  5132               	movf	50,w,b	;volatile
 14900  005FDC  1133               	iorwf	51,w,b	;volatile
 14901  005FDE  A4D8               	btfss	status,2,c
 14902  005FE0  0012               	return	
 14903                           
 14904                           ; BSR set to: 13
 14905  005FE2  0536               	decf	54,w,b	;volatile
 14906  005FE4  1137               	iorwf	55,w,b	;volatile
 14907  005FE6  A4D8               	btfss	status,2,c
 14908  005FE8  0012               	return	
 14909                           
 14910                           ; BSR set to: 13
 14911                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 14912                           
 14913                           ; BSR set to: 13
 14914                           
 14915                           ; BSR set to: 13
 14916                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 14917  005FEA  0E00               	movlw	0
 14918  005FEC  6F38               	movwf	56,b	;volatile
 14919                           
 14920                           ; BSR set to: 13
 14921                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14922  005FEE  0E38               	movlw	56
 14923  005FF0  0100               	movlb	0	; () banked
 14924  005FF2  6FCB               	movwf	_inPipes& (0+255),b
 14925  005FF4  0E0D               	movlw	13
 14926  005FF6  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14927                           
 14928                           ; BSR set to: 0
 14929  005FF8  0E00               	movlw	0
 14930  005FFA  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14931  005FFC  0E01               	movlw	1
 14932  005FFE  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14933                           
 14934                           ; BSR set to: 0
 14935  006000  0EC1               	movlw	193
 14936  006002  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;usb_device_msd.c: 278: }
 14940                           
 14941                           ;usb_device_msd.c: 277: break;
 14942  006004  0012               	return	
 14943  006006                     l529:
 14944                           
 14945                           ; BSR set to: 0
 14946  006006  010D               	movlb	13	; () banked
 14947  006008  5131               	movf	49,w,b	;volatile
 14948                           
 14949                           ; Switch size 1, requested type "space"
 14950                           ; Number of cases is 2, Range of values is 254 to 255
 14951                           ; switch strategies available:
 14952                           ; Name         Instructions Cycles
 14953                           ; simple_byte            7     4 (average)
 14954                           ;	Chosen strategy is simple_byte
 14955  00600A  0AFE               	xorlw	254	; case 254
 14956  00600C  B4D8               	btfsc	status,2,c
 14957  00600E  D7E4               	goto	l546
 14958  006010  0A01               	xorlw	1	; case 255
 14959  006012  A4D8               	btfss	status,2,c
 14960  006014  0012               	return	
 14961  006016  D7A8               	goto	l530
 14962  006018                     __end_of_USBCheckMSDRequest:
 14963                           	opt stack 0
 14964                           tblptru	equ	0xFF8
 14965                           tblptrh	equ	0xFF7
 14966                           tblptrl	equ	0xFF6
 14967                           tablat	equ	0xFF5
 14968                           prodh	equ	0xFF4
 14969                           prodl	equ	0xFF3
 14970                           intcon	equ	0xFF2
 14971                           intcon2	equ	0xFF1
 14972                           intcon3	equ	0xFF0
 14973                           indf0	equ	0xFEF
 14974                           postinc0	equ	0xFEE
 14975                           fsr0h	equ	0xFEA
 14976                           fsr0l	equ	0xFE9
 14977                           wreg	equ	0xFE8
 14978                           indf1	equ	0xFE7
 14979                           postdec1	equ	0xFE5
 14980                           plusw1	equ	0xFE3
 14981                           fsr1h	equ	0xFE2
 14982                           fsr1l	equ	0xFE1
 14983                           indf2	equ	0xFDF
 14984                           postinc2	equ	0xFDE
 14985                           postdec2	equ	0xFDD
 14986                           plusw2	equ	0xFDB
 14987                           fsr2h	equ	0xFDA
 14988                           fsr2l	equ	0xFD9
 14989                           status	equ	0xFD8
 14990                           
 14991 ;; *************** function _USBCheckHIDRequest *****************
 14992 ;; Defined at:
 14993 ;;		line 153 in file "usb_device_hid.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;		None
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;		None
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  1    wreg      void 
 15000 ;; Registers used:
 15001 ;;		wreg, status,2, status,0
 15002 ;; Tracked objects:
 15003 ;;		On entry : 0/0
 15004 ;;		On exit  : 0/0
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;Total ram usage:        0 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; This function calls:
 15014 ;;		Nothing
 15015 ;; This function is called by:
 15016 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text69
 15021  005378                     __ptext69:
 15022                           	opt stack 0
 15023  005378                     _USBCheckHIDRequest:
 15024                           	opt stack 28
 15025                           
 15026                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15027                           
 15028                           ;incstack = 0
 15029  005378  010D               	movlb	13	; () banked
 15030  00537A  5130               	movf	48,w,b	;volatile
 15031  00537C  0B1F               	andlw	31
 15032  00537E  06E8               	decf	wreg,f,c
 15033  005380  A4D8               	btfss	status,2,c
 15034  005382  0012               	return	
 15035                           
 15036                           ; BSR set to: 13
 15037                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15038                           
 15039                           ; BSR set to: 13
 15040                           
 15041                           ; BSR set to: 13
 15042  005384  5134               	movf	52,w,b	;volatile
 15043  005386  A4D8               	btfss	status,2,c
 15044  005388  0012               	return	
 15045                           
 15046                           ; BSR set to: 13
 15047                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15048                           
 15049                           ; BSR set to: 13
 15050                           
 15051                           ; BSR set to: 13
 15052  00538A  0E06               	movlw	6
 15053  00538C  1931               	xorwf	49,w,b	;volatile
 15054  00538E  B4D8               	btfsc	status,2,c
 15055  005390  D01A               	goto	l411
 15056  005392  D022               	goto	l414
 15057  005394                     
 15058                           ; BSR set to: 13
 15059                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15060                           
 15061                           ; BSR set to: 13
 15062  005394  0100               	movlb	0	; () banked
 15063  005396  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 15064  005398  A4D8               	btfss	status,2,c
 15065  00539A  D01E               	goto	l414
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 15069  00539C  0EBA               	movlw	low (_configDescriptor1+18)
 15070  00539E  6FCB               	movwf	_inPipes& (0+255),b
 15071  0053A0  0E9E               	movlw	high (_configDescriptor1+18)
 15072  0053A2  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15073                           
 15074                           ; BSR set to: 0
 15075  0053A4  0E00               	movlw	0
 15076  0053A6  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15077  0053A8  0E09               	movlw	9
 15078  0053AA  D00B               	goto	L13
 15079  0053AC                     l10963:
 15080                           
 15081                           ; BSR set to: 0
 15082  0053AC  0EC0               	movlw	192
 15083  0053AE  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15084                           
 15085                           ; BSR set to: 0
 15086                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 15087  0053B0  D013               	goto	l414
 15088  0053B2                     
 15089                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 15090                           
 15091                           ; BSR set to: 0
 15092  0053B2  0E6E               	movlw	low _hid_rpt01
 15093  0053B4  0100               	movlb	0	; () banked
 15094  0053B6  6FCB               	movwf	_inPipes& (0+255),b
 15095  0053B8  0E9F               	movlw	high _hid_rpt01
 15096  0053BA  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15097                           
 15098                           ; BSR set to: 0
 15099  0053BC  0E00               	movlw	0
 15100  0053BE  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15101  0053C0  0E1D               	movlw	29
 15102  0053C2                     L13:
 15103  0053C2  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15104  0053C4  D7F3               	goto	l10963
 15105  0053C6                     l411:
 15106                           
 15107                           ; BSR set to: 0
 15108  0053C6  010D               	movlb	13	; () banked
 15109  0053C8  5133               	movf	51,w,b	;volatile
 15110                           
 15111                           ; Switch size 1, requested type "space"
 15112                           ; Number of cases is 3, Range of values is 33 to 35
 15113                           ; switch strategies available:
 15114                           ; Name         Instructions Cycles
 15115                           ; simple_byte           10     6 (average)
 15116                           ;	Chosen strategy is simple_byte
 15117  0053CA  0A21               	xorlw	33	; case 33
 15118  0053CC  B4D8               	btfsc	status,2,c
 15119  0053CE  D7E2               	goto	l412
 15120  0053D0  0A03               	xorlw	3	; case 34
 15121  0053D2  B4D8               	btfsc	status,2,c
 15122  0053D4  D7EE               	goto	l415
 15123  0053D6  0A01               	xorlw	1	; case 35
 15124  0053D8                     l414:
 15125                           
 15126                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15127                           
 15128                           ; BSR set to: 13
 15129                           
 15130                           ; BSR set to: 13
 15131  0053D8  010D               	movlb	13	; () banked
 15132  0053DA  3930               	swapf	48,w,b	;volatile
 15133  0053DC  32E8               	rrcf	wreg,f,c
 15134  0053DE  0B03               	andlw	3
 15135  0053E0  06E8               	decf	wreg,f,c
 15136  0053E2  A4D8               	btfss	status,2,c
 15137  0053E4  0012               	return	
 15138  0053E6  D024               	goto	l418
 15139  0053E8                     
 15140                           ; BSR set to: 13
 15141                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15142                           
 15143                           ; BSR set to: 13
 15144  0053E8  0EB2               	movlw	low _idle_rate
 15145  0053EA  0100               	movlb	0	; () banked
 15146  0053EC  6FCB               	movwf	_inPipes& (0+255),b
 15147  0053EE  0E01               	movlw	high _idle_rate
 15148  0053F0  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15149                           
 15150                           ; BSR set to: 0
 15151  0053F2  0E00               	movlw	0
 15152  0053F4  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15153  0053F6  0E01               	movlw	1
 15154  0053F8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15155                           
 15156                           ; BSR set to: 0
 15157  0053FA  0EC1               	movlw	193
 15158  0053FC  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15159                           
 15160                           ;usb_device_hid.c: 223: break;
 15161  0053FE  0012               	return	
 15162  005400                     
 15163                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15164                           
 15165                           ; BSR set to: 0
 15166  005400  0E80               	movlw	128
 15167  005402  0100               	movlb	0	; () banked
 15168  005404  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15169                           
 15170                           ; BSR set to: 0
 15171                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15172  005406  CD33 F1B2          	movff	3379,_idle_rate	;volatile
 15173                           
 15174                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15175  00540A  0012               	return	
 15176  00540C                     
 15177                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15178                           
 15179                           ; BSR set to: 0
 15180  00540C  0EB1               	movlw	low _active_protocol
 15181  00540E  0100               	movlb	0	; () banked
 15182  005410  6FCB               	movwf	_inPipes& (0+255),b
 15183  005412  0E01               	movlw	high _active_protocol
 15184  005414  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15185                           
 15186                           ; BSR set to: 0
 15187  005416  0E00               	movlw	0
 15188  005418  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15189  00541A  0E01               	movlw	1
 15190  00541C  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15191                           
 15192                           ; BSR set to: 0
 15193  00541E  0E81               	movlw	129
 15194  005420  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15195                           
 15196                           ;usb_device_hid.c: 234: break;
 15197  005422  0012               	return	
 15198  005424                     
 15199                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15200                           
 15201                           ; BSR set to: 0
 15202  005424  0E80               	movlw	128
 15203  005426  0100               	movlb	0	; () banked
 15204  005428  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15205                           
 15206                           ; BSR set to: 0
 15207                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15208  00542A  CD32 F1B1          	movff	3378,_active_protocol	;volatile
 15209                           
 15210                           ; BSR set to: 0
 15211                           ;usb_device_hid.c: 239: }
 15212                           
 15213                           ;usb_device_hid.c: 238: break;
 15214  00542E  0012               	return	
 15215  005430                     l418:
 15216                           
 15217                           ; BSR set to: 0
 15218  005430  010D               	movlb	13	; () banked
 15219  005432  5131               	movf	49,w,b	;volatile
 15220                           
 15221                           ; Switch size 1, requested type "space"
 15222                           ; Number of cases is 6, Range of values is 1 to 11
 15223                           ; switch strategies available:
 15224                           ; Name         Instructions Cycles
 15225                           ; simple_byte           19    10 (average)
 15226                           ;	Chosen strategy is simple_byte
 15227  005434  0A01               	xorlw	1	; case 1
 15228  005436  B4D8               	btfsc	status,2,c
 15229  005438  0012               	return	
 15230  00543A  0A03               	xorlw	3	; case 2
 15231  00543C  B4D8               	btfsc	status,2,c
 15232  00543E  D7D4               	goto	l422
 15233  005440  0A01               	xorlw	1	; case 3
 15234  005442  B4D8               	btfsc	status,2,c
 15235  005444  D7E3               	goto	l424
 15236  005446  0A0A               	xorlw	10	; case 9
 15237  005448  B4D8               	btfsc	status,2,c
 15238  00544A  0012               	return	
 15239  00544C  0A03               	xorlw	3	; case 10
 15240  00544E  B4D8               	btfsc	status,2,c
 15241  005450  D7D7               	goto	l423
 15242  005452  0A01               	xorlw	1	; case 11
 15243  005454  A4D8               	btfss	status,2,c
 15244  005456  0012               	return	
 15245  005458  D7E5               	goto	l425
 15246  00545A                     __end_of_USBCheckHIDRequest:
 15247                           	opt stack 0
 15248                           tblptru	equ	0xFF8
 15249                           tblptrh	equ	0xFF7
 15250                           tblptrl	equ	0xFF6
 15251                           tablat	equ	0xFF5
 15252                           prodh	equ	0xFF4
 15253                           prodl	equ	0xFF3
 15254                           intcon	equ	0xFF2
 15255                           intcon2	equ	0xFF1
 15256                           intcon3	equ	0xFF0
 15257                           indf0	equ	0xFEF
 15258                           postinc0	equ	0xFEE
 15259                           fsr0h	equ	0xFEA
 15260                           fsr0l	equ	0xFE9
 15261                           wreg	equ	0xFE8
 15262                           indf1	equ	0xFE7
 15263                           postdec1	equ	0xFE5
 15264                           plusw1	equ	0xFE3
 15265                           fsr1h	equ	0xFE2
 15266                           fsr1l	equ	0xFE1
 15267                           indf2	equ	0xFDF
 15268                           postinc2	equ	0xFDE
 15269                           postdec2	equ	0xFDD
 15270                           plusw2	equ	0xFDB
 15271                           fsr2h	equ	0xFDA
 15272                           fsr2l	equ	0xFD9
 15273                           status	equ	0xFD8
 15274                           
 15275 ;; *************** function _SYSTEM_Initialize *****************
 15276 ;; Defined at:
 15277 ;;		line 80 in file "system.c"
 15278 ;; Parameters:    Size  Location     Type
 15279 ;;  state           1    wreg     enum E6623
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;  state           1    4[COMRAM] enum E6623
 15282 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15283 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15284 ;; Return value:  Size  Location     Type
 15285 ;;                  1    wreg      void 
 15286 ;; Registers used:
 15287 ;;		wreg, status,2, status,0
 15288 ;; Tracked objects:
 15289 ;;		On entry : 0/0
 15290 ;;		On exit  : 0/0
 15291 ;;		Unchanged: 0/0
 15292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15294 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15296 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15297 ;;Total ram usage:        5 bytes
 15298 ;; Hardware stack levels used:    1
 15299 ;; This function calls:
 15300 ;;		Nothing
 15301 ;; This function is called by:
 15302 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15303 ;;		_main
 15304 ;; This function uses a non-reentrant model
 15305 ;;
 15306                           
 15307                           	psect	text70
 15308  0080D6                     __ptext70:
 15309                           	opt stack 0
 15310  0080D6                     _SYSTEM_Initialize:
 15311                           	opt stack 28
 15312                           
 15313                           ;incstack = 0
 15314                           ;SYSTEM_Initialize@state stored from wreg
 15315  0080D6  6E05               	movwf	SYSTEM_Initialize@state,c
 15316                           
 15317                           ;system.c: 82: switch(state)
 15318  0080D8  D01D               	goto	l926
 15319  0080DA                     
 15320                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15321  0080DA  0E02               	movlw	2
 15322  0080DC  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15323  0080DE  0E58               	movlw	88
 15324  0080E0  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15325                           
 15326                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15327  0080E2  8C9B               	bsf	3995,6,c	;volatile
 15328  0080E4                     l11149:
 15329  0080E4  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15330  0080E6  A0D8               	btfss	status,0,c
 15331  0080E8  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15332  0080EA  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15333  0080EC  E1FB               	bnz	l11149
 15334  0080EE  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15335  0080F0  B4D8               	btfsc	status,2,c
 15336  0080F2  0012               	return	
 15337  0080F4  D7F7               	goto	l929
 15338  0080F6                     
 15339                           ;system.c: 119: OSCCON = 0x70;
 15340  0080F6  0E70               	movlw	112
 15341  0080F8  6ED3               	movwf	4051,c	;volatile
 15342                           
 15343                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15344  0080FA  0E03               	movlw	3
 15345  0080FC  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 15346  0080FE  0E20               	movlw	32
 15347  008100  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 15348  008102                     l11153:
 15349  008102  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 15350  008104  A0D8               	btfss	status,0,c
 15351  008106  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 15352  008108  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 15353  00810A  E1FB               	bnz	l11153
 15354  00810C  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 15355  00810E  B4D8               	btfsc	status,2,c
 15356  008110  0012               	return	
 15357  008112  D7F7               	goto	l935
 15358  008114                     l926:
 15359  008114  5005               	movf	SYSTEM_Initialize@state,w,c
 15360                           
 15361                           ; Switch size 1, requested type "space"
 15362                           ; Number of cases is 3, Range of values is 0 to 2
 15363                           ; switch strategies available:
 15364                           ; Name         Instructions Cycles
 15365                           ; simple_byte           10     6 (average)
 15366                           ;	Chosen strategy is simple_byte
 15367  008116  0A00               	xorlw	0	; case 0
 15368  008118  B4D8               	btfsc	status,2,c
 15369  00811A  D7DF               	goto	l927
 15370  00811C  0A01               	xorlw	1	; case 1
 15371  00811E  B4D8               	btfsc	status,2,c
 15372  008120  0012               	return	
 15373  008122  0A03               	xorlw	3	; case 2
 15374  008124  A4D8               	btfss	status,2,c
 15375  008126  0012               	return	
 15376  008128  D7E6               	goto	l933
 15377  00812A                     __end_of_SYSTEM_Initialize:
 15378                           	opt stack 0
 15379                           tblptru	equ	0xFF8
 15380                           tblptrh	equ	0xFF7
 15381                           tblptrl	equ	0xFF6
 15382                           tablat	equ	0xFF5
 15383                           prodh	equ	0xFF4
 15384                           prodl	equ	0xFF3
 15385                           intcon	equ	0xFF2
 15386                           intcon2	equ	0xFF1
 15387                           intcon3	equ	0xFF0
 15388                           indf0	equ	0xFEF
 15389                           postinc0	equ	0xFEE
 15390                           fsr0h	equ	0xFEA
 15391                           fsr0l	equ	0xFE9
 15392                           wreg	equ	0xFE8
 15393                           indf1	equ	0xFE7
 15394                           postdec1	equ	0xFE5
 15395                           plusw1	equ	0xFE3
 15396                           fsr1h	equ	0xFE2
 15397                           fsr1l	equ	0xFE1
 15398                           indf2	equ	0xFDF
 15399                           postinc2	equ	0xFDE
 15400                           postdec2	equ	0xFDD
 15401                           plusw2	equ	0xFDB
 15402                           fsr2h	equ	0xFDA
 15403                           fsr2l	equ	0xFD9
 15404                           status	equ	0xFD8
 15405                           
 15406 ;; *************** function _MSDTransferTerminated *****************
 15407 ;; Defined at:
 15408 ;;		line 1674 in file "usb_device_msd.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;  handle          2   11[COMRAM] PTR void 
 15411 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15412 ;;		 -> BDT(48), 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;		None
 15415 ;; Return value:  Size  Location     Type
 15416 ;;                  1    wreg      void 
 15417 ;; Registers used:
 15418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15419 ;; Tracked objects:
 15420 ;;		On entry : 0/0
 15421 ;;		On exit  : 0/0
 15422 ;;		Unchanged: 0/0
 15423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15428 ;;Total ram usage:        4 bytes
 15429 ;; Hardware stack levels used:    1
 15430 ;; Hardware stack levels required when called:    1
 15431 ;; This function calls:
 15432 ;;		_USBStallEndpoint
 15433 ;;		_USBTransferOnePacket
 15434 ;; This function is called by:
 15435 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439                           	psect	text71
 15440  007E7C                     __ptext71:
 15441                           	opt stack 0
 15442  007E7C                     _MSDTransferTerminated:
 15443                           	opt stack 27
 15444                           
 15445                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15446                           
 15447                           ;incstack = 0
 15448  007E7C  0101               	movlb	1	; () banked
 15449  007E7E  518E               	movf	_MSDCBWValid& (0+255),w,b
 15450  007E80  A4D8               	btfss	status,2,c
 15451  007E82  D00B               	goto	l764
 15452                           
 15453                           ; BSR set to: 1
 15454                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15455  007E84  0E01               	movlw	1
 15456  007E86  6E01               	movwf	USBStallEndpoint@dir,c
 15457  007E88  0E02               	movlw	2
 15458  007E8A  ECE7  F023         	call	_USBStallEndpoint
 15459                           
 15460                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15461  007E8E  0E00               	movlw	0
 15462  007E90  6E01               	movwf	USBStallEndpoint@dir,c
 15463  007E92  0E02               	movlw	2
 15464  007E94  ECE7  F023         	call	_USBStallEndpoint
 15465                           
 15466                           ;usb_device_msd.c: 1681: }
 15467  007E98  0012               	return	
 15468  007E9A                     l764:
 15469  007E9A  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15470  007E9E  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15471  007EA2  500E               	movf	_MSDTransferTerminated$2407,w,c
 15472  007EA4  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15473  007EA6  E114               	bnz	l767
 15474  007EA8  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15475  007EAA  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15476  007EAC  A4D8               	btfss	status,2,c
 15477  007EAE  0012               	return	
 15478                           
 15479                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15480  007EB0  0E00               	movlw	0
 15481  007EB2  6E01               	movwf	USBTransferOnePacket@dir,c
 15482  007EB4  0E40               	movlw	64
 15483  007EB6  6E02               	movwf	USBTransferOnePacket@data,c
 15484  007EB8  0E0D               	movlw	13
 15485  007EBA  6E03               	movwf	USBTransferOnePacket@data+1,c
 15486  007EBC  0E40               	movlw	64
 15487  007EBE  6E04               	movwf	USBTransferOnePacket@len,c
 15488  007EC0  0E02               	movlw	2
 15489  007EC2  ECF2  F025         	call	_USBTransferOnePacket
 15490  007EC6  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15491  007ECA  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15492  007ECE  0012               	return	
 15493  007ED0                     l767:
 15494  007ED0  0012               	return		;funcret
 15495  007ED2                     __end_of_MSDTransferTerminated:
 15496                           	opt stack 0
 15497                           tblptru	equ	0xFF8
 15498                           tblptrh	equ	0xFF7
 15499                           tblptrl	equ	0xFF6
 15500                           tablat	equ	0xFF5
 15501                           prodh	equ	0xFF4
 15502                           prodl	equ	0xFF3
 15503                           intcon	equ	0xFF2
 15504                           intcon2	equ	0xFF1
 15505                           intcon3	equ	0xFF0
 15506                           indf0	equ	0xFEF
 15507                           postinc0	equ	0xFEE
 15508                           fsr0h	equ	0xFEA
 15509                           fsr0l	equ	0xFE9
 15510                           wreg	equ	0xFE8
 15511                           indf1	equ	0xFE7
 15512                           postdec1	equ	0xFE5
 15513                           plusw1	equ	0xFE3
 15514                           fsr1h	equ	0xFE2
 15515                           fsr1l	equ	0xFE1
 15516                           indf2	equ	0xFDF
 15517                           postinc2	equ	0xFDE
 15518                           postdec2	equ	0xFDD
 15519                           plusw2	equ	0xFDB
 15520                           fsr2h	equ	0xFDA
 15521                           fsr2l	equ	0xFD9
 15522                           status	equ	0xFD8
 15523                           
 15524 ;; *************** function _APP_DeviceMSDInitialize *****************
 15525 ;; Defined at:
 15526 ;;		line 84 in file "app_device_msd.c"
 15527 ;; Parameters:    Size  Location     Type
 15528 ;;		None
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;		None
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  1    wreg      void 
 15533 ;; Registers used:
 15534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/0
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15544 ;;Total ram usage:        0 bytes
 15545 ;; Hardware stack levels used:    1
 15546 ;; Hardware stack levels required when called:    2
 15547 ;; This function calls:
 15548 ;;		_USBEnableEndpoint
 15549 ;;		_USBMSDInit
 15550 ;; This function is called by:
 15551 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15552 ;; This function uses a non-reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text72
 15556  008ECA                     __ptext72:
 15557                           	opt stack 0
 15558  008ECA                     _APP_DeviceMSDInitialize:
 15559                           	opt stack 26
 15560                           
 15561                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15562                           
 15563                           ;incstack = 0
 15564  008ECA  0E1E               	movlw	30
 15565  008ECC  6E09               	movwf	USBEnableEndpoint@options,c
 15566  008ECE  0E02               	movlw	2
 15567  008ED0  EC17  F043         	call	_USBEnableEndpoint
 15568                           
 15569                           ;app_device_msd.c: 93: USBMSDInit();
 15570  008ED4  EC71  F025         	call	_USBMSDInit	;wreg free
 15571  008ED8  0012               	return		;funcret
 15572  008EDA                     __end_of_APP_DeviceMSDInitialize:
 15573                           	opt stack 0
 15574                           tblptru	equ	0xFF8
 15575                           tblptrh	equ	0xFF7
 15576                           tblptrl	equ	0xFF6
 15577                           tablat	equ	0xFF5
 15578                           prodh	equ	0xFF4
 15579                           prodl	equ	0xFF3
 15580                           intcon	equ	0xFF2
 15581                           intcon2	equ	0xFF1
 15582                           intcon3	equ	0xFF0
 15583                           indf0	equ	0xFEF
 15584                           postinc0	equ	0xFEE
 15585                           fsr0h	equ	0xFEA
 15586                           fsr0l	equ	0xFE9
 15587                           wreg	equ	0xFE8
 15588                           indf1	equ	0xFE7
 15589                           postdec1	equ	0xFE5
 15590                           plusw1	equ	0xFE3
 15591                           fsr1h	equ	0xFE2
 15592                           fsr1l	equ	0xFE1
 15593                           indf2	equ	0xFDF
 15594                           postinc2	equ	0xFDE
 15595                           postdec2	equ	0xFDD
 15596                           plusw2	equ	0xFDB
 15597                           fsr2h	equ	0xFDA
 15598                           fsr2l	equ	0xFD9
 15599                           status	equ	0xFD8
 15600                           
 15601 ;; *************** function _USBMSDInit *****************
 15602 ;; Defined at:
 15603 ;;		line 142 in file "usb_device_msd.c"
 15604 ;; Parameters:    Size  Location     Type
 15605 ;;		None
 15606 ;; Auto vars:     Size  Location     Type
 15607 ;;		None
 15608 ;; Return value:  Size  Location     Type
 15609 ;;                  1    wreg      void 
 15610 ;; Registers used:
 15611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15612 ;; Tracked objects:
 15613 ;;		On entry : 0/0
 15614 ;;		On exit  : 0/0
 15615 ;;		Unchanged: 0/0
 15616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15619 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15620 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15621 ;;Total ram usage:        3 bytes
 15622 ;; Hardware stack levels used:    1
 15623 ;; Hardware stack levels required when called:    1
 15624 ;; This function calls:
 15625 ;;		_ExternalFlash_MediaDetect
 15626 ;;		_ExternalFlash_MediaInitialize
 15627 ;;		_ResetSenseData
 15628 ;;		_USBTransferOnePacket
 15629 ;; This function is called by:
 15630 ;;		_APP_DeviceMSDInitialize
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text73
 15635  004AE2                     __ptext73:
 15636                           	opt stack 0
 15637  004AE2                     _USBMSDInit:
 15638                           	opt stack 26
 15639                           
 15640                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15641                           
 15642                           ;incstack = 0
 15643  004AE2  0E00               	movlw	0
 15644  004AE4  6E01               	movwf	USBTransferOnePacket@dir,c
 15645  004AE6  0E40               	movlw	64
 15646  004AE8  6E02               	movwf	USBTransferOnePacket@data,c
 15647  004AEA  0E0D               	movlw	13
 15648  004AEC  6E03               	movwf	USBTransferOnePacket@data+1,c
 15649  004AEE  0E40               	movlw	64
 15650  004AF0  6E04               	movwf	USBTransferOnePacket@len,c
 15651  004AF2  0E02               	movlw	2
 15652  004AF4  ECF2  F025         	call	_USBTransferOnePacket
 15653  004AF8  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15654  004AFC  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15655  004B00  C0D5  F0DD         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15656  004B04  C0D6  F0DE         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15657                           
 15658                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 15659  004B08  0E00               	movlw	0
 15660  004B0A  0100               	movlb	0	; () banked
 15661  004B0C  6FED               	movwf	_MSD_State& (0+255),b
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 15665  004B0E  69EC               	setf	_MSDCommandState& (0+255),b
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 15669  004B10  0E00               	movlw	0
 15670  004B12  6FEB               	movwf	_MSDReadState& (0+255),b
 15671                           
 15672                           ; BSR set to: 0
 15673                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 15674  004B14  0E00               	movlw	0
 15675  004B16  6FEA               	movwf	_MSDWriteState& (0+255),b
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 15679  004B18  0E00               	movlw	0
 15680  004B1A  6FE7               	movwf	_MSDHostNoData& (0+255),b
 15681                           
 15682                           ; BSR set to: 0
 15683                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 15684  004B1C  0E00               	movlw	0
 15685  004B1E  0101               	movlb	1	; () banked
 15686  004B20  6F5A               	movwf	_gblNumBLKS& (0+255),b
 15687  004B22  0E00               	movlw	0
 15688  004B24  6F5B               	movwf	(_gblNumBLKS+1)& (0+255),b
 15689  004B26  0E00               	movlw	0
 15690  004B28  6F5C               	movwf	(_gblNumBLKS+2)& (0+255),b
 15691  004B2A  0E00               	movlw	0
 15692  004B2C  6F5D               	movwf	(_gblNumBLKS+3)& (0+255),b
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 15696  004B2E  0E00               	movlw	0
 15697  004B30  6F56               	movwf	_gblBLKLen& (0+255),b
 15698  004B32  0E00               	movlw	0
 15699  004B34  6F57               	movwf	(_gblBLKLen+1)& (0+255),b
 15700  004B36  0E00               	movlw	0
 15701  004B38  6F58               	movwf	(_gblBLKLen+2)& (0+255),b
 15702  004B3A  0E00               	movlw	0
 15703  004B3C  6F59               	movwf	(_gblBLKLen+3)& (0+255),b
 15704                           
 15705                           ; BSR set to: 1
 15706                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 15707  004B3E  0E01               	movlw	1
 15708  004B40  6F8E               	movwf	_MSDCBWValid& (0+255),b
 15709                           
 15710                           ; BSR set to: 1
 15711                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 15712  004B42  0E00               	movlw	0
 15713  004B44  6F83               	movwf	(_gblMediaPresent+1)& (0+255),b
 15714  004B46  0E00               	movlw	0
 15715  004B48  6F82               	movwf	_gblMediaPresent& (0+255),b
 15716                           
 15717                           ; BSR set to: 1
 15718                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 15719  004B4A  0E00               	movlw	0
 15720  004B4C  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 15721  004B4E  D046               	goto	l518
 15722  004B50                     
 15723                           ; BSR set to: 1
 15724                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 15725                           
 15726                           ; BSR set to: 1
 15727  004B50  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15728  004B52  0D01               	mullw	1
 15729  004B54  0EE8               	movlw	low _SoftDetach
 15730  004B56  24F3               	addwf	prodl,w,c
 15731  004B58  6ED9               	movwf	fsr2l,c
 15732  004B5A  0E00               	movlw	high _SoftDetach
 15733  004B5C  20F4               	addwfc	prodh,w,c
 15734  004B5E  6EDA               	movwf	fsr2h,c
 15735  004B60  0E00               	movlw	0
 15736  004B62  6EDF               	movwf	indf2,c
 15737                           
 15738                           ; BSR set to: 1
 15739                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 15740  004B64  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 15741  004B68  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 15742  004B6C  D801               	call	u7208
 15743  004B6E  D009               	goto	u7209
 15744  004B70                     u7208:
 15745  004B70  0005               	push	
 15746  004B72  6EFA               	movwf	pclath,c
 15747  004B74  51B9               	movf	(_LUN+6)& (0+255),w,b
 15748  004B76  6EFD               	movwf	tosl,c
 15749  004B78  51BA               	movf	(_LUN+7)& (0+255),w,b
 15750  004B7A  6EFE               	movwf	tosh,c
 15751  004B7C  6AFF               	clrf	tosu,c
 15752  004B7E  50FA               	movf	pclath,w,c
 15753  004B80  0012               	return		;indir
 15754  004B82                     u7209:
 15755  004B82  0900               	iorlw	0
 15756  004B84  B4D8               	btfsc	status,2,c
 15757  004B86  D026               	goto	l521
 15758                           
 15759                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 15760  004B88  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 15761  004B8C  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 15762  004B90  D801               	call	u7228
 15763  004B92  D00A               	goto	u7229
 15764  004B94                     u7228:
 15765  004B94  0005               	push	
 15766  004B96  6EFA               	movwf	pclath,c
 15767  004B98  0101               	movlb	1	; () banked
 15768  004B9A  51B3               	movf	_LUN& (0+255),w,b
 15769  004B9C  6EFD               	movwf	tosl,c
 15770  004B9E  51B4               	movf	(_LUN+1)& (0+255),w,b
 15771  004BA0  6EFE               	movwf	tosh,c
 15772  004BA2  6AFF               	clrf	tosu,c
 15773  004BA4  50FA               	movf	pclath,w,c
 15774  004BA6  0012               	return		;indir
 15775  004BA8                     u7229:
 15776  004BA8  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 15777  004BAA  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 15778  004BAC  B4D8               	btfsc	status,2,c
 15779  004BAE  D012               	goto	l521
 15780                           
 15781                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 15782  004BB0  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 15783  004BB4  0E01               	movlw	1
 15784  004BB6  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 15785  004BB8  0E00               	movlw	0
 15786  004BBA  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 15787  004BBC  2A0C               	incf	??_USBMSDInit,f,c
 15788  004BBE  D003               	goto	u7244
 15789  004BC0                     u7245:
 15790  004BC0  90D8               	bcf	status,0,c
 15791  004BC2  360D               	rlcf	??_USBMSDInit+1,f,c
 15792  004BC4  360E               	rlcf	??_USBMSDInit+2,f,c
 15793  004BC6                     u7244:
 15794  004BC6  2E0C               	decfsz	??_USBMSDInit,f,c
 15795  004BC8  D7FB               	goto	u7245
 15796  004BCA  500D               	movf	??_USBMSDInit+1,w,c
 15797  004BCC  0101               	movlb	1	; () banked
 15798  004BCE  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 15799  004BD0  500E               	movf	??_USBMSDInit+2,w,c
 15800  004BD2  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 15801  004BD4                     l521:
 15802                           
 15803                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 15804                           
 15805                           ; BSR set to: 1
 15806                           
 15807                           ; BSR set to: 1
 15808  004BD4  EC72  F03D         	call	_ResetSenseData	;wreg free
 15809  004BD8  0101               	movlb	1	; () banked
 15810  004BDA  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 15811  004BDC                     l518:
 15812                           
 15813                           ; BSR set to: 1
 15814                           
 15815                           ; BSR set to: 1
 15816  004BDC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15817  004BDE  A4D8               	btfss	status,2,c
 15818  004BE0  0012               	return	
 15819  004BE2  D7B6               	goto	l519
 15820  004BE4                     __end_of_USBMSDInit:
 15821                           	opt stack 0
 15822                           tosu	equ	0xFFF
 15823                           tosh	equ	0xFFE
 15824                           tosl	equ	0xFFD
 15825                           pclath	equ	0xFFA
 15826                           tblptru	equ	0xFF8
 15827                           tblptrh	equ	0xFF7
 15828                           tblptrl	equ	0xFF6
 15829                           tablat	equ	0xFF5
 15830                           prodh	equ	0xFF4
 15831                           prodl	equ	0xFF3
 15832                           intcon	equ	0xFF2
 15833                           intcon2	equ	0xFF1
 15834                           intcon3	equ	0xFF0
 15835                           indf0	equ	0xFEF
 15836                           postinc0	equ	0xFEE
 15837                           fsr0h	equ	0xFEA
 15838                           fsr0l	equ	0xFE9
 15839                           wreg	equ	0xFE8
 15840                           indf1	equ	0xFE7
 15841                           postdec1	equ	0xFE5
 15842                           plusw1	equ	0xFE3
 15843                           fsr1h	equ	0xFE2
 15844                           fsr1l	equ	0xFE1
 15845                           indf2	equ	0xFDF
 15846                           postinc2	equ	0xFDE
 15847                           postdec2	equ	0xFDD
 15848                           plusw2	equ	0xFDB
 15849                           fsr2h	equ	0xFDA
 15850                           fsr2l	equ	0xFD9
 15851                           status	equ	0xFD8
 15852                           
 15853 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 15854 ;; Defined at:
 15855 ;;		line 47 in file "app_device_custom_hid.c"
 15856 ;; Parameters:    Size  Location     Type
 15857 ;;		None
 15858 ;; Auto vars:     Size  Location     Type
 15859 ;;		None
 15860 ;; Return value:  Size  Location     Type
 15861 ;;                  1    wreg      void 
 15862 ;; Registers used:
 15863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15864 ;; Tracked objects:
 15865 ;;		On entry : 0/0
 15866 ;;		On exit  : 0/0
 15867 ;;		Unchanged: 0/0
 15868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15873 ;;Total ram usage:        0 bytes
 15874 ;; Hardware stack levels used:    1
 15875 ;; Hardware stack levels required when called:    2
 15876 ;; This function calls:
 15877 ;;		_USBEnableEndpoint
 15878 ;;		_USBTransferOnePacket
 15879 ;; This function is called by:
 15880 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           	psect	text74
 15885  0087B2                     __ptext74:
 15886                           	opt stack 0
 15887  0087B2                     _APP_DeviceCustomHIDInitialize:
 15888                           	opt stack 26
 15889                           
 15890                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 15891                           
 15892                           ; BSR set to: 1
 15893                           ;incstack = 0
 15894  0087B2  0E00               	movlw	0
 15895  0087B4  0101               	movlb	1	; () banked
 15896  0087B6  6F7E               	movwf	_USBInHandle& (0+255),b
 15897  0087B8  0E00               	movlw	0
 15898  0087BA  6F7F               	movwf	(_USBInHandle+1)& (0+255),b
 15899                           
 15900                           ; BSR set to: 1
 15901                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 15902  0087BC  0E1E               	movlw	30
 15903  0087BE  6E09               	movwf	USBEnableEndpoint@options,c
 15904  0087C0  0E01               	movlw	1
 15905  0087C2  EC17  F043         	call	_USBEnableEndpoint
 15906                           
 15907                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 15908  0087C6  0E00               	movlw	0
 15909  0087C8  6E01               	movwf	USBTransferOnePacket@dir,c
 15910  0087CA  0E50               	movlw	low _ReceivedDataBuffer
 15911  0087CC  6E02               	movwf	USBTransferOnePacket@data,c
 15912  0087CE  0E02               	movlw	high _ReceivedDataBuffer
 15913  0087D0  6E03               	movwf	USBTransferOnePacket@data+1,c
 15914  0087D2  0E40               	movlw	64
 15915  0087D4  6E04               	movwf	USBTransferOnePacket@len,c
 15916  0087D6  0E01               	movlw	1
 15917  0087D8  ECF2  F025         	call	_USBTransferOnePacket
 15918  0087DC  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 15919  0087E0  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 15920  0087E4  0012               	return		;funcret
 15921  0087E6                     __end_of_APP_DeviceCustomHIDInitialize:
 15922                           	opt stack 0
 15923                           tosu	equ	0xFFF
 15924                           tosh	equ	0xFFE
 15925                           tosl	equ	0xFFD
 15926                           pclath	equ	0xFFA
 15927                           tblptru	equ	0xFF8
 15928                           tblptrh	equ	0xFF7
 15929                           tblptrl	equ	0xFF6
 15930                           tablat	equ	0xFF5
 15931                           prodh	equ	0xFF4
 15932                           prodl	equ	0xFF3
 15933                           intcon	equ	0xFF2
 15934                           intcon2	equ	0xFF1
 15935                           intcon3	equ	0xFF0
 15936                           indf0	equ	0xFEF
 15937                           postinc0	equ	0xFEE
 15938                           fsr0h	equ	0xFEA
 15939                           fsr0l	equ	0xFE9
 15940                           wreg	equ	0xFE8
 15941                           indf1	equ	0xFE7
 15942                           postdec1	equ	0xFE5
 15943                           plusw1	equ	0xFE3
 15944                           fsr1h	equ	0xFE2
 15945                           fsr1l	equ	0xFE1
 15946                           indf2	equ	0xFDF
 15947                           postinc2	equ	0xFDE
 15948                           postdec2	equ	0xFDD
 15949                           plusw2	equ	0xFDB
 15950                           fsr2h	equ	0xFDA
 15951                           fsr2l	equ	0xFD9
 15952                           status	equ	0xFD8
 15953                           
 15954 ;; *************** function _USBEnableEndpoint *****************
 15955 ;; Defined at:
 15956 ;;		line 878 in file "usb_device.c"
 15957 ;; Parameters:    Size  Location     Type
 15958 ;;  ep              1    wreg     unsigned char 
 15959 ;;  options         1    8[COMRAM] unsigned char 
 15960 ;; Auto vars:     Size  Location     Type
 15961 ;;  ep              1   11[COMRAM] unsigned char 
 15962 ;;  p               2    9[COMRAM] PTR unsigned char 
 15963 ;;		 -> UEP0(1), 
 15964 ;; Return value:  Size  Location     Type
 15965 ;;                  1    wreg      void 
 15966 ;; Registers used:
 15967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15968 ;; Tracked objects:
 15969 ;;		On entry : 0/0
 15970 ;;		On exit  : 0/0
 15971 ;;		Unchanged: 0/0
 15972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15973 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15974 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15976 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15977 ;;Total ram usage:        4 bytes
 15978 ;; Hardware stack levels used:    1
 15979 ;; Hardware stack levels required when called:    1
 15980 ;; This function calls:
 15981 ;;		_USBConfigureEndpoint
 15982 ;; This function is called by:
 15983 ;;		_APP_DeviceCustomHIDInitialize
 15984 ;;		_APP_DeviceMSDInitialize
 15985 ;; This function uses a non-reentrant model
 15986 ;;
 15987                           
 15988                           	psect	text75
 15989  00862E                     __ptext75:
 15990                           	opt stack 0
 15991  00862E                     _USBEnableEndpoint:
 15992                           	opt stack 26
 15993                           
 15994                           ;incstack = 0
 15995                           ;USBEnableEndpoint@ep stored from wreg
 15996  00862E  6E0C               	movwf	USBEnableEndpoint@ep,c
 15997                           
 15998                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 15999  008630  A409               	btfss	USBEnableEndpoint@options,2,c
 16000  008632  D005               	goto	l178
 16001                           
 16002                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 16003  008634  0E00               	movlw	0
 16004  008636  6E01               	movwf	USBConfigureEndpoint@direction,c
 16005  008638  500C               	movf	USBEnableEndpoint@ep,w,c
 16006  00863A  ECFF  F036         	call	_USBConfigureEndpoint
 16007  00863E                     l178:
 16008                           
 16009                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16010  00863E  A209               	btfss	USBEnableEndpoint@options,1,c
 16011  008640  D005               	goto	l179
 16012                           
 16013                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16014  008642  0E01               	movlw	1
 16015  008644  6E01               	movwf	USBConfigureEndpoint@direction,c
 16016  008646  500C               	movf	USBEnableEndpoint@ep,w,c
 16017  008648  ECFF  F036         	call	_USBConfigureEndpoint
 16018  00864C                     l179:
 16019                           
 16020                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16021  00864C  500C               	movf	USBEnableEndpoint@ep,w,c
 16022  00864E  0D01               	mullw	1
 16023  008650  0E26               	movlw	38
 16024  008652  24F3               	addwf	prodl,w,c
 16025  008654  6E0A               	movwf	USBEnableEndpoint@p,c
 16026  008656  0E0F               	movlw	15
 16027  008658  20F4               	addwfc	prodh,w,c
 16028  00865A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16029                           
 16030                           ;usb_device.c: 901: *p = options;
 16031  00865C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16032  008660  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16033  008664  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16034  008668  0012               	return		;funcret
 16035  00866A                     __end_of_USBEnableEndpoint:
 16036                           	opt stack 0
 16037                           tosu	equ	0xFFF
 16038                           tosh	equ	0xFFE
 16039                           tosl	equ	0xFFD
 16040                           pclath	equ	0xFFA
 16041                           tblptru	equ	0xFF8
 16042                           tblptrh	equ	0xFF7
 16043                           tblptrl	equ	0xFF6
 16044                           tablat	equ	0xFF5
 16045                           prodh	equ	0xFF4
 16046                           prodl	equ	0xFF3
 16047                           intcon	equ	0xFF2
 16048                           intcon2	equ	0xFF1
 16049                           intcon3	equ	0xFF0
 16050                           indf0	equ	0xFEF
 16051                           postinc0	equ	0xFEE
 16052                           fsr0h	equ	0xFEA
 16053                           fsr0l	equ	0xFE9
 16054                           wreg	equ	0xFE8
 16055                           indf1	equ	0xFE7
 16056                           postdec1	equ	0xFE5
 16057                           plusw1	equ	0xFE3
 16058                           fsr1h	equ	0xFE2
 16059                           fsr1l	equ	0xFE1
 16060                           indf2	equ	0xFDF
 16061                           postinc2	equ	0xFDE
 16062                           postdec2	equ	0xFDD
 16063                           plusw2	equ	0xFDB
 16064                           fsr2h	equ	0xFDA
 16065                           fsr2l	equ	0xFD9
 16066                           status	equ	0xFD8
 16067                           
 16068 ;; *************** function _USBConfigureEndpoint *****************
 16069 ;; Defined at:
 16070 ;;		line 1545 in file "usb_device.c"
 16071 ;; Parameters:    Size  Location     Type
 16072 ;;  EPNum           1    wreg     unsigned char 
 16073 ;;  direction       1    0[COMRAM] unsigned char 
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;  EPNum           1    5[COMRAM] unsigned char 
 16076 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16077 ;;		 -> BDT(48), 
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/0
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16089 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16090 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16091 ;;Total ram usage:        8 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_USBEnableEndpoint
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           	psect	text76
 16101  006DFE                     __ptext76:
 16102                           	opt stack 0
 16103  006DFE                     _USBConfigureEndpoint:
 16104                           	opt stack 26
 16105                           
 16106                           ;incstack = 0
 16107                           ;USBConfigureEndpoint@EPNum stored from wreg
 16108  006DFE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16109                           
 16110                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16111  006E00  0E00               	movlw	0
 16112  006E02  6E07               	movwf	USBConfigureEndpoint@handle,c
 16113  006E04  0E0D               	movlw	13
 16114  006E06  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16115                           
 16116                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16117  006E08  5001               	movf	USBConfigureEndpoint@direction,w,c
 16118  006E0A  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16119  006E0C  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16120  006E0E  90D8               	bcf	status,0,c
 16121  006E10  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16122  006E12  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16123  006E14  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16124  006E16  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16125  006E18  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16126  006E1A  90D8               	bcf	status,0,c
 16127  006E1C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16128  006E1E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16129  006E20  90D8               	bcf	status,0,c
 16130  006E22  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16131  006E24  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16132  006E26  5002               	movf	??_USBConfigureEndpoint,w,c
 16133  006E28  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16134  006E2A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16135  006E2C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16136  006E2E  90D8               	bcf	status,0,c
 16137  006E30  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16138  006E32  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16139  006E34  90D8               	bcf	status,0,c
 16140  006E36  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16141  006E38  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16142  006E3A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16143  006E3C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16144  006E3E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16145  006E40  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16146                           
 16147                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16148  006E42  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16149  006E46  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16150  006E4A  9EDF               	bcf	indf2,7,c
 16151                           
 16152                           ;usb_device.c: 1559: if(direction == 0)
 16153  006E4C  5001               	movf	USBConfigureEndpoint@direction,w,c
 16154  006E4E  A4D8               	btfss	status,2,c
 16155  006E50  D007               	goto	l214
 16156                           
 16157                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16158  006E52  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16159  006E54  0D02               	mullw	2
 16160  006E56  0E40               	movlw	low _pBDTEntryOut
 16161  006E58  24F3               	addwf	prodl,w,c
 16162  006E5A  6ED9               	movwf	fsr2l,c
 16163  006E5C  0E01               	movlw	high _pBDTEntryOut
 16164  006E5E  D006               	goto	L14
 16165  006E60                     l214:
 16166                           
 16167                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16168  006E60  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16169  006E62  0D02               	mullw	2
 16170  006E64  0ED1               	movlw	low _pBDTEntryIn
 16171  006E66  24F3               	addwf	prodl,w,c
 16172  006E68  6ED9               	movwf	fsr2l,c
 16173  006E6A  0E00               	movlw	high _pBDTEntryIn
 16174  006E6C                     L14:
 16175  006E6C  20F4               	addwfc	prodh,w,c
 16176  006E6E  6EDA               	movwf	fsr2h,c
 16177  006E70  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16178  006E74  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16179                           
 16180                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16181  006E78  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16182  006E7C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16183  006E80  9CDF               	bcf	indf2,6,c
 16184                           
 16185                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16186  006E82  EE20 F004          	lfsr	2,4
 16187  006E86  5007               	movf	USBConfigureEndpoint@handle,w,c
 16188  006E88  26D9               	addwf	fsr2l,f,c
 16189  006E8A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16190  006E8C  22DA               	addwfc	fsr2h,f,c
 16191  006E8E  8CDF               	bsf	indf2,6,c
 16192  006E90  0012               	return		;funcret
 16193  006E92                     __end_of_USBConfigureEndpoint:
 16194                           	opt stack 0
 16195                           tosu	equ	0xFFF
 16196                           tosh	equ	0xFFE
 16197                           tosl	equ	0xFFD
 16198                           pclath	equ	0xFFA
 16199                           tblptru	equ	0xFF8
 16200                           tblptrh	equ	0xFF7
 16201                           tblptrl	equ	0xFF6
 16202                           tablat	equ	0xFF5
 16203                           prodh	equ	0xFF4
 16204                           prodl	equ	0xFF3
 16205                           intcon	equ	0xFF2
 16206                           intcon2	equ	0xFF1
 16207                           intcon3	equ	0xFF0
 16208                           indf0	equ	0xFEF
 16209                           postinc0	equ	0xFEE
 16210                           fsr0h	equ	0xFEA
 16211                           fsr0l	equ	0xFE9
 16212                           wreg	equ	0xFE8
 16213                           indf1	equ	0xFE7
 16214                           postdec1	equ	0xFE5
 16215                           plusw1	equ	0xFE3
 16216                           fsr1h	equ	0xFE2
 16217                           fsr1l	equ	0xFE1
 16218                           indf2	equ	0xFDF
 16219                           postinc2	equ	0xFDE
 16220                           postdec2	equ	0xFDD
 16221                           plusw2	equ	0xFDB
 16222                           fsr2h	equ	0xFDA
 16223                           fsr2l	equ	0xFD9
 16224                           status	equ	0xFD8
 16225                           
 16226 ;; *************** function _USBCtrlTrfOutHandler *****************
 16227 ;; Defined at:
 16228 ;;		line 2540 in file "usb_device.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;		None
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;		None
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      void 
 16235 ;; Registers used:
 16236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16246 ;;Total ram usage:        0 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    2
 16249 ;; This function calls:
 16250 ;;		_USBCtrlTrfRxService
 16251 ;; This function is called by:
 16252 ;;		_USBCtrlEPService
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256                           	psect	text77
 16257  0078EE                     __ptext77:
 16258                           	opt stack 0
 16259  0078EE                     _USBCtrlTrfOutHandler:
 16260                           	opt stack 26
 16261                           
 16262                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16263                           
 16264                           ;incstack = 0
 16265  0078EE  0E02               	movlw	2
 16266  0078F0  0100               	movlb	0	; () banked
 16267  0078F2  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16268  0078F4  A4D8               	btfss	status,2,c
 16269  0078F6  D003               	goto	l320
 16270                           
 16271                           ; BSR set to: 0
 16272                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16273  0078F8  ECC6  F021         	call	_USBCtrlTrfRxService	;wreg free
 16274                           
 16275                           ;usb_device.c: 2545: }
 16276  0078FC  0012               	return	
 16277  0078FE                     l320:
 16278                           
 16279                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16280  0078FE  0E00               	movlw	0
 16281  007900  0100               	movlb	0	; () banked
 16282  007902  6FF6               	movwf	_controlTransferState& (0+255),b
 16283                           
 16284                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16285  007904  0101               	movlb	1	; () banked
 16286  007906  5191               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16287  007908  A4D8               	btfss	status,2,c
 16288  00790A  D020               	goto	l322
 16289                           
 16290                           ; BSR set to: 1
 16291                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16292  00790C  0100               	movlb	0	; () banked
 16293  00790E  EE20 F001          	lfsr	2,1
 16294  007912  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16295  007914  26D9               	addwf	fsr2l,f,c
 16296  007916  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16297  007918  22DA               	addwfc	fsr2h,f,c
 16298  00791A  0E08               	movlw	8
 16299  00791C  6EDF               	movwf	indf2,c
 16300                           
 16301                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16302  00791E  EE20 F002          	lfsr	2,2
 16303  007922  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16304  007924  26D9               	addwf	fsr2l,f,c
 16305  007926  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16306  007928  22DA               	addwfc	fsr2h,f,c
 16307  00792A  0E30               	movlw	48
 16308  00792C  6EDE               	movwf	postinc2,c
 16309  00792E  0E0D               	movlw	13
 16310  007930  6EDD               	movwf	postdec2,c
 16311                           
 16312                           ; BSR set to: 0
 16313                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16314  007932  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16315  007936  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16316  00793A  0E0C               	movlw	12
 16317  00793C  6EDF               	movwf	indf2,c
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16321  00793E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16322  007942  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16323  007946  0E00               	movlw	0
 16324  007948  8EDB               	bsf	plusw2,7,c
 16325                           
 16326                           ;usb_device.c: 2563: }
 16327  00794A  0012               	return	
 16328  00794C                     l322:
 16329                           
 16330                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16331                           
 16332                           ; BSR set to: 0
 16333  00794C  0E00               	movlw	0
 16334  00794E  0101               	movlb	1	; () banked
 16335  007950  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16336                           
 16337                           ; BSR set to: 1
 16338  007952  0012               	return	
 16339  007954                     __end_of_USBCtrlTrfOutHandler:
 16340                           	opt stack 0
 16341                           tosu	equ	0xFFF
 16342                           tosh	equ	0xFFE
 16343                           tosl	equ	0xFFD
 16344                           pclath	equ	0xFFA
 16345                           tblptru	equ	0xFF8
 16346                           tblptrh	equ	0xFF7
 16347                           tblptrl	equ	0xFF6
 16348                           tablat	equ	0xFF5
 16349                           prodh	equ	0xFF4
 16350                           prodl	equ	0xFF3
 16351                           intcon	equ	0xFF2
 16352                           intcon2	equ	0xFF1
 16353                           intcon3	equ	0xFF0
 16354                           indf0	equ	0xFEF
 16355                           postinc0	equ	0xFEE
 16356                           fsr0h	equ	0xFEA
 16357                           fsr0l	equ	0xFE9
 16358                           wreg	equ	0xFE8
 16359                           indf1	equ	0xFE7
 16360                           postdec1	equ	0xFE5
 16361                           plusw1	equ	0xFE3
 16362                           fsr1h	equ	0xFE2
 16363                           fsr1l	equ	0xFE1
 16364                           indf2	equ	0xFDF
 16365                           postinc2	equ	0xFDE
 16366                           postdec2	equ	0xFDD
 16367                           plusw2	equ	0xFDB
 16368                           fsr2h	equ	0xFDA
 16369                           fsr2l	equ	0xFD9
 16370                           status	equ	0xFD8
 16371                           
 16372 ;; *************** function _USBCtrlTrfRxService *****************
 16373 ;; Defined at:
 16374 ;;		line 1854 in file "usb_device.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16379 ;;  i               1    0[COMRAM] unsigned char 
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16393 ;;Total ram usage:        2 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    1
 16396 ;; This function calls:
 16397 ;;		_USBCtrlEPAllowStatusStage
 16398 ;; This function is called by:
 16399 ;;		_USBCtrlTrfOutHandler
 16400 ;; This function uses a non-reentrant model
 16401 ;;
 16402                           
 16403                           	psect	text78
 16404  00438C                     __ptext78:
 16405                           	opt stack 0
 16406  00438C                     _USBCtrlTrfRxService:
 16407                           	opt stack 26
 16408                           
 16409                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16410                           
 16411                           ;incstack = 0
 16412  00438C  0100               	movlb	0	; () banked
 16413  00438E  EE20 F001          	lfsr	2,1
 16414  004392  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16415  004394  26D9               	addwf	fsr2l,f,c
 16416  004396  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16417  004398  22DA               	addwfc	fsr2h,f,c
 16418  00439A  50DF               	movf	indf2,w,c
 16419  00439C  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16423  00439E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16424  0043A0  0101               	movlb	1	; () banked
 16425  0043A2  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16426  0043A4  0E00               	movlw	0
 16427  0043A6  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16428  0043A8  A0D8               	btfss	status,0,c
 16429                           
 16430                           ; BSR set to: 1
 16431                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16432  0043AA  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16433                           
 16434                           ; BSR set to: 1
 16435                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16436                           
 16437                           ; BSR set to: 1
 16438  0043AE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16439  0043B0  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16440  0043B2  0E00               	movlw	0
 16441  0043B4  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16442                           
 16443                           ; BSR set to: 1
 16444                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16445  0043B6  0E00               	movlw	0
 16446  0043B8  6E01               	movwf	USBCtrlTrfRxService@i,c
 16447  0043BA  D011               	goto	l248
 16448  0043BC                     
 16449                           ; BSR set to: 1
 16450                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16451                           
 16452                           ; BSR set to: 1
 16453  0043BC  5001               	movf	USBCtrlTrfRxService@i,w,c
 16454  0043BE  0D01               	mullw	1
 16455  0043C0  0E38               	movlw	56
 16456  0043C2  24F3               	addwf	prodl,w,c
 16457  0043C4  6ED9               	movwf	fsr2l,c
 16458  0043C6  0E0D               	movlw	13
 16459  0043C8  20F4               	addwfc	prodh,w,c
 16460  0043CA  6EDA               	movwf	fsr2h,c
 16461  0043CC  C131  FFE1         	movff	_outPipes,fsr1l
 16462  0043D0  C132  FFE2         	movff	_outPipes+1,fsr1h
 16463  0043D4  CFDF FFE7          	movff	indf2,indf1
 16464                           
 16465                           ; BSR set to: 1
 16466  0043D8  4B31               	infsnz	_outPipes& (0+255),f,b
 16467  0043DA  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16468                           
 16469                           ; BSR set to: 1
 16470  0043DC  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16471  0043DE                     l248:
 16472                           
 16473                           ; BSR set to: 1
 16474                           
 16475                           ; BSR set to: 1
 16476  0043DE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16477  0043E0  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16478  0043E2  A0D8               	btfss	status,0,c
 16479  0043E4  D7EB               	goto	l249
 16480                           
 16481                           ; BSR set to: 1
 16482                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16483                           
 16484                           ; BSR set to: 1
 16485  0043E6  5135               	movf	(_outPipes+4)& (0+255),w,b
 16486  0043E8  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16487  0043EA  B4D8               	btfsc	status,2,c
 16488  0043EC  D033               	goto	l251
 16489                           
 16490                           ; BSR set to: 1
 16491                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16492  0043EE  0100               	movlb	0	; () banked
 16493  0043F0  EE20 F001          	lfsr	2,1
 16494  0043F4  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16495  0043F6  26D9               	addwf	fsr2l,f,c
 16496  0043F8  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16497  0043FA  22DA               	addwfc	fsr2h,f,c
 16498  0043FC  0E08               	movlw	8
 16499  0043FE  6EDF               	movwf	indf2,c
 16500                           
 16501                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16502  004400  EE20 F002          	lfsr	2,2
 16503  004404  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16504  004406  26D9               	addwf	fsr2l,f,c
 16505  004408  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16506  00440A  22DA               	addwfc	fsr2h,f,c
 16507  00440C  0E38               	movlw	56
 16508  00440E  6EDE               	movwf	postinc2,c
 16509  004410  0E0D               	movlw	13
 16510  004412  6EDD               	movwf	postdec2,c
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16514  004414  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16515  004418  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16516  00441C  BCDF               	btfsc	indf2,6,c
 16517  00441E  D00D               	goto	l252
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16521  004420  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16522  004424  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16523  004428  0E48               	movlw	72
 16524  00442A  6EDF               	movwf	indf2,c
 16525                           
 16526                           ; BSR set to: 0
 16527                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16528  00442C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16529  004430  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16530  004434  0E00               	movlw	0
 16531  004436  8EDB               	bsf	plusw2,7,c
 16532                           
 16533                           ;usb_device.c: 1891: }
 16534  004438  0012               	return	
 16535  00443A                     l252:
 16536                           
 16537                           ; BSR set to: 0
 16538                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16539                           
 16540                           ; BSR set to: 0
 16541  00443A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16542  00443E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16543  004442  0E08               	movlw	8
 16544  004444  6EDF               	movwf	indf2,c
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16548  004446  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16549  00444A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16550  00444E  0E00               	movlw	0
 16551  004450  8EDB               	bsf	plusw2,7,c
 16552                           
 16553                           ; BSR set to: 0
 16554                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16555  004452  0012               	return	
 16556  004454                     l251:
 16557                           
 16558                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16559                           
 16560                           ; BSR set to: 0
 16561  004454  0100               	movlb	0	; () banked
 16562  004456  EE20 F001          	lfsr	2,1
 16563  00445A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16564  00445C  26D9               	addwf	fsr2l,f,c
 16565  00445E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16566  004460  22DA               	addwfc	fsr2h,f,c
 16567  004462  0E08               	movlw	8
 16568  004464  6EDF               	movwf	indf2,c
 16569                           
 16570                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16571  004466  EE20 F002          	lfsr	2,2
 16572  00446A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16573  00446C  26D9               	addwf	fsr2l,f,c
 16574  00446E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16575  004470  22DA               	addwfc	fsr2h,f,c
 16576  004472  0E30               	movlw	48
 16577  004474  6EDE               	movwf	postinc2,c
 16578  004476  0E0D               	movlw	13
 16579  004478  6EDD               	movwf	postdec2,c
 16580                           
 16581                           ; BSR set to: 0
 16582                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16583  00447A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16584  00447E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16585  004482  0E04               	movlw	4
 16586  004484  6EDF               	movwf	indf2,c
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16590  004486  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16591  00448A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16592  00448E  0E00               	movlw	0
 16593  004490  8EDB               	bsf	plusw2,7,c
 16594                           
 16595                           ; BSR set to: 0
 16596                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16597                           
 16598                           ; BSR set to: 0
 16599  004492  0101               	movlb	1	; () banked
 16600  004494  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16601                           
 16602                           ; BSR set to: 1
 16603                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16604  004496  0100               	movlb	0	; () banked
 16605  004498  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16606  00449A  A4D8               	btfss	status,2,c
 16607  00449C  0012               	return	
 16608                           
 16609                           ; BSR set to: 0
 16610                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16611  00449E  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16612  0044A2  0012               	return	
 16613  0044A4                     __end_of_USBCtrlTrfRxService:
 16614                           	opt stack 0
 16615                           tosu	equ	0xFFF
 16616                           tosh	equ	0xFFE
 16617                           tosl	equ	0xFFD
 16618                           pclath	equ	0xFFA
 16619                           tblptru	equ	0xFF8
 16620                           tblptrh	equ	0xFF7
 16621                           tblptrl	equ	0xFF6
 16622                           tablat	equ	0xFF5
 16623                           prodh	equ	0xFF4
 16624                           prodl	equ	0xFF3
 16625                           intcon	equ	0xFF2
 16626                           intcon2	equ	0xFF1
 16627                           intcon3	equ	0xFF0
 16628                           indf0	equ	0xFEF
 16629                           postinc0	equ	0xFEE
 16630                           fsr0h	equ	0xFEA
 16631                           fsr0l	equ	0xFE9
 16632                           wreg	equ	0xFE8
 16633                           indf1	equ	0xFE7
 16634                           postdec1	equ	0xFE5
 16635                           plusw1	equ	0xFE3
 16636                           fsr1h	equ	0xFE2
 16637                           fsr1l	equ	0xFE1
 16638                           indf2	equ	0xFDF
 16639                           postinc2	equ	0xFDE
 16640                           postdec2	equ	0xFDD
 16641                           plusw2	equ	0xFDB
 16642                           fsr2h	equ	0xFDA
 16643                           fsr2l	equ	0xFD9
 16644                           status	equ	0xFD8
 16645                           
 16646 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16647 ;; Defined at:
 16648 ;;		line 1418 in file "usb_device.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;		None
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;		None
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1    wreg      void 
 16655 ;; Registers used:
 16656 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16657 ;; Tracked objects:
 16658 ;;		On entry : 0/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16666 ;;Total ram usage:        0 bytes
 16667 ;; Hardware stack levels used:    1
 16668 ;; This function calls:
 16669 ;;		Nothing
 16670 ;; This function is called by:
 16671 ;;		_USBDeviceTasks
 16672 ;;		_USBCtrlEPServiceComplete
 16673 ;;		_USBCtrlTrfRxService
 16674 ;; This function uses a non-reentrant model
 16675 ;;
 16676                           
 16677                           	psect	text79
 16678  005DC0                     __ptext79:
 16679                           	opt stack 0
 16680  005DC0                     _USBCtrlEPAllowStatusStage:
 16681                           	opt stack 26
 16682                           
 16683                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 16684                           
 16685                           ;incstack = 0
 16686  005DC0  0100               	movlb	0	; () banked
 16687  005DC2  51F1               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 16688  005DC4  A4D8               	btfss	status,2,c
 16689  005DC6  0012               	return	
 16690                           
 16691                           ; BSR set to: 0
 16692                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 16693  005DC8  0E01               	movlw	1
 16694  005DCA  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16695                           
 16696                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 16697  005DCC  51F0               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 16698  005DCE  A4D8               	btfss	status,2,c
 16699  005DD0  0012               	return	
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 16703  005DD2  0E01               	movlw	1
 16704  005DD4  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16705                           
 16706                           ; BSR set to: 0
 16707                           ;usb_device.c: 1434: if(controlTransferState == 2)
 16708  005DD6  0E02               	movlw	2
 16709  005DD8  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16710  005DDA  A4D8               	btfss	status,2,c
 16711  005DDC  D015               	goto	l202
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 16715  005DDE  EE20 F001          	lfsr	2,1
 16716  005DE2  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16717  005DE4  26D9               	addwf	fsr2l,f,c
 16718  005DE6  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16719  005DE8  22DA               	addwfc	fsr2h,f,c
 16720  005DEA  0E00               	movlw	0
 16721  005DEC  6EDF               	movwf	indf2,c
 16722                           
 16723                           ; BSR set to: 0
 16724                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16725  005DEE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16726  005DF2  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16727  005DF6  0E48               	movlw	72
 16728  005DF8  6EDF               	movwf	indf2,c
 16729                           
 16730                           ; BSR set to: 0
 16731                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16732  005DFA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16733  005DFE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16734  005E02  0E00               	movlw	0
 16735  005E04  8EDB               	bsf	plusw2,7,c
 16736                           
 16737                           ;usb_device.c: 1439: }
 16738  005E06  0012               	return	
 16739  005E08                     l202:
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 16743                           
 16744                           ; BSR set to: 0
 16745  005E08  05F6               	decf	_controlTransferState& (0+255),w,b
 16746  005E0A  A4D8               	btfss	status,2,c
 16747  005E0C  0012               	return	
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 16751  005E0E  0E00               	movlw	0
 16752  005E10  0101               	movlb	1	; () banked
 16753  005E12  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16754                           
 16755                           ; BSR set to: 1
 16756                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 16757  005E14  0100               	movlb	0	; () banked
 16758  005E16  EE20 F001          	lfsr	2,1
 16759  005E1A  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16760  005E1C  26D9               	addwf	fsr2l,f,c
 16761  005E1E  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16762  005E20  22DA               	addwfc	fsr2h,f,c
 16763  005E22  0E08               	movlw	8
 16764  005E24  6EDF               	movwf	indf2,c
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16768  005E26  EE20 F002          	lfsr	2,2
 16769  005E2A  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16770  005E2C  26D9               	addwf	fsr2l,f,c
 16771  005E2E  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16772  005E30  22DA               	addwfc	fsr2h,f,c
 16773  005E32  0E30               	movlw	48
 16774  005E34  6EDE               	movwf	postinc2,c
 16775  005E36  0E0D               	movlw	13
 16776  005E38  6EDD               	movwf	postdec2,c
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16780  005E3A  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16781  005E3E  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16782  005E42  0E04               	movlw	4
 16783  005E44  6EDF               	movwf	indf2,c
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16787  005E46  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16788  005E4A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16789  005E4E  0E00               	movlw	0
 16790  005E50  8EDB               	bsf	plusw2,7,c
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 16794  005E52  0E01               	movlw	1
 16795  005E54  0101               	movlb	1	; () banked
 16796  005E56  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16797                           
 16798                           ; BSR set to: 1
 16799                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 16800  005E58  0100               	movlb	0	; () banked
 16801  005E5A  EE20 F001          	lfsr	2,1
 16802  005E5E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16803  005E60  26D9               	addwf	fsr2l,f,c
 16804  005E62  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16805  005E64  22DA               	addwfc	fsr2h,f,c
 16806  005E66  0E08               	movlw	8
 16807  005E68  6EDF               	movwf	indf2,c
 16808                           
 16809                           ; BSR set to: 0
 16810                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16811  005E6A  EE20 F002          	lfsr	2,2
 16812  005E6E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16813  005E70  26D9               	addwf	fsr2l,f,c
 16814  005E72  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16815  005E74  22DA               	addwfc	fsr2h,f,c
 16816  005E76  0E30               	movlw	48
 16817  005E78  6EDE               	movwf	postinc2,c
 16818  005E7A  0E0D               	movlw	13
 16819  005E7C  6EDD               	movwf	postdec2,c
 16820                           
 16821                           ; BSR set to: 0
 16822                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16823  005E7E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16824  005E82  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16825  005E86  0E80               	movlw	128
 16826  005E88  6EDF               	movwf	indf2,c
 16827                           
 16828                           ; BSR set to: 0
 16829                           
 16830                           ; BSR set to: 0
 16831                           
 16832                           ; BSR set to: 0
 16833  005E8A  0012               	return	
 16834  005E8C                     __end_of_USBCtrlEPAllowStatusStage:
 16835                           	opt stack 0
 16836                           tosu	equ	0xFFF
 16837                           tosh	equ	0xFFE
 16838                           tosl	equ	0xFFD
 16839                           pclath	equ	0xFFA
 16840                           tblptru	equ	0xFF8
 16841                           tblptrh	equ	0xFF7
 16842                           tblptrl	equ	0xFF6
 16843                           tablat	equ	0xFF5
 16844                           prodh	equ	0xFF4
 16845                           prodl	equ	0xFF3
 16846                           intcon	equ	0xFF2
 16847                           intcon2	equ	0xFF1
 16848                           intcon3	equ	0xFF0
 16849                           indf0	equ	0xFEF
 16850                           postinc0	equ	0xFEE
 16851                           fsr0h	equ	0xFEA
 16852                           fsr0l	equ	0xFE9
 16853                           wreg	equ	0xFE8
 16854                           indf1	equ	0xFE7
 16855                           postdec1	equ	0xFE5
 16856                           plusw1	equ	0xFE3
 16857                           fsr1h	equ	0xFE2
 16858                           fsr1l	equ	0xFE1
 16859                           indf2	equ	0xFDF
 16860                           postinc2	equ	0xFDE
 16861                           postdec2	equ	0xFDD
 16862                           plusw2	equ	0xFDB
 16863                           fsr2h	equ	0xFDA
 16864                           fsr2l	equ	0xFD9
 16865                           status	equ	0xFD8
 16866                           
 16867 ;; *************** function _USBCtrlTrfInHandler *****************
 16868 ;; Defined at:
 16869 ;;		line 2594 in file "usb_device.c"
 16870 ;; Parameters:    Size  Location     Type
 16871 ;;		None
 16872 ;; Auto vars:     Size  Location     Type
 16873 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16874 ;; Return value:  Size  Location     Type
 16875 ;;                  1    wreg      void 
 16876 ;; Registers used:
 16877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16878 ;; Tracked objects:
 16879 ;;		On entry : 0/0
 16880 ;;		On exit  : 0/0
 16881 ;;		Unchanged: 0/0
 16882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16887 ;;Total ram usage:        1 bytes
 16888 ;; Hardware stack levels used:    1
 16889 ;; Hardware stack levels required when called:    1
 16890 ;; This function calls:
 16891 ;;		_USBCtrlTrfTxService
 16892 ;; This function is called by:
 16893 ;;		_USBCtrlEPService
 16894 ;; This function uses a non-reentrant model
 16895 ;;
 16896                           
 16897                           	psect	text80
 16898  005E8C                     __ptext80:
 16899                           	opt stack 0
 16900  005E8C                     _USBCtrlTrfInHandler:
 16901                           	opt stack 27
 16902                           
 16903                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 16904                           
 16905                           ; BSR set to: 0
 16906                           ;incstack = 0
 16907  005E8C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16908  005E90  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16909  005E94  0100               	movlb	0	; () banked
 16910  005E96  0E00               	movlw	0
 16911  005E98  BCDF               	btfsc	indf2,6,c
 16912  005E9A  0E01               	movlw	1
 16913  005E9C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 16917  005E9E  0E04               	movlw	4
 16918  005EA0  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 16919  005EA2  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 16920  005EA4  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16921  005EA6  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16922                           
 16923                           ; BSR set to: 0
 16924                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 16925  005EA8  0E08               	movlw	8
 16926  005EAA  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 16927  005EAC  A4D8               	btfss	status,2,c
 16928  005EAE  D00D               	goto	l329
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 16932  005EB0  010D               	movlb	13	; () banked
 16933  005EB2  5132               	movf	50,w,b	;volatile
 16934  005EB4  0B7F               	andlw	127
 16935  005EB6  010F               	movlb	15	; () banked
 16936  005EB8  6F38               	movwf	56,b	;volatile
 16937                           
 16938                           ; BSR set to: 15
 16939                           ;usb_device.c: 2609: if(UADDR != 0u)
 16940  005EBA  5138               	movf	56,w,b	;volatile
 16941  005EBC  B4D8               	btfsc	status,2,c
 16942  005EBE  D002               	goto	l328
 16943                           
 16944                           ; BSR set to: 15
 16945                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 16946  005EC0  0E10               	movlw	16
 16947  005EC2  D001               	goto	L15
 16948  005EC4                     l328:
 16949                           
 16950                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 16951                           
 16952                           ; BSR set to: 0
 16953  005EC4  0E04               	movlw	4
 16954  005EC6                     L15:
 16955  005EC6  0100               	movlb	0	; () banked
 16956  005EC8  6FF8               	movwf	_USBDeviceState& (0+255),b
 16957  005ECA                     l329:
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 16961                           
 16962                           ; BSR set to: 0
 16963                           
 16964                           ; BSR set to: 0
 16965  005ECA  05F6               	decf	_controlTransferState& (0+255),w,b
 16966  005ECC  A4D8               	btfss	status,2,c
 16967  005ECE  D03B               	goto	l330
 16968                           
 16969                           ; BSR set to: 0
 16970                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 16971  005ED0  EE20 F002          	lfsr	2,2
 16972  005ED4  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16973  005ED6  26D9               	addwf	fsr2l,f,c
 16974  005ED8  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16975  005EDA  22DA               	addwfc	fsr2h,f,c
 16976  005EDC  0E38               	movlw	56
 16977  005EDE  6EDE               	movwf	postinc2,c
 16978  005EE0  0E0D               	movlw	13
 16979  005EE2  6EDD               	movwf	postdec2,c
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 16983  005EE4  EC3E  F02D         	call	_USBCtrlTrfTxService	;wreg free
 16984                           
 16985                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 16986  005EE8  0E02               	movlw	2
 16987  005EEA  0100               	movlb	0	; () banked
 16988  005EEC  19F7               	xorwf	_shortPacketStatus& (0+255),w,b
 16989  005EEE  A4D8               	btfss	status,2,c
 16990  005EF0  D00D               	goto	l331
 16991                           
 16992                           ; BSR set to: 0
 16993                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 16994  005EF2  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16995  005EF6  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16996  005EFA  0E04               	movlw	4
 16997  005EFC  6EDF               	movwf	indf2,c
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17001  005EFE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17002  005F02  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17003  005F06  0E00               	movlw	0
 17004  005F08  8EDB               	bsf	plusw2,7,c
 17005                           
 17006                           ;usb_device.c: 2635: }
 17007  005F0A  0012               	return	
 17008  005F0C                     l331:
 17009                           
 17010                           ; BSR set to: 0
 17011                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17012                           
 17013                           ; BSR set to: 0
 17014  005F0C  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17015  005F0E  A4D8               	btfss	status,2,c
 17016  005F10  D00D               	goto	l333
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17020  005F12  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17021  005F16  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17022  005F1A  0E48               	movlw	72
 17023  005F1C  6EDF               	movwf	indf2,c
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17027  005F1E  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17028  005F22  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17029  005F26  0E00               	movlw	0
 17030  005F28  8EDB               	bsf	plusw2,7,c
 17031                           
 17032                           ;usb_device.c: 2642: }
 17033  005F2A  0012               	return	
 17034  005F2C                     l333:
 17035                           
 17036                           ; BSR set to: 0
 17037                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17038                           
 17039                           ; BSR set to: 0
 17040  005F2C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17041  005F30  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17042  005F34  0E08               	movlw	8
 17043  005F36  6EDF               	movwf	indf2,c
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17047  005F38  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17048  005F3C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17049  005F40  0E00               	movlw	0
 17050  005F42  8EDB               	bsf	plusw2,7,c
 17051                           
 17052                           ; BSR set to: 0
 17053                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17054                           
 17055                           ; BSR set to: 0
 17056  005F44  0012               	return	
 17057  005F46                     l330:
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17061  005F46  0101               	movlb	1	; () banked
 17062  005F48  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 17063                           
 17064                           ; BSR set to: 1
 17065                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17066                           
 17067                           ; BSR set to: 1
 17068  005F4A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17069                           
 17070                           ; BSR set to: 1
 17071                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 17072                           
 17073                           ; BSR set to: 1
 17074  005F4C  0E00               	movlw	0
 17075  005F4E  0100               	movlb	0	; () banked
 17076  005F50  6FF6               	movwf	_controlTransferState& (0+255),b
 17077  005F52  0012               	return	
 17078  005F54                     __end_of_USBCtrlTrfInHandler:
 17079                           	opt stack 0
 17080                           tosu	equ	0xFFF
 17081                           tosh	equ	0xFFE
 17082                           tosl	equ	0xFFD
 17083                           pclath	equ	0xFFA
 17084                           tblptru	equ	0xFF8
 17085                           tblptrh	equ	0xFF7
 17086                           tblptrl	equ	0xFF6
 17087                           tablat	equ	0xFF5
 17088                           prodh	equ	0xFF4
 17089                           prodl	equ	0xFF3
 17090                           intcon	equ	0xFF2
 17091                           intcon2	equ	0xFF1
 17092                           intcon3	equ	0xFF0
 17093                           indf0	equ	0xFEF
 17094                           postinc0	equ	0xFEE
 17095                           fsr0h	equ	0xFEA
 17096                           fsr0l	equ	0xFE9
 17097                           wreg	equ	0xFE8
 17098                           indf1	equ	0xFE7
 17099                           postdec1	equ	0xFE5
 17100                           plusw1	equ	0xFE3
 17101                           fsr1h	equ	0xFE2
 17102                           fsr1l	equ	0xFE1
 17103                           indf2	equ	0xFDF
 17104                           postinc2	equ	0xFDE
 17105                           postdec2	equ	0xFDD
 17106                           plusw2	equ	0xFDB
 17107                           fsr2h	equ	0xFDA
 17108                           fsr2l	equ	0xFD9
 17109                           status	equ	0xFD8
 17110                           
 17111 ;; *************** function _USBCtrlTrfTxService *****************
 17112 ;; Defined at:
 17113 ;;		line 1773 in file "usb_device.c"
 17114 ;; Parameters:    Size  Location     Type
 17115 ;;		None
 17116 ;; Auto vars:     Size  Location     Type
 17117 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17118 ;; Return value:  Size  Location     Type
 17119 ;;                  1    wreg      void 
 17120 ;; Registers used:
 17121 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17122 ;; Tracked objects:
 17123 ;;		On entry : 0/0
 17124 ;;		On exit  : 0/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17131 ;;Total ram usage:        1 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; This function calls:
 17134 ;;		Nothing
 17135 ;; This function is called by:
 17136 ;;		_USBCtrlEPAllowDataStage
 17137 ;;		_USBCtrlTrfInHandler
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           	psect	text81
 17142  005A7C                     __ptext81:
 17143                           	opt stack 0
 17144  005A7C                     _USBCtrlTrfTxService:
 17145                           	opt stack 25
 17146                           
 17147                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;incstack = 0
 17151  005A7C  0E08               	movlw	8
 17152  005A7E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17153                           
 17154                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17155  005A80  0100               	movlb	0	; () banked
 17156  005A82  51D0               	movf	(_inPipes+5)& (0+255),w,b
 17157  005A84  E110               	bnz	l11515
 17158  005A86  0E08               	movlw	8
 17159  005A88  5DCF               	subwf	(_inPipes+4)& (0+255),w,b
 17160  005A8A  B0D8               	btfsc	status,0,c
 17161  005A8C  D00C               	goto	l235
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17165  005A8E  C0CF  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17166                           
 17167                           ; BSR set to: 0
 17168                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17169  005A92  51F7               	movf	_shortPacketStatus& (0+255),w,b
 17170  005A94  A4D8               	btfss	status,2,c
 17171  005A96  D002               	goto	l233
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17175  005A98  0E01               	movlw	1
 17176  005A9A  D004               	goto	L16
 17177  005A9C                     l233:
 17178                           
 17179                           ; BSR set to: 0
 17180                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17181                           
 17182                           ; BSR set to: 0
 17183  005A9C  05F7               	decf	_shortPacketStatus& (0+255),w,b
 17184  005A9E  A4D8               	btfss	status,2,c
 17185  005AA0  D002               	goto	l235
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17189  005AA2  0E02               	movlw	2
 17190  005AA4                     L16:
 17191  005AA4  6FF7               	movwf	_shortPacketStatus& (0+255),b
 17192  005AA6                     l235:
 17193  005AA6                     l11515:
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17197  005AA6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17198  005AA8  5FCF               	subwf	(_inPipes+4)& (0+255),f,b
 17199  005AAA  0E00               	movlw	0
 17200  005AAC  5BD0               	subwfb	(_inPipes+5)& (0+255),f,b
 17201                           
 17202                           ; BSR set to: 0
 17203                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17204  005AAE  EE20 F001          	lfsr	2,1
 17205  005AB2  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17206  005AB4  26D9               	addwf	fsr2l,f,c
 17207  005AB6  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17208  005AB8  22DA               	addwfc	fsr2h,f,c
 17209  005ABA  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17210                           
 17211                           ; BSR set to: 0
 17212                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17213  005ABE  0E38               	movlw	56
 17214  005AC0  0101               	movlb	1	; () banked
 17215  005AC2  6F88               	movwf	_pDst& (0+255),b
 17216  005AC4  0E0D               	movlw	13
 17217  005AC6  6F89               	movwf	(_pDst+1)& (0+255),b
 17218                           
 17219                           ; BSR set to: 1
 17220                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17221  005AC8  0100               	movlb	0	; () banked
 17222  005ACA  A1CE               	btfss	(_inPipes+3)& (0+255),0,b
 17223  005ACC  D01D               	goto	l237
 17224  005ACE  D03C               	goto	l241
 17225  005AD0                     
 17226                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17227                           
 17228                           ; BSR set to: 0
 17229  005AD0  C0CB  FFF6         	movff	_inPipes,tblptrl
 17230  005AD4  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17231  005AD8  6AF8               	clrf	tblptru,c
 17232  005ADA  C188  FFD9         	movff	_pDst,fsr2l
 17233  005ADE  C189  FFDA         	movff	_pDst+1,fsr2h
 17234  005AE2  0E0E               	movlw	(high __ramtop+-1)
 17235  005AE4  64F7               	cpfsgt	tblptrh,c
 17236  005AE6  D003               	bra	u8317
 17237  005AE8  0008               	tblrd		*
 17238  005AEA  50F5               	movf	tablat,w,c
 17239  005AEC  D005               	bra	u8310
 17240  005AEE                     u8317:
 17241  005AEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 17242  005AF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 17243  005AF6  50EF               	movf	indf0,w,c
 17244  005AF8                     u8310:
 17245  005AF8  6EDF               	movwf	indf2,c
 17246  005AFA  0100               	movlb	0	; () banked
 17247  005AFC  4BCB               	infsnz	_inPipes& (0+255),f,b
 17248  005AFE  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17249                           
 17250                           ; BSR set to: 0
 17251  005B00  0101               	movlb	1	; () banked
 17252  005B02  4B88               	infsnz	_pDst& (0+255),f,b
 17253  005B04  2B89               	incf	(_pDst+1)& (0+255),f,b
 17254                           
 17255                           ; BSR set to: 1
 17256                           ;usb_device.c: 1816: byteToSend--;
 17257  005B06  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17258  005B08                     l237:
 17259                           
 17260                           ; BSR set to: 1
 17261  005B08  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17262  005B0A  B4D8               	btfsc	status,2,c
 17263  005B0C  0012               	return	
 17264  005B0E  D7E0               	goto	l238
 17265  005B10                     
 17266                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17267  005B10  C0CB  FFF6         	movff	_inPipes,tblptrl
 17268  005B14  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17269  005B18  6AF8               	clrf	tblptru,c
 17270  005B1A  C188  FFD9         	movff	_pDst,fsr2l
 17271  005B1E  C189  FFDA         	movff	_pDst+1,fsr2h
 17272  005B22  0E0E               	movlw	(high __ramtop+-1)
 17273  005B24  64F7               	cpfsgt	tblptrh,c
 17274  005B26  D003               	bra	u8337
 17275  005B28  0008               	tblrd		*
 17276  005B2A  50F5               	movf	tablat,w,c
 17277  005B2C  D005               	bra	u8330
 17278  005B2E                     u8337:
 17279  005B2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17280  005B32  CFF7 FFEA          	movff	tblptrh,fsr0h
 17281  005B36  50EF               	movf	indf0,w,c
 17282  005B38                     u8330:
 17283  005B38  6EDF               	movwf	indf2,c
 17284  005B3A  0100               	movlb	0	; () banked
 17285  005B3C  4BCB               	infsnz	_inPipes& (0+255),f,b
 17286  005B3E  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17287                           
 17288                           ; BSR set to: 0
 17289  005B40  0101               	movlb	1	; () banked
 17290  005B42  4B88               	infsnz	_pDst& (0+255),f,b
 17291  005B44  2B89               	incf	(_pDst+1)& (0+255),f,b
 17292                           
 17293                           ; BSR set to: 1
 17294                           ;usb_device.c: 1824: byteToSend--;
 17295  005B46  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17296  005B48                     l241:
 17297                           
 17298                           ; BSR set to: 1
 17299  005B48  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17300  005B4A  B4D8               	btfsc	status,2,c
 17301  005B4C  0012               	return	
 17302  005B4E  D7E0               	goto	l242
 17303  005B50                     __end_of_USBCtrlTrfTxService:
 17304                           	opt stack 0
 17305                           tosu	equ	0xFFF
 17306                           tosh	equ	0xFFE
 17307                           tosl	equ	0xFFD
 17308                           pclath	equ	0xFFA
 17309                           tblptru	equ	0xFF8
 17310                           tblptrh	equ	0xFF7
 17311                           tblptrl	equ	0xFF6
 17312                           tablat	equ	0xFF5
 17313                           prodh	equ	0xFF4
 17314                           prodl	equ	0xFF3
 17315                           intcon	equ	0xFF2
 17316                           intcon2	equ	0xFF1
 17317                           intcon3	equ	0xFF0
 17318                           indf0	equ	0xFEF
 17319                           postinc0	equ	0xFEE
 17320                           fsr0h	equ	0xFEA
 17321                           fsr0l	equ	0xFE9
 17322                           wreg	equ	0xFE8
 17323                           indf1	equ	0xFE7
 17324                           postdec1	equ	0xFE5
 17325                           plusw1	equ	0xFE3
 17326                           fsr1h	equ	0xFE2
 17327                           fsr1l	equ	0xFE1
 17328                           indf2	equ	0xFDF
 17329                           postinc2	equ	0xFDE
 17330                           postdec2	equ	0xFDD
 17331                           plusw2	equ	0xFDB
 17332                           fsr2h	equ	0xFDA
 17333                           fsr2l	equ	0xFD9
 17334                           status	equ	0xFD8
 17335                           
 17336 ;; *************** function _APP_DeviceMSDTasks *****************
 17337 ;; Defined at:
 17338 ;;		line 110 in file "app_device_msd.c"
 17339 ;; Parameters:    Size  Location     Type
 17340 ;;		None
 17341 ;; Auto vars:     Size  Location     Type
 17342 ;;		None
 17343 ;; Return value:  Size  Location     Type
 17344 ;;                  1    wreg      void 
 17345 ;; Registers used:
 17346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17347 ;; Tracked objects:
 17348 ;;		On entry : 0/0
 17349 ;;		On exit  : 0/0
 17350 ;;		Unchanged: 0/0
 17351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17356 ;;Total ram usage:        0 bytes
 17357 ;; Hardware stack levels used:    1
 17358 ;; Hardware stack levels required when called:   11
 17359 ;; This function calls:
 17360 ;;		_MSDTasks
 17361 ;; This function is called by:
 17362 ;;		_main
 17363 ;; This function uses a non-reentrant model
 17364 ;;
 17365                           
 17366                           	psect	text82
 17367  008E62                     __ptext82:
 17368                           	opt stack 0
 17369  008E62                     _APP_DeviceMSDTasks:
 17370                           	opt stack 19
 17371                           
 17372                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17373                           
 17374                           ;incstack = 0
 17375  008E62  0E20               	movlw	32
 17376  008E64  0100               	movlb	0	; () banked
 17377  008E66  61F8               	cpfslt	_USBDeviceState& (0+255),b
 17378  008E68  D001               	goto	l1008
 17379  008E6A  0012               	return	
 17380  008E6C                     l1008:
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17384  008E6C  B265               	btfsc	3941,1,c	;volatile
 17385  008E6E  0012               	return	
 17386                           
 17387                           ; BSR set to: 0
 17388                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17389                           
 17390                           ; BSR set to: 0
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17394  008E70  EC18  F010         	call	_MSDTasks	;wreg free
 17395  008E74  0012               	return		;funcret
 17396  008E76                     __end_of_APP_DeviceMSDTasks:
 17397                           	opt stack 0
 17398                           tosu	equ	0xFFF
 17399                           tosh	equ	0xFFE
 17400                           tosl	equ	0xFFD
 17401                           pclath	equ	0xFFA
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           intcon	equ	0xFF2
 17409                           intcon2	equ	0xFF1
 17410                           intcon3	equ	0xFF0
 17411                           indf0	equ	0xFEF
 17412                           postinc0	equ	0xFEE
 17413                           fsr0h	equ	0xFEA
 17414                           fsr0l	equ	0xFE9
 17415                           wreg	equ	0xFE8
 17416                           indf1	equ	0xFE7
 17417                           postdec1	equ	0xFE5
 17418                           plusw1	equ	0xFE3
 17419                           fsr1h	equ	0xFE2
 17420                           fsr1l	equ	0xFE1
 17421                           indf2	equ	0xFDF
 17422                           postinc2	equ	0xFDE
 17423                           postdec2	equ	0xFDD
 17424                           plusw2	equ	0xFDB
 17425                           fsr2h	equ	0xFDA
 17426                           fsr2l	equ	0xFD9
 17427                           status	equ	0xFD8
 17428                           
 17429 ;; *************** function _MSDTasks *****************
 17430 ;; Defined at:
 17431 ;;		line 335 in file "usb_device_msd.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;		None
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;  i               1   81[COMRAM] unsigned char 
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1    wreg      unsigned char 
 17438 ;; Registers used:
 17439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17446 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17448 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17449 ;;Total ram usage:        6 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; Hardware stack levels required when called:   10
 17452 ;; This function calls:
 17453 ;;		_MSDProcessCommand
 17454 ;;		_USBStallEndpoint
 17455 ;;		_USBTransferOnePacket
 17456 ;; This function is called by:
 17457 ;;		_APP_DeviceMSDTasks
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           	psect	text83
 17462  002030                     __ptext83:
 17463                           	opt stack 0
 17464  002030                     _MSDTasks:
 17465                           	opt stack 19
 17466                           
 17467                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17468                           
 17469                           ;incstack = 0
 17470  002030  0E20               	movlw	32
 17471  002032  0100               	movlb	0	; () banked
 17472  002034  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17473  002036  A4D8               	btfss	status,2,c
 17474  002038  0012               	return	
 17475  00203A  D115               	goto	l554
 17476  00203C                     
 17477                           ; BSR set to: 0
 17478                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17479                           
 17480                           ; BSR set to: 0
 17481  00203C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17482  00203E  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17483  002040  B4D8               	btfsc	status,2,c
 17484  002042  D006               	goto	u11830
 17485                           
 17486                           ; BSR set to: 0
 17487  002044  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17488  002048  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17489  00204C  BEDF               	btfsc	indf2,7,c
 17490  00204E  0012               	return	
 17491  002050                     u11830:
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17495                           
 17496                           ; BSR set to: 0
 17497  002050  0E00               	movlw	0
 17498  002052  6E52               	movwf	MSDTasks@i,c
 17499  002054                     l14937:
 17500                           
 17501                           ; BSR set to: 0
 17502  002054  0E1E               	movlw	30
 17503  002056  6452               	cpfsgt	MSDTasks@i,c
 17504  002058  D001               	goto	l559
 17505  00205A  D014               	goto	u11850
 17506  00205C                     l559:
 17507                           
 17508                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17509                           
 17510                           ; BSR set to: 0
 17511  00205C  5052               	movf	MSDTasks@i,w,c
 17512  00205E  0D01               	mullw	1
 17513  002060  0E40               	movlw	64
 17514  002062  24F3               	addwf	prodl,w,c
 17515  002064  6ED9               	movwf	fsr2l,c
 17516  002066  0E0D               	movlw	13
 17517  002068  20F4               	addwfc	prodh,w,c
 17518  00206A  6EDA               	movwf	fsr2h,c
 17519  00206C  5052               	movf	MSDTasks@i,w,c
 17520  00206E  0D01               	mullw	1
 17521  002070  0E00               	movlw	low _gblCBW
 17522  002072  24F3               	addwf	prodl,w,c
 17523  002074  6EE1               	movwf	fsr1l,c
 17524  002076  0E01               	movlw	high _gblCBW
 17525  002078  20F4               	addwfc	prodh,w,c
 17526  00207A  6EE2               	movwf	fsr1h,c
 17527  00207C  CFDF FFE7          	movff	indf2,indf1
 17528  002080  2A52               	incf	MSDTasks@i,f,c
 17529  002082  D7E8               	goto	l14937
 17530  002084                     u11850:
 17531                           
 17532                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17533  002084  0100               	movlb	0	; () banked
 17534  002086  EE20 F001          	lfsr	2,1
 17535  00208A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17536  00208C  26D9               	addwf	fsr2l,f,c
 17537  00208E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17538  002090  22DA               	addwfc	fsr2h,f,c
 17539  002092  0E1F               	movlw	31
 17540  002094  18DE               	xorwf	postinc2,w,c
 17541  002096  A4D8               	btfss	status,2,c
 17542  002098  D070               	goto	l561
 17543                           
 17544                           ; BSR set to: 0
 17545  00209A  0E55               	movlw	85
 17546  00209C  0101               	movlb	1	; () banked
 17547  00209E  1900               	xorwf	_gblCBW& (0+255),w,b
 17548  0020A0  E16C               	bnz	l561
 17549  0020A2  0E53               	movlw	83
 17550  0020A4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17551  0020A6  E169               	bnz	l561
 17552  0020A8  0E42               	movlw	66
 17553  0020AA  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17554  0020AC  E166               	bnz	l14987
 17555  0020AE  0E43               	movlw	67
 17556  0020B0  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17557  0020B2  A4D8               	btfss	status,2,c
 17558  0020B4  D062               	goto	l561
 17559                           
 17560                           ; BSR set to: 1
 17561                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17562  0020B6  0E01               	movlw	1
 17563  0020B8  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17564                           
 17565                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17566  0020BA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17567  0020BC  A4D8               	btfss	status,2,c
 17568  0020BE  D052               	goto	l562
 17569                           
 17570                           ; BSR set to: 1
 17571  0020C0  0E11               	movlw	17
 17572  0020C2  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17573  0020C4  D04F               	goto	l562
 17574                           
 17575                           ; BSR set to: 1
 17576  0020C6  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17577  0020C8  B4D8               	btfsc	status,2,c
 17578  0020CA  D04C               	goto	l562
 17579                           
 17580                           ; BSR set to: 1
 17581  0020CC  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17582  0020D0  0E3F               	movlw	63
 17583  0020D2  164D               	andwf	??_MSDTasks,f,c
 17584  0020D4  A4D8               	btfss	status,2,c
 17585  0020D6  D046               	goto	l562
 17586                           
 17587                           ; BSR set to: 1
 17588                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17589  0020D8  0E55               	movlw	85
 17590  0020DA  010D               	movlb	13	; () banked
 17591  0020DC  6F80               	movwf	128,b	;volatile
 17592  0020DE  0E53               	movlw	83
 17593  0020E0  6F81               	movwf	129,b	;volatile
 17594  0020E2  0E42               	movlw	66
 17595  0020E4  6F82               	movwf	130,b	;volatile
 17596  0020E6  0E53               	movlw	83
 17597  0020E8  6F83               	movwf	131,b	;volatile
 17598                           
 17599                           ; BSR set to: 13
 17600                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17601  0020EA  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17602  0020EE  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17603  0020F2  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17604  0020F6  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17605                           
 17606                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17607  0020FA  0E00               	movlw	0
 17608  0020FC  6F88               	movwf	136,b	;volatile
 17609  0020FE  0E00               	movlw	0
 17610  002100  6F89               	movwf	137,b	;volatile
 17611  002102  0E00               	movlw	0
 17612  002104  6F8A               	movwf	138,b	;volatile
 17613  002106  0E00               	movlw	0
 17614  002108  6F8B               	movwf	139,b	;volatile
 17615                           
 17616                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17617  00210A  0E00               	movlw	0
 17618  00210C  6F8C               	movwf	140,b	;volatile
 17619                           
 17620                           ; BSR set to: 13
 17621                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17622  00210E  0100               	movlb	0	; () banked
 17623  002110  69EC               	setf	_MSDCommandState& (0+255),b
 17624                           
 17625                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17626  002112  0E00               	movlw	0
 17627  002114  6FEB               	movwf	_MSDReadState& (0+255),b
 17628                           
 17629                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17630  002116  0E00               	movlw	0
 17631  002118  6FEA               	movwf	_MSDWriteState& (0+255),b
 17632                           
 17633                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17634  00211A  0E00               	movlw	0
 17635  00211C  6FE9               	movwf	_MSDRetryAttempt& (0+255),b
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17639  00211E  0E03               	movlw	3
 17640  002120  0101               	movlb	1	; () banked
 17641  002122  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17642  002124  B4D8               	btfsc	status,2,c
 17643  002126  D008               	goto	l563
 17644                           
 17645                           ; BSR set to: 1
 17646                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17647  002128  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17648  00212A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17649  00212C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17650  00212E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17651                           
 17652                           ; BSR set to: 1
 17653                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17654  002130  0E00               	movlw	0
 17655  002132  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17656                           
 17657                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17658  002134  0E00               	movlw	0
 17659  002136  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17660  002138                     l563:
 17661                           
 17662                           ; BSR set to: 1
 17663                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 17664                           
 17665                           ; BSR set to: 1
 17666  002138  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 17667  00213A  D002               	goto	l564
 17668                           
 17669                           ; BSR set to: 1
 17670                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 17671  00213C  0E01               	movlw	1
 17672  00213E  D001               	goto	L17
 17673  002140                     l564:
 17674                           
 17675                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 17676                           
 17677                           ; BSR set to: 0
 17678  002140  0E02               	movlw	2
 17679  002142                     L17:
 17680  002142  0100               	movlb	0	; () banked
 17681  002144  6FED               	movwf	_MSD_State& (0+255),b
 17682                           
 17683                           ; BSR set to: 0
 17684                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 17685                           
 17686                           ; BSR set to: 0
 17687  002146  0101               	movlb	1	; () banked
 17688  002148  5108               	movf	(_gblCBW+8)& (0+255),w,b
 17689  00214A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 17690  00214C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 17691  00214E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 17692  002150  B4D8               	btfsc	status,2,c
 17693  002152  D002               	goto	l566
 17694                           
 17695                           ; BSR set to: 1
 17696                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 17697  002154  0E00               	movlw	0
 17698  002156  D001               	goto	L18
 17699  002158                     l566:
 17700                           
 17701                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 17702                           
 17703                           ; BSR set to: 0
 17704  002158  0E01               	movlw	1
 17705  00215A                     L18:
 17706  00215A  0100               	movlb	0	; () banked
 17707  00215C  6FE7               	movwf	_MSDHostNoData& (0+255),b
 17708                           
 17709                           ; BSR set to: 0
 17710                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 17711                           
 17712                           ; BSR set to: 0
 17713  00215E  C10F  F0EC         	movff	_gblCBW+15,_MSDCommandState
 17714                           
 17715                           ;usb_device_msd.c: 454: }
 17716  002162  0012               	return	
 17717  002164                     l562:
 17718                           
 17719                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 17720                           
 17721                           ; BSR set to: 0
 17722  002164  0E01               	movlw	1
 17723  002166  6E01               	movwf	USBStallEndpoint@dir,c
 17724  002168  0E02               	movlw	2
 17725  00216A  ECE7  F023         	call	_USBStallEndpoint
 17726                           
 17727                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 17728  00216E  0E00               	movlw	0
 17729  002170  6E01               	movwf	USBStallEndpoint@dir,c
 17730  002172  0E02               	movlw	2
 17731  002174  ECE7  F023         	call	_USBStallEndpoint
 17732                           
 17733                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 17734  002178  0012               	return	
 17735  00217A                     l561:
 17736  00217A                     l14987:
 17737                           
 17738                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 17739  00217A  0E01               	movlw	1
 17740  00217C  6E01               	movwf	USBStallEndpoint@dir,c
 17741  00217E  0E02               	movlw	2
 17742  002180  ECE7  F023         	call	_USBStallEndpoint
 17743                           
 17744                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 17745  002184  0E00               	movlw	0
 17746  002186  6E01               	movwf	USBStallEndpoint@dir,c
 17747  002188  0E02               	movlw	2
 17748  00218A  ECE7  F023         	call	_USBStallEndpoint
 17749                           
 17750                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 17751  00218E  0E00               	movlw	0
 17752  002190  0101               	movlb	1	; () banked
 17753  002192  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17754                           
 17755                           ; BSR set to: 1
 17756                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 17757                           
 17758                           ; BSR set to: 1
 17759  002194  0012               	return	
 17760  002196                     
 17761                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 17762                           
 17763                           ; BSR set to: 1
 17764  002196  EC52  F022         	call	_MSDProcessCommand	;wreg free
 17765  00219A  0AFF               	xorlw	255
 17766  00219C  A4D8               	btfss	status,2,c
 17767  00219E  0012               	return	
 17768                           
 17769                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 17770  0021A0  0E03               	movlw	3
 17771  0021A2  0100               	movlb	0	; () banked
 17772  0021A4  6FED               	movwf	_MSD_State& (0+255),b
 17773                           
 17774                           ; BSR set to: 0
 17775                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 17776  0021A6  0012               	return	
 17777  0021A8                     
 17778                           ; BSR set to: 0
 17779                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 17780                           
 17781                           ; BSR set to: 0
 17782  0021A8  EC52  F022         	call	_MSDProcessCommand	;wreg free
 17783  0021AC  0AFF               	xorlw	255
 17784  0021AE  A4D8               	btfss	status,2,c
 17785  0021B0  0012               	return	
 17786                           
 17787                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 17788  0021B2  010D               	movlb	13	; () banked
 17789  0021B4  518C               	movf	140,w,b	;volatile
 17790  0021B6  A4D8               	btfss	status,2,c
 17791  0021B8  D008               	goto	l575
 17792                           
 17793                           ; BSR set to: 13
 17794  0021BA  5188               	movf	136,w,b	;volatile
 17795  0021BC  1189               	iorwf	137,w,b	;volatile
 17796  0021BE  118A               	iorwf	138,w,b	;volatile
 17797  0021C0  118B               	iorwf	139,w,b	;volatile
 17798  0021C2  B4D8               	btfsc	status,2,c
 17799  0021C4  D002               	goto	l575
 17800                           
 17801                           ; BSR set to: 13
 17802                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 17803  0021C6  0E02               	movlw	2
 17804  0021C8  6F8C               	movwf	140,b	;volatile
 17805  0021CA                     l575:
 17806                           
 17807                           ; BSR set to: 13
 17808                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 17809  0021CA  0E03               	movlw	3
 17810  0021CC  0100               	movlb	0	; () banked
 17811  0021CE  6FED               	movwf	_MSD_State& (0+255),b
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 17815  0021D0  0012               	return	
 17816  0021D2                     
 17817                           ; BSR set to: 0
 17818                           
 17819                           ; BSR set to: 0
 17820  0021D2  C0D5  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 17821  0021D6  C0D6  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 17822                           
 17823                           ; BSR set to: 0
 17824                           
 17825                           ; BSR set to: 0
 17826                           
 17827                           ; BSR set to: 0
 17828  0021DA  504E               	movf	_MSDTasks$2372,w,c
 17829  0021DC  104F               	iorwf	_MSDTasks$2372+1,w,c
 17830  0021DE  B4D8               	btfsc	status,2,c
 17831  0021E0  D00A               	goto	l577
 17832                           
 17833                           ; BSR set to: 0
 17834  0021E2  C0D5  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 17835  0021E6  C0D6  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 17836                           
 17837                           ; BSR set to: 0
 17838                           
 17839                           ; BSR set to: 0
 17840                           
 17841                           ; BSR set to: 0
 17842                           
 17843                           ; BSR set to: 0
 17844  0021EA  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 17845  0021EE  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 17846  0021F2  BEDF               	btfsc	indf2,7,c
 17847  0021F4  0012               	return	
 17848  0021F6                     l577:
 17849                           
 17850                           ; BSR set to: 0
 17851                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 17852                           
 17853                           ; BSR set to: 0
 17854  0021F6  0E01               	movlw	1
 17855  0021F8  6E01               	movwf	USBTransferOnePacket@dir,c
 17856  0021FA  0E80               	movlw	128
 17857  0021FC  6E02               	movwf	USBTransferOnePacket@data,c
 17858  0021FE  0E0D               	movlw	13
 17859  002200  6E03               	movwf	USBTransferOnePacket@data+1,c
 17860  002202  0E0D               	movlw	13
 17861  002204  6E04               	movwf	USBTransferOnePacket@len,c
 17862  002206  0E02               	movlw	2
 17863  002208  ECF2  F025         	call	_USBTransferOnePacket
 17864  00220C  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 17865  002210  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 17866                           
 17867                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 17868  002214  0100               	movlb	0	; () banked
 17869  002216  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17870  002218  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17871  00221A  B4D8               	btfsc	status,2,c
 17872  00221C  D006               	goto	u12020
 17873                           
 17874                           ; BSR set to: 0
 17875  00221E  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17876  002222  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17877  002226  BEDF               	btfsc	indf2,7,c
 17878  002228  D00F               	goto	l586
 17879  00222A                     u12020:
 17880                           
 17881                           ; BSR set to: 0
 17882                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 17883                           
 17884                           ; BSR set to: 0
 17885  00222A  0E00               	movlw	0
 17886  00222C  6E01               	movwf	USBTransferOnePacket@dir,c
 17887  00222E  0E40               	movlw	64
 17888  002230  6E02               	movwf	USBTransferOnePacket@data,c
 17889  002232  0E0D               	movlw	13
 17890  002234  6E03               	movwf	USBTransferOnePacket@data+1,c
 17891  002236  0E40               	movlw	64
 17892  002238  6E04               	movwf	USBTransferOnePacket@len,c
 17893  00223A  0E02               	movlw	2
 17894  00223C  ECF2  F025         	call	_USBTransferOnePacket
 17895  002240  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17896  002244  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17897  002248                     l586:
 17898                           
 17899                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 17900  002248  0E00               	movlw	0
 17901  00224A  0100               	movlb	0	; () banked
 17902  00224C  6FED               	movwf	_MSD_State& (0+255),b
 17903                           
 17904                           ;usb_device_msd.c: 513: break;
 17905  00224E  0012               	return	
 17906  002250                     
 17907                           ; BSR set to: 0
 17908                           ;usb_device_msd.c: 518: MSD_State=0x00;
 17909                           
 17910                           ; BSR set to: 0
 17911  002250  0E00               	movlw	0
 17912  002252  6FED               	movwf	_MSD_State& (0+255),b
 17913                           
 17914                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 17915  002254  0E02               	movlw	2
 17916  002256  010D               	movlb	13	; () banked
 17917  002258  6F8C               	movwf	140,b	;volatile
 17918                           
 17919                           ; BSR set to: 13
 17920                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 17921  00225A  0E00               	movlw	0
 17922  00225C  6E01               	movwf	USBStallEndpoint@dir,c
 17923  00225E  0E02               	movlw	2
 17924  002260  ECE7  F023         	call	_USBStallEndpoint
 17925                           
 17926                           ;usb_device_msd.c: 521: }
 17927  002264  0012               	return	
 17928  002266                     l554:
 17929  002266  0100               	movlb	0	; () banked
 17930  002268  51ED               	movf	_MSD_State& (0+255),w,b
 17931                           
 17932                           ; Switch size 1, requested type "space"
 17933                           ; Number of cases is 4, Range of values is 0 to 3
 17934                           ; switch strategies available:
 17935                           ; Name         Instructions Cycles
 17936                           ; simple_byte           13     7 (average)
 17937                           ;	Chosen strategy is simple_byte
 17938  00226A  0A00               	xorlw	0	; case 0
 17939  00226C  B4D8               	btfsc	status,2,c
 17940  00226E  D6E6               	goto	l555
 17941  002270  0A01               	xorlw	1	; case 1
 17942  002272  B4D8               	btfsc	status,2,c
 17943  002274  D790               	goto	l571
 17944  002276  0A03               	xorlw	3	; case 2
 17945  002278  B4D8               	btfsc	status,2,c
 17946  00227A  D796               	goto	l573
 17947  00227C  0A01               	xorlw	1	; case 3
 17948  00227E  B4D8               	btfsc	status,2,c
 17949  002280  D7A8               	goto	l576
 17950  002282  D7E6               	goto	l589
 17951  002284                     __end_of_MSDTasks:
 17952                           	opt stack 0
 17953                           tosu	equ	0xFFF
 17954                           tosh	equ	0xFFE
 17955                           tosl	equ	0xFFD
 17956                           pclath	equ	0xFFA
 17957                           tblptru	equ	0xFF8
 17958                           tblptrh	equ	0xFF7
 17959                           tblptrl	equ	0xFF6
 17960                           tablat	equ	0xFF5
 17961                           prodh	equ	0xFF4
 17962                           prodl	equ	0xFF3
 17963                           intcon	equ	0xFF2
 17964                           intcon2	equ	0xFF1
 17965                           intcon3	equ	0xFF0
 17966                           indf0	equ	0xFEF
 17967                           postinc0	equ	0xFEE
 17968                           fsr0h	equ	0xFEA
 17969                           fsr0l	equ	0xFE9
 17970                           wreg	equ	0xFE8
 17971                           indf1	equ	0xFE7
 17972                           postdec1	equ	0xFE5
 17973                           plusw1	equ	0xFE3
 17974                           fsr1h	equ	0xFE2
 17975                           fsr1l	equ	0xFE1
 17976                           indf2	equ	0xFDF
 17977                           postinc2	equ	0xFDE
 17978                           postdec2	equ	0xFDD
 17979                           plusw2	equ	0xFDB
 17980                           fsr2h	equ	0xFDA
 17981                           fsr2l	equ	0xFD9
 17982                           status	equ	0xFD8
 17983                           
 17984 ;; *************** function _MSDProcessCommand *****************
 17985 ;; Defined at:
 17986 ;;		line 553 in file "usb_device_msd.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;		None
 17989 ;; Auto vars:     Size  Location     Type
 17990 ;;		None
 17991 ;; Return value:  Size  Location     Type
 17992 ;;                  1    wreg      unsigned char 
 17993 ;; Registers used:
 17994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18002 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18004 ;;Total ram usage:        5 bytes
 18005 ;; Hardware stack levels used:    1
 18006 ;; Hardware stack levels required when called:    9
 18007 ;; This function calls:
 18008 ;;		_ExternalFlash_MediaDetect
 18009 ;;		_ExternalFlash_MediaInitialize
 18010 ;;		_MSDProcessCommandMediaAbsent
 18011 ;;		_MSDProcessCommandMediaPresent
 18012 ;; This function is called by:
 18013 ;;		_MSDTasks
 18014 ;; This function uses a non-reentrant model
 18015 ;;
 18016                           
 18017                           	psect	text84
 18018  0044A4                     __ptext84:
 18019                           	opt stack 0
 18020  0044A4                     _MSDProcessCommand:
 18021                           	opt stack 19
 18022                           
 18023                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18024                           
 18025                           ;incstack = 0
 18026  0044A4  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18027  0044A8  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18028  0044AC  D801               	call	u11148
 18029  0044AE  D00A               	goto	u11149
 18030  0044B0                     u11148:
 18031  0044B0  0005               	push	
 18032  0044B2  6EFA               	movwf	pclath,c
 18033  0044B4  0101               	movlb	1	; () banked
 18034  0044B6  51B9               	movf	(_LUN+6)& (0+255),w,b
 18035  0044B8  6EFD               	movwf	tosl,c
 18036  0044BA  51BA               	movf	(_LUN+7)& (0+255),w,b
 18037  0044BC  6EFE               	movwf	tosh,c
 18038  0044BE  6AFF               	clrf	tosu,c
 18039  0044C0  50FA               	movf	pclath,w,c
 18040  0044C2  0012               	return		;indir
 18041  0044C4                     u11149:
 18042  0044C4  0900               	iorlw	0
 18043  0044C6  B4D8               	btfsc	status,2,c
 18044  0044C8  D00C               	goto	u11160
 18045  0044CA  0101               	movlb	1	; () banked
 18046  0044CC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18047  0044CE  0D01               	mullw	1
 18048  0044D0  0EE8               	movlw	low _SoftDetach
 18049  0044D2  24F3               	addwf	prodl,w,c
 18050  0044D4  6ED9               	movwf	fsr2l,c
 18051  0044D6  0E00               	movlw	high _SoftDetach
 18052  0044D8  20F4               	addwfc	prodh,w,c
 18053  0044DA  6EDA               	movwf	fsr2h,c
 18054  0044DC  04DE               	decf	postinc2,w,c
 18055  0044DE  A4D8               	btfss	status,2,c
 18056  0044E0  D019               	goto	l592
 18057  0044E2                     u11160:
 18058                           
 18059                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18060                           
 18061                           ; BSR set to: 1
 18062  0044E2  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18063  0044E6  0E01               	movlw	1
 18064  0044E8  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18065  0044EA  0E00               	movlw	0
 18066  0044EC  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18067  0044EE  2A48               	incf	??_MSDProcessCommand,f,c
 18068  0044F0  D003               	goto	u11174
 18069  0044F2                     u11175:
 18070  0044F2  90D8               	bcf	status,0,c
 18071  0044F4  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18072  0044F6  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18073  0044F8                     u11174:
 18074  0044F8  2E48               	decfsz	??_MSDProcessCommand,f,c
 18075  0044FA  D7FB               	goto	u11175
 18076  0044FC  1C49               	comf	??_MSDProcessCommand+1,w,c
 18077  0044FE  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 18078  004500  1C4A               	comf	??_MSDProcessCommand+2,w,c
 18079  004502  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 18080  004504  504B               	movf	??_MSDProcessCommand+3,w,c
 18081  004506  0101               	movlb	1	; () banked
 18082  004508  1782               	andwf	_gblMediaPresent& (0+255),f,b
 18083  00450A  504C               	movf	??_MSDProcessCommand+4,w,c
 18084  00450C  1783               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 18085                           
 18086                           ; BSR set to: 1
 18087                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 18088  00450E  EC41  F03D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18089                           
 18090                           ;usb_device_msd.c: 563: }
 18091  004512  D04E               	goto	l599
 18092  004514                     l592:
 18093                           
 18094                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18095  004514  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18096  004518  0E01               	movlw	1
 18097  00451A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18098  00451C  0E00               	movlw	0
 18099  00451E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18100  004520  2A48               	incf	??_MSDProcessCommand,f,c
 18101  004522  D003               	goto	u11184
 18102  004524                     u11185:
 18103  004524  90D8               	bcf	status,0,c
 18104  004526  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18105  004528  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18106  00452A                     u11184:
 18107  00452A  2E48               	decfsz	??_MSDProcessCommand,f,c
 18108  00452C  D7FB               	goto	u11185
 18109  00452E  0101               	movlb	1	; () banked
 18110  004530  5182               	movf	_gblMediaPresent& (0+255),w,b
 18111  004532  1649               	andwf	??_MSDProcessCommand+1,f,c
 18112  004534  5183               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18113  004536  164A               	andwf	??_MSDProcessCommand+2,f,c
 18114  004538  5049               	movf	??_MSDProcessCommand+1,w,c
 18115  00453A  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18116  00453C  A4D8               	btfss	status,2,c
 18117  00453E  D036               	goto	l596
 18118                           
 18119                           ; BSR set to: 1
 18120                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18121  004540  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18122  004544  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18123  004548  D801               	call	u11208
 18124  00454A  D009               	goto	u11209
 18125  00454C                     u11208:
 18126  00454C  0005               	push	
 18127  00454E  6EFA               	movwf	pclath,c
 18128  004550  51B3               	movf	_LUN& (0+255),w,b
 18129  004552  6EFD               	movwf	tosl,c
 18130  004554  51B4               	movf	(_LUN+1)& (0+255),w,b
 18131  004556  6EFE               	movwf	tosh,c
 18132  004558  6AFF               	clrf	tosu,c
 18133  00455A  50FA               	movf	pclath,w,c
 18134  00455C  0012               	return		;indir
 18135  00455E                     u11209:
 18136  00455E  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18137  004560  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18138  004562  B4D8               	btfsc	status,2,c
 18139  004564  D020               	goto	l597
 18140                           
 18141                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18142  004566  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18143  00456A  0E01               	movlw	1
 18144  00456C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18145  00456E  0E00               	movlw	0
 18146  004570  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18147  004572  2A48               	incf	??_MSDProcessCommand,f,c
 18148  004574  D003               	goto	u11224
 18149  004576                     u11225:
 18150  004576  90D8               	bcf	status,0,c
 18151  004578  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18152  00457A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18153  00457C                     u11224:
 18154  00457C  2E48               	decfsz	??_MSDProcessCommand,f,c
 18155  00457E  D7FB               	goto	u11225
 18156  004580  5049               	movf	??_MSDProcessCommand+1,w,c
 18157  004582  0101               	movlb	1	; () banked
 18158  004584  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 18159  004586  504A               	movf	??_MSDProcessCommand+2,w,c
 18160  004588  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18161                           
 18162                           ; BSR set to: 1
 18163                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18164  00458A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18165  00458C  0BF0               	andlw	-16
 18166  00458E  0906               	iorlw	6
 18167  004590  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18168                           
 18169                           ; BSR set to: 1
 18170                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18171  004592  0E28               	movlw	40
 18172  004594  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18173                           
 18174                           ; BSR set to: 1
 18175                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18176  004596  0E00               	movlw	0
 18177  004598  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18178                           
 18179                           ; BSR set to: 1
 18180                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18181  00459A  0E01               	movlw	1
 18182  00459C  010D               	movlb	13	; () banked
 18183  00459E  6F8C               	movwf	140,b	;volatile
 18184                           
 18185                           ; BSR set to: 13
 18186                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18187  0045A0  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18188                           
 18189                           ;usb_device_msd.c: 589: }
 18190  0045A4  D005               	goto	l599
 18191  0045A6                     l597:
 18192                           
 18193                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18194  0045A6  EC41  F03D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18195                           
 18196                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18197  0045AA  D002               	goto	l599
 18198  0045AC                     l596:
 18199                           
 18200                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18201  0045AC  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18202  0045B0                     l599:
 18203                           
 18204                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18205  0045B0  0100               	movlb	0	; () banked
 18206  0045B2  51EC               	movf	_MSDCommandState& (0+255),w,b
 18207  0045B4  0012               	return	
 18208  0045B6                     __end_of_MSDProcessCommand:
 18209                           	opt stack 0
 18210                           tosu	equ	0xFFF
 18211                           tosh	equ	0xFFE
 18212                           tosl	equ	0xFFD
 18213                           pclath	equ	0xFFA
 18214                           tblptru	equ	0xFF8
 18215                           tblptrh	equ	0xFF7
 18216                           tblptrl	equ	0xFF6
 18217                           tablat	equ	0xFF5
 18218                           prodh	equ	0xFF4
 18219                           prodl	equ	0xFF3
 18220                           intcon	equ	0xFF2
 18221                           intcon2	equ	0xFF1
 18222                           intcon3	equ	0xFF0
 18223                           indf0	equ	0xFEF
 18224                           postinc0	equ	0xFEE
 18225                           fsr0h	equ	0xFEA
 18226                           fsr0l	equ	0xFE9
 18227                           wreg	equ	0xFE8
 18228                           indf1	equ	0xFE7
 18229                           postdec1	equ	0xFE5
 18230                           plusw1	equ	0xFE3
 18231                           fsr1h	equ	0xFE2
 18232                           fsr1l	equ	0xFE1
 18233                           indf2	equ	0xFDF
 18234                           postinc2	equ	0xFDE
 18235                           postdec2	equ	0xFDD
 18236                           plusw2	equ	0xFDB
 18237                           fsr2h	equ	0xFDA
 18238                           fsr2l	equ	0xFD9
 18239                           status	equ	0xFD8
 18240                           
 18241 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18242 ;; Defined at:
 18243 ;;		line 635 in file "usb_device_msd.c"
 18244 ;; Parameters:    Size  Location     Type
 18245 ;;		None
 18246 ;; Auto vars:     Size  Location     Type
 18247 ;;		None
 18248 ;; Return value:  Size  Location     Type
 18249 ;;                  1    wreg      void 
 18250 ;; Registers used:
 18251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18252 ;; Tracked objects:
 18253 ;;		On entry : 0/0
 18254 ;;		On exit  : 0/0
 18255 ;;		Unchanged: 0/0
 18256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18261 ;;Total ram usage:        0 bytes
 18262 ;; Hardware stack levels used:    1
 18263 ;; Hardware stack levels required when called:    8
 18264 ;; This function calls:
 18265 ;;		_MSDErrorHandler
 18266 ;;		_MSDProcessCommandMediaPresent
 18267 ;;		_ResetSenseData
 18268 ;; This function is called by:
 18269 ;;		_MSDProcessCommand
 18270 ;; This function uses a non-reentrant model
 18271 ;;
 18272                           
 18273                           	psect	text85
 18274  007A82                     __ptext85:
 18275                           	opt stack 0
 18276  007A82                     _MSDProcessCommandMediaAbsent:
 18277                           	opt stack 19
 18278                           
 18279                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;incstack = 0
 18283  007A82  D01E               	goto	l603
 18284  007A84                     
 18285                           ;usb_device_msd.c: 646: ResetSenseData();
 18286  007A84  EC72  F03D         	call	_ResetSenseData	;wreg free
 18287                           
 18288                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18289  007A88  0101               	movlb	1	; () banked
 18290  007A8A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18291  007A8C  0BF0               	andlw	-16
 18292  007A8E  0902               	iorlw	2
 18293  007A90  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18294                           
 18295                           ; BSR set to: 1
 18296                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18297  007A92  0E3A               	movlw	58
 18298  007A94  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18299                           
 18300                           ; BSR set to: 1
 18301                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18302  007A96  0E00               	movlw	0
 18303  007A98  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18304                           
 18305                           ; BSR set to: 1
 18306                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18307  007A9A  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18308                           
 18309                           ;usb_device_msd.c: 655: break;
 18310  007A9E  0012               	return	
 18311  007AA0                     
 18312                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18313  007AA0  0E01               	movlw	1
 18314  007AA2  010D               	movlb	13	; () banked
 18315  007AA4  6F8C               	movwf	140,b	;volatile
 18316                           
 18317                           ; BSR set to: 13
 18318                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18319  007AA6  0100               	movlb	0	; () banked
 18320  007AA8  69EC               	setf	_MSDCommandState& (0+255),b
 18321                           
 18322                           ;usb_device_msd.c: 665: break;
 18323  007AAA  0012               	return	
 18324  007AAC                     
 18325                           ; BSR set to: 0
 18326                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18327                           
 18328                           ; BSR set to: 0
 18329  007AAC  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18330                           
 18331                           ;usb_device_msd.c: 671: break;
 18332  007AB0  0012               	return	
 18333  007AB2                     
 18334                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18335  007AB2  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18336                           
 18337                           ;usb_device_msd.c: 677: break;
 18338  007AB6  0012               	return	
 18339  007AB8                     
 18340                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18341  007AB8  0E7F               	movlw	127
 18342  007ABA  ECEE  F024         	call	_MSDErrorHandler
 18343                           
 18344                           ;usb_device_msd.c: 685: }
 18345                           
 18346                           ;usb_device_msd.c: 684: break;
 18347  007ABE  0012               	return	
 18348  007AC0                     l603:
 18349  007AC0  0100               	movlb	0	; () banked
 18350  007AC2  51EC               	movf	_MSDCommandState& (0+255),w,b
 18351                           
 18352                           ; Switch size 1, requested type "space"
 18353                           ; Number of cases is 5, Range of values is 0 to 253
 18354                           ; switch strategies available:
 18355                           ; Name         Instructions Cycles
 18356                           ; simple_byte           16     9 (average)
 18357                           ;	Chosen strategy is simple_byte
 18358  007AC4  0A00               	xorlw	0	; case 0
 18359  007AC6  B4D8               	btfsc	status,2,c
 18360  007AC8  D7EB               	goto	l606
 18361  007ACA  0A03               	xorlw	3	; case 3
 18362  007ACC  B4D8               	btfsc	status,2,c
 18363  007ACE  D7DA               	goto	l604
 18364  007AD0  0A11               	xorlw	17	; case 18
 18365  007AD2  B4D8               	btfsc	status,2,c
 18366  007AD4  D7EB               	goto	l608
 18367  007AD6  0A0C               	xorlw	12	; case 30
 18368  007AD8  B4D8               	btfsc	status,2,c
 18369  007ADA  D7E2               	goto	l606
 18370  007ADC  0AE3               	xorlw	227	; case 253
 18371  007ADE  B4D8               	btfsc	status,2,c
 18372  007AE0  D7E8               	goto	l609
 18373  007AE2  D7EA               	goto	l610
 18374  007AE4                     __end_of_MSDProcessCommandMediaAbsent:
 18375                           	opt stack 0
 18376                           tosu	equ	0xFFF
 18377                           tosh	equ	0xFFE
 18378                           tosl	equ	0xFFD
 18379                           pclath	equ	0xFFA
 18380                           tblptru	equ	0xFF8
 18381                           tblptrh	equ	0xFF7
 18382                           tblptrl	equ	0xFF6
 18383                           tablat	equ	0xFF5
 18384                           prodh	equ	0xFF4
 18385                           prodl	equ	0xFF3
 18386                           intcon	equ	0xFF2
 18387                           intcon2	equ	0xFF1
 18388                           intcon3	equ	0xFF0
 18389                           indf0	equ	0xFEF
 18390                           postinc0	equ	0xFEE
 18391                           fsr0h	equ	0xFEA
 18392                           fsr0l	equ	0xFE9
 18393                           wreg	equ	0xFE8
 18394                           indf1	equ	0xFE7
 18395                           postdec1	equ	0xFE5
 18396                           plusw1	equ	0xFE3
 18397                           fsr1h	equ	0xFE2
 18398                           fsr1l	equ	0xFE1
 18399                           indf2	equ	0xFDF
 18400                           postinc2	equ	0xFDE
 18401                           postdec2	equ	0xFDD
 18402                           plusw2	equ	0xFDB
 18403                           fsr2h	equ	0xFDA
 18404                           fsr2l	equ	0xFD9
 18405                           status	equ	0xFD8
 18406                           
 18407 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18408 ;; Defined at:
 18409 ;;		line 712 in file "usb_device_msd.c"
 18410 ;; Parameters:    Size  Location     Type
 18411 ;;		None
 18412 ;; Auto vars:     Size  Location     Type
 18413 ;;  capacity        4   66[COMRAM] struct .
 18414 ;;  sectorSize      4   62[COMRAM] struct .
 18415 ;;  i               1   70[COMRAM] unsigned char 
 18416 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18417 ;; Return value:  Size  Location     Type
 18418 ;;                  1    wreg      void 
 18419 ;; Registers used:
 18420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18421 ;; Tracked objects:
 18422 ;;		On entry : 0/0
 18423 ;;		On exit  : 0/0
 18424 ;;		Unchanged: 0/0
 18425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18427 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18429 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18430 ;;Total ram usage:       14 bytes
 18431 ;; Hardware stack levels used:    1
 18432 ;; Hardware stack levels required when called:    7
 18433 ;; This function calls:
 18434 ;;		_ExternalFlash_CapacityRead
 18435 ;;		_ExternalFlash_SectorSizeRead
 18436 ;;		_ExternalFlash_WriteProtectStateGet
 18437 ;;		_MSDCheckForErrorCases
 18438 ;;		_MSDComputeDeviceInAndResidue
 18439 ;;		_MSDErrorHandler
 18440 ;;		_MSDReadHandler
 18441 ;;		_MSDWriteHandler
 18442 ;;		_ResetSenseData
 18443 ;;		_USBTransferOnePacket
 18444 ;;		_memcpy
 18445 ;; This function is called by:
 18446 ;;		_MSDProcessCommand
 18447 ;;		_MSDProcessCommandMediaAbsent
 18448 ;; This function uses a non-reentrant model
 18449 ;;
 18450                           
 18451                           	psect	text86
 18452  00086C                     __ptext86:
 18453                           	opt stack 0
 18454  00086C                     _MSDProcessCommandMediaPresent:
 18455                           	opt stack 20
 18456                           
 18457                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18458                           
 18459                           ;incstack = 0
 18460  00086C  D1B9               	goto	l614
 18461  00086E                     
 18462                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18463  00086E  EC5A  F018         	call	_MSDReadHandler	;wreg free
 18464  000872  0900               	iorlw	0
 18465  000874  A4D8               	btfss	status,2,c
 18466  000876  0012               	return	
 18467                           
 18468                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18469  000878  0100               	movlb	0	; () banked
 18470  00087A  69EC               	setf	_MSDCommandState& (0+255),b
 18471                           
 18472                           ; BSR set to: 0
 18473                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18474  00087C  0012               	return	
 18475  00087E                     
 18476                           ; BSR set to: 0
 18477                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18478                           
 18479                           ; BSR set to: 0
 18480  00087E  EC48  F00C         	call	_MSDWriteHandler	;wreg free
 18481  000882  0900               	iorlw	0
 18482  000884  A4D8               	btfss	status,2,c
 18483  000886  0012               	return	
 18484                           
 18485                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18486  000888  0100               	movlb	0	; () banked
 18487  00088A  69EC               	setf	_MSDCommandState& (0+255),b
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18491  00088C  0012               	return	
 18492  00088E                     
 18493                           ; BSR set to: 0
 18494                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18495                           
 18496                           ; BSR set to: 0
 18497  00088E  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18498  000890  A4D8               	btfss	status,2,c
 18499  000892  D002               	goto	l621
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18503  000894  69EC               	setf	_MSDCommandState& (0+255),b
 18504                           
 18505                           ;usb_device_msd.c: 751: break;
 18506  000896  0012               	return	
 18507  000898                     l621:
 18508                           
 18509                           ; BSR set to: 0
 18510                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18511  000898  C112  F0DC         	movff	_gblCBW+18,_TransferLength+1
 18512                           
 18513                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18514  00089C  C113  F0DB         	movff	_gblCBW+19,_TransferLength
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18518  0008A0  C0DB  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18519  0008A4  C0DC  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18520  0008A8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18521  0008AA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18522  0008AC  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 18523  0008B0  0900               	iorlw	0
 18524  0008B2  A4D8               	btfss	status,2,c
 18525  0008B4  0012               	return	
 18526                           
 18527                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18528                           
 18529                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18530  0008B6  0E00               	movlw	0
 18531  0008B8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18532  0008BA  0E24               	movlw	36
 18533  0008BC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18534  0008BE  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18535                           
 18536                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18537  0008C2  0E00               	movlw	0
 18538  0008C4  6E01               	movwf	memcpy@d1,c
 18539  0008C6  0E06               	movlw	6
 18540  0008C8  6E02               	movwf	memcpy@d1+1,c
 18541  0008CA  0E4A               	movlw	low _inq_resp
 18542  0008CC  6E03               	movwf	memcpy@s1,c
 18543  0008CE  0E9F               	movlw	high _inq_resp
 18544  0008D0  6E04               	movwf	memcpy@s1+1,c
 18545  0008D2  5003               	movf	memcpy@s1,w,c
 18546  0008D4  1004               	iorwf	memcpy@s1+1,w,c
 18547  0008D6  A4D8               	btfss	status,2,c
 18548  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18549  0008DA  6E05               	movwf	memcpy@s1+2,c
 18550  0008DC  0E00               	movlw	0
 18551  0008DE  6E07               	movwf	memcpy@n+1,c
 18552  0008E0  0E24               	movlw	36
 18553  0008E2  6E06               	movwf	memcpy@n,c
 18554  0008E4  ECDD  F03C         	call	_memcpy	;wreg free
 18555                           
 18556                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18557  0008E8  0EFD               	movlw	253
 18558  0008EA  0100               	movlb	0	; () banked
 18559  0008EC  6FEC               	movwf	_MSDCommandState& (0+255),b
 18560                           
 18561                           ;usb_device_msd.c: 773: break;
 18562  0008EE  0012               	return	
 18563  0008F0                     
 18564                           ; BSR set to: 0
 18565                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18566                           
 18567                           ; BSR set to: 0
 18568  0008F0  C1C1  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18569  0008F4  C1C2  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18570  0008F8  D801               	call	u9848
 18571  0008FA  D00A               	goto	u9849
 18572  0008FC                     u9848:
 18573  0008FC  0005               	push	
 18574  0008FE  6EFA               	movwf	pclath,c
 18575  000900  0101               	movlb	1	; () banked
 18576  000902  51B5               	movf	(_LUN+2)& (0+255),w,b
 18577  000904  6EFD               	movwf	tosl,c
 18578  000906  51B6               	movf	(_LUN+3)& (0+255),w,b
 18579  000908  6EFE               	movwf	tosh,c
 18580  00090A  6AFF               	clrf	tosu,c
 18581  00090C  50FA               	movf	pclath,w,c
 18582  00090E  0012               	return		;indir
 18583  000910                     u9849:
 18584  000910  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18585  000914  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18586  000918  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18587  00091C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18588                           
 18589                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18590  000920  C1C1  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18591  000924  C1C2  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18592  000928  D801               	call	u9858
 18593  00092A  D00A               	goto	u9859
 18594  00092C                     u9858:
 18595  00092C  0005               	push	
 18596  00092E  6EFA               	movwf	pclath,c
 18597  000930  0101               	movlb	1	; () banked
 18598  000932  51B7               	movf	(_LUN+4)& (0+255),w,b
 18599  000934  6EFD               	movwf	tosl,c
 18600  000936  51B8               	movf	(_LUN+5)& (0+255),w,b
 18601  000938  6EFE               	movwf	tosh,c
 18602  00093A  6AFF               	clrf	tosu,c
 18603  00093C  50FA               	movf	pclath,w,c
 18604  00093E  0012               	return		;indir
 18605  000940                     u9859:
 18606  000940  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18607  000944  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18608  000948  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18609  00094A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18610                           
 18611                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18612  00094C  EE26 F000          	lfsr	2,1536
 18613  000950  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18614                           
 18615                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18616  000954  EE26 F001          	lfsr	2,1537	;volatile
 18617  000958  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18618                           
 18619                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18620  00095C  EE26 F002          	lfsr	2,1538	;volatile
 18621  000960  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18622                           
 18623                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18624  000964  EE26 F003          	lfsr	2,1539	;volatile
 18625  000968  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18626                           
 18627                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18628  00096C  EE26 F004          	lfsr	2,1540	;volatile
 18629  000970  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18630                           
 18631                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18632  000974  EE26 F005          	lfsr	2,1541	;volatile
 18633  000978  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18634                           
 18635                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18636  00097C  EE26 F006          	lfsr	2,1542	;volatile
 18637  000980  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18638                           
 18639                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18640  000984  EE26 F007          	lfsr	2,1543	;volatile
 18641  000988  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18642                           
 18643                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18644  00098C  0E00               	movlw	0
 18645  00098E  0100               	movlb	0	; () banked
 18646  000990  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18647  000992  0E08               	movlw	8
 18648  000994  6FDB               	movwf	_TransferLength& (0+255),b
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18652  000996  0E00               	movlw	0
 18653  000998  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18654  00099A  0E08               	movlw	8
 18655  00099C  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18656  00099E  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18657                           
 18658                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 18659  0009A2  0EFD               	movlw	253
 18660  0009A4  0100               	movlb	0	; () banked
 18661  0009A6  6FEC               	movwf	_MSDCommandState& (0+255),b
 18662                           
 18663                           ;usb_device_msd.c: 802: break;
 18664  0009A8  0012               	return	
 18665  0009AA                     
 18666                           ; BSR set to: 0
 18667                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 18668                           
 18669                           ; BSR set to: 0
 18670  0009AA  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18671  0009AC  A4D8               	btfss	status,2,c
 18672  0009AE  D002               	goto	l625
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 18676  0009B0  69EC               	setf	_MSDCommandState& (0+255),b
 18677                           
 18678                           ;usb_device_msd.c: 814: break;
 18679  0009B2  0012               	return	
 18680  0009B4                     l625:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 18684                           
 18685                           ; BSR set to: 0
 18686  0009B4  0E00               	movlw	0
 18687  0009B6  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18688  0009B8  0E12               	movlw	18
 18689  0009BA  6FDB               	movwf	_TransferLength& (0+255),b
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 18693  0009BC  0E00               	movlw	0
 18694  0009BE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18695  0009C0  0E12               	movlw	18
 18696  0009C2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18697  0009C4  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18698                           
 18699                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 18700  0009C8  0E00               	movlw	0
 18701  0009CA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18702  0009CC                     l13071:
 18703  0009CC  0E11               	movlw	17
 18704  0009CE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 18705  0009D0  D001               	goto	l626
 18706  0009D2  D014               	goto	u9880
 18707  0009D4                     l626:
 18708                           
 18709                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 18710  0009D4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18711  0009D6  0D01               	mullw	1
 18712  0009D8  0E1F               	movlw	low _gblSenseData
 18713  0009DA  24F3               	addwf	prodl,w,c
 18714  0009DC  6ED9               	movwf	fsr2l,c
 18715  0009DE  0E01               	movlw	high _gblSenseData
 18716  0009E0  20F4               	addwfc	prodh,w,c
 18717  0009E2  6EDA               	movwf	fsr2h,c
 18718  0009E4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18719  0009E6  0D01               	mullw	1
 18720  0009E8  0E00               	movlw	0
 18721  0009EA  24F3               	addwf	prodl,w,c
 18722  0009EC  6EE1               	movwf	fsr1l,c
 18723  0009EE  0E06               	movlw	6
 18724  0009F0  20F4               	addwfc	prodh,w,c
 18725  0009F2  6EE2               	movwf	fsr1h,c
 18726  0009F4  CFDF FFE7          	movff	indf2,indf1
 18727  0009F8  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18728  0009FA  D7E8               	goto	l13071
 18729  0009FC                     u9880:
 18730                           
 18731                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 18732  0009FC  0EFD               	movlw	253
 18733  0009FE  0100               	movlb	0	; () banked
 18734  000A00  6FEC               	movwf	_MSDCommandState& (0+255),b
 18735                           
 18736                           ;usb_device_msd.c: 827: break;
 18737  000A02  0012               	return	
 18738  000A04                     l628:
 18739                           
 18740                           ; BSR set to: 0
 18741                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 18742  000A04  0E03               	movlw	3
 18743  000A06  CFE8 F600          	movff	wreg,1536
 18744                           
 18745                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 18746  000A0A  0E00               	movlw	0
 18747  000A0C  CFE8 F601          	movff	wreg,1537	;volatile
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 18751  000A10  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 18752  000A14  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 18753  000A18  D801               	call	u9898
 18754  000A1A  D00A               	goto	u9899
 18755  000A1C                     u9898:
 18756  000A1C  0005               	push	
 18757  000A1E  6EFA               	movwf	pclath,c
 18758  000A20  0101               	movlb	1	; () banked
 18759  000A22  51BD               	movf	(_LUN+10)& (0+255),w,b
 18760  000A24  6EFD               	movwf	tosl,c
 18761  000A26  51BE               	movf	(_LUN+11)& (0+255),w,b
 18762  000A28  6EFE               	movwf	tosh,c
 18763  000A2A  6AFF               	clrf	tosu,c
 18764  000A2C  50FA               	movf	pclath,w,c
 18765  000A2E  0012               	return		;indir
 18766  000A30                     u9899:
 18767  000A30  0900               	iorlw	0
 18768  000A32  A4D8               	btfss	status,2,c
 18769  000A34  D004               	goto	l630
 18770  000A36  0E00               	movlw	0
 18771  000A38  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18772  000A3A  0E00               	movlw	0
 18773  000A3C  D003               	goto	L19
 18774  000A3E                     l630:
 18775  000A3E  0E00               	movlw	0
 18776  000A40  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18777  000A42  0E80               	movlw	128
 18778  000A44                     L19:
 18779  000A44  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 18780  000A46  EE26 F002          	lfsr	2,1538	;volatile
 18781  000A4A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 18782                           
 18783                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 18784  000A4E  0E00               	movlw	0
 18785  000A50  CFE8 F603          	movff	wreg,1539	;volatile
 18786                           
 18787                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 18788  000A54  0E00               	movlw	0
 18789  000A56  0100               	movlb	0	; () banked
 18790  000A58  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18791  000A5A  0E04               	movlw	4
 18792  000A5C  6FDB               	movwf	_TransferLength& (0+255),b
 18793                           
 18794                           ; BSR set to: 0
 18795                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 18796  000A5E  0E00               	movlw	0
 18797  000A60  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18798  000A62  0E04               	movlw	4
 18799  000A64  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18800  000A66  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18801                           
 18802                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 18803  000A6A  0EFD               	movlw	253
 18804  000A6C  0100               	movlb	0	; () banked
 18805  000A6E  6FEC               	movwf	_MSDCommandState& (0+255),b
 18806                           
 18807                           ;usb_device_msd.c: 839: break;
 18808  000A70  0012               	return	
 18809  000A72                     
 18810                           ; BSR set to: 0
 18811                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 18812                           
 18813                           ; BSR set to: 0
 18814  000A72  0101               	movlb	1	; () banked
 18815  000A74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18816  000A76  0BF0               	andlw	-16
 18817  000A78  0905               	iorlw	5
 18818  000A7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18819                           
 18820                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 18821  000A7C  0E20               	movlw	32
 18822  000A7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18823                           
 18824                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 18825  000A80  0E00               	movlw	0
 18826  000A82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18827                           
 18828                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 18829  000A84  0E01               	movlw	1
 18830  000A86  010D               	movlb	13	; () banked
 18831  000A88  6F8C               	movwf	140,b	;volatile
 18832                           
 18833                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 18834  000A8A  0E00               	movlw	0
 18835  000A8C  6F88               	movwf	136,b	;volatile
 18836  000A8E  0E00               	movlw	0
 18837  000A90  6F89               	movwf	137,b	;volatile
 18838  000A92  0E00               	movlw	0
 18839  000A94  6F8A               	movwf	138,b	;volatile
 18840  000A96  0E00               	movlw	0
 18841  000A98  6F8B               	movwf	139,b	;volatile
 18842                           
 18843                           ; BSR set to: 13
 18844                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 18845  000A9A  0100               	movlb	0	; () banked
 18846  000A9C  69EC               	setf	_MSDCommandState& (0+255),b
 18847                           
 18848                           ;usb_device_msd.c: 848: break;
 18849  000A9E  0012               	return	
 18850  000AA0                     
 18851                           ; BSR set to: 0
 18852                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 18853                           
 18854                           ; BSR set to: 0
 18855  000AA0  0E00               	movlw	0
 18856  000AA2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 18857  000AA4  0E00               	movlw	0
 18858  000AA6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 18859  000AA8  0E00               	movlw	0
 18860  000AAA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 18861  000AAC  0E00               	movlw	0
 18862  000AAE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 18863  000AB0  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 18864  000AB4  0900               	iorlw	0
 18865  000AB6  A4D8               	btfss	status,2,c
 18866  000AB8  0012               	return	
 18867                           
 18868                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 18869                           
 18870                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 18871  000ABA  0101               	movlb	1	; () banked
 18872  000ABC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18873  000ABE  0B0F               	andlw	15
 18874  000AC0  0A06               	xorlw	6
 18875  000AC2  A4D8               	btfss	status,2,c
 18876  000AC4  D007               	goto	l636
 18877                           
 18878                           ; BSR set to: 1
 18879  000AC6  010D               	movlb	13	; () banked
 18880  000AC8  058C               	decf	140,w,b	;volatile
 18881  000ACA  A4D8               	btfss	status,2,c
 18882  000ACC  D003               	goto	l636
 18883                           
 18884                           ; BSR set to: 13
 18885                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 18886  000ACE  0100               	movlb	0	; () banked
 18887  000AD0  69EC               	setf	_MSDCommandState& (0+255),b
 18888                           
 18889                           ;usb_device_msd.c: 870: }
 18890  000AD2  0012               	return	
 18891  000AD4                     l636:
 18892                           
 18893                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 18894                           
 18895                           ; BSR set to: 0
 18896  000AD4  EC72  F03D         	call	_ResetSenseData	;wreg free
 18897                           
 18898                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 18899  000AD8  0E00               	movlw	0
 18900  000ADA  010D               	movlb	13	; () banked
 18901  000ADC  6F88               	movwf	136,b	;volatile
 18902  000ADE  0E00               	movlw	0
 18903  000AE0  6F89               	movwf	137,b	;volatile
 18904  000AE2  0E00               	movlw	0
 18905  000AE4  6F8A               	movwf	138,b	;volatile
 18906  000AE6  0E00               	movlw	0
 18907  000AE8  6F8B               	movwf	139,b	;volatile
 18908                           
 18909                           ; BSR set to: 13
 18910                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 18911  000AEA  0100               	movlb	0	; () banked
 18912  000AEC  69EC               	setf	_MSDCommandState& (0+255),b
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 18916  000AEE  0012               	return	
 18917  000AF0                     
 18918                           ; BSR set to: 0
 18919                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 18920                           
 18921                           ; BSR set to: 0
 18922                           
 18923                           ; BSR set to: 0
 18924  000AF0  0E00               	movlw	0
 18925  000AF2  010D               	movlb	13	; () banked
 18926  000AF4  6F88               	movwf	136,b	;volatile
 18927  000AF6  0E00               	movlw	0
 18928  000AF8  6F89               	movwf	137,b	;volatile
 18929  000AFA  0E00               	movlw	0
 18930  000AFC  6F8A               	movwf	138,b	;volatile
 18931  000AFE  0E00               	movlw	0
 18932  000B00  6F8B               	movwf	139,b	;volatile
 18933                           
 18934                           ; BSR set to: 13
 18935                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 18936  000B02  0100               	movlb	0	; () banked
 18937  000B04  69EC               	setf	_MSDCommandState& (0+255),b
 18938                           
 18939                           ;usb_device_msd.c: 885: break;
 18940  000B06  0012               	return	
 18941  000B08                     
 18942                           ; BSR set to: 0
 18943                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 18944                           
 18945                           ; BSR set to: 0
 18946  000B08  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 18947  000B0A  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 18948  000B0C  B4D8               	btfsc	status,2,c
 18949  000B0E  D006               	goto	u9950
 18950                           
 18951                           ; BSR set to: 0
 18952  000B10  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 18953  000B14  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 18954  000B18  BEDF               	btfsc	indf2,7,c
 18955  000B1A  0012               	return	
 18956  000B1C                     u9950:
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 18960                           
 18961                           ; BSR set to: 0
 18962  000B1C  0101               	movlb	1	; () banked
 18963  000B1E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 18964  000B20  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18965  000B22  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18966  000B24  E104               	bnz	u9960
 18967  000B26  0E40               	movlw	64
 18968  000B28  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 18969  000B2A  A0D8               	btfss	status,0,c
 18970  000B2C  D009               	goto	l644
 18971  000B2E                     u9960:
 18972                           
 18973                           ; BSR set to: 1
 18974                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 18975  000B2E  0E40               	movlw	64
 18976  000B30  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 18977                           
 18978                           ; BSR set to: 1
 18979                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 18980  000B32  0E40               	movlw	64
 18981  000B34  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 18982  000B36  0E00               	movlw	0
 18983  000B38  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 18984  000B3A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 18985  000B3C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 18986                           
 18987                           ;usb_device_msd.c: 900: }
 18988  000B3E  D00A               	goto	l645
 18989  000B40                     l644:
 18990                           
 18991                           ; BSR set to: 1
 18992                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 18993  000B40  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 18994                           
 18995                           ; BSR set to: 1
 18996                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 18997  000B44  0E00               	movlw	0
 18998  000B46  6F08               	movwf	(_gblCBW+8)& (0+255),b
 18999  000B48  0E00               	movlw	0
 19000  000B4A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 19001  000B4C  0E00               	movlw	0
 19002  000B4E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 19003  000B50  0E00               	movlw	0
 19004  000B52  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19005  000B54                     l645:
 19006                           
 19007                           ; BSR set to: 1
 19008                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19009                           
 19010                           ; BSR set to: 1
 19011  000B54  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19012  000B56  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19013  000B58  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19014  000B5A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19015  000B5C  0100               	movlb	0	; () banked
 19016  000B5E  5DDB               	subwf	_TransferLength& (0+255),w,b
 19017  000B60  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19018  000B62  59DC               	subwfb	(_TransferLength+1)& (0+255),w,b
 19019  000B64  A0D8               	btfss	status,0,c
 19020  000B66  D005               	goto	l646
 19021                           
 19022                           ; BSR set to: 0
 19023                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19024  000B68  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19025  000B6A  5FDB               	subwf	_TransferLength& (0+255),f,b
 19026  000B6C  0E00               	movlw	0
 19027  000B6E  5BDC               	subwfb	(_TransferLength+1)& (0+255),f,b
 19028                           
 19029                           ;usb_device_msd.c: 918: }
 19030  000B70  D01A               	goto	u9990
 19031  000B72                     l646:
 19032                           
 19033                           ; BSR set to: 0
 19034                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19035                           
 19036                           ; BSR set to: 0
 19037  000B72  0E00               	movlw	0
 19038  000B74  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19039  000B76  D013               	goto	l648
 19040  000B78                     
 19041                           ; BSR set to: 0
 19042                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19043                           
 19044                           ; BSR set to: 0
 19045  000B78  51DB               	movf	_TransferLength& (0+255),w,b
 19046  000B7A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19047  000B7C  B4D8               	btfsc	status,2,c
 19048  000B7E  D004               	goto	l650
 19049                           
 19050                           ; BSR set to: 0
 19051                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19052  000B80  07DB               	decf	_TransferLength& (0+255),f,b
 19053  000B82  A0D8               	btfss	status,0,c
 19054  000B84  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19055                           
 19056                           ;usb_device_msd.c: 932: }
 19057  000B86  D00A               	goto	l651
 19058  000B88                     l650:
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19062                           
 19063                           ; BSR set to: 0
 19064  000B88  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19065  000B8A  0D01               	mullw	1
 19066  000B8C  0E00               	movlw	0
 19067  000B8E  24F3               	addwf	prodl,w,c
 19068  000B90  6ED9               	movwf	fsr2l,c
 19069  000B92  0E06               	movlw	6
 19070  000B94  20F4               	addwfc	prodh,w,c
 19071  000B96  6EDA               	movwf	fsr2h,c
 19072  000B98  0E00               	movlw	0
 19073  000B9A  6EDF               	movwf	indf2,c
 19074  000B9C                     l651:
 19075                           
 19076                           ; BSR set to: 0
 19077                           
 19078                           ; BSR set to: 0
 19079  000B9C  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19080  000B9E                     l648:
 19081                           
 19082                           ; BSR set to: 0
 19083                           
 19084                           ; BSR set to: 0
 19085  000B9E  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19086  000BA0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 19087  000BA2  A0D8               	btfss	status,0,c
 19088  000BA4  D7E9               	goto	l649
 19089  000BA6                     u9990:
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 19093                           
 19094                           ; BSR set to: 0
 19095                           
 19096                           ; BSR set to: 0
 19097  000BA6  0E01               	movlw	1
 19098  000BA8  6E01               	movwf	USBTransferOnePacket@dir,c
 19099  000BAA  0E00               	movlw	0
 19100  000BAC  6E02               	movwf	USBTransferOnePacket@data,c
 19101  000BAE  0E06               	movlw	6
 19102  000BB0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19103  000BB2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19104  000BB6  0E02               	movlw	2
 19105  000BB8  ECF2  F025         	call	_USBTransferOnePacket
 19106  000BBC  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19107  000BC0  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19108                           
 19109                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19110  000BC4  0101               	movlb	1	; () banked
 19111  000BC6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19112  000BC8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19113  000BCA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19114  000BCC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19115  000BCE  A4D8               	btfss	status,2,c
 19116  000BD0  0012               	return	
 19117                           
 19118                           ; BSR set to: 1
 19119                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19120  000BD2  0100               	movlb	0	; () banked
 19121  000BD4  69EC               	setf	_MSDCommandState& (0+255),b
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19125                           
 19126                           ; BSR set to: 0
 19127                           
 19128                           ;usb_device_msd.c: 949: break;
 19129  000BD6  0012               	return	
 19130  000BD8                     
 19131                           ; BSR set to: 0
 19132                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19133                           
 19134                           ; BSR set to: 0
 19135                           
 19136                           ;usb_device_msd.c: 954: default:
 19137                           
 19138                           ; BSR set to: 0
 19139  000BD8  0E7F               	movlw	127
 19140  000BDA  ECEE  F024         	call	_MSDErrorHandler
 19141                           
 19142                           ;usb_device_msd.c: 960: }
 19143                           
 19144                           ;usb_device_msd.c: 959: break;
 19145  000BDE  0012               	return	
 19146  000BE0                     l614:
 19147  000BE0  0100               	movlb	0	; () banked
 19148  000BE2  51EC               	movf	_MSDCommandState& (0+255),w,b
 19149                           
 19150                           ; Switch size 1, requested type "space"
 19151                           ; Number of cases is 12, Range of values is 0 to 254
 19152                           ; switch strategies available:
 19153                           ; Name         Instructions Cycles
 19154                           ; simple_byte           37    19 (average)
 19155                           ;	Chosen strategy is simple_byte
 19156  000BE4  0A00               	xorlw	0	; case 0
 19157  000BE6  B4D8               	btfsc	status,2,c
 19158  000BE8  D75B               	goto	l634
 19159  000BEA  0A03               	xorlw	3	; case 3
 19160  000BEC  B4D8               	btfsc	status,2,c
 19161  000BEE  D6DD               	goto	l624
 19162  000BF0  0A11               	xorlw	17	; case 18
 19163  000BF2  B4D8               	btfsc	status,2,c
 19164  000BF4  D64C               	goto	l620
 19165  000BF6  0A08               	xorlw	8	; case 26
 19166  000BF8  B4D8               	btfsc	status,2,c
 19167  000BFA  D704               	goto	l628
 19168  000BFC  0A01               	xorlw	1	; case 27
 19169  000BFE  B4D8               	btfsc	status,2,c
 19170  000C00  D777               	goto	l638
 19171  000C02  0A05               	xorlw	5	; case 30
 19172  000C04  B4D8               	btfsc	status,2,c
 19173  000C06  D735               	goto	l633
 19174  000C08  0A3B               	xorlw	59	; case 37
 19175  000C0A  B4D8               	btfsc	status,2,c
 19176  000C0C  D671               	goto	l623
 19177  000C0E  0A0D               	xorlw	13	; case 40
 19178  000C10  B4D8               	btfsc	status,2,c
 19179  000C12  D62D               	goto	l615
 19180  000C14  0A02               	xorlw	2	; case 42
 19181  000C16  B4D8               	btfsc	status,2,c
 19182  000C18  D632               	goto	l618
 19183  000C1A  0A05               	xorlw	5	; case 47
 19184  000C1C  B4D8               	btfsc	status,2,c
 19185  000C1E  D768               	goto	l638
 19186  000C20  0AD2               	xorlw	210	; case 253
 19187  000C22  B4D8               	btfsc	status,2,c
 19188  000C24  D771               	goto	l640
 19189  000C26  0A03               	xorlw	3	; case 254
 19190  000C28  D7D7               	goto	l654
 19191  000C2A                     __end_of_MSDProcessCommandMediaPresent:
 19192                           	opt stack 0
 19193                           tosu	equ	0xFFF
 19194                           tosh	equ	0xFFE
 19195                           tosl	equ	0xFFD
 19196                           pclath	equ	0xFFA
 19197                           tblptru	equ	0xFF8
 19198                           tblptrh	equ	0xFF7
 19199                           tblptrl	equ	0xFF6
 19200                           tablat	equ	0xFF5
 19201                           prodh	equ	0xFF4
 19202                           prodl	equ	0xFF3
 19203                           intcon	equ	0xFF2
 19204                           intcon2	equ	0xFF1
 19205                           intcon3	equ	0xFF0
 19206                           indf0	equ	0xFEF
 19207                           postinc0	equ	0xFEE
 19208                           fsr0h	equ	0xFEA
 19209                           fsr0l	equ	0xFE9
 19210                           wreg	equ	0xFE8
 19211                           indf1	equ	0xFE7
 19212                           postdec1	equ	0xFE5
 19213                           plusw1	equ	0xFE3
 19214                           fsr1h	equ	0xFE2
 19215                           fsr1l	equ	0xFE1
 19216                           indf2	equ	0xFDF
 19217                           postinc2	equ	0xFDE
 19218                           postdec2	equ	0xFDD
 19219                           plusw2	equ	0xFDB
 19220                           fsr2h	equ	0xFDA
 19221                           fsr2l	equ	0xFD9
 19222                           status	equ	0xFD8
 19223                           
 19224 ;; *************** function _MSDWriteHandler *****************
 19225 ;; Defined at:
 19226 ;;		line 1188 in file "usb_device_msd.c"
 19227 ;; Parameters:    Size  Location     Type
 19228 ;;		None
 19229 ;; Auto vars:     Size  Location     Type
 19230 ;;		None
 19231 ;; Return value:  Size  Location     Type
 19232 ;;                  1    wreg      unsigned char 
 19233 ;; Registers used:
 19234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19235 ;; Tracked objects:
 19236 ;;		On entry : 0/0
 19237 ;;		On exit  : 0/0
 19238 ;;		Unchanged: 0/0
 19239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19242 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19243 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19244 ;;Total ram usage:        5 bytes
 19245 ;; Hardware stack levels used:    1
 19246 ;; Hardware stack levels required when called:    6
 19247 ;; This function calls:
 19248 ;;		_ExternalFlash_SectorWrite
 19249 ;;		_ExternalFlash_WriteProtectStateGet
 19250 ;;		_MSDCheckForErrorCases
 19251 ;;		_USBStallEndpoint
 19252 ;;		_USBTransferOnePacket
 19253 ;; This function is called by:
 19254 ;;		_MSDProcessCommandMediaPresent
 19255 ;; This function uses a non-reentrant model
 19256 ;;
 19257                           
 19258                           	psect	text87
 19259  001890                     __ptext87:
 19260                           	opt stack 0
 19261  001890                     _MSDWriteHandler:
 19262                           	opt stack 20
 19263                           
 19264                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19265                           
 19266                           ;incstack = 0
 19267  001890  D146               	goto	l684
 19268  001892                     l685:
 19269                           
 19270                           ; BSR set to: 0
 19271                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19272  001892  C111  F161         	movff	_gblCBW+17,_LBA+3
 19273                           
 19274                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19275  001896  C112  F160         	movff	_gblCBW+18,_LBA+2
 19276                           
 19277                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19278  00189A  C113  F15F         	movff	_gblCBW+19,_LBA+1
 19279                           
 19280                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19281  00189E  C114  F15E         	movff	_gblCBW+20,_LBA
 19282                           
 19283                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19284  0018A2  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 19285                           
 19286                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19287  0018A6  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 19288                           
 19289                           ; BSR set to: 0
 19290                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19291  0018AA  51DB               	movf	_TransferLength& (0+255),w,b
 19292  0018AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19293  0018AE  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 19294  0018B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19295  0018B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19296  0018B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19297  0018B6  0E09               	movlw	9
 19298  0018B8                     u8485:
 19299  0018B8  90D8               	bcf	status,0,c
 19300  0018BA  3630               	rlcf	??_MSDWriteHandler,f,c
 19301  0018BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19302  0018BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19303  0018C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19304  0018C2  2EE8               	decfsz	wreg,f,c
 19305  0018C4  D7F9               	goto	u8485
 19306  0018C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19307  0018CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19308  0018CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19309  0018D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19310  0018D6  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 19311  0018DA  0900               	iorlw	0
 19312  0018DC  A4D8               	btfss	status,2,c
 19313  0018DE  D131               	goto	l687
 19314                           
 19315                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19316                           
 19317                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19318  0018E0  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19319  0018E4  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19320  0018E8  D801               	call	u8508
 19321  0018EA  D00A               	goto	u8509
 19322  0018EC                     u8508:
 19323  0018EC  0005               	push	
 19324  0018EE  6EFA               	movwf	pclath,c
 19325  0018F0  0101               	movlb	1	; () banked
 19326  0018F2  51BD               	movf	(_LUN+10)& (0+255),w,b
 19327  0018F4  6EFD               	movwf	tosl,c
 19328  0018F6  51BE               	movf	(_LUN+11)& (0+255),w,b
 19329  0018F8  6EFE               	movwf	tosh,c
 19330  0018FA  6AFF               	clrf	tosu,c
 19331  0018FC  50FA               	movf	pclath,w,c
 19332  0018FE  0012               	return		;indir
 19333  001900                     u8509:
 19334  001900  0900               	iorlw	0
 19335  001902  B4D8               	btfsc	status,2,c
 19336  001904  D016               	goto	l688
 19337                           
 19338                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19339  001906  0E01               	movlw	1
 19340  001908  010D               	movlb	13	; () banked
 19341  00190A  6F8C               	movwf	140,b	;volatile
 19342                           
 19343                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19344  00190C  0101               	movlb	1	; () banked
 19345  00190E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19346  001910  0BF0               	andlw	-16
 19347  001912  0907               	iorlw	7
 19348  001914  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19349                           
 19350                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19351  001916  0E27               	movlw	39
 19352  001918  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19353                           
 19354                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19355  00191A  0E00               	movlw	0
 19356  00191C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19357                           
 19358                           ; BSR set to: 1
 19359                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19360  00191E  0E00               	movlw	0
 19361  001920  6E01               	movwf	USBStallEndpoint@dir,c
 19362  001922  0E02               	movlw	2
 19363  001924  ECE7  F023         	call	_USBStallEndpoint
 19364                           
 19365                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19366  001928  0E00               	movlw	0
 19367  00192A  0100               	movlb	0	; () banked
 19368  00192C  6FEA               	movwf	_MSDWriteState& (0+255),b
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19372  00192E  51EA               	movf	_MSDWriteState& (0+255),w,b
 19373                           
 19374                           ; BSR set to: 0
 19375  001930  0012               	return	
 19376  001932                     l688:
 19377                           
 19378                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19379                           
 19380                           ; BSR set to: 0
 19381  001932  0E01               	movlw	1
 19382  001934  0100               	movlb	0	; () banked
 19383  001936  6FED               	movwf	_MSD_State& (0+255),b
 19384  001938                     
 19385                           ; BSR set to: 0
 19386                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19387                           
 19388                           ; BSR set to: 0
 19389  001938  51DB               	movf	_TransferLength& (0+255),w,b
 19390  00193A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19391  00193C  A4D8               	btfss	status,2,c
 19392  00193E  D002               	goto	l691
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19396  001940  0E00               	movlw	0
 19397  001942  D056               	goto	L20
 19398  001944                     l691:
 19399                           
 19400                           ; BSR set to: 0
 19401                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19402                           
 19403                           ; BSR set to: 0
 19404  001944  0E03               	movlw	3
 19405  001946  6FEA               	movwf	_MSDWriteState& (0+255),b
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19409  001948  0E00               	movlw	0
 19410  00194A  0101               	movlb	1	; () banked
 19411  00194C  6F86               	movwf	_ptrNextData& (0+255),b
 19412  00194E  0E06               	movlw	6
 19413  001950  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 19414                           
 19415                           ; BSR set to: 1
 19416                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19417  001952  0E00               	movlw	0
 19418  001954  010D               	movlb	13	; () banked
 19419  001956  6F88               	movwf	136,b	;volatile
 19420  001958  0E02               	movlw	2
 19421  00195A  6F89               	movwf	137,b	;volatile
 19422  00195C  0E00               	movlw	0
 19423  00195E  6F8A               	movwf	138,b	;volatile
 19424  001960  0E00               	movlw	0
 19425  001962  6F8B               	movwf	139,b	;volatile
 19426  001964                     l692:
 19427                           
 19428                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19429  001964  010D               	movlb	13	; () banked
 19430  001966  5188               	movf	136,w,b	;volatile
 19431  001968  1189               	iorwf	137,w,b	;volatile
 19432  00196A  118A               	iorwf	138,w,b	;volatile
 19433  00196C  118B               	iorwf	139,w,b	;volatile
 19434  00196E  B4D8               	btfsc	status,2,c
 19435  001970  D01E               	goto	l693
 19436                           
 19437                           ; BSR set to: 13
 19438                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19439  001972  0100               	movlb	0	; () banked
 19440  001974  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19441  001976  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19442  001978  B4D8               	btfsc	status,2,c
 19443  00197A  D006               	goto	l694
 19444                           
 19445                           ; BSR set to: 0
 19446  00197C  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19447  001980  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19448  001984  BEDF               	btfsc	indf2,7,c
 19449  001986  D0DD               	goto	l687
 19450  001988                     l694:
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19454                           
 19455                           ; BSR set to: 0
 19456  001988  0E00               	movlw	0
 19457  00198A  6E01               	movwf	USBTransferOnePacket@dir,c
 19458  00198C  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19459  001990  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19460  001994  0E40               	movlw	64
 19461  001996  6E04               	movwf	USBTransferOnePacket@len,c
 19462  001998  0E02               	movlw	2
 19463  00199A  ECF2  F025         	call	_USBTransferOnePacket
 19464  00199E  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19465  0019A2  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19466                           
 19467                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19468  0019A6  0E04               	movlw	4
 19469  0019A8  0100               	movlb	0	; () banked
 19470  0019AA  6FEA               	movwf	_MSDWriteState& (0+255),b
 19471                           
 19472                           ;usb_device_msd.c: 1260: }
 19473  0019AC  D023               	goto	l695
 19474  0019AE                     l693:
 19475                           
 19476                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19477                           
 19478                           ; BSR set to: 0
 19479  0019AE  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19480  0019B2  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19481  0019B6  D801               	call	u8568
 19482  0019B8  D00A               	goto	u8569
 19483  0019BA                     u8568:
 19484  0019BA  0005               	push	
 19485  0019BC  6EFA               	movwf	pclath,c
 19486  0019BE  0101               	movlb	1	; () banked
 19487  0019C0  51BD               	movf	(_LUN+10)& (0+255),w,b
 19488  0019C2  6EFD               	movwf	tosl,c
 19489  0019C4  51BE               	movf	(_LUN+11)& (0+255),w,b
 19490  0019C6  6EFE               	movwf	tosh,c
 19491  0019C8  6AFF               	clrf	tosu,c
 19492  0019CA  50FA               	movf	pclath,w,c
 19493  0019CC  0012               	return		;indir
 19494  0019CE                     u8569:
 19495  0019CE  0900               	iorlw	0
 19496  0019D0  B4D8               	btfsc	status,2,c
 19497  0019D2  D00C               	goto	l696
 19498                           
 19499                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19500  0019D4  0E01               	movlw	1
 19501  0019D6  010D               	movlb	13	; () banked
 19502  0019D8  6F8C               	movwf	140,b	;volatile
 19503                           
 19504                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19505  0019DA  0101               	movlb	1	; () banked
 19506  0019DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19507  0019DE  0BF0               	andlw	-16
 19508  0019E0  0902               	iorlw	2
 19509  0019E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19510                           
 19511                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19512  0019E4  0E27               	movlw	39
 19513  0019E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19514                           
 19515                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19516  0019E8  0E00               	movlw	0
 19517  0019EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19518  0019EC                     l696:
 19519                           
 19520                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19521  0019EC  0E02               	movlw	2
 19522  0019EE  D095               	goto	L22
 19523  0019F0                     L20:
 19524  0019F0  6FEA               	movwf	_MSDWriteState& (0+255),b
 19525                           
 19526                           ;usb_device_msd.c: 1280: break;
 19527  0019F2  D0A7               	goto	l687
 19528  0019F4                     l695:
 19529                           
 19530                           ; BSR set to: 0
 19531                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19532                           
 19533                           ; BSR set to: 0
 19534                           
 19535                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19536                           
 19537                           ; BSR set to: 0
 19538  0019F4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19539  0019F6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19540  0019F8  B4D8               	btfsc	status,2,c
 19541  0019FA  D006               	goto	l698
 19542                           
 19543                           ; BSR set to: 0
 19544  0019FC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19545  001A00  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19546  001A04  BEDF               	btfsc	indf2,7,c
 19547  001A06  D09D               	goto	l687
 19548  001A08                     l698:
 19549                           
 19550                           ; BSR set to: 0
 19551                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19552                           
 19553                           ; BSR set to: 0
 19554  001A08  EE20 F001          	lfsr	2,1
 19555  001A0C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19556  001A0E  26D9               	addwf	fsr2l,f,c
 19557  001A10  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19558  001A12  22DA               	addwfc	fsr2h,f,c
 19559  001A14  50DF               	movf	indf2,w,c
 19560  001A16  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19561  001A18  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19562  001A1C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19563  001A1E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19564  001A20  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19565  001A22  5031               	movf	??_MSDWriteHandler+1,w,c
 19566  001A24  0101               	movlb	1	; () banked
 19567  001A26  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19568  001A28  5032               	movf	??_MSDWriteHandler+2,w,c
 19569  001A2A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19570  001A2C  5033               	movf	??_MSDWriteHandler+3,w,c
 19571  001A2E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19572  001A30  5034               	movf	??_MSDWriteHandler+4,w,c
 19573  001A32  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19574                           
 19575                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19576  001A34  0100               	movlb	0	; () banked
 19577  001A36  EE20 F001          	lfsr	2,1
 19578  001A3A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19579  001A3C  26D9               	addwf	fsr2l,f,c
 19580  001A3E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19581  001A40  22DA               	addwfc	fsr2h,f,c
 19582  001A42  50DF               	movf	indf2,w,c
 19583  001A44  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19584  001A46  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19585  001A4A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19586  001A4C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19587  001A4E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19588  001A50  5031               	movf	??_MSDWriteHandler+1,w,c
 19589  001A52  010D               	movlb	13	; () banked
 19590  001A54  5F88               	subwf	136,f,b	;volatile
 19591  001A56  5032               	movf	??_MSDWriteHandler+2,w,c
 19592  001A58  5B89               	subwfb	137,f,b	;volatile
 19593  001A5A  5033               	movf	??_MSDWriteHandler+3,w,c
 19594  001A5C  5B8A               	subwfb	138,f,b	;volatile
 19595  001A5E  5034               	movf	??_MSDWriteHandler+4,w,c
 19596  001A60  5B8B               	subwfb	139,f,b	;volatile
 19597                           
 19598                           ; BSR set to: 13
 19599                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19600  001A62  0E40               	movlw	64
 19601  001A64  0101               	movlb	1	; () banked
 19602  001A66  2786               	addwf	_ptrNextData& (0+255),f,b
 19603  001A68  0E00               	movlw	0
 19604  001A6A  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19605                           
 19606                           ; BSR set to: 1
 19607                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19608  001A6C  0E03               	movlw	3
 19609  001A6E  D055               	goto	L22
 19610  001A70                     
 19611                           ; BSR set to: 0
 19612                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19613                           
 19614                           ; BSR set to: 0
 19615  001A70  010D               	movlb	13	; () banked
 19616  001A72  518C               	movf	140,w,b	;volatile
 19617  001A74  A4D8               	btfss	status,2,c
 19618  001A76  D03B               	goto	l703
 19619                           
 19620                           ; BSR set to: 13
 19621                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19622  001A78  C1C1  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19623  001A7C  C1C2  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19624  001A80  C15E  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19625  001A84  C15F  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19626  001A88  C160  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19627  001A8C  C161  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19628  001A90  0E00               	movlw	0
 19629  001A92  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19630  001A94  0E06               	movlw	6
 19631  001A96  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19632  001A98  0101               	movlb	1	; () banked
 19633  001A9A  515E               	movf	_LBA& (0+255),w,b
 19634  001A9C  115F               	iorwf	(_LBA+1)& (0+255),w,b
 19635  001A9E  1160               	iorwf	(_LBA+2)& (0+255),w,b
 19636  001AA0  1161               	iorwf	(_LBA+3)& (0+255),w,b
 19637  001AA2  A4D8               	btfss	status,2,c
 19638  001AA4  D002               	goto	u8610
 19639  001AA6  0E01               	movlw	1
 19640  001AA8  D001               	goto	u8620
 19641  001AAA                     u8610:
 19642  001AAA  0E00               	movlw	0
 19643  001AAC                     u8620:
 19644  001AAC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19645  001AAE  D801               	call	u8638
 19646  001AB0  D009               	goto	u8639
 19647  001AB2                     u8638:
 19648  001AB2  0005               	push	
 19649  001AB4  6EFA               	movwf	pclath,c
 19650  001AB6  51BF               	movf	(_LUN+12)& (0+255),w,b
 19651  001AB8  6EFD               	movwf	tosl,c
 19652  001ABA  51C0               	movf	(_LUN+13)& (0+255),w,b
 19653  001ABC  6EFE               	movwf	tosh,c
 19654  001ABE  6AFF               	clrf	tosu,c
 19655  001AC0  50FA               	movf	pclath,w,c
 19656  001AC2  0012               	return		;indir
 19657  001AC4                     u8639:
 19658  001AC4  06E8               	decf	wreg,f,c
 19659  001AC6  B4D8               	btfsc	status,2,c
 19660  001AC8  D012               	goto	l703
 19661                           
 19662                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 19663  001ACA  0E64               	movlw	100
 19664  001ACC  0100               	movlb	0	; () banked
 19665  001ACE  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 19666  001AD0  D002               	goto	l702
 19667                           
 19668                           ; BSR set to: 0
 19669                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 19670  001AD2  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 19671                           
 19672                           ;usb_device_msd.c: 1314: break;
 19673  001AD4  D036               	goto	l687
 19674  001AD6                     l702:
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 19678                           
 19679                           ; BSR set to: 0
 19680  001AD6  0E01               	movlw	1
 19681  001AD8  010D               	movlb	13	; () banked
 19682  001ADA  6F8C               	movwf	140,b	;volatile
 19683                           
 19684                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 19685  001ADC  0101               	movlb	1	; () banked
 19686  001ADE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19687  001AE0  0BF0               	andlw	-16
 19688  001AE2  0903               	iorlw	3
 19689  001AE4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19690                           
 19691                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 19692  001AE6  0E00               	movlw	0
 19693  001AE8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19694                           
 19695                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 19696  001AEA  0E00               	movlw	0
 19697  001AEC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19698  001AEE                     l703:
 19699                           
 19700                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 19701                           
 19702                           ; BSR set to: 1
 19703                           
 19704                           ; BSR set to: 1
 19705                           
 19706                           ; BSR set to: 1
 19707  001AEE  0E01               	movlw	1
 19708  001AF0  0101               	movlb	1	; () banked
 19709  001AF2  275E               	addwf	_LBA& (0+255),f,b
 19710  001AF4  0E00               	movlw	0
 19711  001AF6  235F               	addwfc	(_LBA+1)& (0+255),f,b
 19712  001AF8  2360               	addwfc	(_LBA+2)& (0+255),f,b
 19713  001AFA  2361               	addwfc	(_LBA+3)& (0+255),f,b
 19714                           
 19715                           ; BSR set to: 1
 19716                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 19717  001AFC  0100               	movlb	0	; () banked
 19718  001AFE  07DB               	decf	_TransferLength& (0+255),f,b
 19719  001B00  A0D8               	btfss	status,0,c
 19720  001B02  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 19724  001B04  0E01               	movlw	1
 19725  001B06  D774               	goto	L20
 19726  001B08                     
 19727                           ; BSR set to: 0
 19728                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 19729                           
 19730                           ; BSR set to: 0
 19731  001B08  0E02               	movlw	2
 19732  001B0A  010D               	movlb	13	; () banked
 19733  001B0C  6F8C               	movwf	140,b	;volatile
 19734                           
 19735                           ; BSR set to: 13
 19736                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 19737  001B0E  0E00               	movlw	0
 19738  001B10  6E01               	movwf	USBStallEndpoint@dir,c
 19739  001B12  0E02               	movlw	2
 19740  001B14  ECE7  F023         	call	_USBStallEndpoint
 19741                           
 19742                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 19743  001B18  0E00               	movlw	0
 19744  001B1A                     L22:
 19745  001B1A  0100               	movlb	0	; () banked
 19746  001B1C  D769               	goto	L20
 19747  001B1E                     l684:
 19748                           
 19749                           ; BSR set to: 0
 19750  001B1E  0100               	movlb	0	; () banked
 19751  001B20  51EA               	movf	_MSDWriteState& (0+255),w,b
 19752                           
 19753                           ; Switch size 1, requested type "space"
 19754                           ; Number of cases is 5, Range of values is 0 to 4
 19755                           ; switch strategies available:
 19756                           ; Name         Instructions Cycles
 19757                           ; simple_byte           16     9 (average)
 19758                           ;	Chosen strategy is simple_byte
 19759  001B22  0A00               	xorlw	0	; case 0
 19760  001B24  B4D8               	btfsc	status,2,c
 19761  001B26  D6B5               	goto	l685
 19762  001B28  0A01               	xorlw	1	; case 1
 19763  001B2A  B4D8               	btfsc	status,2,c
 19764  001B2C  D705               	goto	l690
 19765  001B2E  0A03               	xorlw	3	; case 2
 19766  001B30  B4D8               	btfsc	status,2,c
 19767  001B32  D79E               	goto	l699
 19768  001B34  0A01               	xorlw	1	; case 3
 19769  001B36  B4D8               	btfsc	status,2,c
 19770  001B38  D715               	goto	l692
 19771  001B3A  0A07               	xorlw	7	; case 4
 19772  001B3C  B4D8               	btfsc	status,2,c
 19773  001B3E  D75A               	goto	l695
 19774  001B40  D7E3               	goto	l704
 19775  001B42                     l687:
 19776                           
 19777                           ;usb_device_msd.c: 1347: return MSDWriteState;
 19778                           
 19779                           ; BSR set to: 0
 19780  001B42  0100               	movlb	0	; () banked
 19781  001B44  51EA               	movf	_MSDWriteState& (0+255),w,b
 19782  001B46  0012               	return	
 19783  001B48                     __end_of_MSDWriteHandler:
 19784                           	opt stack 0
 19785                           tosu	equ	0xFFF
 19786                           tosh	equ	0xFFE
 19787                           tosl	equ	0xFFD
 19788                           pclath	equ	0xFFA
 19789                           tblptru	equ	0xFF8
 19790                           tblptrh	equ	0xFF7
 19791                           tblptrl	equ	0xFF6
 19792                           tablat	equ	0xFF5
 19793                           prodh	equ	0xFF4
 19794                           prodl	equ	0xFF3
 19795                           intcon	equ	0xFF2
 19796                           intcon2	equ	0xFF1
 19797                           intcon3	equ	0xFF0
 19798                           indf0	equ	0xFEF
 19799                           postinc0	equ	0xFEE
 19800                           fsr0h	equ	0xFEA
 19801                           fsr0l	equ	0xFE9
 19802                           wreg	equ	0xFE8
 19803                           indf1	equ	0xFE7
 19804                           postdec1	equ	0xFE5
 19805                           plusw1	equ	0xFE3
 19806                           fsr1h	equ	0xFE2
 19807                           fsr1l	equ	0xFE1
 19808                           indf2	equ	0xFDF
 19809                           postinc2	equ	0xFDE
 19810                           postdec2	equ	0xFDD
 19811                           plusw2	equ	0xFDB
 19812                           fsr2h	equ	0xFDA
 19813                           fsr2l	equ	0xFD9
 19814                           status	equ	0xFD8
 19815                           
 19816 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 19817 ;; Defined at:
 19818 ;;		line 34 in file "external_flash.c"
 19819 ;; Parameters:    Size  Location     Type
 19820 ;;  config          2    0[COMRAM] PTR void 
 19821 ;;		 -> NULL(0), 
 19822 ;; Auto vars:     Size  Location     Type
 19823 ;;		None
 19824 ;; Return value:  Size  Location     Type
 19825 ;;                  1    wreg      unsigned char 
 19826 ;; Registers used:
 19827 ;;		wreg
 19828 ;; Tracked objects:
 19829 ;;		On entry : 0/0
 19830 ;;		On exit  : 0/0
 19831 ;;		Unchanged: 0/0
 19832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19837 ;;Total ram usage:        2 bytes
 19838 ;; Hardware stack levels used:    1
 19839 ;; This function calls:
 19840 ;;		Nothing
 19841 ;; This function is called by:
 19842 ;;		_MSDWriteHandler
 19843 ;;		_MSDProcessCommandMediaPresent
 19844 ;; This function uses a non-reentrant model
 19845 ;;
 19846                           
 19847                           	psect	text88
 19848  008FCA                     __ptext88:
 19849                           	opt stack 0
 19850  008FCA                     _ExternalFlash_WriteProtectStateGet:
 19851                           	opt stack 25
 19852                           
 19853                           ;external_flash.c: 37: return 0;
 19854                           
 19855                           ; BSR set to: 0
 19856                           ;incstack = 0
 19857  008FCA  0E00               	movlw	0
 19858  008FCC  0012               	return	
 19859  008FCE                     __end_of_ExternalFlash_WriteProtectStateGet:
 19860                           	opt stack 0
 19861                           tosu	equ	0xFFF
 19862                           tosh	equ	0xFFE
 19863                           tosl	equ	0xFFD
 19864                           pclath	equ	0xFFA
 19865                           tblptru	equ	0xFF8
 19866                           tblptrh	equ	0xFF7
 19867                           tblptrl	equ	0xFF6
 19868                           tablat	equ	0xFF5
 19869                           prodh	equ	0xFF4
 19870                           prodl	equ	0xFF3
 19871                           intcon	equ	0xFF2
 19872                           intcon2	equ	0xFF1
 19873                           intcon3	equ	0xFF0
 19874                           indf0	equ	0xFEF
 19875                           postinc0	equ	0xFEE
 19876                           fsr0h	equ	0xFEA
 19877                           fsr0l	equ	0xFE9
 19878                           wreg	equ	0xFE8
 19879                           indf1	equ	0xFE7
 19880                           postdec1	equ	0xFE5
 19881                           plusw1	equ	0xFE3
 19882                           fsr1h	equ	0xFE2
 19883                           fsr1l	equ	0xFE1
 19884                           indf2	equ	0xFDF
 19885                           postinc2	equ	0xFDE
 19886                           postdec2	equ	0xFDD
 19887                           plusw2	equ	0xFDB
 19888                           fsr2h	equ	0xFDA
 19889                           fsr2l	equ	0xFD9
 19890                           status	equ	0xFD8
 19891                           
 19892 ;; *************** function _ExternalFlash_SectorWrite *****************
 19893 ;; Defined at:
 19894 ;;		line 56 in file "external_flash.c"
 19895 ;; Parameters:    Size  Location     Type
 19896 ;;  config          2   36[COMRAM] PTR void 
 19897 ;;		 -> NULL(0), 
 19898 ;;  sector_addr     4   38[COMRAM] unsigned long 
 19899 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 19900 ;;		 -> msd_buffer(512), 
 19901 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 19902 ;; Auto vars:     Size  Location     Type
 19903 ;;  page            2   45[COMRAM] unsigned int 
 19904 ;; Return value:  Size  Location     Type
 19905 ;;                  1    wreg      unsigned char 
 19906 ;; Registers used:
 19907 ;;		wreg, status,2, status,0, cstack
 19908 ;; Tracked objects:
 19909 ;;		On entry : 0/0
 19910 ;;		On exit  : 0/0
 19911 ;;		Unchanged: 0/0
 19912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19913 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19916 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19917 ;;Total ram usage:       11 bytes
 19918 ;; Hardware stack levels used:    1
 19919 ;; Hardware stack levels required when called:    5
 19920 ;; This function calls:
 19921 ;;		_flash_sector_write
 19922 ;; This function is called by:
 19923 ;;		_MSDWriteHandler
 19924 ;; This function uses a non-reentrant model
 19925 ;;
 19926                           
 19927                           	psect	text89
 19928  00881A                     __ptext89:
 19929                           	opt stack 0
 19930  00881A                     _ExternalFlash_SectorWrite:
 19931                           	opt stack 20
 19932                           
 19933                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 19934                           
 19935                           ;incstack = 0
 19936  00881A  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 19937  00881E  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 19938                           
 19939                           ;external_flash.c: 61: if(sector_addr >= 8192)
 19940  008822  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 19941  008824  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 19942  008826  E104               	bnz	u7940
 19943  008828  0E20               	movlw	32
 19944  00882A  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 19945  00882C  A0D8               	btfss	status,0,c
 19946  00882E  D002               	goto	l1892
 19947  008830                     u7940:
 19948                           
 19949                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 19950  008830  0E00               	movlw	0
 19951  008832  0012               	return	
 19952  008834                     l1892:
 19953                           
 19954                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 19955  008834  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 19956  008838  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 19957  00883C  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 19958  008840  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 19959  008844  ECEA  F03F         	call	_flash_sector_write	;wreg free
 19960                           
 19961                           ;external_flash.c: 69: return 1;
 19962  008848  0E01               	movlw	1
 19963  00884A  0012               	return	
 19964  00884C                     __end_of_ExternalFlash_SectorWrite:
 19965                           	opt stack 0
 19966                           tosu	equ	0xFFF
 19967                           tosh	equ	0xFFE
 19968                           tosl	equ	0xFFD
 19969                           pclath	equ	0xFFA
 19970                           tblptru	equ	0xFF8
 19971                           tblptrh	equ	0xFF7
 19972                           tblptrl	equ	0xFF6
 19973                           tablat	equ	0xFF5
 19974                           prodh	equ	0xFF4
 19975                           prodl	equ	0xFF3
 19976                           intcon	equ	0xFF2
 19977                           intcon2	equ	0xFF1
 19978                           intcon3	equ	0xFF0
 19979                           indf0	equ	0xFEF
 19980                           postinc0	equ	0xFEE
 19981                           fsr0h	equ	0xFEA
 19982                           fsr0l	equ	0xFE9
 19983                           wreg	equ	0xFE8
 19984                           indf1	equ	0xFE7
 19985                           postdec1	equ	0xFE5
 19986                           plusw1	equ	0xFE3
 19987                           fsr1h	equ	0xFE2
 19988                           fsr1l	equ	0xFE1
 19989                           indf2	equ	0xFDF
 19990                           postinc2	equ	0xFDE
 19991                           postdec2	equ	0xFDD
 19992                           plusw2	equ	0xFDB
 19993                           fsr2h	equ	0xFDA
 19994                           fsr2l	equ	0xFD9
 19995                           status	equ	0xFD8
 19996                           
 19997 ;; *************** function _MSDReadHandler *****************
 19998 ;; Defined at:
 19999 ;;		line 1038 in file "usb_device_msd.c"
 20000 ;; Parameters:    Size  Location     Type
 20001 ;;		None
 20002 ;; Auto vars:     Size  Location     Type
 20003 ;;		None
 20004 ;; Return value:  Size  Location     Type
 20005 ;;                  1    wreg      unsigned char 
 20006 ;; Registers used:
 20007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20008 ;; Tracked objects:
 20009 ;;		On entry : 0/0
 20010 ;;		On exit  : 0/0
 20011 ;;		Unchanged: 0/0
 20012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20017 ;;Total ram usage:        4 bytes
 20018 ;; Hardware stack levels used:    1
 20019 ;; Hardware stack levels required when called:    6
 20020 ;; This function calls:
 20021 ;;		_ExternalFlash_SectorRead
 20022 ;;		_MSDCheckForErrorCases
 20023 ;;		_USBStallEndpoint
 20024 ;;		_USBTransferOnePacket
 20025 ;; This function is called by:
 20026 ;;		_MSDProcessCommandMediaPresent
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           	psect	text90
 20031  0030B4                     __ptext90:
 20032                           	opt stack 0
 20033  0030B4                     _MSDReadHandler:
 20034                           	opt stack 20
 20035                           
 20036                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20037                           
 20038                           ;incstack = 0
 20039  0030B4  D0D7               	goto	l665
 20040  0030B6                     l666:
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20044  0030B6  C111  F161         	movff	_gblCBW+17,_LBA+3
 20045                           
 20046                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20047  0030BA  C112  F160         	movff	_gblCBW+18,_LBA+2
 20048                           
 20049                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20050  0030BE  C113  F15F         	movff	_gblCBW+19,_LBA+1
 20051                           
 20052                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20053  0030C2  C114  F15E         	movff	_gblCBW+20,_LBA
 20054                           
 20055                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20056  0030C6  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 20057                           
 20058                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20059  0030CA  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 20060                           
 20061                           ; BSR set to: 0
 20062                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20063  0030CE  51DB               	movf	_TransferLength& (0+255),w,b
 20064  0030D0  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20065  0030D2  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 20066  0030D4  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20067  0030D6  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20068  0030D8  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20069  0030DA  0E09               	movlw	9
 20070  0030DC                     u8375:
 20071  0030DC  90D8               	bcf	status,0,c
 20072  0030DE  3636               	rlcf	??_MSDReadHandler,f,c
 20073  0030E0  3637               	rlcf	??_MSDReadHandler+1,f,c
 20074  0030E2  3638               	rlcf	??_MSDReadHandler+2,f,c
 20075  0030E4  3639               	rlcf	??_MSDReadHandler+3,f,c
 20076  0030E6  2EE8               	decfsz	wreg,f,c
 20077  0030E8  D7F9               	goto	u8375
 20078  0030EA  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 20079  0030EE  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20080  0030F2  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20081  0030F6  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20082  0030FA  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 20083  0030FE  0900               	iorlw	0
 20084  003100  A4D8               	btfss	status,2,c
 20085  003102  D0C2               	goto	l668
 20086                           
 20087                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 20088                           
 20089                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 20090  003104  0E01               	movlw	1
 20091  003106  0100               	movlb	0	; () banked
 20092  003108  6FEB               	movwf	_MSDReadState& (0+255),b
 20093  00310A                     
 20094                           ; BSR set to: 0
 20095                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20096                           
 20097                           ; BSR set to: 0
 20098  00310A  51DB               	movf	_TransferLength& (0+255),w,b
 20099  00310C  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 20100  00310E  A4D8               	btfss	status,2,c
 20101  003110  D002               	goto	l670
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20105  003112  0E00               	movlw	0
 20106  003114  D046               	goto	L23
 20107  003116                     l670:
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20111                           
 20112                           ; BSR set to: 0
 20113  003116  07DB               	decf	_TransferLength& (0+255),f,b
 20114  003118  A0D8               	btfss	status,0,c
 20115  00311A  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20119  00311C  0E02               	movlw	2
 20120  00311E  6FEB               	movwf	_MSDReadState& (0+255),b
 20121  003120                     
 20122                           ; BSR set to: 0
 20123                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20124                           
 20125                           ; BSR set to: 0
 20126  003120  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20127  003122  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20128  003124  B4D8               	btfsc	status,2,c
 20129  003126  D006               	goto	l672
 20130                           
 20131                           ; BSR set to: 0
 20132  003128  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20133  00312C  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20134  003130  BEDF               	btfsc	indf2,7,c
 20135  003132  D0AA               	goto	l668
 20136  003134                     l672:
 20137                           
 20138                           ; BSR set to: 0
 20139                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20140                           
 20141                           ; BSR set to: 0
 20142  003134  C1C1  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20143  003138  C1C2  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20144  00313C  C15E  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20145  003140  C15F  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20146  003144  C160  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20147  003148  C161  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20148  00314C  0E00               	movlw	0
 20149  00314E  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20150  003150  0E06               	movlw	6
 20151  003152  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20152  003154  D801               	call	u8428
 20153  003156  D00A               	goto	u8429
 20154  003158                     u8428:
 20155  003158  0005               	push	
 20156  00315A  6EFA               	movwf	pclath,c
 20157  00315C  0101               	movlb	1	; () banked
 20158  00315E  51BB               	movf	(_LUN+8)& (0+255),w,b
 20159  003160  6EFD               	movwf	tosl,c
 20160  003162  51BC               	movf	(_LUN+9)& (0+255),w,b
 20161  003164  6EFE               	movwf	tosh,c
 20162  003166  6AFF               	clrf	tosu,c
 20163  003168  50FA               	movf	pclath,w,c
 20164  00316A  0012               	return		;indir
 20165  00316C                     u8429:
 20166  00316C  06E8               	decf	wreg,f,c
 20167  00316E  B4D8               	btfsc	status,2,c
 20168  003170  D01A               	goto	l675
 20169                           
 20170                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20171  003172  0E64               	movlw	100
 20172  003174  0100               	movlb	0	; () banked
 20173  003176  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 20174  003178  D002               	goto	l674
 20175                           
 20176                           ; BSR set to: 0
 20177                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20178  00317A  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 20179                           
 20180                           ;usb_device_msd.c: 1088: break;
 20181  00317C  D085               	goto	l668
 20182  00317E                     l674:
 20183                           
 20184                           ; BSR set to: 0
 20185                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20186                           
 20187                           ; BSR set to: 0
 20188  00317E  0E02               	movlw	2
 20189  003180  010D               	movlb	13	; () banked
 20190  003182  6F8C               	movwf	140,b	;volatile
 20191                           
 20192                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20193  003184  0101               	movlb	1	; () banked
 20194  003186  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20195  003188  0BF0               	andlw	-16
 20196  00318A  0903               	iorlw	3
 20197  00318C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20198                           
 20199                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20200  00318E  0E00               	movlw	0
 20201  003190  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20202                           
 20203                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20204  003192  0E00               	movlw	0
 20205  003194  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20206                           
 20207                           ; BSR set to: 1
 20208                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20209  003196  0E01               	movlw	1
 20210  003198  6E01               	movwf	USBStallEndpoint@dir,c
 20211  00319A  0E02               	movlw	2
 20212  00319C  ECE7  F023         	call	_USBStallEndpoint
 20213  0031A0  D05E               	goto	l11625
 20214  0031A2                     L23:
 20215  0031A2  6FEB               	movwf	_MSDReadState& (0+255),b
 20216                           
 20217                           ;usb_device_msd.c: 1109: break;
 20218  0031A4  D071               	goto	l668
 20219  0031A6                     l675:
 20220                           
 20221                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20222                           
 20223                           ; BSR set to: 0
 20224                           
 20225                           ; BSR set to: 0
 20226  0031A6  0E01               	movlw	1
 20227  0031A8  0101               	movlb	1	; () banked
 20228  0031AA  275E               	addwf	_LBA& (0+255),f,b
 20229  0031AC  0E00               	movlw	0
 20230  0031AE  235F               	addwfc	(_LBA+1)& (0+255),f,b
 20231  0031B0  2360               	addwfc	(_LBA+2)& (0+255),f,b
 20232  0031B2  2361               	addwfc	(_LBA+3)& (0+255),f,b
 20233                           
 20234                           ; BSR set to: 1
 20235                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20236  0031B4  0E00               	movlw	0
 20237  0031B6  010D               	movlb	13	; () banked
 20238  0031B8  6F88               	movwf	136,b	;volatile
 20239  0031BA  0E02               	movlw	2
 20240  0031BC  6F89               	movwf	137,b	;volatile
 20241  0031BE  0E00               	movlw	0
 20242  0031C0  6F8A               	movwf	138,b	;volatile
 20243  0031C2  0E00               	movlw	0
 20244  0031C4  6F8B               	movwf	139,b	;volatile
 20245                           
 20246                           ; BSR set to: 13
 20247                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20248  0031C6  0E00               	movlw	0
 20249  0031C8  0101               	movlb	1	; () banked
 20250  0031CA  6F86               	movwf	_ptrNextData& (0+255),b
 20251  0031CC  0E06               	movlw	6
 20252  0031CE  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 20253                           
 20254                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20255  0031D0  0E03               	movlw	3
 20256  0031D2  0100               	movlb	0	; () banked
 20257  0031D4  6FEB               	movwf	_MSDReadState& (0+255),b
 20258  0031D6                     
 20259                           ; BSR set to: 0
 20260                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20261                           
 20262                           ; BSR set to: 0
 20263  0031D6  010D               	movlb	13	; () banked
 20264  0031D8  5188               	movf	136,w,b	;volatile
 20265  0031DA  1189               	iorwf	137,w,b	;volatile
 20266  0031DC  118A               	iorwf	138,w,b	;volatile
 20267  0031DE  118B               	iorwf	139,w,b	;volatile
 20268  0031E0  A4D8               	btfss	status,2,c
 20269  0031E2  D002               	goto	l677
 20270                           
 20271                           ; BSR set to: 13
 20272                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20273  0031E4  0E01               	movlw	1
 20274  0031E6  D03C               	goto	L25
 20275  0031E8                     l677:
 20276                           
 20277                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20278                           
 20279                           ; BSR set to: 0
 20280  0031E8  0E04               	movlw	4
 20281  0031EA  0100               	movlb	0	; () banked
 20282  0031EC  6FEB               	movwf	_MSDReadState& (0+255),b
 20283  0031EE                     
 20284                           ; BSR set to: 0
 20285                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20286                           
 20287                           ; BSR set to: 0
 20288  0031EE  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20289  0031F0  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20290  0031F2  B4D8               	btfsc	status,2,c
 20291  0031F4  D006               	goto	l679
 20292                           
 20293                           ; BSR set to: 0
 20294  0031F6  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20295  0031FA  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20296  0031FE  BEDF               	btfsc	indf2,7,c
 20297  003200  D043               	goto	l668
 20298  003202                     l679:
 20299                           
 20300                           ; BSR set to: 0
 20301                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20302                           
 20303                           ; BSR set to: 0
 20304  003202  0E01               	movlw	1
 20305  003204  6E01               	movwf	USBTransferOnePacket@dir,c
 20306  003206  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20307  00320A  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20308  00320E  0E40               	movlw	64
 20309  003210  6E04               	movwf	USBTransferOnePacket@len,c
 20310  003212  0E02               	movlw	2
 20311  003214  ECF2  F025         	call	_USBTransferOnePacket
 20312  003218  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20313  00321C  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20314                           
 20315                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20316  003220  0E03               	movlw	3
 20317  003222  0100               	movlb	0	; () banked
 20318  003224  6FEB               	movwf	_MSDReadState& (0+255),b
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20322  003226  0E40               	movlw	64
 20323  003228  0101               	movlb	1	; () banked
 20324  00322A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20325  00322C  0E00               	movlw	0
 20326  00322E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20327  003230  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20328  003232  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20329                           
 20330                           ; BSR set to: 1
 20331                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20332  003234  0E40               	movlw	64
 20333  003236  010D               	movlb	13	; () banked
 20334  003238  5F88               	subwf	136,f,b	;volatile
 20335  00323A  0E00               	movlw	0
 20336  00323C  5B89               	subwfb	137,f,b	;volatile
 20337  00323E  5B8A               	subwfb	138,f,b	;volatile
 20338  003240  5B8B               	subwfb	139,f,b	;volatile
 20339                           
 20340                           ; BSR set to: 13
 20341                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20342  003242  0E40               	movlw	64
 20343  003244  0101               	movlb	1	; () banked
 20344  003246  2786               	addwf	_ptrNextData& (0+255),f,b
 20345  003248  0E00               	movlw	0
 20346  00324A  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20347                           
 20348                           ;usb_device_msd.c: 1149: break;
 20349  00324C  D01D               	goto	l668
 20350  00324E                     
 20351                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20352                           
 20353                           ; BSR set to: 1
 20354  00324E  0E02               	movlw	2
 20355  003250  010D               	movlb	13	; () banked
 20356  003252  6F8C               	movwf	140,b	;volatile
 20357                           
 20358                           ; BSR set to: 13
 20359                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20360  003254  0E01               	movlw	1
 20361  003256  6E01               	movwf	USBStallEndpoint@dir,c
 20362  003258  0E02               	movlw	2
 20363  00325A  ECE7  F023         	call	_USBStallEndpoint
 20364  00325E                     l11625:
 20365                           
 20366                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20367  00325E  0E00               	movlw	0
 20368  003260                     L25:
 20369  003260  0100               	movlb	0	; () banked
 20370  003262  D79F               	goto	L23
 20371  003264                     l665:
 20372                           
 20373                           ; BSR set to: 0
 20374  003264  0100               	movlb	0	; () banked
 20375  003266  51EB               	movf	_MSDReadState& (0+255),w,b
 20376                           
 20377                           ; Switch size 1, requested type "space"
 20378                           ; Number of cases is 5, Range of values is 0 to 4
 20379                           ; switch strategies available:
 20380                           ; Name         Instructions Cycles
 20381                           ; simple_byte           16     9 (average)
 20382                           ;	Chosen strategy is simple_byte
 20383  003268  0A00               	xorlw	0	; case 0
 20384  00326A  B4D8               	btfsc	status,2,c
 20385  00326C  D724               	goto	l666
 20386  00326E  0A01               	xorlw	1	; case 1
 20387  003270  B4D8               	btfsc	status,2,c
 20388  003272  D74B               	goto	l669
 20389  003274  0A03               	xorlw	3	; case 2
 20390  003276  B4D8               	btfsc	status,2,c
 20391  003278  D753               	goto	l671
 20392  00327A  0A01               	xorlw	1	; case 3
 20393  00327C  B4D8               	btfsc	status,2,c
 20394  00327E  D7AB               	goto	l676
 20395  003280  0A07               	xorlw	7	; case 4
 20396  003282  B4D8               	btfsc	status,2,c
 20397  003284  D7B4               	goto	l678
 20398  003286  D7E3               	goto	l680
 20399  003288                     l668:
 20400                           
 20401                           ;usb_device_msd.c: 1161: return MSDReadState;
 20402                           
 20403                           ; BSR set to: 0
 20404  003288  0100               	movlb	0	; () banked
 20405  00328A  51EB               	movf	_MSDReadState& (0+255),w,b
 20406  00328C  0012               	return	
 20407  00328E                     __end_of_MSDReadHandler:
 20408                           	opt stack 0
 20409                           tosu	equ	0xFFF
 20410                           tosh	equ	0xFFE
 20411                           tosl	equ	0xFFD
 20412                           pclath	equ	0xFFA
 20413                           tblptru	equ	0xFF8
 20414                           tblptrh	equ	0xFF7
 20415                           tblptrl	equ	0xFF6
 20416                           tablat	equ	0xFF5
 20417                           prodh	equ	0xFF4
 20418                           prodl	equ	0xFF3
 20419                           intcon	equ	0xFF2
 20420                           intcon2	equ	0xFF1
 20421                           intcon3	equ	0xFF0
 20422                           indf0	equ	0xFEF
 20423                           postinc0	equ	0xFEE
 20424                           fsr0h	equ	0xFEA
 20425                           fsr0l	equ	0xFE9
 20426                           wreg	equ	0xFE8
 20427                           indf1	equ	0xFE7
 20428                           postdec1	equ	0xFE5
 20429                           plusw1	equ	0xFE3
 20430                           fsr1h	equ	0xFE2
 20431                           fsr1l	equ	0xFE1
 20432                           indf2	equ	0xFDF
 20433                           postinc2	equ	0xFDE
 20434                           postdec2	equ	0xFDD
 20435                           plusw2	equ	0xFDB
 20436                           fsr2h	equ	0xFDA
 20437                           fsr2l	equ	0xFD9
 20438                           status	equ	0xFD8
 20439                           
 20440 ;; *************** function _MSDCheckForErrorCases *****************
 20441 ;; Defined at:
 20442 ;;		line 1434 in file "usb_device_msd.c"
 20443 ;; Parameters:    Size  Location     Type
 20444 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20445 ;; Auto vars:     Size  Location     Type
 20446 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20447 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20448 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20449 ;; Return value:  Size  Location     Type
 20450 ;;                  1    wreg      unsigned char 
 20451 ;; Registers used:
 20452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20453 ;; Tracked objects:
 20454 ;;		On entry : 0/0
 20455 ;;		On exit  : 0/0
 20456 ;;		Unchanged: 0/0
 20457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20459 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20462 ;;Total ram usage:        7 bytes
 20463 ;; Hardware stack levels used:    1
 20464 ;; Hardware stack levels required when called:    2
 20465 ;; This function calls:
 20466 ;;		_MSDErrorHandler
 20467 ;; This function is called by:
 20468 ;;		_MSDProcessCommandMediaPresent
 20469 ;;		_MSDReadHandler
 20470 ;;		_MSDWriteHandler
 20471 ;; This function uses a non-reentrant model
 20472 ;;
 20473                           
 20474                           	psect	text91
 20475  00545A                     __ptext91:
 20476                           	opt stack 0
 20477  00545A                     _MSDCheckForErrorCases:
 20478                           	opt stack 23
 20479                           
 20480                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;incstack = 0
 20484  00545A  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20485  00545C  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20486  00545E  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20487  005460  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20488  005462  A4D8               	btfss	status,2,c
 20489  005464  D002               	goto	l710
 20490                           
 20491                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20492  005466  0E01               	movlw	1
 20493  005468  D001               	goto	L26
 20494  00546A                     l710:
 20495                           
 20496                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20497  00546A  0E00               	movlw	0
 20498  00546C                     L26:
 20499  00546C  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20500                           
 20501                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20502  00546E  0100               	movlb	0	; () banked
 20503  005470  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20504  005472  A4D8               	btfss	status,2,c
 20505  005474  D005               	goto	l712
 20506                           
 20507                           ; BSR set to: 0
 20508  005476  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20509  005478  A4D8               	btfss	status,2,c
 20510  00547A  D002               	goto	l712
 20511                           
 20512                           ; BSR set to: 0
 20513                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20514  00547C  0E00               	movlw	0
 20515                           
 20516                           ; BSR set to: 0
 20517  00547E  0012               	return	
 20518  005480                     l712:
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20522                           
 20523                           ; BSR set to: 0
 20524  005480  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20525  005482  0101               	movlb	1	; () banked
 20526  005484  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20527  005486  E11A               	bnz	l11081
 20528  005488  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20529  00548A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20530  00548C  E117               	bnz	l11081
 20531  00548E  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20532  005490  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20533  005492  E114               	bnz	l11081
 20534  005494  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20535  005496  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20536  005498  A4D8               	btfss	status,2,c
 20537  00549A  D010               	goto	l718
 20538                           
 20539                           ; BSR set to: 1
 20540                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20541  00549C  0100               	movlb	0	; () banked
 20542  00549E  05ED               	decf	_MSD_State& (0+255),w,b
 20543  0054A0  A4D8               	btfss	status,2,c
 20544  0054A2  D006               	goto	l715
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20548  0054A4  0E2A               	movlw	42
 20549  0054A6  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20550  0054A8  B4D8               	btfsc	status,2,c
 20551  0054AA  D008               	goto	l718
 20552                           
 20553                           ; BSR set to: 0
 20554                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20555  0054AC  0E00               	movlw	0
 20556                           
 20557                           ; BSR set to: 0
 20558  0054AE  0012               	return	
 20559  0054B0                     l715:
 20560                           
 20561                           ; BSR set to: 0
 20562                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20563                           
 20564                           ; BSR set to: 0
 20565  0054B0  0E2A               	movlw	42
 20566  0054B2  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20567  0054B4  A4D8               	btfss	status,2,c
 20568  0054B6  D002               	goto	l718
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20572  0054B8  0E00               	movlw	0
 20573                           
 20574                           ; BSR set to: 0
 20575  0054BA  0012               	return	
 20576  0054BC                     l718:
 20577  0054BC                     l11081:
 20578                           
 20579                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20580  0054BC  0101               	movlb	1	; () banked
 20581  0054BE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20582  0054C0  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20583  0054C2  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20584  0054C4  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20585  0054C6  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20586  0054C8  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20587  0054CA  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20588  0054CC  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20589  0054CE  B0D8               	btfsc	status,0,c
 20590  0054D0  D002               	goto	l719
 20591                           
 20592                           ; BSR set to: 1
 20593                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20594  0054D2  0E01               	movlw	1
 20595  0054D4  D001               	goto	L27
 20596  0054D6                     l719:
 20597                           
 20598                           ; BSR set to: 1
 20599                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20600                           
 20601                           ; BSR set to: 1
 20602  0054D6  0E00               	movlw	0
 20603  0054D8                     L27:
 20604  0054D8  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20605                           
 20606                           ; BSR set to: 1
 20607                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20608                           
 20609                           ; BSR set to: 1
 20610  0054DA  0E02               	movlw	2
 20611  0054DC  0100               	movlb	0	; () banked
 20612  0054DE  19ED               	xorwf	_MSD_State& (0+255),w,b
 20613  0054E0  A4D8               	btfss	status,2,c
 20614  0054E2  D014               	goto	l721
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20618  0054E4  0E2A               	movlw	42
 20619  0054E6  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20620  0054E8  B4D8               	btfsc	status,2,c
 20621  0054EA  D005               	goto	l722
 20622                           
 20623                           ; BSR set to: 0
 20624  0054EC  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20625  0054EE  A4D8               	btfss	status,2,c
 20626  0054F0  D002               	goto	l722
 20627  0054F2                     u7760:
 20628                           
 20629                           ; BSR set to: 0
 20630                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20631  0054F2  0E05               	movlw	5
 20632  0054F4  D01D               	goto	L30
 20633  0054F6                     l722:
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20637                           
 20638                           ; BSR set to: 0
 20639  0054F6  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20640  0054F8  B4D8               	btfsc	status,2,c
 20641  0054FA  D00F               	goto	u7810
 20642                           
 20643                           ; BSR set to: 0
 20644                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20645                           
 20646                           ; BSR set to: 0
 20647                           
 20648                           ; BSR set to: 0
 20649                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20650  0054FC  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20651  0054FE  B4D8               	btfsc	status,2,c
 20652  005500  D003               	goto	u7790
 20653                           
 20654                           ; BSR set to: 0
 20655                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20656                           
 20657                           ; BSR set to: 0
 20658                           
 20659                           ; BSR set to: 0
 20660                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 20661  005502  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20662  005504  A4D8               	btfss	status,2,c
 20663  005506  D7F5               	goto	u7760
 20664  005508                     u7790:
 20665                           
 20666                           ; BSR set to: 0
 20667                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 20668  005508  0E04               	movlw	4
 20669  00550A  D012               	goto	L30
 20670  00550C                     l721:
 20671                           
 20672                           ; BSR set to: 0
 20673                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 20674                           
 20675                           ; BSR set to: 0
 20676  00550C  0E2A               	movlw	42
 20677  00550E  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20678  005510  B4D8               	btfsc	status,2,c
 20679  005512  D00D               	goto	l737
 20680                           
 20681                           ; BSR set to: 0
 20682                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 20683                           
 20684                           ; BSR set to: 0
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 20688  005514  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20689  005516  A4D8               	btfss	status,2,c
 20690  005518  D002               	goto	l733
 20691  00551A                     u7810:
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 20695  00551A  0E01               	movlw	1
 20696  00551C  D009               	goto	L30
 20697  00551E                     l733:
 20698                           
 20699                           ; BSR set to: 0
 20700                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 20701                           
 20702                           ; BSR set to: 0
 20703  00551E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20704  005520  B4D8               	btfsc	status,2,c
 20705  005522  D003               	goto	u7830
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 20709                           
 20710                           ; BSR set to: 0
 20711                           
 20712                           ; BSR set to: 0
 20713                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 20714  005524  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20715  005526  A4D8               	btfss	status,2,c
 20716  005528  D002               	goto	l737
 20717  00552A                     u7830:
 20718                           
 20719                           ; BSR set to: 0
 20720                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 20721  00552A  0E02               	movlw	2
 20722  00552C  D001               	goto	L30
 20723  00552E                     l737:
 20724                           
 20725                           ; BSR set to: 0
 20726                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 20727                           
 20728                           ; BSR set to: 0
 20729  00552E  0E03               	movlw	3
 20730  005530                     L30:
 20731  005530  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 20735                           
 20736                           ; BSR set to: 0
 20737                           
 20738                           ; BSR set to: 0
 20739                           
 20740                           ; BSR set to: 0
 20741                           
 20742                           ; BSR set to: 0
 20743                           
 20744                           ; BSR set to: 0
 20745  005532  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20746  005534  ECEE  F024         	call	_MSDErrorHandler
 20747                           
 20748                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 20749  005538  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20750  00553A  0012               	return	
 20751  00553C                     __end_of_MSDCheckForErrorCases:
 20752                           	opt stack 0
 20753                           tosu	equ	0xFFF
 20754                           tosh	equ	0xFFE
 20755                           tosl	equ	0xFFD
 20756                           pclath	equ	0xFFA
 20757                           tblptru	equ	0xFF8
 20758                           tblptrh	equ	0xFF7
 20759                           tblptrl	equ	0xFF6
 20760                           tablat	equ	0xFF5
 20761                           prodh	equ	0xFF4
 20762                           prodl	equ	0xFF3
 20763                           intcon	equ	0xFF2
 20764                           intcon2	equ	0xFF1
 20765                           intcon3	equ	0xFF0
 20766                           indf0	equ	0xFEF
 20767                           postinc0	equ	0xFEE
 20768                           fsr0h	equ	0xFEA
 20769                           fsr0l	equ	0xFE9
 20770                           wreg	equ	0xFE8
 20771                           indf1	equ	0xFE7
 20772                           postdec1	equ	0xFE5
 20773                           plusw1	equ	0xFE3
 20774                           fsr1h	equ	0xFE2
 20775                           fsr1l	equ	0xFE1
 20776                           indf2	equ	0xFDF
 20777                           postinc2	equ	0xFDE
 20778                           postdec2	equ	0xFDD
 20779                           plusw2	equ	0xFDB
 20780                           fsr2h	equ	0xFDA
 20781                           fsr2l	equ	0xFD9
 20782                           status	equ	0xFD8
 20783                           
 20784 ;; *************** function _MSDErrorHandler *****************
 20785 ;; Defined at:
 20786 ;;		line 1577 in file "usb_device_msd.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;  ErrorCase       1    wreg     unsigned char 
 20789 ;; Auto vars:     Size  Location     Type
 20790 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 20791 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 20792 ;; Return value:  Size  Location     Type
 20793 ;;                  1    wreg      void 
 20794 ;; Registers used:
 20795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20796 ;; Tracked objects:
 20797 ;;		On entry : 0/0
 20798 ;;		On exit  : 0/0
 20799 ;;		Unchanged: 0/0
 20800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20805 ;;Total ram usage:        2 bytes
 20806 ;; Hardware stack levels used:    1
 20807 ;; Hardware stack levels required when called:    1
 20808 ;; This function calls:
 20809 ;;		_ResetSenseData
 20810 ;;		_USBStallEndpoint
 20811 ;; This function is called by:
 20812 ;;		_MSDProcessCommandMediaAbsent
 20813 ;;		_MSDProcessCommandMediaPresent
 20814 ;;		_MSDCheckForErrorCases
 20815 ;; This function uses a non-reentrant model
 20816 ;;
 20817                           
 20818                           	psect	text92
 20819  0049DC                     __ptext92:
 20820                           	opt stack 0
 20821  0049DC                     _MSDErrorHandler:
 20822                           	opt stack 23
 20823                           
 20824                           ;incstack = 0
 20825                           ;MSDErrorHandler@ErrorCase stored from wreg
 20826  0049DC  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 20827                           
 20828                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 20829  0049DE  0100               	movlb	0	; () banked
 20830  0049E0  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20831  0049E2  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20832  0049E4  B4D8               	btfsc	status,2,c
 20833  0049E6  D006               	goto	u7270
 20834                           
 20835                           ; BSR set to: 0
 20836  0049E8  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20837  0049EC  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20838  0049F0  BEDF               	btfsc	indf2,7,c
 20839  0049F2  0012               	return	
 20840  0049F4                     u7270:
 20841                           
 20842                           ; BSR set to: 0
 20843                           
 20844                           ; BSR set to: 0
 20845  0049F4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 20846  0049F6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20847  0049F8  B4D8               	btfsc	status,2,c
 20848  0049FA  D006               	goto	l741
 20849                           
 20850                           ; BSR set to: 0
 20851  0049FC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20852  004A00  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20853  004A04  BEDF               	btfsc	indf2,7,c
 20854  004A06  0012               	return	
 20855  004A08                     l741:
 20856                           
 20857                           ; BSR set to: 0
 20858                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 20859  004A08  C0ED  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 20860                           
 20861                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 20862  004A0C  69EC               	setf	_MSDCommandState& (0+255),b
 20863                           
 20864                           ; BSR set to: 0
 20865                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 20866  004A0E  0E00               	movlw	0
 20867  004A10  6FEB               	movwf	_MSDReadState& (0+255),b
 20868                           
 20869                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 20870  004A12  0E00               	movlw	0
 20871  004A14  6FEA               	movwf	_MSDWriteState& (0+255),b
 20872                           
 20873                           ; BSR set to: 0
 20874                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 20875  004A16  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 20876  004A1A  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 20877  004A1E  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 20878  004A22  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 20879                           
 20880                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 20881  004A26  0E01               	movlw	1
 20882  004A28  010D               	movlb	13	; () banked
 20883  004A2A  6F8C               	movwf	140,b	;volatile
 20884                           
 20885                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 20886  004A2C  0E03               	movlw	3
 20887  004A2E  0100               	movlb	0	; () banked
 20888  004A30  6FED               	movwf	_MSD_State& (0+255),b
 20889                           
 20890                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 20891  004A32  D043               	goto	l747
 20892  004A34                     
 20893                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 20894                           
 20895                           ; BSR set to: 0
 20896  004A34  0E02               	movlw	2
 20897  004A36  010D               	movlb	13	; () banked
 20898  004A38  6F8C               	movwf	140,b	;volatile
 20899                           
 20900                           ;usb_device_msd.c: 1607: break;
 20901  004A3A  0012               	return	
 20902  004A3C                     
 20903                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 20904                           
 20905                           ; BSR set to: 13
 20906  004A3C  0E01               	movlw	1
 20907  004A3E  6E01               	movwf	USBStallEndpoint@dir,c
 20908  004A40  0E02               	movlw	2
 20909  004A42  ECE7  F023         	call	_USBStallEndpoint
 20910                           
 20911                           ;usb_device_msd.c: 1611: break;
 20912  004A46  0012               	return	
 20913  004A48                     
 20914                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 20915  004A48  0E02               	movlw	2
 20916  004A4A  010D               	movlb	13	; () banked
 20917  004A4C  6F8C               	movwf	140,b	;volatile
 20918                           
 20919                           ; BSR set to: 13
 20920                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 20921  004A4E  0E01               	movlw	1
 20922  004A50  6E01               	movwf	USBStallEndpoint@dir,c
 20923  004A52  0E02               	movlw	2
 20924  004A54  ECE7  F023         	call	_USBStallEndpoint
 20925                           
 20926                           ;usb_device_msd.c: 1616: break;
 20927  004A58  0012               	return	
 20928  004A5A                     
 20929                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 20930  004A5A  0E00               	movlw	0
 20931  004A5C  6E01               	movwf	USBStallEndpoint@dir,c
 20932  004A5E  0E02               	movlw	2
 20933  004A60  ECE7  F023         	call	_USBStallEndpoint
 20934                           
 20935                           ;usb_device_msd.c: 1620: break;
 20936  004A64  0012               	return	
 20937  004A66                     
 20938                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 20939  004A66  0E02               	movlw	2
 20940  004A68  010D               	movlb	13	; () banked
 20941  004A6A  6F8C               	movwf	140,b	;volatile
 20942                           
 20943                           ; BSR set to: 13
 20944                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 20945  004A6C  0E00               	movlw	0
 20946  004A6E  6E01               	movwf	USBStallEndpoint@dir,c
 20947  004A70  0E02               	movlw	2
 20948  004A72  ECE7  F023         	call	_USBStallEndpoint
 20949                           
 20950                           ;usb_device_msd.c: 1625: break;
 20951  004A76  0012               	return	
 20952  004A78                     
 20953                           ;usb_device_msd.c: 1628: ResetSenseData();
 20954  004A78  EC72  F03D         	call	_ResetSenseData	;wreg free
 20955                           
 20956                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 20957  004A7C  0101               	movlb	1	; () banked
 20958  004A7E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20959  004A80  0BF0               	andlw	-16
 20960  004A82  0905               	iorlw	5
 20961  004A84  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20962                           
 20963                           ; BSR set to: 1
 20964                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 20965  004A86  0E20               	movlw	32
 20966  004A88  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20967                           
 20968                           ; BSR set to: 1
 20969                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 20970  004A8A  0E00               	movlw	0
 20971  004A8C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20972                           
 20973                           ; BSR set to: 1
 20974                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 20975  004A8E  0E02               	movlw	2
 20976  004A90  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 20977  004A92  A4D8               	btfss	status,2,c
 20978  004A94  D00C               	goto	l755
 20979                           
 20980                           ; BSR set to: 1
 20981  004A96  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20982  004A98  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20983  004A9A  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20984  004A9C  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20985  004A9E  B4D8               	btfsc	status,2,c
 20986  004AA0  D006               	goto	l755
 20987                           
 20988                           ; BSR set to: 1
 20989                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 20990  004AA2  0E00               	movlw	0
 20991  004AA4  6E01               	movwf	USBStallEndpoint@dir,c
 20992  004AA6  0E02               	movlw	2
 20993  004AA8  ECE7  F023         	call	_USBStallEndpoint
 20994                           
 20995                           ;usb_device_msd.c: 1636: }
 20996  004AAC  0012               	return	
 20997  004AAE                     l755:
 20998                           
 20999                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 21000  004AAE  0E01               	movlw	1
 21001  004AB0  6E01               	movwf	USBStallEndpoint@dir,c
 21002  004AB2  0E02               	movlw	2
 21003  004AB4  ECE7  F023         	call	_USBStallEndpoint
 21004                           
 21005                           ;usb_device_msd.c: 1644: }
 21006                           
 21007                           ;usb_device_msd.c: 1643: break;
 21008                           
 21009                           ;usb_device_msd.c: 1642: default:
 21010                           
 21011                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21012  004AB8  0012               	return	
 21013  004ABA                     l747:
 21014  004ABA  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21015                           
 21016                           ; Switch size 1, requested type "space"
 21017                           ; Number of cases is 6, Range of values is 1 to 127
 21018                           ; switch strategies available:
 21019                           ; Name         Instructions Cycles
 21020                           ; simple_byte           19    10 (average)
 21021                           ;	Chosen strategy is simple_byte
 21022  004ABC  0A01               	xorlw	1	; case 1
 21023  004ABE  B4D8               	btfsc	status,2,c
 21024  004AC0  D7B9               	goto	l748
 21025  004AC2  0A03               	xorlw	3	; case 2
 21026  004AC4  B4D8               	btfsc	status,2,c
 21027  004AC6  D7BA               	goto	l750
 21028  004AC8  0A01               	xorlw	1	; case 3
 21029  004ACA  B4D8               	btfsc	status,2,c
 21030  004ACC  D7BD               	goto	l751
 21031  004ACE  0A07               	xorlw	7	; case 4
 21032  004AD0  B4D8               	btfsc	status,2,c
 21033  004AD2  D7C3               	goto	l752
 21034  004AD4  0A01               	xorlw	1	; case 5
 21035  004AD6  B4D8               	btfsc	status,2,c
 21036  004AD8  D7C6               	goto	l753
 21037  004ADA  0A7A               	xorlw	122	; case 127
 21038  004ADC  A4D8               	btfss	status,2,c
 21039  004ADE  0012               	return	
 21040  004AE0  D7CB               	goto	l754
 21041  004AE2                     __end_of_MSDErrorHandler:
 21042                           	opt stack 0
 21043                           tosu	equ	0xFFF
 21044                           tosh	equ	0xFFE
 21045                           tosl	equ	0xFFD
 21046                           pclath	equ	0xFFA
 21047                           tblptru	equ	0xFF8
 21048                           tblptrh	equ	0xFF7
 21049                           tblptrl	equ	0xFF6
 21050                           tablat	equ	0xFF5
 21051                           prodh	equ	0xFF4
 21052                           prodl	equ	0xFF3
 21053                           intcon	equ	0xFF2
 21054                           intcon2	equ	0xFF1
 21055                           intcon3	equ	0xFF0
 21056                           indf0	equ	0xFEF
 21057                           postinc0	equ	0xFEE
 21058                           fsr0h	equ	0xFEA
 21059                           fsr0l	equ	0xFE9
 21060                           wreg	equ	0xFE8
 21061                           indf1	equ	0xFE7
 21062                           postdec1	equ	0xFE5
 21063                           plusw1	equ	0xFE3
 21064                           fsr1h	equ	0xFE2
 21065                           fsr1l	equ	0xFE1
 21066                           indf2	equ	0xFDF
 21067                           postinc2	equ	0xFDE
 21068                           postdec2	equ	0xFDD
 21069                           plusw2	equ	0xFDB
 21070                           fsr2h	equ	0xFDA
 21071                           fsr2l	equ	0xFD9
 21072                           status	equ	0xFD8
 21073                           
 21074 ;; *************** function _USBStallEndpoint *****************
 21075 ;; Defined at:
 21076 ;;		line 1073 in file "usb_device.c"
 21077 ;; Parameters:    Size  Location     Type
 21078 ;;  ep              1    wreg     unsigned char 
 21079 ;;  dir             1    0[COMRAM] unsigned char 
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;  ep              1    5[COMRAM] unsigned char 
 21082 ;;  p               2    6[COMRAM] PTR struct __BDT
 21083 ;;		 -> BDT(48), 
 21084 ;; Return value:  Size  Location     Type
 21085 ;;                  1    wreg      void 
 21086 ;; Registers used:
 21087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21088 ;; Tracked objects:
 21089 ;;		On entry : 0/0
 21090 ;;		On exit  : 0/0
 21091 ;;		Unchanged: 0/0
 21092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21093 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21094 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21096 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21097 ;;Total ram usage:        8 bytes
 21098 ;; Hardware stack levels used:    1
 21099 ;; This function calls:
 21100 ;;		Nothing
 21101 ;; This function is called by:
 21102 ;;		_MSDTasks
 21103 ;;		_MSDReadHandler
 21104 ;;		_MSDWriteHandler
 21105 ;;		_MSDErrorHandler
 21106 ;;		_MSDTransferTerminated
 21107 ;; This function uses a non-reentrant model
 21108 ;;
 21109                           
 21110                           	psect	text93
 21111  0047CE                     __ptext93:
 21112                           	opt stack 0
 21113  0047CE                     _USBStallEndpoint:
 21114                           	opt stack 27
 21115                           
 21116                           ;incstack = 0
 21117                           ;USBStallEndpoint@ep stored from wreg
 21118  0047CE  6E06               	movwf	USBStallEndpoint@ep,c
 21119                           
 21120                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21121  0047D0  5006               	movf	USBStallEndpoint@ep,w,c
 21122  0047D2  A4D8               	btfss	status,2,c
 21123  0047D4  D02C               	goto	l191
 21124                           
 21125                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21126  0047D6  0100               	movlb	0	; () banked
 21127  0047D8  EE20 F001          	lfsr	2,1
 21128  0047DC  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21129  0047DE  26D9               	addwf	fsr2l,f,c
 21130  0047E0  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21131  0047E2  22DA               	addwfc	fsr2h,f,c
 21132  0047E4  0E08               	movlw	8
 21133  0047E6  6EDF               	movwf	indf2,c
 21134                           
 21135                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21136  0047E8  EE20 F002          	lfsr	2,2
 21137  0047EC  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21138  0047EE  26D9               	addwf	fsr2l,f,c
 21139  0047F0  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21140  0047F2  22DA               	addwfc	fsr2h,f,c
 21141  0047F4  0E30               	movlw	48
 21142  0047F6  6EDE               	movwf	postinc2,c
 21143  0047F8  0E0D               	movlw	13
 21144  0047FA  6EDD               	movwf	postdec2,c
 21145                           
 21146                           ; BSR set to: 0
 21147                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21148  0047FC  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21149  004800  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21150  004804  0E0C               	movlw	12
 21151  004806  6EDF               	movwf	indf2,c
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21155  004808  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21156  00480C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21157  004810  0E00               	movlw	0
 21158  004812  8EDB               	bsf	plusw2,7,c
 21159                           
 21160                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21161  004814  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21162  004818  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21163  00481C  0E04               	movlw	4
 21164  00481E  6EDF               	movwf	indf2,c
 21165                           
 21166                           ; BSR set to: 0
 21167                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21168  004820  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21169  004824  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21170  004828  0E00               	movlw	0
 21171  00482A  8EDB               	bsf	plusw2,7,c
 21172                           
 21173                           ;usb_device.c: 1089: }
 21174  00482C  0012               	return	
 21175  00482E                     l191:
 21176                           
 21177                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21178                           
 21179                           ; BSR set to: 0
 21180  00482E  5001               	movf	USBStallEndpoint@dir,w,c
 21181  004830  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21182  004832  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21183  004834  90D8               	bcf	status,0,c
 21184  004836  3602               	rlcf	??_USBStallEndpoint,f,c
 21185  004838  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21186  00483A  5006               	movf	USBStallEndpoint@ep,w,c
 21187  00483C  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21188  00483E  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21189  004840  90D8               	bcf	status,0,c
 21190  004842  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21191  004844  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21192  004846  90D8               	bcf	status,0,c
 21193  004848  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21194  00484A  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21195  00484C  5002               	movf	??_USBStallEndpoint,w,c
 21196  00484E  2604               	addwf	??_USBStallEndpoint+2,f,c
 21197  004850  5003               	movf	??_USBStallEndpoint+1,w,c
 21198  004852  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21199  004854  90D8               	bcf	status,0,c
 21200  004856  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21201  004858  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21202  00485A  90D8               	bcf	status,0,c
 21203  00485C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21204  00485E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21205  004860  0E00               	movlw	0
 21206  004862  2404               	addwf	??_USBStallEndpoint+2,w,c
 21207  004864  6E07               	movwf	USBStallEndpoint@p,c
 21208  004866  0E0D               	movlw	13
 21209  004868  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21210  00486A  6E08               	movwf	USBStallEndpoint@p+1,c
 21211                           
 21212                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21213  00486C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21214  004870  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21215  004874  0E00               	movlw	0
 21216  004876  84DB               	bsf	plusw2,2,c
 21217                           
 21218                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21219  004878  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21220  00487C  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21221  004880  0E00               	movlw	0
 21222  004882  8EDB               	bsf	plusw2,7,c
 21223                           
 21224                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21225  004884  5006               	movf	USBStallEndpoint@ep,w,c
 21226  004886  0D04               	mullw	4
 21227  004888  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21228  00488C  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21229  004890  5001               	movf	USBStallEndpoint@dir,w,c
 21230  004892  0D02               	mullw	2
 21231  004894  50F3               	movf	prodl,w,c
 21232  004896  2602               	addwf	??_USBStallEndpoint,f,c
 21233  004898  50F4               	movf	prodh,w,c
 21234  00489A  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21235  00489C  90D8               	bcf	status,0,c
 21236  00489E  3602               	rlcf	??_USBStallEndpoint,f,c
 21237  0048A0  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21238  0048A2  90D8               	bcf	status,0,c
 21239  0048A4  3602               	rlcf	??_USBStallEndpoint,f,c
 21240  0048A6  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21241  0048A8  0E04               	movlw	4
 21242  0048AA  2602               	addwf	??_USBStallEndpoint,f,c
 21243  0048AC  0E00               	movlw	0
 21244  0048AE  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21245  0048B0  0E00               	movlw	0
 21246  0048B2  2402               	addwf	??_USBStallEndpoint,w,c
 21247  0048B4  6E07               	movwf	USBStallEndpoint@p,c
 21248  0048B6  0E0D               	movlw	13
 21249  0048B8  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21250  0048BA  6E08               	movwf	USBStallEndpoint@p+1,c
 21251                           
 21252                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21253  0048BC  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21254  0048C0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21255  0048C4  0E00               	movlw	0
 21256  0048C6  84DB               	bsf	plusw2,2,c
 21257                           
 21258                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21259  0048C8  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21260  0048CC  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21261  0048D0  0E00               	movlw	0
 21262  0048D2  8EDB               	bsf	plusw2,7,c
 21263  0048D4  0012               	return	
 21264  0048D6                     __end_of_USBStallEndpoint:
 21265                           	opt stack 0
 21266                           tosu	equ	0xFFF
 21267                           tosh	equ	0xFFE
 21268                           tosl	equ	0xFFD
 21269                           pclath	equ	0xFFA
 21270                           tblptru	equ	0xFF8
 21271                           tblptrh	equ	0xFF7
 21272                           tblptrl	equ	0xFF6
 21273                           tablat	equ	0xFF5
 21274                           prodh	equ	0xFF4
 21275                           prodl	equ	0xFF3
 21276                           intcon	equ	0xFF2
 21277                           intcon2	equ	0xFF1
 21278                           intcon3	equ	0xFF0
 21279                           indf0	equ	0xFEF
 21280                           postinc0	equ	0xFEE
 21281                           fsr0h	equ	0xFEA
 21282                           fsr0l	equ	0xFE9
 21283                           wreg	equ	0xFE8
 21284                           indf1	equ	0xFE7
 21285                           postdec1	equ	0xFE5
 21286                           plusw1	equ	0xFE3
 21287                           fsr1h	equ	0xFE2
 21288                           fsr1l	equ	0xFE1
 21289                           indf2	equ	0xFDF
 21290                           postinc2	equ	0xFDE
 21291                           postdec2	equ	0xFDD
 21292                           plusw2	equ	0xFDB
 21293                           fsr2h	equ	0xFDA
 21294                           fsr2l	equ	0xFD9
 21295                           status	equ	0xFD8
 21296                           
 21297 ;; *************** function _ResetSenseData *****************
 21298 ;; Defined at:
 21299 ;;		line 1373 in file "usb_device_msd.c"
 21300 ;; Parameters:    Size  Location     Type
 21301 ;;		None
 21302 ;; Auto vars:     Size  Location     Type
 21303 ;;		None
 21304 ;; Return value:  Size  Location     Type
 21305 ;;                  1    wreg      void 
 21306 ;; Registers used:
 21307 ;;		wreg, status,2
 21308 ;; Tracked objects:
 21309 ;;		On entry : 0/0
 21310 ;;		On exit  : 0/0
 21311 ;;		Unchanged: 0/0
 21312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21317 ;;Total ram usage:        0 bytes
 21318 ;; Hardware stack levels used:    1
 21319 ;; This function calls:
 21320 ;;		Nothing
 21321 ;; This function is called by:
 21322 ;;		_USBMSDInit
 21323 ;;		_MSDProcessCommandMediaAbsent
 21324 ;;		_MSDProcessCommandMediaPresent
 21325 ;;		_MSDErrorHandler
 21326 ;; This function uses a non-reentrant model
 21327 ;;
 21328                           
 21329                           	psect	text94
 21330  007AE4                     __ptext94:
 21331                           	opt stack 0
 21332  007AE4                     _ResetSenseData:
 21333                           	opt stack 26
 21334                           
 21335                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21336                           
 21337                           ;incstack = 0
 21338  007AE4  0101               	movlb	1	; () banked
 21339  007AE6  911F               	bcf	_gblSenseData& (0+255),0,b
 21340  007AE8  931F               	bcf	_gblSenseData& (0+255),1,b
 21341  007AEA  951F               	bcf	_gblSenseData& (0+255),2,b
 21342  007AEC  971F               	bcf	_gblSenseData& (0+255),3,b
 21343  007AEE  891F               	bsf	_gblSenseData& (0+255),4,b
 21344  007AF0  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21345  007AF2  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21346                           
 21347                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21348  007AF4  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21349                           
 21350                           ; BSR set to: 1
 21351                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21352  007AF6  0E00               	movlw	0
 21353  007AF8  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21354                           
 21355                           ; BSR set to: 1
 21356                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21357  007AFA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21358  007AFC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21359  007AFE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21360  007B00  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21361                           
 21362                           ; BSR set to: 1
 21363                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21364  007B02  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21368  007B04  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21369                           
 21370                           ; BSR set to: 1
 21371                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21372  007B06  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21373                           
 21374                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21375  007B08  0E00               	movlw	0
 21376  007B0A  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21377                           
 21378                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21379  007B0C  0E00               	movlw	0
 21380  007B0E  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21381                           
 21382                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21383  007B10  0E00               	movlw	0
 21384  007B12  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21385                           
 21386                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21387  007B14  0E00               	movlw	0
 21388  007B16  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21389                           
 21390                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21391  007B18  0E0A               	movlw	10
 21392  007B1A  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21393                           
 21394                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21395  007B1C  0E00               	movlw	0
 21396  007B1E  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21397  007B20  0E00               	movlw	0
 21398  007B22  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21399  007B24  0E00               	movlw	0
 21400  007B26  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21401  007B28  0E00               	movlw	0
 21402  007B2A  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21403                           
 21404                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21405  007B2C  0E00               	movlw	0
 21406  007B2E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21407                           
 21408                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21409  007B30  0E00               	movlw	0
 21410  007B32  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21411                           
 21412                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21413  007B34  0E00               	movlw	0
 21414  007B36  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21415                           
 21416                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21417  007B38  0E00               	movlw	0
 21418  007B3A  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21419                           
 21420                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21421  007B3C  0E00               	movlw	0
 21422  007B3E  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21423                           
 21424                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21425  007B40  0E00               	movlw	0
 21426  007B42  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21427                           
 21428                           ; BSR set to: 1
 21429  007B44  0012               	return		;funcret
 21430  007B46                     __end_of_ResetSenseData:
 21431                           	opt stack 0
 21432                           tosu	equ	0xFFF
 21433                           tosh	equ	0xFFE
 21434                           tosl	equ	0xFFD
 21435                           pclath	equ	0xFFA
 21436                           tblptru	equ	0xFF8
 21437                           tblptrh	equ	0xFF7
 21438                           tblptrl	equ	0xFF6
 21439                           tablat	equ	0xFF5
 21440                           prodh	equ	0xFF4
 21441                           prodl	equ	0xFF3
 21442                           intcon	equ	0xFF2
 21443                           intcon2	equ	0xFF1
 21444                           intcon3	equ	0xFF0
 21445                           indf0	equ	0xFEF
 21446                           postinc0	equ	0xFEE
 21447                           fsr0h	equ	0xFEA
 21448                           fsr0l	equ	0xFE9
 21449                           wreg	equ	0xFE8
 21450                           indf1	equ	0xFE7
 21451                           postdec1	equ	0xFE5
 21452                           plusw1	equ	0xFE3
 21453                           fsr1h	equ	0xFE2
 21454                           fsr1l	equ	0xFE1
 21455                           indf2	equ	0xFDF
 21456                           postinc2	equ	0xFDE
 21457                           postdec2	equ	0xFDD
 21458                           plusw2	equ	0xFDB
 21459                           fsr2h	equ	0xFDA
 21460                           fsr2l	equ	0xFD9
 21461                           status	equ	0xFD8
 21462                           
 21463 ;; *************** function _ExternalFlash_SectorRead *****************
 21464 ;; Defined at:
 21465 ;;		line 40 in file "external_flash.c"
 21466 ;; Parameters:    Size  Location     Type
 21467 ;;  config          2   43[COMRAM] PTR void 
 21468 ;;		 -> NULL(0), 
 21469 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21470 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21471 ;;		 -> msd_buffer(512), 
 21472 ;; Auto vars:     Size  Location     Type
 21473 ;;  page            2   51[COMRAM] unsigned int 
 21474 ;; Return value:  Size  Location     Type
 21475 ;;                  1    wreg      unsigned char 
 21476 ;; Registers used:
 21477 ;;		wreg, status,2, status,0, cstack
 21478 ;; Tracked objects:
 21479 ;;		On entry : 0/0
 21480 ;;		On exit  : 0/0
 21481 ;;		Unchanged: 0/0
 21482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21483 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21486 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21487 ;;Total ram usage:       10 bytes
 21488 ;; Hardware stack levels used:    1
 21489 ;; Hardware stack levels required when called:    5
 21490 ;; This function calls:
 21491 ;;		_flash_sector_read
 21492 ;; This function is called by:
 21493 ;;		_MSDReadHandler
 21494 ;; This function uses a non-reentrant model
 21495 ;;
 21496                           
 21497                           	psect	text95
 21498  00884C                     __ptext95:
 21499                           	opt stack 0
 21500  00884C                     _ExternalFlash_SectorRead:
 21501                           	opt stack 20
 21502                           
 21503                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21504                           
 21505                           ; BSR set to: 1
 21506                           ;incstack = 0
 21507  00884C  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21508  008850  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21509                           
 21510                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21511  008854  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21512  008856  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21513  008858  E104               	bnz	u7930
 21514  00885A  0E20               	movlw	32
 21515  00885C  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21516  00885E  A0D8               	btfss	status,0,c
 21517  008860  D002               	goto	l1888
 21518  008862                     u7930:
 21519                           
 21520                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21521  008862  0E00               	movlw	0
 21522  008864  0012               	return	
 21523  008866                     l1888:
 21524                           
 21525                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21526  008866  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21527  00886A  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21528  00886E  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21529  008872  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21530  008876  EC3F  F044         	call	_flash_sector_read	;wreg free
 21531                           
 21532                           ;external_flash.c: 53: return 1;
 21533  00887A  0E01               	movlw	1
 21534  00887C  0012               	return	
 21535  00887E                     __end_of_ExternalFlash_SectorRead:
 21536                           	opt stack 0
 21537                           tosu	equ	0xFFF
 21538                           tosh	equ	0xFFE
 21539                           tosl	equ	0xFFD
 21540                           pclath	equ	0xFFA
 21541                           tblptru	equ	0xFF8
 21542                           tblptrh	equ	0xFF7
 21543                           tblptrl	equ	0xFF6
 21544                           tablat	equ	0xFF5
 21545                           prodh	equ	0xFF4
 21546                           prodl	equ	0xFF3
 21547                           intcon	equ	0xFF2
 21548                           intcon2	equ	0xFF1
 21549                           intcon3	equ	0xFF0
 21550                           indf0	equ	0xFEF
 21551                           postinc0	equ	0xFEE
 21552                           fsr0h	equ	0xFEA
 21553                           fsr0l	equ	0xFE9
 21554                           wreg	equ	0xFE8
 21555                           indf1	equ	0xFE7
 21556                           postdec1	equ	0xFE5
 21557                           plusw1	equ	0xFE3
 21558                           fsr1h	equ	0xFE2
 21559                           fsr1l	equ	0xFE1
 21560                           indf2	equ	0xFDF
 21561                           postinc2	equ	0xFDE
 21562                           postdec2	equ	0xFDD
 21563                           plusw2	equ	0xFDB
 21564                           fsr2h	equ	0xFDA
 21565                           fsr2l	equ	0xFD9
 21566                           status	equ	0xFD8
 21567                           
 21568 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21569 ;; Defined at:
 21570 ;;		line 993 in file "usb_device_msd.c"
 21571 ;; Parameters:    Size  Location     Type
 21572 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21573 ;; Auto vars:     Size  Location     Type
 21574 ;;		None
 21575 ;; Return value:  Size  Location     Type
 21576 ;;                  1    wreg      void 
 21577 ;; Registers used:
 21578 ;;		wreg, status,2, status,0
 21579 ;; Tracked objects:
 21580 ;;		On entry : 0/0
 21581 ;;		On exit  : 0/0
 21582 ;;		Unchanged: 0/0
 21583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21588 ;;Total ram usage:        6 bytes
 21589 ;; Hardware stack levels used:    1
 21590 ;; This function calls:
 21591 ;;		Nothing
 21592 ;; This function is called by:
 21593 ;;		_MSDProcessCommandMediaPresent
 21594 ;; This function uses a non-reentrant model
 21595 ;;
 21596                           
 21597                           	psect	text96
 21598  006C34                     __ptext96:
 21599                           	opt stack 0
 21600  006C34                     _MSDComputeDeviceInAndResidue:
 21601                           	opt stack 26
 21602                           
 21603                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21604                           
 21605                           ;incstack = 0
 21606  006C34  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21607  006C36  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21608  006C38  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21609  006C3A  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21610  006C3C  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21611  006C3E  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21612  006C40  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21613  006C42  0101               	movlb	1	; () banked
 21614  006C44  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21615  006C46  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21616  006C48  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21617  006C4A  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21618  006C4C  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21619  006C4E  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21620  006C50  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21621  006C52  B0D8               	btfsc	status,0,c
 21622  006C54  D00E               	goto	l659
 21623                           
 21624                           ; BSR set to: 1
 21625                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21626  006C56  0E00               	movlw	0
 21627  006C58  010D               	movlb	13	; () banked
 21628  006C5A  6F88               	movwf	136,b	;volatile
 21629  006C5C  0E00               	movlw	0
 21630  006C5E  6F89               	movwf	137,b	;volatile
 21631  006C60  0E00               	movlw	0
 21632  006C62  6F8A               	movwf	138,b	;volatile
 21633  006C64  0E00               	movlw	0
 21634  006C66  6F8B               	movwf	139,b	;volatile
 21635                           
 21636                           ; BSR set to: 13
 21637                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21638  006C68  C108  F0DB         	movff	_gblCBW+8,_TransferLength
 21639  006C6C  C109  F0DC         	movff	_gblCBW+9,_TransferLength+1
 21640                           
 21641                           ;usb_device_msd.c: 1002: }
 21642  006C70  0012               	return	
 21643  006C72                     l659:
 21644                           
 21645                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21646                           
 21647                           ; BSR set to: 13
 21648  006C72  0100               	movlb	0	; () banked
 21649  006C74  51DB               	movf	_TransferLength& (0+255),w,b
 21650  006C76  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21651  006C78  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21652  006C7A  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21653  006C7C  B0D8               	btfsc	status,0,c
 21654  006C7E  D004               	goto	l661
 21655                           
 21656                           ; BSR set to: 0
 21657                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21658  006C80  C001  F0DB         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 21659  006C84  C002  F0DC         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 21660  006C88                     l661:
 21661                           
 21662                           ; BSR set to: 0
 21663                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 21664                           
 21665                           ; BSR set to: 0
 21666  006C88  51DB               	movf	_TransferLength& (0+255),w,b
 21667  006C8A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21668  006C8C  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21669  006C8E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21670  006C90  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21671  006C92  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21672  006C94  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 21673  006C96  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 21674  006C98  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 21675  006C9A  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 21676  006C9C  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 21677  006C9E  0E00               	movlw	0
 21678  006CA0  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 21679  006CA2  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 21680  006CA4  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 21681  006CA6  0101               	movlb	1	; () banked
 21682  006CA8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21683  006CAA  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 21684  006CAC  010D               	movlb	13	; () banked
 21685  006CAE  6F88               	movwf	136,b	;volatile
 21686  006CB0  0101               	movlb	1	; () banked
 21687  006CB2  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21688  006CB4  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 21689  006CB6  010D               	movlb	13	; () banked
 21690  006CB8  6F89               	movwf	137,b	;volatile
 21691  006CBA  0101               	movlb	1	; () banked
 21692  006CBC  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21693  006CBE  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 21694  006CC0  010D               	movlb	13	; () banked
 21695  006CC2  6F8A               	movwf	138,b	;volatile
 21696  006CC4  0101               	movlb	1	; () banked
 21697  006CC6  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21698  006CC8  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 21699  006CCA  010D               	movlb	13	; () banked
 21700  006CCC  6F8B               	movwf	139,b	;volatile
 21701  006CCE  0012               	return	
 21702  006CD0                     __end_of_MSDComputeDeviceInAndResidue:
 21703                           	opt stack 0
 21704                           tosu	equ	0xFFF
 21705                           tosh	equ	0xFFE
 21706                           tosl	equ	0xFFD
 21707                           pclath	equ	0xFFA
 21708                           tblptru	equ	0xFF8
 21709                           tblptrh	equ	0xFF7
 21710                           tblptrl	equ	0xFF6
 21711                           tablat	equ	0xFF5
 21712                           prodh	equ	0xFF4
 21713                           prodl	equ	0xFF3
 21714                           intcon	equ	0xFF2
 21715                           intcon2	equ	0xFF1
 21716                           intcon3	equ	0xFF0
 21717                           indf0	equ	0xFEF
 21718                           postinc0	equ	0xFEE
 21719                           fsr0h	equ	0xFEA
 21720                           fsr0l	equ	0xFE9
 21721                           wreg	equ	0xFE8
 21722                           indf1	equ	0xFE7
 21723                           postdec1	equ	0xFE5
 21724                           plusw1	equ	0xFE3
 21725                           fsr1h	equ	0xFE2
 21726                           fsr1l	equ	0xFE1
 21727                           indf2	equ	0xFDF
 21728                           postinc2	equ	0xFDE
 21729                           postdec2	equ	0xFDD
 21730                           plusw2	equ	0xFDB
 21731                           fsr2h	equ	0xFDA
 21732                           fsr2l	equ	0xFD9
 21733                           status	equ	0xFD8
 21734                           
 21735 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 21736 ;; Defined at:
 21737 ;;		line 18 in file "external_flash.c"
 21738 ;; Parameters:    Size  Location     Type
 21739 ;;  config          2    0[COMRAM] PTR void 
 21740 ;;		 -> NULL(0), 
 21741 ;; Auto vars:     Size  Location     Type
 21742 ;;		None
 21743 ;; Return value:  Size  Location     Type
 21744 ;;                  2    0[COMRAM] unsigned int 
 21745 ;; Registers used:
 21746 ;;		wreg, status,2
 21747 ;; Tracked objects:
 21748 ;;		On entry : 0/0
 21749 ;;		On exit  : 0/0
 21750 ;;		Unchanged: 0/0
 21751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21756 ;;Total ram usage:        2 bytes
 21757 ;; Hardware stack levels used:    1
 21758 ;; This function calls:
 21759 ;;		Nothing
 21760 ;; This function is called by:
 21761 ;;		_MSDProcessCommandMediaPresent
 21762 ;; This function uses a non-reentrant model
 21763 ;;
 21764                           
 21765                           	psect	text97
 21766  008F3E                     __ptext97:
 21767                           	opt stack 0
 21768  008F3E                     _ExternalFlash_SectorSizeRead:
 21769                           	opt stack 26
 21770                           
 21771                           ;external_flash.c: 20: return 512;
 21772                           
 21773                           ; BSR set to: 13
 21774                           ;incstack = 0
 21775  008F3E  0E02               	movlw	2
 21776  008F40  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 21777  008F42  0E00               	movlw	0
 21778  008F44  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 21779  008F46  0012               	return	
 21780  008F48                     __end_of_ExternalFlash_SectorSizeRead:
 21781                           	opt stack 0
 21782                           tosu	equ	0xFFF
 21783                           tosh	equ	0xFFE
 21784                           tosl	equ	0xFFD
 21785                           pclath	equ	0xFFA
 21786                           tblptru	equ	0xFF8
 21787                           tblptrh	equ	0xFF7
 21788                           tblptrl	equ	0xFF6
 21789                           tablat	equ	0xFF5
 21790                           prodh	equ	0xFF4
 21791                           prodl	equ	0xFF3
 21792                           intcon	equ	0xFF2
 21793                           intcon2	equ	0xFF1
 21794                           intcon3	equ	0xFF0
 21795                           indf0	equ	0xFEF
 21796                           postinc0	equ	0xFEE
 21797                           fsr0h	equ	0xFEA
 21798                           fsr0l	equ	0xFE9
 21799                           wreg	equ	0xFE8
 21800                           indf1	equ	0xFE7
 21801                           postdec1	equ	0xFE5
 21802                           plusw1	equ	0xFE3
 21803                           fsr1h	equ	0xFE2
 21804                           fsr1l	equ	0xFE1
 21805                           indf2	equ	0xFDF
 21806                           postinc2	equ	0xFDE
 21807                           postdec2	equ	0xFDD
 21808                           plusw2	equ	0xFDB
 21809                           fsr2h	equ	0xFDA
 21810                           fsr2l	equ	0xFD9
 21811                           status	equ	0xFD8
 21812                           
 21813 ;; *************** function _ExternalFlash_CapacityRead *****************
 21814 ;; Defined at:
 21815 ;;		line 23 in file "external_flash.c"
 21816 ;; Parameters:    Size  Location     Type
 21817 ;;  config          2    0[COMRAM] PTR void 
 21818 ;;		 -> NULL(0), 
 21819 ;; Auto vars:     Size  Location     Type
 21820 ;;		None
 21821 ;; Return value:  Size  Location     Type
 21822 ;;                  4    0[COMRAM] unsigned long 
 21823 ;; Registers used:
 21824 ;;		wreg, status,2
 21825 ;; Tracked objects:
 21826 ;;		On entry : 0/0
 21827 ;;		On exit  : 0/0
 21828 ;;		Unchanged: 0/0
 21829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21834 ;;Total ram usage:        4 bytes
 21835 ;; Hardware stack levels used:    1
 21836 ;; This function calls:
 21837 ;;		Nothing
 21838 ;; This function is called by:
 21839 ;;		_MSDProcessCommandMediaPresent
 21840 ;; This function uses a non-reentrant model
 21841 ;;
 21842                           
 21843                           	psect	text98
 21844  008E76                     __ptext98:
 21845                           	opt stack 0
 21846  008E76                     _ExternalFlash_CapacityRead:
 21847                           	opt stack 26
 21848                           
 21849                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 21850                           
 21851                           ;incstack = 0
 21852  008E76  0EFF               	movlw	255
 21853  008E78  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 21854  008E7A  0E1F               	movlw	31
 21855  008E7C  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 21856  008E7E  0E00               	movlw	0
 21857  008E80  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 21858  008E82  0E00               	movlw	0
 21859  008E84  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 21860  008E86  0012               	return	
 21861  008E88                     __end_of_ExternalFlash_CapacityRead:
 21862                           	opt stack 0
 21863                           tosu	equ	0xFFF
 21864                           tosh	equ	0xFFE
 21865                           tosl	equ	0xFFD
 21866                           pclath	equ	0xFFA
 21867                           tblptru	equ	0xFF8
 21868                           tblptrh	equ	0xFF7
 21869                           tblptrl	equ	0xFF6
 21870                           tablat	equ	0xFF5
 21871                           prodh	equ	0xFF4
 21872                           prodl	equ	0xFF3
 21873                           intcon	equ	0xFF2
 21874                           intcon2	equ	0xFF1
 21875                           intcon3	equ	0xFF0
 21876                           indf0	equ	0xFEF
 21877                           postinc0	equ	0xFEE
 21878                           fsr0h	equ	0xFEA
 21879                           fsr0l	equ	0xFE9
 21880                           wreg	equ	0xFE8
 21881                           indf1	equ	0xFE7
 21882                           postdec1	equ	0xFE5
 21883                           plusw1	equ	0xFE3
 21884                           fsr1h	equ	0xFE2
 21885                           fsr1l	equ	0xFE1
 21886                           indf2	equ	0xFDF
 21887                           postinc2	equ	0xFDE
 21888                           postdec2	equ	0xFDD
 21889                           plusw2	equ	0xFDB
 21890                           fsr2h	equ	0xFDA
 21891                           fsr2l	equ	0xFD9
 21892                           status	equ	0xFD8
 21893                           
 21894 ;; *************** function _ExternalFlash_MediaInitialize *****************
 21895 ;; Defined at:
 21896 ;;		line 10 in file "external_flash.c"
 21897 ;; Parameters:    Size  Location     Type
 21898 ;;  config          2    0[COMRAM] PTR void 
 21899 ;;		 -> NULL(0), 
 21900 ;; Auto vars:     Size  Location     Type
 21901 ;;		None
 21902 ;; Return value:  Size  Location     Type
 21903 ;;                  2    0[COMRAM] PTR struct .
 21904 ;; Registers used:
 21905 ;;		wreg, status,2, status,0
 21906 ;; Tracked objects:
 21907 ;;		On entry : 0/0
 21908 ;;		On exit  : 0/0
 21909 ;;		Unchanged: 0/0
 21910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21915 ;;Total ram usage:        2 bytes
 21916 ;; Hardware stack levels used:    1
 21917 ;; This function calls:
 21918 ;;		Nothing
 21919 ;; This function is called by:
 21920 ;;		_USBMSDInit
 21921 ;;		_MSDProcessCommand
 21922 ;; This function uses a non-reentrant model
 21923 ;;
 21924                           
 21925                           	psect	text99
 21926  008D90                     __ptext99:
 21927                           	opt stack 0
 21928  008D90                     _ExternalFlash_MediaInitialize:
 21929                           	opt stack 26
 21930                           
 21931                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 21932                           
 21933                           ;incstack = 0
 21934  008D90  0101               	movlb	1	; () banked
 21935  008D92  81AB               	bsf	(_mediaInformation+1)& (0+255),0,b
 21936                           
 21937                           ; BSR set to: 1
 21938                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 21939  008D94  0E02               	movlw	2
 21940  008D96  6FAD               	movwf	(_mediaInformation+3)& (0+255),b
 21941  008D98  0E00               	movlw	0
 21942  008D9A  6FAC               	movwf	(_mediaInformation+2)& (0+255),b
 21943                           
 21944                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 21945  008D9C  0E00               	movlw	0
 21946  008D9E  6FAA               	movwf	_mediaInformation& (0+255),b
 21947                           
 21948                           ; BSR set to: 1
 21949                           ;external_flash.c: 15: return &mediaInformation;
 21950  008DA0  0EAA               	movlw	low _mediaInformation
 21951  008DA2  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 21952  008DA4  0E01               	movlw	high _mediaInformation
 21953  008DA6  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 21954  008DA8  0012               	return	
 21955  008DAA                     __end_of_ExternalFlash_MediaInitialize:
 21956                           	opt stack 0
 21957                           tosu	equ	0xFFF
 21958                           tosh	equ	0xFFE
 21959                           tosl	equ	0xFFD
 21960                           pclath	equ	0xFFA
 21961                           tblptru	equ	0xFF8
 21962                           tblptrh	equ	0xFF7
 21963                           tblptrl	equ	0xFF6
 21964                           tablat	equ	0xFF5
 21965                           prodh	equ	0xFF4
 21966                           prodl	equ	0xFF3
 21967                           intcon	equ	0xFF2
 21968                           intcon2	equ	0xFF1
 21969                           intcon3	equ	0xFF0
 21970                           indf0	equ	0xFEF
 21971                           postinc0	equ	0xFEE
 21972                           fsr0h	equ	0xFEA
 21973                           fsr0l	equ	0xFE9
 21974                           wreg	equ	0xFE8
 21975                           indf1	equ	0xFE7
 21976                           postdec1	equ	0xFE5
 21977                           plusw1	equ	0xFE3
 21978                           fsr1h	equ	0xFE2
 21979                           fsr1l	equ	0xFE1
 21980                           indf2	equ	0xFDF
 21981                           postinc2	equ	0xFDE
 21982                           postdec2	equ	0xFDD
 21983                           plusw2	equ	0xFDB
 21984                           fsr2h	equ	0xFDA
 21985                           fsr2l	equ	0xFD9
 21986                           status	equ	0xFD8
 21987                           
 21988 ;; *************** function _ExternalFlash_MediaDetect *****************
 21989 ;; Defined at:
 21990 ;;		line 29 in file "external_flash.c"
 21991 ;; Parameters:    Size  Location     Type
 21992 ;;  config          2    0[COMRAM] PTR void 
 21993 ;;		 -> NULL(0), 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;		None
 21996 ;; Return value:  Size  Location     Type
 21997 ;;                  1    wreg      unsigned char 
 21998 ;; Registers used:
 21999 ;;		wreg
 22000 ;; Tracked objects:
 22001 ;;		On entry : 0/0
 22002 ;;		On exit  : 0/0
 22003 ;;		Unchanged: 0/0
 22004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22009 ;;Total ram usage:        2 bytes
 22010 ;; Hardware stack levels used:    1
 22011 ;; This function calls:
 22012 ;;		Nothing
 22013 ;; This function is called by:
 22014 ;;		_USBMSDInit
 22015 ;;		_MSDProcessCommand
 22016 ;; This function uses a non-reentrant model
 22017 ;;
 22018                           
 22019                           	psect	text100
 22020  008FCE                     __ptext100:
 22021                           	opt stack 0
 22022  008FCE                     _ExternalFlash_MediaDetect:
 22023                           	opt stack 26
 22024                           
 22025                           ;external_flash.c: 31: return 1;
 22026                           
 22027                           ; BSR set to: 1
 22028                           ;incstack = 0
 22029  008FCE  0E01               	movlw	1
 22030  008FD0  0012               	return	
 22031  008FD2                     __end_of_ExternalFlash_MediaDetect:
 22032                           	opt stack 0
 22033                           tosu	equ	0xFFF
 22034                           tosh	equ	0xFFE
 22035                           tosl	equ	0xFFD
 22036                           pclath	equ	0xFFA
 22037                           tblptru	equ	0xFF8
 22038                           tblptrh	equ	0xFF7
 22039                           tblptrl	equ	0xFF6
 22040                           tablat	equ	0xFF5
 22041                           prodh	equ	0xFF4
 22042                           prodl	equ	0xFF3
 22043                           intcon	equ	0xFF2
 22044                           intcon2	equ	0xFF1
 22045                           intcon3	equ	0xFF0
 22046                           indf0	equ	0xFEF
 22047                           postinc0	equ	0xFEE
 22048                           fsr0h	equ	0xFEA
 22049                           fsr0l	equ	0xFE9
 22050                           wreg	equ	0xFE8
 22051                           indf1	equ	0xFE7
 22052                           postdec1	equ	0xFE5
 22053                           plusw1	equ	0xFE3
 22054                           fsr1h	equ	0xFE2
 22055                           fsr1l	equ	0xFE1
 22056                           indf2	equ	0xFDF
 22057                           postinc2	equ	0xFDE
 22058                           postdec2	equ	0xFDD
 22059                           plusw2	equ	0xFDB
 22060                           fsr2h	equ	0xFDA
 22061                           fsr2l	equ	0xFD9
 22062                           status	equ	0xFD8
 22063                           
 22064 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 22065 ;; Defined at:
 22066 ;;		line 74 in file "app_device_custom_hid.c"
 22067 ;; Parameters:    Size  Location     Type
 22068 ;;		None
 22069 ;; Auto vars:     Size  Location     Type
 22070 ;;  idx             1    0        unsigned char 
 22071 ;; Return value:  Size  Location     Type
 22072 ;;                  1    wreg      void 
 22073 ;; Registers used:
 22074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22075 ;; Tracked objects:
 22076 ;;		On entry : 0/0
 22077 ;;		On exit  : 0/0
 22078 ;;		Unchanged: 0/0
 22079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22083 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22084 ;;Total ram usage:        4 bytes
 22085 ;; Hardware stack levels used:    1
 22086 ;; Hardware stack levels required when called:   12
 22087 ;; This function calls:
 22088 ;;		_USBTransferOnePacket
 22089 ;;		_api_parse
 22090 ;;		_api_prepare
 22091 ;; This function is called by:
 22092 ;;		_main
 22093 ;; This function uses a non-reentrant model
 22094 ;;
 22095                           
 22096                           	psect	text101
 22097  00667C                     __ptext101:
 22098                           	opt stack 0
 22099  00667C                     _APP_DeviceCustomHIDTasks:
 22100                           	opt stack 18
 22101                           
 22102                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22103                           
 22104                           ;incstack = 0
 22105  00667C  0E20               	movlw	32
 22106  00667E  0100               	movlb	0	; () banked
 22107  006680  61F8               	cpfslt	_USBDeviceState& (0+255),b
 22108  006682  D001               	goto	l966
 22109  006684  0012               	return	
 22110  006686                     l966:
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22114  006686  B265               	btfsc	3941,1,c	;volatile
 22115  006688  0012               	return	
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22119                           
 22120                           ; BSR set to: 0
 22121                           
 22122                           ; BSR set to: 0
 22123                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22124  00668A  0101               	movlb	1	; () banked
 22125  00668C  5180               	movf	_USBOutHandle& (0+255),w,b
 22126  00668E  1181               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22127  006690  B4D8               	btfsc	status,2,c
 22128  006692  D006               	goto	u12730
 22129                           
 22130                           ; BSR set to: 1
 22131  006694  C180  FFD9         	movff	_USBOutHandle,fsr2l
 22132  006698  C181  FFDA         	movff	_USBOutHandle+1,fsr2h
 22133  00669C  BEDF               	btfsc	indf2,7,c
 22134  00669E  0012               	return	
 22135  0066A0                     u12730:
 22136                           
 22137                           ; BSR set to: 1
 22138                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22139                           
 22140                           ; BSR set to: 1
 22141  0066A0  517E               	movf	_USBInHandle& (0+255),w,b
 22142  0066A2  117F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22143  0066A4  B4D8               	btfsc	status,2,c
 22144  0066A6  D006               	goto	u12750
 22145                           
 22146                           ; BSR set to: 1
 22147  0066A8  C17E  FFD9         	movff	_USBInHandle,fsr2l
 22148  0066AC  C17F  FFDA         	movff	_USBInHandle+1,fsr2h
 22149  0066B0  BEDF               	btfsc	indf2,7,c
 22150  0066B2  D020               	goto	l972
 22151  0066B4                     u12750:
 22152                           
 22153                           ; BSR set to: 1
 22154                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22155                           
 22156                           ; BSR set to: 1
 22157  0066B4  0E50               	movlw	_ReceivedDataBuffer& (0+255)
 22158  0066B6  0100               	movlb	0	; () banked
 22159  0066B8  6FB7               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22160  0066BA  6BB8               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22161  0066BC  C0B7  F0B2         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22162  0066C0  C0B8  F0B3         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22163  0066C4  0E80               	movlw	_ToSendDataBuffer& (0+255)
 22164  0066C6  6FB9               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22165  0066C8  6BBA               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22166  0066CA  C0B9  F0B4         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22167  0066CE  C0BA  F0B5         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22168  0066D2  ECEF  F01D         	call	_api_prepare	;wreg free
 22169                           
 22170                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22171  0066D6  0E01               	movlw	1
 22172  0066D8  6E01               	movwf	USBTransferOnePacket@dir,c
 22173  0066DA  0E80               	movlw	low _ToSendDataBuffer
 22174  0066DC  6E02               	movwf	USBTransferOnePacket@data,c
 22175  0066DE  0E03               	movlw	high _ToSendDataBuffer
 22176  0066E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 22177  0066E2  0E40               	movlw	64
 22178  0066E4  6E04               	movwf	USBTransferOnePacket@len,c
 22179  0066E6  0E01               	movlw	1
 22180  0066E8  ECF2  F025         	call	_USBTransferOnePacket
 22181  0066EC  C001  F17E         	movff	?_USBTransferOnePacket,_USBInHandle
 22182  0066F0  C002  F17F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22183  0066F4                     l972:
 22184                           
 22185                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 22186  0066F4  0E50               	movlw	low _ReceivedDataBuffer
 22187  0066F6  0100               	movlb	0	; () banked
 22188  0066F8  6F9B               	movwf	api_parse@inBuffer& (0+255),b
 22189  0066FA  0E02               	movlw	high _ReceivedDataBuffer
 22190  0066FC  6F9C               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22191  0066FE  0E40               	movlw	64
 22192  006700  6F9D               	movwf	api_parse@receivedDataLength& (0+255),b
 22193  006702  EC11  F02E         	call	_api_parse	;wreg free
 22194                           
 22195                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22196  006706  0E00               	movlw	0
 22197  006708  6E01               	movwf	USBTransferOnePacket@dir,c
 22198  00670A  0E50               	movlw	low _ReceivedDataBuffer
 22199  00670C  6E02               	movwf	USBTransferOnePacket@data,c
 22200  00670E  0E02               	movlw	high _ReceivedDataBuffer
 22201  006710  6E03               	movwf	USBTransferOnePacket@data+1,c
 22202  006712  0E40               	movlw	64
 22203  006714  6E04               	movwf	USBTransferOnePacket@len,c
 22204  006716  0E01               	movlw	1
 22205  006718  ECF2  F025         	call	_USBTransferOnePacket
 22206  00671C  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 22207  006720  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22208  006724  0012               	return	
 22209  006726                     __end_of_APP_DeviceCustomHIDTasks:
 22210                           	opt stack 0
 22211                           tosu	equ	0xFFF
 22212                           tosh	equ	0xFFE
 22213                           tosl	equ	0xFFD
 22214                           pclath	equ	0xFFA
 22215                           tblptru	equ	0xFF8
 22216                           tblptrh	equ	0xFF7
 22217                           tblptrl	equ	0xFF6
 22218                           tablat	equ	0xFF5
 22219                           prodh	equ	0xFF4
 22220                           prodl	equ	0xFF3
 22221                           intcon	equ	0xFF2
 22222                           intcon2	equ	0xFF1
 22223                           intcon3	equ	0xFF0
 22224                           indf0	equ	0xFEF
 22225                           postinc0	equ	0xFEE
 22226                           fsr0h	equ	0xFEA
 22227                           fsr0l	equ	0xFE9
 22228                           wreg	equ	0xFE8
 22229                           indf1	equ	0xFE7
 22230                           postdec1	equ	0xFE5
 22231                           plusw1	equ	0xFE3
 22232                           fsr1h	equ	0xFE2
 22233                           fsr1l	equ	0xFE1
 22234                           indf2	equ	0xFDF
 22235                           postinc2	equ	0xFDE
 22236                           postdec2	equ	0xFDD
 22237                           plusw2	equ	0xFDB
 22238                           fsr2h	equ	0xFDA
 22239                           fsr2l	equ	0xFD9
 22240                           status	equ	0xFD8
 22241                           
 22242 ;; *************** function _api_prepare *****************
 22243 ;; Defined at:
 22244 ;;		line 57 in file "api.c"
 22245 ;; Parameters:    Size  Location     Type
 22246 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22247 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22248 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22249 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22250 ;; Auto vars:     Size  Location     Type
 22251 ;;  command         1   86[BANK0 ] enum E6715
 22252 ;; Return value:  Size  Location     Type
 22253 ;;                  1    wreg      void 
 22254 ;; Registers used:
 22255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22256 ;; Tracked objects:
 22257 ;;		On entry : 0/0
 22258 ;;		On exit  : 0/0
 22259 ;;		Unchanged: 0/0
 22260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22264 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22265 ;;Total ram usage:        5 bytes
 22266 ;; Hardware stack levels used:    1
 22267 ;; Hardware stack levels required when called:   10
 22268 ;; This function calls:
 22269 ;;		__fill_buffer_find_file
 22270 ;;		__fill_buffer_get_bootloader_details
 22271 ;;		__fill_buffer_get_configuration
 22272 ;;		__fill_buffer_get_display
 22273 ;;		__fill_buffer_get_file_details
 22274 ;;		__fill_buffer_get_status
 22275 ;;		__fill_buffer_read_buffer
 22276 ;;		__fill_buffer_read_file
 22277 ;;		_memcpy
 22278 ;; This function is called by:
 22279 ;;		_main
 22280 ;;		_APP_DeviceCustomHIDTasks
 22281 ;; This function uses a non-reentrant model
 22282 ;;
 22283                           
 22284                           	psect	text102
 22285  003BDE                     __ptext102:
 22286                           	opt stack 0
 22287  003BDE                     _api_prepare:
 22288                           	opt stack 20
 22289                           
 22290                           ;api.c: 59: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22291                           
 22292                           ;incstack = 0
 22293  003BDE  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22294  003BE2  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22295  003BE6  50DF               	movf	indf2,w,c
 22296  003BE8  0100               	movlb	0	; () banked
 22297  003BEA  6FB6               	movwf	api_prepare@command& (0+255),b
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;api.c: 61: if(command>0x7F)
 22301  003BEC  0E7F               	movlw	127
 22302  003BEE  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22303  003BF0  D096               	goto	l2706
 22304  003BF2  D03C               	goto	l2698
 22305  003BF4                     
 22306                           ; BSR set to: 0
 22307                           ;api.c: 77: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22308                           
 22309                           ; BSR set to: 0
 22310  003BF4  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22311  003BF8  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22312  003BFC  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22313  003C00  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22314  003C04  ECF2  F03A         	call	__fill_buffer_get_file_details	;wreg free
 22315                           
 22316                           ;api.c: 78: break;
 22317  003C08  0012               	return	
 22318  003C0A                     
 22319                           ;api.c: 82: _fill_buffer_find_file(inBuffer, outBuffer);
 22320  003C0A  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22321  003C0E  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22322  003C12  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22323  003C16  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22324  003C1A  ECDC  F034         	call	__fill_buffer_find_file	;wreg free
 22325                           
 22326                           ;api.c: 83: break;
 22327  003C1E  0012               	return	
 22328  003C20                     
 22329                           ;api.c: 87: _fill_buffer_read_file(inBuffer, outBuffer);
 22330  003C20  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22331  003C24  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22332  003C28  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22333  003C2C  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22334  003C30  EC6F  F013         	call	__fill_buffer_read_file	;wreg free
 22335                           
 22336                           ;api.c: 88: break;
 22337  003C34  0012               	return	
 22338  003C36                     
 22339                           ;api.c: 92: _fill_buffer_read_buffer(inBuffer, outBuffer);
 22340  003C36  C0B2  F00D         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 22341  003C3A  C0B3  F00E         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 22342  003C3E  C0B4  F00F         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 22343  003C42  C0B5  F010         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 22344  003C46  EC72  F027         	call	__fill_buffer_read_buffer	;wreg free
 22345                           
 22346                           ;api.c: 93: break;
 22347  003C4A  0012               	return	
 22348  003C4C                     
 22349                           ;api.c: 96: outBuffer[0] = 0x99;
 22350  003C4C  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22351  003C50  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22352  003C54  0E99               	movlw	153
 22353  003C56  6EDF               	movwf	indf2,c
 22354                           
 22355                           ;api.c: 97: outBuffer[1] = 0x99;
 22356  003C58  0100               	movlb	0	; () banked
 22357  003C5A  EE20 F001          	lfsr	2,1
 22358  003C5E  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22359  003C60  26D9               	addwf	fsr2l,f,c
 22360  003C62  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22361  003C64  22DA               	addwfc	fsr2h,f,c
 22362  003C66  0E99               	movlw	153
 22363  003C68  6EDF               	movwf	indf2,c
 22364                           
 22365                           ;api.c: 98: }
 22366  003C6A  0012               	return	
 22367  003C6C                     l2698:
 22368                           
 22369                           ; BSR set to: 0
 22370                           
 22371                           ; BSR set to: 0
 22372  003C6C  51B6               	movf	api_prepare@command& (0+255),w,b
 22373                           
 22374                           ; Switch size 1, requested type "space"
 22375                           ; Number of cases is 4, Range of values is 128 to 131
 22376                           ; switch strategies available:
 22377                           ; Name         Instructions Cycles
 22378                           ; simple_byte           13     7 (average)
 22379                           ;	Chosen strategy is simple_byte
 22380  003C6E  0A80               	xorlw	128	; case 128
 22381  003C70  B4D8               	btfsc	status,2,c
 22382  003C72  D7C0               	goto	l2699
 22383  003C74  0A01               	xorlw	1	; case 129
 22384  003C76  B4D8               	btfsc	status,2,c
 22385  003C78  D7C8               	goto	l2701
 22386  003C7A  0A03               	xorlw	3	; case 130
 22387  003C7C  B4D8               	btfsc	status,2,c
 22388  003C7E  D7D0               	goto	l2702
 22389  003C80  0A01               	xorlw	1	; case 131
 22390  003C82  B4D8               	btfsc	status,2,c
 22391  003C84  D7D8               	goto	l2703
 22392  003C86  D7E2               	goto	l2704
 22393  003C88                     
 22394                           ; BSR set to: 0
 22395                           ;api.c: 107: _fill_buffer_get_status(outBuffer);
 22396                           
 22397                           ; BSR set to: 0
 22398  003C88  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22399  003C8C  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22400  003C90  EC9E  F02A         	call	__fill_buffer_get_status	;wreg free
 22401                           
 22402                           ;api.c: 108: break;
 22403  003C94  0012               	return	
 22404  003C96                     
 22405                           ;api.c: 112: _fill_buffer_get_display(outBuffer, 0);
 22406  003C96  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22407  003C9A  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22408  003C9E  0E00               	movlw	0
 22409  003CA0  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22410  003CA2  EC31  F031         	call	__fill_buffer_get_display	;wreg free
 22411                           
 22412                           ;api.c: 113: break;
 22413  003CA6  0012               	return	
 22414  003CA8                     
 22415                           ;api.c: 117: _fill_buffer_get_display(outBuffer, 1);
 22416  003CA8  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22417  003CAC  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22418  003CB0  0E01               	movlw	1
 22419  003CB2  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22420  003CB4  EC31  F031         	call	__fill_buffer_get_display	;wreg free
 22421                           
 22422                           ;api.c: 118: break;
 22423  003CB8  0012               	return	
 22424  003CBA                     
 22425                           ;api.c: 122: _fill_buffer_get_bootloader_details(outBuffer);
 22426  003CBA  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22427  003CBE  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22428  003CC2  EC74  F016         	call	__fill_buffer_get_bootloader_details	;wreg free
 22429                           
 22430                           ;api.c: 123: break;
 22431  003CC6  0012               	return	
 22432  003CC8                     
 22433                           ;api.c: 127: _fill_buffer_get_configuration(outBuffer);
 22434  003CC8  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22435  003CCC  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22436  003CD0  EC7C  F035         	call	__fill_buffer_get_configuration	;wreg free
 22437                           
 22438                           ;api.c: 128: break;
 22439  003CD4  0012               	return	
 22440  003CD6                     
 22441                           ;api.c: 132: memcpy(outBuffer, inBuffer, 64);
 22442  003CD6  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22443  003CDA  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22444  003CDE  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22445  003CE2  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22446  003CE6  5003               	movf	memcpy@s1,w,c
 22447  003CE8  1004               	iorwf	memcpy@s1+1,w,c
 22448  003CEA  A4D8               	btfss	status,2,c
 22449  003CEC  0E20               	movlw	32
 22450  003CEE  6E05               	movwf	memcpy@s1+2,c
 22451  003CF0  0E00               	movlw	0
 22452  003CF2  6E07               	movwf	memcpy@n+1,c
 22453  003CF4  0E40               	movlw	64
 22454  003CF6  6E06               	movwf	memcpy@n,c
 22455  003CF8  ECDD  F03C         	call	_memcpy	;wreg free
 22456                           
 22457                           ;api.c: 133: break;
 22458  003CFC  0012               	return	
 22459  003CFE                     
 22460                           ;api.c: 136: outBuffer[0] = 0x99;
 22461  003CFE  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22462  003D02  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22463  003D06  0E99               	movlw	153
 22464  003D08  6EDF               	movwf	indf2,c
 22465                           
 22466                           ;api.c: 137: outBuffer[1] = 0x99;
 22467  003D0A  0100               	movlb	0	; () banked
 22468  003D0C  EE20 F001          	lfsr	2,1
 22469  003D10  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22470  003D12  26D9               	addwf	fsr2l,f,c
 22471  003D14  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22472  003D16  22DA               	addwfc	fsr2h,f,c
 22473  003D18  0E99               	movlw	153
 22474  003D1A  6EDF               	movwf	indf2,c
 22475                           
 22476                           ;api.c: 138: }
 22477  003D1C  0012               	return	
 22478  003D1E                     l2706:
 22479                           
 22480                           ; BSR set to: 0
 22481                           
 22482                           ; BSR set to: 0
 22483  003D1E  51B6               	movf	api_prepare@command& (0+255),w,b
 22484                           
 22485                           ; Switch size 1, requested type "space"
 22486                           ; Number of cases is 6, Range of values is 16 to 32
 22487                           ; switch strategies available:
 22488                           ; Name         Instructions Cycles
 22489                           ; simple_byte           19    10 (average)
 22490                           ;	Chosen strategy is simple_byte
 22491  003D20  0A10               	xorlw	16	; case 16
 22492  003D22  B4D8               	btfsc	status,2,c
 22493  003D24  D7B1               	goto	l2707
 22494  003D26  0A01               	xorlw	1	; case 17
 22495  003D28  B4D8               	btfsc	status,2,c
 22496  003D2A  D7B5               	goto	l2709
 22497  003D2C  0A03               	xorlw	3	; case 18
 22498  003D2E  B4D8               	btfsc	status,2,c
 22499  003D30  D7BB               	goto	l2710
 22500  003D32  0A01               	xorlw	1	; case 19
 22501  003D34  B4D8               	btfsc	status,2,c
 22502  003D36  D7C1               	goto	l2711
 22503  003D38  0A07               	xorlw	7	; case 20
 22504  003D3A  B4D8               	btfsc	status,2,c
 22505  003D3C  D7C5               	goto	l2712
 22506  003D3E  0A34               	xorlw	52	; case 32
 22507  003D40  B4D8               	btfsc	status,2,c
 22508  003D42  D7C9               	goto	l2713
 22509  003D44  D7DC               	goto	l2714
 22510  003D46                     __end_of_api_prepare:
 22511                           	opt stack 0
 22512                           tosu	equ	0xFFF
 22513                           tosh	equ	0xFFE
 22514                           tosl	equ	0xFFD
 22515                           pclath	equ	0xFFA
 22516                           tblptru	equ	0xFF8
 22517                           tblptrh	equ	0xFF7
 22518                           tblptrl	equ	0xFF6
 22519                           tablat	equ	0xFF5
 22520                           prodh	equ	0xFF4
 22521                           prodl	equ	0xFF3
 22522                           intcon	equ	0xFF2
 22523                           intcon2	equ	0xFF1
 22524                           intcon3	equ	0xFF0
 22525                           indf0	equ	0xFEF
 22526                           postinc0	equ	0xFEE
 22527                           fsr0h	equ	0xFEA
 22528                           fsr0l	equ	0xFE9
 22529                           wreg	equ	0xFE8
 22530                           indf1	equ	0xFE7
 22531                           postdec1	equ	0xFE5
 22532                           plusw1	equ	0xFE3
 22533                           fsr1h	equ	0xFE2
 22534                           fsr1l	equ	0xFE1
 22535                           indf2	equ	0xFDF
 22536                           postinc2	equ	0xFDE
 22537                           postdec2	equ	0xFDD
 22538                           plusw2	equ	0xFDB
 22539                           fsr2h	equ	0xFDA
 22540                           fsr2l	equ	0xFD9
 22541                           status	equ	0xFD8
 22542                           
 22543 ;; *************** function __fill_buffer_read_file *****************
 22544 ;; Defined at:
 22545 ;;		line 393 in file "api.c"
 22546 ;; Parameters:    Size  Location     Type
 22547 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22548 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22549 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22550 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;  start           4   78[BANK0 ] unsigned long 
 22553 ;;  data_length     4   74[BANK0 ] unsigned long 
 22554 ;;  file_size       4   70[BANK0 ] unsigned long 
 22555 ;; Return value:  Size  Location     Type
 22556 ;;                  1    wreg      void 
 22557 ;; Registers used:
 22558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22559 ;; Tracked objects:
 22560 ;;		On entry : 0/0
 22561 ;;		On exit  : 0/0
 22562 ;;		Unchanged: 0/0
 22563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22564 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22565 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22566 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22567 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22568 ;;Total ram usage:       20 bytes
 22569 ;; Hardware stack levels used:    1
 22570 ;; Hardware stack levels required when called:    9
 22571 ;; This function calls:
 22572 ;;		_fat_get_file_size
 22573 ;;		_fat_read_from_file
 22574 ;; This function is called by:
 22575 ;;		_api_prepare
 22576 ;; This function uses a non-reentrant model
 22577 ;;
 22578                           
 22579                           	psect	text103
 22580  0026DE                     __ptext103:
 22581                           	opt stack 0
 22582  0026DE                     __fill_buffer_read_file:
 22583                           	opt stack 20
 22584                           
 22585                           ;api.c: 395: uint32_t start;;api.c: 396: uint32_t file_size;;api.c: 397: uint32_t data_l
      +                          ength;;api.c: 400: outBuffer[0] = DATAREQUEST_READ_FILE;
 22586                           
 22587                           ;incstack = 0
 22588  0026DE  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22589  0026E2  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22590  0026E6  0E82               	movlw	130
 22591  0026E8  6EDF               	movwf	indf2,c
 22592                           
 22593                           ;api.c: 403: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 22594  0026EA  0100               	movlb	0	; () banked
 22595  0026EC  EE20 F001          	lfsr	2,1
 22596  0026F0  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22597  0026F2  26D9               	addwf	fsr2l,f,c
 22598  0026F4  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22599  0026F6  22DA               	addwfc	fsr2h,f,c
 22600  0026F8  0EC1               	movlw	193
 22601  0026FA  6EDF               	movwf	indf2,c
 22602                           
 22603                           ; BSR set to: 0
 22604                           ;api.c: 404: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 22605  0026FC  EE20 F002          	lfsr	2,2
 22606  002700  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22607  002702  26D9               	addwf	fsr2l,f,c
 22608  002704  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22609  002706  22DA               	addwfc	fsr2h,f,c
 22610  002708  0E25               	movlw	37
 22611  00270A  6EDF               	movwf	indf2,c
 22612                           
 22613                           ; BSR set to: 0
 22614                           ;api.c: 407: outBuffer[3] = inBuffer[1];
 22615  00270C  EE20 F001          	lfsr	2,1
 22616  002710  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22617  002712  26D9               	addwf	fsr2l,f,c
 22618  002714  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22619  002716  22DA               	addwfc	fsr2h,f,c
 22620  002718  EE10 F003          	lfsr	1,3
 22621  00271C  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22622  00271E  26E1               	addwf	fsr1l,f,c
 22623  002720  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22624  002722  22E2               	addwfc	fsr1h,f,c
 22625  002724  CFDF FFE7          	movff	indf2,indf1
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;api.c: 410: outBuffer[4] = inBuffer[2];
 22629  002728  EE20 F002          	lfsr	2,2
 22630  00272C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22631  00272E  26D9               	addwf	fsr2l,f,c
 22632  002730  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22633  002732  22DA               	addwfc	fsr2h,f,c
 22634  002734  EE10 F004          	lfsr	1,4
 22635  002738  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22636  00273A  26E1               	addwf	fsr1l,f,c
 22637  00273C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22638  00273E  22E2               	addwfc	fsr1h,f,c
 22639  002740  CFDF FFE7          	movff	indf2,indf1
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;api.c: 411: outBuffer[5] = inBuffer[3];
 22643  002744  EE20 F003          	lfsr	2,3
 22644  002748  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22645  00274A  26D9               	addwf	fsr2l,f,c
 22646  00274C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22647  00274E  22DA               	addwfc	fsr2h,f,c
 22648  002750  EE10 F005          	lfsr	1,5
 22649  002754  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22650  002756  26E1               	addwf	fsr1l,f,c
 22651  002758  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22652  00275A  22E2               	addwfc	fsr1h,f,c
 22653  00275C  CFDF FFE7          	movff	indf2,indf1
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;api.c: 412: outBuffer[6] = inBuffer[4];
 22657  002760  EE20 F004          	lfsr	2,4
 22658  002764  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22659  002766  26D9               	addwf	fsr2l,f,c
 22660  002768  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22661  00276A  22DA               	addwfc	fsr2h,f,c
 22662  00276C  EE10 F006          	lfsr	1,6
 22663  002770  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22664  002772  26E1               	addwf	fsr1l,f,c
 22665  002774  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22666  002776  22E2               	addwfc	fsr1h,f,c
 22667  002778  CFDF FFE7          	movff	indf2,indf1
 22668                           
 22669                           ; BSR set to: 0
 22670                           ;api.c: 413: outBuffer[7] = inBuffer[5];
 22671  00277C  EE20 F005          	lfsr	2,5
 22672  002780  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22673  002782  26D9               	addwf	fsr2l,f,c
 22674  002784  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22675  002786  22DA               	addwfc	fsr2h,f,c
 22676  002788  EE10 F007          	lfsr	1,7
 22677  00278C  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22678  00278E  26E1               	addwf	fsr1l,f,c
 22679  002790  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22680  002792  22E2               	addwfc	fsr1h,f,c
 22681  002794  CFDF FFE7          	movff	indf2,indf1
 22682                           
 22683                           ; BSR set to: 0
 22684                           ;api.c: 416: start = inBuffer[2];
 22685  002798  EE20 F002          	lfsr	2,2
 22686  00279C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22687  00279E  26D9               	addwf	fsr2l,f,c
 22688  0027A0  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22689  0027A2  22DA               	addwfc	fsr2h,f,c
 22690  0027A4  50DF               	movf	indf2,w,c
 22691  0027A6  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22692  0027A8  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22693  0027AA  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 22694  0027AC  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 22695  0027AE  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 22696  0027B0  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 22697                           
 22698                           ; BSR set to: 0
 22699                           ;api.c: 417: start <<= 8;
 22700  0027B2  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22701  0027B6  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22702  0027BA  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22703  0027BE  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22704                           
 22705                           ; BSR set to: 0
 22706                           ;api.c: 418: start |= inBuffer[3];
 22707  0027C0  EE20 F003          	lfsr	2,3
 22708  0027C4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22709  0027C6  26D9               	addwf	fsr2l,f,c
 22710  0027C8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22711  0027CA  22DA               	addwfc	fsr2h,f,c
 22712  0027CC  50DF               	movf	indf2,w,c
 22713  0027CE  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22714  0027D0  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22715  0027D2  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;api.c: 419: start <<= 8;
 22719  0027D4  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22720  0027D8  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22721  0027DC  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22722  0027E0  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22723                           
 22724                           ; BSR set to: 0
 22725                           ;api.c: 420: start |= inBuffer[4];
 22726  0027E2  EE20 F004          	lfsr	2,4
 22727  0027E6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22728  0027E8  26D9               	addwf	fsr2l,f,c
 22729  0027EA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22730  0027EC  22DA               	addwfc	fsr2h,f,c
 22731  0027EE  50DF               	movf	indf2,w,c
 22732  0027F0  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22733  0027F2  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22734  0027F4  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22735                           
 22736                           ; BSR set to: 0
 22737                           ;api.c: 421: start <<= 8;
 22738  0027F6  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22739  0027FA  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22740  0027FE  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22741  002802  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22742                           
 22743                           ; BSR set to: 0
 22744                           ;api.c: 422: start |= inBuffer[5];
 22745  002804  EE20 F005          	lfsr	2,5
 22746  002808  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22747  00280A  26D9               	addwf	fsr2l,f,c
 22748  00280C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22749  00280E  22DA               	addwfc	fsr2h,f,c
 22750  002810  50DF               	movf	indf2,w,c
 22751  002812  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22752  002814  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22753  002816  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22754                           
 22755                           ; BSR set to: 0
 22756                           ;api.c: 425: file_size = fat_get_file_size(inBuffer[1]);
 22757  002818  EE20 F001          	lfsr	2,1
 22758  00281C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22759  00281E  26D9               	addwf	fsr2l,f,c
 22760  002820  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22761  002822  22DA               	addwfc	fsr2h,f,c
 22762  002824  50DF               	movf	indf2,w,c
 22763  002826  EC0B  F03C         	call	_fat_get_file_size
 22764  00282A  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 22765  00282E  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 22766  002832  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 22767  002836  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 22768                           
 22769                           ;api.c: 426: data_length = file_size - start;
 22770  00283A  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 22771  00283E  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 22772  002842  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 22773  002846  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 22774  00284A  0100               	movlb	0	; () banked
 22775  00284C  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 22776  00284E  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 22777  002850  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 22778  002852  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 22779  002854  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 22780  002856  0E00               	movlw	0
 22781  002858  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 22782  00285A  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 22783  00285C  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 22784  00285E  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 22785  002860  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 22786  002862  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22787  002864  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 22788  002866  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 22789  002868  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22790  00286A  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 22791  00286C  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 22792  00286E  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22793  002870  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 22794  002872  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 22795  002874  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;api.c: 427: if(data_length>54)
 22799  002876  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 22800  002878  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 22801  00287A  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 22802  00287C  E104               	bnz	u11580
 22803  00287E  0E37               	movlw	55
 22804  002880  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 22805  002882  A0D8               	btfss	status,0,c
 22806  002884  D008               	goto	l2766
 22807  002886                     u11580:
 22808                           
 22809                           ; BSR set to: 0
 22810                           ;api.c: 428: {;api.c: 430: data_length = 54;
 22811  002886  0E36               	movlw	54
 22812  002888  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22813  00288A  0E00               	movlw	0
 22814  00288C  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22815  00288E  0E00               	movlw	0
 22816  002890  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22817  002892  0E00               	movlw	0
 22818  002894  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22819  002896                     l2766:
 22820                           
 22821                           ; BSR set to: 0
 22822                           ;api.c: 431: };api.c: 434: outBuffer[8] = (uint8_t) data_length;
 22823                           
 22824                           ; BSR set to: 0
 22825  002896  EE20 F008          	lfsr	2,8
 22826  00289A  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22827  00289C  26D9               	addwf	fsr2l,f,c
 22828  00289E  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22829  0028A0  22DA               	addwfc	fsr2h,f,c
 22830  0028A2  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 22831                           
 22832                           ; BSR set to: 0
 22833                           ;api.c: 437: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 22834  0028A6  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 22835  0028AA  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 22836  0028AE  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 22837  0028B2  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 22838  0028B6  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 22839  0028BA  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 22840  0028BE  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 22841  0028C2  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 22842  0028C6  0E0A               	movlw	10
 22843  0028C8  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22844  0028CA  6F76               	movwf	fat_read_from_file@data& (0+255),b
 22845  0028CC  0E00               	movlw	0
 22846  0028CE  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22847  0028D0  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 22848  0028D2  EE20 F001          	lfsr	2,1
 22849  0028D6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22850  0028D8  26D9               	addwf	fsr2l,f,c
 22851  0028DA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22852  0028DC  22DA               	addwfc	fsr2h,f,c
 22853  0028DE  50DF               	movf	indf2,w,c
 22854  0028E0  ECED  F027         	call	_fat_read_from_file
 22855  0028E4  0100               	movlb	0	; () banked
 22856  0028E6  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22857  0028E8  EE20 F009          	lfsr	2,9
 22858  0028EC  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22859  0028EE  26D9               	addwf	fsr2l,f,c
 22860  0028F0  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22861  0028F2  22DA               	addwfc	fsr2h,f,c
 22862  0028F4  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 22863                           
 22864                           ; BSR set to: 0
 22865  0028F8  0012               	return		;funcret
 22866  0028FA                     __end_of__fill_buffer_read_file:
 22867                           	opt stack 0
 22868                           tosu	equ	0xFFF
 22869                           tosh	equ	0xFFE
 22870                           tosl	equ	0xFFD
 22871                           pclath	equ	0xFFA
 22872                           tblptru	equ	0xFF8
 22873                           tblptrh	equ	0xFF7
 22874                           tblptrl	equ	0xFF6
 22875                           tablat	equ	0xFF5
 22876                           prodh	equ	0xFF4
 22877                           prodl	equ	0xFF3
 22878                           intcon	equ	0xFF2
 22879                           intcon2	equ	0xFF1
 22880                           intcon3	equ	0xFF0
 22881                           indf0	equ	0xFEF
 22882                           postinc0	equ	0xFEE
 22883                           fsr0h	equ	0xFEA
 22884                           fsr0l	equ	0xFE9
 22885                           wreg	equ	0xFE8
 22886                           indf1	equ	0xFE7
 22887                           postdec1	equ	0xFE5
 22888                           plusw1	equ	0xFE3
 22889                           fsr1h	equ	0xFE2
 22890                           fsr1l	equ	0xFE1
 22891                           indf2	equ	0xFDF
 22892                           postinc2	equ	0xFDE
 22893                           postdec2	equ	0xFDD
 22894                           plusw2	equ	0xFDB
 22895                           fsr2h	equ	0xFDA
 22896                           fsr2l	equ	0xFD9
 22897                           status	equ	0xFD8
 22898                           
 22899 ;; *************** function _fat_read_from_file *****************
 22900 ;; Defined at:
 22901 ;;		line 747 in file "fat16.c"
 22902 ;; Parameters:    Size  Location     Type
 22903 ;;  file_number     1    wreg     unsigned char 
 22904 ;;  start_byte      4   14[BANK0 ] unsigned long 
 22905 ;;  length          4   18[BANK0 ] unsigned long 
 22906 ;;  data            2   22[BANK0 ] PTR unsigned char 
 22907 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22908 ;; Auto vars:     Size  Location     Type
 22909 ;;  file_number     1   24[BANK0 ] unsigned char 
 22910 ;;  root           32   30[BANK0 ] struct .
 22911 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 22912 ;;  cluster         2   25[BANK0 ] unsigned int 
 22913 ;;  return_code     1   29[BANK0 ] unsigned char 
 22914 ;; Return value:  Size  Location     Type
 22915 ;;                  1    wreg      unsigned char 
 22916 ;; Registers used:
 22917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22918 ;; Tracked objects:
 22919 ;;		On entry : 0/0
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22923 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22924 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22926 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22927 ;;Total ram usage:       52 bytes
 22928 ;; Hardware stack levels used:    1
 22929 ;; Hardware stack levels required when called:    8
 22930 ;; This function calls:
 22931 ;;		_fat_get_file_information
 22932 ;;		_fat_read_from_file_fast
 22933 ;; This function is called by:
 22934 ;;		__fill_buffer_read_file
 22935 ;; This function uses a non-reentrant model
 22936 ;;
 22937                           
 22938                           	psect	text104
 22939  004FDA                     __ptext104:
 22940                           	opt stack 0
 22941  004FDA                     _fat_read_from_file:
 22942                           	opt stack 20
 22943                           
 22944                           ; BSR set to: 0
 22945                           ;incstack = 0
 22946                           ;fat_read_from_file@file_number stored from wreg
 22947  004FDA  0100               	movlb	0	; () banked
 22948  004FDC  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 22949                           
 22950                           ;fat16.c: 749: rootEntry_t root;;fat16.c: 750: uint16_t cluster;;fat16.c: 751: uint16_t 
      +                          cluster_number;;fat16.c: 752: uint8_t return_code;;fat16.c: 755: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 22951  004FDE  0E7E               	movlw	low fat_read_from_file@root
 22952  004FE0  6E30               	movwf	fat_get_file_information@data,c
 22953  004FE2  0E00               	movlw	high fat_read_from_file@root
 22954  004FE4  6E31               	movwf	fat_get_file_information@data+1,c
 22955  004FE6  0100               	movlb	0	; () banked
 22956  004FE8  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 22957  004FEA  EC2B  F03B         	call	_fat_get_file_information
 22958  004FEE  0100               	movlb	0	; () banked
 22959  004FF0  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;fat16.c: 756: if(return_code!=0x00)
 22963  004FF2  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22964  004FF4  B4D8               	btfsc	status,2,c
 22965  004FF6  D002               	goto	l2083
 22966                           
 22967                           ; BSR set to: 0
 22968                           ;fat16.c: 757: {;fat16.c: 759: return return_code;
 22969  004FF8  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22970                           
 22971                           ; BSR set to: 0
 22972  004FFA  0012               	return	
 22973  004FFC                     l2083:
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;fat16.c: 760: };fat16.c: 763: if(start_byte > root.fileSize)
 22977                           
 22978                           ; BSR set to: 0
 22979  004FFC  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 22980  004FFE  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22981  005000  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22982  005002  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22983  005004  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22984  005006  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22985  005008  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 22986  00500A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 22987  00500C  B0D8               	btfsc	status,0,c
 22988  00500E  D002               	goto	l2085
 22989                           
 22990                           ; BSR set to: 0
 22991                           ;fat16.c: 764: {;fat16.c: 766: return 0xFF;
 22992  005010  0EFF               	movlw	255
 22993                           
 22994                           ; BSR set to: 0
 22995  005012  0012               	return	
 22996  005014                     l2085:
 22997                           
 22998                           ; BSR set to: 0
 22999                           ;fat16.c: 767: };fat16.c: 769: if(start_byte+length > root.fileSize)
 23000                           
 23001                           ; BSR set to: 0
 23002  005014  5172               	movf	fat_read_from_file@length& (0+255),w,b
 23003  005016  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 23004  005018  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 23005  00501A  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 23006  00501C  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23007  00501E  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 23008  005020  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 23009  005022  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23010  005024  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 23011  005026  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 23012  005028  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23013  00502A  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 23014  00502C  505C               	movf	??_fat_read_from_file,w,c
 23015  00502E  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23016  005030  505D               	movf	??_fat_read_from_file+1,w,c
 23017  005032  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23018  005034  505E               	movf	??_fat_read_from_file+2,w,c
 23019  005036  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23020  005038  505F               	movf	??_fat_read_from_file+3,w,c
 23021  00503A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23022  00503C  B0D8               	btfsc	status,0,c
 23023  00503E  D01D               	goto	l2086
 23024                           
 23025                           ; BSR set to: 0
 23026                           ;fat16.c: 770: {;fat16.c: 772: length = root.fileSize - start_byte;
 23027  005040  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 23028  005044  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 23029  005048  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 23030  00504C  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 23031  005050  1E5C               	comf	??_fat_read_from_file,f,c
 23032  005052  1E5D               	comf	??_fat_read_from_file+1,f,c
 23033  005054  1E5E               	comf	??_fat_read_from_file+2,f,c
 23034  005056  1E5F               	comf	??_fat_read_from_file+3,f,c
 23035  005058  2A5C               	incf	??_fat_read_from_file,f,c
 23036  00505A  0E00               	movlw	0
 23037  00505C  225D               	addwfc	??_fat_read_from_file+1,f,c
 23038  00505E  225E               	addwfc	??_fat_read_from_file+2,f,c
 23039  005060  225F               	addwfc	??_fat_read_from_file+3,f,c
 23040  005062  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 23041  005064  245C               	addwf	??_fat_read_from_file,w,c
 23042  005066  6F72               	movwf	fat_read_from_file@length& (0+255),b
 23043  005068  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 23044  00506A  205D               	addwfc	??_fat_read_from_file+1,w,c
 23045  00506C  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 23046  00506E  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 23047  005070  205E               	addwfc	??_fat_read_from_file+2,w,c
 23048  005072  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 23049  005074  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 23050  005076  205F               	addwfc	??_fat_read_from_file+3,w,c
 23051  005078  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 23052  00507A                     l2086:
 23053                           
 23054                           ; BSR set to: 0
 23055                           ;fat16.c: 773: };fat16.c: 776: cluster = root.firstCluster;
 23056                           
 23057                           ; BSR set to: 0
 23058  00507A  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 23059  00507E  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 23060                           
 23061                           ; BSR set to: 0
 23062                           ;fat16.c: 777: cluster_number = 0;
 23063  005082  0E00               	movlw	0
 23064  005084  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 23065  005086  0E00               	movlw	0
 23066  005088  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 23067                           
 23068                           ; BSR set to: 0
 23069                           ;fat16.c: 780: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 23070  00508A  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 23071  00508E  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 23072  005092  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 23073  005096  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 23074  00509A  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 23075  00509E  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 23076  0050A2  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 23077  0050A6  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 23078  0050AA  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 23079  0050AE  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 23080  0050B2  0E79               	movlw	low fat_read_from_file@cluster
 23081  0050B4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 23082  0050B6  0E00               	movlw	high fat_read_from_file@cluster
 23083  0050B8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 23084  0050BA  0E7B               	movlw	low fat_read_from_file@cluster_number
 23085  0050BC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 23086  0050BE  0E00               	movlw	high fat_read_from_file@cluster_number
 23087  0050C0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 23088  0050C2  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
 23089  0050C6  0012               	return	
 23090  0050C8                     __end_of_fat_read_from_file:
 23091                           	opt stack 0
 23092                           tosu	equ	0xFFF
 23093                           tosh	equ	0xFFE
 23094                           tosl	equ	0xFFD
 23095                           pclath	equ	0xFFA
 23096                           tblptru	equ	0xFF8
 23097                           tblptrh	equ	0xFF7
 23098                           tblptrl	equ	0xFF6
 23099                           tablat	equ	0xFF5
 23100                           prodh	equ	0xFF4
 23101                           prodl	equ	0xFF3
 23102                           intcon	equ	0xFF2
 23103                           intcon2	equ	0xFF1
 23104                           intcon3	equ	0xFF0
 23105                           indf0	equ	0xFEF
 23106                           postinc0	equ	0xFEE
 23107                           fsr0h	equ	0xFEA
 23108                           fsr0l	equ	0xFE9
 23109                           wreg	equ	0xFE8
 23110                           indf1	equ	0xFE7
 23111                           postdec1	equ	0xFE5
 23112                           plusw1	equ	0xFE3
 23113                           fsr1h	equ	0xFE2
 23114                           fsr1l	equ	0xFE1
 23115                           indf2	equ	0xFDF
 23116                           postinc2	equ	0xFDE
 23117                           postdec2	equ	0xFDD
 23118                           plusw2	equ	0xFDB
 23119                           fsr2h	equ	0xFDA
 23120                           fsr2l	equ	0xFD9
 23121                           status	equ	0xFD8
 23122                           
 23123 ;; *************** function _fat_read_from_file_fast *****************
 23124 ;; Defined at:
 23125 ;;		line 783 in file "fat16.c"
 23126 ;; Parameters:    Size  Location     Type
 23127 ;;  start_byte      4   65[COMRAM] unsigned long 
 23128 ;;  length          4   69[COMRAM] unsigned long 
 23129 ;;  data            2   73[COMRAM] PTR unsigned char 
 23130 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 23131 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23132 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23133 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23134 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23135 ;; Auto vars:     Size  Location     Type
 23136 ;;  position        4   10[BANK0 ] unsigned long 
 23137 ;;  read_length     2    8[BANK0 ] unsigned int 
 23138 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23139 ;;  offset          2    4[BANK0 ] unsigned int 
 23140 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23141 ;;  sector          2    0[BANK0 ] unsigned int 
 23142 ;; Return value:  Size  Location     Type
 23143 ;;                  1    wreg      unsigned char 
 23144 ;; Registers used:
 23145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23146 ;; Tracked objects:
 23147 ;;		On entry : 0/0
 23148 ;;		On exit  : 0/0
 23149 ;;		Unchanged: 0/0
 23150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23151 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23152 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23153 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23154 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23155 ;;Total ram usage:       40 bytes
 23156 ;; Hardware stack levels used:    1
 23157 ;; Hardware stack levels required when called:    7
 23158 ;; This function calls:
 23159 ;;		__data_sector_from_cluster
 23160 ;;		__find_nth_cluster
 23161 ;;		__read_fat
 23162 ;;		_flash_partial_read
 23163 ;; This function is called by:
 23164 ;;		_fat_read_from_file
 23165 ;;		__bootloader_verify_file
 23166 ;;		__bootloader_program
 23167 ;; This function uses a non-reentrant model
 23168 ;;
 23169                           
 23170                           	psect	text105
 23171  0024B8                     __ptext105:
 23172                           	opt stack 0
 23173  0024B8                     _fat_read_from_file_fast:
 23174                           	opt stack 21
 23175                           
 23176                           ;fat16.c: 785: uint32_t position;;fat16.c: 786: uint16_t offset;;fat16.c: 787: uint16_t 
      +                          sector;;fat16.c: 788: uint16_t read_length;;fat16.c: 789: uint16_t working_cluster;;fat1
      +                          6.c: 790: uint16_t needed_cluster;;fat16.c: 793: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23177                           
 23178                           ;incstack = 0
 23179  0024B8  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23180  0024BC  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23181  0024C0  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23182  0024C4  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23183  0024C8  0E0A               	movlw	10
 23184  0024CA  D005               	goto	u10160
 23185  0024CC                     u10165:
 23186  0024CC  90D8               	bcf	status,0,c
 23187  0024CE  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23188  0024D0  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23189  0024D2  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23190  0024D4  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23191  0024D6                     u10160:
 23192  0024D6  2EE8               	decfsz	wreg,f,c
 23193  0024D8  D7F9               	goto	u10165
 23194  0024DA  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23195  0024DE  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23196                           
 23197                           ;fat16.c: 796: if((*cluster_number) > needed_cluster)
 23198  0024E2  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23199  0024E6  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23200  0024EA  50DE               	movf	postinc2,w,c
 23201  0024EC  0100               	movlb	0	; () banked
 23202  0024EE  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23203  0024F0  50DE               	movf	postinc2,w,c
 23204  0024F2  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23205  0024F4  B0D8               	btfsc	status,0,c
 23206  0024F6  D002               	goto	l2089
 23207                           
 23208                           ; BSR set to: 0
 23209                           ;fat16.c: 797: {;fat16.c: 798: return 0xFF;
 23210  0024F8  0EFF               	movlw	255
 23211                           
 23212                           ; BSR set to: 0
 23213  0024FA  0012               	return	
 23214  0024FC                     l2089:
 23215                           
 23216                           ; BSR set to: 0
 23217                           ;fat16.c: 799: };fat16.c: 802: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23218                           
 23219                           ; BSR set to: 0
 23220  0024FC  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23221  002500  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23222  002504  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23223  002508  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23224  00250C  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23225  002510  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23226  002514  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23227  002518  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23228  00251C  1E50               	comf	??_fat_read_from_file_fast,f,c
 23229  00251E  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23230  002520  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23231  002522  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23232  002524  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23233  002526  2450               	addwf	??_fat_read_from_file_fast,w,c
 23234  002528  6E3A               	movwf	__find_nth_cluster@n,c
 23235  00252A  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23236  00252C  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23237  00252E  6E3B               	movwf	__find_nth_cluster@n+1,c
 23238  002530  ECCB  F035         	call	__find_nth_cluster	;wreg free
 23239  002534  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23240  002538  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23241  00253C  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23242  002540  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23243                           
 23244                           ;fat16.c: 805: (*cluster_number) = needed_cluster;
 23245  002544  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23246  002548  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23247  00254C  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23248  002550  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23249                           
 23250                           ;fat16.c: 809: working_cluster = (*cluster);
 23251  002554  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23252  002558  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23253  00255C  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23254  002560  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23255                           
 23256                           ;fat16.c: 812: position = (needed_cluster << 9);
 23257  002564  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23258  002568  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23259  00256C  0E09               	movlw	9
 23260  00256E                     u10185:
 23261  00256E  90D8               	bcf	status,0,c
 23262  002570  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23263  002572  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23264  002574  2EE8               	decfsz	wreg,f,c
 23265  002576  D7FB               	goto	u10185
 23266  002578  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23267  00257C  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23268  002580  0100               	movlb	0	; () banked
 23269  002582  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23270  002584  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23271                           
 23272                           ; BSR set to: 0
 23273                           ;fat16.c: 813: offset = start_byte - position;
 23274  002586  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23275  00258A  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23276  00258E  1E50               	comf	??_fat_read_from_file_fast,f,c
 23277  002590  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23278  002592  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23279  002594  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23280  002596  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23281  002598  2450               	addwf	??_fat_read_from_file_fast,w,c
 23282  00259A  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23283  00259C  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23284  00259E  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23285  0025A0  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;fat16.c: 816: position = 0;
 23289  0025A2  0E00               	movlw	0
 23290  0025A4  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23291  0025A6  0E00               	movlw	0
 23292  0025A8  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23293  0025AA  0E00               	movlw	0
 23294  0025AC  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23295  0025AE  0E00               	movlw	0
 23296  0025B0  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23297                           
 23298                           ;fat16.c: 817: while(position < length)
 23299  0025B2  D089               	goto	l2091
 23300  0025B4                     
 23301                           ; BSR set to: 0
 23302                           ;fat16.c: 818: {;fat16.c: 820: if(offset==512)
 23303                           
 23304                           ; BSR set to: 0
 23305  0025B4  0E02               	movlw	2
 23306  0025B6  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23307  0025B8  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23308  0025BA  A4D8               	btfss	status,2,c
 23309  0025BC  D00F               	goto	l2093
 23310                           
 23311                           ; BSR set to: 0
 23312                           ;fat16.c: 821: {;fat16.c: 823: working_cluster = _read_fat(working_cluster);
 23313  0025BE  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23314  0025C2  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23315  0025C6  EC15  F040         	call	__read_fat	;wreg free
 23316  0025CA  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23317  0025CE  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23318                           
 23319                           ;fat16.c: 824: offset = 0;
 23320  0025D2  0E00               	movlw	0
 23321  0025D4  0100               	movlb	0	; () banked
 23322  0025D6  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23323  0025D8  0E00               	movlw	0
 23324  0025DA  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23325  0025DC                     l2093:
 23326                           
 23327                           ; BSR set to: 0
 23328                           ;fat16.c: 825: };fat16.c: 828: sector = _data_sector_from_cluster(working_cluster);
 23329                           
 23330                           ; BSR set to: 0
 23331  0025DC  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23332  0025E0  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23333  0025E4  EC74  F047         	call	__data_sector_from_cluster	;wreg free
 23334  0025E8  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23335  0025EC  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23336                           
 23337                           ;fat16.c: 831: read_length = 512 - offset;
 23338  0025F0  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23339  0025F4  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23340  0025F8  1E50               	comf	??_fat_read_from_file_fast,f,c
 23341  0025FA  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23342  0025FC  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23343  0025FE  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23344  002600  0E00               	movlw	0
 23345  002602  2450               	addwf	??_fat_read_from_file_fast,w,c
 23346  002604  0100               	movlb	0	; () banked
 23347  002606  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23348  002608  0E02               	movlw	2
 23349  00260A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23350  00260C  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23351                           
 23352                           ; BSR set to: 0
 23353                           ;fat16.c: 832: if(read_length > (length-position))
 23354  00260E  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23355  002610  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23356  002612  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23357  002614  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23358  002616  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23359  002618  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23360  00261A  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23361  00261E  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23362  002622  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23363  002626  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23364  00262A  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23365  00262C  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23366  00262E  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23367  002630  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23368  002632  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23369  002634  0E00               	movlw	0
 23370  002636  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23371  002638  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23372  00263A  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23373  00263C  5046               	movf	fat_read_from_file_fast@length,w,c
 23374  00263E  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23375  002640  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23376  002642  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23377  002644  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23378  002646  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23379  002648  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23380  00264A  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23381  00264C  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23382  00264E  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23383  002650  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23384  002652  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23385  002654  5050               	movf	??_fat_read_from_file_fast,w,c
 23386  002656  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23387  002658  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23388  00265A  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23389  00265C  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23390  00265E  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23391  002660  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23392  002662  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23393  002664  B0D8               	btfsc	status,0,c
 23394  002666  D00E               	goto	l2094
 23395                           
 23396                           ; BSR set to: 0
 23397                           ;fat16.c: 833: {;fat16.c: 835: read_length = length - position;
 23398  002668  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23399  00266C  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23400  002670  1E50               	comf	??_fat_read_from_file_fast,f,c
 23401  002672  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23402  002674  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23403  002676  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23404  002678  5046               	movf	fat_read_from_file_fast@length,w,c
 23405  00267A  2450               	addwf	??_fat_read_from_file_fast,w,c
 23406  00267C  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23407  00267E  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23408  002680  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23409  002682  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23410  002684                     l2094:
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;fat16.c: 836: };fat16.c: 839: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23414                           
 23415                           ; BSR set to: 0
 23416  002684  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23417  002688  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23418  00268C  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23419  002690  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23420  002694  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23421  002698  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23422  00269C  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23423  00269E  244A               	addwf	fat_read_from_file_fast@data,w,c
 23424  0026A0  6E2E               	movwf	flash_partial_read@data,c
 23425  0026A2  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23426  0026A4  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23427  0026A6  6E2F               	movwf	flash_partial_read@data+1,c
 23428  0026A8  EC58  F044         	call	_flash_partial_read	;wreg free
 23429                           
 23430                           ;fat16.c: 842: position += read_length;
 23431  0026AC  0100               	movlb	0	; () banked
 23432  0026AE  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23433  0026B0  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23434  0026B2  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23435  0026B4  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23436  0026B6  0E00               	movlw	0
 23437  0026B8  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23438  0026BA  0E00               	movlw	0
 23439  0026BC  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23440                           
 23441                           ; BSR set to: 0
 23442                           ;fat16.c: 843: offset += read_length;
 23443  0026BE  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23444  0026C0  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23445  0026C2  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23446  0026C4  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23447  0026C6                     l2091:
 23448                           
 23449                           ; BSR set to: 0
 23450                           
 23451                           ; BSR set to: 0
 23452  0026C6  5046               	movf	fat_read_from_file_fast@length,w,c
 23453  0026C8  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23454  0026CA  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23455  0026CC  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23456  0026CE  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23457  0026D0  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23458  0026D2  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23459  0026D4  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23460  0026D6  A0D8               	btfss	status,0,c
 23461  0026D8  D76D               	goto	l2092
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;fat16.c: 844: };fat16.c: 847: return 0x00;
 23465                           
 23466                           ; BSR set to: 0
 23467  0026DA  0E00               	movlw	0
 23468  0026DC  0012               	return	
 23469  0026DE                     __end_of_fat_read_from_file_fast:
 23470                           	opt stack 0
 23471                           tosu	equ	0xFFF
 23472                           tosh	equ	0xFFE
 23473                           tosl	equ	0xFFD
 23474                           pclath	equ	0xFFA
 23475                           tblptru	equ	0xFF8
 23476                           tblptrh	equ	0xFF7
 23477                           tblptrl	equ	0xFF6
 23478                           tablat	equ	0xFF5
 23479                           prodh	equ	0xFF4
 23480                           prodl	equ	0xFF3
 23481                           intcon	equ	0xFF2
 23482                           intcon2	equ	0xFF1
 23483                           intcon3	equ	0xFF0
 23484                           indf0	equ	0xFEF
 23485                           postinc0	equ	0xFEE
 23486                           fsr0h	equ	0xFEA
 23487                           fsr0l	equ	0xFE9
 23488                           wreg	equ	0xFE8
 23489                           indf1	equ	0xFE7
 23490                           postdec1	equ	0xFE5
 23491                           plusw1	equ	0xFE3
 23492                           fsr1h	equ	0xFE2
 23493                           fsr1l	equ	0xFE1
 23494                           indf2	equ	0xFDF
 23495                           postinc2	equ	0xFDE
 23496                           postdec2	equ	0xFDD
 23497                           plusw2	equ	0xFDB
 23498                           fsr2h	equ	0xFDA
 23499                           fsr2l	equ	0xFD9
 23500                           status	equ	0xFD8
 23501                           
 23502 ;; *************** function __fill_buffer_read_buffer *****************
 23503 ;; Defined at:
 23504 ;;		line 440 in file "api.c"
 23505 ;; Parameters:    Size  Location     Type
 23506 ;;  inBuffer        2   12[COMRAM] PTR unsigned char 
 23507 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23508 ;;  outBuffer       2   14[COMRAM] PTR unsigned char 
 23509 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23510 ;; Auto vars:     Size  Location     Type
 23511 ;;  data_length     2   20[COMRAM] unsigned int 
 23512 ;;  start           2   18[COMRAM] unsigned int 
 23513 ;; Return value:  Size  Location     Type
 23514 ;;                  1    wreg      void 
 23515 ;; Registers used:
 23516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23517 ;; Tracked objects:
 23518 ;;		On entry : 0/0
 23519 ;;		On exit  : 0/0
 23520 ;;		Unchanged: 0/0
 23521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23523 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23525 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23526 ;;Total ram usage:       10 bytes
 23527 ;; Hardware stack levels used:    1
 23528 ;; Hardware stack levels required when called:    2
 23529 ;; This function calls:
 23530 ;;		_fat_read_from_buffer
 23531 ;; This function is called by:
 23532 ;;		_api_prepare
 23533 ;; This function uses a non-reentrant model
 23534 ;;
 23535                           
 23536                           	psect	text106
 23537  004EE4                     __ptext106:
 23538                           	opt stack 0
 23539  004EE4                     __fill_buffer_read_buffer:
 23540                           	opt stack 27
 23541                           
 23542                           ;api.c: 442: uint16_t start;;api.c: 443: uint16_t data_length;;api.c: 446: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 23543                           
 23544                           ; BSR set to: 0
 23545                           ;incstack = 0
 23546  004EE4  C00F  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 23547  004EE8  C010  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 23548  004EEC  0E83               	movlw	131
 23549  004EEE  6EDF               	movwf	indf2,c
 23550                           
 23551                           ;api.c: 449: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23552  004EF0  EE20 F001          	lfsr	2,1
 23553  004EF4  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23554  004EF6  26D9               	addwf	fsr2l,f,c
 23555  004EF8  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23556  004EFA  22DA               	addwfc	fsr2h,f,c
 23557  004EFC  0EC1               	movlw	193
 23558  004EFE  6EDF               	movwf	indf2,c
 23559                           
 23560                           ;api.c: 450: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23561  004F00  EE20 F002          	lfsr	2,2
 23562  004F04  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23563  004F06  26D9               	addwf	fsr2l,f,c
 23564  004F08  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23565  004F0A  22DA               	addwfc	fsr2h,f,c
 23566  004F0C  0E25               	movlw	37
 23567  004F0E  6EDF               	movwf	indf2,c
 23568                           
 23569                           ;api.c: 453: outBuffer[3] = inBuffer[1];
 23570  004F10  EE20 F001          	lfsr	2,1
 23571  004F14  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23572  004F16  26D9               	addwf	fsr2l,f,c
 23573  004F18  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23574  004F1A  22DA               	addwfc	fsr2h,f,c
 23575  004F1C  EE10 F003          	lfsr	1,3
 23576  004F20  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23577  004F22  26E1               	addwf	fsr1l,f,c
 23578  004F24  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23579  004F26  22E2               	addwfc	fsr1h,f,c
 23580  004F28  CFDF FFE7          	movff	indf2,indf1
 23581                           
 23582                           ;api.c: 454: outBuffer[4] = inBuffer[2];
 23583  004F2C  EE20 F002          	lfsr	2,2
 23584  004F30  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23585  004F32  26D9               	addwf	fsr2l,f,c
 23586  004F34  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23587  004F36  22DA               	addwfc	fsr2h,f,c
 23588  004F38  EE10 F004          	lfsr	1,4
 23589  004F3C  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23590  004F3E  26E1               	addwf	fsr1l,f,c
 23591  004F40  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23592  004F42  22E2               	addwfc	fsr1h,f,c
 23593  004F44  CFDF FFE7          	movff	indf2,indf1
 23594                           
 23595                           ;api.c: 457: start = inBuffer[1];
 23596  004F48  EE20 F001          	lfsr	2,1
 23597  004F4C  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23598  004F4E  26D9               	addwf	fsr2l,f,c
 23599  004F50  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23600  004F52  22DA               	addwfc	fsr2h,f,c
 23601  004F54  50DF               	movf	indf2,w,c
 23602  004F56  6E11               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23603  004F58  5011               	movf	??__fill_buffer_read_buffer,w,c
 23604  004F5A  6E13               	movwf	__fill_buffer_read_buffer@start,c
 23605  004F5C  6A14               	clrf	__fill_buffer_read_buffer@start+1,c
 23606                           
 23607                           ;api.c: 458: start <<= 8;
 23608  004F5E  5013               	movf	__fill_buffer_read_buffer@start,w,c
 23609  004F60  6E14               	movwf	__fill_buffer_read_buffer@start+1,c
 23610  004F62  6A13               	clrf	__fill_buffer_read_buffer@start,c
 23611                           
 23612                           ;api.c: 459: start |= inBuffer[2];
 23613  004F64  EE20 F002          	lfsr	2,2
 23614  004F68  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23615  004F6A  26D9               	addwf	fsr2l,f,c
 23616  004F6C  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23617  004F6E  22DA               	addwfc	fsr2h,f,c
 23618  004F70  50DF               	movf	indf2,w,c
 23619  004F72  6E11               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23620  004F74  5011               	movf	??__fill_buffer_read_buffer,w,c
 23621  004F76  1213               	iorwf	__fill_buffer_read_buffer@start,f,c
 23622                           
 23623                           ;api.c: 462: data_length = 512 - start;
 23624  004F78  C013  F011         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 23625  004F7C  C014  F012         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 23626  004F80  1E11               	comf	??__fill_buffer_read_buffer,f,c
 23627  004F82  1E12               	comf	??__fill_buffer_read_buffer+1,f,c
 23628  004F84  4A11               	infsnz	??__fill_buffer_read_buffer,f,c
 23629  004F86  2A12               	incf	??__fill_buffer_read_buffer+1,f,c
 23630  004F88  0E00               	movlw	0
 23631  004F8A  2411               	addwf	??__fill_buffer_read_buffer,w,c
 23632  004F8C  6E15               	movwf	__fill_buffer_read_buffer@data_length,c
 23633  004F8E  0E02               	movlw	2
 23634  004F90  2012               	addwfc	??__fill_buffer_read_buffer+1,w,c
 23635  004F92  6E16               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23636                           
 23637                           ;api.c: 463: if(data_length>54)
 23638  004F94  5016               	movf	__fill_buffer_read_buffer@data_length+1,w,c
 23639  004F96  E104               	bnz	u11590
 23640  004F98  0E37               	movlw	55
 23641  004F9A  5C15               	subwf	__fill_buffer_read_buffer@data_length,w,c
 23642  004F9C  A0D8               	btfss	status,0,c
 23643  004F9E  D004               	goto	l2770
 23644  004FA0                     u11590:
 23645                           
 23646                           ;api.c: 464: {;api.c: 466: data_length = 58;
 23647  004FA0  0E00               	movlw	0
 23648  004FA2  6E16               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23649  004FA4  0E3A               	movlw	58
 23650  004FA6  6E15               	movwf	__fill_buffer_read_buffer@data_length,c
 23651  004FA8                     l2770:
 23652                           
 23653                           ;api.c: 467: };api.c: 470: outBuffer[5] = (uint8_t) data_length;
 23654  004FA8  EE20 F005          	lfsr	2,5
 23655  004FAC  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23656  004FAE  26D9               	addwf	fsr2l,f,c
 23657  004FB0  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23658  004FB2  22DA               	addwfc	fsr2h,f,c
 23659  004FB4  C015  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 23660                           
 23661                           ;api.c: 473: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 23662  004FB8  C013  F007         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 23663  004FBC  C014  F008         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 23664  004FC0  C015  F009         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 23665  004FC4  C016  F00A         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 23666  004FC8  0E06               	movlw	6
 23667  004FCA  240F               	addwf	__fill_buffer_read_buffer@outBuffer,w,c
 23668  004FCC  6E0B               	movwf	fat_read_from_buffer@data,c
 23669  004FCE  0E00               	movlw	0
 23670  004FD0  2010               	addwfc	__fill_buffer_read_buffer@outBuffer+1,w,c
 23671  004FD2  6E0C               	movwf	fat_read_from_buffer@data+1,c
 23672  004FD4  EC63  F046         	call	_fat_read_from_buffer	;wreg free
 23673  004FD8  0012               	return		;funcret
 23674  004FDA                     __end_of__fill_buffer_read_buffer:
 23675                           	opt stack 0
 23676                           tosu	equ	0xFFF
 23677                           tosh	equ	0xFFE
 23678                           tosl	equ	0xFFD
 23679                           pclath	equ	0xFFA
 23680                           tblptru	equ	0xFF8
 23681                           tblptrh	equ	0xFF7
 23682                           tblptrl	equ	0xFF6
 23683                           tablat	equ	0xFF5
 23684                           prodh	equ	0xFF4
 23685                           prodl	equ	0xFF3
 23686                           intcon	equ	0xFF2
 23687                           intcon2	equ	0xFF1
 23688                           intcon3	equ	0xFF0
 23689                           indf0	equ	0xFEF
 23690                           postinc0	equ	0xFEE
 23691                           fsr0h	equ	0xFEA
 23692                           fsr0l	equ	0xFE9
 23693                           wreg	equ	0xFE8
 23694                           indf1	equ	0xFE7
 23695                           postdec1	equ	0xFE5
 23696                           plusw1	equ	0xFE3
 23697                           fsr1h	equ	0xFE2
 23698                           fsr1l	equ	0xFE1
 23699                           indf2	equ	0xFDF
 23700                           postinc2	equ	0xFDE
 23701                           postdec2	equ	0xFDD
 23702                           plusw2	equ	0xFDB
 23703                           fsr2h	equ	0xFDA
 23704                           fsr2l	equ	0xFD9
 23705                           status	equ	0xFD8
 23706                           
 23707 ;; *************** function _fat_read_from_buffer *****************
 23708 ;; Defined at:
 23709 ;;		line 1434 in file "fat16.c"
 23710 ;; Parameters:    Size  Location     Type
 23711 ;;  start           2    6[COMRAM] unsigned int 
 23712 ;;  length          2    8[COMRAM] unsigned int 
 23713 ;;  data            2   10[COMRAM] PTR unsigned char 
 23714 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23715 ;; Auto vars:     Size  Location     Type
 23716 ;;		None
 23717 ;; Return value:  Size  Location     Type
 23718 ;;                  1    wreg      void 
 23719 ;; Registers used:
 23720 ;;		wreg, status,2, status,0, cstack
 23721 ;; Tracked objects:
 23722 ;;		On entry : 0/0
 23723 ;;		On exit  : 0/0
 23724 ;;		Unchanged: 0/0
 23725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23726 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23730 ;;Total ram usage:        6 bytes
 23731 ;; Hardware stack levels used:    1
 23732 ;; Hardware stack levels required when called:    1
 23733 ;; This function calls:
 23734 ;;		_flash_read_from_buffer
 23735 ;; This function is called by:
 23736 ;;		__fill_buffer_read_buffer
 23737 ;; This function uses a non-reentrant model
 23738 ;;
 23739                           
 23740                           	psect	text107
 23741  008CC6                     __ptext107:
 23742                           	opt stack 0
 23743  008CC6                     _fat_read_from_buffer:
 23744                           	opt stack 27
 23745                           
 23746                           ;fat16.c: 1436: flash_read_from_buffer(start, length, data);
 23747                           
 23748                           ;incstack = 0
 23749  008CC6  C007  F001         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 23750  008CCA  C008  F002         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 23751  008CCE  C009  F003         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 23752  008CD2  C00A  F004         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 23753  008CD6  C00B  F005         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 23754  008CDA  C00C  F006         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 23755  008CDE  ECE9  F047         	call	_flash_read_from_buffer	;wreg free
 23756  008CE2  0012               	return		;funcret
 23757  008CE4                     __end_of_fat_read_from_buffer:
 23758                           	opt stack 0
 23759                           tosu	equ	0xFFF
 23760                           tosh	equ	0xFFE
 23761                           tosl	equ	0xFFD
 23762                           pclath	equ	0xFFA
 23763                           tblptru	equ	0xFF8
 23764                           tblptrh	equ	0xFF7
 23765                           tblptrl	equ	0xFF6
 23766                           tablat	equ	0xFF5
 23767                           prodh	equ	0xFF4
 23768                           prodl	equ	0xFF3
 23769                           intcon	equ	0xFF2
 23770                           intcon2	equ	0xFF1
 23771                           intcon3	equ	0xFF0
 23772                           indf0	equ	0xFEF
 23773                           postinc0	equ	0xFEE
 23774                           fsr0h	equ	0xFEA
 23775                           fsr0l	equ	0xFE9
 23776                           wreg	equ	0xFE8
 23777                           indf1	equ	0xFE7
 23778                           postdec1	equ	0xFE5
 23779                           plusw1	equ	0xFE3
 23780                           fsr1h	equ	0xFE2
 23781                           fsr1l	equ	0xFE1
 23782                           indf2	equ	0xFDF
 23783                           postinc2	equ	0xFDE
 23784                           postdec2	equ	0xFDD
 23785                           plusw2	equ	0xFDB
 23786                           fsr2h	equ	0xFDA
 23787                           fsr2l	equ	0xFD9
 23788                           status	equ	0xFD8
 23789                           
 23790 ;; *************** function _flash_read_from_buffer *****************
 23791 ;; Defined at:
 23792 ;;		line 522 in file "flash.c"
 23793 ;; Parameters:    Size  Location     Type
 23794 ;;  start           2    0[COMRAM] unsigned int 
 23795 ;;  length          2    2[COMRAM] unsigned int 
 23796 ;;  data            2    4[COMRAM] PTR unsigned char 
 23797 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;		None
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1    wreg      void 
 23802 ;; Registers used:
 23803 ;;		None
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/0
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23809 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23812 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23813 ;;Total ram usage:        6 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; This function calls:
 23816 ;;		Nothing
 23817 ;; This function is called by:
 23818 ;;		_fat_read_from_buffer
 23819 ;; This function uses a non-reentrant model
 23820 ;;
 23821                           
 23822                           	psect	text108
 23823  008FD2                     __ptext108:
 23824                           	opt stack 0
 23825  008FD2                     _flash_read_from_buffer:
 23826                           	opt stack 27
 23827                           
 23828                           ;incstack = 0
 23829  008FD2  0012               	return		;funcret
 23830  008FD4                     __end_of_flash_read_from_buffer:
 23831                           	opt stack 0
 23832                           tosu	equ	0xFFF
 23833                           tosh	equ	0xFFE
 23834                           tosl	equ	0xFFD
 23835                           pclath	equ	0xFFA
 23836                           tblptru	equ	0xFF8
 23837                           tblptrh	equ	0xFF7
 23838                           tblptrl	equ	0xFF6
 23839                           tablat	equ	0xFF5
 23840                           prodh	equ	0xFF4
 23841                           prodl	equ	0xFF3
 23842                           intcon	equ	0xFF2
 23843                           intcon2	equ	0xFF1
 23844                           intcon3	equ	0xFF0
 23845                           indf0	equ	0xFEF
 23846                           postinc0	equ	0xFEE
 23847                           fsr0h	equ	0xFEA
 23848                           fsr0l	equ	0xFE9
 23849                           wreg	equ	0xFE8
 23850                           indf1	equ	0xFE7
 23851                           postdec1	equ	0xFE5
 23852                           plusw1	equ	0xFE3
 23853                           fsr1h	equ	0xFE2
 23854                           fsr1l	equ	0xFE1
 23855                           indf2	equ	0xFDF
 23856                           postinc2	equ	0xFDE
 23857                           postdec2	equ	0xFDD
 23858                           plusw2	equ	0xFDB
 23859                           fsr2h	equ	0xFDA
 23860                           fsr2l	equ	0xFD9
 23861                           status	equ	0xFD8
 23862                           
 23863 ;; *************** function __fill_buffer_get_status *****************
 23864 ;; Defined at:
 23865 ;;		line 201 in file "api.c"
 23866 ;; Parameters:    Size  Location     Type
 23867 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23868 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23869 ;; Auto vars:     Size  Location     Type
 23870 ;;		None
 23871 ;; Return value:  Size  Location     Type
 23872 ;;                  1    wreg      void 
 23873 ;; Registers used:
 23874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23875 ;; Tracked objects:
 23876 ;;		On entry : 0/0
 23877 ;;		On exit  : 0/0
 23878 ;;		Unchanged: 0/0
 23879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23884 ;;Total ram usage:        2 bytes
 23885 ;; Hardware stack levels used:    1
 23886 ;; Hardware stack levels required when called:    4
 23887 ;; This function calls:
 23888 ;;		_flash_is_busy
 23889 ;;		_ui_get_status
 23890 ;; This function is called by:
 23891 ;;		_api_prepare
 23892 ;; This function uses a non-reentrant model
 23893 ;;
 23894                           
 23895                           	psect	text109
 23896  00553C                     __ptext109:
 23897                           	opt stack 0
 23898  00553C                     __fill_buffer_get_status:
 23899                           	opt stack 25
 23900                           
 23901                           ;api.c: 204: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23902                           
 23903                           ;incstack = 0
 23904  00553C  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23905  005540  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23906  005544  0E10               	movlw	16
 23907  005546  6EDF               	movwf	indf2,c
 23908                           
 23909                           ;api.c: 207: outBuffer[1] = 0xC125 >> 8;
 23910  005548  EE20 F001          	lfsr	2,1
 23911  00554C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23912  00554E  26D9               	addwf	fsr2l,f,c
 23913  005550  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23914  005552  22DA               	addwfc	fsr2h,f,c
 23915  005554  0EC1               	movlw	193
 23916  005556  6EDF               	movwf	indf2,c
 23917                           
 23918                           ;api.c: 208: outBuffer[2] = (uint8_t) 0xC125;
 23919  005558  EE20 F002          	lfsr	2,2
 23920  00555C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23921  00555E  26D9               	addwf	fsr2l,f,c
 23922  005560  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23923  005562  22DA               	addwfc	fsr2h,f,c
 23924  005564  0E25               	movlw	37
 23925  005566  6EDF               	movwf	indf2,c
 23926                           
 23927                           ;api.c: 212: outBuffer[3] = (uint8_t) flash_is_busy();
 23928  005568  EE20 F003          	lfsr	2,3
 23929  00556C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23930  00556E  26D9               	addwf	fsr2l,f,c
 23931  005570  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23932  005572  22DA               	addwfc	fsr2h,f,c
 23933  005574  EC11  F047         	call	_flash_is_busy	;wreg free
 23934  005578  6EDF               	movwf	indf2,c
 23935                           
 23936                           ;api.c: 215: outBuffer[4] = 0x00;
 23937  00557A  EE20 F004          	lfsr	2,4
 23938  00557E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23939  005580  26D9               	addwf	fsr2l,f,c
 23940  005582  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23941  005584  22DA               	addwfc	fsr2h,f,c
 23942  005586  0E00               	movlw	0
 23943  005588  6EDF               	movwf	indf2,c
 23944                           
 23945                           ;api.c: 216: outBuffer[5] = 0x03;
 23946  00558A  EE20 F005          	lfsr	2,5
 23947  00558E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23948  005590  26D9               	addwf	fsr2l,f,c
 23949  005592  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23950  005594  22DA               	addwfc	fsr2h,f,c
 23951  005596  0E03               	movlw	3
 23952  005598  6EDF               	movwf	indf2,c
 23953                           
 23954                           ;api.c: 217: outBuffer[6] = 0x03;
 23955  00559A  EE20 F006          	lfsr	2,6
 23956  00559E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23957  0055A0  26D9               	addwf	fsr2l,f,c
 23958  0055A2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23959  0055A4  22DA               	addwfc	fsr2h,f,c
 23960  0055A6  0E03               	movlw	3
 23961  0055A8  6EDF               	movwf	indf2,c
 23962                           
 23963                           ;api.c: 220: outBuffer[7] = ui_get_status();
 23964  0055AA  EE20 F007          	lfsr	2,7
 23965  0055AE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23966  0055B0  26D9               	addwf	fsr2l,f,c
 23967  0055B2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23968  0055B4  22DA               	addwfc	fsr2h,f,c
 23969  0055B6  ECDF  F047         	call	_ui_get_status	;wreg free
 23970  0055BA  6EDF               	movwf	indf2,c
 23971                           
 23972                           ;api.c: 223: outBuffer[8] = os.encoderCount;
 23973  0055BC  EE20 F008          	lfsr	2,8
 23974  0055C0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23975  0055C2  26D9               	addwf	fsr2l,f,c
 23976  0055C4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23977  0055C6  22DA               	addwfc	fsr2h,f,c
 23978  0055C8  C0C5  FFDF         	movff	_os,indf2	;volatile
 23979                           
 23980                           ;api.c: 224: outBuffer[9] = os.buttonCount;
 23981  0055CC  EE20 F009          	lfsr	2,9
 23982  0055D0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23983  0055D2  26D9               	addwf	fsr2l,f,c
 23984  0055D4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23985  0055D6  22DA               	addwfc	fsr2h,f,c
 23986  0055D8  C0C6  FFDF         	movff	_os+1,indf2	;volatile
 23987                           
 23988                           ;api.c: 225: outBuffer[10] = os.timeSlot;
 23989  0055DC  EE20 F00A          	lfsr	2,10
 23990  0055E0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23991  0055E2  26D9               	addwf	fsr2l,f,c
 23992  0055E4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23993  0055E6  22DA               	addwfc	fsr2h,f,c
 23994  0055E8  C0C7  FFDF         	movff	_os+2,indf2	;volatile
 23995                           
 23996                           ;api.c: 226: outBuffer[11] = os.done;
 23997  0055EC  EE20 F00B          	lfsr	2,11
 23998  0055F0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23999  0055F2  26D9               	addwf	fsr2l,f,c
 24000  0055F4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24001  0055F6  22DA               	addwfc	fsr2h,f,c
 24002  0055F8  C0C8  FFDF         	movff	_os+3,indf2	;volatile
 24003                           
 24004                           ;api.c: 227: outBuffer[12] = os.bootloader_mode;
 24005  0055FC  EE20 F00C          	lfsr	2,12
 24006  005600  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24007  005602  26D9               	addwf	fsr2l,f,c
 24008  005604  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24009  005606  22DA               	addwfc	fsr2h,f,c
 24010  005608  C0C9  FFDF         	movff	_os+4,indf2	;volatile
 24011                           
 24012                           ;api.c: 228: outBuffer[13] = os.display_mode;
 24013  00560C  EE20 F00D          	lfsr	2,13
 24014  005610  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24015  005612  26D9               	addwf	fsr2l,f,c
 24016  005614  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24017  005616  22DA               	addwfc	fsr2h,f,c
 24018  005618  C0CA  FFDF         	movff	_os+5,indf2	;volatile
 24019  00561C  0012               	return		;funcret
 24020  00561E                     __end_of__fill_buffer_get_status:
 24021                           	opt stack 0
 24022                           tosu	equ	0xFFF
 24023                           tosh	equ	0xFFE
 24024                           tosl	equ	0xFFD
 24025                           pclath	equ	0xFFA
 24026                           tblptru	equ	0xFF8
 24027                           tblptrh	equ	0xFF7
 24028                           tblptrl	equ	0xFF6
 24029                           tablat	equ	0xFF5
 24030                           prodh	equ	0xFF4
 24031                           prodl	equ	0xFF3
 24032                           intcon	equ	0xFF2
 24033                           intcon2	equ	0xFF1
 24034                           intcon3	equ	0xFF0
 24035                           indf0	equ	0xFEF
 24036                           postinc0	equ	0xFEE
 24037                           fsr0h	equ	0xFEA
 24038                           fsr0l	equ	0xFE9
 24039                           wreg	equ	0xFE8
 24040                           indf1	equ	0xFE7
 24041                           postdec1	equ	0xFE5
 24042                           plusw1	equ	0xFE3
 24043                           fsr1h	equ	0xFE2
 24044                           fsr1l	equ	0xFE1
 24045                           indf2	equ	0xFDF
 24046                           postinc2	equ	0xFDE
 24047                           postdec2	equ	0xFDD
 24048                           plusw2	equ	0xFDB
 24049                           fsr2h	equ	0xFDA
 24050                           fsr2l	equ	0xFD9
 24051                           status	equ	0xFD8
 24052                           
 24053 ;; *************** function _flash_is_busy *****************
 24054 ;; Defined at:
 24055 ;;		line 354 in file "flash.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;		None
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;  result          1   19[COMRAM] unsigned char 
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      unsigned char 
 24062 ;; Registers used:
 24063 ;;		wreg, status,2, status,0, cstack
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24073 ;;Total ram usage:        1 bytes
 24074 ;; Hardware stack levels used:    1
 24075 ;; Hardware stack levels required when called:    3
 24076 ;; This function calls:
 24077 ;;		__flash_is_busy
 24078 ;;		_spi_set_configuration
 24079 ;; This function is called by:
 24080 ;;		__fill_buffer_get_status
 24081 ;; This function uses a non-reentrant model
 24082 ;;
 24083                           
 24084                           	psect	text110
 24085  008E22                     __ptext110:
 24086                           	opt stack 0
 24087  008E22                     _flash_is_busy:
 24088                           	opt stack 25
 24089                           
 24090                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 24091                           
 24092                           ;incstack = 0
 24093  008E22  0E00               	movlw	0
 24094  008E24  EC62  F023         	call	_spi_set_configuration
 24095                           
 24096                           ;flash.c: 362: result = _flash_is_busy();
 24097  008E28  EC32  F046         	call	__flash_is_busy	;wreg free
 24098  008E2C  6E14               	movwf	flash_is_busy@result,c
 24099                           
 24100                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24101  008E2E  0E01               	movlw	1
 24102  008E30  EC62  F023         	call	_spi_set_configuration
 24103                           
 24104                           ;flash.c: 368: return result;
 24105  008E34  5014               	movf	flash_is_busy@result,w,c
 24106  008E36  0012               	return	
 24107  008E38                     __end_of_flash_is_busy:
 24108                           	opt stack 0
 24109                           tosu	equ	0xFFF
 24110                           tosh	equ	0xFFE
 24111                           tosl	equ	0xFFD
 24112                           pclath	equ	0xFFA
 24113                           tblptru	equ	0xFF8
 24114                           tblptrh	equ	0xFF7
 24115                           tblptrl	equ	0xFF6
 24116                           tablat	equ	0xFF5
 24117                           prodh	equ	0xFF4
 24118                           prodl	equ	0xFF3
 24119                           intcon	equ	0xFF2
 24120                           intcon2	equ	0xFF1
 24121                           intcon3	equ	0xFF0
 24122                           indf0	equ	0xFEF
 24123                           postinc0	equ	0xFEE
 24124                           fsr0h	equ	0xFEA
 24125                           fsr0l	equ	0xFE9
 24126                           wreg	equ	0xFE8
 24127                           indf1	equ	0xFE7
 24128                           postdec1	equ	0xFE5
 24129                           plusw1	equ	0xFE3
 24130                           fsr1h	equ	0xFE2
 24131                           fsr1l	equ	0xFE1
 24132                           indf2	equ	0xFDF
 24133                           postinc2	equ	0xFDE
 24134                           postdec2	equ	0xFDD
 24135                           plusw2	equ	0xFDB
 24136                           fsr2h	equ	0xFDA
 24137                           fsr2l	equ	0xFD9
 24138                           status	equ	0xFD8
 24139                           
 24140 ;; *************** function __fill_buffer_get_file_details *****************
 24141 ;; Defined at:
 24142 ;;		line 354 in file "api.c"
 24143 ;; Parameters:    Size  Location     Type
 24144 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 24145 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24146 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 24147 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24148 ;; Auto vars:     Size  Location     Type
 24149 ;;  file_number     1   60[COMRAM] unsigned char 
 24150 ;; Return value:  Size  Location     Type
 24151 ;;                  1    wreg      void 
 24152 ;; Registers used:
 24153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24154 ;; Tracked objects:
 24155 ;;		On entry : 0/0
 24156 ;;		On exit  : 0/0
 24157 ;;		Unchanged: 0/0
 24158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24163 ;;Total ram usage:        6 bytes
 24164 ;; Hardware stack levels used:    1
 24165 ;; Hardware stack levels required when called:    6
 24166 ;; This function calls:
 24167 ;;		_fat_get_file_information
 24168 ;; This function is called by:
 24169 ;;		_api_prepare
 24170 ;; This function uses a non-reentrant model
 24171 ;;
 24172                           
 24173                           	psect	text111
 24174  0075E4                     __ptext111:
 24175                           	opt stack 0
 24176  0075E4                     __fill_buffer_get_file_details:
 24177                           	opt stack 23
 24178                           
 24179                           ;api.c: 356: uint8_t file_number = inBuffer[1];
 24180                           
 24181                           ;incstack = 0
 24182  0075E4  EE20 F001          	lfsr	2,1
 24183  0075E8  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 24184  0075EA  26D9               	addwf	fsr2l,f,c
 24185  0075EC  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 24186  0075EE  22DA               	addwfc	fsr2h,f,c
 24187  0075F0  50DF               	movf	indf2,w,c
 24188  0075F2  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 24189                           
 24190                           ;api.c: 359: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 24191  0075F4  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 24192  0075F8  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 24193  0075FC  0E80               	movlw	128
 24194  0075FE  6EDF               	movwf	indf2,c
 24195                           
 24196                           ;api.c: 362: outBuffer[1] = 0xC125 >> 8;
 24197  007600  EE20 F001          	lfsr	2,1
 24198  007604  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24199  007606  26D9               	addwf	fsr2l,f,c
 24200  007608  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24201  00760A  22DA               	addwfc	fsr2h,f,c
 24202  00760C  0EC1               	movlw	193
 24203  00760E  6EDF               	movwf	indf2,c
 24204                           
 24205                           ;api.c: 363: outBuffer[2] = (uint8_t) 0xC125;
 24206  007610  EE20 F002          	lfsr	2,2
 24207  007614  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24208  007616  26D9               	addwf	fsr2l,f,c
 24209  007618  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24210  00761A  22DA               	addwfc	fsr2h,f,c
 24211  00761C  0E25               	movlw	37
 24212  00761E  6EDF               	movwf	indf2,c
 24213                           
 24214                           ;api.c: 366: outBuffer[3] = file_number;
 24215  007620  EE20 F003          	lfsr	2,3
 24216  007624  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24217  007626  26D9               	addwf	fsr2l,f,c
 24218  007628  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24219  00762A  22DA               	addwfc	fsr2h,f,c
 24220  00762C  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 24221                           
 24222                           ;api.c: 369: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 24223  007630  0E05               	movlw	5
 24224  007632  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 24225  007634  6E30               	movwf	fat_get_file_information@data,c
 24226  007636  0E00               	movlw	0
 24227  007638  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 24228  00763A  6E31               	movwf	fat_get_file_information@data+1,c
 24229  00763C  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 24230  00763E  EC2B  F03B         	call	_fat_get_file_information
 24231  007642  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 24232  007644  EE20 F004          	lfsr	2,4
 24233  007648  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24234  00764A  26D9               	addwf	fsr2l,f,c
 24235  00764C  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24236  00764E  22DA               	addwfc	fsr2h,f,c
 24237  007650  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 24238  007654  0012               	return		;funcret
 24239  007656                     __end_of__fill_buffer_get_file_details:
 24240                           	opt stack 0
 24241                           tosu	equ	0xFFF
 24242                           tosh	equ	0xFFE
 24243                           tosl	equ	0xFFD
 24244                           pclath	equ	0xFFA
 24245                           tblptru	equ	0xFF8
 24246                           tblptrh	equ	0xFF7
 24247                           tblptrl	equ	0xFF6
 24248                           tablat	equ	0xFF5
 24249                           prodh	equ	0xFF4
 24250                           prodl	equ	0xFF3
 24251                           intcon	equ	0xFF2
 24252                           intcon2	equ	0xFF1
 24253                           intcon3	equ	0xFF0
 24254                           indf0	equ	0xFEF
 24255                           postinc0	equ	0xFEE
 24256                           fsr0h	equ	0xFEA
 24257                           fsr0l	equ	0xFE9
 24258                           wreg	equ	0xFE8
 24259                           indf1	equ	0xFE7
 24260                           postdec1	equ	0xFE5
 24261                           plusw1	equ	0xFE3
 24262                           fsr1h	equ	0xFE2
 24263                           fsr1l	equ	0xFE1
 24264                           indf2	equ	0xFDF
 24265                           postinc2	equ	0xFDE
 24266                           postdec2	equ	0xFDD
 24267                           plusw2	equ	0xFDB
 24268                           fsr2h	equ	0xFDA
 24269                           fsr2l	equ	0xFD9
 24270                           status	equ	0xFD8
 24271                           
 24272 ;; *************** function __fill_buffer_get_display *****************
 24273 ;; Defined at:
 24274 ;;		line 232 in file "api.c"
 24275 ;; Parameters:    Size  Location     Type
 24276 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24277 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24278 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24279 ;; Auto vars:     Size  Location     Type
 24280 ;;  position        1   15[COMRAM] unsigned char 
 24281 ;;  start_line      1   14[COMRAM] unsigned char 
 24282 ;;  line            1   13[COMRAM] unsigned char 
 24283 ;;  cntr            1   12[COMRAM] unsigned char 
 24284 ;; Return value:  Size  Location     Type
 24285 ;;                  1    wreg      void 
 24286 ;; Registers used:
 24287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24288 ;; Tracked objects:
 24289 ;;		On entry : 0/0
 24290 ;;		On exit  : 0/0
 24291 ;;		Unchanged: 0/0
 24292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24293 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24294 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24295 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24296 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24297 ;;Total ram usage:       12 bytes
 24298 ;; Hardware stack levels used:    1
 24299 ;; Hardware stack levels required when called:    1
 24300 ;; This function calls:
 24301 ;;		_display_get_character
 24302 ;; This function is called by:
 24303 ;;		_api_prepare
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text112
 24308  006262                     __ptext112:
 24309                           	opt stack 0
 24310  006262                     __fill_buffer_get_display:
 24311                           	opt stack 28
 24312                           
 24313                           ;api.c: 234: uint8_t cntr;;api.c: 235: uint8_t line;;api.c: 236: uint8_t start_line;;api
      +                          .c: 237: uint8_t position;;api.c: 240: if(secondHalf)
 24314                           
 24315                           ;incstack = 0
 24316  006262  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24317  006264  B4D8               	btfsc	status,2,c
 24318  006266  D006               	goto	l2736
 24319                           
 24320                           ;api.c: 241: {;api.c: 242: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24321  006268  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24322  00626C  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24323  006270  0E12               	movlw	18
 24324  006272  D005               	goto	L31
 24325  006274                     l2736:
 24326                           
 24327                           ;api.c: 244: else;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24328  006274  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24329  006278  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24330  00627C  0E11               	movlw	17
 24331  00627E                     L31:
 24332  00627E  6EDF               	movwf	indf2,c
 24333                           
 24334                           ;api.c: 247: };api.c: 250: outBuffer[1] = 0xC125 >> 8;
 24335  006280  EE20 F001          	lfsr	2,1
 24336  006284  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24337  006286  26D9               	addwf	fsr2l,f,c
 24338  006288  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24339  00628A  22DA               	addwfc	fsr2h,f,c
 24340  00628C  0EC1               	movlw	193
 24341  00628E  6EDF               	movwf	indf2,c
 24342                           
 24343                           ;api.c: 251: outBuffer[2] = (uint8_t) 0xC125;
 24344  006290  EE20 F002          	lfsr	2,2
 24345  006294  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24346  006296  26D9               	addwf	fsr2l,f,c
 24347  006298  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24348  00629A  22DA               	addwfc	fsr2h,f,c
 24349  00629C  0E25               	movlw	37
 24350  00629E  6EDF               	movwf	indf2,c
 24351                           
 24352                           ;api.c: 254: cntr = 3;
 24353  0062A0  0E03               	movlw	3
 24354  0062A2  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24355                           
 24356                           ;api.c: 255: if(secondHalf)
 24357  0062A4  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24358  0062A6  B4D8               	btfsc	status,2,c
 24359  0062A8  D002               	goto	l2738
 24360                           
 24361                           ;api.c: 256: {;api.c: 257: start_line = 2;
 24362  0062AA  0E02               	movlw	2
 24363  0062AC  D001               	goto	L32
 24364  0062AE                     l2738:
 24365                           
 24366                           ;api.c: 259: else;api.c: 260: {;api.c: 261: start_line = 0;
 24367  0062AE  0E00               	movlw	0
 24368  0062B0                     L32:
 24369  0062B0  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24370                           
 24371                           ;api.c: 262: };api.c: 263: for(line=start_line; line<start_line+2; ++line)
 24372  0062B2  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24373  0062B6  D01A               	goto	l2740
 24374  0062B8                     
 24375                           ;api.c: 264: {;api.c: 265: for(position=0; position<20; ++position)
 24376  0062B8  0E00               	movlw	0
 24377  0062BA  6E10               	movwf	__fill_buffer_get_display@position,c
 24378  0062BC                     l14617:
 24379  0062BC  0E13               	movlw	19
 24380  0062BE  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24381  0062C0  D001               	goto	l2742
 24382  0062C2  D013               	goto	u11630
 24383  0062C4                     l2742:
 24384                           
 24385                           ;api.c: 266: {;api.c: 267: outBuffer[cntr] = display_get_character(line, position);
 24386  0062C4  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24387  0062C8  500E               	movf	__fill_buffer_get_display@line,w,c
 24388  0062CA  EC3E  F045         	call	_display_get_character
 24389  0062CE  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24390  0062D0  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24391  0062D2  0D01               	mullw	1
 24392  0062D4  50F3               	movf	prodl,w,c
 24393  0062D6  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24394  0062D8  6ED9               	movwf	fsr2l,c
 24395  0062DA  50F4               	movf	prodh,w,c
 24396  0062DC  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24397  0062DE  6EDA               	movwf	fsr2h,c
 24398  0062E0  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24399                           
 24400                           ;api.c: 268: ++cntr;
 24401  0062E4  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24402  0062E6  2A10               	incf	__fill_buffer_get_display@position,f,c
 24403  0062E8  D7E9               	goto	l14617
 24404  0062EA                     u11630:
 24405  0062EA  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24406  0062EC                     l2740:
 24407  0062EC  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24408  0062EE  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24409  0062F0  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24410  0062F2  0E02               	movlw	2
 24411  0062F4  2608               	addwf	??__fill_buffer_get_display,f,c
 24412  0062F6  0E00               	movlw	0
 24413  0062F8  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24414  0062FA  500E               	movf	__fill_buffer_get_display@line,w,c
 24415  0062FC  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24416  0062FE  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24417  006300  5008               	movf	??__fill_buffer_get_display,w,c
 24418  006302  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24419  006304  500B               	movf	??__fill_buffer_get_display+3,w,c
 24420  006306  0A80               	xorlw	128
 24421  006308  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24422  00630A  5009               	movf	??__fill_buffer_get_display+1,w,c
 24423  00630C  0A80               	xorlw	128
 24424  00630E  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24425  006310  B0D8               	btfsc	status,0,c
 24426  006312  0012               	return	
 24427  006314  D7D1               	goto	l2741
 24428  006316                     __end_of__fill_buffer_get_display:
 24429                           	opt stack 0
 24430                           tosu	equ	0xFFF
 24431                           tosh	equ	0xFFE
 24432                           tosl	equ	0xFFD
 24433                           pclath	equ	0xFFA
 24434                           tblptru	equ	0xFF8
 24435                           tblptrh	equ	0xFF7
 24436                           tblptrl	equ	0xFF6
 24437                           tablat	equ	0xFF5
 24438                           prodh	equ	0xFF4
 24439                           prodl	equ	0xFF3
 24440                           intcon	equ	0xFF2
 24441                           intcon2	equ	0xFF1
 24442                           intcon3	equ	0xFF0
 24443                           indf0	equ	0xFEF
 24444                           postinc0	equ	0xFEE
 24445                           fsr0h	equ	0xFEA
 24446                           fsr0l	equ	0xFE9
 24447                           wreg	equ	0xFE8
 24448                           indf1	equ	0xFE7
 24449                           postdec1	equ	0xFE5
 24450                           plusw1	equ	0xFE3
 24451                           fsr1h	equ	0xFE2
 24452                           fsr1l	equ	0xFE1
 24453                           indf2	equ	0xFDF
 24454                           postinc2	equ	0xFDE
 24455                           postdec2	equ	0xFDD
 24456                           plusw2	equ	0xFDB
 24457                           fsr2h	equ	0xFDA
 24458                           fsr2l	equ	0xFD9
 24459                           status	equ	0xFD8
 24460                           
 24461 ;; *************** function _display_get_character *****************
 24462 ;; Defined at:
 24463 ;;		line 70 in file "display.c"
 24464 ;; Parameters:    Size  Location     Type
 24465 ;;  line            1    wreg     unsigned char 
 24466 ;;  position        1    0[COMRAM] unsigned char 
 24467 ;; Auto vars:     Size  Location     Type
 24468 ;;  line            1    3[COMRAM] unsigned char 
 24469 ;; Return value:  Size  Location     Type
 24470 ;;                  1    wreg      unsigned char 
 24471 ;; Registers used:
 24472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24473 ;; Tracked objects:
 24474 ;;		On entry : 0/0
 24475 ;;		On exit  : 0/0
 24476 ;;		Unchanged: 0/0
 24477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24478 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24482 ;;Total ram usage:        4 bytes
 24483 ;; Hardware stack levels used:    1
 24484 ;; This function calls:
 24485 ;;		Nothing
 24486 ;; This function is called by:
 24487 ;;		__fill_buffer_get_display
 24488 ;; This function uses a non-reentrant model
 24489 ;;
 24490                           
 24491                           	psect	text113
 24492  008A7C                     __ptext113:
 24493                           	opt stack 0
 24494  008A7C                     _display_get_character:
 24495                           	opt stack 28
 24496                           
 24497                           ;incstack = 0
 24498                           ;display_get_character@line stored from wreg
 24499  008A7C  6E04               	movwf	display_get_character@line,c
 24500                           
 24501                           ;display.c: 72: return display_content[line][position];
 24502  008A7E  5004               	movf	display_get_character@line,w,c
 24503  008A80  0D14               	mullw	20
 24504  008A82  0E00               	movlw	low _display_content
 24505  008A84  6E02               	movwf	??_display_get_character& (0+255),c
 24506  008A86  0E02               	movlw	high _display_content
 24507  008A88  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24508  008A8A  50F3               	movf	prodl,w,c
 24509  008A8C  2602               	addwf	??_display_get_character,f,c
 24510  008A8E  50F4               	movf	prodh,w,c
 24511  008A90  2203               	addwfc	??_display_get_character+1,f,c
 24512  008A92  5001               	movf	display_get_character@position,w,c
 24513  008A94  0D01               	mullw	1
 24514  008A96  50F3               	movf	prodl,w,c
 24515  008A98  2402               	addwf	??_display_get_character,w,c
 24516  008A9A  6ED9               	movwf	fsr2l,c
 24517  008A9C  50F4               	movf	prodh,w,c
 24518  008A9E  2003               	addwfc	??_display_get_character+1,w,c
 24519  008AA0  6EDA               	movwf	fsr2h,c
 24520  008AA2  50DF               	movf	indf2,w,c
 24521  008AA4  0012               	return	
 24522  008AA6                     __end_of_display_get_character:
 24523                           	opt stack 0
 24524                           tosu	equ	0xFFF
 24525                           tosh	equ	0xFFE
 24526                           tosl	equ	0xFFD
 24527                           pclath	equ	0xFFA
 24528                           tblptru	equ	0xFF8
 24529                           tblptrh	equ	0xFF7
 24530                           tblptrl	equ	0xFF6
 24531                           tablat	equ	0xFF5
 24532                           prodh	equ	0xFF4
 24533                           prodl	equ	0xFF3
 24534                           intcon	equ	0xFF2
 24535                           intcon2	equ	0xFF1
 24536                           intcon3	equ	0xFF0
 24537                           indf0	equ	0xFEF
 24538                           postinc0	equ	0xFEE
 24539                           fsr0h	equ	0xFEA
 24540                           fsr0l	equ	0xFE9
 24541                           wreg	equ	0xFE8
 24542                           indf1	equ	0xFE7
 24543                           postdec1	equ	0xFE5
 24544                           plusw1	equ	0xFE3
 24545                           fsr1h	equ	0xFE2
 24546                           fsr1l	equ	0xFE1
 24547                           indf2	equ	0xFDF
 24548                           postinc2	equ	0xFDE
 24549                           postdec2	equ	0xFDD
 24550                           plusw2	equ	0xFDB
 24551                           fsr2h	equ	0xFDA
 24552                           fsr2l	equ	0xFD9
 24553                           status	equ	0xFD8
 24554                           
 24555 ;; *************** function __fill_buffer_get_configuration *****************
 24556 ;; Defined at:
 24557 ;;		line 333 in file "api.c"
 24558 ;; Parameters:    Size  Location     Type
 24559 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 24560 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24561 ;; Auto vars:     Size  Location     Type
 24562 ;;		None
 24563 ;; Return value:  Size  Location     Type
 24564 ;;                  1    wreg      void 
 24565 ;; Registers used:
 24566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24567 ;; Tracked objects:
 24568 ;;		On entry : 0/0
 24569 ;;		On exit  : 0/0
 24570 ;;		Unchanged: 0/0
 24571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24576 ;;Total ram usage:        2 bytes
 24577 ;; Hardware stack levels used:    1
 24578 ;; This function calls:
 24579 ;;		Nothing
 24580 ;; This function is called by:
 24581 ;;		_api_prepare
 24582 ;; This function uses a non-reentrant model
 24583 ;;
 24584                           
 24585                           	psect	text114
 24586  006AF8                     __ptext114:
 24587                           	opt stack 0
 24588  006AF8                     __fill_buffer_get_configuration:
 24589                           	opt stack 29
 24590                           
 24591                           ;api.c: 336: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24592                           
 24593                           ;incstack = 0
 24594  006AF8  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 24595  006AFC  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 24596  006B00  0E10               	movlw	16
 24597  006B02  6EDF               	movwf	indf2,c
 24598                           
 24599                           ;api.c: 339: outBuffer[1] = 0xC125 >> 8;
 24600  006B04  EE20 F001          	lfsr	2,1
 24601  006B08  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24602  006B0A  26D9               	addwf	fsr2l,f,c
 24603  006B0C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24604  006B0E  22DA               	addwfc	fsr2h,f,c
 24605  006B10  0EC1               	movlw	193
 24606  006B12  6EDF               	movwf	indf2,c
 24607                           
 24608                           ;api.c: 340: outBuffer[2] = (uint8_t) 0xC125;
 24609  006B14  EE20 F002          	lfsr	2,2
 24610  006B18  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24611  006B1A  26D9               	addwf	fsr2l,f,c
 24612  006B1C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24613  006B1E  22DA               	addwfc	fsr2h,f,c
 24614  006B20  0E25               	movlw	37
 24615  006B22  6EDF               	movwf	indf2,c
 24616                           
 24617                           ;api.c: 343: outBuffer[3] = communicationSettings.spiMode;
 24618  006B24  EE20 F003          	lfsr	2,3
 24619  006B28  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24620  006B2A  26D9               	addwf	fsr2l,f,c
 24621  006B2C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24622  006B2E  22DA               	addwfc	fsr2h,f,c
 24623  006B30  C139  FFDF         	movff	_communicationSettings,indf2
 24624                           
 24625                           ;api.c: 344: outBuffer[4] = communicationSettings.spiFrequency;
 24626  006B34  EE20 F004          	lfsr	2,4
 24627  006B38  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24628  006B3A  26D9               	addwf	fsr2l,f,c
 24629  006B3C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24630  006B3E  22DA               	addwfc	fsr2h,f,c
 24631  006B40  C13A  FFDF         	movff	_communicationSettings+1,indf2
 24632                           
 24633                           ;api.c: 345: outBuffer[5] = communicationSettings.spiPolarity;
 24634  006B44  EE20 F005          	lfsr	2,5
 24635  006B48  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24636  006B4A  26D9               	addwf	fsr2l,f,c
 24637  006B4C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24638  006B4E  22DA               	addwfc	fsr2h,f,c
 24639  006B50  C13B  FFDF         	movff	_communicationSettings+2,indf2
 24640                           
 24641                           ;api.c: 348: outBuffer[6] = communicationSettings.i2cMode;
 24642  006B54  EE20 F006          	lfsr	2,6
 24643  006B58  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24644  006B5A  26D9               	addwf	fsr2l,f,c
 24645  006B5C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24646  006B5E  22DA               	addwfc	fsr2h,f,c
 24647  006B60  C13C  FFDF         	movff	_communicationSettings+3,indf2
 24648                           
 24649                           ;api.c: 349: outBuffer[7] = communicationSettings.i2cFrequency;
 24650  006B64  EE20 F007          	lfsr	2,7
 24651  006B68  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24652  006B6A  26D9               	addwf	fsr2l,f,c
 24653  006B6C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24654  006B6E  22DA               	addwfc	fsr2h,f,c
 24655  006B70  C13D  FFDF         	movff	_communicationSettings+4,indf2
 24656                           
 24657                           ;api.c: 350: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 24658  006B74  EE20 F008          	lfsr	2,8
 24659  006B78  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24660  006B7A  26D9               	addwf	fsr2l,f,c
 24661  006B7C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24662  006B7E  22DA               	addwfc	fsr2h,f,c
 24663  006B80  C13E  FFDF         	movff	_communicationSettings+5,indf2
 24664                           
 24665                           ;api.c: 351: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 24666  006B84  EE20 F009          	lfsr	2,9
 24667  006B88  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24668  006B8A  26D9               	addwf	fsr2l,f,c
 24669  006B8C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24670  006B8E  22DA               	addwfc	fsr2h,f,c
 24671  006B90  C13F  FFDF         	movff	_communicationSettings+6,indf2
 24672  006B94  0012               	return		;funcret
 24673  006B96                     __end_of__fill_buffer_get_configuration:
 24674                           	opt stack 0
 24675                           tosu	equ	0xFFF
 24676                           tosh	equ	0xFFE
 24677                           tosl	equ	0xFFD
 24678                           pclath	equ	0xFFA
 24679                           tblptru	equ	0xFF8
 24680                           tblptrh	equ	0xFF7
 24681                           tblptrl	equ	0xFF6
 24682                           tablat	equ	0xFF5
 24683                           prodh	equ	0xFF4
 24684                           prodl	equ	0xFF3
 24685                           intcon	equ	0xFF2
 24686                           intcon2	equ	0xFF1
 24687                           intcon3	equ	0xFF0
 24688                           indf0	equ	0xFEF
 24689                           postinc0	equ	0xFEE
 24690                           fsr0h	equ	0xFEA
 24691                           fsr0l	equ	0xFE9
 24692                           wreg	equ	0xFE8
 24693                           indf1	equ	0xFE7
 24694                           postdec1	equ	0xFE5
 24695                           plusw1	equ	0xFE3
 24696                           fsr1h	equ	0xFE2
 24697                           fsr1l	equ	0xFE1
 24698                           indf2	equ	0xFDF
 24699                           postinc2	equ	0xFDE
 24700                           postdec2	equ	0xFDD
 24701                           plusw2	equ	0xFDB
 24702                           fsr2h	equ	0xFDA
 24703                           fsr2l	equ	0xFD9
 24704                           status	equ	0xFD8
 24705                           
 24706 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24707 ;; Defined at:
 24708 ;;		line 273 in file "api.c"
 24709 ;; Parameters:    Size  Location     Type
 24710 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24711 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24712 ;; Auto vars:     Size  Location     Type
 24713 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24714 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24715 ;;  cntr            1   10[COMRAM] unsigned char 
 24716 ;;  data_length     1    9[COMRAM] unsigned char 
 24717 ;; Return value:  Size  Location     Type
 24718 ;;                  1    wreg      void 
 24719 ;; Registers used:
 24720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24721 ;; Tracked objects:
 24722 ;;		On entry : 0/0
 24723 ;;		On exit  : 0/0
 24724 ;;		Unchanged: 0/0
 24725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24727 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24728 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24729 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24730 ;;Total ram usage:       13 bytes
 24731 ;; Hardware stack levels used:    1
 24732 ;; Hardware stack levels required when called:    1
 24733 ;; This function calls:
 24734 ;;		_bootloader_get_entries
 24735 ;;		_bootloader_get_error
 24736 ;;		_bootloader_get_file_size
 24737 ;;		_bootloader_get_flashPagesWritten
 24738 ;;		_bootloader_get_rec_address
 24739 ;;		_bootloader_get_rec_checksum
 24740 ;;		_bootloader_get_rec_checksumCheck
 24741 ;;		_bootloader_get_rec_data
 24742 ;;		_bootloader_get_rec_dataLength
 24743 ;;		_bootloader_get_rec_recordType
 24744 ;;		_bootloader_get_total_entries
 24745 ;; This function is called by:
 24746 ;;		_api_prepare
 24747 ;; This function uses a non-reentrant model
 24748 ;;
 24749                           
 24750                           	psect	text115
 24751  002CE8                     __ptext115:
 24752                           	opt stack 0
 24753  002CE8                     __fill_buffer_get_bootloader_details:
 24754                           	opt stack 28
 24755                           
 24756                           ;api.c: 275: uint8_t cntr;;api.c: 276: uint8_t data_length;;api.c: 277: uint16_t buffer_
      +                          small;;api.c: 278: uint32_t buffer_large;;api.c: 281: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24757                           
 24758                           ;incstack = 0
 24759  002CE8  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24760  002CEC  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24761  002CF0  0E13               	movlw	19
 24762  002CF2  6EDF               	movwf	indf2,c
 24763                           
 24764                           ;api.c: 284: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 24765  002CF4  EE20 F001          	lfsr	2,1
 24766  002CF8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24767  002CFA  26D9               	addwf	fsr2l,f,c
 24768  002CFC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24769  002CFE  22DA               	addwfc	fsr2h,f,c
 24770  002D00  0EC1               	movlw	193
 24771  002D02  6EDF               	movwf	indf2,c
 24772                           
 24773                           ;api.c: 285: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 24774  002D04  EE20 F002          	lfsr	2,2
 24775  002D08  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24776  002D0A  26D9               	addwf	fsr2l,f,c
 24777  002D0C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24778  002D0E  22DA               	addwfc	fsr2h,f,c
 24779  002D10  0E25               	movlw	37
 24780  002D12  6EDF               	movwf	indf2,c
 24781                           
 24782                           ;api.c: 288: buffer_large = bootloader_get_file_size();
 24783  002D14  EC44  F047         	call	_bootloader_get_file_size	;wreg free
 24784  002D18  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24785  002D1C  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24786  002D20  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24787  002D24  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24788                           
 24789                           ;api.c: 289: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24790  002D28  EE20 F003          	lfsr	2,3
 24791  002D2C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24792  002D2E  26D9               	addwf	fsr2l,f,c
 24793  002D30  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24794  002D32  22DA               	addwfc	fsr2h,f,c
 24795  002D34  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24796  002D36  6EDF               	movwf	indf2,c
 24797                           
 24798                           ;api.c: 290: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24799  002D38  EE20 F004          	lfsr	2,4
 24800  002D3C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24801  002D3E  26D9               	addwf	fsr2l,f,c
 24802  002D40  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24803  002D42  22DA               	addwfc	fsr2h,f,c
 24804  002D44  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24805                           
 24806                           ;api.c: 291: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24807  002D48  EE20 F005          	lfsr	2,5
 24808  002D4C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24809  002D4E  26D9               	addwf	fsr2l,f,c
 24810  002D50  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24811  002D52  22DA               	addwfc	fsr2h,f,c
 24812  002D54  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24813  002D56  6EDF               	movwf	indf2,c
 24814                           
 24815                           ;api.c: 292: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24816  002D58  EE20 F006          	lfsr	2,6
 24817  002D5C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24818  002D5E  26D9               	addwf	fsr2l,f,c
 24819  002D60  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24820  002D62  22DA               	addwfc	fsr2h,f,c
 24821  002D64  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24822                           
 24823                           ;api.c: 294: buffer_small = bootloader_get_entries();
 24824  002D68  ECAE  F047         	call	_bootloader_get_entries	;wreg free
 24825  002D6C  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24826  002D70  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24827                           
 24828                           ;api.c: 295: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24829  002D74  EE20 F007          	lfsr	2,7
 24830  002D78  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24831  002D7A  26D9               	addwf	fsr2l,f,c
 24832  002D7C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24833  002D7E  22DA               	addwfc	fsr2h,f,c
 24834  002D80  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24835  002D82  6EDF               	movwf	indf2,c
 24836                           
 24837                           ;api.c: 296: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24838  002D84  EE20 F008          	lfsr	2,8
 24839  002D88  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24840  002D8A  26D9               	addwf	fsr2l,f,c
 24841  002D8C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24842  002D8E  22DA               	addwfc	fsr2h,f,c
 24843  002D90  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24844                           
 24845                           ;api.c: 298: buffer_small = bootloader_get_total_entries();
 24846  002D94  ECB8  F047         	call	_bootloader_get_total_entries	;wreg free
 24847  002D98  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24848  002D9C  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24849                           
 24850                           ;api.c: 299: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24851  002DA0  EE20 F009          	lfsr	2,9
 24852  002DA4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24853  002DA6  26D9               	addwf	fsr2l,f,c
 24854  002DA8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24855  002DAA  22DA               	addwfc	fsr2h,f,c
 24856  002DAC  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24857  002DAE  6EDF               	movwf	indf2,c
 24858                           
 24859                           ;api.c: 300: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24860  002DB0  EE20 F00A          	lfsr	2,10
 24861  002DB4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24862  002DB6  26D9               	addwf	fsr2l,f,c
 24863  002DB8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24864  002DBA  22DA               	addwfc	fsr2h,f,c
 24865  002DBC  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24866                           
 24867                           ;api.c: 302: outBuffer[11] = (uint8_t) bootloader_get_error();
 24868  002DC0  EE20 F00B          	lfsr	2,11
 24869  002DC4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24870  002DC6  26D9               	addwf	fsr2l,f,c
 24871  002DC8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24872  002DCA  22DA               	addwfc	fsr2h,f,c
 24873  002DCC  ECE2  F047         	call	_bootloader_get_error	;wreg free
 24874  002DD0  6EDF               	movwf	indf2,c
 24875                           
 24876                           ;api.c: 304: buffer_small = bootloader_get_flashPagesWritten();
 24877  002DD2  ECB3  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 24878  002DD6  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24879  002DDA  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24880                           
 24881                           ;api.c: 305: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24882  002DDE  EE20 F00C          	lfsr	2,12
 24883  002DE2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24884  002DE4  26D9               	addwf	fsr2l,f,c
 24885  002DE6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24886  002DE8  22DA               	addwfc	fsr2h,f,c
 24887  002DEA  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24888  002DEC  6EDF               	movwf	indf2,c
 24889                           
 24890                           ;api.c: 306: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24891  002DEE  EE20 F00D          	lfsr	2,13
 24892  002DF2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24893  002DF4  26D9               	addwf	fsr2l,f,c
 24894  002DF6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24895  002DF8  22DA               	addwfc	fsr2h,f,c
 24896  002DFA  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24897                           
 24898                           ;api.c: 309: buffer_small = bootloader_get_rec_dataLength();
 24899  002DFE  ECA4  F047         	call	_bootloader_get_rec_dataLength	;wreg free
 24900  002E02  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24901  002E06  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24902                           
 24903                           ;api.c: 310: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24904  002E0A  EE20 F00E          	lfsr	2,14
 24905  002E0E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24906  002E10  26D9               	addwf	fsr2l,f,c
 24907  002E12  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24908  002E14  22DA               	addwfc	fsr2h,f,c
 24909  002E16  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24910  002E18  6EDF               	movwf	indf2,c
 24911                           
 24912                           ;api.c: 311: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24913  002E1A  EE20 F00F          	lfsr	2,15
 24914  002E1E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24915  002E20  26D9               	addwf	fsr2l,f,c
 24916  002E22  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24917  002E24  22DA               	addwfc	fsr2h,f,c
 24918  002E26  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24919                           
 24920                           ;api.c: 313: buffer_small = bootloader_get_rec_address();
 24921  002E2A  ECA9  F047         	call	_bootloader_get_rec_address	;wreg free
 24922  002E2E  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24923  002E32  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24924                           
 24925                           ;api.c: 314: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24926  002E36  EE20 F010          	lfsr	2,16
 24927  002E3A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24928  002E3C  26D9               	addwf	fsr2l,f,c
 24929  002E3E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24930  002E40  22DA               	addwfc	fsr2h,f,c
 24931  002E42  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24932  002E44  6EDF               	movwf	indf2,c
 24933                           
 24934                           ;api.c: 315: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24935  002E46  EE20 F011          	lfsr	2,17
 24936  002E4A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24937  002E4C  26D9               	addwf	fsr2l,f,c
 24938  002E4E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24939  002E50  22DA               	addwfc	fsr2h,f,c
 24940  002E52  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24941                           
 24942                           ;api.c: 317: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24943  002E56  EE20 F012          	lfsr	2,18
 24944  002E5A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24945  002E5C  26D9               	addwf	fsr2l,f,c
 24946  002E5E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24947  002E60  22DA               	addwfc	fsr2h,f,c
 24948  002E62  ECD6  F047         	call	_bootloader_get_rec_recordType	;wreg free
 24949  002E66  6EDF               	movwf	indf2,c
 24950                           
 24951                           ;api.c: 318: outBuffer[19] = bootloader_get_rec_checksum();
 24952  002E68  EE20 F013          	lfsr	2,19
 24953  002E6C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24954  002E6E  26D9               	addwf	fsr2l,f,c
 24955  002E70  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24956  002E72  22DA               	addwfc	fsr2h,f,c
 24957  002E74  ECDC  F047         	call	_bootloader_get_rec_checksum	;wreg free
 24958  002E78  6EDF               	movwf	indf2,c
 24959                           
 24960                           ;api.c: 319: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24961  002E7A  EE20 F014          	lfsr	2,20
 24962  002E7E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24963  002E80  26D9               	addwf	fsr2l,f,c
 24964  002E82  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24965  002E84  22DA               	addwfc	fsr2h,f,c
 24966  002E86  ECD9  F047         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24967  002E8A  6EDF               	movwf	indf2,c
 24968                           
 24969                           ;api.c: 321: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24970  002E8C  ECA4  F047         	call	_bootloader_get_rec_dataLength	;wreg free
 24971  002E90  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24972  002E92  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24973                           
 24974                           ;api.c: 322: if(data_length>43)
 24975  002E94  0E2B               	movlw	43
 24976  002E96  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24977  002E98  D002               	goto	l2748
 24978                           
 24979                           ;api.c: 323: {;api.c: 325: data_length = 43;
 24980  002E9A  0E2B               	movlw	43
 24981  002E9C  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24982  002E9E                     l2748:
 24983                           
 24984                           ;api.c: 326: };api.c: 327: for(cntr=0; cntr<data_length; ++cntr)
 24985  002E9E  0E00               	movlw	0
 24986  002EA0  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24987  002EA2  D014               	goto	l2749
 24988  002EA4                     
 24989                           ;api.c: 328: {;api.c: 329: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24990  002EA4  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24991  002EA6  EC1C  F047         	call	_bootloader_get_rec_data
 24992  002EAA  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24993  002EAC  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24994  002EAE  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24995  002EB0  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24996  002EB2  0E15               	movlw	21
 24997  002EB4  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24998  002EB6  0E00               	movlw	0
 24999  002EB8  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25000  002EBA  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25001  002EBC  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25002  002EBE  6ED9               	movwf	fsr2l,c
 25003  002EC0  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25004  002EC2  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25005  002EC4  6EDA               	movwf	fsr2h,c
 25006  002EC6  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25007  002ECA  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25008  002ECC                     l2749:
 25009  002ECC  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25010  002ECE  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25011  002ED0  B0D8               	btfsc	status,0,c
 25012  002ED2  0012               	return	
 25013  002ED4  D7E7               	goto	l2750
 25014  002ED6                     __end_of__fill_buffer_get_bootloader_details:
 25015                           	opt stack 0
 25016                           tosu	equ	0xFFF
 25017                           tosh	equ	0xFFE
 25018                           tosl	equ	0xFFD
 25019                           pclath	equ	0xFFA
 25020                           tblptru	equ	0xFF8
 25021                           tblptrh	equ	0xFF7
 25022                           tblptrl	equ	0xFF6
 25023                           tablat	equ	0xFF5
 25024                           prodh	equ	0xFF4
 25025                           prodl	equ	0xFF3
 25026                           intcon	equ	0xFF2
 25027                           intcon2	equ	0xFF1
 25028                           intcon3	equ	0xFF0
 25029                           indf0	equ	0xFEF
 25030                           postinc0	equ	0xFEE
 25031                           fsr0h	equ	0xFEA
 25032                           fsr0l	equ	0xFE9
 25033                           wreg	equ	0xFE8
 25034                           indf1	equ	0xFE7
 25035                           postdec1	equ	0xFE5
 25036                           plusw1	equ	0xFE3
 25037                           fsr1h	equ	0xFE2
 25038                           fsr1l	equ	0xFE1
 25039                           indf2	equ	0xFDF
 25040                           postinc2	equ	0xFDE
 25041                           postdec2	equ	0xFDD
 25042                           plusw2	equ	0xFDB
 25043                           fsr2h	equ	0xFDA
 25044                           fsr2l	equ	0xFD9
 25045                           status	equ	0xFD8
 25046                           
 25047 ;; *************** function _bootloader_get_rec_recordType *****************
 25048 ;; Defined at:
 25049 ;;		line 491 in file "bootloader.c"
 25050 ;; Parameters:    Size  Location     Type
 25051 ;;		None
 25052 ;; Auto vars:     Size  Location     Type
 25053 ;;		None
 25054 ;; Return value:  Size  Location     Type
 25055 ;;                  1    wreg      enum E6772
 25056 ;; Registers used:
 25057 ;;		wreg, status,2
 25058 ;; Tracked objects:
 25059 ;;		On entry : 0/0
 25060 ;;		On exit  : 0/0
 25061 ;;		Unchanged: 0/0
 25062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25067 ;;Total ram usage:        0 bytes
 25068 ;; Hardware stack levels used:    1
 25069 ;; This function calls:
 25070 ;;		Nothing
 25071 ;; This function is called by:
 25072 ;;		__fill_buffer_get_bootloader_details
 25073 ;; This function uses a non-reentrant model
 25074 ;;
 25075                           
 25076                           	psect	text116
 25077  008FAC                     __ptext116:
 25078                           	opt stack 0
 25079  008FAC                     _bootloader_get_rec_recordType:
 25080                           	opt stack 28
 25081                           
 25082                           ;bootloader.c: 493: return hex_file_entry.recordType;
 25083                           
 25084                           ;incstack = 0
 25085  008FAC  0101               	movlb	1	; () banked
 25086  008FAE  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
 25087  008FB0  0012               	return	
 25088  008FB2                     __end_of_bootloader_get_rec_recordType:
 25089                           	opt stack 0
 25090                           tosu	equ	0xFFF
 25091                           tosh	equ	0xFFE
 25092                           tosl	equ	0xFFD
 25093                           pclath	equ	0xFFA
 25094                           tblptru	equ	0xFF8
 25095                           tblptrh	equ	0xFF7
 25096                           tblptrl	equ	0xFF6
 25097                           tablat	equ	0xFF5
 25098                           prodh	equ	0xFF4
 25099                           prodl	equ	0xFF3
 25100                           intcon	equ	0xFF2
 25101                           intcon2	equ	0xFF1
 25102                           intcon3	equ	0xFF0
 25103                           indf0	equ	0xFEF
 25104                           postinc0	equ	0xFEE
 25105                           fsr0h	equ	0xFEA
 25106                           fsr0l	equ	0xFE9
 25107                           wreg	equ	0xFE8
 25108                           indf1	equ	0xFE7
 25109                           postdec1	equ	0xFE5
 25110                           plusw1	equ	0xFE3
 25111                           fsr1h	equ	0xFE2
 25112                           fsr1l	equ	0xFE1
 25113                           indf2	equ	0xFDF
 25114                           postinc2	equ	0xFDE
 25115                           postdec2	equ	0xFDD
 25116                           plusw2	equ	0xFDB
 25117                           fsr2h	equ	0xFDA
 25118                           fsr2l	equ	0xFD9
 25119                           status	equ	0xFD8
 25120                           
 25121 ;; *************** function _bootloader_get_rec_dataLength *****************
 25122 ;; Defined at:
 25123 ;;		line 480 in file "bootloader.c"
 25124 ;; Parameters:    Size  Location     Type
 25125 ;;		None
 25126 ;; Auto vars:     Size  Location     Type
 25127 ;;		None
 25128 ;; Return value:  Size  Location     Type
 25129 ;;                  2    0[COMRAM] unsigned int 
 25130 ;; Registers used:
 25131 ;;		None
 25132 ;; Tracked objects:
 25133 ;;		On entry : 0/0
 25134 ;;		On exit  : 0/0
 25135 ;;		Unchanged: 0/0
 25136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25141 ;;Total ram usage:        2 bytes
 25142 ;; Hardware stack levels used:    1
 25143 ;; This function calls:
 25144 ;;		Nothing
 25145 ;; This function is called by:
 25146 ;;		__fill_buffer_get_bootloader_details
 25147 ;; This function uses a non-reentrant model
 25148 ;;
 25149                           
 25150                           	psect	text117
 25151  008F48                     __ptext117:
 25152                           	opt stack 0
 25153  008F48                     _bootloader_get_rec_dataLength:
 25154                           	opt stack 28
 25155                           
 25156                           ;bootloader.c: 482: return hex_file_entry.dataLength;
 25157                           
 25158                           ; BSR set to: 1
 25159                           ;incstack = 0
 25160  008F48  C193  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25161  008F4C  C194  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25162  008F50  0012               	return		;funcret
 25163  008F52                     __end_of_bootloader_get_rec_dataLength:
 25164                           	opt stack 0
 25165                           tosu	equ	0xFFF
 25166                           tosh	equ	0xFFE
 25167                           tosl	equ	0xFFD
 25168                           pclath	equ	0xFFA
 25169                           tblptru	equ	0xFF8
 25170                           tblptrh	equ	0xFF7
 25171                           tblptrl	equ	0xFF6
 25172                           tablat	equ	0xFF5
 25173                           prodh	equ	0xFF4
 25174                           prodl	equ	0xFF3
 25175                           intcon	equ	0xFF2
 25176                           intcon2	equ	0xFF1
 25177                           intcon3	equ	0xFF0
 25178                           indf0	equ	0xFEF
 25179                           postinc0	equ	0xFEE
 25180                           fsr0h	equ	0xFEA
 25181                           fsr0l	equ	0xFE9
 25182                           wreg	equ	0xFE8
 25183                           indf1	equ	0xFE7
 25184                           postdec1	equ	0xFE5
 25185                           plusw1	equ	0xFE3
 25186                           fsr1h	equ	0xFE2
 25187                           fsr1l	equ	0xFE1
 25188                           indf2	equ	0xFDF
 25189                           postinc2	equ	0xFDE
 25190                           postdec2	equ	0xFDD
 25191                           plusw2	equ	0xFDB
 25192                           fsr2h	equ	0xFDA
 25193                           fsr2l	equ	0xFD9
 25194                           status	equ	0xFD8
 25195                           
 25196 ;; *************** function _bootloader_get_rec_data *****************
 25197 ;; Defined at:
 25198 ;;		line 496 in file "bootloader.c"
 25199 ;; Parameters:    Size  Location     Type
 25200 ;;  index           1    wreg     unsigned char 
 25201 ;; Auto vars:     Size  Location     Type
 25202 ;;  index           1    0[COMRAM] unsigned char 
 25203 ;; Return value:  Size  Location     Type
 25204 ;;                  1    wreg      unsigned char 
 25205 ;; Registers used:
 25206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25207 ;; Tracked objects:
 25208 ;;		On entry : 0/0
 25209 ;;		On exit  : 0/0
 25210 ;;		Unchanged: 0/0
 25211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25215 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25216 ;;Total ram usage:        1 bytes
 25217 ;; Hardware stack levels used:    1
 25218 ;; This function calls:
 25219 ;;		Nothing
 25220 ;; This function is called by:
 25221 ;;		__fill_buffer_get_bootloader_details
 25222 ;; This function uses a non-reentrant model
 25223 ;;
 25224                           
 25225                           	psect	text118
 25226  008E38                     __ptext118:
 25227                           	opt stack 0
 25228  008E38                     _bootloader_get_rec_data:
 25229                           	opt stack 28
 25230                           
 25231                           ;incstack = 0
 25232                           ;bootloader_get_rec_data@index stored from wreg
 25233  008E38  6E01               	movwf	bootloader_get_rec_data@index,c
 25234                           
 25235                           ;bootloader.c: 498: return hex_file_entry.data[index];
 25236  008E3A  5001               	movf	bootloader_get_rec_data@index,w,c
 25237  008E3C  0D01               	mullw	1
 25238  008E3E  0E98               	movlw	low (_hex_file_entry+5)
 25239  008E40  24F3               	addwf	prodl,w,c
 25240  008E42  6ED9               	movwf	fsr2l,c
 25241  008E44  0E01               	movlw	high (_hex_file_entry+5)
 25242  008E46  20F4               	addwfc	prodh,w,c
 25243  008E48  6EDA               	movwf	fsr2h,c
 25244  008E4A  50DF               	movf	indf2,w,c
 25245  008E4C  0012               	return	
 25246  008E4E                     __end_of_bootloader_get_rec_data:
 25247                           	opt stack 0
 25248                           tosu	equ	0xFFF
 25249                           tosh	equ	0xFFE
 25250                           tosl	equ	0xFFD
 25251                           pclath	equ	0xFFA
 25252                           tblptru	equ	0xFF8
 25253                           tblptrh	equ	0xFF7
 25254                           tblptrl	equ	0xFF6
 25255                           tablat	equ	0xFF5
 25256                           prodh	equ	0xFF4
 25257                           prodl	equ	0xFF3
 25258                           intcon	equ	0xFF2
 25259                           intcon2	equ	0xFF1
 25260                           intcon3	equ	0xFF0
 25261                           indf0	equ	0xFEF
 25262                           postinc0	equ	0xFEE
 25263                           fsr0h	equ	0xFEA
 25264                           fsr0l	equ	0xFE9
 25265                           wreg	equ	0xFE8
 25266                           indf1	equ	0xFE7
 25267                           postdec1	equ	0xFE5
 25268                           plusw1	equ	0xFE3
 25269                           fsr1h	equ	0xFE2
 25270                           fsr1l	equ	0xFE1
 25271                           indf2	equ	0xFDF
 25272                           postinc2	equ	0xFDE
 25273                           postdec2	equ	0xFDD
 25274                           plusw2	equ	0xFDB
 25275                           fsr2h	equ	0xFDA
 25276                           fsr2l	equ	0xFD9
 25277                           status	equ	0xFD8
 25278                           
 25279 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25280 ;; Defined at:
 25281 ;;		line 506 in file "bootloader.c"
 25282 ;; Parameters:    Size  Location     Type
 25283 ;;		None
 25284 ;; Auto vars:     Size  Location     Type
 25285 ;;		None
 25286 ;; Return value:  Size  Location     Type
 25287 ;;                  1    wreg      unsigned char 
 25288 ;; Registers used:
 25289 ;;		wreg, status,2
 25290 ;; Tracked objects:
 25291 ;;		On entry : 0/0
 25292 ;;		On exit  : 0/0
 25293 ;;		Unchanged: 0/0
 25294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25299 ;;Total ram usage:        0 bytes
 25300 ;; Hardware stack levels used:    1
 25301 ;; This function calls:
 25302 ;;		Nothing
 25303 ;; This function is called by:
 25304 ;;		__fill_buffer_get_bootloader_details
 25305 ;; This function uses a non-reentrant model
 25306 ;;
 25307                           
 25308                           	psect	text119
 25309  008FB2                     __ptext119:
 25310                           	opt stack 0
 25311  008FB2                     _bootloader_get_rec_checksumCheck:
 25312                           	opt stack 28
 25313                           
 25314                           ;bootloader.c: 508: return hex_file_entry.checksumCheck;
 25315                           
 25316                           ;incstack = 0
 25317  008FB2  0101               	movlb	1	; () banked
 25318  008FB4  51A9               	movf	(_hex_file_entry+22)& (0+255),w,b
 25319  008FB6  0012               	return	
 25320  008FB8                     __end_of_bootloader_get_rec_checksumCheck:
 25321                           	opt stack 0
 25322                           tosu	equ	0xFFF
 25323                           tosh	equ	0xFFE
 25324                           tosl	equ	0xFFD
 25325                           pclath	equ	0xFFA
 25326                           tblptru	equ	0xFF8
 25327                           tblptrh	equ	0xFF7
 25328                           tblptrl	equ	0xFF6
 25329                           tablat	equ	0xFF5
 25330                           prodh	equ	0xFF4
 25331                           prodl	equ	0xFF3
 25332                           intcon	equ	0xFF2
 25333                           intcon2	equ	0xFF1
 25334                           intcon3	equ	0xFF0
 25335                           indf0	equ	0xFEF
 25336                           postinc0	equ	0xFEE
 25337                           fsr0h	equ	0xFEA
 25338                           fsr0l	equ	0xFE9
 25339                           wreg	equ	0xFE8
 25340                           indf1	equ	0xFE7
 25341                           postdec1	equ	0xFE5
 25342                           plusw1	equ	0xFE3
 25343                           fsr1h	equ	0xFE2
 25344                           fsr1l	equ	0xFE1
 25345                           indf2	equ	0xFDF
 25346                           postinc2	equ	0xFDE
 25347                           postdec2	equ	0xFDD
 25348                           plusw2	equ	0xFDB
 25349                           fsr2h	equ	0xFDA
 25350                           fsr2l	equ	0xFD9
 25351                           status	equ	0xFD8
 25352                           
 25353 ;; *************** function _bootloader_get_rec_checksum *****************
 25354 ;; Defined at:
 25355 ;;		line 501 in file "bootloader.c"
 25356 ;; Parameters:    Size  Location     Type
 25357 ;;		None
 25358 ;; Auto vars:     Size  Location     Type
 25359 ;;		None
 25360 ;; Return value:  Size  Location     Type
 25361 ;;                  1    wreg      unsigned char 
 25362 ;; Registers used:
 25363 ;;		wreg, status,2
 25364 ;; Tracked objects:
 25365 ;;		On entry : 0/0
 25366 ;;		On exit  : 0/0
 25367 ;;		Unchanged: 0/0
 25368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25373 ;;Total ram usage:        0 bytes
 25374 ;; Hardware stack levels used:    1
 25375 ;; This function calls:
 25376 ;;		Nothing
 25377 ;; This function is called by:
 25378 ;;		__fill_buffer_get_bootloader_details
 25379 ;; This function uses a non-reentrant model
 25380 ;;
 25381                           
 25382                           	psect	text120
 25383  008FB8                     __ptext120:
 25384                           	opt stack 0
 25385  008FB8                     _bootloader_get_rec_checksum:
 25386                           	opt stack 28
 25387                           
 25388                           ;bootloader.c: 503: return hex_file_entry.checksum;
 25389                           
 25390                           ; BSR set to: 1
 25391                           ;incstack = 0
 25392  008FB8  0101               	movlb	1	; () banked
 25393  008FBA  51A8               	movf	(_hex_file_entry+21)& (0+255),w,b
 25394  008FBC  0012               	return	
 25395  008FBE                     __end_of_bootloader_get_rec_checksum:
 25396                           	opt stack 0
 25397                           tosu	equ	0xFFF
 25398                           tosh	equ	0xFFE
 25399                           tosl	equ	0xFFD
 25400                           pclath	equ	0xFFA
 25401                           tblptru	equ	0xFF8
 25402                           tblptrh	equ	0xFF7
 25403                           tblptrl	equ	0xFF6
 25404                           tablat	equ	0xFF5
 25405                           prodh	equ	0xFF4
 25406                           prodl	equ	0xFF3
 25407                           intcon	equ	0xFF2
 25408                           intcon2	equ	0xFF1
 25409                           intcon3	equ	0xFF0
 25410                           indf0	equ	0xFEF
 25411                           postinc0	equ	0xFEE
 25412                           fsr0h	equ	0xFEA
 25413                           fsr0l	equ	0xFE9
 25414                           wreg	equ	0xFE8
 25415                           indf1	equ	0xFE7
 25416                           postdec1	equ	0xFE5
 25417                           plusw1	equ	0xFE3
 25418                           fsr1h	equ	0xFE2
 25419                           fsr1l	equ	0xFE1
 25420                           indf2	equ	0xFDF
 25421                           postinc2	equ	0xFDE
 25422                           postdec2	equ	0xFDD
 25423                           plusw2	equ	0xFDB
 25424                           fsr2h	equ	0xFDA
 25425                           fsr2l	equ	0xFD9
 25426                           status	equ	0xFD8
 25427                           
 25428 ;; *************** function __fill_buffer_find_file *****************
 25429 ;; Defined at:
 25430 ;;		line 372 in file "api.c"
 25431 ;; Parameters:    Size  Location     Type
 25432 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 25433 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25434 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25435 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25436 ;; Auto vars:     Size  Location     Type
 25437 ;;  cntr            1   62[COMRAM] unsigned char 
 25438 ;; Return value:  Size  Location     Type
 25439 ;;                  1    wreg      void 
 25440 ;; Registers used:
 25441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25442 ;; Tracked objects:
 25443 ;;		On entry : 0/0
 25444 ;;		On exit  : 0/0
 25445 ;;		Unchanged: 0/0
 25446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25450 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25451 ;;Total ram usage:        9 bytes
 25452 ;; Hardware stack levels used:    1
 25453 ;; Hardware stack levels required when called:    6
 25454 ;; This function calls:
 25455 ;;		_fat_find_file
 25456 ;; This function is called by:
 25457 ;;		_api_prepare
 25458 ;; This function uses a non-reentrant model
 25459 ;;
 25460                           
 25461                           	psect	text121
 25462  0069B8                     __ptext121:
 25463                           	opt stack 0
 25464  0069B8                     __fill_buffer_find_file:
 25465                           	opt stack 23
 25466                           
 25467                           ;api.c: 374: uint8_t cntr;;api.c: 377: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25468                           
 25469                           ; BSR set to: 1
 25470                           ;incstack = 0
 25471  0069B8  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25472  0069BC  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25473  0069C0  0E81               	movlw	129
 25474  0069C2  6EDF               	movwf	indf2,c
 25475                           
 25476                           ;api.c: 380: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25477  0069C4  EE20 F001          	lfsr	2,1
 25478  0069C8  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25479  0069CA  26D9               	addwf	fsr2l,f,c
 25480  0069CC  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25481  0069CE  22DA               	addwfc	fsr2h,f,c
 25482  0069D0  0EC1               	movlw	193
 25483  0069D2  6EDF               	movwf	indf2,c
 25484                           
 25485                           ;api.c: 381: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25486  0069D4  EE20 F002          	lfsr	2,2
 25487  0069D8  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25488  0069DA  26D9               	addwf	fsr2l,f,c
 25489  0069DC  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25490  0069DE  22DA               	addwfc	fsr2h,f,c
 25491  0069E0  0E25               	movlw	37
 25492  0069E2  6EDF               	movwf	indf2,c
 25493                           
 25494                           ;api.c: 384: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25495  0069E4  0E01               	movlw	1
 25496  0069E6  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25497  0069E8  6E2C               	movwf	fat_find_file@name,c
 25498  0069EA  0E00               	movlw	0
 25499  0069EC  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25500  0069EE  6E2D               	movwf	fat_find_file@name+1,c
 25501  0069F0  0E09               	movlw	9
 25502  0069F2  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25503  0069F4  6E2E               	movwf	fat_find_file@extension,c
 25504  0069F6  0E00               	movlw	0
 25505  0069F8  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25506  0069FA  6E2F               	movwf	fat_find_file@extension+1,c
 25507  0069FC  EC61  F02C         	call	_fat_find_file	;wreg free
 25508  006A00  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25509  006A02  EE20 F003          	lfsr	2,3
 25510  006A06  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25511  006A08  26D9               	addwf	fsr2l,f,c
 25512  006A0A  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25513  006A0C  22DA               	addwfc	fsr2h,f,c
 25514  006A0E  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 25515                           
 25516                           ;api.c: 387: for(cntr=0; cntr<11; ++cntr)
 25517  006A12  0E00               	movlw	0
 25518  006A14  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 25519  006A16                     l14489:
 25520  006A16  0E0A               	movlw	10
 25521  006A18  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 25522  006A1A  D001               	goto	l2761
 25523  006A1C  0012               	return	
 25524  006A1E                     l2761:
 25525                           
 25526                           ;api.c: 388: {;api.c: 389: outBuffer[cntr+12] = inBuffer[cntr+1];
 25527  006A1E  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25528  006A20  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25529  006A22  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 25530  006A24  0E01               	movlw	1
 25531  006A26  263B               	addwf	??__fill_buffer_find_file,f,c
 25532  006A28  0E00               	movlw	0
 25533  006A2A  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 25534  006A2C  503B               	movf	??__fill_buffer_find_file,w,c
 25535  006A2E  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25536  006A30  6ED9               	movwf	fsr2l,c
 25537  006A32  503C               	movf	??__fill_buffer_find_file+1,w,c
 25538  006A34  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25539  006A36  6EDA               	movwf	fsr2h,c
 25540  006A38  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25541  006A3A  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 25542  006A3C  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 25543  006A3E  0E0C               	movlw	12
 25544  006A40  263D               	addwf	??__fill_buffer_find_file+2,f,c
 25545  006A42  0E00               	movlw	0
 25546  006A44  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 25547  006A46  503D               	movf	??__fill_buffer_find_file+2,w,c
 25548  006A48  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 25549  006A4A  6EE1               	movwf	fsr1l,c
 25550  006A4C  503E               	movf	??__fill_buffer_find_file+3,w,c
 25551  006A4E  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 25552  006A50  6EE2               	movwf	fsr1h,c
 25553  006A52  CFDF FFE7          	movff	indf2,indf1
 25554  006A56  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 25555  006A58  D7DE               	goto	l14489
 25556  006A5A                     __end_of__fill_buffer_find_file:
 25557                           	opt stack 0
 25558                           tosu	equ	0xFFF
 25559                           tosh	equ	0xFFE
 25560                           tosl	equ	0xFFD
 25561                           pclath	equ	0xFFA
 25562                           tblptru	equ	0xFF8
 25563                           tblptrh	equ	0xFF7
 25564                           tblptrl	equ	0xFF6
 25565                           tablat	equ	0xFF5
 25566                           prodh	equ	0xFF4
 25567                           prodl	equ	0xFF3
 25568                           intcon	equ	0xFF2
 25569                           intcon2	equ	0xFF1
 25570                           intcon3	equ	0xFF0
 25571                           indf0	equ	0xFEF
 25572                           postinc0	equ	0xFEE
 25573                           fsr0h	equ	0xFEA
 25574                           fsr0l	equ	0xFE9
 25575                           wreg	equ	0xFE8
 25576                           indf1	equ	0xFE7
 25577                           postdec1	equ	0xFE5
 25578                           plusw1	equ	0xFE3
 25579                           fsr1h	equ	0xFE2
 25580                           fsr1l	equ	0xFE1
 25581                           indf2	equ	0xFDF
 25582                           postinc2	equ	0xFDE
 25583                           postdec2	equ	0xFDD
 25584                           plusw2	equ	0xFDB
 25585                           fsr2h	equ	0xFDA
 25586                           fsr2l	equ	0xFD9
 25587                           status	equ	0xFD8
 25588                           
 25589 ;; *************** function _api_parse *****************
 25590 ;; Defined at:
 25591 ;;		line 142 in file "api.c"
 25592 ;; Parameters:    Size  Location     Type
 25593 ;;  inBuffer        2   59[BANK0 ] PTR unsigned char 
 25594 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25595 ;;  receivedData    1   61[BANK0 ] unsigned char 
 25596 ;; Auto vars:     Size  Location     Type
 25597 ;;  idx             1   64[BANK0 ] unsigned char 
 25598 ;; Return value:  Size  Location     Type
 25599 ;;                  1    wreg      void 
 25600 ;; Registers used:
 25601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25602 ;; Tracked objects:
 25603 ;;		On entry : 0/0
 25604 ;;		On exit  : 0/0
 25605 ;;		Unchanged: 0/0
 25606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25607 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25610 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25611 ;;Total ram usage:        6 bytes
 25612 ;; Hardware stack levels used:    1
 25613 ;; Hardware stack levels required when called:   11
 25614 ;; This function calls:
 25615 ;;		__parse_command_long
 25616 ;;		__parse_command_short
 25617 ;; This function is called by:
 25618 ;;		_main
 25619 ;;		_APP_DeviceCustomHIDTasks
 25620 ;; This function uses a non-reentrant model
 25621 ;;
 25622                           
 25623                           	psect	text122
 25624  005C22                     __ptext122:
 25625                           	opt stack 0
 25626  005C22                     _api_parse:
 25627                           	opt stack 19
 25628                           
 25629                           ;api.c: 146: uint8_t idx;;api.c: 148: if(inBuffer[0]>0x7F)
 25630                           
 25631                           ;incstack = 0
 25632  005C22  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25633  005C26  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25634  005C2A  0E7F               	movlw	127
 25635  005C2C  64DF               	cpfsgt	indf2,c
 25636  005C2E  D001               	goto	l2718
 25637  005C30  0012               	return	
 25638  005C32                     l2718:
 25639                           
 25640                           ;api.c: 153: };api.c: 155: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25641  005C32  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25642  005C36  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25643  005C3A  0E20               	movlw	32
 25644  005C3C  18DE               	xorwf	postinc2,w,c
 25645  005C3E  B4D8               	btfsc	status,2,c
 25646  005C40  0012               	return	
 25647                           
 25648                           ;api.c: 160: };api.c: 162: idx = 1;
 25649                           
 25650                           ;api.c: 156: {;api.c: 159: return;
 25651  005C42  0E01               	movlw	1
 25652  005C44  0100               	movlb	0	; () banked
 25653  005C46  6FA0               	movwf	api_parse@idx& (0+255),b
 25654                           
 25655                           ;api.c: 163: while(idx<receivedDataLength)
 25656  005C48  D04F               	goto	l2726
 25657  005C4A                     
 25658                           ; BSR set to: 0
 25659                           ;api.c: 164: {;api.c: 166: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 25660                           
 25661                           ; BSR set to: 0
 25662  005C4A  51A0               	movf	api_parse@idx& (0+255),w,b
 25663  005C4C  0D01               	mullw	1
 25664  005C4E  50F3               	movf	prodl,w,c
 25665  005C50  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25666  005C52  6ED9               	movwf	fsr2l,c
 25667  005C54  50F4               	movf	prodh,w,c
 25668  005C56  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25669  005C58  6EDA               	movwf	fsr2h,c
 25670  005C5A  0E99               	movlw	153
 25671  005C5C  18DE               	xorwf	postinc2,w,c
 25672  005C5E  B4D8               	btfsc	status,2,c
 25673  005C60  0012               	return	
 25674  005C62  D027               	goto	l2724
 25675  005C64                     
 25676                           ; BSR set to: 0
 25677                           ;api.c: 174: _parse_command_short(inBuffer[idx]);
 25678                           
 25679                           ; BSR set to: 0
 25680  005C64  51A0               	movf	api_parse@idx& (0+255),w,b
 25681  005C66  0D01               	mullw	1
 25682  005C68  50F3               	movf	prodl,w,c
 25683  005C6A  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25684  005C6C  6ED9               	movwf	fsr2l,c
 25685  005C6E  50F4               	movf	prodh,w,c
 25686  005C70  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25687  005C72  6EDA               	movwf	fsr2h,c
 25688  005C74  50DF               	movf	indf2,w,c
 25689  005C76  EC8B  F031         	call	__parse_command_short
 25690  005C7A  D00B               	goto	l15089
 25691  005C7C                     
 25692                           ; BSR set to: 0
 25693                           ;api.c: 179: _parse_command_short(inBuffer[idx]);
 25694                           
 25695                           ; BSR set to: 0
 25696  005C7C  51A0               	movf	api_parse@idx& (0+255),w,b
 25697  005C7E  0D01               	mullw	1
 25698  005C80  50F3               	movf	prodl,w,c
 25699  005C82  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25700  005C84  6ED9               	movwf	fsr2l,c
 25701  005C86  50F4               	movf	prodh,w,c
 25702  005C88  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25703  005C8A  6EDA               	movwf	fsr2h,c
 25704  005C8C  50DF               	movf	indf2,w,c
 25705  005C8E  EC8B  F031         	call	__parse_command_short
 25706  005C92                     l15089:
 25707                           
 25708                           ;api.c: 180: ++idx;
 25709  005C92  0100               	movlb	0	; () banked
 25710  005C94  2BA0               	incf	api_parse@idx& (0+255),f,b
 25711                           
 25712                           ;api.c: 181: break;
 25713  005C96  D028               	goto	l2726
 25714  005C98                     
 25715                           ; BSR set to: 0
 25716                           ;api.c: 184: idx += _parse_command_long(&inBuffer[idx]);
 25717                           
 25718                           ; BSR set to: 0
 25719  005C98  51A0               	movf	api_parse@idx& (0+255),w,b
 25720  005C9A  0D01               	mullw	1
 25721  005C9C  50F3               	movf	prodl,w,c
 25722  005C9E  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25723  005CA0  6F98               	movwf	__parse_command_long@data& (0+255),b
 25724  005CA2  50F4               	movf	prodh,w,c
 25725  005CA4  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25726  005CA6  6F99               	movwf	(__parse_command_long@data+1)& (0+255),b
 25727  005CA8  EC0F  F02B         	call	__parse_command_long	;wreg free
 25728  005CAC  0100               	movlb	0	; () banked
 25729  005CAE  27A0               	addwf	api_parse@idx& (0+255),f,b
 25730                           
 25731                           ;api.c: 185: break;
 25732  005CB0  D01B               	goto	l2726
 25733  005CB2                     l2724:
 25734                           
 25735                           ; BSR set to: 0
 25736                           
 25737                           ; BSR set to: 0
 25738  005CB2  51A0               	movf	api_parse@idx& (0+255),w,b
 25739  005CB4  0D01               	mullw	1
 25740  005CB6  50F3               	movf	prodl,w,c
 25741  005CB8  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25742  005CBA  6ED9               	movwf	fsr2l,c
 25743  005CBC  50F4               	movf	prodh,w,c
 25744  005CBE  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25745  005CC0  6EDA               	movwf	fsr2h,c
 25746  005CC2  50DF               	movf	indf2,w,c
 25747  005CC4  0BF0               	andlw	240
 25748  005CC6  6F9E               	movwf	??_api_parse& (0+255),b
 25749  005CC8  6B9F               	clrf	(??_api_parse+1)& (0+255),b
 25750                           
 25751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25752                           ; Switch size 1, requested type "space"
 25753                           ; Number of cases is 1, Range of values is 0 to 0
 25754                           ; switch strategies available:
 25755                           ; Name         Instructions Cycles
 25756                           ; simple_byte            4     3 (average)
 25757                           ;	Chosen strategy is simple_byte
 25758  005CCA  519F               	movf	(??_api_parse+1)& (0+255),w,b
 25759  005CCC  0A00               	xorlw	0	; case 0
 25760  005CCE  A4D8               	btfss	status,2,c
 25761  005CD0  0012               	return	
 25762                           
 25763                           ; BSR set to: 0
 25764                           ; Switch size 1, requested type "space"
 25765                           ; Number of cases is 3, Range of values is 32 to 80
 25766                           ; switch strategies available:
 25767                           ; Name         Instructions Cycles
 25768                           ; simple_byte           10     6 (average)
 25769                           ;	Chosen strategy is simple_byte
 25770  005CD2  519E               	movf	??_api_parse& (0+255),w,b
 25771  005CD4  0A20               	xorlw	32	; case 32
 25772  005CD6  B4D8               	btfsc	status,2,c
 25773  005CD8  D7C5               	goto	l2725
 25774  005CDA  0A10               	xorlw	16	; case 48
 25775  005CDC  B4D8               	btfsc	status,2,c
 25776  005CDE  D7CE               	goto	l2727
 25777  005CE0  0A60               	xorlw	96	; case 80
 25778  005CE2  A4D8               	btfss	status,2,c
 25779  005CE4  0012               	return	
 25780  005CE6  D7D8               	goto	l2728
 25781  005CE8                     l2726:
 25782                           
 25783                           ; BSR set to: 0
 25784                           
 25785                           ; BSR set to: 0
 25786                           
 25787                           ; BSR set to: 0
 25788  005CE8  519D               	movf	api_parse@receivedDataLength& (0+255),w,b
 25789  005CEA  5DA0               	subwf	api_parse@idx& (0+255),w,b
 25790  005CEC  B0D8               	btfsc	status,0,c
 25791  005CEE  0012               	return	
 25792  005CF0  D7AC               	goto	l2722
 25793  005CF2                     __end_of_api_parse:
 25794                           	opt stack 0
 25795                           tosu	equ	0xFFF
 25796                           tosh	equ	0xFFE
 25797                           tosl	equ	0xFFD
 25798                           pclath	equ	0xFFA
 25799                           tblptru	equ	0xFF8
 25800                           tblptrh	equ	0xFF7
 25801                           tblptrl	equ	0xFF6
 25802                           tablat	equ	0xFF5
 25803                           prodh	equ	0xFF4
 25804                           prodl	equ	0xFF3
 25805                           intcon	equ	0xFF2
 25806                           intcon2	equ	0xFF1
 25807                           intcon3	equ	0xFF0
 25808                           indf0	equ	0xFEF
 25809                           postinc0	equ	0xFEE
 25810                           fsr0h	equ	0xFEA
 25811                           fsr0l	equ	0xFE9
 25812                           wreg	equ	0xFE8
 25813                           indf1	equ	0xFE7
 25814                           postdec1	equ	0xFE5
 25815                           plusw1	equ	0xFE3
 25816                           fsr1h	equ	0xFE2
 25817                           fsr1l	equ	0xFE1
 25818                           indf2	equ	0xFDF
 25819                           postinc2	equ	0xFDE
 25820                           postdec2	equ	0xFDD
 25821                           plusw2	equ	0xFDB
 25822                           fsr2h	equ	0xFDA
 25823                           fsr2l	equ	0xFD9
 25824                           status	equ	0xFD8
 25825                           
 25826 ;; *************** function __parse_command_short *****************
 25827 ;; Defined at:
 25828 ;;		line 477 in file "api.c"
 25829 ;; Parameters:    Size  Location     Type
 25830 ;;  cmd             1    wreg     unsigned char 
 25831 ;; Auto vars:     Size  Location     Type
 25832 ;;  cmd             1   43[COMRAM] unsigned char 
 25833 ;; Return value:  Size  Location     Type
 25834 ;;                  1    wreg      void 
 25835 ;; Registers used:
 25836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25837 ;; Tracked objects:
 25838 ;;		On entry : 0/0
 25839 ;;		On exit  : 0/0
 25840 ;;		Unchanged: 0/0
 25841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25846 ;;Total ram usage:        1 bytes
 25847 ;; Hardware stack levels used:    1
 25848 ;; Hardware stack levels required when called:    8
 25849 ;; This function calls:
 25850 ;;		_i2c_eeprom_writeByte
 25851 ;;		_reboot
 25852 ;;		_system_delay_ms
 25853 ;; This function is called by:
 25854 ;;		_api_parse
 25855 ;; This function uses a non-reentrant model
 25856 ;;
 25857                           
 25858                           	psect	text123
 25859  006316                     __ptext123:
 25860                           	opt stack 0
 25861  006316                     __parse_command_short:
 25862                           	opt stack 21
 25863                           
 25864                           ;incstack = 0
 25865                           ;__parse_command_short@cmd stored from wreg
 25866  006316  6E2C               	movwf	__parse_command_short@cmd,c
 25867                           
 25868                           ;api.c: 479: switch(cmd)
 25869  006318  D041               	goto	l2774
 25870  00631A                     
 25871                           ;api.c: 482: i2c_eeprom_writeByte(0x100, 0x00);
 25872  00631A  0E01               	movlw	1
 25873  00631C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25874  00631E  0E00               	movlw	0
 25875  006320  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25876  006322  0E00               	movlw	0
 25877  006324  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25878  006326  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25879                           
 25880                           ;api.c: 483: system_delay_ms(10);
 25881  00632A  0E0A               	movlw	10
 25882  00632C  ECDA  F045         	call	_system_delay_ms
 25883                           
 25884                           ;api.c: 484: reboot();
 25885  006330  ECD5  F046         	call	_reboot	;wreg free
 25886                           
 25887                           ;api.c: 485: break;
 25888  006334  0012               	return	
 25889  006336                     
 25890                           ;api.c: 488: i2c_eeprom_writeByte(0x100, 0x94);
 25891  006336  0E01               	movlw	1
 25892  006338  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25893  00633A  0E00               	movlw	0
 25894  00633C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25895  00633E  0E94               	movlw	148
 25896  006340  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25897  006342  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25898                           
 25899                           ;api.c: 489: system_delay_ms(10);
 25900  006346  0E0A               	movlw	10
 25901  006348  ECDA  F045         	call	_system_delay_ms
 25902                           
 25903                           ;api.c: 490: reboot();
 25904  00634C  ECD5  F046         	call	_reboot	;wreg free
 25905                           
 25906                           ;api.c: 491: break;
 25907  006350  0012               	return	
 25908  006352                     
 25909                           ;api.c: 494: i2c_eeprom_writeByte(0x100, 0x78);
 25910  006352  0E01               	movlw	1
 25911  006354  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25912  006356  0E00               	movlw	0
 25913  006358  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25914  00635A  0E78               	movlw	120
 25915  00635C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25916  00635E  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25917                           
 25918                           ;api.c: 495: system_delay_ms(10);
 25919  006362  0E0A               	movlw	10
 25920  006364  ECDA  F045         	call	_system_delay_ms
 25921                           
 25922                           ;api.c: 496: reboot();
 25923  006368  ECD5  F046         	call	_reboot	;wreg free
 25924                           
 25925                           ;api.c: 497: break;
 25926  00636C  0012               	return	
 25927  00636E                     
 25928                           ;api.c: 501: i2c_eeprom_writeByte(0x100, 0x78);
 25929  00636E  0E01               	movlw	1
 25930  006370  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25931  006372  0E00               	movlw	0
 25932  006374  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25933  006376  0E78               	movlw	120
 25934  006378  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25935  00637A  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25936                           
 25937                           ;api.c: 502: system_delay_ms(10);
 25938  00637E  0E0A               	movlw	10
 25939  006380  ECDA  F045         	call	_system_delay_ms
 25940                           
 25941                           ;api.c: 503: reboot();
 25942  006384  ECD5  F046         	call	_reboot	;wreg free
 25943                           
 25944                           ;api.c: 504: break;
 25945  006388  0012               	return	
 25946  00638A                     
 25947                           ;api.c: 507: --os.encoderCount;
 25948  00638A  0100               	movlb	0	; () banked
 25949  00638C  07C5               	decf	_os& (0+255),f,b	;volatile
 25950                           
 25951                           ;api.c: 508: break;
 25952  00638E  0012               	return	
 25953  006390                     
 25954                           ;api.c: 511: ++os.encoderCount;
 25955                           
 25956                           ; BSR set to: 0
 25957  006390  0100               	movlb	0	; () banked
 25958  006392  2BC5               	incf	_os& (0+255),f,b	;volatile
 25959                           
 25960                           ;api.c: 512: break;
 25961  006394  0012               	return	
 25962  006396                     
 25963                           ;api.c: 515: ++os.buttonCount;
 25964                           
 25965                           ; BSR set to: 0
 25966  006396  0100               	movlb	0	; () banked
 25967  006398  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
 25968                           
 25969                           ; BSR set to: 0
 25970                           ;api.c: 517: }
 25971                           
 25972                           ;api.c: 516: break;
 25973  00639A  0012               	return	
 25974  00639C                     l2774:
 25975                           
 25976                           ; BSR set to: 0
 25977  00639C  502C               	movf	__parse_command_short@cmd,w,c
 25978                           
 25979                           ; Switch size 1, requested type "space"
 25980                           ; Number of cases is 7, Range of values is 32 to 62
 25981                           ; switch strategies available:
 25982                           ; Name         Instructions Cycles
 25983                           ; simple_byte           22    12 (average)
 25984                           ;	Chosen strategy is simple_byte
 25985  00639E  0A20               	xorlw	32	; case 32
 25986  0063A0  B4D8               	btfsc	status,2,c
 25987  0063A2  D7BB               	goto	l2775
 25988  0063A4  0A01               	xorlw	1	; case 33
 25989  0063A6  B4D8               	btfsc	status,2,c
 25990  0063A8  D7C6               	goto	l2777
 25991  0063AA  0A03               	xorlw	3	; case 34
 25992  0063AC  B4D8               	btfsc	status,2,c
 25993  0063AE  D7D1               	goto	l2778
 25994  0063B0  0A01               	xorlw	1	; case 35
 25995  0063B2  B4D8               	btfsc	status,2,c
 25996  0063B4  D7DC               	goto	l2779
 25997  0063B6  0A1F               	xorlw	31	; case 60
 25998  0063B8  B4D8               	btfsc	status,2,c
 25999  0063BA  D7E7               	goto	l2780
 26000  0063BC  0A01               	xorlw	1	; case 61
 26001  0063BE  B4D8               	btfsc	status,2,c
 26002  0063C0  D7E7               	goto	l2781
 26003  0063C2  0A03               	xorlw	3	; case 62
 26004  0063C4  A4D8               	btfss	status,2,c
 26005  0063C6  0012               	return	
 26006  0063C8  D7E6               	goto	l2782
 26007  0063CA                     __end_of__parse_command_short:
 26008                           	opt stack 0
 26009                           tosu	equ	0xFFF
 26010                           tosh	equ	0xFFE
 26011                           tosl	equ	0xFFD
 26012                           pclath	equ	0xFFA
 26013                           tblptru	equ	0xFF8
 26014                           tblptrh	equ	0xFF7
 26015                           tblptrl	equ	0xFF6
 26016                           tablat	equ	0xFF5
 26017                           prodh	equ	0xFF4
 26018                           prodl	equ	0xFF3
 26019                           intcon	equ	0xFF2
 26020                           intcon2	equ	0xFF1
 26021                           intcon3	equ	0xFF0
 26022                           indf0	equ	0xFEF
 26023                           postinc0	equ	0xFEE
 26024                           fsr0h	equ	0xFEA
 26025                           fsr0l	equ	0xFE9
 26026                           wreg	equ	0xFE8
 26027                           indf1	equ	0xFE7
 26028                           postdec1	equ	0xFE5
 26029                           plusw1	equ	0xFE3
 26030                           fsr1h	equ	0xFE2
 26031                           fsr1l	equ	0xFE1
 26032                           indf2	equ	0xFDF
 26033                           postinc2	equ	0xFDE
 26034                           postdec2	equ	0xFDD
 26035                           plusw2	equ	0xFDB
 26036                           fsr2h	equ	0xFDA
 26037                           fsr2l	equ	0xFD9
 26038                           status	equ	0xFD8
 26039                           
 26040 ;; *************** function _system_delay_ms *****************
 26041 ;; Defined at:
 26042 ;;		line 63 in file "os.c"
 26043 ;; Parameters:    Size  Location     Type
 26044 ;;  ms              1    wreg     unsigned char 
 26045 ;; Auto vars:     Size  Location     Type
 26046 ;;  ms              1    1[COMRAM] unsigned char 
 26047 ;;  cntr            1    2[COMRAM] unsigned char 
 26048 ;; Return value:  Size  Location     Type
 26049 ;;                  1    wreg      void 
 26050 ;; Registers used:
 26051 ;;		wreg, status,2, status,0, cstack
 26052 ;; Tracked objects:
 26053 ;;		On entry : 0/0
 26054 ;;		On exit  : 0/0
 26055 ;;		Unchanged: 0/0
 26056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26060 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26061 ;;Total ram usage:        3 bytes
 26062 ;; Hardware stack levels used:    1
 26063 ;; This function calls:
 26064 ;;		Nothing
 26065 ;; This function is called by:
 26066 ;;		_system_minimal_init
 26067 ;;		__ui_encoder
 26068 ;;		__parse_command_short
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text124
 26073  008BB4                     __ptext124:
 26074                           	opt stack 0
 26075  008BB4                     _system_delay_ms:
 26076                           	opt stack 28
 26077                           
 26078                           ;incstack = 0
 26079                           ;system_delay_ms@ms stored from wreg
 26080  008BB4  6E02               	movwf	system_delay_ms@ms,c
 26081                           
 26082                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 26083  008BB6  0E00               	movlw	0
 26084  008BB8  6E03               	movwf	system_delay_ms@cntr,c
 26085  008BBA  D009               	goto	l1090
 26086  008BBC                     
 26087                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 26088  008BBC  0E10               	movlw	16
 26089  008BBE  6E01               	movwf	??_system_delay_ms& (0+255),c
 26090  008BC0  0E94               	movlw	148
 26091  008BC2                     u13237:
 26092  008BC2  2EE8               	decfsz	wreg,f,c
 26093  008BC4  D7FE               	bra	u13237
 26094  008BC6  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26095  008BC8  D7FC               	bra	u13237
 26096  008BCA  D000               	nop2	
 26097  008BCC  2A03               	incf	system_delay_ms@cntr,f,c
 26098  008BCE                     l1090:
 26099  008BCE  5002               	movf	system_delay_ms@ms,w,c
 26100  008BD0  5C03               	subwf	system_delay_ms@cntr,w,c
 26101  008BD2  B0D8               	btfsc	status,0,c
 26102  008BD4  0012               	return	
 26103  008BD6  D7F2               	goto	l1091
 26104  008BD8                     __end_of_system_delay_ms:
 26105                           	opt stack 0
 26106                           tosu	equ	0xFFF
 26107                           tosh	equ	0xFFE
 26108                           tosl	equ	0xFFD
 26109                           pclath	equ	0xFFA
 26110                           tblptru	equ	0xFF8
 26111                           tblptrh	equ	0xFF7
 26112                           tblptrl	equ	0xFF6
 26113                           tablat	equ	0xFF5
 26114                           prodh	equ	0xFF4
 26115                           prodl	equ	0xFF3
 26116                           intcon	equ	0xFF2
 26117                           intcon2	equ	0xFF1
 26118                           intcon3	equ	0xFF0
 26119                           indf0	equ	0xFEF
 26120                           postinc0	equ	0xFEE
 26121                           fsr0h	equ	0xFEA
 26122                           fsr0l	equ	0xFE9
 26123                           wreg	equ	0xFE8
 26124                           indf1	equ	0xFE7
 26125                           postdec1	equ	0xFE5
 26126                           plusw1	equ	0xFE3
 26127                           fsr1h	equ	0xFE2
 26128                           fsr1l	equ	0xFE1
 26129                           indf2	equ	0xFDF
 26130                           postinc2	equ	0xFDE
 26131                           postdec2	equ	0xFDD
 26132                           plusw2	equ	0xFDB
 26133                           fsr2h	equ	0xFDA
 26134                           fsr2l	equ	0xFD9
 26135                           status	equ	0xFD8
 26136                           
 26137 ;; *************** function _reboot *****************
 26138 ;; Defined at:
 26139 ;;		line 259 in file "os.c"
 26140 ;; Parameters:    Size  Location     Type
 26141 ;;		None
 26142 ;; Auto vars:     Size  Location     Type
 26143 ;;		None
 26144 ;; Return value:  Size  Location     Type
 26145 ;;                  1    wreg      void 
 26146 ;; Registers used:
 26147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26148 ;; Tracked objects:
 26149 ;;		On entry : 0/0
 26150 ;;		On exit  : 0/0
 26151 ;;		Unchanged: 0/0
 26152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26157 ;;Total ram usage:        0 bytes
 26158 ;; Hardware stack levels used:    1
 26159 ;; Hardware stack levels required when called:    7
 26160 ;; This function calls:
 26161 ;;		_display_prepare
 26162 ;;		_display_update
 26163 ;;		_ui_get_status
 26164 ;; This function is called by:
 26165 ;;		__ui_encoder
 26166 ;;		__parse_command_short
 26167 ;; This function uses a non-reentrant model
 26168 ;;
 26169                           
 26170                           	psect	text125
 26171  008DAA                     __ptext125:
 26172                           	opt stack 0
 26173  008DAA                     _reboot:
 26174                           	opt stack 21
 26175                           
 26176                           ;os.c: 262: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26177                           
 26178                           ;incstack = 0
 26179  008DAA  0E80               	movlw	128
 26180  008DAC  0100               	movlb	0	; () banked
 26181  008DAE  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 26182                           
 26183                           ; BSR set to: 0
 26184                           ;os.c: 263: display_prepare(os.display_mode);
 26185  008DB0  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
 26186  008DB2  ECA8  F02D         	call	_display_prepare
 26187                           
 26188                           ;os.c: 264: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26189  008DB6  ECDF  F047         	call	_ui_get_status	;wreg free
 26190  008DBA  0A05               	xorlw	5
 26191  008DBC  B4D8               	btfsc	status,2,c
 26192                           
 26193                           ;os.c: 265: {;os.c: 266: display_update();
 26194  008DBE  EC42  F03C         	call	_display_update	;wreg free
 26195  008DC2                     
 26196                           ;os.c: 267: };os.c: 270: while(1);
 26197  008DC2  D7FF               	goto	l1117
 26198  008DC4                     __end_of_reboot:
 26199                           	opt stack 0
 26200                           tosu	equ	0xFFF
 26201                           tosh	equ	0xFFE
 26202                           tosl	equ	0xFFD
 26203                           pclath	equ	0xFFA
 26204                           tblptru	equ	0xFF8
 26205                           tblptrh	equ	0xFF7
 26206                           tblptrl	equ	0xFF6
 26207                           tablat	equ	0xFF5
 26208                           prodh	equ	0xFF4
 26209                           prodl	equ	0xFF3
 26210                           intcon	equ	0xFF2
 26211                           intcon2	equ	0xFF1
 26212                           intcon3	equ	0xFF0
 26213                           indf0	equ	0xFEF
 26214                           postinc0	equ	0xFEE
 26215                           fsr0h	equ	0xFEA
 26216                           fsr0l	equ	0xFE9
 26217                           wreg	equ	0xFE8
 26218                           indf1	equ	0xFE7
 26219                           postdec1	equ	0xFE5
 26220                           plusw1	equ	0xFE3
 26221                           fsr1h	equ	0xFE2
 26222                           fsr1l	equ	0xFE1
 26223                           indf2	equ	0xFDF
 26224                           postinc2	equ	0xFDE
 26225                           postdec2	equ	0xFDD
 26226                           plusw2	equ	0xFDB
 26227                           fsr2h	equ	0xFDA
 26228                           fsr2l	equ	0xFD9
 26229                           status	equ	0xFD8
 26230                           
 26231 ;; *************** function _ui_get_status *****************
 26232 ;; Defined at:
 26233 ;;		line 95 in file "ui.c"
 26234 ;; Parameters:    Size  Location     Type
 26235 ;;		None
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;		None
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  1    wreg      enum E7928
 26240 ;; Registers used:
 26241 ;;		wreg, status,2
 26242 ;; Tracked objects:
 26243 ;;		On entry : 0/0
 26244 ;;		On exit  : 0/0
 26245 ;;		Unchanged: 0/0
 26246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26251 ;;Total ram usage:        0 bytes
 26252 ;; Hardware stack levels used:    1
 26253 ;; This function calls:
 26254 ;;		Nothing
 26255 ;; This function is called by:
 26256 ;;		_main
 26257 ;;		_reboot
 26258 ;;		__fill_buffer_get_status
 26259 ;; This function uses a non-reentrant model
 26260 ;;
 26261                           
 26262                           	psect	text126
 26263  008FBE                     __ptext126:
 26264                           	opt stack 0
 26265  008FBE                     _ui_get_status:
 26266                           	opt stack 27
 26267                           
 26268                           ;ui.c: 97: return userInterfaceStatus;
 26269                           
 26270                           ;incstack = 0
 26271  008FBE  0100               	movlb	0	; () banked
 26272  008FC0  51E6               	movf	_userInterfaceStatus& (0+255),w,b
 26273  008FC2  0012               	return	
 26274  008FC4                     __end_of_ui_get_status:
 26275                           	opt stack 0
 26276                           tosu	equ	0xFFF
 26277                           tosh	equ	0xFFE
 26278                           tosl	equ	0xFFD
 26279                           pclath	equ	0xFFA
 26280                           tblptru	equ	0xFF8
 26281                           tblptrh	equ	0xFF7
 26282                           tblptrl	equ	0xFF6
 26283                           tablat	equ	0xFF5
 26284                           prodh	equ	0xFF4
 26285                           prodl	equ	0xFF3
 26286                           intcon	equ	0xFF2
 26287                           intcon2	equ	0xFF1
 26288                           intcon3	equ	0xFF0
 26289                           indf0	equ	0xFEF
 26290                           postinc0	equ	0xFEE
 26291                           fsr0h	equ	0xFEA
 26292                           fsr0l	equ	0xFE9
 26293                           wreg	equ	0xFE8
 26294                           indf1	equ	0xFE7
 26295                           postdec1	equ	0xFE5
 26296                           plusw1	equ	0xFE3
 26297                           fsr1h	equ	0xFE2
 26298                           fsr1l	equ	0xFE1
 26299                           indf2	equ	0xFDF
 26300                           postinc2	equ	0xFDE
 26301                           postdec2	equ	0xFDD
 26302                           plusw2	equ	0xFDB
 26303                           fsr2h	equ	0xFDA
 26304                           fsr2l	equ	0xFD9
 26305                           status	equ	0xFD8
 26306                           
 26307 ;; *************** function _display_update *****************
 26308 ;; Defined at:
 26309 ;;		line 555 in file "display.c"
 26310 ;; Parameters:    Size  Location     Type
 26311 ;;		None
 26312 ;; Auto vars:     Size  Location     Type
 26313 ;;		None
 26314 ;; Return value:  Size  Location     Type
 26315 ;;                  1    wreg      void 
 26316 ;; Registers used:
 26317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26318 ;; Tracked objects:
 26319 ;;		On entry : 0/0
 26320 ;;		On exit  : 0/0
 26321 ;;		Unchanged: 0/0
 26322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26327 ;;Total ram usage:        0 bytes
 26328 ;; Hardware stack levels used:    1
 26329 ;; Hardware stack levels required when called:    4
 26330 ;; This function calls:
 26331 ;;		_i2c_display_cursor
 26332 ;;		_i2c_display_write_fixed
 26333 ;; This function is called by:
 26334 ;;		_main
 26335 ;;		_reboot
 26336 ;; This function uses a non-reentrant model
 26337 ;;
 26338                           
 26339                           	psect	text127
 26340  007884                     __ptext127:
 26341                           	opt stack 0
 26342  007884                     _display_update:
 26343                           	opt stack 23
 26344                           
 26345                           ;display.c: 557: i2c_display_cursor(0, 0);
 26346                           
 26347                           ; BSR set to: 0
 26348                           ;incstack = 0
 26349  007884  0E00               	movlw	0
 26350  007886  6E0E               	movwf	i2c_display_cursor@position,c
 26351  007888  0E00               	movlw	0
 26352  00788A  ECEC  F045         	call	_i2c_display_cursor
 26353                           
 26354                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 26355  00788E  0E00               	movlw	low _display_content
 26356  007890  6E06               	movwf	i2c_display_write_fixed@data,c
 26357  007892  0E02               	movlw	high _display_content
 26358  007894  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26359  007896  0E14               	movlw	20
 26360  007898  6E08               	movwf	i2c_display_write_fixed@length,c
 26361  00789A  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26362                           
 26363                           ;display.c: 559: i2c_display_cursor(1, 0);
 26364  00789E  0E00               	movlw	0
 26365  0078A0  6E0E               	movwf	i2c_display_cursor@position,c
 26366  0078A2  0E01               	movlw	1
 26367  0078A4  ECEC  F045         	call	_i2c_display_cursor
 26368                           
 26369                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 26370  0078A8  0E14               	movlw	low (_display_content+20)
 26371  0078AA  6E06               	movwf	i2c_display_write_fixed@data,c
 26372  0078AC  0E02               	movlw	high (_display_content+20)
 26373  0078AE  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26374  0078B0  0E14               	movlw	20
 26375  0078B2  6E08               	movwf	i2c_display_write_fixed@length,c
 26376  0078B4  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26377                           
 26378                           ;display.c: 561: i2c_display_cursor(2, 0);
 26379  0078B8  0E00               	movlw	0
 26380  0078BA  6E0E               	movwf	i2c_display_cursor@position,c
 26381  0078BC  0E02               	movlw	2
 26382  0078BE  ECEC  F045         	call	_i2c_display_cursor
 26383                           
 26384                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 26385  0078C2  0E28               	movlw	low (_display_content+40)
 26386  0078C4  6E06               	movwf	i2c_display_write_fixed@data,c
 26387  0078C6  0E02               	movlw	high (_display_content+40)
 26388  0078C8  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26389  0078CA  0E14               	movlw	20
 26390  0078CC  6E08               	movwf	i2c_display_write_fixed@length,c
 26391  0078CE  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26392                           
 26393                           ;display.c: 563: i2c_display_cursor(3, 0);
 26394  0078D2  0E00               	movlw	0
 26395  0078D4  6E0E               	movwf	i2c_display_cursor@position,c
 26396  0078D6  0E03               	movlw	3
 26397  0078D8  ECEC  F045         	call	_i2c_display_cursor
 26398                           
 26399                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 26400  0078DC  0E3C               	movlw	low (_display_content+60)
 26401  0078DE  6E06               	movwf	i2c_display_write_fixed@data,c
 26402  0078E0  0E02               	movlw	high (_display_content+60)
 26403  0078E2  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26404  0078E4  0E14               	movlw	20
 26405  0078E6  6E08               	movwf	i2c_display_write_fixed@length,c
 26406  0078E8  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26407  0078EC  0012               	return		;funcret
 26408  0078EE                     __end_of_display_update:
 26409                           	opt stack 0
 26410                           tosu	equ	0xFFF
 26411                           tosh	equ	0xFFE
 26412                           tosl	equ	0xFFD
 26413                           pclath	equ	0xFFA
 26414                           tblptru	equ	0xFF8
 26415                           tblptrh	equ	0xFF7
 26416                           tblptrl	equ	0xFF6
 26417                           tablat	equ	0xFF5
 26418                           prodh	equ	0xFF4
 26419                           prodl	equ	0xFF3
 26420                           intcon	equ	0xFF2
 26421                           intcon2	equ	0xFF1
 26422                           intcon3	equ	0xFF0
 26423                           indf0	equ	0xFEF
 26424                           postinc0	equ	0xFEE
 26425                           fsr0h	equ	0xFEA
 26426                           fsr0l	equ	0xFE9
 26427                           wreg	equ	0xFE8
 26428                           indf1	equ	0xFE7
 26429                           postdec1	equ	0xFE5
 26430                           plusw1	equ	0xFE3
 26431                           fsr1h	equ	0xFE2
 26432                           fsr1l	equ	0xFE1
 26433                           indf2	equ	0xFDF
 26434                           postinc2	equ	0xFDE
 26435                           postdec2	equ	0xFDD
 26436                           plusw2	equ	0xFDB
 26437                           fsr2h	equ	0xFDA
 26438                           fsr2l	equ	0xFD9
 26439                           status	equ	0xFD8
 26440                           
 26441 ;; *************** function _i2c_display_write_fixed *****************
 26442 ;; Defined at:
 26443 ;;		line 270 in file "i2c.c"
 26444 ;; Parameters:    Size  Location     Type
 26445 ;;  data            2    5[COMRAM] PTR unsigned char 
 26446 ;;		 -> display_content(80), 
 26447 ;;  length          1    7[COMRAM] unsigned char 
 26448 ;; Auto vars:     Size  Location     Type
 26449 ;;  pos             1    8[COMRAM] unsigned char 
 26450 ;; Return value:  Size  Location     Type
 26451 ;;                  1    wreg      void 
 26452 ;; Registers used:
 26453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26454 ;; Tracked objects:
 26455 ;;		On entry : 0/0
 26456 ;;		On exit  : 0/0
 26457 ;;		Unchanged: 0/0
 26458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26459 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26462 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26463 ;;Total ram usage:        4 bytes
 26464 ;; Hardware stack levels used:    1
 26465 ;; Hardware stack levels required when called:    1
 26466 ;; This function calls:
 26467 ;;		__i2c_send
 26468 ;;		__i2c_start
 26469 ;;		__i2c_stop
 26470 ;;		__i2c_wait_idle
 26471 ;;		_i2c_set_frequency
 26472 ;; This function is called by:
 26473 ;;		_display_update
 26474 ;; This function uses a non-reentrant model
 26475 ;;
 26476                           
 26477                           	psect	text128
 26478  007ED2                     __ptext128:
 26479                           	opt stack 0
 26480  007ED2                     _i2c_display_write_fixed:
 26481                           	opt stack 25
 26482                           
 26483                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26484                           
 26485                           ;incstack = 0
 26486  007ED2  0E02               	movlw	2
 26487  007ED4  EC12  F045         	call	_i2c_set_frequency
 26488                           
 26489                           ;i2c.c: 277: _i2c_wait_idle();
 26490  007ED8  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26491                           
 26492                           ;i2c.c: 278: _i2c_start();
 26493  007EDC  ECCB  F047         	call	__i2c_start	;wreg free
 26494                           
 26495                           ;i2c.c: 279: _i2c_wait_idle();
 26496  007EE0  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26497                           
 26498                           ;i2c.c: 280: _i2c_send(0b01111000);
 26499  007EE4  0E78               	movlw	120
 26500  007EE6  ECCF  F047         	call	__i2c_send
 26501                           
 26502                           ;i2c.c: 281: _i2c_wait_idle();
 26503  007EEA  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26504                           
 26505                           ;i2c.c: 282: _i2c_send(0b01000000);
 26506  007EEE  0E40               	movlw	64
 26507  007EF0  ECCF  F047         	call	__i2c_send
 26508                           
 26509                           ;i2c.c: 283: _i2c_wait_idle();
 26510  007EF4  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26511                           
 26512                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 26513  007EF8  0E00               	movlw	0
 26514  007EFA  6E09               	movwf	i2c_display_write_fixed@pos,c
 26515  007EFC  D00E               	goto	l1232
 26516  007EFE                     
 26517                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 26518  007EFE  5009               	movf	i2c_display_write_fixed@pos,w,c
 26519  007F00  0D01               	mullw	1
 26520  007F02  50F3               	movf	prodl,w,c
 26521  007F04  2406               	addwf	i2c_display_write_fixed@data,w,c
 26522  007F06  6ED9               	movwf	fsr2l,c
 26523  007F08  50F4               	movf	prodh,w,c
 26524  007F0A  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26525  007F0C  6EDA               	movwf	fsr2h,c
 26526  007F0E  50DF               	movf	indf2,w,c
 26527  007F10  ECCF  F047         	call	__i2c_send
 26528                           
 26529                           ;i2c.c: 289: _i2c_wait_idle();
 26530  007F14  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26531  007F18  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26532  007F1A                     l1232:
 26533  007F1A  5008               	movf	i2c_display_write_fixed@length,w,c
 26534  007F1C  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26535  007F1E  A0D8               	btfss	status,0,c
 26536  007F20  D7EE               	goto	l1233
 26537                           
 26538                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 26539  007F22  ECC7  F047         	call	__i2c_stop	;wreg free
 26540  007F26  0012               	return		;funcret
 26541  007F28                     __end_of_i2c_display_write_fixed:
 26542                           	opt stack 0
 26543                           tosu	equ	0xFFF
 26544                           tosh	equ	0xFFE
 26545                           tosl	equ	0xFFD
 26546                           pclath	equ	0xFFA
 26547                           tblptru	equ	0xFF8
 26548                           tblptrh	equ	0xFF7
 26549                           tblptrl	equ	0xFF6
 26550                           tablat	equ	0xFF5
 26551                           prodh	equ	0xFF4
 26552                           prodl	equ	0xFF3
 26553                           intcon	equ	0xFF2
 26554                           intcon2	equ	0xFF1
 26555                           intcon3	equ	0xFF0
 26556                           indf0	equ	0xFEF
 26557                           postinc0	equ	0xFEE
 26558                           fsr0h	equ	0xFEA
 26559                           fsr0l	equ	0xFE9
 26560                           wreg	equ	0xFE8
 26561                           indf1	equ	0xFE7
 26562                           postdec1	equ	0xFE5
 26563                           plusw1	equ	0xFE3
 26564                           fsr1h	equ	0xFE2
 26565                           fsr1l	equ	0xFE1
 26566                           indf2	equ	0xFDF
 26567                           postinc2	equ	0xFDE
 26568                           postdec2	equ	0xFDD
 26569                           plusw2	equ	0xFDB
 26570                           fsr2h	equ	0xFDA
 26571                           fsr2l	equ	0xFD9
 26572                           status	equ	0xFD8
 26573                           
 26574 ;; *************** function _i2c_display_cursor *****************
 26575 ;; Defined at:
 26576 ;;		line 230 in file "i2c.c"
 26577 ;; Parameters:    Size  Location     Type
 26578 ;;  line            1    wreg     unsigned char 
 26579 ;;  position        1   13[COMRAM] unsigned char 
 26580 ;; Auto vars:     Size  Location     Type
 26581 ;;  line            1   14[COMRAM] unsigned char 
 26582 ;;  address         1   15[COMRAM] unsigned char 
 26583 ;; Return value:  Size  Location     Type
 26584 ;;                  1    wreg      void 
 26585 ;; Registers used:
 26586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26587 ;; Tracked objects:
 26588 ;;		On entry : 0/0
 26589 ;;		On exit  : 0/0
 26590 ;;		Unchanged: 0/0
 26591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26592 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26596 ;;Total ram usage:        3 bytes
 26597 ;; Hardware stack levels used:    1
 26598 ;; Hardware stack levels required when called:    3
 26599 ;; This function calls:
 26600 ;;		__ic2_display_set_address
 26601 ;;		_i2c_set_frequency
 26602 ;; This function is called by:
 26603 ;;		_display_update
 26604 ;; This function uses a non-reentrant model
 26605 ;;
 26606                           
 26607                           	psect	text129
 26608  008BD8                     __ptext129:
 26609                           	opt stack 0
 26610  008BD8                     _i2c_display_cursor:
 26611                           	opt stack 23
 26612                           
 26613                           ;incstack = 0
 26614                           ;i2c_display_cursor@line stored from wreg
 26615  008BD8  6E0F               	movwf	i2c_display_cursor@line,c
 26616                           
 26617                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 26618  008BDA  0E03               	movlw	3
 26619  008BDC  160F               	andwf	i2c_display_cursor@line,f,c
 26620                           
 26621                           ;i2c.c: 236: address = line<<5;
 26622  008BDE  380F               	swapf	i2c_display_cursor@line,w,c
 26623  008BE0  46E8               	rlncf	wreg,f,c
 26624  008BE2  0BE0               	andlw	224
 26625  008BE4  6E10               	movwf	i2c_display_cursor@address,c
 26626                           
 26627                           ;i2c.c: 237: position &= 0b11111;
 26628  008BE6  0E1F               	movlw	31
 26629  008BE8  160E               	andwf	i2c_display_cursor@position,f,c
 26630                           
 26631                           ;i2c.c: 238: address |= position;
 26632  008BEA  500E               	movf	i2c_display_cursor@position,w,c
 26633  008BEC  1210               	iorwf	i2c_display_cursor@address,f,c
 26634                           
 26635                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26636  008BEE  0E02               	movlw	2
 26637  008BF0  EC12  F045         	call	_i2c_set_frequency
 26638                           
 26639                           ;i2c.c: 244: _ic2_display_set_address(address);
 26640  008BF4  5010               	movf	i2c_display_cursor@address,w,c
 26641  008BF6  EC8E  F045         	call	__ic2_display_set_address
 26642  008BFA  0012               	return		;funcret
 26643  008BFC                     __end_of_i2c_display_cursor:
 26644                           	opt stack 0
 26645                           tosu	equ	0xFFF
 26646                           tosh	equ	0xFFE
 26647                           tosl	equ	0xFFD
 26648                           pclath	equ	0xFFA
 26649                           tblptru	equ	0xFF8
 26650                           tblptrh	equ	0xFF7
 26651                           tblptrl	equ	0xFF6
 26652                           tablat	equ	0xFF5
 26653                           prodh	equ	0xFF4
 26654                           prodl	equ	0xFF3
 26655                           intcon	equ	0xFF2
 26656                           intcon2	equ	0xFF1
 26657                           intcon3	equ	0xFF0
 26658                           indf0	equ	0xFEF
 26659                           postinc0	equ	0xFEE
 26660                           fsr0h	equ	0xFEA
 26661                           fsr0l	equ	0xFE9
 26662                           wreg	equ	0xFE8
 26663                           indf1	equ	0xFE7
 26664                           postdec1	equ	0xFE5
 26665                           plusw1	equ	0xFE3
 26666                           fsr1h	equ	0xFE2
 26667                           fsr1l	equ	0xFE1
 26668                           indf2	equ	0xFDF
 26669                           postinc2	equ	0xFDE
 26670                           postdec2	equ	0xFDD
 26671                           plusw2	equ	0xFDB
 26672                           fsr2h	equ	0xFDA
 26673                           fsr2l	equ	0xFD9
 26674                           status	equ	0xFD8
 26675                           
 26676 ;; *************** function __ic2_display_set_address *****************
 26677 ;; Defined at:
 26678 ;;		line 194 in file "i2c.c"
 26679 ;; Parameters:    Size  Location     Type
 26680 ;;  address         1    wreg     unsigned char 
 26681 ;; Auto vars:     Size  Location     Type
 26682 ;;  address         1   10[COMRAM] unsigned char 
 26683 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26684 ;; Return value:  Size  Location     Type
 26685 ;;                  1    wreg      void 
 26686 ;; Registers used:
 26687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26688 ;; Tracked objects:
 26689 ;;		On entry : 0/0
 26690 ;;		On exit  : 0/0
 26691 ;;		Unchanged: 0/0
 26692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26694 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26696 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26697 ;;Total ram usage:        3 bytes
 26698 ;; Hardware stack levels used:    1
 26699 ;; Hardware stack levels required when called:    2
 26700 ;; This function calls:
 26701 ;;		__i2c_write
 26702 ;;		_i2c_set_frequency
 26703 ;; This function is called by:
 26704 ;;		_i2c_display_cursor
 26705 ;; This function uses a non-reentrant model
 26706 ;;
 26707                           
 26708                           	psect	text130
 26709  008B1C                     __ptext130:
 26710                           	opt stack 0
 26711  008B1C                     __ic2_display_set_address:
 26712                           	opt stack 23
 26713                           
 26714                           ;incstack = 0
 26715                           ;__ic2_display_set_address@address stored from wreg
 26716  008B1C  6E0B               	movwf	__ic2_display_set_address@address,c
 26717                           
 26718                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 26719  008B1E  0E00               	movlw	0
 26720  008B20  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26721                           
 26722                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 26723  008B22  500B               	movf	__ic2_display_set_address@address,w,c
 26724  008B24  0980               	iorlw	128
 26725  008B26  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26726                           
 26727                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26728  008B28  0E02               	movlw	2
 26729  008B2A  EC12  F045         	call	_i2c_set_frequency
 26730                           
 26731                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 26732  008B2E  0E0C               	movlw	low __ic2_display_set_address@data_array
 26733  008B30  6E06               	movwf	__i2c_write@data,c
 26734  008B32  0E00               	movlw	high __ic2_display_set_address@data_array
 26735  008B34  6E07               	movwf	__i2c_write@data+1,c
 26736  008B36  0E02               	movlw	2
 26737  008B38  6E08               	movwf	__i2c_write@length,c
 26738  008B3A  0E78               	movlw	120
 26739  008B3C  EC85  F041         	call	__i2c_write
 26740  008B40  0012               	return		;funcret
 26741  008B42                     __end_of__ic2_display_set_address:
 26742                           	opt stack 0
 26743                           tosu	equ	0xFFF
 26744                           tosh	equ	0xFFE
 26745                           tosl	equ	0xFFD
 26746                           pclath	equ	0xFFA
 26747                           tblptru	equ	0xFF8
 26748                           tblptrh	equ	0xFF7
 26749                           tblptrl	equ	0xFF6
 26750                           tablat	equ	0xFF5
 26751                           prodh	equ	0xFF4
 26752                           prodl	equ	0xFF3
 26753                           intcon	equ	0xFF2
 26754                           intcon2	equ	0xFF1
 26755                           intcon3	equ	0xFF0
 26756                           indf0	equ	0xFEF
 26757                           postinc0	equ	0xFEE
 26758                           fsr0h	equ	0xFEA
 26759                           fsr0l	equ	0xFE9
 26760                           wreg	equ	0xFE8
 26761                           indf1	equ	0xFE7
 26762                           postdec1	equ	0xFE5
 26763                           plusw1	equ	0xFE3
 26764                           fsr1h	equ	0xFE2
 26765                           fsr1l	equ	0xFE1
 26766                           indf2	equ	0xFDF
 26767                           postinc2	equ	0xFDE
 26768                           postdec2	equ	0xFDD
 26769                           plusw2	equ	0xFDB
 26770                           fsr2h	equ	0xFDA
 26771                           fsr2l	equ	0xFD9
 26772                           status	equ	0xFD8
 26773                           
 26774 ;; *************** function _display_prepare *****************
 26775 ;; Defined at:
 26776 ;;		line 286 in file "display.c"
 26777 ;; Parameters:    Size  Location     Type
 26778 ;;  mode            1    wreg     unsigned char 
 26779 ;; Auto vars:     Size  Location     Type
 26780 ;;  mode            1   42[COMRAM] unsigned char 
 26781 ;; Return value:  Size  Location     Type
 26782 ;;                  1    wreg      void 
 26783 ;; Registers used:
 26784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26785 ;; Tracked objects:
 26786 ;;		On entry : 0/0
 26787 ;;		On exit  : 0/0
 26788 ;;		Unchanged: 0/0
 26789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26793 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26794 ;;Total ram usage:        3 bytes
 26795 ;; Hardware stack levels used:    1
 26796 ;; Hardware stack levels required when called:    6
 26797 ;; This function calls:
 26798 ;;		__display_checked
 26799 ;;		__display_clear
 26800 ;;		__display_done
 26801 ;;		__display_failed
 26802 ;;		__display_found
 26803 ;;		__display_programming
 26804 ;;		__display_rebooting
 26805 ;;		__display_search
 26806 ;;		__display_start
 26807 ;;		__display_verify
 26808 ;; This function is called by:
 26809 ;;		_main
 26810 ;;		_reboot
 26811 ;; This function uses a non-reentrant model
 26812 ;;
 26813                           
 26814                           	psect	text131
 26815  005B50                     __ptext131:
 26816                           	opt stack 0
 26817  005B50                     _display_prepare:
 26818                           	opt stack 21
 26819                           
 26820                           ;incstack = 0
 26821                           ;display_prepare@mode stored from wreg
 26822  005B50  6E2B               	movwf	display_prepare@mode,c
 26823                           
 26824                           ;display.c: 288: _display_clear();
 26825  005B52  EC61  F041         	call	__display_clear	;wreg free
 26826                           
 26827                           ;display.c: 290: switch(mode&0xF0)
 26828  005B56  D01B               	goto	l1542
 26829  005B58                     
 26830                           ;display.c: 293: _display_start();
 26831  005B58  EC7C  F015         	call	__display_start	;wreg free
 26832                           
 26833                           ;display.c: 294: break;
 26834  005B5C  D047               	goto	l1553
 26835  005B5E                     
 26836                           ;display.c: 297: _display_search();
 26837  005B5E  ECA3  F01E         	call	__display_search	;wreg free
 26838                           
 26839                           ;display.c: 298: break;
 26840  005B62  D044               	goto	l1553
 26841  005B64                     
 26842                           ;display.c: 301: _display_found();
 26843  005B64  EC6B  F017         	call	__display_found	;wreg free
 26844                           
 26845                           ;display.c: 302: break;
 26846  005B68  D041               	goto	l1553
 26847  005B6A                     
 26848                           ;display.c: 305: _display_verify();
 26849  005B6A  EC30  F021         	call	__display_verify	;wreg free
 26850                           
 26851                           ;display.c: 306: break;
 26852  005B6E  D03E               	goto	l1553
 26853  005B70                     
 26854                           ;display.c: 309: _display_checked();
 26855  005B70  ECBD  F01B         	call	__display_checked	;wreg free
 26856                           
 26857                           ;display.c: 310: break;
 26858  005B74  D03B               	goto	l1553
 26859  005B76                     
 26860                           ;display.c: 313: _display_failed();
 26861  005B76  EC6E  F009         	call	__display_failed	;wreg free
 26862                           
 26863                           ;display.c: 314: break;
 26864  005B7A  D038               	goto	l1553
 26865  005B7C                     
 26866                           ;display.c: 317: _display_programming();
 26867  005B7C  EC47  F019         	call	__display_programming	;wreg free
 26868                           
 26869                           ;display.c: 318: break;
 26870  005B80  D035               	goto	l1553
 26871  005B82                     
 26872                           ;display.c: 321: _display_done();
 26873  005B82  EC7B  F01C         	call	__display_done	;wreg free
 26874                           
 26875                           ;display.c: 322: break;
 26876  005B86  D032               	goto	l1553
 26877  005B88                     
 26878                           ;display.c: 325: _display_rebooting();
 26879  005B88  EC94  F03F         	call	__display_rebooting	;wreg free
 26880                           
 26881                           ;display.c: 327: }
 26882                           
 26883                           ;display.c: 326: break;
 26884  005B8C  D02F               	goto	l1553
 26885  005B8E                     l1542:
 26886  005B8E  502B               	movf	display_prepare@mode,w,c
 26887  005B90  0BF0               	andlw	240
 26888  005B92  6E29               	movwf	??_display_prepare& (0+255),c
 26889  005B94  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26890                           
 26891                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26892                           ; Switch size 1, requested type "space"
 26893                           ; Number of cases is 1, Range of values is 0 to 0
 26894                           ; switch strategies available:
 26895                           ; Name         Instructions Cycles
 26896                           ; simple_byte            4     3 (average)
 26897                           ;	Chosen strategy is simple_byte
 26898  005B96  502A               	movf	??_display_prepare+1,w,c
 26899  005B98  0A00               	xorlw	0	; case 0
 26900  005B9A  A4D8               	btfss	status,2,c
 26901  005B9C  D027               	goto	l1553
 26902                           
 26903                           ; Switch size 1, requested type "space"
 26904                           ; Number of cases is 9, Range of values is 0 to 128
 26905                           ; switch strategies available:
 26906                           ; Name         Instructions Cycles
 26907                           ; simple_byte           28    15 (average)
 26908                           ;	Chosen strategy is simple_byte
 26909  005B9E  5029               	movf	??_display_prepare,w,c
 26910  005BA0  0A00               	xorlw	0	; case 0
 26911  005BA2  B4D8               	btfsc	status,2,c
 26912  005BA4  D7D9               	goto	l1543
 26913  005BA6  0A10               	xorlw	16	; case 16
 26914  005BA8  B4D8               	btfsc	status,2,c
 26915  005BAA  D7D9               	goto	l1545
 26916  005BAC  0A30               	xorlw	48	; case 32
 26917  005BAE  B4D8               	btfsc	status,2,c
 26918  005BB0  D7D9               	goto	l1546
 26919  005BB2  0A10               	xorlw	16	; case 48
 26920  005BB4  B4D8               	btfsc	status,2,c
 26921  005BB6  D7D9               	goto	l1547
 26922  005BB8  0A70               	xorlw	112	; case 64
 26923  005BBA  B4D8               	btfsc	status,2,c
 26924  005BBC  D7D9               	goto	l1548
 26925  005BBE  0A10               	xorlw	16	; case 80
 26926  005BC0  B4D8               	btfsc	status,2,c
 26927  005BC2  D7D9               	goto	l1549
 26928  005BC4  0A30               	xorlw	48	; case 96
 26929  005BC6  B4D8               	btfsc	status,2,c
 26930  005BC8  D7D9               	goto	l1550
 26931  005BCA  0A10               	xorlw	16	; case 112
 26932  005BCC  B4D8               	btfsc	status,2,c
 26933  005BCE  D7D9               	goto	l1551
 26934  005BD0  0AF0               	xorlw	240	; case 128
 26935  005BD2  B4D8               	btfsc	status,2,c
 26936  005BD4  D7D9               	goto	l1552
 26937                           
 26938                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 26939  005BD6  D00A               	goto	l1553
 26940  005BD8                     
 26941                           ;display.c: 333: display_content[0][17] = '.';
 26942  005BD8  0E2E               	movlw	46
 26943  005BDA  0102               	movlb	2	; () banked
 26944  005BDC  6F11               	movwf	(_display_content+17)& (0+255),b
 26945  005BDE                     l1555:
 26946                           
 26947                           ;display.c: 336: display_content[0][16] = '.';
 26948  005BDE  0E2E               	movlw	46
 26949  005BE0  0102               	movlb	2	; () banked
 26950  005BE2  6F10               	movwf	(_display_content+16)& (0+255),b
 26951  005BE4                     l1556:
 26952                           
 26953                           ;display.c: 339: display_content[0][15] = '.';
 26954  005BE4  0E2E               	movlw	46
 26955  005BE6  0102               	movlb	2	; () banked
 26956  005BE8  6F0F               	movwf	(_display_content+15)& (0+255),b
 26957                           
 26958                           ;display.c: 341: }
 26959  005BEA  D015               	goto	l1557
 26960  005BEC                     l1553:
 26961                           
 26962                           ; BSR set to: 2
 26963  005BEC  0100               	movlb	0	; () banked
 26964  005BEE  39C7               	swapf	(_os+2)& (0+255),w,b	;volatile
 26965  005BF0  42E8               	rrncf	wreg,f,c
 26966  005BF2  0B07               	andlw	7
 26967  005BF4  0B03               	andlw	3
 26968  005BF6  6E29               	movwf	??_display_prepare& (0+255),c
 26969  005BF8  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26970                           
 26971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26972                           ; Switch size 1, requested type "space"
 26973                           ; Number of cases is 1, Range of values is 0 to 0
 26974                           ; switch strategies available:
 26975                           ; Name         Instructions Cycles
 26976                           ; simple_byte            4     3 (average)
 26977                           ;	Chosen strategy is simple_byte
 26978  005BFA  502A               	movf	??_display_prepare+1,w,c
 26979  005BFC  0A00               	xorlw	0	; case 0
 26980  005BFE  A4D8               	btfss	status,2,c
 26981  005C00  D00A               	goto	l1557
 26982                           
 26983                           ; BSR set to: 0
 26984                           ; Switch size 1, requested type "space"
 26985                           ; Number of cases is 3, Range of values is 1 to 3
 26986                           ; switch strategies available:
 26987                           ; Name         Instructions Cycles
 26988                           ; simple_byte           10     6 (average)
 26989                           ;	Chosen strategy is simple_byte
 26990  005C02  5029               	movf	??_display_prepare,w,c
 26991  005C04  0A01               	xorlw	1	; case 1
 26992  005C06  B4D8               	btfsc	status,2,c
 26993  005C08  D7ED               	goto	l1556
 26994  005C0A  0A03               	xorlw	3	; case 2
 26995  005C0C  B4D8               	btfsc	status,2,c
 26996  005C0E  D7E7               	goto	l1555
 26997  005C10  0A01               	xorlw	1	; case 3
 26998  005C12  B4D8               	btfsc	status,2,c
 26999  005C14  D7E1               	goto	l1554
 27000  005C16                     l1557:
 27001                           
 27002                           ;display.c: 345: if(INTCONbits.GIE)
 27003  005C16  AEF2               	btfss	intcon,7,c	;volatile
 27004  005C18  0012               	return	
 27005                           
 27006                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 27007  005C1A  0E49               	movlw	73
 27008  005C1C  0102               	movlb	2	; () banked
 27009  005C1E  6F12               	movwf	(_display_content+18)& (0+255),b
 27010  005C20  0012               	return	
 27011  005C22                     __end_of_display_prepare:
 27012                           	opt stack 0
 27013                           tosu	equ	0xFFF
 27014                           tosh	equ	0xFFE
 27015                           tosl	equ	0xFFD
 27016                           pclath	equ	0xFFA
 27017                           tblptru	equ	0xFF8
 27018                           tblptrh	equ	0xFF7
 27019                           tblptrl	equ	0xFF6
 27020                           tablat	equ	0xFF5
 27021                           prodh	equ	0xFF4
 27022                           prodl	equ	0xFF3
 27023                           intcon	equ	0xFF2
 27024                           intcon2	equ	0xFF1
 27025                           intcon3	equ	0xFF0
 27026                           indf0	equ	0xFEF
 27027                           postinc0	equ	0xFEE
 27028                           fsr0h	equ	0xFEA
 27029                           fsr0l	equ	0xFE9
 27030                           wreg	equ	0xFE8
 27031                           indf1	equ	0xFE7
 27032                           postdec1	equ	0xFE5
 27033                           plusw1	equ	0xFE3
 27034                           fsr1h	equ	0xFE2
 27035                           fsr1l	equ	0xFE1
 27036                           indf2	equ	0xFDF
 27037                           postinc2	equ	0xFDE
 27038                           postdec2	equ	0xFDD
 27039                           plusw2	equ	0xFDB
 27040                           fsr2h	equ	0xFDA
 27041                           fsr2l	equ	0xFD9
 27042                           status	equ	0xFD8
 27043                           
 27044 ;; *************** function __display_verify *****************
 27045 ;; Defined at:
 27046 ;;		line 417 in file "display.c"
 27047 ;; Parameters:    Size  Location     Type
 27048 ;;		None
 27049 ;; Auto vars:     Size  Location     Type
 27050 ;;  cntr            1   32[COMRAM] unsigned char 
 27051 ;;  start           1    0        unsigned char 
 27052 ;; Return value:  Size  Location     Type
 27053 ;;                  1    wreg      void 
 27054 ;; Registers used:
 27055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27056 ;; Tracked objects:
 27057 ;;		On entry : 0/0
 27058 ;;		On exit  : 0/0
 27059 ;;		Unchanged: 0/0
 27060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27064 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27065 ;;Total ram usage:        3 bytes
 27066 ;; Hardware stack levels used:    1
 27067 ;; Hardware stack levels required when called:    4
 27068 ;; This function calls:
 27069 ;;		__display_itoa_u16
 27070 ;;		_bootloader_get_entries
 27071 ;; This function is called by:
 27072 ;;		_display_prepare
 27073 ;; This function uses a non-reentrant model
 27074 ;;
 27075                           
 27076                           	psect	text132
 27077  004260                     __ptext132:
 27078                           	opt stack 0
 27079  004260                     __display_verify:
 27080                           	opt stack 22
 27081                           
 27082                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 27083                           
 27084                           ;incstack = 0
 27085  004260  0E00               	movlw	0
 27086  004262  6E21               	movwf	__display_verify@cntr,c
 27087                           
 27088                           ;display.c: 422: while(verify_line1[cntr])
 27089  004264  D017               	goto	l1610
 27090  004266                     
 27091                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 27092  004266  5021               	movf	__display_verify@cntr,w,c
 27093  004268  0D01               	mullw	1
 27094  00426A  0EC4               	movlw	low _verify_line1
 27095  00426C  24F3               	addwf	prodl,w,c
 27096  00426E  6EF6               	movwf	tblptrl,c
 27097  004270  0E9D               	movlw	high _verify_line1
 27098  004272  20F4               	addwfc	prodh,w,c
 27099  004274  6EF7               	movwf	tblptrh,c
 27100  004276                     	if	1	;There are 3 active tblptr bytes
 27101  004276  6AF8               	clrf	tblptru,c
 27102  004278  0E00               	movlw	low (__mediumconst shr (0+16))
 27103  00427A  22F8               	addwfc	tblptru,f,c
 27104  00427C                     	endif
 27105  00427C  5021               	movf	__display_verify@cntr,w,c
 27106  00427E  0D01               	mullw	1
 27107  004280  0E00               	movlw	low _display_content
 27108  004282  24F3               	addwf	prodl,w,c
 27109  004284  6ED9               	movwf	fsr2l,c
 27110  004286  0E02               	movlw	high _display_content
 27111  004288  20F4               	addwfc	prodh,w,c
 27112  00428A  6EDA               	movwf	fsr2h,c
 27113  00428C  0008               	tblrd		*
 27114  00428E  CFF5 FFDF          	movff	tablat,indf2
 27115  004292  2A21               	incf	__display_verify@cntr,f,c
 27116  004294                     l1610:
 27117  004294  5021               	movf	__display_verify@cntr,w,c
 27118  004296  0D01               	mullw	1
 27119  004298  0EC4               	movlw	low _verify_line1
 27120  00429A  24F3               	addwf	prodl,w,c
 27121  00429C  6EF6               	movwf	tblptrl,c
 27122  00429E  0E9D               	movlw	high _verify_line1
 27123  0042A0  20F4               	addwfc	prodh,w,c
 27124  0042A2  6EF7               	movwf	tblptrh,c
 27125  0042A4                     	if	1	;There are 3 active tblptr bytes
 27126  0042A4  6AF8               	clrf	tblptru,c
 27127  0042A6  0E00               	movlw	low (__mediumconst shr (0+16))
 27128  0042A8  22F8               	addwfc	tblptru,f,c
 27129  0042AA                     	endif
 27130  0042AA  0008               	tblrd		*
 27131  0042AC  50F5               	movf	tablat,w,c
 27132  0042AE  0900               	iorlw	0
 27133  0042B0  A4D8               	btfss	status,2,c
 27134  0042B2  D7D9               	goto	l1611
 27135                           
 27136                           ;display.c: 424: cntr = 0;
 27137  0042B4  0E00               	movlw	0
 27138  0042B6  6E21               	movwf	__display_verify@cntr,c
 27139                           
 27140                           ;display.c: 425: while(verify_line2[cntr])
 27141  0042B8  D017               	goto	l1613
 27142  0042BA                     
 27143                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 27144  0042BA  5021               	movf	__display_verify@cntr,w,c
 27145  0042BC  0D01               	mullw	1
 27146  0042BE  0E4C               	movlw	low _verify_line2
 27147  0042C0  24F3               	addwf	prodl,w,c
 27148  0042C2  6EF6               	movwf	tblptrl,c
 27149  0042C4  0E9E               	movlw	high _verify_line2
 27150  0042C6  20F4               	addwfc	prodh,w,c
 27151  0042C8  6EF7               	movwf	tblptrh,c
 27152  0042CA                     	if	1	;There are 3 active tblptr bytes
 27153  0042CA  6AF8               	clrf	tblptru,c
 27154  0042CC  0E00               	movlw	low (__mediumconst shr (0+16))
 27155  0042CE  22F8               	addwfc	tblptru,f,c
 27156  0042D0                     	endif
 27157  0042D0  5021               	movf	__display_verify@cntr,w,c
 27158  0042D2  0D01               	mullw	1
 27159  0042D4  0E14               	movlw	low (_display_content+20)
 27160  0042D6  24F3               	addwf	prodl,w,c
 27161  0042D8  6ED9               	movwf	fsr2l,c
 27162  0042DA  0E02               	movlw	high (_display_content+20)
 27163  0042DC  20F4               	addwfc	prodh,w,c
 27164  0042DE  6EDA               	movwf	fsr2h,c
 27165  0042E0  0008               	tblrd		*
 27166  0042E2  CFF5 FFDF          	movff	tablat,indf2
 27167  0042E6  2A21               	incf	__display_verify@cntr,f,c
 27168  0042E8                     l1613:
 27169  0042E8  5021               	movf	__display_verify@cntr,w,c
 27170  0042EA  0D01               	mullw	1
 27171  0042EC  0E4C               	movlw	low _verify_line2
 27172  0042EE  24F3               	addwf	prodl,w,c
 27173  0042F0  6EF6               	movwf	tblptrl,c
 27174  0042F2  0E9E               	movlw	high _verify_line2
 27175  0042F4  20F4               	addwfc	prodh,w,c
 27176  0042F6  6EF7               	movwf	tblptrh,c
 27177  0042F8                     	if	1	;There are 3 active tblptr bytes
 27178  0042F8  6AF8               	clrf	tblptru,c
 27179  0042FA  0E00               	movlw	low (__mediumconst shr (0+16))
 27180  0042FC  22F8               	addwfc	tblptru,f,c
 27181  0042FE                     	endif
 27182  0042FE  0008               	tblrd		*
 27183  004300  50F5               	movf	tablat,w,c
 27184  004302  0900               	iorlw	0
 27185  004304  A4D8               	btfss	status,2,c
 27186  004306  D7D9               	goto	l1614
 27187                           
 27188                           ;display.c: 427: cntr = 0;
 27189  004308  0E00               	movlw	0
 27190  00430A  6E21               	movwf	__display_verify@cntr,c
 27191                           
 27192                           ;display.c: 428: while(verify_line3[cntr])
 27193  00430C  D017               	goto	l1616
 27194  00430E                     
 27195                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 27196  00430E  5021               	movf	__display_verify@cntr,w,c
 27197  004310  0D01               	mullw	1
 27198  004312  0E8A               	movlw	low _verify_line3
 27199  004314  24F3               	addwf	prodl,w,c
 27200  004316  6EF6               	movwf	tblptrl,c
 27201  004318  0E9E               	movlw	high _verify_line3
 27202  00431A  20F4               	addwfc	prodh,w,c
 27203  00431C  6EF7               	movwf	tblptrh,c
 27204  00431E                     	if	1	;There are 3 active tblptr bytes
 27205  00431E  6AF8               	clrf	tblptru,c
 27206  004320  0E00               	movlw	low (__mediumconst shr (0+16))
 27207  004322  22F8               	addwfc	tblptru,f,c
 27208  004324                     	endif
 27209  004324  5021               	movf	__display_verify@cntr,w,c
 27210  004326  0D01               	mullw	1
 27211  004328  0E28               	movlw	low (_display_content+40)
 27212  00432A  24F3               	addwf	prodl,w,c
 27213  00432C  6ED9               	movwf	fsr2l,c
 27214  00432E  0E02               	movlw	high (_display_content+40)
 27215  004330  20F4               	addwfc	prodh,w,c
 27216  004332  6EDA               	movwf	fsr2h,c
 27217  004334  0008               	tblrd		*
 27218  004336  CFF5 FFDF          	movff	tablat,indf2
 27219  00433A  2A21               	incf	__display_verify@cntr,f,c
 27220  00433C                     l1616:
 27221  00433C  5021               	movf	__display_verify@cntr,w,c
 27222  00433E  0D01               	mullw	1
 27223  004340  0E8A               	movlw	low _verify_line3
 27224  004342  24F3               	addwf	prodl,w,c
 27225  004344  6EF6               	movwf	tblptrl,c
 27226  004346  0E9E               	movlw	high _verify_line3
 27227  004348  20F4               	addwfc	prodh,w,c
 27228  00434A  6EF7               	movwf	tblptrh,c
 27229  00434C                     	if	1	;There are 3 active tblptr bytes
 27230  00434C  6AF8               	clrf	tblptru,c
 27231  00434E  0E00               	movlw	low (__mediumconst shr (0+16))
 27232  004350  22F8               	addwfc	tblptru,f,c
 27233  004352                     	endif
 27234  004352  0008               	tblrd		*
 27235  004354  50F5               	movf	tablat,w,c
 27236  004356  0900               	iorlw	0
 27237  004358  A4D8               	btfss	status,2,c
 27238  00435A  D7D9               	goto	l1617
 27239                           
 27240                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27241  00435C  ECAE  F047         	call	_bootloader_get_entries	;wreg free
 27242  004360  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27243  004364  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27244  004368  6A1B               	clrf	__display_itoa_u16@value+2,c
 27245  00436A  6A1C               	clrf	__display_itoa_u16@value+3,c
 27246  00436C  5021               	movf	__display_verify@cntr,w,c
 27247  00436E  6E1F               	movwf	??__display_verify& (0+255),c
 27248  004370  6A20               	clrf	(??__display_verify+1)& (0+255),c
 27249  004372  0E01               	movlw	1
 27250  004374  261F               	addwf	??__display_verify,f,c
 27251  004376  0E00               	movlw	0
 27252  004378  2220               	addwfc	??__display_verify+1,f,c
 27253  00437A  0E28               	movlw	low (_display_content+40)
 27254  00437C  241F               	addwf	??__display_verify,w,c
 27255  00437E  6E1D               	movwf	__display_itoa_u16@text,c
 27256  004380  0E02               	movlw	high (_display_content+40)
 27257  004382  2020               	addwfc	??__display_verify+1,w,c
 27258  004384  6E1E               	movwf	__display_itoa_u16@text+1,c
 27259  004386  EC0C  F030         	call	__display_itoa_u16	;wreg free
 27260  00438A  0012               	return		;funcret
 27261  00438C                     __end_of__display_verify:
 27262                           	opt stack 0
 27263                           tosu	equ	0xFFF
 27264                           tosh	equ	0xFFE
 27265                           tosl	equ	0xFFD
 27266                           pclath	equ	0xFFA
 27267                           tblptru	equ	0xFF8
 27268                           tblptrh	equ	0xFF7
 27269                           tblptrl	equ	0xFF6
 27270                           tablat	equ	0xFF5
 27271                           prodh	equ	0xFF4
 27272                           prodl	equ	0xFF3
 27273                           intcon	equ	0xFF2
 27274                           intcon2	equ	0xFF1
 27275                           intcon3	equ	0xFF0
 27276                           indf0	equ	0xFEF
 27277                           postinc0	equ	0xFEE
 27278                           fsr0h	equ	0xFEA
 27279                           fsr0l	equ	0xFE9
 27280                           wreg	equ	0xFE8
 27281                           indf1	equ	0xFE7
 27282                           postdec1	equ	0xFE5
 27283                           plusw1	equ	0xFE3
 27284                           fsr1h	equ	0xFE2
 27285                           fsr1l	equ	0xFE1
 27286                           indf2	equ	0xFDF
 27287                           postinc2	equ	0xFDE
 27288                           postdec2	equ	0xFDD
 27289                           plusw2	equ	0xFDB
 27290                           fsr2h	equ	0xFDA
 27291                           fsr2l	equ	0xFD9
 27292                           status	equ	0xFD8
 27293                           
 27294 ;; *************** function __display_start *****************
 27295 ;; Defined at:
 27296 ;;		line 351 in file "display.c"
 27297 ;; Parameters:    Size  Location     Type
 27298 ;;		None
 27299 ;; Auto vars:     Size  Location     Type
 27300 ;;  cntr            1   36[COMRAM] unsigned char 
 27301 ;; Return value:  Size  Location     Type
 27302 ;;                  1    wreg      void 
 27303 ;; Registers used:
 27304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27305 ;; Tracked objects:
 27306 ;;		On entry : 0/0
 27307 ;;		On exit  : 0/0
 27308 ;;		Unchanged: 0/0
 27309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27314 ;;Total ram usage:        1 bytes
 27315 ;; Hardware stack levels used:    1
 27316 ;; Hardware stack levels required when called:    5
 27317 ;; This function calls:
 27318 ;;		__display_itoa_u32
 27319 ;; This function is called by:
 27320 ;;		_display_prepare
 27321 ;; This function uses a non-reentrant model
 27322 ;;
 27323                           
 27324                           	psect	text133
 27325  002AF8                     __ptext133:
 27326                           	opt stack 0
 27327  002AF8                     __display_start:
 27328                           	opt stack 21
 27329                           
 27330                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 27331                           
 27332                           ;incstack = 0
 27333  002AF8  0E00               	movlw	0
 27334  002AFA  6E25               	movwf	__display_start@cntr,c
 27335                           
 27336                           ;display.c: 355: while(start_line1[cntr])
 27337  002AFC  D017               	goto	l1562
 27338  002AFE                     
 27339                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 27340  002AFE  5025               	movf	__display_start@cntr,w,c
 27341  002B00  0D01               	mullw	1
 27342  002B02  0EF4               	movlw	low _start_line1
 27343  002B04  24F3               	addwf	prodl,w,c
 27344  002B06  6EF6               	movwf	tblptrl,c
 27345  002B08  0E9D               	movlw	high _start_line1
 27346  002B0A  20F4               	addwfc	prodh,w,c
 27347  002B0C  6EF7               	movwf	tblptrh,c
 27348  002B0E                     	if	1	;There are 3 active tblptr bytes
 27349  002B0E  6AF8               	clrf	tblptru,c
 27350  002B10  0E00               	movlw	low (__mediumconst shr (0+16))
 27351  002B12  22F8               	addwfc	tblptru,f,c
 27352  002B14                     	endif
 27353  002B14  5025               	movf	__display_start@cntr,w,c
 27354  002B16  0D01               	mullw	1
 27355  002B18  0E00               	movlw	low _display_content
 27356  002B1A  24F3               	addwf	prodl,w,c
 27357  002B1C  6ED9               	movwf	fsr2l,c
 27358  002B1E  0E02               	movlw	high _display_content
 27359  002B20  20F4               	addwfc	prodh,w,c
 27360  002B22  6EDA               	movwf	fsr2h,c
 27361  002B24  0008               	tblrd		*
 27362  002B26  CFF5 FFDF          	movff	tablat,indf2
 27363  002B2A  2A25               	incf	__display_start@cntr,f,c
 27364  002B2C                     l1562:
 27365  002B2C  5025               	movf	__display_start@cntr,w,c
 27366  002B2E  0D01               	mullw	1
 27367  002B30  0EF4               	movlw	low _start_line1
 27368  002B32  24F3               	addwf	prodl,w,c
 27369  002B34  6EF6               	movwf	tblptrl,c
 27370  002B36  0E9D               	movlw	high _start_line1
 27371  002B38  20F4               	addwfc	prodh,w,c
 27372  002B3A  6EF7               	movwf	tblptrh,c
 27373  002B3C                     	if	1	;There are 3 active tblptr bytes
 27374  002B3C  6AF8               	clrf	tblptru,c
 27375  002B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 27376  002B40  22F8               	addwfc	tblptru,f,c
 27377  002B42                     	endif
 27378  002B42  0008               	tblrd		*
 27379  002B44  50F5               	movf	tablat,w,c
 27380  002B46  0900               	iorlw	0
 27381  002B48  A4D8               	btfss	status,2,c
 27382  002B4A  D7D9               	goto	l1563
 27383                           
 27384                           ;display.c: 357: cntr = 0;
 27385  002B4C  0E00               	movlw	0
 27386  002B4E  6E25               	movwf	__display_start@cntr,c
 27387                           
 27388                           ;display.c: 358: while(start_line2[cntr])
 27389  002B50  D017               	goto	l1565
 27390  002B52                     
 27391                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 27392  002B52  5025               	movf	__display_start@cntr,w,c
 27393  002B54  0D01               	mullw	1
 27394  002B56  0E62               	movlw	low _start_line2
 27395  002B58  24F3               	addwf	prodl,w,c
 27396  002B5A  6EF6               	movwf	tblptrl,c
 27397  002B5C  0E9E               	movlw	high _start_line2
 27398  002B5E  20F4               	addwfc	prodh,w,c
 27399  002B60  6EF7               	movwf	tblptrh,c
 27400  002B62                     	if	1	;There are 3 active tblptr bytes
 27401  002B62  6AF8               	clrf	tblptru,c
 27402  002B64  0E00               	movlw	low (__mediumconst shr (0+16))
 27403  002B66  22F8               	addwfc	tblptru,f,c
 27404  002B68                     	endif
 27405  002B68  5025               	movf	__display_start@cntr,w,c
 27406  002B6A  0D01               	mullw	1
 27407  002B6C  0E14               	movlw	low (_display_content+20)
 27408  002B6E  24F3               	addwf	prodl,w,c
 27409  002B70  6ED9               	movwf	fsr2l,c
 27410  002B72  0E02               	movlw	high (_display_content+20)
 27411  002B74  20F4               	addwfc	prodh,w,c
 27412  002B76  6EDA               	movwf	fsr2h,c
 27413  002B78  0008               	tblrd		*
 27414  002B7A  CFF5 FFDF          	movff	tablat,indf2
 27415  002B7E  2A25               	incf	__display_start@cntr,f,c
 27416  002B80                     l1565:
 27417  002B80  5025               	movf	__display_start@cntr,w,c
 27418  002B82  0D01               	mullw	1
 27419  002B84  0E62               	movlw	low _start_line2
 27420  002B86  24F3               	addwf	prodl,w,c
 27421  002B88  6EF6               	movwf	tblptrl,c
 27422  002B8A  0E9E               	movlw	high _start_line2
 27423  002B8C  20F4               	addwfc	prodh,w,c
 27424  002B8E  6EF7               	movwf	tblptrh,c
 27425  002B90                     	if	1	;There are 3 active tblptr bytes
 27426  002B90  6AF8               	clrf	tblptru,c
 27427  002B92  0E00               	movlw	low (__mediumconst shr (0+16))
 27428  002B94  22F8               	addwfc	tblptru,f,c
 27429  002B96                     	endif
 27430  002B96  0008               	tblrd		*
 27431  002B98  50F5               	movf	tablat,w,c
 27432  002B9A  0900               	iorlw	0
 27433  002B9C  A4D8               	btfss	status,2,c
 27434  002B9E  D7D9               	goto	l1566
 27435                           
 27436                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 27437  002BA0  0E00               	movlw	0
 27438  002BA2  6E1F               	movwf	__display_itoa_u32@value,c
 27439  002BA4  0E00               	movlw	0
 27440  002BA6  6E20               	movwf	__display_itoa_u32@value+1,c
 27441  002BA8  0E00               	movlw	0
 27442  002BAA  6E21               	movwf	__display_itoa_u32@value+2,c
 27443  002BAC  0E00               	movlw	0
 27444  002BAE  6E22               	movwf	__display_itoa_u32@value+3,c
 27445  002BB0  5025               	movf	__display_start@cntr,w,c
 27446  002BB2  0D01               	mullw	1
 27447  002BB4  0E14               	movlw	low (_display_content+20)
 27448  002BB6  24F3               	addwf	prodl,w,c
 27449  002BB8  6E23               	movwf	__display_itoa_u32@text,c
 27450  002BBA  0E02               	movlw	high (_display_content+20)
 27451  002BBC  20F4               	addwfc	prodh,w,c
 27452  002BBE  6E24               	movwf	__display_itoa_u32@text+1,c
 27453  002BC0  EC15  F006         	call	__display_itoa_u32	;wreg free
 27454  002BC4  2625               	addwf	__display_start@cntr,f,c
 27455                           
 27456                           ;display.c: 361: display_content[1][cntr++] = '.';
 27457  002BC6  5025               	movf	__display_start@cntr,w,c
 27458  002BC8  0D01               	mullw	1
 27459  002BCA  0E14               	movlw	low (_display_content+20)
 27460  002BCC  24F3               	addwf	prodl,w,c
 27461  002BCE  6ED9               	movwf	fsr2l,c
 27462  002BD0  0E02               	movlw	high (_display_content+20)
 27463  002BD2  20F4               	addwfc	prodh,w,c
 27464  002BD4  6EDA               	movwf	fsr2h,c
 27465  002BD6  0E2E               	movlw	46
 27466  002BD8  6EDF               	movwf	indf2,c
 27467  002BDA  2A25               	incf	__display_start@cntr,f,c
 27468                           
 27469                           ;display.c: 362: cntr += _display_itoa_u32(0x03, &display_content[1][cntr]);
 27470  002BDC  0E03               	movlw	3
 27471  002BDE  6E1F               	movwf	__display_itoa_u32@value,c
 27472  002BE0  0E00               	movlw	0
 27473  002BE2  6E20               	movwf	__display_itoa_u32@value+1,c
 27474  002BE4  0E00               	movlw	0
 27475  002BE6  6E21               	movwf	__display_itoa_u32@value+2,c
 27476  002BE8  0E00               	movlw	0
 27477  002BEA  6E22               	movwf	__display_itoa_u32@value+3,c
 27478  002BEC  5025               	movf	__display_start@cntr,w,c
 27479  002BEE  0D01               	mullw	1
 27480  002BF0  0E14               	movlw	low (_display_content+20)
 27481  002BF2  24F3               	addwf	prodl,w,c
 27482  002BF4  6E23               	movwf	__display_itoa_u32@text,c
 27483  002BF6  0E02               	movlw	high (_display_content+20)
 27484  002BF8  20F4               	addwfc	prodh,w,c
 27485  002BFA  6E24               	movwf	__display_itoa_u32@text+1,c
 27486  002BFC  EC15  F006         	call	__display_itoa_u32	;wreg free
 27487  002C00  2625               	addwf	__display_start@cntr,f,c
 27488                           
 27489                           ;display.c: 363: display_content[1][cntr++] = '.';
 27490  002C02  5025               	movf	__display_start@cntr,w,c
 27491  002C04  0D01               	mullw	1
 27492  002C06  0E14               	movlw	low (_display_content+20)
 27493  002C08  24F3               	addwf	prodl,w,c
 27494  002C0A  6ED9               	movwf	fsr2l,c
 27495  002C0C  0E02               	movlw	high (_display_content+20)
 27496  002C0E  20F4               	addwfc	prodh,w,c
 27497  002C10  6EDA               	movwf	fsr2h,c
 27498  002C12  0E2E               	movlw	46
 27499  002C14  6EDF               	movwf	indf2,c
 27500  002C16  2A25               	incf	__display_start@cntr,f,c
 27501                           
 27502                           ;display.c: 364: cntr += _display_itoa_u32(0x03, &display_content[1][cntr]);
 27503  002C18  0E03               	movlw	3
 27504  002C1A  6E1F               	movwf	__display_itoa_u32@value,c
 27505  002C1C  0E00               	movlw	0
 27506  002C1E  6E20               	movwf	__display_itoa_u32@value+1,c
 27507  002C20  0E00               	movlw	0
 27508  002C22  6E21               	movwf	__display_itoa_u32@value+2,c
 27509  002C24  0E00               	movlw	0
 27510  002C26  6E22               	movwf	__display_itoa_u32@value+3,c
 27511  002C28  5025               	movf	__display_start@cntr,w,c
 27512  002C2A  0D01               	mullw	1
 27513  002C2C  0E14               	movlw	low (_display_content+20)
 27514  002C2E  24F3               	addwf	prodl,w,c
 27515  002C30  6E23               	movwf	__display_itoa_u32@text,c
 27516  002C32  0E02               	movlw	high (_display_content+20)
 27517  002C34  20F4               	addwfc	prodh,w,c
 27518  002C36  6E24               	movwf	__display_itoa_u32@text+1,c
 27519  002C38  EC15  F006         	call	__display_itoa_u32	;wreg free
 27520  002C3C  2625               	addwf	__display_start@cntr,f,c
 27521                           
 27522                           ;display.c: 365: cntr = 0;
 27523  002C3E  0E00               	movlw	0
 27524  002C40  6E25               	movwf	__display_start@cntr,c
 27525                           
 27526                           ;display.c: 366: while(start_line3[cntr])
 27527  002C42  D017               	goto	l1568
 27528  002C44                     
 27529                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 27530  002C44  5025               	movf	__display_start@cntr,w,c
 27531  002C46  0D01               	mullw	1
 27532  002C48  0EA7               	movlw	low _start_line3
 27533  002C4A  24F3               	addwf	prodl,w,c
 27534  002C4C  6EF6               	movwf	tblptrl,c
 27535  002C4E  0E9E               	movlw	high _start_line3
 27536  002C50  20F4               	addwfc	prodh,w,c
 27537  002C52  6EF7               	movwf	tblptrh,c
 27538  002C54                     	if	1	;There are 3 active tblptr bytes
 27539  002C54  6AF8               	clrf	tblptru,c
 27540  002C56  0E00               	movlw	low (__mediumconst shr (0+16))
 27541  002C58  22F8               	addwfc	tblptru,f,c
 27542  002C5A                     	endif
 27543  002C5A  5025               	movf	__display_start@cntr,w,c
 27544  002C5C  0D01               	mullw	1
 27545  002C5E  0E28               	movlw	low (_display_content+40)
 27546  002C60  24F3               	addwf	prodl,w,c
 27547  002C62  6ED9               	movwf	fsr2l,c
 27548  002C64  0E02               	movlw	high (_display_content+40)
 27549  002C66  20F4               	addwfc	prodh,w,c
 27550  002C68  6EDA               	movwf	fsr2h,c
 27551  002C6A  0008               	tblrd		*
 27552  002C6C  CFF5 FFDF          	movff	tablat,indf2
 27553  002C70  2A25               	incf	__display_start@cntr,f,c
 27554  002C72                     l1568:
 27555  002C72  5025               	movf	__display_start@cntr,w,c
 27556  002C74  0D01               	mullw	1
 27557  002C76  0EA7               	movlw	low _start_line3
 27558  002C78  24F3               	addwf	prodl,w,c
 27559  002C7A  6EF6               	movwf	tblptrl,c
 27560  002C7C  0E9E               	movlw	high _start_line3
 27561  002C7E  20F4               	addwfc	prodh,w,c
 27562  002C80  6EF7               	movwf	tblptrh,c
 27563  002C82                     	if	1	;There are 3 active tblptr bytes
 27564  002C82  6AF8               	clrf	tblptru,c
 27565  002C84  0E00               	movlw	low (__mediumconst shr (0+16))
 27566  002C86  22F8               	addwfc	tblptru,f,c
 27567  002C88                     	endif
 27568  002C88  0008               	tblrd		*
 27569  002C8A  50F5               	movf	tablat,w,c
 27570  002C8C  0900               	iorlw	0
 27571  002C8E  A4D8               	btfss	status,2,c
 27572  002C90  D7D9               	goto	l1569
 27573                           
 27574                           ;display.c: 368: cntr = 0;
 27575  002C92  0E00               	movlw	0
 27576  002C94  6E25               	movwf	__display_start@cntr,c
 27577                           
 27578                           ;display.c: 369: while(start_line4[cntr])
 27579  002C96  D017               	goto	l1571
 27580  002C98                     
 27581                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 27582  002C98  5025               	movf	__display_start@cntr,w,c
 27583  002C9A  0D01               	mullw	1
 27584  002C9C  0E22               	movlw	low _start_line4
 27585  002C9E  24F3               	addwf	prodl,w,c
 27586  002CA0  6EF6               	movwf	tblptrl,c
 27587  002CA2  0E9E               	movlw	high _start_line4
 27588  002CA4  20F4               	addwfc	prodh,w,c
 27589  002CA6  6EF7               	movwf	tblptrh,c
 27590  002CA8                     	if	1	;There are 3 active tblptr bytes
 27591  002CA8  6AF8               	clrf	tblptru,c
 27592  002CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 27593  002CAC  22F8               	addwfc	tblptru,f,c
 27594  002CAE                     	endif
 27595  002CAE  5025               	movf	__display_start@cntr,w,c
 27596  002CB0  0D01               	mullw	1
 27597  002CB2  0E3C               	movlw	low (_display_content+60)
 27598  002CB4  24F3               	addwf	prodl,w,c
 27599  002CB6  6ED9               	movwf	fsr2l,c
 27600  002CB8  0E02               	movlw	high (_display_content+60)
 27601  002CBA  20F4               	addwfc	prodh,w,c
 27602  002CBC  6EDA               	movwf	fsr2h,c
 27603  002CBE  0008               	tblrd		*
 27604  002CC0  CFF5 FFDF          	movff	tablat,indf2
 27605  002CC4  2A25               	incf	__display_start@cntr,f,c
 27606  002CC6                     l1571:
 27607  002CC6  5025               	movf	__display_start@cntr,w,c
 27608  002CC8  0D01               	mullw	1
 27609  002CCA  0E22               	movlw	low _start_line4
 27610  002CCC  24F3               	addwf	prodl,w,c
 27611  002CCE  6EF6               	movwf	tblptrl,c
 27612  002CD0  0E9E               	movlw	high _start_line4
 27613  002CD2  20F4               	addwfc	prodh,w,c
 27614  002CD4  6EF7               	movwf	tblptrh,c
 27615  002CD6                     	if	1	;There are 3 active tblptr bytes
 27616  002CD6  6AF8               	clrf	tblptru,c
 27617  002CD8  0E00               	movlw	low (__mediumconst shr (0+16))
 27618  002CDA  22F8               	addwfc	tblptru,f,c
 27619  002CDC                     	endif
 27620  002CDC  0008               	tblrd		*
 27621  002CDE  50F5               	movf	tablat,w,c
 27622  002CE0  0900               	iorlw	0
 27623  002CE2  B4D8               	btfsc	status,2,c
 27624  002CE4  0012               	return	
 27625  002CE6  D7D8               	goto	l1572
 27626  002CE8                     __end_of__display_start:
 27627                           	opt stack 0
 27628                           tosu	equ	0xFFF
 27629                           tosh	equ	0xFFE
 27630                           tosl	equ	0xFFD
 27631                           pclath	equ	0xFFA
 27632                           tblptru	equ	0xFF8
 27633                           tblptrh	equ	0xFF7
 27634                           tblptrl	equ	0xFF6
 27635                           tablat	equ	0xFF5
 27636                           prodh	equ	0xFF4
 27637                           prodl	equ	0xFF3
 27638                           intcon	equ	0xFF2
 27639                           intcon2	equ	0xFF1
 27640                           intcon3	equ	0xFF0
 27641                           indf0	equ	0xFEF
 27642                           postinc0	equ	0xFEE
 27643                           fsr0h	equ	0xFEA
 27644                           fsr0l	equ	0xFE9
 27645                           wreg	equ	0xFE8
 27646                           indf1	equ	0xFE7
 27647                           postdec1	equ	0xFE5
 27648                           plusw1	equ	0xFE3
 27649                           fsr1h	equ	0xFE2
 27650                           fsr1l	equ	0xFE1
 27651                           indf2	equ	0xFDF
 27652                           postinc2	equ	0xFDE
 27653                           postdec2	equ	0xFDD
 27654                           plusw2	equ	0xFDB
 27655                           fsr2h	equ	0xFDA
 27656                           fsr2l	equ	0xFD9
 27657                           status	equ	0xFD8
 27658                           
 27659 ;; *************** function __display_search *****************
 27660 ;; Defined at:
 27661 ;;		line 373 in file "display.c"
 27662 ;; Parameters:    Size  Location     Type
 27663 ;;		None
 27664 ;; Auto vars:     Size  Location     Type
 27665 ;;  cntr            1    0[COMRAM] unsigned char 
 27666 ;; Return value:  Size  Location     Type
 27667 ;;                  1    wreg      void 
 27668 ;; Registers used:
 27669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27670 ;; Tracked objects:
 27671 ;;		On entry : 0/0
 27672 ;;		On exit  : 0/0
 27673 ;;		Unchanged: 0/0
 27674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27679 ;;Total ram usage:        1 bytes
 27680 ;; Hardware stack levels used:    1
 27681 ;; This function calls:
 27682 ;;		Nothing
 27683 ;; This function is called by:
 27684 ;;		_display_prepare
 27685 ;; This function uses a non-reentrant model
 27686 ;;
 27687                           
 27688                           	psect	text134
 27689  003D46                     __ptext134:
 27690                           	opt stack 0
 27691  003D46                     __display_search:
 27692                           	opt stack 26
 27693                           
 27694                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 27695                           
 27696                           ;incstack = 0
 27697  003D46  0E00               	movlw	0
 27698  003D48  6E01               	movwf	__display_search@cntr,c
 27699                           
 27700                           ;display.c: 377: while(search_line1[cntr])
 27701  003D4A  D017               	goto	l1577
 27702  003D4C                     
 27703                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 27704  003D4C  5001               	movf	__display_search@cntr,w,c
 27705  003D4E  0D01               	mullw	1
 27706  003D50  0EE4               	movlw	low _search_line1
 27707  003D52  24F3               	addwf	prodl,w,c
 27708  003D54  6EF6               	movwf	tblptrl,c
 27709  003D56  0E9D               	movlw	high _search_line1
 27710  003D58  20F4               	addwfc	prodh,w,c
 27711  003D5A  6EF7               	movwf	tblptrh,c
 27712  003D5C                     	if	1	;There are 3 active tblptr bytes
 27713  003D5C  6AF8               	clrf	tblptru,c
 27714  003D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 27715  003D60  22F8               	addwfc	tblptru,f,c
 27716  003D62                     	endif
 27717  003D62  5001               	movf	__display_search@cntr,w,c
 27718  003D64  0D01               	mullw	1
 27719  003D66  0E00               	movlw	low _display_content
 27720  003D68  24F3               	addwf	prodl,w,c
 27721  003D6A  6ED9               	movwf	fsr2l,c
 27722  003D6C  0E02               	movlw	high _display_content
 27723  003D6E  20F4               	addwfc	prodh,w,c
 27724  003D70  6EDA               	movwf	fsr2h,c
 27725  003D72  0008               	tblrd		*
 27726  003D74  CFF5 FFDF          	movff	tablat,indf2
 27727  003D78  2A01               	incf	__display_search@cntr,f,c
 27728  003D7A                     l1577:
 27729  003D7A  5001               	movf	__display_search@cntr,w,c
 27730  003D7C  0D01               	mullw	1
 27731  003D7E  0EE4               	movlw	low _search_line1
 27732  003D80  24F3               	addwf	prodl,w,c
 27733  003D82  6EF6               	movwf	tblptrl,c
 27734  003D84  0E9D               	movlw	high _search_line1
 27735  003D86  20F4               	addwfc	prodh,w,c
 27736  003D88  6EF7               	movwf	tblptrh,c
 27737  003D8A                     	if	1	;There are 3 active tblptr bytes
 27738  003D8A  6AF8               	clrf	tblptru,c
 27739  003D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 27740  003D8E  22F8               	addwfc	tblptru,f,c
 27741  003D90                     	endif
 27742  003D90  0008               	tblrd		*
 27743  003D92  50F5               	movf	tablat,w,c
 27744  003D94  0900               	iorlw	0
 27745  003D96  A4D8               	btfss	status,2,c
 27746  003D98  D7D9               	goto	l1578
 27747                           
 27748                           ;display.c: 379: cntr = 0;
 27749  003D9A  0E00               	movlw	0
 27750  003D9C  6E01               	movwf	__display_search@cntr,c
 27751                           
 27752                           ;display.c: 380: while(search_line2[cntr])
 27753  003D9E  D017               	goto	l1580
 27754  003DA0                     
 27755                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 27756  003DA0  5001               	movf	__display_search@cntr,w,c
 27757  003DA2  0D01               	mullw	1
 27758  003DA4  0E43               	movlw	low _search_line2
 27759  003DA6  24F3               	addwf	prodl,w,c
 27760  003DA8  6EF6               	movwf	tblptrl,c
 27761  003DAA  0E9D               	movlw	high _search_line2
 27762  003DAC  20F4               	addwfc	prodh,w,c
 27763  003DAE  6EF7               	movwf	tblptrh,c
 27764  003DB0                     	if	1	;There are 3 active tblptr bytes
 27765  003DB0  6AF8               	clrf	tblptru,c
 27766  003DB2  0E00               	movlw	low (__mediumconst shr (0+16))
 27767  003DB4  22F8               	addwfc	tblptru,f,c
 27768  003DB6                     	endif
 27769  003DB6  5001               	movf	__display_search@cntr,w,c
 27770  003DB8  0D01               	mullw	1
 27771  003DBA  0E14               	movlw	low (_display_content+20)
 27772  003DBC  24F3               	addwf	prodl,w,c
 27773  003DBE  6ED9               	movwf	fsr2l,c
 27774  003DC0  0E02               	movlw	high (_display_content+20)
 27775  003DC2  20F4               	addwfc	prodh,w,c
 27776  003DC4  6EDA               	movwf	fsr2h,c
 27777  003DC6  0008               	tblrd		*
 27778  003DC8  CFF5 FFDF          	movff	tablat,indf2
 27779  003DCC  2A01               	incf	__display_search@cntr,f,c
 27780  003DCE                     l1580:
 27781  003DCE  5001               	movf	__display_search@cntr,w,c
 27782  003DD0  0D01               	mullw	1
 27783  003DD2  0E43               	movlw	low _search_line2
 27784  003DD4  24F3               	addwf	prodl,w,c
 27785  003DD6  6EF6               	movwf	tblptrl,c
 27786  003DD8  0E9D               	movlw	high _search_line2
 27787  003DDA  20F4               	addwfc	prodh,w,c
 27788  003DDC  6EF7               	movwf	tblptrh,c
 27789  003DDE                     	if	1	;There are 3 active tblptr bytes
 27790  003DDE  6AF8               	clrf	tblptru,c
 27791  003DE0  0E00               	movlw	low (__mediumconst shr (0+16))
 27792  003DE2  22F8               	addwfc	tblptru,f,c
 27793  003DE4                     	endif
 27794  003DE4  0008               	tblrd		*
 27795  003DE6  50F5               	movf	tablat,w,c
 27796  003DE8  0900               	iorlw	0
 27797  003DEA  A4D8               	btfss	status,2,c
 27798  003DEC  D7D9               	goto	l1581
 27799                           
 27800                           ;display.c: 382: cntr = 0;
 27801  003DEE  0E00               	movlw	0
 27802  003DF0  6E01               	movwf	__display_search@cntr,c
 27803                           
 27804                           ;display.c: 383: while(search_line3[cntr])
 27805  003DF2  D017               	goto	l1583
 27806  003DF4                     
 27807                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 27808  003DF4  5001               	movf	__display_search@cntr,w,c
 27809  003DF6  0D01               	mullw	1
 27810  003DF8  0EC2               	movlw	low _search_line3
 27811  003DFA  24F3               	addwf	prodl,w,c
 27812  003DFC  6EF6               	movwf	tblptrl,c
 27813  003DFE  0E9C               	movlw	high _search_line3
 27814  003E00  20F4               	addwfc	prodh,w,c
 27815  003E02  6EF7               	movwf	tblptrh,c
 27816  003E04                     	if	1	;There are 3 active tblptr bytes
 27817  003E04  6AF8               	clrf	tblptru,c
 27818  003E06  0E00               	movlw	low (__mediumconst shr (0+16))
 27819  003E08  22F8               	addwfc	tblptru,f,c
 27820  003E0A                     	endif
 27821  003E0A  5001               	movf	__display_search@cntr,w,c
 27822  003E0C  0D01               	mullw	1
 27823  003E0E  0E28               	movlw	low (_display_content+40)
 27824  003E10  24F3               	addwf	prodl,w,c
 27825  003E12  6ED9               	movwf	fsr2l,c
 27826  003E14  0E02               	movlw	high (_display_content+40)
 27827  003E16  20F4               	addwfc	prodh,w,c
 27828  003E18  6EDA               	movwf	fsr2h,c
 27829  003E1A  0008               	tblrd		*
 27830  003E1C  CFF5 FFDF          	movff	tablat,indf2
 27831  003E20  2A01               	incf	__display_search@cntr,f,c
 27832  003E22                     l1583:
 27833  003E22  5001               	movf	__display_search@cntr,w,c
 27834  003E24  0D01               	mullw	1
 27835  003E26  0EC2               	movlw	low _search_line3
 27836  003E28  24F3               	addwf	prodl,w,c
 27837  003E2A  6EF6               	movwf	tblptrl,c
 27838  003E2C  0E9C               	movlw	high _search_line3
 27839  003E2E  20F4               	addwfc	prodh,w,c
 27840  003E30  6EF7               	movwf	tblptrh,c
 27841  003E32                     	if	1	;There are 3 active tblptr bytes
 27842  003E32  6AF8               	clrf	tblptru,c
 27843  003E34  0E00               	movlw	low (__mediumconst shr (0+16))
 27844  003E36  22F8               	addwfc	tblptru,f,c
 27845  003E38                     	endif
 27846  003E38  0008               	tblrd		*
 27847  003E3A  50F5               	movf	tablat,w,c
 27848  003E3C  0900               	iorlw	0
 27849  003E3E  A4D8               	btfss	status,2,c
 27850  003E40  D7D9               	goto	l1584
 27851                           
 27852                           ;display.c: 385: cntr = 0;
 27853  003E42  0E00               	movlw	0
 27854  003E44  6E01               	movwf	__display_search@cntr,c
 27855                           
 27856                           ;display.c: 386: while(search_line4[cntr])
 27857  003E46  D017               	goto	l1586
 27858  003E48                     
 27859                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 27860  003E48  5001               	movf	__display_search@cntr,w,c
 27861  003E4A  0D01               	mullw	1
 27862  003E4C  0E59               	movlw	low _search_line4
 27863  003E4E  24F3               	addwf	prodl,w,c
 27864  003E50  6EF6               	movwf	tblptrl,c
 27865  003E52  0E9E               	movlw	high _search_line4
 27866  003E54  20F4               	addwfc	prodh,w,c
 27867  003E56  6EF7               	movwf	tblptrh,c
 27868  003E58                     	if	1	;There are 3 active tblptr bytes
 27869  003E58  6AF8               	clrf	tblptru,c
 27870  003E5A  0E00               	movlw	low (__mediumconst shr (0+16))
 27871  003E5C  22F8               	addwfc	tblptru,f,c
 27872  003E5E                     	endif
 27873  003E5E  5001               	movf	__display_search@cntr,w,c
 27874  003E60  0D01               	mullw	1
 27875  003E62  0E3C               	movlw	low (_display_content+60)
 27876  003E64  24F3               	addwf	prodl,w,c
 27877  003E66  6ED9               	movwf	fsr2l,c
 27878  003E68  0E02               	movlw	high (_display_content+60)
 27879  003E6A  20F4               	addwfc	prodh,w,c
 27880  003E6C  6EDA               	movwf	fsr2h,c
 27881  003E6E  0008               	tblrd		*
 27882  003E70  CFF5 FFDF          	movff	tablat,indf2
 27883  003E74  2A01               	incf	__display_search@cntr,f,c
 27884  003E76                     l1586:
 27885  003E76  5001               	movf	__display_search@cntr,w,c
 27886  003E78  0D01               	mullw	1
 27887  003E7A  0E59               	movlw	low _search_line4
 27888  003E7C  24F3               	addwf	prodl,w,c
 27889  003E7E  6EF6               	movwf	tblptrl,c
 27890  003E80  0E9E               	movlw	high _search_line4
 27891  003E82  20F4               	addwfc	prodh,w,c
 27892  003E84  6EF7               	movwf	tblptrh,c
 27893  003E86                     	if	1	;There are 3 active tblptr bytes
 27894  003E86  6AF8               	clrf	tblptru,c
 27895  003E88  0E00               	movlw	low (__mediumconst shr (0+16))
 27896  003E8A  22F8               	addwfc	tblptru,f,c
 27897  003E8C                     	endif
 27898  003E8C  0008               	tblrd		*
 27899  003E8E  50F5               	movf	tablat,w,c
 27900  003E90  0900               	iorlw	0
 27901  003E92  B4D8               	btfsc	status,2,c
 27902  003E94  0012               	return	
 27903  003E96  D7D8               	goto	l1587
 27904  003E98                     __end_of__display_search:
 27905                           	opt stack 0
 27906                           tosu	equ	0xFFF
 27907                           tosh	equ	0xFFE
 27908                           tosl	equ	0xFFD
 27909                           pclath	equ	0xFFA
 27910                           tblptru	equ	0xFF8
 27911                           tblptrh	equ	0xFF7
 27912                           tblptrl	equ	0xFF6
 27913                           tablat	equ	0xFF5
 27914                           prodh	equ	0xFF4
 27915                           prodl	equ	0xFF3
 27916                           intcon	equ	0xFF2
 27917                           intcon2	equ	0xFF1
 27918                           intcon3	equ	0xFF0
 27919                           indf0	equ	0xFEF
 27920                           postinc0	equ	0xFEE
 27921                           fsr0h	equ	0xFEA
 27922                           fsr0l	equ	0xFE9
 27923                           wreg	equ	0xFE8
 27924                           indf1	equ	0xFE7
 27925                           postdec1	equ	0xFE5
 27926                           plusw1	equ	0xFE3
 27927                           fsr1h	equ	0xFE2
 27928                           fsr1l	equ	0xFE1
 27929                           indf2	equ	0xFDF
 27930                           postinc2	equ	0xFDE
 27931                           postdec2	equ	0xFDD
 27932                           plusw2	equ	0xFDB
 27933                           fsr2h	equ	0xFDA
 27934                           fsr2l	equ	0xFD9
 27935                           status	equ	0xFD8
 27936                           
 27937 ;; *************** function __display_rebooting *****************
 27938 ;; Defined at:
 27939 ;;		line 547 in file "display.c"
 27940 ;; Parameters:    Size  Location     Type
 27941 ;;		None
 27942 ;; Auto vars:     Size  Location     Type
 27943 ;;  cntr            1    0[COMRAM] unsigned char 
 27944 ;; Return value:  Size  Location     Type
 27945 ;;                  1    wreg      void 
 27946 ;; Registers used:
 27947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27948 ;; Tracked objects:
 27949 ;;		On entry : 0/0
 27950 ;;		On exit  : 0/0
 27951 ;;		Unchanged: 0/0
 27952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27957 ;;Total ram usage:        1 bytes
 27958 ;; Hardware stack levels used:    1
 27959 ;; This function calls:
 27960 ;;		Nothing
 27961 ;; This function is called by:
 27962 ;;		_display_prepare
 27963 ;; This function uses a non-reentrant model
 27964 ;;
 27965                           
 27966                           	psect	text135
 27967  007F28                     __ptext135:
 27968                           	opt stack 0
 27969  007F28                     __display_rebooting:
 27970                           	opt stack 26
 27971                           
 27972                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 27973                           
 27974                           ;incstack = 0
 27975  007F28  0E00               	movlw	0
 27976  007F2A  6E01               	movwf	__display_rebooting@cntr,c
 27977                           
 27978                           ;display.c: 551: while(reboot_line1[cntr])
 27979  007F2C  D017               	goto	l1701
 27980  007F2E                     
 27981                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 27982  007F2E  5001               	movf	__display_rebooting@cntr,w,c
 27983  007F30  0D01               	mullw	1
 27984  007F32  0E3F               	movlw	low _reboot_line1
 27985  007F34  24F3               	addwf	prodl,w,c
 27986  007F36  6EF6               	movwf	tblptrl,c
 27987  007F38  0E9E               	movlw	high _reboot_line1
 27988  007F3A  20F4               	addwfc	prodh,w,c
 27989  007F3C  6EF7               	movwf	tblptrh,c
 27990  007F3E                     	if	1	;There are 3 active tblptr bytes
 27991  007F3E  6AF8               	clrf	tblptru,c
 27992  007F40  0E00               	movlw	low (__mediumconst shr (0+16))
 27993  007F42  22F8               	addwfc	tblptru,f,c
 27994  007F44                     	endif
 27995  007F44  5001               	movf	__display_rebooting@cntr,w,c
 27996  007F46  0D01               	mullw	1
 27997  007F48  0E00               	movlw	low _display_content
 27998  007F4A  24F3               	addwf	prodl,w,c
 27999  007F4C  6ED9               	movwf	fsr2l,c
 28000  007F4E  0E02               	movlw	high _display_content
 28001  007F50  20F4               	addwfc	prodh,w,c
 28002  007F52  6EDA               	movwf	fsr2h,c
 28003  007F54  0008               	tblrd		*
 28004  007F56  CFF5 FFDF          	movff	tablat,indf2
 28005  007F5A  2A01               	incf	__display_rebooting@cntr,f,c
 28006  007F5C                     l1701:
 28007  007F5C  5001               	movf	__display_rebooting@cntr,w,c
 28008  007F5E  0D01               	mullw	1
 28009  007F60  0E3F               	movlw	low _reboot_line1
 28010  007F62  24F3               	addwf	prodl,w,c
 28011  007F64  6EF6               	movwf	tblptrl,c
 28012  007F66  0E9E               	movlw	high _reboot_line1
 28013  007F68  20F4               	addwfc	prodh,w,c
 28014  007F6A  6EF7               	movwf	tblptrh,c
 28015  007F6C                     	if	1	;There are 3 active tblptr bytes
 28016  007F6C  6AF8               	clrf	tblptru,c
 28017  007F6E  0E00               	movlw	low (__mediumconst shr (0+16))
 28018  007F70  22F8               	addwfc	tblptru,f,c
 28019  007F72                     	endif
 28020  007F72  0008               	tblrd		*
 28021  007F74  50F5               	movf	tablat,w,c
 28022  007F76  0900               	iorlw	0
 28023  007F78  B4D8               	btfsc	status,2,c
 28024  007F7A  0012               	return	
 28025  007F7C  D7D8               	goto	l1702
 28026  007F7E                     __end_of__display_rebooting:
 28027                           	opt stack 0
 28028                           tosu	equ	0xFFF
 28029                           tosh	equ	0xFFE
 28030                           tosl	equ	0xFFD
 28031                           pclath	equ	0xFFA
 28032                           tblptru	equ	0xFF8
 28033                           tblptrh	equ	0xFF7
 28034                           tblptrl	equ	0xFF6
 28035                           tablat	equ	0xFF5
 28036                           prodh	equ	0xFF4
 28037                           prodl	equ	0xFF3
 28038                           intcon	equ	0xFF2
 28039                           intcon2	equ	0xFF1
 28040                           intcon3	equ	0xFF0
 28041                           indf0	equ	0xFEF
 28042                           postinc0	equ	0xFEE
 28043                           fsr0h	equ	0xFEA
 28044                           fsr0l	equ	0xFE9
 28045                           wreg	equ	0xFE8
 28046                           indf1	equ	0xFE7
 28047                           postdec1	equ	0xFE5
 28048                           plusw1	equ	0xFE3
 28049                           fsr1h	equ	0xFE2
 28050                           fsr1l	equ	0xFE1
 28051                           indf2	equ	0xFDF
 28052                           postinc2	equ	0xFDE
 28053                           postdec2	equ	0xFDD
 28054                           plusw2	equ	0xFDB
 28055                           fsr2h	equ	0xFDA
 28056                           fsr2l	equ	0xFD9
 28057                           status	equ	0xFD8
 28058                           
 28059 ;; *************** function __display_programming *****************
 28060 ;; Defined at:
 28061 ;;		line 505 in file "display.c"
 28062 ;; Parameters:    Size  Location     Type
 28063 ;;		None
 28064 ;; Auto vars:     Size  Location     Type
 28065 ;;  cntr            1   30[COMRAM] unsigned char 
 28066 ;; Return value:  Size  Location     Type
 28067 ;;                  1    wreg      void 
 28068 ;; Registers used:
 28069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28070 ;; Tracked objects:
 28071 ;;		On entry : 0/0
 28072 ;;		On exit  : 0/0
 28073 ;;		Unchanged: 0/0
 28074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28079 ;;Total ram usage:        1 bytes
 28080 ;; Hardware stack levels used:    1
 28081 ;; Hardware stack levels required when called:    4
 28082 ;; This function calls:
 28083 ;;		__display_itoa_u16
 28084 ;;		_bootloader_get_entries
 28085 ;;		_bootloader_get_flashPagesWritten
 28086 ;;		_bootloader_get_total_entries
 28087 ;; This function is called by:
 28088 ;;		_display_prepare
 28089 ;; This function uses a non-reentrant model
 28090 ;;
 28091                           
 28092                           	psect	text136
 28093  00328E                     __ptext136:
 28094                           	opt stack 0
 28095  00328E                     __display_programming:
 28096                           	opt stack 22
 28097                           
 28098                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 28099                           
 28100                           ;incstack = 0
 28101  00328E  0E00               	movlw	0
 28102  003290  6E1F               	movwf	__display_programming@cntr,c
 28103                           
 28104                           ;display.c: 509: while(programming_line1[cntr])
 28105  003292  D017               	goto	l1671
 28106  003294                     
 28107                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 28108  003294  501F               	movf	__display_programming@cntr,w,c
 28109  003296  0D01               	mullw	1
 28110  003298  0E94               	movlw	low _programming_line1
 28111  00329A  24F3               	addwf	prodl,w,c
 28112  00329C  6EF6               	movwf	tblptrl,c
 28113  00329E  0E9D               	movlw	high _programming_line1
 28114  0032A0  20F4               	addwfc	prodh,w,c
 28115  0032A2  6EF7               	movwf	tblptrh,c
 28116  0032A4                     	if	1	;There are 3 active tblptr bytes
 28117  0032A4  6AF8               	clrf	tblptru,c
 28118  0032A6  0E00               	movlw	low (__mediumconst shr (0+16))
 28119  0032A8  22F8               	addwfc	tblptru,f,c
 28120  0032AA                     	endif
 28121  0032AA  501F               	movf	__display_programming@cntr,w,c
 28122  0032AC  0D01               	mullw	1
 28123  0032AE  0E00               	movlw	low _display_content
 28124  0032B0  24F3               	addwf	prodl,w,c
 28125  0032B2  6ED9               	movwf	fsr2l,c
 28126  0032B4  0E02               	movlw	high _display_content
 28127  0032B6  20F4               	addwfc	prodh,w,c
 28128  0032B8  6EDA               	movwf	fsr2h,c
 28129  0032BA  0008               	tblrd		*
 28130  0032BC  CFF5 FFDF          	movff	tablat,indf2
 28131  0032C0  2A1F               	incf	__display_programming@cntr,f,c
 28132  0032C2                     l1671:
 28133  0032C2  501F               	movf	__display_programming@cntr,w,c
 28134  0032C4  0D01               	mullw	1
 28135  0032C6  0E94               	movlw	low _programming_line1
 28136  0032C8  24F3               	addwf	prodl,w,c
 28137  0032CA  6EF6               	movwf	tblptrl,c
 28138  0032CC  0E9D               	movlw	high _programming_line1
 28139  0032CE  20F4               	addwfc	prodh,w,c
 28140  0032D0  6EF7               	movwf	tblptrh,c
 28141  0032D2                     	if	1	;There are 3 active tblptr bytes
 28142  0032D2  6AF8               	clrf	tblptru,c
 28143  0032D4  0E00               	movlw	low (__mediumconst shr (0+16))
 28144  0032D6  22F8               	addwfc	tblptru,f,c
 28145  0032D8                     	endif
 28146  0032D8  0008               	tblrd		*
 28147  0032DA  50F5               	movf	tablat,w,c
 28148  0032DC  0900               	iorlw	0
 28149  0032DE  A4D8               	btfss	status,2,c
 28150  0032E0  D7D9               	goto	l1672
 28151                           
 28152                           ;display.c: 512: cntr = 0;
 28153  0032E2  0E00               	movlw	0
 28154  0032E4  6E1F               	movwf	__display_programming@cntr,c
 28155                           
 28156                           ;display.c: 513: while(programming_line2[cntr])
 28157  0032E6  D017               	goto	l1674
 28158  0032E8                     
 28159                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 28160  0032E8  501F               	movf	__display_programming@cntr,w,c
 28161  0032EA  0D01               	mullw	1
 28162  0032EC  0EFC               	movlw	low _programming_line2
 28163  0032EE  24F3               	addwf	prodl,w,c
 28164  0032F0  6EF6               	movwf	tblptrl,c
 28165  0032F2  0E9C               	movlw	high _programming_line2
 28166  0032F4  20F4               	addwfc	prodh,w,c
 28167  0032F6  6EF7               	movwf	tblptrh,c
 28168  0032F8                     	if	1	;There are 3 active tblptr bytes
 28169  0032F8  6AF8               	clrf	tblptru,c
 28170  0032FA  0E00               	movlw	low (__mediumconst shr (0+16))
 28171  0032FC  22F8               	addwfc	tblptru,f,c
 28172  0032FE                     	endif
 28173  0032FE  501F               	movf	__display_programming@cntr,w,c
 28174  003300  0D01               	mullw	1
 28175  003302  0E14               	movlw	low (_display_content+20)
 28176  003304  24F3               	addwf	prodl,w,c
 28177  003306  6ED9               	movwf	fsr2l,c
 28178  003308  0E02               	movlw	high (_display_content+20)
 28179  00330A  20F4               	addwfc	prodh,w,c
 28180  00330C  6EDA               	movwf	fsr2h,c
 28181  00330E  0008               	tblrd		*
 28182  003310  CFF5 FFDF          	movff	tablat,indf2
 28183  003314  2A1F               	incf	__display_programming@cntr,f,c
 28184  003316                     l1674:
 28185  003316  501F               	movf	__display_programming@cntr,w,c
 28186  003318  0D01               	mullw	1
 28187  00331A  0EFC               	movlw	low _programming_line2
 28188  00331C  24F3               	addwf	prodl,w,c
 28189  00331E  6EF6               	movwf	tblptrl,c
 28190  003320  0E9C               	movlw	high _programming_line2
 28191  003322  20F4               	addwfc	prodh,w,c
 28192  003324  6EF7               	movwf	tblptrh,c
 28193  003326                     	if	1	;There are 3 active tblptr bytes
 28194  003326  6AF8               	clrf	tblptru,c
 28195  003328  0E00               	movlw	low (__mediumconst shr (0+16))
 28196  00332A  22F8               	addwfc	tblptru,f,c
 28197  00332C                     	endif
 28198  00332C  0008               	tblrd		*
 28199  00332E  50F5               	movf	tablat,w,c
 28200  003330  0900               	iorlw	0
 28201  003332  A4D8               	btfss	status,2,c
 28202  003334  D7D9               	goto	l1675
 28203                           
 28204                           ;display.c: 516: cntr = 0;
 28205  003336  0E00               	movlw	0
 28206  003338  6E1F               	movwf	__display_programming@cntr,c
 28207                           
 28208                           ;display.c: 517: while(programming_line3[cntr])
 28209  00333A  D017               	goto	l1677
 28210  00333C                     
 28211                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 28212  00333C  501F               	movf	__display_programming@cntr,w,c
 28213  00333E  0D01               	mullw	1
 28214  003340  0E83               	movlw	low _programming_line3
 28215  003342  24F3               	addwf	prodl,w,c
 28216  003344  6EF6               	movwf	tblptrl,c
 28217  003346  0E9E               	movlw	high _programming_line3
 28218  003348  20F4               	addwfc	prodh,w,c
 28219  00334A  6EF7               	movwf	tblptrh,c
 28220  00334C                     	if	1	;There are 3 active tblptr bytes
 28221  00334C  6AF8               	clrf	tblptru,c
 28222  00334E  0E00               	movlw	low (__mediumconst shr (0+16))
 28223  003350  22F8               	addwfc	tblptru,f,c
 28224  003352                     	endif
 28225  003352  501F               	movf	__display_programming@cntr,w,c
 28226  003354  0D01               	mullw	1
 28227  003356  0E28               	movlw	low (_display_content+40)
 28228  003358  24F3               	addwf	prodl,w,c
 28229  00335A  6ED9               	movwf	fsr2l,c
 28230  00335C  0E02               	movlw	high (_display_content+40)
 28231  00335E  20F4               	addwfc	prodh,w,c
 28232  003360  6EDA               	movwf	fsr2h,c
 28233  003362  0008               	tblrd		*
 28234  003364  CFF5 FFDF          	movff	tablat,indf2
 28235  003368  2A1F               	incf	__display_programming@cntr,f,c
 28236  00336A                     l1677:
 28237  00336A  501F               	movf	__display_programming@cntr,w,c
 28238  00336C  0D01               	mullw	1
 28239  00336E  0E83               	movlw	low _programming_line3
 28240  003370  24F3               	addwf	prodl,w,c
 28241  003372  6EF6               	movwf	tblptrl,c
 28242  003374  0E9E               	movlw	high _programming_line3
 28243  003376  20F4               	addwfc	prodh,w,c
 28244  003378  6EF7               	movwf	tblptrh,c
 28245  00337A                     	if	1	;There are 3 active tblptr bytes
 28246  00337A  6AF8               	clrf	tblptru,c
 28247  00337C  0E00               	movlw	low (__mediumconst shr (0+16))
 28248  00337E  22F8               	addwfc	tblptru,f,c
 28249  003380                     	endif
 28250  003380  0008               	tblrd		*
 28251  003382  50F5               	movf	tablat,w,c
 28252  003384  0900               	iorlw	0
 28253  003386  A4D8               	btfss	status,2,c
 28254  003388  D7D9               	goto	l1678
 28255                           
 28256                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 28257  00338A  ECAE  F047         	call	_bootloader_get_entries	;wreg free
 28258  00338E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28259  003392  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28260  003396  6A1B               	clrf	__display_itoa_u16@value+2,c
 28261  003398  6A1C               	clrf	__display_itoa_u16@value+3,c
 28262  00339A  501F               	movf	__display_programming@cntr,w,c
 28263  00339C  0D01               	mullw	1
 28264  00339E  0E28               	movlw	low (_display_content+40)
 28265  0033A0  24F3               	addwf	prodl,w,c
 28266  0033A2  6E1D               	movwf	__display_itoa_u16@text,c
 28267  0033A4  0E02               	movlw	high (_display_content+40)
 28268  0033A6  20F4               	addwfc	prodh,w,c
 28269  0033A8  6E1E               	movwf	__display_itoa_u16@text+1,c
 28270  0033AA  EC0C  F030         	call	__display_itoa_u16	;wreg free
 28271  0033AE  261F               	addwf	__display_programming@cntr,f,c
 28272                           
 28273                           ;display.c: 520: display_content[2][cntr++] = '/';
 28274  0033B0  501F               	movf	__display_programming@cntr,w,c
 28275  0033B2  0D01               	mullw	1
 28276  0033B4  0E28               	movlw	low (_display_content+40)
 28277  0033B6  24F3               	addwf	prodl,w,c
 28278  0033B8  6ED9               	movwf	fsr2l,c
 28279  0033BA  0E02               	movlw	high (_display_content+40)
 28280  0033BC  20F4               	addwfc	prodh,w,c
 28281  0033BE  6EDA               	movwf	fsr2h,c
 28282  0033C0  0E2F               	movlw	47
 28283  0033C2  6EDF               	movwf	indf2,c
 28284  0033C4  2A1F               	incf	__display_programming@cntr,f,c
 28285                           
 28286                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 28287  0033C6  ECB8  F047         	call	_bootloader_get_total_entries	;wreg free
 28288  0033CA  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 28289  0033CE  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 28290  0033D2  6A1B               	clrf	__display_itoa_u16@value+2,c
 28291  0033D4  6A1C               	clrf	__display_itoa_u16@value+3,c
 28292  0033D6  501F               	movf	__display_programming@cntr,w,c
 28293  0033D8  0D01               	mullw	1
 28294  0033DA  0E28               	movlw	low (_display_content+40)
 28295  0033DC  24F3               	addwf	prodl,w,c
 28296  0033DE  6E1D               	movwf	__display_itoa_u16@text,c
 28297  0033E0  0E02               	movlw	high (_display_content+40)
 28298  0033E2  20F4               	addwfc	prodh,w,c
 28299  0033E4  6E1E               	movwf	__display_itoa_u16@text+1,c
 28300  0033E6  EC0C  F030         	call	__display_itoa_u16	;wreg free
 28301                           
 28302                           ;display.c: 523: cntr = 0;
 28303  0033EA  0E00               	movlw	0
 28304  0033EC  6E1F               	movwf	__display_programming@cntr,c
 28305                           
 28306                           ;display.c: 524: while(programming_line4[cntr])
 28307  0033EE  D017               	goto	l1680
 28308  0033F0                     
 28309                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 28310  0033F0  501F               	movf	__display_programming@cntr,w,c
 28311  0033F2  0D01               	mullw	1
 28312  0033F4  0E84               	movlw	low _programming_line4
 28313  0033F6  24F3               	addwf	prodl,w,c
 28314  0033F8  6EF6               	movwf	tblptrl,c
 28315  0033FA  0E9D               	movlw	high _programming_line4
 28316  0033FC  20F4               	addwfc	prodh,w,c
 28317  0033FE  6EF7               	movwf	tblptrh,c
 28318  003400                     	if	1	;There are 3 active tblptr bytes
 28319  003400  6AF8               	clrf	tblptru,c
 28320  003402  0E00               	movlw	low (__mediumconst shr (0+16))
 28321  003404  22F8               	addwfc	tblptru,f,c
 28322  003406                     	endif
 28323  003406  501F               	movf	__display_programming@cntr,w,c
 28324  003408  0D01               	mullw	1
 28325  00340A  0E3C               	movlw	low (_display_content+60)
 28326  00340C  24F3               	addwf	prodl,w,c
 28327  00340E  6ED9               	movwf	fsr2l,c
 28328  003410  0E02               	movlw	high (_display_content+60)
 28329  003412  20F4               	addwfc	prodh,w,c
 28330  003414  6EDA               	movwf	fsr2h,c
 28331  003416  0008               	tblrd		*
 28332  003418  CFF5 FFDF          	movff	tablat,indf2
 28333  00341C  2A1F               	incf	__display_programming@cntr,f,c
 28334  00341E                     l1680:
 28335  00341E  501F               	movf	__display_programming@cntr,w,c
 28336  003420  0D01               	mullw	1
 28337  003422  0E84               	movlw	low _programming_line4
 28338  003424  24F3               	addwf	prodl,w,c
 28339  003426  6EF6               	movwf	tblptrl,c
 28340  003428  0E9D               	movlw	high _programming_line4
 28341  00342A  20F4               	addwfc	prodh,w,c
 28342  00342C  6EF7               	movwf	tblptrh,c
 28343  00342E                     	if	1	;There are 3 active tblptr bytes
 28344  00342E  6AF8               	clrf	tblptru,c
 28345  003430  0E00               	movlw	low (__mediumconst shr (0+16))
 28346  003432  22F8               	addwfc	tblptru,f,c
 28347  003434                     	endif
 28348  003434  0008               	tblrd		*
 28349  003436  50F5               	movf	tablat,w,c
 28350  003438  0900               	iorlw	0
 28351  00343A  A4D8               	btfss	status,2,c
 28352  00343C  D7D9               	goto	l1681
 28353                           
 28354                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28355  00343E  ECB3  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 28356  003442  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28357  003446  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28358  00344A  6A1B               	clrf	__display_itoa_u16@value+2,c
 28359  00344C  6A1C               	clrf	__display_itoa_u16@value+3,c
 28360  00344E  501F               	movf	__display_programming@cntr,w,c
 28361  003450  0D01               	mullw	1
 28362  003452  0E3C               	movlw	low (_display_content+60)
 28363  003454  24F3               	addwf	prodl,w,c
 28364  003456  6E1D               	movwf	__display_itoa_u16@text,c
 28365  003458  0E02               	movlw	high (_display_content+60)
 28366  00345A  20F4               	addwfc	prodh,w,c
 28367  00345C  6E1E               	movwf	__display_itoa_u16@text+1,c
 28368  00345E  EC0C  F030         	call	__display_itoa_u16	;wreg free
 28369  003462  0012               	return		;funcret
 28370  003464                     __end_of__display_programming:
 28371                           	opt stack 0
 28372                           tosu	equ	0xFFF
 28373                           tosh	equ	0xFFE
 28374                           tosl	equ	0xFFD
 28375                           pclath	equ	0xFFA
 28376                           tblptru	equ	0xFF8
 28377                           tblptrh	equ	0xFF7
 28378                           tblptrl	equ	0xFF6
 28379                           tablat	equ	0xFF5
 28380                           prodh	equ	0xFF4
 28381                           prodl	equ	0xFF3
 28382                           intcon	equ	0xFF2
 28383                           intcon2	equ	0xFF1
 28384                           intcon3	equ	0xFF0
 28385                           indf0	equ	0xFEF
 28386                           postinc0	equ	0xFEE
 28387                           fsr0h	equ	0xFEA
 28388                           fsr0l	equ	0xFE9
 28389                           wreg	equ	0xFE8
 28390                           indf1	equ	0xFE7
 28391                           postdec1	equ	0xFE5
 28392                           plusw1	equ	0xFE3
 28393                           fsr1h	equ	0xFE2
 28394                           fsr1l	equ	0xFE1
 28395                           indf2	equ	0xFDF
 28396                           postinc2	equ	0xFDE
 28397                           postdec2	equ	0xFDD
 28398                           plusw2	equ	0xFDB
 28399                           fsr2h	equ	0xFDA
 28400                           fsr2l	equ	0xFD9
 28401                           status	equ	0xFD8
 28402                           
 28403 ;; *************** function __display_found *****************
 28404 ;; Defined at:
 28405 ;;		line 390 in file "display.c"
 28406 ;; Parameters:    Size  Location     Type
 28407 ;;		None
 28408 ;; Auto vars:     Size  Location     Type
 28409 ;;  cntr            1   39[COMRAM] unsigned char 
 28410 ;;  start           1   38[COMRAM] unsigned char 
 28411 ;; Return value:  Size  Location     Type
 28412 ;;                  1    wreg      void 
 28413 ;; Registers used:
 28414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28415 ;; Tracked objects:
 28416 ;;		On entry : 0/0
 28417 ;;		On exit  : 0/0
 28418 ;;		Unchanged: 0/0
 28419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28424 ;;Total ram usage:        4 bytes
 28425 ;; Hardware stack levels used:    1
 28426 ;; Hardware stack levels required when called:    5
 28427 ;; This function calls:
 28428 ;;		__display_itoa_u32
 28429 ;;		_bootloader_get_file_size
 28430 ;; This function is called by:
 28431 ;;		_display_prepare
 28432 ;; This function uses a non-reentrant model
 28433 ;;
 28434                           
 28435                           	psect	text137
 28436  002ED6                     __ptext137:
 28437                           	opt stack 0
 28438  002ED6                     __display_found:
 28439                           	opt stack 21
 28440                           
 28441                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 28442                           
 28443                           ;incstack = 0
 28444  002ED6  0E00               	movlw	0
 28445  002ED8  6E28               	movwf	__display_found@cntr,c
 28446                           
 28447                           ;display.c: 396: while(found_line1[cntr])
 28448  002EDA  D017               	goto	l1592
 28449  002EDC                     
 28450                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 28451  002EDC  5028               	movf	__display_found@cntr,w,c
 28452  002EDE  0D01               	mullw	1
 28453  002EE0  0ED4               	movlw	low _found_line1
 28454  002EE2  24F3               	addwf	prodl,w,c
 28455  002EE4  6EF6               	movwf	tblptrl,c
 28456  002EE6  0E9D               	movlw	high _found_line1
 28457  002EE8  20F4               	addwfc	prodh,w,c
 28458  002EEA  6EF7               	movwf	tblptrh,c
 28459  002EEC                     	if	1	;There are 3 active tblptr bytes
 28460  002EEC  6AF8               	clrf	tblptru,c
 28461  002EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 28462  002EF0  22F8               	addwfc	tblptru,f,c
 28463  002EF2                     	endif
 28464  002EF2  5028               	movf	__display_found@cntr,w,c
 28465  002EF4  0D01               	mullw	1
 28466  002EF6  0E00               	movlw	low _display_content
 28467  002EF8  24F3               	addwf	prodl,w,c
 28468  002EFA  6ED9               	movwf	fsr2l,c
 28469  002EFC  0E02               	movlw	high _display_content
 28470  002EFE  20F4               	addwfc	prodh,w,c
 28471  002F00  6EDA               	movwf	fsr2h,c
 28472  002F02  0008               	tblrd		*
 28473  002F04  CFF5 FFDF          	movff	tablat,indf2
 28474  002F08  2A28               	incf	__display_found@cntr,f,c
 28475  002F0A                     l1592:
 28476  002F0A  5028               	movf	__display_found@cntr,w,c
 28477  002F0C  0D01               	mullw	1
 28478  002F0E  0ED4               	movlw	low _found_line1
 28479  002F10  24F3               	addwf	prodl,w,c
 28480  002F12  6EF6               	movwf	tblptrl,c
 28481  002F14  0E9D               	movlw	high _found_line1
 28482  002F16  20F4               	addwfc	prodh,w,c
 28483  002F18  6EF7               	movwf	tblptrh,c
 28484  002F1A                     	if	1	;There are 3 active tblptr bytes
 28485  002F1A  6AF8               	clrf	tblptru,c
 28486  002F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 28487  002F1E  22F8               	addwfc	tblptru,f,c
 28488  002F20                     	endif
 28489  002F20  0008               	tblrd		*
 28490  002F22  50F5               	movf	tablat,w,c
 28491  002F24  0900               	iorlw	0
 28492  002F26  A4D8               	btfss	status,2,c
 28493  002F28  D7D9               	goto	l1593
 28494                           
 28495                           ;display.c: 399: cntr = 0;
 28496  002F2A  0E00               	movlw	0
 28497  002F2C  6E28               	movwf	__display_found@cntr,c
 28498                           
 28499                           ;display.c: 400: while(found_line2[cntr])
 28500  002F2E  D017               	goto	l1595
 28501  002F30                     
 28502                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 28503  002F30  5028               	movf	__display_found@cntr,w,c
 28504  002F32  0D01               	mullw	1
 28505  002F34  0EE9               	movlw	low _found_line2
 28506  002F36  24F3               	addwf	prodl,w,c
 28507  002F38  6EF6               	movwf	tblptrl,c
 28508  002F3A  0E9C               	movlw	high _found_line2
 28509  002F3C  20F4               	addwfc	prodh,w,c
 28510  002F3E  6EF7               	movwf	tblptrh,c
 28511  002F40                     	if	1	;There are 3 active tblptr bytes
 28512  002F40  6AF8               	clrf	tblptru,c
 28513  002F42  0E00               	movlw	low (__mediumconst shr (0+16))
 28514  002F44  22F8               	addwfc	tblptru,f,c
 28515  002F46                     	endif
 28516  002F46  5028               	movf	__display_found@cntr,w,c
 28517  002F48  0D01               	mullw	1
 28518  002F4A  0E14               	movlw	low (_display_content+20)
 28519  002F4C  24F3               	addwf	prodl,w,c
 28520  002F4E  6ED9               	movwf	fsr2l,c
 28521  002F50  0E02               	movlw	high (_display_content+20)
 28522  002F52  20F4               	addwfc	prodh,w,c
 28523  002F54  6EDA               	movwf	fsr2h,c
 28524  002F56  0008               	tblrd		*
 28525  002F58  CFF5 FFDF          	movff	tablat,indf2
 28526  002F5C  2A28               	incf	__display_found@cntr,f,c
 28527  002F5E                     l1595:
 28528  002F5E  5028               	movf	__display_found@cntr,w,c
 28529  002F60  0D01               	mullw	1
 28530  002F62  0EE9               	movlw	low _found_line2
 28531  002F64  24F3               	addwf	prodl,w,c
 28532  002F66  6EF6               	movwf	tblptrl,c
 28533  002F68  0E9C               	movlw	high _found_line2
 28534  002F6A  20F4               	addwfc	prodh,w,c
 28535  002F6C  6EF7               	movwf	tblptrh,c
 28536  002F6E                     	if	1	;There are 3 active tblptr bytes
 28537  002F6E  6AF8               	clrf	tblptru,c
 28538  002F70  0E00               	movlw	low (__mediumconst shr (0+16))
 28539  002F72  22F8               	addwfc	tblptru,f,c
 28540  002F74                     	endif
 28541  002F74  0008               	tblrd		*
 28542  002F76  50F5               	movf	tablat,w,c
 28543  002F78  0900               	iorlw	0
 28544  002F7A  A4D8               	btfss	status,2,c
 28545  002F7C  D7D9               	goto	l1596
 28546                           
 28547                           ;display.c: 403: cntr = 0;
 28548  002F7E  0E00               	movlw	0
 28549  002F80  6E28               	movwf	__display_found@cntr,c
 28550                           
 28551                           ;display.c: 404: while(found_line3[cntr])
 28552  002F82  D017               	goto	l1598
 28553  002F84                     
 28554                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 28555  002F84  5028               	movf	__display_found@cntr,w,c
 28556  002F86  0D01               	mullw	1
 28557  002F88  0E98               	movlw	low _found_line3
 28558  002F8A  24F3               	addwf	prodl,w,c
 28559  002F8C  6EF6               	movwf	tblptrl,c
 28560  002F8E  0E9E               	movlw	high _found_line3
 28561  002F90  20F4               	addwfc	prodh,w,c
 28562  002F92  6EF7               	movwf	tblptrh,c
 28563  002F94                     	if	1	;There are 3 active tblptr bytes
 28564  002F94  6AF8               	clrf	tblptru,c
 28565  002F96  0E00               	movlw	low (__mediumconst shr (0+16))
 28566  002F98  22F8               	addwfc	tblptru,f,c
 28567  002F9A                     	endif
 28568  002F9A  5028               	movf	__display_found@cntr,w,c
 28569  002F9C  0D01               	mullw	1
 28570  002F9E  0E28               	movlw	low (_display_content+40)
 28571  002FA0  24F3               	addwf	prodl,w,c
 28572  002FA2  6ED9               	movwf	fsr2l,c
 28573  002FA4  0E02               	movlw	high (_display_content+40)
 28574  002FA6  20F4               	addwfc	prodh,w,c
 28575  002FA8  6EDA               	movwf	fsr2h,c
 28576  002FAA  0008               	tblrd		*
 28577  002FAC  CFF5 FFDF          	movff	tablat,indf2
 28578  002FB0  2A28               	incf	__display_found@cntr,f,c
 28579  002FB2                     l1598:
 28580  002FB2  5028               	movf	__display_found@cntr,w,c
 28581  002FB4  0D01               	mullw	1
 28582  002FB6  0E98               	movlw	low _found_line3
 28583  002FB8  24F3               	addwf	prodl,w,c
 28584  002FBA  6EF6               	movwf	tblptrl,c
 28585  002FBC  0E9E               	movlw	high _found_line3
 28586  002FBE  20F4               	addwfc	prodh,w,c
 28587  002FC0  6EF7               	movwf	tblptrh,c
 28588  002FC2                     	if	1	;There are 3 active tblptr bytes
 28589  002FC2  6AF8               	clrf	tblptru,c
 28590  002FC4  0E00               	movlw	low (__mediumconst shr (0+16))
 28591  002FC6  22F8               	addwfc	tblptru,f,c
 28592  002FC8                     	endif
 28593  002FC8  0008               	tblrd		*
 28594  002FCA  50F5               	movf	tablat,w,c
 28595  002FCC  0900               	iorlw	0
 28596  002FCE  A4D8               	btfss	status,2,c
 28597  002FD0  D7D9               	goto	l1599
 28598                           
 28599                           ;display.c: 406: start = cntr;
 28600  002FD2  C028  F027         	movff	__display_found@cntr,__display_found@start
 28601                           
 28602                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28603  002FD6  EC44  F047         	call	_bootloader_get_file_size	;wreg free
 28604  002FDA  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28605  002FDE  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28606  002FE2  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28607  002FE6  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28608  002FEA  5028               	movf	__display_found@cntr,w,c
 28609  002FEC  0D01               	mullw	1
 28610  002FEE  0E28               	movlw	low (_display_content+40)
 28611  002FF0  24F3               	addwf	prodl,w,c
 28612  002FF2  6E23               	movwf	__display_itoa_u32@text,c
 28613  002FF4  0E02               	movlw	high (_display_content+40)
 28614  002FF6  20F4               	addwfc	prodh,w,c
 28615  002FF8  6E24               	movwf	__display_itoa_u32@text+1,c
 28616  002FFA  EC15  F006         	call	__display_itoa_u32	;wreg free
 28617  002FFE  2627               	addwf	__display_found@start,f,c
 28618                           
 28619                           ;display.c: 408: cntr = 0;
 28620  003000  0E00               	movlw	0
 28621  003002  6E28               	movwf	__display_found@cntr,c
 28622                           
 28623                           ;display.c: 409: while(found_line3b[cntr])
 28624  003004  D01C               	goto	l1601
 28625  003006                     
 28626                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 28627  003006  5028               	movf	__display_found@cntr,w,c
 28628  003008  0D01               	mullw	1
 28629  00300A  0E91               	movlw	low _found_line3b
 28630  00300C  24F3               	addwf	prodl,w,c
 28631  00300E  6EF6               	movwf	tblptrl,c
 28632  003010  0E9E               	movlw	high _found_line3b
 28633  003012  20F4               	addwfc	prodh,w,c
 28634  003014  6EF7               	movwf	tblptrh,c
 28635  003016                     	if	1	;There are 3 active tblptr bytes
 28636  003016  6AF8               	clrf	tblptru,c
 28637  003018  0E00               	movlw	low (__mediumconst shr (0+16))
 28638  00301A  22F8               	addwfc	tblptru,f,c
 28639  00301C                     	endif
 28640  00301C  5028               	movf	__display_found@cntr,w,c
 28641  00301E  C027  F025         	movff	__display_found@start,??__display_found
 28642  003022  6A26               	clrf	(??__display_found+1)& (0+255),c
 28643  003024  2625               	addwf	??__display_found,f,c
 28644  003026  0E00               	movlw	0
 28645  003028  2226               	addwfc	??__display_found+1,f,c
 28646  00302A  0E28               	movlw	low (_display_content+40)
 28647  00302C  2425               	addwf	??__display_found,w,c
 28648  00302E  6ED9               	movwf	fsr2l,c
 28649  003030  0E02               	movlw	high (_display_content+40)
 28650  003032  2026               	addwfc	??__display_found+1,w,c
 28651  003034  6EDA               	movwf	fsr2h,c
 28652  003036  0008               	tblrd		*
 28653  003038  CFF5 FFDF          	movff	tablat,indf2
 28654  00303C  2A28               	incf	__display_found@cntr,f,c
 28655  00303E                     l1601:
 28656  00303E  5028               	movf	__display_found@cntr,w,c
 28657  003040  0D01               	mullw	1
 28658  003042  0E91               	movlw	low _found_line3b
 28659  003044  24F3               	addwf	prodl,w,c
 28660  003046  6EF6               	movwf	tblptrl,c
 28661  003048  0E9E               	movlw	high _found_line3b
 28662  00304A  20F4               	addwfc	prodh,w,c
 28663  00304C  6EF7               	movwf	tblptrh,c
 28664  00304E                     	if	1	;There are 3 active tblptr bytes
 28665  00304E  6AF8               	clrf	tblptru,c
 28666  003050  0E00               	movlw	low (__mediumconst shr (0+16))
 28667  003052  22F8               	addwfc	tblptru,f,c
 28668  003054                     	endif
 28669  003054  0008               	tblrd		*
 28670  003056  50F5               	movf	tablat,w,c
 28671  003058  0900               	iorlw	0
 28672  00305A  A4D8               	btfss	status,2,c
 28673  00305C  D7D4               	goto	l1602
 28674                           
 28675                           ;display.c: 412: cntr = 0;
 28676  00305E  0E00               	movlw	0
 28677  003060  6E28               	movwf	__display_found@cntr,c
 28678                           
 28679                           ;display.c: 413: while(found_line4[cntr])
 28680  003062  D017               	goto	l1604
 28681  003064                     
 28682                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 28683  003064  5028               	movf	__display_found@cntr,w,c
 28684  003066  0D01               	mullw	1
 28685  003068  0E20               	movlw	low _found_line4
 28686  00306A  24F3               	addwf	prodl,w,c
 28687  00306C  6EF6               	movwf	tblptrl,c
 28688  00306E  0E9D               	movlw	high _found_line4
 28689  003070  20F4               	addwfc	prodh,w,c
 28690  003072  6EF7               	movwf	tblptrh,c
 28691  003074                     	if	1	;There are 3 active tblptr bytes
 28692  003074  6AF8               	clrf	tblptru,c
 28693  003076  0E00               	movlw	low (__mediumconst shr (0+16))
 28694  003078  22F8               	addwfc	tblptru,f,c
 28695  00307A                     	endif
 28696  00307A  5028               	movf	__display_found@cntr,w,c
 28697  00307C  0D01               	mullw	1
 28698  00307E  0E3C               	movlw	low (_display_content+60)
 28699  003080  24F3               	addwf	prodl,w,c
 28700  003082  6ED9               	movwf	fsr2l,c
 28701  003084  0E02               	movlw	high (_display_content+60)
 28702  003086  20F4               	addwfc	prodh,w,c
 28703  003088  6EDA               	movwf	fsr2h,c
 28704  00308A  0008               	tblrd		*
 28705  00308C  CFF5 FFDF          	movff	tablat,indf2
 28706  003090  2A28               	incf	__display_found@cntr,f,c
 28707  003092                     l1604:
 28708  003092  5028               	movf	__display_found@cntr,w,c
 28709  003094  0D01               	mullw	1
 28710  003096  0E20               	movlw	low _found_line4
 28711  003098  24F3               	addwf	prodl,w,c
 28712  00309A  6EF6               	movwf	tblptrl,c
 28713  00309C  0E9D               	movlw	high _found_line4
 28714  00309E  20F4               	addwfc	prodh,w,c
 28715  0030A0  6EF7               	movwf	tblptrh,c
 28716  0030A2                     	if	1	;There are 3 active tblptr bytes
 28717  0030A2  6AF8               	clrf	tblptru,c
 28718  0030A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28719  0030A6  22F8               	addwfc	tblptru,f,c
 28720  0030A8                     	endif
 28721  0030A8  0008               	tblrd		*
 28722  0030AA  50F5               	movf	tablat,w,c
 28723  0030AC  0900               	iorlw	0
 28724  0030AE  B4D8               	btfsc	status,2,c
 28725  0030B0  0012               	return	
 28726  0030B2  D7D8               	goto	l1605
 28727  0030B4                     __end_of__display_found:
 28728                           	opt stack 0
 28729                           tosu	equ	0xFFF
 28730                           tosh	equ	0xFFE
 28731                           tosl	equ	0xFFD
 28732                           pclath	equ	0xFFA
 28733                           tblptru	equ	0xFF8
 28734                           tblptrh	equ	0xFF7
 28735                           tblptrl	equ	0xFF6
 28736                           tablat	equ	0xFF5
 28737                           prodh	equ	0xFF4
 28738                           prodl	equ	0xFF3
 28739                           intcon	equ	0xFF2
 28740                           intcon2	equ	0xFF1
 28741                           intcon3	equ	0xFF0
 28742                           indf0	equ	0xFEF
 28743                           postinc0	equ	0xFEE
 28744                           fsr0h	equ	0xFEA
 28745                           fsr0l	equ	0xFE9
 28746                           wreg	equ	0xFE8
 28747                           indf1	equ	0xFE7
 28748                           postdec1	equ	0xFE5
 28749                           plusw1	equ	0xFE3
 28750                           fsr1h	equ	0xFE2
 28751                           fsr1l	equ	0xFE1
 28752                           indf2	equ	0xFDF
 28753                           postinc2	equ	0xFDE
 28754                           postdec2	equ	0xFDD
 28755                           plusw2	equ	0xFDB
 28756                           fsr2h	equ	0xFDA
 28757                           fsr2l	equ	0xFD9
 28758                           status	equ	0xFD8
 28759                           
 28760 ;; *************** function _bootloader_get_file_size *****************
 28761 ;; Defined at:
 28762 ;;		line 460 in file "bootloader.c"
 28763 ;; Parameters:    Size  Location     Type
 28764 ;;		None
 28765 ;; Auto vars:     Size  Location     Type
 28766 ;;		None
 28767 ;; Return value:  Size  Location     Type
 28768 ;;                  4    0[COMRAM] unsigned long 
 28769 ;; Registers used:
 28770 ;;		None
 28771 ;; Tracked objects:
 28772 ;;		On entry : 0/0
 28773 ;;		On exit  : 0/0
 28774 ;;		Unchanged: 0/0
 28775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28780 ;;Total ram usage:        4 bytes
 28781 ;; Hardware stack levels used:    1
 28782 ;; This function calls:
 28783 ;;		Nothing
 28784 ;; This function is called by:
 28785 ;;		__display_found
 28786 ;;		__fill_buffer_get_bootloader_details
 28787 ;; This function uses a non-reentrant model
 28788 ;;
 28789                           
 28790                           	psect	text138
 28791  008E88                     __ptext138:
 28792                           	opt stack 0
 28793  008E88                     _bootloader_get_file_size:
 28794                           	opt stack 25
 28795                           
 28796                           ;bootloader.c: 462: return hex_file_size;
 28797                           
 28798                           ;incstack = 0
 28799  008E88  C14A  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28800  008E8C  C14B  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28801  008E90  C14C  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28802  008E94  C14D  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28803  008E98  0012               	return		;funcret
 28804  008E9A                     __end_of_bootloader_get_file_size:
 28805                           	opt stack 0
 28806                           tosu	equ	0xFFF
 28807                           tosh	equ	0xFFE
 28808                           tosl	equ	0xFFD
 28809                           pclath	equ	0xFFA
 28810                           tblptru	equ	0xFF8
 28811                           tblptrh	equ	0xFF7
 28812                           tblptrl	equ	0xFF6
 28813                           tablat	equ	0xFF5
 28814                           prodh	equ	0xFF4
 28815                           prodl	equ	0xFF3
 28816                           intcon	equ	0xFF2
 28817                           intcon2	equ	0xFF1
 28818                           intcon3	equ	0xFF0
 28819                           indf0	equ	0xFEF
 28820                           postinc0	equ	0xFEE
 28821                           fsr0h	equ	0xFEA
 28822                           fsr0l	equ	0xFE9
 28823                           wreg	equ	0xFE8
 28824                           indf1	equ	0xFE7
 28825                           postdec1	equ	0xFE5
 28826                           plusw1	equ	0xFE3
 28827                           fsr1h	equ	0xFE2
 28828                           fsr1l	equ	0xFE1
 28829                           indf2	equ	0xFDF
 28830                           postinc2	equ	0xFDE
 28831                           postdec2	equ	0xFDD
 28832                           plusw2	equ	0xFDB
 28833                           fsr2h	equ	0xFDA
 28834                           fsr2l	equ	0xFD9
 28835                           status	equ	0xFD8
 28836                           
 28837 ;; *************** function __display_failed *****************
 28838 ;; Defined at:
 28839 ;;		line 455 in file "display.c"
 28840 ;; Parameters:    Size  Location     Type
 28841 ;;		None
 28842 ;; Auto vars:     Size  Location     Type
 28843 ;;  cntr            1   36[COMRAM] unsigned char 
 28844 ;;  start           1    0        unsigned char 
 28845 ;; Return value:  Size  Location     Type
 28846 ;;                  1    wreg      void 
 28847 ;; Registers used:
 28848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28849 ;; Tracked objects:
 28850 ;;		On entry : 0/0
 28851 ;;		On exit  : 0/0
 28852 ;;		Unchanged: 0/0
 28853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28858 ;;Total ram usage:        1 bytes
 28859 ;; Hardware stack levels used:    1
 28860 ;; Hardware stack levels required when called:    5
 28861 ;; This function calls:
 28862 ;;		__display_itoa_u16
 28863 ;;		__display_itoa_u32
 28864 ;;		_bootloader_get_entries
 28865 ;;		_bootloader_get_error
 28866 ;;		_bootloader_get_rec_address
 28867 ;; This function is called by:
 28868 ;;		_display_prepare
 28869 ;; This function uses a non-reentrant model
 28870 ;;
 28871                           
 28872                           	psect	text139
 28873  0012DC                     __ptext139:
 28874                           	opt stack 0
 28875  0012DC                     __display_failed:
 28876                           	opt stack 21
 28877                           
 28878                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 28879                           
 28880                           ;incstack = 0
 28881  0012DC  0E00               	movlw	0
 28882  0012DE  6E25               	movwf	__display_failed@cntr,c
 28883                           
 28884                           ;display.c: 460: while(failed_line1[cntr])
 28885  0012E0  D017               	goto	l1637
 28886  0012E2                     
 28887                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 28888  0012E2  5025               	movf	__display_failed@cntr,w,c
 28889  0012E4  0D01               	mullw	1
 28890  0012E6  0EA4               	movlw	low _failed_line1
 28891  0012E8  24F3               	addwf	prodl,w,c
 28892  0012EA  6EF6               	movwf	tblptrl,c
 28893  0012EC  0E9D               	movlw	high _failed_line1
 28894  0012EE  20F4               	addwfc	prodh,w,c
 28895  0012F0  6EF7               	movwf	tblptrh,c
 28896  0012F2                     	if	1	;There are 3 active tblptr bytes
 28897  0012F2  6AF8               	clrf	tblptru,c
 28898  0012F4  0E00               	movlw	low (__mediumconst shr (0+16))
 28899  0012F6  22F8               	addwfc	tblptru,f,c
 28900  0012F8                     	endif
 28901  0012F8  5025               	movf	__display_failed@cntr,w,c
 28902  0012FA  0D01               	mullw	1
 28903  0012FC  0E00               	movlw	low _display_content
 28904  0012FE  24F3               	addwf	prodl,w,c
 28905  001300  6ED9               	movwf	fsr2l,c
 28906  001302  0E02               	movlw	high _display_content
 28907  001304  20F4               	addwfc	prodh,w,c
 28908  001306  6EDA               	movwf	fsr2h,c
 28909  001308  0008               	tblrd		*
 28910  00130A  CFF5 FFDF          	movff	tablat,indf2
 28911  00130E  2A25               	incf	__display_failed@cntr,f,c
 28912  001310                     l1637:
 28913  001310  5025               	movf	__display_failed@cntr,w,c
 28914  001312  0D01               	mullw	1
 28915  001314  0EA4               	movlw	low _failed_line1
 28916  001316  24F3               	addwf	prodl,w,c
 28917  001318  6EF6               	movwf	tblptrl,c
 28918  00131A  0E9D               	movlw	high _failed_line1
 28919  00131C  20F4               	addwfc	prodh,w,c
 28920  00131E  6EF7               	movwf	tblptrh,c
 28921  001320                     	if	1	;There are 3 active tblptr bytes
 28922  001320  6AF8               	clrf	tblptru,c
 28923  001322  0E00               	movlw	low (__mediumconst shr (0+16))
 28924  001324  22F8               	addwfc	tblptru,f,c
 28925  001326                     	endif
 28926  001326  0008               	tblrd		*
 28927  001328  50F5               	movf	tablat,w,c
 28928  00132A  0900               	iorlw	0
 28929  00132C  A4D8               	btfss	status,2,c
 28930  00132E  D7D9               	goto	l1638
 28931                           
 28932                           ;display.c: 462: cntr = 0;
 28933  001330  0E00               	movlw	0
 28934  001332  6E25               	movwf	__display_failed@cntr,c
 28935                           
 28936                           ;display.c: 463: while(failed_line2[cntr])
 28937  001334  D017               	goto	l1640
 28938  001336                     
 28939                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 28940  001336  5025               	movf	__display_failed@cntr,w,c
 28941  001338  0D01               	mullw	1
 28942  00133A  0E0E               	movlw	low _failed_line2
 28943  00133C  24F3               	addwf	prodl,w,c
 28944  00133E  6EF6               	movwf	tblptrl,c
 28945  001340  0E9D               	movlw	high _failed_line2
 28946  001342  20F4               	addwfc	prodh,w,c
 28947  001344  6EF7               	movwf	tblptrh,c
 28948  001346                     	if	1	;There are 3 active tblptr bytes
 28949  001346  6AF8               	clrf	tblptru,c
 28950  001348  0E00               	movlw	low (__mediumconst shr (0+16))
 28951  00134A  22F8               	addwfc	tblptru,f,c
 28952  00134C                     	endif
 28953  00134C  5025               	movf	__display_failed@cntr,w,c
 28954  00134E  0D01               	mullw	1
 28955  001350  0E14               	movlw	low (_display_content+20)
 28956  001352  24F3               	addwf	prodl,w,c
 28957  001354  6ED9               	movwf	fsr2l,c
 28958  001356  0E02               	movlw	high (_display_content+20)
 28959  001358  20F4               	addwfc	prodh,w,c
 28960  00135A  6EDA               	movwf	fsr2h,c
 28961  00135C  0008               	tblrd		*
 28962  00135E  CFF5 FFDF          	movff	tablat,indf2
 28963  001362  2A25               	incf	__display_failed@cntr,f,c
 28964  001364                     l1640:
 28965  001364  5025               	movf	__display_failed@cntr,w,c
 28966  001366  0D01               	mullw	1
 28967  001368  0E0E               	movlw	low _failed_line2
 28968  00136A  24F3               	addwf	prodl,w,c
 28969  00136C  6EF6               	movwf	tblptrl,c
 28970  00136E  0E9D               	movlw	high _failed_line2
 28971  001370  20F4               	addwfc	prodh,w,c
 28972  001372  6EF7               	movwf	tblptrh,c
 28973  001374                     	if	1	;There are 3 active tblptr bytes
 28974  001374  6AF8               	clrf	tblptru,c
 28975  001376  0E00               	movlw	low (__mediumconst shr (0+16))
 28976  001378  22F8               	addwfc	tblptru,f,c
 28977  00137A                     	endif
 28978  00137A  0008               	tblrd		*
 28979  00137C  50F5               	movf	tablat,w,c
 28980  00137E  0900               	iorlw	0
 28981  001380  A4D8               	btfss	status,2,c
 28982  001382  D7D9               	goto	l1641
 28983                           
 28984                           ;display.c: 466: cntr = 0;
 28985  001384  0E00               	movlw	0
 28986  001386  6E25               	movwf	__display_failed@cntr,c
 28987                           
 28988                           ;display.c: 467: switch(bootloader_get_error())
 28989  001388  D0D6               	goto	l1643
 28990  00138A                     
 28991                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28992  00138A  5025               	movf	__display_failed@cntr,w,c
 28993  00138C  0D01               	mullw	1
 28994  00138E  0ED6               	movlw	low _failed_line3_startCode
 28995  001390  24F3               	addwf	prodl,w,c
 28996  001392  6EF6               	movwf	tblptrl,c
 28997  001394  0E9C               	movlw	high _failed_line3_startCode
 28998  001396  20F4               	addwfc	prodh,w,c
 28999  001398  6EF7               	movwf	tblptrh,c
 29000  00139A                     	if	1	;There are 3 active tblptr bytes
 29001  00139A  6AF8               	clrf	tblptru,c
 29002  00139C  0E00               	movlw	low (__mediumconst shr (0+16))
 29003  00139E  22F8               	addwfc	tblptru,f,c
 29004  0013A0                     	endif
 29005  0013A0  5025               	movf	__display_failed@cntr,w,c
 29006  0013A2  0D01               	mullw	1
 29007  0013A4  0E28               	movlw	low (_display_content+40)
 29008  0013A6  24F3               	addwf	prodl,w,c
 29009  0013A8  6ED9               	movwf	fsr2l,c
 29010  0013AA  0E02               	movlw	high (_display_content+40)
 29011  0013AC  20F4               	addwfc	prodh,w,c
 29012  0013AE  6EDA               	movwf	fsr2h,c
 29013  0013B0  0008               	tblrd		*
 29014  0013B2  CFF5 FFDF          	movff	tablat,indf2
 29015  0013B6  2A25               	incf	__display_failed@cntr,f,c
 29016  0013B8  5025               	movf	__display_failed@cntr,w,c
 29017  0013BA  0D01               	mullw	1
 29018  0013BC  0ED6               	movlw	low _failed_line3_startCode
 29019  0013BE  24F3               	addwf	prodl,w,c
 29020  0013C0  6EF6               	movwf	tblptrl,c
 29021  0013C2  0E9C               	movlw	high _failed_line3_startCode
 29022  0013C4  20F4               	addwfc	prodh,w,c
 29023  0013C6  6EF7               	movwf	tblptrh,c
 29024  0013C8                     	if	1	;There are 3 active tblptr bytes
 29025  0013C8  6AF8               	clrf	tblptru,c
 29026  0013CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29027  0013CC  22F8               	addwfc	tblptru,f,c
 29028  0013CE                     	endif
 29029  0013CE  0008               	tblrd		*
 29030  0013D0  50F5               	movf	tablat,w,c
 29031  0013D2  0900               	iorlw	0
 29032  0013D4  B4D8               	btfsc	status,2,c
 29033  0013D6  D0C0               	goto	l1648
 29034  0013D8  D7D8               	goto	l1646
 29035  0013DA                     
 29036                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29037  0013DA  5025               	movf	__display_failed@cntr,w,c
 29038  0013DC  0D01               	mullw	1
 29039  0013DE  0E04               	movlw	low _failed_line3_checksum
 29040  0013E0  24F3               	addwf	prodl,w,c
 29041  0013E2  6EF6               	movwf	tblptrl,c
 29042  0013E4  0E9E               	movlw	high _failed_line3_checksum
 29043  0013E6  20F4               	addwfc	prodh,w,c
 29044  0013E8  6EF7               	movwf	tblptrh,c
 29045  0013EA                     	if	1	;There are 3 active tblptr bytes
 29046  0013EA  6AF8               	clrf	tblptru,c
 29047  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29048  0013EE  22F8               	addwfc	tblptru,f,c
 29049  0013F0                     	endif
 29050  0013F0  5025               	movf	__display_failed@cntr,w,c
 29051  0013F2  0D01               	mullw	1
 29052  0013F4  0E28               	movlw	low (_display_content+40)
 29053  0013F6  24F3               	addwf	prodl,w,c
 29054  0013F8  6ED9               	movwf	fsr2l,c
 29055  0013FA  0E02               	movlw	high (_display_content+40)
 29056  0013FC  20F4               	addwfc	prodh,w,c
 29057  0013FE  6EDA               	movwf	fsr2h,c
 29058  001400  0008               	tblrd		*
 29059  001402  CFF5 FFDF          	movff	tablat,indf2
 29060  001406  2A25               	incf	__display_failed@cntr,f,c
 29061  001408  5025               	movf	__display_failed@cntr,w,c
 29062  00140A  0D01               	mullw	1
 29063  00140C  0E04               	movlw	low _failed_line3_checksum
 29064  00140E  24F3               	addwf	prodl,w,c
 29065  001410  6EF6               	movwf	tblptrl,c
 29066  001412  0E9E               	movlw	high _failed_line3_checksum
 29067  001414  20F4               	addwfc	prodh,w,c
 29068  001416  6EF7               	movwf	tblptrh,c
 29069  001418                     	if	1	;There are 3 active tblptr bytes
 29070  001418  6AF8               	clrf	tblptru,c
 29071  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 29072  00141C  22F8               	addwfc	tblptru,f,c
 29073  00141E                     	endif
 29074  00141E  0008               	tblrd		*
 29075  001420  50F5               	movf	tablat,w,c
 29076  001422  0900               	iorlw	0
 29077  001424  B4D8               	btfsc	status,2,c
 29078  001426  D098               	goto	l1648
 29079  001428  D7D8               	goto	l1651
 29080  00142A                     
 29081                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29082  00142A  5025               	movf	__display_failed@cntr,w,c
 29083  00142C  0D01               	mullw	1
 29084  00142E  0E13               	movlw	low _failed_line3_noNextRecord
 29085  001430  24F3               	addwf	prodl,w,c
 29086  001432  6EF6               	movwf	tblptrl,c
 29087  001434  0E9E               	movlw	high _failed_line3_noNextRecord
 29088  001436  20F4               	addwfc	prodh,w,c
 29089  001438  6EF7               	movwf	tblptrh,c
 29090  00143A                     	if	1	;There are 3 active tblptr bytes
 29091  00143A  6AF8               	clrf	tblptru,c
 29092  00143C  0E00               	movlw	low (__mediumconst shr (0+16))
 29093  00143E  22F8               	addwfc	tblptru,f,c
 29094  001440                     	endif
 29095  001440  5025               	movf	__display_failed@cntr,w,c
 29096  001442  0D01               	mullw	1
 29097  001444  0E28               	movlw	low (_display_content+40)
 29098  001446  24F3               	addwf	prodl,w,c
 29099  001448  6ED9               	movwf	fsr2l,c
 29100  00144A  0E02               	movlw	high (_display_content+40)
 29101  00144C  20F4               	addwfc	prodh,w,c
 29102  00144E  6EDA               	movwf	fsr2h,c
 29103  001450  0008               	tblrd		*
 29104  001452  CFF5 FFDF          	movff	tablat,indf2
 29105  001456  2A25               	incf	__display_failed@cntr,f,c
 29106  001458  5025               	movf	__display_failed@cntr,w,c
 29107  00145A  0D01               	mullw	1
 29108  00145C  0E13               	movlw	low _failed_line3_noNextRecord
 29109  00145E  24F3               	addwf	prodl,w,c
 29110  001460  6EF6               	movwf	tblptrl,c
 29111  001462  0E9E               	movlw	high _failed_line3_noNextRecord
 29112  001464  20F4               	addwfc	prodh,w,c
 29113  001466  6EF7               	movwf	tblptrh,c
 29114  001468                     	if	1	;There are 3 active tblptr bytes
 29115  001468  6AF8               	clrf	tblptru,c
 29116  00146A  0E00               	movlw	low (__mediumconst shr (0+16))
 29117  00146C  22F8               	addwfc	tblptru,f,c
 29118  00146E                     	endif
 29119  00146E  0008               	tblrd		*
 29120  001470  50F5               	movf	tablat,w,c
 29121  001472  0900               	iorlw	0
 29122  001474  B4D8               	btfsc	status,2,c
 29123  001476  D070               	goto	l1648
 29124  001478  D7D8               	goto	l1655
 29125  00147A                     
 29126                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 29127  00147A  5025               	movf	__display_failed@cntr,w,c
 29128  00147C  0D01               	mullw	1
 29129  00147E  0E31               	movlw	low _failed_line3_dataTooLong
 29130  001480  24F3               	addwf	prodl,w,c
 29131  001482  6EF6               	movwf	tblptrl,c
 29132  001484  0E9E               	movlw	high _failed_line3_dataTooLong
 29133  001486  20F4               	addwfc	prodh,w,c
 29134  001488  6EF7               	movwf	tblptrh,c
 29135  00148A                     	if	1	;There are 3 active tblptr bytes
 29136  00148A  6AF8               	clrf	tblptru,c
 29137  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
 29138  00148E  22F8               	addwfc	tblptru,f,c
 29139  001490                     	endif
 29140  001490  5025               	movf	__display_failed@cntr,w,c
 29141  001492  0D01               	mullw	1
 29142  001494  0E28               	movlw	low (_display_content+40)
 29143  001496  24F3               	addwf	prodl,w,c
 29144  001498  6ED9               	movwf	fsr2l,c
 29145  00149A  0E02               	movlw	high (_display_content+40)
 29146  00149C  20F4               	addwfc	prodh,w,c
 29147  00149E  6EDA               	movwf	fsr2h,c
 29148  0014A0  0008               	tblrd		*
 29149  0014A2  CFF5 FFDF          	movff	tablat,indf2
 29150  0014A6  2A25               	incf	__display_failed@cntr,f,c
 29151  0014A8  5025               	movf	__display_failed@cntr,w,c
 29152  0014AA  0D01               	mullw	1
 29153  0014AC  0E31               	movlw	low _failed_line3_dataTooLong
 29154  0014AE  24F3               	addwf	prodl,w,c
 29155  0014B0  6EF6               	movwf	tblptrl,c
 29156  0014B2  0E9E               	movlw	high _failed_line3_dataTooLong
 29157  0014B4  20F4               	addwfc	prodh,w,c
 29158  0014B6  6EF7               	movwf	tblptrh,c
 29159  0014B8                     	if	1	;There are 3 active tblptr bytes
 29160  0014B8  6AF8               	clrf	tblptru,c
 29161  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
 29162  0014BC  22F8               	addwfc	tblptru,f,c
 29163  0014BE                     	endif
 29164  0014BE  0008               	tblrd		*
 29165  0014C0  50F5               	movf	tablat,w,c
 29166  0014C2  0900               	iorlw	0
 29167  0014C4  B4D8               	btfsc	status,2,c
 29168  0014C6  D048               	goto	l1648
 29169  0014C8  D7D8               	goto	l1659
 29170  0014CA                     
 29171                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 29172  0014CA  5025               	movf	__display_failed@cntr,w,c
 29173  0014CC  0D01               	mullw	1
 29174  0014CE  0EAE               	movlw	low _failed_line3_addressRange
 29175  0014D0  24F3               	addwf	prodl,w,c
 29176  0014D2  6EF6               	movwf	tblptrl,c
 29177  0014D4  0E9C               	movlw	high _failed_line3_addressRange
 29178  0014D6  20F4               	addwfc	prodh,w,c
 29179  0014D8  6EF7               	movwf	tblptrh,c
 29180  0014DA                     	if	1	;There are 3 active tblptr bytes
 29181  0014DA  6AF8               	clrf	tblptru,c
 29182  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
 29183  0014DE  22F8               	addwfc	tblptru,f,c
 29184  0014E0                     	endif
 29185  0014E0  5025               	movf	__display_failed@cntr,w,c
 29186  0014E2  0D01               	mullw	1
 29187  0014E4  0E28               	movlw	low (_display_content+40)
 29188  0014E6  24F3               	addwf	prodl,w,c
 29189  0014E8  6ED9               	movwf	fsr2l,c
 29190  0014EA  0E02               	movlw	high (_display_content+40)
 29191  0014EC  20F4               	addwfc	prodh,w,c
 29192  0014EE  6EDA               	movwf	fsr2h,c
 29193  0014F0  0008               	tblrd		*
 29194  0014F2  CFF5 FFDF          	movff	tablat,indf2
 29195  0014F6  2A25               	incf	__display_failed@cntr,f,c
 29196  0014F8  5025               	movf	__display_failed@cntr,w,c
 29197  0014FA  0D01               	mullw	1
 29198  0014FC  0EAE               	movlw	low _failed_line3_addressRange
 29199  0014FE  24F3               	addwf	prodl,w,c
 29200  001500  6EF6               	movwf	tblptrl,c
 29201  001502  0E9C               	movlw	high _failed_line3_addressRange
 29202  001504  20F4               	addwfc	prodh,w,c
 29203  001506  6EF7               	movwf	tblptrh,c
 29204  001508                     	if	1	;There are 3 active tblptr bytes
 29205  001508  6AF8               	clrf	tblptru,c
 29206  00150A  0E00               	movlw	low (__mediumconst shr (0+16))
 29207  00150C  22F8               	addwfc	tblptru,f,c
 29208  00150E                     	endif
 29209  00150E  0008               	tblrd		*
 29210  001510  50F5               	movf	tablat,w,c
 29211  001512  0900               	iorlw	0
 29212  001514  A4D8               	btfss	status,2,c
 29213  001516  D7D9               	goto	l1663
 29214                           
 29215                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 29216  001518  ECA9  F047         	call	_bootloader_get_rec_address	;wreg free
 29217  00151C  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 29218  001520  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 29219  001524  6A21               	clrf	__display_itoa_u32@value+2,c
 29220  001526  6A22               	clrf	__display_itoa_u32@value+3,c
 29221  001528  0E4A               	movlw	low (_display_content+74)
 29222  00152A  6E23               	movwf	__display_itoa_u32@text,c
 29223  00152C  0E02               	movlw	high (_display_content+74)
 29224  00152E  6E24               	movwf	__display_itoa_u32@text+1,c
 29225  001530  EC15  F006         	call	__display_itoa_u32	;wreg free
 29226                           
 29227                           ;display.c: 497: }
 29228                           
 29229                           ;display.c: 495: break;
 29230  001534  D011               	goto	l1648
 29231  001536                     l1643:
 29232  001536  ECE2  F047         	call	_bootloader_get_error	;wreg free
 29233                           
 29234                           ; Switch size 1, requested type "space"
 29235                           ; Number of cases is 5, Range of values is 11 to 15
 29236                           ; switch strategies available:
 29237                           ; Name         Instructions Cycles
 29238                           ; simple_byte           16     9 (average)
 29239                           ;	Chosen strategy is simple_byte
 29240  00153A  0A0B               	xorlw	11	; case 11
 29241  00153C  B4D8               	btfsc	status,2,c
 29242  00153E  D7DC               	goto	l1662
 29243  001540  0A07               	xorlw	7	; case 12
 29244  001542  B4D8               	btfsc	status,2,c
 29245  001544  D7B1               	goto	l1658
 29246  001546  0A01               	xorlw	1	; case 13
 29247  001548  B4D8               	btfsc	status,2,c
 29248  00154A  D786               	goto	l1654
 29249  00154C  0A03               	xorlw	3	; case 14
 29250  00154E  B4D8               	btfsc	status,2,c
 29251  001550  D75B               	goto	l1650
 29252  001552  0A01               	xorlw	1	; case 15
 29253  001554  B4D8               	btfsc	status,2,c
 29254  001556  D730               	goto	l1645
 29255  001558                     l1648:
 29256                           
 29257                           ;display.c: 499: cntr = 0;
 29258  001558  0E00               	movlw	0
 29259  00155A  6E25               	movwf	__display_failed@cntr,c
 29260                           
 29261                           ;display.c: 500: while(failed_line4[cntr])
 29262  00155C  D017               	goto	l1665
 29263  00155E                     
 29264                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 29265  00155E  5025               	movf	__display_failed@cntr,w,c
 29266  001560  0D01               	mullw	1
 29267  001562  0E6B               	movlw	low _failed_line4
 29268  001564  24F3               	addwf	prodl,w,c
 29269  001566  6EF6               	movwf	tblptrl,c
 29270  001568  0E9E               	movlw	high _failed_line4
 29271  00156A  20F4               	addwfc	prodh,w,c
 29272  00156C  6EF7               	movwf	tblptrh,c
 29273  00156E                     	if	1	;There are 3 active tblptr bytes
 29274  00156E  6AF8               	clrf	tblptru,c
 29275  001570  0E00               	movlw	low (__mediumconst shr (0+16))
 29276  001572  22F8               	addwfc	tblptru,f,c
 29277  001574                     	endif
 29278  001574  5025               	movf	__display_failed@cntr,w,c
 29279  001576  0D01               	mullw	1
 29280  001578  0E3C               	movlw	low (_display_content+60)
 29281  00157A  24F3               	addwf	prodl,w,c
 29282  00157C  6ED9               	movwf	fsr2l,c
 29283  00157E  0E02               	movlw	high (_display_content+60)
 29284  001580  20F4               	addwfc	prodh,w,c
 29285  001582  6EDA               	movwf	fsr2h,c
 29286  001584  0008               	tblrd		*
 29287  001586  CFF5 FFDF          	movff	tablat,indf2
 29288  00158A  2A25               	incf	__display_failed@cntr,f,c
 29289  00158C                     l1665:
 29290  00158C  5025               	movf	__display_failed@cntr,w,c
 29291  00158E  0D01               	mullw	1
 29292  001590  0E6B               	movlw	low _failed_line4
 29293  001592  24F3               	addwf	prodl,w,c
 29294  001594  6EF6               	movwf	tblptrl,c
 29295  001596  0E9E               	movlw	high _failed_line4
 29296  001598  20F4               	addwfc	prodh,w,c
 29297  00159A  6EF7               	movwf	tblptrh,c
 29298  00159C                     	if	1	;There are 3 active tblptr bytes
 29299  00159C  6AF8               	clrf	tblptru,c
 29300  00159E  0E00               	movlw	low (__mediumconst shr (0+16))
 29301  0015A0  22F8               	addwfc	tblptru,f,c
 29302  0015A2                     	endif
 29303  0015A2  0008               	tblrd		*
 29304  0015A4  50F5               	movf	tablat,w,c
 29305  0015A6  0900               	iorlw	0
 29306  0015A8  A4D8               	btfss	status,2,c
 29307  0015AA  D7D9               	goto	l1666
 29308                           
 29309                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 29310  0015AC  ECAE  F047         	call	_bootloader_get_entries	;wreg free
 29311  0015B0  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29312  0015B4  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29313  0015B8  6A1B               	clrf	__display_itoa_u16@value+2,c
 29314  0015BA  6A1C               	clrf	__display_itoa_u16@value+3,c
 29315  0015BC  5025               	movf	__display_failed@cntr,w,c
 29316  0015BE  0D01               	mullw	1
 29317  0015C0  0E3C               	movlw	low (_display_content+60)
 29318  0015C2  24F3               	addwf	prodl,w,c
 29319  0015C4  6E1D               	movwf	__display_itoa_u16@text,c
 29320  0015C6  0E02               	movlw	high (_display_content+60)
 29321  0015C8  20F4               	addwfc	prodh,w,c
 29322  0015CA  6E1E               	movwf	__display_itoa_u16@text+1,c
 29323  0015CC  EC0C  F030         	call	__display_itoa_u16	;wreg free
 29324  0015D0  0012               	return		;funcret
 29325  0015D2                     __end_of__display_failed:
 29326                           	opt stack 0
 29327                           tosu	equ	0xFFF
 29328                           tosh	equ	0xFFE
 29329                           tosl	equ	0xFFD
 29330                           pclath	equ	0xFFA
 29331                           tblptru	equ	0xFF8
 29332                           tblptrh	equ	0xFF7
 29333                           tblptrl	equ	0xFF6
 29334                           tablat	equ	0xFF5
 29335                           prodh	equ	0xFF4
 29336                           prodl	equ	0xFF3
 29337                           intcon	equ	0xFF2
 29338                           intcon2	equ	0xFF1
 29339                           intcon3	equ	0xFF0
 29340                           indf0	equ	0xFEF
 29341                           postinc0	equ	0xFEE
 29342                           fsr0h	equ	0xFEA
 29343                           fsr0l	equ	0xFE9
 29344                           wreg	equ	0xFE8
 29345                           indf1	equ	0xFE7
 29346                           postdec1	equ	0xFE5
 29347                           plusw1	equ	0xFE3
 29348                           fsr1h	equ	0xFE2
 29349                           fsr1l	equ	0xFE1
 29350                           indf2	equ	0xFDF
 29351                           postinc2	equ	0xFDE
 29352                           postdec2	equ	0xFDD
 29353                           plusw2	equ	0xFDB
 29354                           fsr2h	equ	0xFDA
 29355                           fsr2l	equ	0xFD9
 29356                           status	equ	0xFD8
 29357                           
 29358 ;; *************** function _bootloader_get_rec_address *****************
 29359 ;; Defined at:
 29360 ;;		line 485 in file "bootloader.c"
 29361 ;; Parameters:    Size  Location     Type
 29362 ;;		None
 29363 ;; Auto vars:     Size  Location     Type
 29364 ;;		None
 29365 ;; Return value:  Size  Location     Type
 29366 ;;                  2    0[COMRAM] unsigned int 
 29367 ;; Registers used:
 29368 ;;		None
 29369 ;; Tracked objects:
 29370 ;;		On entry : 0/0
 29371 ;;		On exit  : 0/0
 29372 ;;		Unchanged: 0/0
 29373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29378 ;;Total ram usage:        2 bytes
 29379 ;; Hardware stack levels used:    1
 29380 ;; This function calls:
 29381 ;;		Nothing
 29382 ;; This function is called by:
 29383 ;;		__display_failed
 29384 ;;		__fill_buffer_get_bootloader_details
 29385 ;; This function uses a non-reentrant model
 29386 ;;
 29387                           
 29388                           	psect	text140
 29389  008F52                     __ptext140:
 29390                           	opt stack 0
 29391  008F52                     _bootloader_get_rec_address:
 29392                           	opt stack 25
 29393                           
 29394                           ;bootloader.c: 488: return hex_file_entry.address;
 29395                           
 29396                           ;incstack = 0
 29397  008F52  C195  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29398  008F56  C196  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29399  008F5A  0012               	return		;funcret
 29400  008F5C                     __end_of_bootloader_get_rec_address:
 29401                           	opt stack 0
 29402                           tosu	equ	0xFFF
 29403                           tosh	equ	0xFFE
 29404                           tosl	equ	0xFFD
 29405                           pclath	equ	0xFFA
 29406                           tblptru	equ	0xFF8
 29407                           tblptrh	equ	0xFF7
 29408                           tblptrl	equ	0xFF6
 29409                           tablat	equ	0xFF5
 29410                           prodh	equ	0xFF4
 29411                           prodl	equ	0xFF3
 29412                           intcon	equ	0xFF2
 29413                           intcon2	equ	0xFF1
 29414                           intcon3	equ	0xFF0
 29415                           indf0	equ	0xFEF
 29416                           postinc0	equ	0xFEE
 29417                           fsr0h	equ	0xFEA
 29418                           fsr0l	equ	0xFE9
 29419                           wreg	equ	0xFE8
 29420                           indf1	equ	0xFE7
 29421                           postdec1	equ	0xFE5
 29422                           plusw1	equ	0xFE3
 29423                           fsr1h	equ	0xFE2
 29424                           fsr1l	equ	0xFE1
 29425                           indf2	equ	0xFDF
 29426                           postinc2	equ	0xFDE
 29427                           postdec2	equ	0xFDD
 29428                           plusw2	equ	0xFDB
 29429                           fsr2h	equ	0xFDA
 29430                           fsr2l	equ	0xFD9
 29431                           status	equ	0xFD8
 29432                           
 29433 ;; *************** function _bootloader_get_error *****************
 29434 ;; Defined at:
 29435 ;;		line 475 in file "bootloader.c"
 29436 ;; Parameters:    Size  Location     Type
 29437 ;;		None
 29438 ;; Auto vars:     Size  Location     Type
 29439 ;;		None
 29440 ;; Return value:  Size  Location     Type
 29441 ;;                  1    wreg      enum E7014
 29442 ;; Registers used:
 29443 ;;		wreg, status,2
 29444 ;; Tracked objects:
 29445 ;;		On entry : 0/0
 29446 ;;		On exit  : 0/0
 29447 ;;		Unchanged: 0/0
 29448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29453 ;;Total ram usage:        0 bytes
 29454 ;; Hardware stack levels used:    1
 29455 ;; This function calls:
 29456 ;;		Nothing
 29457 ;; This function is called by:
 29458 ;;		__display_failed
 29459 ;;		__fill_buffer_get_bootloader_details
 29460 ;; This function uses a non-reentrant model
 29461 ;;
 29462                           
 29463                           	psect	text141
 29464  008FC4                     __ptext141:
 29465                           	opt stack 0
 29466  008FC4                     _bootloader_get_error:
 29467                           	opt stack 25
 29468                           
 29469                           ;bootloader.c: 477: return last_error;
 29470                           
 29471                           ;incstack = 0
 29472  008FC4  0101               	movlb	1	; () banked
 29473  008FC6  518C               	movf	_last_error& (0+255),w,b
 29474  008FC8  0012               	return	
 29475  008FCA                     __end_of_bootloader_get_error:
 29476                           	opt stack 0
 29477                           tosu	equ	0xFFF
 29478                           tosh	equ	0xFFE
 29479                           tosl	equ	0xFFD
 29480                           pclath	equ	0xFFA
 29481                           tblptru	equ	0xFF8
 29482                           tblptrh	equ	0xFF7
 29483                           tblptrl	equ	0xFF6
 29484                           tablat	equ	0xFF5
 29485                           prodh	equ	0xFF4
 29486                           prodl	equ	0xFF3
 29487                           intcon	equ	0xFF2
 29488                           intcon2	equ	0xFF1
 29489                           intcon3	equ	0xFF0
 29490                           indf0	equ	0xFEF
 29491                           postinc0	equ	0xFEE
 29492                           fsr0h	equ	0xFEA
 29493                           fsr0l	equ	0xFE9
 29494                           wreg	equ	0xFE8
 29495                           indf1	equ	0xFE7
 29496                           postdec1	equ	0xFE5
 29497                           plusw1	equ	0xFE3
 29498                           fsr1h	equ	0xFE2
 29499                           fsr1l	equ	0xFE1
 29500                           indf2	equ	0xFDF
 29501                           postinc2	equ	0xFDE
 29502                           postdec2	equ	0xFDD
 29503                           plusw2	equ	0xFDB
 29504                           fsr2h	equ	0xFDA
 29505                           fsr2l	equ	0xFD9
 29506                           status	equ	0xFD8
 29507                           
 29508 ;; *************** function _bootloader_get_entries *****************
 29509 ;; Defined at:
 29510 ;;		line 465 in file "bootloader.c"
 29511 ;; Parameters:    Size  Location     Type
 29512 ;;		None
 29513 ;; Auto vars:     Size  Location     Type
 29514 ;;		None
 29515 ;; Return value:  Size  Location     Type
 29516 ;;                  2    0[COMRAM] unsigned int 
 29517 ;; Registers used:
 29518 ;;		None
 29519 ;; Tracked objects:
 29520 ;;		On entry : 0/0
 29521 ;;		On exit  : 0/0
 29522 ;;		Unchanged: 0/0
 29523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29528 ;;Total ram usage:        2 bytes
 29529 ;; Hardware stack levels used:    1
 29530 ;; This function calls:
 29531 ;;		Nothing
 29532 ;; This function is called by:
 29533 ;;		__display_verify
 29534 ;;		__display_failed
 29535 ;;		__display_programming
 29536 ;;		__fill_buffer_get_bootloader_details
 29537 ;; This function uses a non-reentrant model
 29538 ;;
 29539                           
 29540                           	psect	text142
 29541  008F5C                     __ptext142:
 29542                           	opt stack 0
 29543  008F5C                     _bootloader_get_entries:
 29544                           	opt stack 25
 29545                           
 29546                           ;bootloader.c: 467: return hex_file_entries;
 29547                           
 29548                           ; BSR set to: 1
 29549                           ;incstack = 0
 29550  008F5C  C178  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29551  008F60  C179  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29552  008F64  0012               	return		;funcret
 29553  008F66                     __end_of_bootloader_get_entries:
 29554                           	opt stack 0
 29555                           tosu	equ	0xFFF
 29556                           tosh	equ	0xFFE
 29557                           tosl	equ	0xFFD
 29558                           pclath	equ	0xFFA
 29559                           tblptru	equ	0xFF8
 29560                           tblptrh	equ	0xFF7
 29561                           tblptrl	equ	0xFF6
 29562                           tablat	equ	0xFF5
 29563                           prodh	equ	0xFF4
 29564                           prodl	equ	0xFF3
 29565                           intcon	equ	0xFF2
 29566                           intcon2	equ	0xFF1
 29567                           intcon3	equ	0xFF0
 29568                           indf0	equ	0xFEF
 29569                           postinc0	equ	0xFEE
 29570                           fsr0h	equ	0xFEA
 29571                           fsr0l	equ	0xFE9
 29572                           wreg	equ	0xFE8
 29573                           indf1	equ	0xFE7
 29574                           postdec1	equ	0xFE5
 29575                           plusw1	equ	0xFE3
 29576                           fsr1h	equ	0xFE2
 29577                           fsr1l	equ	0xFE1
 29578                           indf2	equ	0xFDF
 29579                           postinc2	equ	0xFDE
 29580                           postdec2	equ	0xFDD
 29581                           plusw2	equ	0xFDB
 29582                           fsr2h	equ	0xFDA
 29583                           fsr2l	equ	0xFD9
 29584                           status	equ	0xFD8
 29585                           
 29586 ;; *************** function __display_itoa_u32 *****************
 29587 ;; Defined at:
 29588 ;;		line 172 in file "display.c"
 29589 ;; Parameters:    Size  Location     Type
 29590 ;;  value           4   30[COMRAM] unsigned long 
 29591 ;;  text            2   34[COMRAM] PTR unsigned char 
 29592 ;;		 -> display_content(80), 
 29593 ;; Auto vars:     Size  Location     Type
 29594 ;;		None
 29595 ;; Return value:  Size  Location     Type
 29596 ;;                  1    wreg      unsigned char 
 29597 ;; Registers used:
 29598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29599 ;; Tracked objects:
 29600 ;;		On entry : 0/0
 29601 ;;		On exit  : 0/0
 29602 ;;		Unchanged: 0/0
 29603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29604 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29607 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29608 ;;Total ram usage:        6 bytes
 29609 ;; Hardware stack levels used:    1
 29610 ;; Hardware stack levels required when called:    4
 29611 ;; This function calls:
 29612 ;;		___lldiv
 29613 ;;		___llmod
 29614 ;;		__display_itoa_u16
 29615 ;;		_itoa
 29616 ;; This function is called by:
 29617 ;;		__display_start
 29618 ;;		__display_found
 29619 ;;		__display_failed
 29620 ;; This function uses a non-reentrant model
 29621 ;;
 29622                           
 29623                           	psect	text143
 29624  000C2A                     __ptext143:
 29625                           	opt stack 0
 29626  000C2A                     __display_itoa_u32:
 29627                           	opt stack 21
 29628                           
 29629                           ;display.c: 175: if(value<=0x7FFF)
 29630                           
 29631                           ;incstack = 0
 29632  000C2A  5022               	movf	__display_itoa_u32@value+3,w,c
 29633  000C2C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 29634  000C2E  E111               	bnz	l11183
 29635  000C30  0E80               	movlw	128
 29636  000C32  5C20               	subwf	__display_itoa_u32@value+1,w,c
 29637  000C34  B0D8               	btfsc	status,0,c
 29638  000C36  D00D               	goto	l1508
 29639                           
 29640                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 29641  000C38  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 29642  000C3C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 29643  000C40  6A1B               	clrf	__display_itoa_u16@value+2,c
 29644  000C42  6A1C               	clrf	__display_itoa_u16@value+3,c
 29645  000C44  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 29646  000C48  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 29647  000C4C  EC0C  F030         	call	__display_itoa_u16	;wreg free
 29648  000C50  0012               	return	
 29649  000C52                     l1508:
 29650  000C52                     l11183:
 29651                           
 29652                           ;display.c: 178: };display.c: 181: if(value>100000000)
 29653  000C52  041F               	decf	__display_itoa_u32@value,w,c
 29654  000C54  0EE1               	movlw	225
 29655  000C56  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29656  000C58  0EF5               	movlw	245
 29657  000C5A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29658  000C5C  0E05               	movlw	5
 29659  000C5E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 29660  000C60  A0D8               	btfss	status,0,c
 29661  000C62  D04C               	goto	l1510
 29662                           
 29663                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 29664  000C64  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29665  000C68  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29666  000C6C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29667  000C70  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29668  000C74  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29669  000C78  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29670  000C7C  0E10               	movlw	16
 29671  000C7E  6E05               	movwf	___lldiv@divisor,c
 29672  000C80  0E27               	movlw	39
 29673  000C82  6E06               	movwf	___lldiv@divisor+1,c
 29674  000C84  0E00               	movlw	0
 29675  000C86  6E07               	movwf	___lldiv@divisor+2,c
 29676  000C88  0E00               	movlw	0
 29677  000C8A  6E08               	movwf	___lldiv@divisor+3,c
 29678  000C8C  EC7C  F039         	call	___lldiv	;wreg free
 29679  000C90  C001  F013         	movff	?___lldiv,itoa@val
 29680  000C94  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29681  000C98  0E00               	movlw	0
 29682  000C9A  6E16               	movwf	itoa@base+1,c
 29683  000C9C  0E0A               	movlw	10
 29684  000C9E  6E15               	movwf	itoa@base,c
 29685  000CA0  EC77  F042         	call	_itoa	;wreg free
 29686                           
 29687                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 29688  000CA4  0E05               	movlw	5
 29689  000CA6  2423               	addwf	__display_itoa_u32@text,w,c
 29690  000CA8  6E11               	movwf	itoa@buf,c
 29691  000CAA  0E00               	movlw	0
 29692  000CAC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29693  000CAE  6E12               	movwf	itoa@buf+1,c
 29694  000CB0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29695  000CB4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29696  000CB8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29697  000CBC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29698  000CC0  0E10               	movlw	16
 29699  000CC2  6E05               	movwf	___llmod@divisor,c
 29700  000CC4  0E27               	movlw	39
 29701  000CC6  6E06               	movwf	___llmod@divisor+1,c
 29702  000CC8  0E00               	movlw	0
 29703  000CCA  6E07               	movwf	___llmod@divisor+2,c
 29704  000CCC  0E00               	movlw	0
 29705  000CCE  6E08               	movwf	___llmod@divisor+3,c
 29706  000CD0  ECAA  F03C         	call	___llmod	;wreg free
 29707  000CD4  C001  F013         	movff	?___llmod,itoa@val
 29708  000CD8  C002  F014         	movff	?___llmod+1,itoa@val+1
 29709  000CDC  0E00               	movlw	0
 29710  000CDE  6E16               	movwf	itoa@base+1,c
 29711  000CE0  0E0A               	movlw	10
 29712  000CE2  6E15               	movwf	itoa@base,c
 29713  000CE4  EC77  F042         	call	_itoa	;wreg free
 29714                           
 29715                           ;display.c: 185: *(text+9) = ' ';
 29716  000CE8  EE20 F009          	lfsr	2,9
 29717  000CEC  5023               	movf	__display_itoa_u32@text,w,c
 29718  000CEE  26D9               	addwf	fsr2l,f,c
 29719  000CF0  5024               	movf	__display_itoa_u32@text+1,w,c
 29720  000CF2  22DA               	addwfc	fsr2h,f,c
 29721  000CF4  0E20               	movlw	32
 29722  000CF6  6EDF               	movwf	indf2,c
 29723                           
 29724                           ;display.c: 186: return 9;
 29725  000CF8  0E09               	movlw	9
 29726                           
 29727                           ;display.c: 187: }
 29728  000CFA  0012               	return	
 29729  000CFC                     l1510:
 29730                           
 29731                           ;display.c: 188: else if(value>10000000)
 29732  000CFC  5022               	movf	__display_itoa_u32@value+3,w,c
 29733  000CFE  E108               	bnz	u7900
 29734  000D00  0E81               	movlw	129
 29735  000D02  5C1F               	subwf	__display_itoa_u32@value,w,c
 29736  000D04  0E96               	movlw	150
 29737  000D06  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29738  000D08  0E98               	movlw	152
 29739  000D0A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29740  000D0C  A0D8               	btfss	status,0,c
 29741  000D0E  D04C               	goto	l1512
 29742  000D10                     u7900:
 29743                           
 29744                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 29745  000D10  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29746  000D14  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29747  000D18  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29748  000D1C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29749  000D20  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29750  000D24  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29751  000D28  0E10               	movlw	16
 29752  000D2A  6E05               	movwf	___lldiv@divisor,c
 29753  000D2C  0E27               	movlw	39
 29754  000D2E  6E06               	movwf	___lldiv@divisor+1,c
 29755  000D30  0E00               	movlw	0
 29756  000D32  6E07               	movwf	___lldiv@divisor+2,c
 29757  000D34  0E00               	movlw	0
 29758  000D36  6E08               	movwf	___lldiv@divisor+3,c
 29759  000D38  EC7C  F039         	call	___lldiv	;wreg free
 29760  000D3C  C001  F013         	movff	?___lldiv,itoa@val
 29761  000D40  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29762  000D44  0E00               	movlw	0
 29763  000D46  6E16               	movwf	itoa@base+1,c
 29764  000D48  0E0A               	movlw	10
 29765  000D4A  6E15               	movwf	itoa@base,c
 29766  000D4C  EC77  F042         	call	_itoa	;wreg free
 29767                           
 29768                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 29769  000D50  0E04               	movlw	4
 29770  000D52  2423               	addwf	__display_itoa_u32@text,w,c
 29771  000D54  6E11               	movwf	itoa@buf,c
 29772  000D56  0E00               	movlw	0
 29773  000D58  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29774  000D5A  6E12               	movwf	itoa@buf+1,c
 29775  000D5C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29776  000D60  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29777  000D64  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29778  000D68  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29779  000D6C  0E10               	movlw	16
 29780  000D6E  6E05               	movwf	___llmod@divisor,c
 29781  000D70  0E27               	movlw	39
 29782  000D72  6E06               	movwf	___llmod@divisor+1,c
 29783  000D74  0E00               	movlw	0
 29784  000D76  6E07               	movwf	___llmod@divisor+2,c
 29785  000D78  0E00               	movlw	0
 29786  000D7A  6E08               	movwf	___llmod@divisor+3,c
 29787  000D7C  ECAA  F03C         	call	___llmod	;wreg free
 29788  000D80  C001  F013         	movff	?___llmod,itoa@val
 29789  000D84  C002  F014         	movff	?___llmod+1,itoa@val+1
 29790  000D88  0E00               	movlw	0
 29791  000D8A  6E16               	movwf	itoa@base+1,c
 29792  000D8C  0E0A               	movlw	10
 29793  000D8E  6E15               	movwf	itoa@base,c
 29794  000D90  EC77  F042         	call	_itoa	;wreg free
 29795                           
 29796                           ;display.c: 192: *(text+8) = ' ';
 29797  000D94  EE20 F008          	lfsr	2,8
 29798  000D98  5023               	movf	__display_itoa_u32@text,w,c
 29799  000D9A  26D9               	addwf	fsr2l,f,c
 29800  000D9C  5024               	movf	__display_itoa_u32@text+1,w,c
 29801  000D9E  22DA               	addwfc	fsr2h,f,c
 29802  000DA0  0E20               	movlw	32
 29803  000DA2  6EDF               	movwf	indf2,c
 29804                           
 29805                           ;display.c: 193: return 8;
 29806  000DA4  0E08               	movlw	8
 29807                           
 29808                           ;display.c: 194: }
 29809  000DA6  0012               	return	
 29810  000DA8                     l1512:
 29811                           
 29812                           ;display.c: 195: else if(value>1000000)
 29813  000DA8  5022               	movf	__display_itoa_u32@value+3,w,c
 29814  000DAA  E108               	bnz	u7910
 29815  000DAC  0E41               	movlw	65
 29816  000DAE  5C1F               	subwf	__display_itoa_u32@value,w,c
 29817  000DB0  0E42               	movlw	66
 29818  000DB2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29819  000DB4  0E0F               	movlw	15
 29820  000DB6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29821  000DB8  A0D8               	btfss	status,0,c
 29822  000DBA  D04C               	goto	l1514
 29823  000DBC                     u7910:
 29824                           
 29825                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 29826  000DBC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29827  000DC0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29828  000DC4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29829  000DC8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29830  000DCC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29831  000DD0  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29832  000DD4  0E10               	movlw	16
 29833  000DD6  6E05               	movwf	___lldiv@divisor,c
 29834  000DD8  0E27               	movlw	39
 29835  000DDA  6E06               	movwf	___lldiv@divisor+1,c
 29836  000DDC  0E00               	movlw	0
 29837  000DDE  6E07               	movwf	___lldiv@divisor+2,c
 29838  000DE0  0E00               	movlw	0
 29839  000DE2  6E08               	movwf	___lldiv@divisor+3,c
 29840  000DE4  EC7C  F039         	call	___lldiv	;wreg free
 29841  000DE8  C001  F013         	movff	?___lldiv,itoa@val
 29842  000DEC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29843  000DF0  0E00               	movlw	0
 29844  000DF2  6E16               	movwf	itoa@base+1,c
 29845  000DF4  0E0A               	movlw	10
 29846  000DF6  6E15               	movwf	itoa@base,c
 29847  000DF8  EC77  F042         	call	_itoa	;wreg free
 29848                           
 29849                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 29850  000DFC  0E03               	movlw	3
 29851  000DFE  2423               	addwf	__display_itoa_u32@text,w,c
 29852  000E00  6E11               	movwf	itoa@buf,c
 29853  000E02  0E00               	movlw	0
 29854  000E04  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29855  000E06  6E12               	movwf	itoa@buf+1,c
 29856  000E08  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29857  000E0C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29858  000E10  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29859  000E14  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29860  000E18  0E10               	movlw	16
 29861  000E1A  6E05               	movwf	___llmod@divisor,c
 29862  000E1C  0E27               	movlw	39
 29863  000E1E  6E06               	movwf	___llmod@divisor+1,c
 29864  000E20  0E00               	movlw	0
 29865  000E22  6E07               	movwf	___llmod@divisor+2,c
 29866  000E24  0E00               	movlw	0
 29867  000E26  6E08               	movwf	___llmod@divisor+3,c
 29868  000E28  ECAA  F03C         	call	___llmod	;wreg free
 29869  000E2C  C001  F013         	movff	?___llmod,itoa@val
 29870  000E30  C002  F014         	movff	?___llmod+1,itoa@val+1
 29871  000E34  0E00               	movlw	0
 29872  000E36  6E16               	movwf	itoa@base+1,c
 29873  000E38  0E0A               	movlw	10
 29874  000E3A  6E15               	movwf	itoa@base,c
 29875  000E3C  EC77  F042         	call	_itoa	;wreg free
 29876                           
 29877                           ;display.c: 199: *(text+7) = ' ';
 29878  000E40  EE20 F007          	lfsr	2,7
 29879  000E44  5023               	movf	__display_itoa_u32@text,w,c
 29880  000E46  26D9               	addwf	fsr2l,f,c
 29881  000E48  5024               	movf	__display_itoa_u32@text+1,w,c
 29882  000E4A  22DA               	addwfc	fsr2h,f,c
 29883  000E4C  0E20               	movlw	32
 29884  000E4E  6EDF               	movwf	indf2,c
 29885                           
 29886                           ;display.c: 200: return 7;
 29887  000E50  0E07               	movlw	7
 29888                           
 29889                           ;display.c: 201: }
 29890  000E52  0012               	return	
 29891  000E54                     l1514:
 29892                           
 29893                           ;display.c: 202: else if(value>100000)
 29894  000E54  5022               	movf	__display_itoa_u32@value+3,w,c
 29895  000E56  E108               	bnz	u7920
 29896  000E58  0EA1               	movlw	161
 29897  000E5A  5C1F               	subwf	__display_itoa_u32@value,w,c
 29898  000E5C  0E86               	movlw	134
 29899  000E5E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29900  000E60  0E01               	movlw	1
 29901  000E62  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29902  000E64  A0D8               	btfss	status,0,c
 29903  000E66  D04C               	goto	l1516
 29904  000E68                     u7920:
 29905                           
 29906                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 29907  000E68  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29908  000E6C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29909  000E70  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29910  000E74  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29911  000E78  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29912  000E7C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29913  000E80  0E10               	movlw	16
 29914  000E82  6E05               	movwf	___lldiv@divisor,c
 29915  000E84  0E27               	movlw	39
 29916  000E86  6E06               	movwf	___lldiv@divisor+1,c
 29917  000E88  0E00               	movlw	0
 29918  000E8A  6E07               	movwf	___lldiv@divisor+2,c
 29919  000E8C  0E00               	movlw	0
 29920  000E8E  6E08               	movwf	___lldiv@divisor+3,c
 29921  000E90  EC7C  F039         	call	___lldiv	;wreg free
 29922  000E94  C001  F013         	movff	?___lldiv,itoa@val
 29923  000E98  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29924  000E9C  0E00               	movlw	0
 29925  000E9E  6E16               	movwf	itoa@base+1,c
 29926  000EA0  0E0A               	movlw	10
 29927  000EA2  6E15               	movwf	itoa@base,c
 29928  000EA4  EC77  F042         	call	_itoa	;wreg free
 29929                           
 29930                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 29931  000EA8  0E02               	movlw	2
 29932  000EAA  2423               	addwf	__display_itoa_u32@text,w,c
 29933  000EAC  6E11               	movwf	itoa@buf,c
 29934  000EAE  0E00               	movlw	0
 29935  000EB0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29936  000EB2  6E12               	movwf	itoa@buf+1,c
 29937  000EB4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29938  000EB8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29939  000EBC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29940  000EC0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29941  000EC4  0E10               	movlw	16
 29942  000EC6  6E05               	movwf	___llmod@divisor,c
 29943  000EC8  0E27               	movlw	39
 29944  000ECA  6E06               	movwf	___llmod@divisor+1,c
 29945  000ECC  0E00               	movlw	0
 29946  000ECE  6E07               	movwf	___llmod@divisor+2,c
 29947  000ED0  0E00               	movlw	0
 29948  000ED2  6E08               	movwf	___llmod@divisor+3,c
 29949  000ED4  ECAA  F03C         	call	___llmod	;wreg free
 29950  000ED8  C001  F013         	movff	?___llmod,itoa@val
 29951  000EDC  C002  F014         	movff	?___llmod+1,itoa@val+1
 29952  000EE0  0E00               	movlw	0
 29953  000EE2  6E16               	movwf	itoa@base+1,c
 29954  000EE4  0E0A               	movlw	10
 29955  000EE6  6E15               	movwf	itoa@base,c
 29956  000EE8  EC77  F042         	call	_itoa	;wreg free
 29957                           
 29958                           ;display.c: 206: *(text+6) = ' ';
 29959  000EEC  EE20 F006          	lfsr	2,6
 29960  000EF0  5023               	movf	__display_itoa_u32@text,w,c
 29961  000EF2  26D9               	addwf	fsr2l,f,c
 29962  000EF4  5024               	movf	__display_itoa_u32@text+1,w,c
 29963  000EF6  22DA               	addwfc	fsr2h,f,c
 29964  000EF8  0E20               	movlw	32
 29965  000EFA  6EDF               	movwf	indf2,c
 29966                           
 29967                           ;display.c: 207: return 6;
 29968  000EFC  0E06               	movlw	6
 29969                           
 29970                           ;display.c: 208: }
 29971  000EFE  0012               	return	
 29972  000F00                     l1516:
 29973                           
 29974                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 29975  000F00  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29976  000F04  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29977  000F08  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29978  000F0C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29979  000F10  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29980  000F14  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29981  000F18  0E10               	movlw	16
 29982  000F1A  6E05               	movwf	___lldiv@divisor,c
 29983  000F1C  0E27               	movlw	39
 29984  000F1E  6E06               	movwf	___lldiv@divisor+1,c
 29985  000F20  0E00               	movlw	0
 29986  000F22  6E07               	movwf	___lldiv@divisor+2,c
 29987  000F24  0E00               	movlw	0
 29988  000F26  6E08               	movwf	___lldiv@divisor+3,c
 29989  000F28  EC7C  F039         	call	___lldiv	;wreg free
 29990  000F2C  C001  F013         	movff	?___lldiv,itoa@val
 29991  000F30  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29992  000F34  0E00               	movlw	0
 29993  000F36  6E16               	movwf	itoa@base+1,c
 29994  000F38  0E0A               	movlw	10
 29995  000F3A  6E15               	movwf	itoa@base,c
 29996  000F3C  EC77  F042         	call	_itoa	;wreg free
 29997                           
 29998                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 29999  000F40  0E01               	movlw	1
 30000  000F42  2423               	addwf	__display_itoa_u32@text,w,c
 30001  000F44  6E11               	movwf	itoa@buf,c
 30002  000F46  0E00               	movlw	0
 30003  000F48  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30004  000F4A  6E12               	movwf	itoa@buf+1,c
 30005  000F4C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30006  000F50  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30007  000F54  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30008  000F58  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30009  000F5C  0E10               	movlw	16
 30010  000F5E  6E05               	movwf	___llmod@divisor,c
 30011  000F60  0E27               	movlw	39
 30012  000F62  6E06               	movwf	___llmod@divisor+1,c
 30013  000F64  0E00               	movlw	0
 30014  000F66  6E07               	movwf	___llmod@divisor+2,c
 30015  000F68  0E00               	movlw	0
 30016  000F6A  6E08               	movwf	___llmod@divisor+3,c
 30017  000F6C  ECAA  F03C         	call	___llmod	;wreg free
 30018  000F70  C001  F013         	movff	?___llmod,itoa@val
 30019  000F74  C002  F014         	movff	?___llmod+1,itoa@val+1
 30020  000F78  0E00               	movlw	0
 30021  000F7A  6E16               	movwf	itoa@base+1,c
 30022  000F7C  0E0A               	movlw	10
 30023  000F7E  6E15               	movwf	itoa@base,c
 30024  000F80  EC77  F042         	call	_itoa	;wreg free
 30025                           
 30026                           ;display.c: 213: *(text+5) = ' ';
 30027  000F84  EE20 F005          	lfsr	2,5
 30028  000F88  5023               	movf	__display_itoa_u32@text,w,c
 30029  000F8A  26D9               	addwf	fsr2l,f,c
 30030  000F8C  5024               	movf	__display_itoa_u32@text+1,w,c
 30031  000F8E  22DA               	addwfc	fsr2h,f,c
 30032  000F90  0E20               	movlw	32
 30033  000F92  6EDF               	movwf	indf2,c
 30034                           
 30035                           ;display.c: 214: return 5;
 30036  000F94  0E05               	movlw	5
 30037  000F96  0012               	return	
 30038  000F98                     __end_of__display_itoa_u32:
 30039                           	opt stack 0
 30040                           tosu	equ	0xFFF
 30041                           tosh	equ	0xFFE
 30042                           tosl	equ	0xFFD
 30043                           pclath	equ	0xFFA
 30044                           tblptru	equ	0xFF8
 30045                           tblptrh	equ	0xFF7
 30046                           tblptrl	equ	0xFF6
 30047                           tablat	equ	0xFF5
 30048                           prodh	equ	0xFF4
 30049                           prodl	equ	0xFF3
 30050                           intcon	equ	0xFF2
 30051                           intcon2	equ	0xFF1
 30052                           intcon3	equ	0xFF0
 30053                           indf0	equ	0xFEF
 30054                           postinc0	equ	0xFEE
 30055                           fsr0h	equ	0xFEA
 30056                           fsr0l	equ	0xFE9
 30057                           wreg	equ	0xFE8
 30058                           indf1	equ	0xFE7
 30059                           postdec1	equ	0xFE5
 30060                           plusw1	equ	0xFE3
 30061                           fsr1h	equ	0xFE2
 30062                           fsr1l	equ	0xFE1
 30063                           indf2	equ	0xFDF
 30064                           postinc2	equ	0xFDE
 30065                           postdec2	equ	0xFDD
 30066                           plusw2	equ	0xFDB
 30067                           fsr2h	equ	0xFDA
 30068                           fsr2l	equ	0xFD9
 30069                           status	equ	0xFD8
 30070                           
 30071 ;; *************** function ___llmod *****************
 30072 ;; Defined at:
 30073 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30074 ;; Parameters:    Size  Location     Type
 30075 ;;  dividend        4    0[COMRAM] unsigned long 
 30076 ;;  divisor         4    4[COMRAM] unsigned long 
 30077 ;; Auto vars:     Size  Location     Type
 30078 ;;  counter         1    8[COMRAM] unsigned char 
 30079 ;; Return value:  Size  Location     Type
 30080 ;;                  4    0[COMRAM] unsigned long 
 30081 ;; Registers used:
 30082 ;;		wreg, status,2, status,0
 30083 ;; Tracked objects:
 30084 ;;		On entry : 0/0
 30085 ;;		On exit  : 0/0
 30086 ;;		Unchanged: 0/0
 30087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30088 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30091 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30092 ;;Total ram usage:        9 bytes
 30093 ;; Hardware stack levels used:    1
 30094 ;; This function calls:
 30095 ;;		Nothing
 30096 ;; This function is called by:
 30097 ;;		__display_itoa_u32
 30098 ;; This function uses a non-reentrant model
 30099 ;;
 30100                           
 30101                           	psect	text144
 30102  007954                     __ptext144:
 30103                           	opt stack 0
 30104  007954                     ___llmod:
 30105                           	opt stack 24
 30106                           
 30107                           ;incstack = 0
 30108  007954  5005               	movf	___llmod@divisor,w,c
 30109  007956  1006               	iorwf	___llmod@divisor+1,w,c
 30110  007958  1007               	iorwf	___llmod@divisor+2,w,c
 30111  00795A  1008               	iorwf	___llmod@divisor+3,w,c
 30112  00795C  B4D8               	btfsc	status,2,c
 30113  00795E  D024               	goto	l3425
 30114  007960  0E01               	movlw	1
 30115  007962  6E09               	movwf	___llmod@counter,c
 30116  007964  D006               	goto	l3420
 30117  007966  90D8               	bcf	status,0,c
 30118  007968  3605               	rlcf	___llmod@divisor,f,c
 30119  00796A  3606               	rlcf	___llmod@divisor+1,f,c
 30120  00796C  3607               	rlcf	___llmod@divisor+2,f,c
 30121  00796E  3608               	rlcf	___llmod@divisor+3,f,c
 30122  007970  2A09               	incf	___llmod@counter,f,c
 30123  007972                     l3420:
 30124  007972  AE08               	btfss	___llmod@divisor+3,7,c
 30125  007974  D7F8               	goto	l3421
 30126  007976                     u7510:
 30127  007976  5005               	movf	___llmod@divisor,w,c
 30128  007978  5C01               	subwf	___llmod@dividend,w,c
 30129  00797A  5006               	movf	___llmod@divisor+1,w,c
 30130  00797C  5802               	subwfb	___llmod@dividend+1,w,c
 30131  00797E  5007               	movf	___llmod@divisor+2,w,c
 30132  007980  5803               	subwfb	___llmod@dividend+2,w,c
 30133  007982  5008               	movf	___llmod@divisor+3,w,c
 30134  007984  5804               	subwfb	___llmod@dividend+3,w,c
 30135  007986  A0D8               	btfss	status,0,c
 30136  007988  D008               	goto	l3424
 30137  00798A  5005               	movf	___llmod@divisor,w,c
 30138  00798C  5E01               	subwf	___llmod@dividend,f,c
 30139  00798E  5006               	movf	___llmod@divisor+1,w,c
 30140  007990  5A02               	subwfb	___llmod@dividend+1,f,c
 30141  007992  5007               	movf	___llmod@divisor+2,w,c
 30142  007994  5A03               	subwfb	___llmod@dividend+2,f,c
 30143  007996  5008               	movf	___llmod@divisor+3,w,c
 30144  007998  5A04               	subwfb	___llmod@dividend+3,f,c
 30145  00799A                     l3424:
 30146  00799A  90D8               	bcf	status,0,c
 30147  00799C  3208               	rrcf	___llmod@divisor+3,f,c
 30148  00799E  3207               	rrcf	___llmod@divisor+2,f,c
 30149  0079A0  3206               	rrcf	___llmod@divisor+1,f,c
 30150  0079A2  3205               	rrcf	___llmod@divisor,f,c
 30151  0079A4  2E09               	decfsz	___llmod@counter,f,c
 30152  0079A6  D7E7               	goto	u7510
 30153  0079A8                     l3425:
 30154  0079A8  C001  F001         	movff	___llmod@dividend,?___llmod
 30155  0079AC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 30156  0079B0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 30157  0079B4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 30158  0079B8  0012               	return		;funcret
 30159  0079BA                     __end_of___llmod:
 30160                           	opt stack 0
 30161                           tosu	equ	0xFFF
 30162                           tosh	equ	0xFFE
 30163                           tosl	equ	0xFFD
 30164                           pclath	equ	0xFFA
 30165                           tblptru	equ	0xFF8
 30166                           tblptrh	equ	0xFF7
 30167                           tblptrl	equ	0xFF6
 30168                           tablat	equ	0xFF5
 30169                           prodh	equ	0xFF4
 30170                           prodl	equ	0xFF3
 30171                           intcon	equ	0xFF2
 30172                           intcon2	equ	0xFF1
 30173                           intcon3	equ	0xFF0
 30174                           indf0	equ	0xFEF
 30175                           postinc0	equ	0xFEE
 30176                           fsr0h	equ	0xFEA
 30177                           fsr0l	equ	0xFE9
 30178                           wreg	equ	0xFE8
 30179                           indf1	equ	0xFE7
 30180                           postdec1	equ	0xFE5
 30181                           plusw1	equ	0xFE3
 30182                           fsr1h	equ	0xFE2
 30183                           fsr1l	equ	0xFE1
 30184                           indf2	equ	0xFDF
 30185                           postinc2	equ	0xFDE
 30186                           postdec2	equ	0xFDD
 30187                           plusw2	equ	0xFDB
 30188                           fsr2h	equ	0xFDA
 30189                           fsr2l	equ	0xFD9
 30190                           status	equ	0xFD8
 30191                           
 30192 ;; *************** function ___lldiv *****************
 30193 ;; Defined at:
 30194 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 30195 ;; Parameters:    Size  Location     Type
 30196 ;;  dividend        4    0[COMRAM] unsigned long 
 30197 ;;  divisor         4    4[COMRAM] unsigned long 
 30198 ;; Auto vars:     Size  Location     Type
 30199 ;;  quotient        4    8[COMRAM] unsigned long 
 30200 ;;  counter         1   12[COMRAM] unsigned char 
 30201 ;; Return value:  Size  Location     Type
 30202 ;;                  4    0[COMRAM] unsigned long 
 30203 ;; Registers used:
 30204 ;;		wreg, status,2, status,0
 30205 ;; Tracked objects:
 30206 ;;		On entry : 0/0
 30207 ;;		On exit  : 0/0
 30208 ;;		Unchanged: 0/0
 30209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30210 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30211 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30213 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30214 ;;Total ram usage:       13 bytes
 30215 ;; Hardware stack levels used:    1
 30216 ;; This function calls:
 30217 ;;		Nothing
 30218 ;; This function is called by:
 30219 ;;		__display_itoa_u32
 30220 ;; This function uses a non-reentrant model
 30221 ;;
 30222                           
 30223                           	psect	text145
 30224  0072F8                     __ptext145:
 30225                           	opt stack 0
 30226  0072F8                     ___lldiv:
 30227                           	opt stack 24
 30228                           
 30229                           ;incstack = 0
 30230  0072F8  0E00               	movlw	0
 30231  0072FA  6E09               	movwf	___lldiv@quotient,c
 30232  0072FC  0E00               	movlw	0
 30233  0072FE  6E0A               	movwf	___lldiv@quotient+1,c
 30234  007300  0E00               	movlw	0
 30235  007302  6E0B               	movwf	___lldiv@quotient+2,c
 30236  007304  0E00               	movlw	0
 30237  007306  6E0C               	movwf	___lldiv@quotient+3,c
 30238  007308  5005               	movf	___lldiv@divisor,w,c
 30239  00730A  1006               	iorwf	___lldiv@divisor+1,w,c
 30240  00730C  1007               	iorwf	___lldiv@divisor+2,w,c
 30241  00730E  1008               	iorwf	___lldiv@divisor+3,w,c
 30242  007310  B4D8               	btfsc	status,2,c
 30243  007312  D02A               	goto	l3044
 30244  007314  0E01               	movlw	1
 30245  007316  6E0D               	movwf	___lldiv@counter,c
 30246  007318  D006               	goto	l3039
 30247  00731A  90D8               	bcf	status,0,c
 30248  00731C  3605               	rlcf	___lldiv@divisor,f,c
 30249  00731E  3606               	rlcf	___lldiv@divisor+1,f,c
 30250  007320  3607               	rlcf	___lldiv@divisor+2,f,c
 30251  007322  3608               	rlcf	___lldiv@divisor+3,f,c
 30252  007324  2A0D               	incf	___lldiv@counter,f,c
 30253  007326                     l3039:
 30254  007326  AE08               	btfss	___lldiv@divisor+3,7,c
 30255  007328  D7F8               	goto	l3040
 30256  00732A                     u7480:
 30257  00732A  90D8               	bcf	status,0,c
 30258  00732C  3609               	rlcf	___lldiv@quotient,f,c
 30259  00732E  360A               	rlcf	___lldiv@quotient+1,f,c
 30260  007330  360B               	rlcf	___lldiv@quotient+2,f,c
 30261  007332  360C               	rlcf	___lldiv@quotient+3,f,c
 30262  007334  5005               	movf	___lldiv@divisor,w,c
 30263  007336  5C01               	subwf	___lldiv@dividend,w,c
 30264  007338  5006               	movf	___lldiv@divisor+1,w,c
 30265  00733A  5802               	subwfb	___lldiv@dividend+1,w,c
 30266  00733C  5007               	movf	___lldiv@divisor+2,w,c
 30267  00733E  5803               	subwfb	___lldiv@dividend+2,w,c
 30268  007340  5008               	movf	___lldiv@divisor+3,w,c
 30269  007342  5804               	subwfb	___lldiv@dividend+3,w,c
 30270  007344  A0D8               	btfss	status,0,c
 30271  007346  D009               	goto	l3043
 30272  007348  5005               	movf	___lldiv@divisor,w,c
 30273  00734A  5E01               	subwf	___lldiv@dividend,f,c
 30274  00734C  5006               	movf	___lldiv@divisor+1,w,c
 30275  00734E  5A02               	subwfb	___lldiv@dividend+1,f,c
 30276  007350  5007               	movf	___lldiv@divisor+2,w,c
 30277  007352  5A03               	subwfb	___lldiv@dividend+2,f,c
 30278  007354  5008               	movf	___lldiv@divisor+3,w,c
 30279  007356  5A04               	subwfb	___lldiv@dividend+3,f,c
 30280  007358  8009               	bsf	___lldiv@quotient,0,c
 30281  00735A                     l3043:
 30282  00735A  90D8               	bcf	status,0,c
 30283  00735C  3208               	rrcf	___lldiv@divisor+3,f,c
 30284  00735E  3207               	rrcf	___lldiv@divisor+2,f,c
 30285  007360  3206               	rrcf	___lldiv@divisor+1,f,c
 30286  007362  3205               	rrcf	___lldiv@divisor,f,c
 30287  007364  2E0D               	decfsz	___lldiv@counter,f,c
 30288  007366  D7E1               	goto	u7480
 30289  007368                     l3044:
 30290  007368  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30291  00736C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30292  007370  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30293  007374  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30294  007378  0012               	return		;funcret
 30295  00737A                     __end_of___lldiv:
 30296                           	opt stack 0
 30297                           tosu	equ	0xFFF
 30298                           tosh	equ	0xFFE
 30299                           tosl	equ	0xFFD
 30300                           pclath	equ	0xFFA
 30301                           tblptru	equ	0xFF8
 30302                           tblptrh	equ	0xFF7
 30303                           tblptrl	equ	0xFF6
 30304                           tablat	equ	0xFF5
 30305                           prodh	equ	0xFF4
 30306                           prodl	equ	0xFF3
 30307                           intcon	equ	0xFF2
 30308                           intcon2	equ	0xFF1
 30309                           intcon3	equ	0xFF0
 30310                           indf0	equ	0xFEF
 30311                           postinc0	equ	0xFEE
 30312                           fsr0h	equ	0xFEA
 30313                           fsr0l	equ	0xFE9
 30314                           wreg	equ	0xFE8
 30315                           indf1	equ	0xFE7
 30316                           postdec1	equ	0xFE5
 30317                           plusw1	equ	0xFE3
 30318                           fsr1h	equ	0xFE2
 30319                           fsr1l	equ	0xFE1
 30320                           indf2	equ	0xFDF
 30321                           postinc2	equ	0xFDE
 30322                           postdec2	equ	0xFDD
 30323                           plusw2	equ	0xFDB
 30324                           fsr2h	equ	0xFDA
 30325                           fsr2l	equ	0xFD9
 30326                           status	equ	0xFD8
 30327                           
 30328 ;; *************** function __display_done *****************
 30329 ;; Defined at:
 30330 ;;		line 529 in file "display.c"
 30331 ;; Parameters:    Size  Location     Type
 30332 ;;		None
 30333 ;; Auto vars:     Size  Location     Type
 30334 ;;  cntr            1   30[COMRAM] unsigned char 
 30335 ;; Return value:  Size  Location     Type
 30336 ;;                  1    wreg      void 
 30337 ;; Registers used:
 30338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30339 ;; Tracked objects:
 30340 ;;		On entry : 0/0
 30341 ;;		On exit  : 0/0
 30342 ;;		Unchanged: 0/0
 30343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30348 ;;Total ram usage:        1 bytes
 30349 ;; Hardware stack levels used:    1
 30350 ;; Hardware stack levels required when called:    4
 30351 ;; This function calls:
 30352 ;;		__display_itoa_u16
 30353 ;;		_bootloader_get_flashPagesWritten
 30354 ;; This function is called by:
 30355 ;;		_display_prepare
 30356 ;; This function uses a non-reentrant model
 30357 ;;
 30358                           
 30359                           	psect	text146
 30360  0038F6                     __ptext146:
 30361                           	opt stack 0
 30362  0038F6                     __display_done:
 30363                           	opt stack 22
 30364                           
 30365                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 30366                           
 30367                           ;incstack = 0
 30368  0038F6  0E00               	movlw	0
 30369  0038F8  6E1F               	movwf	__display_done@cntr,c
 30370                           
 30371                           ;display.c: 533: while(done_line1[cntr])
 30372  0038FA  D017               	goto	l1686
 30373  0038FC                     
 30374                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 30375  0038FC  501F               	movf	__display_done@cntr,w,c
 30376  0038FE  0D01               	mullw	1
 30377  003900  0E74               	movlw	low _done_line1
 30378  003902  24F3               	addwf	prodl,w,c
 30379  003904  6EF6               	movwf	tblptrl,c
 30380  003906  0E9D               	movlw	high _done_line1
 30381  003908  20F4               	addwfc	prodh,w,c
 30382  00390A  6EF7               	movwf	tblptrh,c
 30383  00390C                     	if	1	;There are 3 active tblptr bytes
 30384  00390C  6AF8               	clrf	tblptru,c
 30385  00390E  0E00               	movlw	low (__mediumconst shr (0+16))
 30386  003910  22F8               	addwfc	tblptru,f,c
 30387  003912                     	endif
 30388  003912  501F               	movf	__display_done@cntr,w,c
 30389  003914  0D01               	mullw	1
 30390  003916  0E00               	movlw	low _display_content
 30391  003918  24F3               	addwf	prodl,w,c
 30392  00391A  6ED9               	movwf	fsr2l,c
 30393  00391C  0E02               	movlw	high _display_content
 30394  00391E  20F4               	addwfc	prodh,w,c
 30395  003920  6EDA               	movwf	fsr2h,c
 30396  003922  0008               	tblrd		*
 30397  003924  CFF5 FFDF          	movff	tablat,indf2
 30398  003928  2A1F               	incf	__display_done@cntr,f,c
 30399  00392A                     l1686:
 30400  00392A  501F               	movf	__display_done@cntr,w,c
 30401  00392C  0D01               	mullw	1
 30402  00392E  0E74               	movlw	low _done_line1
 30403  003930  24F3               	addwf	prodl,w,c
 30404  003932  6EF6               	movwf	tblptrl,c
 30405  003934  0E9D               	movlw	high _done_line1
 30406  003936  20F4               	addwfc	prodh,w,c
 30407  003938  6EF7               	movwf	tblptrh,c
 30408  00393A                     	if	1	;There are 3 active tblptr bytes
 30409  00393A  6AF8               	clrf	tblptru,c
 30410  00393C  0E00               	movlw	low (__mediumconst shr (0+16))
 30411  00393E  22F8               	addwfc	tblptru,f,c
 30412  003940                     	endif
 30413  003940  0008               	tblrd		*
 30414  003942  50F5               	movf	tablat,w,c
 30415  003944  0900               	iorlw	0
 30416  003946  A4D8               	btfss	status,2,c
 30417  003948  D7D9               	goto	l1687
 30418                           
 30419                           ;display.c: 535: cntr = 0;
 30420  00394A  0E00               	movlw	0
 30421  00394C  6E1F               	movwf	__display_done@cntr,c
 30422                           
 30423                           ;display.c: 536: while(done_line2[cntr])
 30424  00394E  D017               	goto	l1689
 30425  003950                     
 30426                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 30427  003950  501F               	movf	__display_done@cntr,w,c
 30428  003952  0D01               	mullw	1
 30429  003954  0E9F               	movlw	low _done_line2
 30430  003956  24F3               	addwf	prodl,w,c
 30431  003958  6EF6               	movwf	tblptrl,c
 30432  00395A  0E9E               	movlw	high _done_line2
 30433  00395C  20F4               	addwfc	prodh,w,c
 30434  00395E  6EF7               	movwf	tblptrh,c
 30435  003960                     	if	1	;There are 3 active tblptr bytes
 30436  003960  6AF8               	clrf	tblptru,c
 30437  003962  0E00               	movlw	low (__mediumconst shr (0+16))
 30438  003964  22F8               	addwfc	tblptru,f,c
 30439  003966                     	endif
 30440  003966  501F               	movf	__display_done@cntr,w,c
 30441  003968  0D01               	mullw	1
 30442  00396A  0E14               	movlw	low (_display_content+20)
 30443  00396C  24F3               	addwf	prodl,w,c
 30444  00396E  6ED9               	movwf	fsr2l,c
 30445  003970  0E02               	movlw	high (_display_content+20)
 30446  003972  20F4               	addwfc	prodh,w,c
 30447  003974  6EDA               	movwf	fsr2h,c
 30448  003976  0008               	tblrd		*
 30449  003978  CFF5 FFDF          	movff	tablat,indf2
 30450  00397C  2A1F               	incf	__display_done@cntr,f,c
 30451  00397E                     l1689:
 30452  00397E  501F               	movf	__display_done@cntr,w,c
 30453  003980  0D01               	mullw	1
 30454  003982  0E9F               	movlw	low _done_line2
 30455  003984  24F3               	addwf	prodl,w,c
 30456  003986  6EF6               	movwf	tblptrl,c
 30457  003988  0E9E               	movlw	high _done_line2
 30458  00398A  20F4               	addwfc	prodh,w,c
 30459  00398C  6EF7               	movwf	tblptrh,c
 30460  00398E                     	if	1	;There are 3 active tblptr bytes
 30461  00398E  6AF8               	clrf	tblptru,c
 30462  003990  0E00               	movlw	low (__mediumconst shr (0+16))
 30463  003992  22F8               	addwfc	tblptru,f,c
 30464  003994                     	endif
 30465  003994  0008               	tblrd		*
 30466  003996  50F5               	movf	tablat,w,c
 30467  003998  0900               	iorlw	0
 30468  00399A  A4D8               	btfss	status,2,c
 30469  00399C  D7D9               	goto	l1690
 30470                           
 30471                           ;display.c: 538: cntr = 0;
 30472  00399E  0E00               	movlw	0
 30473  0039A0  6E1F               	movwf	__display_done@cntr,c
 30474                           
 30475                           ;display.c: 539: while(done_line3[cntr])
 30476  0039A2  D017               	goto	l1692
 30477  0039A4                     
 30478                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 30479  0039A4  501F               	movf	__display_done@cntr,w,c
 30480  0039A6  0D01               	mullw	1
 30481  0039A8  0E64               	movlw	low _done_line3
 30482  0039AA  24F3               	addwf	prodl,w,c
 30483  0039AC  6EF6               	movwf	tblptrl,c
 30484  0039AE  0E9D               	movlw	high _done_line3
 30485  0039B0  20F4               	addwfc	prodh,w,c
 30486  0039B2  6EF7               	movwf	tblptrh,c
 30487  0039B4                     	if	1	;There are 3 active tblptr bytes
 30488  0039B4  6AF8               	clrf	tblptru,c
 30489  0039B6  0E00               	movlw	low (__mediumconst shr (0+16))
 30490  0039B8  22F8               	addwfc	tblptru,f,c
 30491  0039BA                     	endif
 30492  0039BA  501F               	movf	__display_done@cntr,w,c
 30493  0039BC  0D01               	mullw	1
 30494  0039BE  0E28               	movlw	low (_display_content+40)
 30495  0039C0  24F3               	addwf	prodl,w,c
 30496  0039C2  6ED9               	movwf	fsr2l,c
 30497  0039C4  0E02               	movlw	high (_display_content+40)
 30498  0039C6  20F4               	addwfc	prodh,w,c
 30499  0039C8  6EDA               	movwf	fsr2h,c
 30500  0039CA  0008               	tblrd		*
 30501  0039CC  CFF5 FFDF          	movff	tablat,indf2
 30502  0039D0  2A1F               	incf	__display_done@cntr,f,c
 30503  0039D2                     l1692:
 30504  0039D2  501F               	movf	__display_done@cntr,w,c
 30505  0039D4  0D01               	mullw	1
 30506  0039D6  0E64               	movlw	low _done_line3
 30507  0039D8  24F3               	addwf	prodl,w,c
 30508  0039DA  6EF6               	movwf	tblptrl,c
 30509  0039DC  0E9D               	movlw	high _done_line3
 30510  0039DE  20F4               	addwfc	prodh,w,c
 30511  0039E0  6EF7               	movwf	tblptrh,c
 30512  0039E2                     	if	1	;There are 3 active tblptr bytes
 30513  0039E2  6AF8               	clrf	tblptru,c
 30514  0039E4  0E00               	movlw	low (__mediumconst shr (0+16))
 30515  0039E6  22F8               	addwfc	tblptru,f,c
 30516  0039E8                     	endif
 30517  0039E8  0008               	tblrd		*
 30518  0039EA  50F5               	movf	tablat,w,c
 30519  0039EC  0900               	iorlw	0
 30520  0039EE  A4D8               	btfss	status,2,c
 30521  0039F0  D7D9               	goto	l1693
 30522                           
 30523                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30524  0039F2  ECB3  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 30525  0039F6  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30526  0039FA  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30527  0039FE  6A1B               	clrf	__display_itoa_u16@value+2,c
 30528  003A00  6A1C               	clrf	__display_itoa_u16@value+3,c
 30529  003A02  501F               	movf	__display_done@cntr,w,c
 30530  003A04  0D01               	mullw	1
 30531  003A06  0E28               	movlw	low (_display_content+40)
 30532  003A08  24F3               	addwf	prodl,w,c
 30533  003A0A  6E1D               	movwf	__display_itoa_u16@text,c
 30534  003A0C  0E02               	movlw	high (_display_content+40)
 30535  003A0E  20F4               	addwfc	prodh,w,c
 30536  003A10  6E1E               	movwf	__display_itoa_u16@text+1,c
 30537  003A12  EC0C  F030         	call	__display_itoa_u16	;wreg free
 30538                           
 30539                           ;display.c: 542: cntr = 0;
 30540  003A16  0E00               	movlw	0
 30541  003A18  6E1F               	movwf	__display_done@cntr,c
 30542                           
 30543                           ;display.c: 543: while(done_line4[cntr])
 30544  003A1A  D017               	goto	l1695
 30545  003A1C                     
 30546                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 30547  003A1C  501F               	movf	__display_done@cntr,w,c
 30548  003A1E  0D01               	mullw	1
 30549  003A20  0E54               	movlw	low _done_line4
 30550  003A22  24F3               	addwf	prodl,w,c
 30551  003A24  6EF6               	movwf	tblptrl,c
 30552  003A26  0E9D               	movlw	high _done_line4
 30553  003A28  20F4               	addwfc	prodh,w,c
 30554  003A2A  6EF7               	movwf	tblptrh,c
 30555  003A2C                     	if	1	;There are 3 active tblptr bytes
 30556  003A2C  6AF8               	clrf	tblptru,c
 30557  003A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 30558  003A30  22F8               	addwfc	tblptru,f,c
 30559  003A32                     	endif
 30560  003A32  501F               	movf	__display_done@cntr,w,c
 30561  003A34  0D01               	mullw	1
 30562  003A36  0E3C               	movlw	low (_display_content+60)
 30563  003A38  24F3               	addwf	prodl,w,c
 30564  003A3A  6ED9               	movwf	fsr2l,c
 30565  003A3C  0E02               	movlw	high (_display_content+60)
 30566  003A3E  20F4               	addwfc	prodh,w,c
 30567  003A40  6EDA               	movwf	fsr2h,c
 30568  003A42  0008               	tblrd		*
 30569  003A44  CFF5 FFDF          	movff	tablat,indf2
 30570  003A48  2A1F               	incf	__display_done@cntr,f,c
 30571  003A4A                     l1695:
 30572  003A4A  501F               	movf	__display_done@cntr,w,c
 30573  003A4C  0D01               	mullw	1
 30574  003A4E  0E54               	movlw	low _done_line4
 30575  003A50  24F3               	addwf	prodl,w,c
 30576  003A52  6EF6               	movwf	tblptrl,c
 30577  003A54  0E9D               	movlw	high _done_line4
 30578  003A56  20F4               	addwfc	prodh,w,c
 30579  003A58  6EF7               	movwf	tblptrh,c
 30580  003A5A                     	if	1	;There are 3 active tblptr bytes
 30581  003A5A  6AF8               	clrf	tblptru,c
 30582  003A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 30583  003A5E  22F8               	addwfc	tblptru,f,c
 30584  003A60                     	endif
 30585  003A60  0008               	tblrd		*
 30586  003A62  50F5               	movf	tablat,w,c
 30587  003A64  0900               	iorlw	0
 30588  003A66  B4D8               	btfsc	status,2,c
 30589  003A68  0012               	return	
 30590  003A6A  D7D8               	goto	l1696
 30591  003A6C                     __end_of__display_done:
 30592                           	opt stack 0
 30593                           tosu	equ	0xFFF
 30594                           tosh	equ	0xFFE
 30595                           tosl	equ	0xFFD
 30596                           pclath	equ	0xFFA
 30597                           tblptru	equ	0xFF8
 30598                           tblptrh	equ	0xFF7
 30599                           tblptrl	equ	0xFF6
 30600                           tablat	equ	0xFF5
 30601                           prodh	equ	0xFF4
 30602                           prodl	equ	0xFF3
 30603                           intcon	equ	0xFF2
 30604                           intcon2	equ	0xFF1
 30605                           intcon3	equ	0xFF0
 30606                           indf0	equ	0xFEF
 30607                           postinc0	equ	0xFEE
 30608                           fsr0h	equ	0xFEA
 30609                           fsr0l	equ	0xFE9
 30610                           wreg	equ	0xFE8
 30611                           indf1	equ	0xFE7
 30612                           postdec1	equ	0xFE5
 30613                           plusw1	equ	0xFE3
 30614                           fsr1h	equ	0xFE2
 30615                           fsr1l	equ	0xFE1
 30616                           indf2	equ	0xFDF
 30617                           postinc2	equ	0xFDE
 30618                           postdec2	equ	0xFDD
 30619                           plusw2	equ	0xFDB
 30620                           fsr2h	equ	0xFDA
 30621                           fsr2l	equ	0xFD9
 30622                           status	equ	0xFD8
 30623                           
 30624 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30625 ;; Defined at:
 30626 ;;		line 511 in file "bootloader.c"
 30627 ;; Parameters:    Size  Location     Type
 30628 ;;		None
 30629 ;; Auto vars:     Size  Location     Type
 30630 ;;		None
 30631 ;; Return value:  Size  Location     Type
 30632 ;;                  2    0[COMRAM] unsigned int 
 30633 ;; Registers used:
 30634 ;;		None
 30635 ;; Tracked objects:
 30636 ;;		On entry : 0/0
 30637 ;;		On exit  : 0/0
 30638 ;;		Unchanged: 0/0
 30639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30644 ;;Total ram usage:        2 bytes
 30645 ;; Hardware stack levels used:    1
 30646 ;; This function calls:
 30647 ;;		Nothing
 30648 ;; This function is called by:
 30649 ;;		__display_programming
 30650 ;;		__display_done
 30651 ;;		__fill_buffer_get_bootloader_details
 30652 ;; This function uses a non-reentrant model
 30653 ;;
 30654                           
 30655                           	psect	text147
 30656  008F66                     __ptext147:
 30657                           	opt stack 0
 30658  008F66                     _bootloader_get_flashPagesWritten:
 30659                           	opt stack 25
 30660                           
 30661                           ;bootloader.c: 513: return flash_pages_written;
 30662                           
 30663                           ;incstack = 0
 30664  008F66  C174  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30665  008F6A  C175  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30666  008F6E  0012               	return		;funcret
 30667  008F70                     __end_of_bootloader_get_flashPagesWritten:
 30668                           	opt stack 0
 30669                           tosu	equ	0xFFF
 30670                           tosh	equ	0xFFE
 30671                           tosl	equ	0xFFD
 30672                           pclath	equ	0xFFA
 30673                           tblptru	equ	0xFF8
 30674                           tblptrh	equ	0xFF7
 30675                           tblptrl	equ	0xFF6
 30676                           tablat	equ	0xFF5
 30677                           prodh	equ	0xFF4
 30678                           prodl	equ	0xFF3
 30679                           intcon	equ	0xFF2
 30680                           intcon2	equ	0xFF1
 30681                           intcon3	equ	0xFF0
 30682                           indf0	equ	0xFEF
 30683                           postinc0	equ	0xFEE
 30684                           fsr0h	equ	0xFEA
 30685                           fsr0l	equ	0xFE9
 30686                           wreg	equ	0xFE8
 30687                           indf1	equ	0xFE7
 30688                           postdec1	equ	0xFE5
 30689                           plusw1	equ	0xFE3
 30690                           fsr1h	equ	0xFE2
 30691                           fsr1l	equ	0xFE1
 30692                           indf2	equ	0xFDF
 30693                           postinc2	equ	0xFDE
 30694                           postdec2	equ	0xFDD
 30695                           plusw2	equ	0xFDB
 30696                           fsr2h	equ	0xFDA
 30697                           fsr2l	equ	0xFD9
 30698                           status	equ	0xFD8
 30699                           
 30700 ;; *************** function __display_clear *****************
 30701 ;; Defined at:
 30702 ;;		line 75 in file "display.c"
 30703 ;; Parameters:    Size  Location     Type
 30704 ;;		None
 30705 ;; Auto vars:     Size  Location     Type
 30706 ;;  col             1    3[COMRAM] unsigned char 
 30707 ;;  row             1    2[COMRAM] unsigned char 
 30708 ;; Return value:  Size  Location     Type
 30709 ;;                  1    wreg      void 
 30710 ;; Registers used:
 30711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30712 ;; Tracked objects:
 30713 ;;		On entry : 0/0
 30714 ;;		On exit  : 0/0
 30715 ;;		Unchanged: 0/0
 30716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30721 ;;Total ram usage:        4 bytes
 30722 ;; Hardware stack levels used:    1
 30723 ;; This function calls:
 30724 ;;		Nothing
 30725 ;; This function is called by:
 30726 ;;		_display_prepare
 30727 ;; This function uses a non-reentrant model
 30728 ;;
 30729                           
 30730                           	psect	text148
 30731  0082C2                     __ptext148:
 30732                           	opt stack 0
 30733  0082C2                     __display_clear:
 30734                           	opt stack 26
 30735                           
 30736                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 30737                           
 30738                           ;incstack = 0
 30739  0082C2  0E00               	movlw	0
 30740  0082C4  6E03               	movwf	__display_clear@row,c
 30741  0082C6                     l11769:
 30742  0082C6  0E03               	movlw	3
 30743  0082C8  6403               	cpfsgt	__display_clear@row,c
 30744  0082CA  D001               	goto	l1464
 30745  0082CC  0012               	return	
 30746  0082CE                     l1464:
 30747                           
 30748                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 30749  0082CE  0E00               	movlw	0
 30750  0082D0  6E04               	movwf	__display_clear@col,c
 30751  0082D2                     l11775:
 30752  0082D2  0E13               	movlw	19
 30753  0082D4  6404               	cpfsgt	__display_clear@col,c
 30754  0082D6  D001               	goto	l1466
 30755  0082D8  D016               	goto	u8710
 30756  0082DA                     l1466:
 30757                           
 30758                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 30759  0082DA  5003               	movf	__display_clear@row,w,c
 30760  0082DC  0D14               	mullw	20
 30761  0082DE  0E00               	movlw	low _display_content
 30762  0082E0  6E01               	movwf	??__display_clear& (0+255),c
 30763  0082E2  0E02               	movlw	high _display_content
 30764  0082E4  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30765  0082E6  50F3               	movf	prodl,w,c
 30766  0082E8  2601               	addwf	??__display_clear,f,c
 30767  0082EA  50F4               	movf	prodh,w,c
 30768  0082EC  2202               	addwfc	??__display_clear+1,f,c
 30769  0082EE  5004               	movf	__display_clear@col,w,c
 30770  0082F0  0D01               	mullw	1
 30771  0082F2  50F3               	movf	prodl,w,c
 30772  0082F4  2401               	addwf	??__display_clear,w,c
 30773  0082F6  6ED9               	movwf	fsr2l,c
 30774  0082F8  50F4               	movf	prodh,w,c
 30775  0082FA  2002               	addwfc	??__display_clear+1,w,c
 30776  0082FC  6EDA               	movwf	fsr2h,c
 30777  0082FE  0E20               	movlw	32
 30778  008300  6EDF               	movwf	indf2,c
 30779  008302  2A04               	incf	__display_clear@col,f,c
 30780  008304  D7E6               	goto	l11775
 30781  008306                     u8710:
 30782  008306  2A03               	incf	__display_clear@row,f,c
 30783  008308  D7DE               	goto	l11769
 30784  00830A                     __end_of__display_clear:
 30785                           	opt stack 0
 30786                           tosu	equ	0xFFF
 30787                           tosh	equ	0xFFE
 30788                           tosl	equ	0xFFD
 30789                           pclath	equ	0xFFA
 30790                           tblptru	equ	0xFF8
 30791                           tblptrh	equ	0xFF7
 30792                           tblptrl	equ	0xFF6
 30793                           tablat	equ	0xFF5
 30794                           prodh	equ	0xFF4
 30795                           prodl	equ	0xFF3
 30796                           intcon	equ	0xFF2
 30797                           intcon2	equ	0xFF1
 30798                           intcon3	equ	0xFF0
 30799                           indf0	equ	0xFEF
 30800                           postinc0	equ	0xFEE
 30801                           fsr0h	equ	0xFEA
 30802                           fsr0l	equ	0xFE9
 30803                           wreg	equ	0xFE8
 30804                           indf1	equ	0xFE7
 30805                           postdec1	equ	0xFE5
 30806                           plusw1	equ	0xFE3
 30807                           fsr1h	equ	0xFE2
 30808                           fsr1l	equ	0xFE1
 30809                           indf2	equ	0xFDF
 30810                           postinc2	equ	0xFDE
 30811                           postdec2	equ	0xFDD
 30812                           plusw2	equ	0xFDB
 30813                           fsr2h	equ	0xFDA
 30814                           fsr2l	equ	0xFD9
 30815                           status	equ	0xFD8
 30816                           
 30817 ;; *************** function __display_checked *****************
 30818 ;; Defined at:
 30819 ;;		line 433 in file "display.c"
 30820 ;; Parameters:    Size  Location     Type
 30821 ;;		None
 30822 ;; Auto vars:     Size  Location     Type
 30823 ;;  cntr            1   33[COMRAM] unsigned char 
 30824 ;;  start           1   32[COMRAM] unsigned char 
 30825 ;; Return value:  Size  Location     Type
 30826 ;;                  1    wreg      void 
 30827 ;; Registers used:
 30828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30829 ;; Tracked objects:
 30830 ;;		On entry : 0/0
 30831 ;;		On exit  : 0/0
 30832 ;;		Unchanged: 0/0
 30833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30838 ;;Total ram usage:        4 bytes
 30839 ;; Hardware stack levels used:    1
 30840 ;; Hardware stack levels required when called:    4
 30841 ;; This function calls:
 30842 ;;		__display_itoa_u16
 30843 ;;		_bootloader_get_total_entries
 30844 ;; This function is called by:
 30845 ;;		_display_prepare
 30846 ;; This function uses a non-reentrant model
 30847 ;;
 30848                           
 30849                           	psect	text149
 30850  00377A                     __ptext149:
 30851                           	opt stack 0
 30852  00377A                     __display_checked:
 30853                           	opt stack 22
 30854                           
 30855                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 30856                           
 30857                           ;incstack = 0
 30858  00377A  0E00               	movlw	0
 30859  00377C  6E22               	movwf	__display_checked@cntr,c
 30860                           
 30861                           ;display.c: 438: while(checked_line1[cntr])
 30862  00377E  D017               	goto	l1622
 30863  003780                     
 30864                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 30865  003780  5022               	movf	__display_checked@cntr,w,c
 30866  003782  0D01               	mullw	1
 30867  003784  0EB4               	movlw	low _checked_line1
 30868  003786  24F3               	addwf	prodl,w,c
 30869  003788  6EF6               	movwf	tblptrl,c
 30870  00378A  0E9D               	movlw	high _checked_line1
 30871  00378C  20F4               	addwfc	prodh,w,c
 30872  00378E  6EF7               	movwf	tblptrh,c
 30873  003790                     	if	1	;There are 3 active tblptr bytes
 30874  003790  6AF8               	clrf	tblptru,c
 30875  003792  0E00               	movlw	low (__mediumconst shr (0+16))
 30876  003794  22F8               	addwfc	tblptru,f,c
 30877  003796                     	endif
 30878  003796  5022               	movf	__display_checked@cntr,w,c
 30879  003798  0D01               	mullw	1
 30880  00379A  0E00               	movlw	low _display_content
 30881  00379C  24F3               	addwf	prodl,w,c
 30882  00379E  6ED9               	movwf	fsr2l,c
 30883  0037A0  0E02               	movlw	high _display_content
 30884  0037A2  20F4               	addwfc	prodh,w,c
 30885  0037A4  6EDA               	movwf	fsr2h,c
 30886  0037A6  0008               	tblrd		*
 30887  0037A8  CFF5 FFDF          	movff	tablat,indf2
 30888  0037AC  2A22               	incf	__display_checked@cntr,f,c
 30889  0037AE                     l1622:
 30890  0037AE  5022               	movf	__display_checked@cntr,w,c
 30891  0037B0  0D01               	mullw	1
 30892  0037B2  0EB4               	movlw	low _checked_line1
 30893  0037B4  24F3               	addwf	prodl,w,c
 30894  0037B6  6EF6               	movwf	tblptrl,c
 30895  0037B8  0E9D               	movlw	high _checked_line1
 30896  0037BA  20F4               	addwfc	prodh,w,c
 30897  0037BC  6EF7               	movwf	tblptrh,c
 30898  0037BE                     	if	1	;There are 3 active tblptr bytes
 30899  0037BE  6AF8               	clrf	tblptru,c
 30900  0037C0  0E00               	movlw	low (__mediumconst shr (0+16))
 30901  0037C2  22F8               	addwfc	tblptru,f,c
 30902  0037C4                     	endif
 30903  0037C4  0008               	tblrd		*
 30904  0037C6  50F5               	movf	tablat,w,c
 30905  0037C8  0900               	iorlw	0
 30906  0037CA  A4D8               	btfss	status,2,c
 30907  0037CC  D7D9               	goto	l1623
 30908                           
 30909                           ;display.c: 440: cntr = 0;
 30910  0037CE  0E00               	movlw	0
 30911  0037D0  6E22               	movwf	__display_checked@cntr,c
 30912                           
 30913                           ;display.c: 441: while(checked_line2[cntr])
 30914  0037D2  D017               	goto	l1625
 30915  0037D4                     
 30916                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 30917  0037D4  5022               	movf	__display_checked@cntr,w,c
 30918  0037D6  0D01               	mullw	1
 30919  0037D8  0E99               	movlw	low _checked_line2
 30920  0037DA  24F3               	addwf	prodl,w,c
 30921  0037DC  6EF6               	movwf	tblptrl,c
 30922  0037DE  0E9C               	movlw	high _checked_line2
 30923  0037E0  20F4               	addwfc	prodh,w,c
 30924  0037E2  6EF7               	movwf	tblptrh,c
 30925  0037E4                     	if	1	;There are 3 active tblptr bytes
 30926  0037E4  6AF8               	clrf	tblptru,c
 30927  0037E6  0E00               	movlw	low (__mediumconst shr (0+16))
 30928  0037E8  22F8               	addwfc	tblptru,f,c
 30929  0037EA                     	endif
 30930  0037EA  5022               	movf	__display_checked@cntr,w,c
 30931  0037EC  0D01               	mullw	1
 30932  0037EE  0E14               	movlw	low (_display_content+20)
 30933  0037F0  24F3               	addwf	prodl,w,c
 30934  0037F2  6ED9               	movwf	fsr2l,c
 30935  0037F4  0E02               	movlw	high (_display_content+20)
 30936  0037F6  20F4               	addwfc	prodh,w,c
 30937  0037F8  6EDA               	movwf	fsr2h,c
 30938  0037FA  0008               	tblrd		*
 30939  0037FC  CFF5 FFDF          	movff	tablat,indf2
 30940  003800  2A22               	incf	__display_checked@cntr,f,c
 30941  003802                     l1625:
 30942  003802  5022               	movf	__display_checked@cntr,w,c
 30943  003804  0D01               	mullw	1
 30944  003806  0E99               	movlw	low _checked_line2
 30945  003808  24F3               	addwf	prodl,w,c
 30946  00380A  6EF6               	movwf	tblptrl,c
 30947  00380C  0E9C               	movlw	high _checked_line2
 30948  00380E  20F4               	addwfc	prodh,w,c
 30949  003810  6EF7               	movwf	tblptrh,c
 30950  003812                     	if	1	;There are 3 active tblptr bytes
 30951  003812  6AF8               	clrf	tblptru,c
 30952  003814  0E00               	movlw	low (__mediumconst shr (0+16))
 30953  003816  22F8               	addwfc	tblptru,f,c
 30954  003818                     	endif
 30955  003818  0008               	tblrd		*
 30956  00381A  50F5               	movf	tablat,w,c
 30957  00381C  0900               	iorlw	0
 30958  00381E  A4D8               	btfss	status,2,c
 30959  003820  D7D9               	goto	l1626
 30960                           
 30961                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30962  003822  ECB8  F047         	call	_bootloader_get_total_entries	;wreg free
 30963  003826  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30964  00382A  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30965  00382E  6A1B               	clrf	__display_itoa_u16@value+2,c
 30966  003830  6A1C               	clrf	__display_itoa_u16@value+3,c
 30967  003832  0E28               	movlw	low (_display_content+40)
 30968  003834  6E1D               	movwf	__display_itoa_u16@text,c
 30969  003836  0E02               	movlw	high (_display_content+40)
 30970  003838  6E1E               	movwf	__display_itoa_u16@text+1,c
 30971  00383A  EC0C  F030         	call	__display_itoa_u16	;wreg free
 30972  00383E  6E21               	movwf	__display_checked@start,c
 30973                           
 30974                           ;display.c: 445: start++;
 30975  003840  2A21               	incf	__display_checked@start,f,c
 30976                           
 30977                           ;display.c: 446: cntr = 0;
 30978  003842  0E00               	movlw	0
 30979  003844  6E22               	movwf	__display_checked@cntr,c
 30980                           
 30981                           ;display.c: 447: while(checked_line3[cntr])
 30982  003846  D01C               	goto	l1628
 30983  003848                     
 30984                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 30985  003848  5022               	movf	__display_checked@cntr,w,c
 30986  00384A  0D01               	mullw	1
 30987  00384C  0E73               	movlw	low _checked_line3
 30988  00384E  24F3               	addwf	prodl,w,c
 30989  003850  6EF6               	movwf	tblptrl,c
 30990  003852  0E9E               	movlw	high _checked_line3
 30991  003854  20F4               	addwfc	prodh,w,c
 30992  003856  6EF7               	movwf	tblptrh,c
 30993  003858                     	if	1	;There are 3 active tblptr bytes
 30994  003858  6AF8               	clrf	tblptru,c
 30995  00385A  0E00               	movlw	low (__mediumconst shr (0+16))
 30996  00385C  22F8               	addwfc	tblptru,f,c
 30997  00385E                     	endif
 30998  00385E  5022               	movf	__display_checked@cntr,w,c
 30999  003860  C021  F01F         	movff	__display_checked@start,??__display_checked
 31000  003864  6A20               	clrf	(??__display_checked+1)& (0+255),c
 31001  003866  261F               	addwf	??__display_checked,f,c
 31002  003868  0E00               	movlw	0
 31003  00386A  2220               	addwfc	??__display_checked+1,f,c
 31004  00386C  0E28               	movlw	low (_display_content+40)
 31005  00386E  241F               	addwf	??__display_checked,w,c
 31006  003870  6ED9               	movwf	fsr2l,c
 31007  003872  0E02               	movlw	high (_display_content+40)
 31008  003874  2020               	addwfc	??__display_checked+1,w,c
 31009  003876  6EDA               	movwf	fsr2h,c
 31010  003878  0008               	tblrd		*
 31011  00387A  CFF5 FFDF          	movff	tablat,indf2
 31012  00387E  2A22               	incf	__display_checked@cntr,f,c
 31013  003880                     l1628:
 31014  003880  5022               	movf	__display_checked@cntr,w,c
 31015  003882  0D01               	mullw	1
 31016  003884  0E73               	movlw	low _checked_line3
 31017  003886  24F3               	addwf	prodl,w,c
 31018  003888  6EF6               	movwf	tblptrl,c
 31019  00388A  0E9E               	movlw	high _checked_line3
 31020  00388C  20F4               	addwfc	prodh,w,c
 31021  00388E  6EF7               	movwf	tblptrh,c
 31022  003890                     	if	1	;There are 3 active tblptr bytes
 31023  003890  6AF8               	clrf	tblptru,c
 31024  003892  0E00               	movlw	low (__mediumconst shr (0+16))
 31025  003894  22F8               	addwfc	tblptru,f,c
 31026  003896                     	endif
 31027  003896  0008               	tblrd		*
 31028  003898  50F5               	movf	tablat,w,c
 31029  00389A  0900               	iorlw	0
 31030  00389C  A4D8               	btfss	status,2,c
 31031  00389E  D7D4               	goto	l1629
 31032                           
 31033                           ;display.c: 450: cntr = 0;
 31034  0038A0  0E00               	movlw	0
 31035  0038A2  6E22               	movwf	__display_checked@cntr,c
 31036                           
 31037                           ;display.c: 451: while(checked_line4[cntr])
 31038  0038A4  D017               	goto	l1631
 31039  0038A6                     
 31040                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 31041  0038A6  5022               	movf	__display_checked@cntr,w,c
 31042  0038A8  0D01               	mullw	1
 31043  0038AA  0E32               	movlw	low _checked_line4
 31044  0038AC  24F3               	addwf	prodl,w,c
 31045  0038AE  6EF6               	movwf	tblptrl,c
 31046  0038B0  0E9D               	movlw	high _checked_line4
 31047  0038B2  20F4               	addwfc	prodh,w,c
 31048  0038B4  6EF7               	movwf	tblptrh,c
 31049  0038B6                     	if	1	;There are 3 active tblptr bytes
 31050  0038B6  6AF8               	clrf	tblptru,c
 31051  0038B8  0E00               	movlw	low (__mediumconst shr (0+16))
 31052  0038BA  22F8               	addwfc	tblptru,f,c
 31053  0038BC                     	endif
 31054  0038BC  5022               	movf	__display_checked@cntr,w,c
 31055  0038BE  0D01               	mullw	1
 31056  0038C0  0E3C               	movlw	low (_display_content+60)
 31057  0038C2  24F3               	addwf	prodl,w,c
 31058  0038C4  6ED9               	movwf	fsr2l,c
 31059  0038C6  0E02               	movlw	high (_display_content+60)
 31060  0038C8  20F4               	addwfc	prodh,w,c
 31061  0038CA  6EDA               	movwf	fsr2h,c
 31062  0038CC  0008               	tblrd		*
 31063  0038CE  CFF5 FFDF          	movff	tablat,indf2
 31064  0038D2  2A22               	incf	__display_checked@cntr,f,c
 31065  0038D4                     l1631:
 31066  0038D4  5022               	movf	__display_checked@cntr,w,c
 31067  0038D6  0D01               	mullw	1
 31068  0038D8  0E32               	movlw	low _checked_line4
 31069  0038DA  24F3               	addwf	prodl,w,c
 31070  0038DC  6EF6               	movwf	tblptrl,c
 31071  0038DE  0E9D               	movlw	high _checked_line4
 31072  0038E0  20F4               	addwfc	prodh,w,c
 31073  0038E2  6EF7               	movwf	tblptrh,c
 31074  0038E4                     	if	1	;There are 3 active tblptr bytes
 31075  0038E4  6AF8               	clrf	tblptru,c
 31076  0038E6  0E00               	movlw	low (__mediumconst shr (0+16))
 31077  0038E8  22F8               	addwfc	tblptru,f,c
 31078  0038EA                     	endif
 31079  0038EA  0008               	tblrd		*
 31080  0038EC  50F5               	movf	tablat,w,c
 31081  0038EE  0900               	iorlw	0
 31082  0038F0  B4D8               	btfsc	status,2,c
 31083  0038F2  0012               	return	
 31084  0038F4  D7D8               	goto	l1632
 31085  0038F6                     __end_of__display_checked:
 31086                           	opt stack 0
 31087                           tosu	equ	0xFFF
 31088                           tosh	equ	0xFFE
 31089                           tosl	equ	0xFFD
 31090                           pclath	equ	0xFFA
 31091                           tblptru	equ	0xFF8
 31092                           tblptrh	equ	0xFF7
 31093                           tblptrl	equ	0xFF6
 31094                           tablat	equ	0xFF5
 31095                           prodh	equ	0xFF4
 31096                           prodl	equ	0xFF3
 31097                           intcon	equ	0xFF2
 31098                           intcon2	equ	0xFF1
 31099                           intcon3	equ	0xFF0
 31100                           indf0	equ	0xFEF
 31101                           postinc0	equ	0xFEE
 31102                           fsr0h	equ	0xFEA
 31103                           fsr0l	equ	0xFE9
 31104                           wreg	equ	0xFE8
 31105                           indf1	equ	0xFE7
 31106                           postdec1	equ	0xFE5
 31107                           plusw1	equ	0xFE3
 31108                           fsr1h	equ	0xFE2
 31109                           fsr1l	equ	0xFE1
 31110                           indf2	equ	0xFDF
 31111                           postinc2	equ	0xFDE
 31112                           postdec2	equ	0xFDD
 31113                           plusw2	equ	0xFDB
 31114                           fsr2h	equ	0xFDA
 31115                           fsr2l	equ	0xFD9
 31116                           status	equ	0xFD8
 31117                           
 31118 ;; *************** function _bootloader_get_total_entries *****************
 31119 ;; Defined at:
 31120 ;;		line 470 in file "bootloader.c"
 31121 ;; Parameters:    Size  Location     Type
 31122 ;;		None
 31123 ;; Auto vars:     Size  Location     Type
 31124 ;;		None
 31125 ;; Return value:  Size  Location     Type
 31126 ;;                  2    0[COMRAM] unsigned int 
 31127 ;; Registers used:
 31128 ;;		None
 31129 ;; Tracked objects:
 31130 ;;		On entry : 0/0
 31131 ;;		On exit  : 0/0
 31132 ;;		Unchanged: 0/0
 31133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31138 ;;Total ram usage:        2 bytes
 31139 ;; Hardware stack levels used:    1
 31140 ;; This function calls:
 31141 ;;		Nothing
 31142 ;; This function is called by:
 31143 ;;		__display_checked
 31144 ;;		__display_programming
 31145 ;;		__fill_buffer_get_bootloader_details
 31146 ;; This function uses a non-reentrant model
 31147 ;;
 31148                           
 31149                           	psect	text150
 31150  008F70                     __ptext150:
 31151                           	opt stack 0
 31152  008F70                     _bootloader_get_total_entries:
 31153                           	opt stack 25
 31154                           
 31155                           ;bootloader.c: 472: return total_hex_file_entries;
 31156                           
 31157                           ;incstack = 0
 31158  008F70  C176  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 31159  008F74  C177  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 31160  008F78  0012               	return		;funcret
 31161  008F7A                     __end_of_bootloader_get_total_entries:
 31162                           	opt stack 0
 31163                           tosu	equ	0xFFF
 31164                           tosh	equ	0xFFE
 31165                           tosl	equ	0xFFD
 31166                           pclath	equ	0xFFA
 31167                           tblptru	equ	0xFF8
 31168                           tblptrh	equ	0xFF7
 31169                           tblptrl	equ	0xFF6
 31170                           tablat	equ	0xFF5
 31171                           prodh	equ	0xFF4
 31172                           prodl	equ	0xFF3
 31173                           intcon	equ	0xFF2
 31174                           intcon2	equ	0xFF1
 31175                           intcon3	equ	0xFF0
 31176                           indf0	equ	0xFEF
 31177                           postinc0	equ	0xFEE
 31178                           fsr0h	equ	0xFEA
 31179                           fsr0l	equ	0xFE9
 31180                           wreg	equ	0xFE8
 31181                           indf1	equ	0xFE7
 31182                           postdec1	equ	0xFE5
 31183                           plusw1	equ	0xFE3
 31184                           fsr1h	equ	0xFE2
 31185                           fsr1l	equ	0xFE1
 31186                           indf2	equ	0xFDF
 31187                           postinc2	equ	0xFDE
 31188                           postdec2	equ	0xFDD
 31189                           plusw2	equ	0xFDB
 31190                           fsr2h	equ	0xFDA
 31191                           fsr2l	equ	0xFD9
 31192                           status	equ	0xFD8
 31193                           
 31194 ;; *************** function __display_itoa_u16 *****************
 31195 ;; Defined at:
 31196 ;;		line 88 in file "display.c"
 31197 ;; Parameters:    Size  Location     Type
 31198 ;;  value           4   24[COMRAM] unsigned long 
 31199 ;;  text            2   28[COMRAM] PTR unsigned char 
 31200 ;;		 -> display_content(80), 
 31201 ;; Auto vars:     Size  Location     Type
 31202 ;;		None
 31203 ;; Return value:  Size  Location     Type
 31204 ;;                  1    wreg      unsigned char 
 31205 ;; Registers used:
 31206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31207 ;; Tracked objects:
 31208 ;;		On entry : 0/0
 31209 ;;		On exit  : 0/0
 31210 ;;		Unchanged: 0/0
 31211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31212 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31215 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31216 ;;Total ram usage:        6 bytes
 31217 ;; Hardware stack levels used:    1
 31218 ;; Hardware stack levels required when called:    3
 31219 ;; This function calls:
 31220 ;;		_itoa
 31221 ;; This function is called by:
 31222 ;;		__display_itoa_u32
 31223 ;;		__display_verify
 31224 ;;		__display_checked
 31225 ;;		__display_failed
 31226 ;;		__display_programming
 31227 ;;		__display_done
 31228 ;; This function uses a non-reentrant model
 31229 ;;
 31230                           
 31231                           	psect	text151
 31232  006018                     __ptext151:
 31233                           	opt stack 0
 31234  006018                     __display_itoa_u16:
 31235                           	opt stack 22
 31236                           
 31237                           ;display.c: 90: itoa(text, value, 10);
 31238                           
 31239                           ;incstack = 0
 31240  006018  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 31241  00601C  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 31242  006020  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 31243  006024  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 31244  006028  0E00               	movlw	0
 31245  00602A  6E16               	movwf	itoa@base+1,c
 31246  00602C  0E0A               	movlw	10
 31247  00602E  6E15               	movwf	itoa@base,c
 31248  006030  EC77  F042         	call	_itoa	;wreg free
 31249                           
 31250                           ;display.c: 91: if(value>9999)
 31251  006034  501C               	movf	__display_itoa_u16@value+3,w,c
 31252  006036  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31253  006038  E106               	bnz	u7330
 31254  00603A  0E10               	movlw	16
 31255  00603C  5C19               	subwf	__display_itoa_u16@value,w,c
 31256  00603E  0E27               	movlw	39
 31257  006040  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31258  006042  A0D8               	btfss	status,0,c
 31259  006044  D00A               	goto	l1471
 31260  006046                     u7330:
 31261                           
 31262                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 31263  006046  EE20 F005          	lfsr	2,5
 31264  00604A  501D               	movf	__display_itoa_u16@text,w,c
 31265  00604C  26D9               	addwf	fsr2l,f,c
 31266  00604E  501E               	movf	__display_itoa_u16@text+1,w,c
 31267  006050  22DA               	addwfc	fsr2h,f,c
 31268  006052  0E20               	movlw	32
 31269  006054  6EDF               	movwf	indf2,c
 31270                           
 31271                           ;display.c: 94: return 5;
 31272  006056  0E05               	movlw	5
 31273                           
 31274                           ;display.c: 95: }
 31275  006058  0012               	return	
 31276  00605A                     l1471:
 31277                           
 31278                           ;display.c: 96: else if (value>999)
 31279  00605A  501C               	movf	__display_itoa_u16@value+3,w,c
 31280  00605C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31281  00605E  E106               	bnz	u7340
 31282  006060  0EE8               	movlw	232
 31283  006062  5C19               	subwf	__display_itoa_u16@value,w,c
 31284  006064  0E03               	movlw	3
 31285  006066  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31286  006068  A0D8               	btfss	status,0,c
 31287  00606A  D00A               	goto	l1474
 31288  00606C                     u7340:
 31289                           
 31290                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 31291  00606C  EE20 F004          	lfsr	2,4
 31292  006070  501D               	movf	__display_itoa_u16@text,w,c
 31293  006072  26D9               	addwf	fsr2l,f,c
 31294  006074  501E               	movf	__display_itoa_u16@text+1,w,c
 31295  006076  22DA               	addwfc	fsr2h,f,c
 31296  006078  0E20               	movlw	32
 31297  00607A  6EDF               	movwf	indf2,c
 31298                           
 31299                           ;display.c: 99: return 4;
 31300  00607C  0E04               	movlw	4
 31301                           
 31302                           ;display.c: 100: }
 31303  00607E  0012               	return	
 31304  006080                     l1474:
 31305                           
 31306                           ;display.c: 101: else if (value>99)
 31307  006080  501C               	movf	__display_itoa_u16@value+3,w,c
 31308  006082  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31309  006084  101A               	iorwf	__display_itoa_u16@value+1,w,c
 31310  006086  E104               	bnz	u7350
 31311  006088  0E64               	movlw	100
 31312  00608A  5C19               	subwf	__display_itoa_u16@value,w,c
 31313  00608C  A0D8               	btfss	status,0,c
 31314  00608E  D00A               	goto	l1476
 31315  006090                     u7350:
 31316                           
 31317                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 31318  006090  EE20 F003          	lfsr	2,3
 31319  006094  501D               	movf	__display_itoa_u16@text,w,c
 31320  006096  26D9               	addwf	fsr2l,f,c
 31321  006098  501E               	movf	__display_itoa_u16@text+1,w,c
 31322  00609A  22DA               	addwfc	fsr2h,f,c
 31323  00609C  0E20               	movlw	32
 31324  00609E  6EDF               	movwf	indf2,c
 31325                           
 31326                           ;display.c: 104: return 3;
 31327  0060A0  0E03               	movlw	3
 31328                           
 31329                           ;display.c: 105: }
 31330  0060A2  0012               	return	
 31331  0060A4                     l1476:
 31332                           
 31333                           ;display.c: 106: else if (value>9)
 31334  0060A4  501C               	movf	__display_itoa_u16@value+3,w,c
 31335  0060A6  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31336  0060A8  101A               	iorwf	__display_itoa_u16@value+1,w,c
 31337  0060AA  E104               	bnz	u7360
 31338  0060AC  0E0A               	movlw	10
 31339  0060AE  5C19               	subwf	__display_itoa_u16@value,w,c
 31340  0060B0  A0D8               	btfss	status,0,c
 31341  0060B2  D00A               	goto	l1478
 31342  0060B4                     u7360:
 31343                           
 31344                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 31345  0060B4  EE20 F002          	lfsr	2,2
 31346  0060B8  501D               	movf	__display_itoa_u16@text,w,c
 31347  0060BA  26D9               	addwf	fsr2l,f,c
 31348  0060BC  501E               	movf	__display_itoa_u16@text+1,w,c
 31349  0060BE  22DA               	addwfc	fsr2h,f,c
 31350  0060C0  0E20               	movlw	32
 31351  0060C2  6EDF               	movwf	indf2,c
 31352                           
 31353                           ;display.c: 109: return 2;
 31354  0060C4  0E02               	movlw	2
 31355                           
 31356                           ;display.c: 110: }
 31357  0060C6  0012               	return	
 31358  0060C8                     l1478:
 31359                           
 31360                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 31361  0060C8  EE20 F001          	lfsr	2,1
 31362  0060CC  501D               	movf	__display_itoa_u16@text,w,c
 31363  0060CE  26D9               	addwf	fsr2l,f,c
 31364  0060D0  501E               	movf	__display_itoa_u16@text+1,w,c
 31365  0060D2  22DA               	addwfc	fsr2h,f,c
 31366  0060D4  0E20               	movlw	32
 31367  0060D6  6EDF               	movwf	indf2,c
 31368                           
 31369                           ;display.c: 114: return 1;
 31370  0060D8  0E01               	movlw	1
 31371  0060DA  0012               	return	
 31372  0060DC                     __end_of__display_itoa_u16:
 31373                           	opt stack 0
 31374                           tosu	equ	0xFFF
 31375                           tosh	equ	0xFFE
 31376                           tosl	equ	0xFFD
 31377                           pclath	equ	0xFFA
 31378                           tblptru	equ	0xFF8
 31379                           tblptrh	equ	0xFF7
 31380                           tblptrl	equ	0xFF6
 31381                           tablat	equ	0xFF5
 31382                           prodh	equ	0xFF4
 31383                           prodl	equ	0xFF3
 31384                           intcon	equ	0xFF2
 31385                           intcon2	equ	0xFF1
 31386                           intcon3	equ	0xFF0
 31387                           indf0	equ	0xFEF
 31388                           postinc0	equ	0xFEE
 31389                           fsr0h	equ	0xFEA
 31390                           fsr0l	equ	0xFE9
 31391                           wreg	equ	0xFE8
 31392                           indf1	equ	0xFE7
 31393                           postdec1	equ	0xFE5
 31394                           plusw1	equ	0xFE3
 31395                           fsr1h	equ	0xFE2
 31396                           fsr1l	equ	0xFE1
 31397                           indf2	equ	0xFDF
 31398                           postinc2	equ	0xFDE
 31399                           postdec2	equ	0xFDD
 31400                           plusw2	equ	0xFDB
 31401                           fsr2h	equ	0xFDA
 31402                           fsr2l	equ	0xFD9
 31403                           status	equ	0xFD8
 31404                           
 31405 ;; *************** function _itoa *****************
 31406 ;; Defined at:
 31407 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31408 ;; Parameters:    Size  Location     Type
 31409 ;;  buf             2   16[COMRAM] PTR unsigned char 
 31410 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31411 ;;  val             2   18[COMRAM] int 
 31412 ;;  base            2   20[COMRAM] int 
 31413 ;; Auto vars:     Size  Location     Type
 31414 ;;  cp              2   22[COMRAM] PTR unsigned char 
 31415 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31416 ;; Return value:  Size  Location     Type
 31417 ;;                  2   16[COMRAM] PTR unsigned char 
 31418 ;; Registers used:
 31419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31420 ;; Tracked objects:
 31421 ;;		On entry : 0/0
 31422 ;;		On exit  : 0/0
 31423 ;;		Unchanged: 0/0
 31424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31425 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31428 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31429 ;;Total ram usage:        8 bytes
 31430 ;; Hardware stack levels used:    1
 31431 ;; Hardware stack levels required when called:    2
 31432 ;; This function calls:
 31433 ;;		_utoa
 31434 ;; This function is called by:
 31435 ;;		__display_itoa_u16
 31436 ;;		__display_itoa_u32
 31437 ;;		__display_itoa
 31438 ;; This function uses a non-reentrant model
 31439 ;;
 31440                           
 31441                           	psect	text152
 31442  0084EE                     __ptext152:
 31443                           	opt stack 0
 31444  0084EE                     _itoa:
 31445                           	opt stack 22
 31446                           
 31447                           ;incstack = 0
 31448  0084EE  C011  F017         	movff	itoa@buf,itoa@cp
 31449  0084F2  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31450  0084F6  AE14               	btfss	itoa@val+1,7,c
 31451  0084F8  D00C               	goto	l3675
 31452  0084FA  C011  FFD9         	movff	itoa@buf,fsr2l
 31453  0084FE  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31454  008502  0E2D               	movlw	45
 31455  008504  6EDF               	movwf	indf2,c
 31456  008506  4A11               	infsnz	itoa@buf,f,c
 31457  008508  2A12               	incf	itoa@buf+1,f,c
 31458  00850A  6C13               	negf	itoa@val,c
 31459  00850C  1E14               	comf	itoa@val+1,f,c
 31460  00850E  B0D8               	btfsc	status,0,c
 31461  008510  2A14               	incf	itoa@val+1,f,c
 31462  008512                     l3675:
 31463  008512  C011  F008         	movff	itoa@buf,utoa@buf
 31464  008516  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31465  00851A  C013  F00A         	movff	itoa@val,utoa@val
 31466  00851E  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31467  008522  C015  F00C         	movff	itoa@base,utoa@base
 31468  008526  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31469  00852A  EC8A  F034         	call	_utoa	;wreg free
 31470  00852E  0012               	return	
 31471  008530                     __end_of_itoa:
 31472                           	opt stack 0
 31473                           tosu	equ	0xFFF
 31474                           tosh	equ	0xFFE
 31475                           tosl	equ	0xFFD
 31476                           pclath	equ	0xFFA
 31477                           tblptru	equ	0xFF8
 31478                           tblptrh	equ	0xFF7
 31479                           tblptrl	equ	0xFF6
 31480                           tablat	equ	0xFF5
 31481                           prodh	equ	0xFF4
 31482                           prodl	equ	0xFF3
 31483                           intcon	equ	0xFF2
 31484                           intcon2	equ	0xFF1
 31485                           intcon3	equ	0xFF0
 31486                           indf0	equ	0xFEF
 31487                           postinc0	equ	0xFEE
 31488                           fsr0h	equ	0xFEA
 31489                           fsr0l	equ	0xFE9
 31490                           wreg	equ	0xFE8
 31491                           indf1	equ	0xFE7
 31492                           postdec1	equ	0xFE5
 31493                           plusw1	equ	0xFE3
 31494                           fsr1h	equ	0xFE2
 31495                           fsr1l	equ	0xFE1
 31496                           indf2	equ	0xFDF
 31497                           postinc2	equ	0xFDE
 31498                           postdec2	equ	0xFDD
 31499                           plusw2	equ	0xFDB
 31500                           fsr2h	equ	0xFDA
 31501                           fsr2l	equ	0xFD9
 31502                           status	equ	0xFD8
 31503                           
 31504 ;; *************** function _utoa *****************
 31505 ;; Defined at:
 31506 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31507 ;; Parameters:    Size  Location     Type
 31508 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31509 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31510 ;;  val             2    9[COMRAM] unsigned int 
 31511 ;;  base            2   11[COMRAM] int 
 31512 ;; Auto vars:     Size  Location     Type
 31513 ;;  v               2   13[COMRAM] unsigned int 
 31514 ;;  c               1   15[COMRAM] unsigned char 
 31515 ;; Return value:  Size  Location     Type
 31516 ;;                  2    7[COMRAM] PTR unsigned char 
 31517 ;; Registers used:
 31518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31519 ;; Tracked objects:
 31520 ;;		On entry : 0/0
 31521 ;;		On exit  : 0/0
 31522 ;;		Unchanged: 0/0
 31523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31524 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31525 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31527 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31528 ;;Total ram usage:        9 bytes
 31529 ;; Hardware stack levels used:    1
 31530 ;; Hardware stack levels required when called:    1
 31531 ;; This function calls:
 31532 ;;		___lwdiv
 31533 ;;		___lwmod
 31534 ;; This function is called by:
 31535 ;;		_itoa
 31536 ;; This function uses a non-reentrant model
 31537 ;;
 31538                           
 31539                           	psect	text153
 31540  006914                     __ptext153:
 31541                           	opt stack 0
 31542  006914                     _utoa:
 31543                           	opt stack 22
 31544                           
 31545                           ;incstack = 0
 31546  006914  C00A  F00E         	movff	utoa@val,utoa@v
 31547  006918  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31548  00691C  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31549  006920  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31550  006924  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31551  006928  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31552  00692C  ECBF  F040         	call	___lwdiv	;wreg free
 31553  006930  C001  F00E         	movff	?___lwdiv,utoa@v
 31554  006934  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31555  006938  4A08               	infsnz	utoa@buf,f,c
 31556  00693A  2A09               	incf	utoa@buf+1,f,c
 31557  00693C  500E               	movf	utoa@v,w,c
 31558  00693E  100F               	iorwf	utoa@v+1,w,c
 31559  006940  A4D8               	btfss	status,2,c
 31560  006942  D7EC               	goto	l3679
 31561  006944  C008  FFD9         	movff	utoa@buf,fsr2l
 31562  006948  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31563  00694C  0E00               	movlw	0
 31564  00694E  6EDF               	movwf	indf2,c
 31565  006950  0608               	decf	utoa@buf,f,c
 31566  006952  A0D8               	btfss	status,0,c
 31567  006954  0609               	decf	utoa@buf+1,f,c
 31568  006956  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31569  00695A  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31570  00695E  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31571  006962  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31572  006966  EC98  F042         	call	___lwmod	;wreg free
 31573  00696A  5001               	movf	?___lwmod,w,c
 31574  00696C  6E10               	movwf	utoa@c,c
 31575  00696E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31576  006972  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31577  006976  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31578  00697A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31579  00697E  ECBF  F040         	call	___lwdiv	;wreg free
 31580  006982  C001  F00A         	movff	?___lwdiv,utoa@val
 31581  006986  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31582  00698A  0E09               	movlw	9
 31583  00698C  6410               	cpfsgt	utoa@c,c
 31584  00698E  D002               	goto	l3682
 31585  006990  0E07               	movlw	7
 31586  006992  2610               	addwf	utoa@c,f,c
 31587  006994                     l3682:
 31588  006994  0E30               	movlw	48
 31589  006996  2610               	addwf	utoa@c,f,c
 31590  006998  C008  FFD9         	movff	utoa@buf,fsr2l
 31591  00699C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31592  0069A0  C010  FFDF         	movff	utoa@c,indf2
 31593  0069A4  0608               	decf	utoa@buf,f,c
 31594  0069A6  A0D8               	btfss	status,0,c
 31595  0069A8  0609               	decf	utoa@buf+1,f,c
 31596  0069AA  500A               	movf	utoa@val,w,c
 31597  0069AC  100B               	iorwf	utoa@val+1,w,c
 31598  0069AE  A4D8               	btfss	status,2,c
 31599  0069B0  D7D2               	goto	l3681
 31600                           
 31601                           ;	Return value of _utoa is never used
 31602  0069B2  4A08               	infsnz	utoa@buf,f,c
 31603  0069B4  2A09               	incf	utoa@buf+1,f,c
 31604  0069B6  0012               	return	
 31605  0069B8                     __end_of_utoa:
 31606                           	opt stack 0
 31607                           tosu	equ	0xFFF
 31608                           tosh	equ	0xFFE
 31609                           tosl	equ	0xFFD
 31610                           pclath	equ	0xFFA
 31611                           tblptru	equ	0xFF8
 31612                           tblptrh	equ	0xFF7
 31613                           tblptrl	equ	0xFF6
 31614                           tablat	equ	0xFF5
 31615                           prodh	equ	0xFF4
 31616                           prodl	equ	0xFF3
 31617                           intcon	equ	0xFF2
 31618                           intcon2	equ	0xFF1
 31619                           intcon3	equ	0xFF0
 31620                           indf0	equ	0xFEF
 31621                           postinc0	equ	0xFEE
 31622                           fsr0h	equ	0xFEA
 31623                           fsr0l	equ	0xFE9
 31624                           wreg	equ	0xFE8
 31625                           indf1	equ	0xFE7
 31626                           postdec1	equ	0xFE5
 31627                           plusw1	equ	0xFE3
 31628                           fsr1h	equ	0xFE2
 31629                           fsr1l	equ	0xFE1
 31630                           indf2	equ	0xFDF
 31631                           postinc2	equ	0xFDE
 31632                           postdec2	equ	0xFDD
 31633                           plusw2	equ	0xFDB
 31634                           fsr2h	equ	0xFDA
 31635                           fsr2l	equ	0xFD9
 31636                           status	equ	0xFD8
 31637                           
 31638 ;; *************** function ___lwmod *****************
 31639 ;; Defined at:
 31640 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31641 ;; Parameters:    Size  Location     Type
 31642 ;;  dividend        2    0[COMRAM] unsigned int 
 31643 ;;  divisor         2    2[COMRAM] unsigned int 
 31644 ;; Auto vars:     Size  Location     Type
 31645 ;;  counter         1    4[COMRAM] unsigned char 
 31646 ;; Return value:  Size  Location     Type
 31647 ;;                  2    0[COMRAM] unsigned int 
 31648 ;; Registers used:
 31649 ;;		wreg, status,2, status,0
 31650 ;; Tracked objects:
 31651 ;;		On entry : 0/0
 31652 ;;		On exit  : 0/0
 31653 ;;		Unchanged: 0/0
 31654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31658 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31659 ;;Total ram usage:        5 bytes
 31660 ;; Hardware stack levels used:    1
 31661 ;; This function calls:
 31662 ;;		Nothing
 31663 ;; This function is called by:
 31664 ;;		_utoa
 31665 ;; This function uses a non-reentrant model
 31666 ;;
 31667                           
 31668                           	psect	text154
 31669  008530                     __ptext154:
 31670                           	opt stack 0
 31671  008530                     ___lwmod:
 31672                           	opt stack 22
 31673                           
 31674                           ;incstack = 0
 31675  008530  5003               	movf	___lwmod@divisor,w,c
 31676  008532  1004               	iorwf	___lwmod@divisor+1,w,c
 31677  008534  B4D8               	btfsc	status,2,c
 31678  008536  D018               	goto	l3506
 31679  008538  0E01               	movlw	1
 31680  00853A  6E05               	movwf	___lwmod@counter,c
 31681  00853C  D004               	goto	l3501
 31682  00853E  90D8               	bcf	status,0,c
 31683  008540  3603               	rlcf	___lwmod@divisor,f,c
 31684  008542  3604               	rlcf	___lwmod@divisor+1,f,c
 31685  008544  2A05               	incf	___lwmod@counter,f,c
 31686  008546                     l3501:
 31687  008546  AE04               	btfss	___lwmod@divisor+1,7,c
 31688  008548  D7FA               	goto	l3502
 31689  00854A                     u6720:
 31690  00854A  5003               	movf	___lwmod@divisor,w,c
 31691  00854C  5C01               	subwf	___lwmod@dividend,w,c
 31692  00854E  5004               	movf	___lwmod@divisor+1,w,c
 31693  008550  5802               	subwfb	___lwmod@dividend+1,w,c
 31694  008552  A0D8               	btfss	status,0,c
 31695  008554  D004               	goto	l3505
 31696  008556  5003               	movf	___lwmod@divisor,w,c
 31697  008558  5E01               	subwf	___lwmod@dividend,f,c
 31698  00855A  5004               	movf	___lwmod@divisor+1,w,c
 31699  00855C  5A02               	subwfb	___lwmod@dividend+1,f,c
 31700  00855E                     l3505:
 31701  00855E  90D8               	bcf	status,0,c
 31702  008560  3204               	rrcf	___lwmod@divisor+1,f,c
 31703  008562  3203               	rrcf	___lwmod@divisor,f,c
 31704  008564  2E05               	decfsz	___lwmod@counter,f,c
 31705  008566  D7F1               	goto	u6720
 31706  008568                     l3506:
 31707  008568  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31708  00856C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31709  008570  0012               	return		;funcret
 31710  008572                     __end_of___lwmod:
 31711                           	opt stack 0
 31712                           tosu	equ	0xFFF
 31713                           tosh	equ	0xFFE
 31714                           tosl	equ	0xFFD
 31715                           pclath	equ	0xFFA
 31716                           tblptru	equ	0xFF8
 31717                           tblptrh	equ	0xFF7
 31718                           tblptrl	equ	0xFF6
 31719                           tablat	equ	0xFF5
 31720                           prodh	equ	0xFF4
 31721                           prodl	equ	0xFF3
 31722                           intcon	equ	0xFF2
 31723                           intcon2	equ	0xFF1
 31724                           intcon3	equ	0xFF0
 31725                           indf0	equ	0xFEF
 31726                           postinc0	equ	0xFEE
 31727                           fsr0h	equ	0xFEA
 31728                           fsr0l	equ	0xFE9
 31729                           wreg	equ	0xFE8
 31730                           indf1	equ	0xFE7
 31731                           postdec1	equ	0xFE5
 31732                           plusw1	equ	0xFE3
 31733                           fsr1h	equ	0xFE2
 31734                           fsr1l	equ	0xFE1
 31735                           indf2	equ	0xFDF
 31736                           postinc2	equ	0xFDE
 31737                           postdec2	equ	0xFDD
 31738                           plusw2	equ	0xFDB
 31739                           fsr2h	equ	0xFDA
 31740                           fsr2l	equ	0xFD9
 31741                           status	equ	0xFD8
 31742                           
 31743 ;; *************** function ___lwdiv *****************
 31744 ;; Defined at:
 31745 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31746 ;; Parameters:    Size  Location     Type
 31747 ;;  dividend        2    0[COMRAM] unsigned int 
 31748 ;;  divisor         2    2[COMRAM] unsigned int 
 31749 ;; Auto vars:     Size  Location     Type
 31750 ;;  quotient        2    4[COMRAM] unsigned int 
 31751 ;;  counter         1    6[COMRAM] unsigned char 
 31752 ;; Return value:  Size  Location     Type
 31753 ;;                  2    0[COMRAM] unsigned int 
 31754 ;; Registers used:
 31755 ;;		wreg, status,2, status,0
 31756 ;; Tracked objects:
 31757 ;;		On entry : 0/0
 31758 ;;		On exit  : 0/0
 31759 ;;		Unchanged: 0/0
 31760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31765 ;;Total ram usage:        7 bytes
 31766 ;; Hardware stack levels used:    1
 31767 ;; This function calls:
 31768 ;;		Nothing
 31769 ;; This function is called by:
 31770 ;;		_utoa
 31771 ;; This function uses a non-reentrant model
 31772 ;;
 31773                           
 31774                           	psect	text155
 31775  00817E                     __ptext155:
 31776                           	opt stack 0
 31777  00817E                     ___lwdiv:
 31778                           	opt stack 22
 31779                           
 31780                           ;incstack = 0
 31781  00817E  0E00               	movlw	0
 31782  008180  6E06               	movwf	___lwdiv@quotient+1,c
 31783  008182  0E00               	movlw	0
 31784  008184  6E05               	movwf	___lwdiv@quotient,c
 31785  008186  5003               	movf	___lwdiv@divisor,w,c
 31786  008188  1004               	iorwf	___lwdiv@divisor+1,w,c
 31787  00818A  B4D8               	btfsc	status,2,c
 31788  00818C  D01C               	goto	l3496
 31789  00818E  0E01               	movlw	1
 31790  008190  6E07               	movwf	___lwdiv@counter,c
 31791  008192  D004               	goto	l3491
 31792  008194  90D8               	bcf	status,0,c
 31793  008196  3603               	rlcf	___lwdiv@divisor,f,c
 31794  008198  3604               	rlcf	___lwdiv@divisor+1,f,c
 31795  00819A  2A07               	incf	___lwdiv@counter,f,c
 31796  00819C                     l3491:
 31797  00819C  AE04               	btfss	___lwdiv@divisor+1,7,c
 31798  00819E  D7FA               	goto	l3492
 31799  0081A0                     u6690:
 31800  0081A0  90D8               	bcf	status,0,c
 31801  0081A2  3605               	rlcf	___lwdiv@quotient,f,c
 31802  0081A4  3606               	rlcf	___lwdiv@quotient+1,f,c
 31803  0081A6  5003               	movf	___lwdiv@divisor,w,c
 31804  0081A8  5C01               	subwf	___lwdiv@dividend,w,c
 31805  0081AA  5004               	movf	___lwdiv@divisor+1,w,c
 31806  0081AC  5802               	subwfb	___lwdiv@dividend+1,w,c
 31807  0081AE  A0D8               	btfss	status,0,c
 31808  0081B0  D005               	goto	l3495
 31809  0081B2  5003               	movf	___lwdiv@divisor,w,c
 31810  0081B4  5E01               	subwf	___lwdiv@dividend,f,c
 31811  0081B6  5004               	movf	___lwdiv@divisor+1,w,c
 31812  0081B8  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31813  0081BA  8005               	bsf	___lwdiv@quotient,0,c
 31814  0081BC                     l3495:
 31815  0081BC  90D8               	bcf	status,0,c
 31816  0081BE  3204               	rrcf	___lwdiv@divisor+1,f,c
 31817  0081C0  3203               	rrcf	___lwdiv@divisor,f,c
 31818  0081C2  2E07               	decfsz	___lwdiv@counter,f,c
 31819  0081C4  D7ED               	goto	u6690
 31820  0081C6                     l3496:
 31821  0081C6  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31822  0081CA  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31823  0081CE  0012               	return		;funcret
 31824  0081D0                     __end_of___lwdiv:
 31825                           	opt stack 0
 31826                           tosu	equ	0xFFF
 31827                           tosh	equ	0xFFE
 31828                           tosl	equ	0xFFD
 31829                           pclath	equ	0xFFA
 31830                           tblptru	equ	0xFF8
 31831                           tblptrh	equ	0xFF7
 31832                           tblptrl	equ	0xFF6
 31833                           tablat	equ	0xFF5
 31834                           prodh	equ	0xFF4
 31835                           prodl	equ	0xFF3
 31836                           intcon	equ	0xFF2
 31837                           intcon2	equ	0xFF1
 31838                           intcon3	equ	0xFF0
 31839                           indf0	equ	0xFEF
 31840                           postinc0	equ	0xFEE
 31841                           fsr0h	equ	0xFEA
 31842                           fsr0l	equ	0xFE9
 31843                           wreg	equ	0xFE8
 31844                           indf1	equ	0xFE7
 31845                           postdec1	equ	0xFE5
 31846                           plusw1	equ	0xFE3
 31847                           fsr1h	equ	0xFE2
 31848                           fsr1l	equ	0xFE1
 31849                           indf2	equ	0xFDF
 31850                           postinc2	equ	0xFDE
 31851                           postdec2	equ	0xFDD
 31852                           plusw2	equ	0xFDB
 31853                           fsr2h	equ	0xFDA
 31854                           fsr2l	equ	0xFD9
 31855                           status	equ	0xFD8
 31856                           
 31857 ;; *************** function _i2c_eeprom_writeByte *****************
 31858 ;; Defined at:
 31859 ;;		line 352 in file "i2c.c"
 31860 ;; Parameters:    Size  Location     Type
 31861 ;;  address         2   10[COMRAM] unsigned int 
 31862 ;;  data            1   12[COMRAM] unsigned char 
 31863 ;; Auto vars:     Size  Location     Type
 31864 ;;  dat             2   16[COMRAM] unsigned char [2]
 31865 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31866 ;; Return value:  Size  Location     Type
 31867 ;;                  1    wreg      void 
 31868 ;; Registers used:
 31869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31870 ;; Tracked objects:
 31871 ;;		On entry : 0/0
 31872 ;;		On exit  : 0/0
 31873 ;;		Unchanged: 0/0
 31874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31875 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31876 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31877 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31878 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31879 ;;Total ram usage:        9 bytes
 31880 ;; Hardware stack levels used:    1
 31881 ;; Hardware stack levels required when called:    2
 31882 ;; This function calls:
 31883 ;;		__i2c_write
 31884 ;;		_i2c_set_frequency
 31885 ;; This function is called by:
 31886 ;;		__normal_mode
 31887 ;;		__ui_encoder
 31888 ;;		__parse_command_short
 31889 ;; This function uses a non-reentrant model
 31890 ;;
 31891                           
 31892                           	psect	text156
 31893  008572                     __ptext156:
 31894                           	opt stack 0
 31895  008572                     _i2c_eeprom_writeByte:
 31896                           	opt stack 26
 31897                           
 31898                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31899                           
 31900                           ;incstack = 0
 31901  008572  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31902  008576  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31903  00857A  0E07               	movlw	7
 31904  00857C  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31905  00857E                     u10625:
 31906  00857E  90D8               	bcf	status,0,c
 31907  008580  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31908  008582  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31909  008584  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31910  008586  D7FB               	goto	u10625
 31911  008588  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31912  00858A  0B0E               	andlw	14
 31913  00858C  09A0               	iorlw	160
 31914  00858E  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31915                           
 31916                           ;i2c.c: 358: dat[0] = address & 0xFF;
 31917  008590  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31918                           
 31919                           ;i2c.c: 359: dat[1] = data;
 31920  008594  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31921                           
 31922                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31923  008598  0E02               	movlw	2
 31924  00859A  EC12  F045         	call	_i2c_set_frequency
 31925                           
 31926                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 31927  00859E  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31928  0085A0  6E06               	movwf	__i2c_write@data,c
 31929  0085A2  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31930  0085A4  6E07               	movwf	__i2c_write@data+1,c
 31931  0085A6  0E02               	movlw	2
 31932  0085A8  6E08               	movwf	__i2c_write@length,c
 31933  0085AA  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31934  0085AC  EC85  F041         	call	__i2c_write
 31935  0085B0  0012               	return		;funcret
 31936  0085B2                     __end_of_i2c_eeprom_writeByte:
 31937                           	opt stack 0
 31938                           tosu	equ	0xFFF
 31939                           tosh	equ	0xFFE
 31940                           tosl	equ	0xFFD
 31941                           pclath	equ	0xFFA
 31942                           tblptru	equ	0xFF8
 31943                           tblptrh	equ	0xFF7
 31944                           tblptrl	equ	0xFF6
 31945                           tablat	equ	0xFF5
 31946                           prodh	equ	0xFF4
 31947                           prodl	equ	0xFF3
 31948                           intcon	equ	0xFF2
 31949                           intcon2	equ	0xFF1
 31950                           intcon3	equ	0xFF0
 31951                           indf0	equ	0xFEF
 31952                           postinc0	equ	0xFEE
 31953                           fsr0h	equ	0xFEA
 31954                           fsr0l	equ	0xFE9
 31955                           wreg	equ	0xFE8
 31956                           indf1	equ	0xFE7
 31957                           postdec1	equ	0xFE5
 31958                           plusw1	equ	0xFE3
 31959                           fsr1h	equ	0xFE2
 31960                           fsr1l	equ	0xFE1
 31961                           indf2	equ	0xFDF
 31962                           postinc2	equ	0xFDE
 31963                           postdec2	equ	0xFDD
 31964                           plusw2	equ	0xFDB
 31965                           fsr2h	equ	0xFDA
 31966                           fsr2l	equ	0xFD9
 31967                           status	equ	0xFD8
 31968                           
 31969 ;; *************** function _i2c_set_frequency *****************
 31970 ;; Defined at:
 31971 ;;		line 123 in file "i2c.c"
 31972 ;; Parameters:    Size  Location     Type
 31973 ;;  frequency       1    wreg     enum E6622
 31974 ;; Auto vars:     Size  Location     Type
 31975 ;;  frequency       1    0[COMRAM] enum E6622
 31976 ;; Return value:  Size  Location     Type
 31977 ;;                  1    wreg      void 
 31978 ;; Registers used:
 31979 ;;		wreg, status,2, status,0
 31980 ;; Tracked objects:
 31981 ;;		On entry : 0/0
 31982 ;;		On exit  : 0/0
 31983 ;;		Unchanged: 0/0
 31984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31989 ;;Total ram usage:        1 bytes
 31990 ;; Hardware stack levels used:    1
 31991 ;; This function calls:
 31992 ;;		Nothing
 31993 ;; This function is called by:
 31994 ;;		_i2c_init
 31995 ;;		__ic2_display_set_address
 31996 ;;		_i2c_display_send_init_sequence
 31997 ;;		_i2c_display_cursor
 31998 ;;		_i2c_display_write_fixed
 31999 ;;		_i2c_digipot_reset_on
 32000 ;;		_i2c_digipot_reset_off
 32001 ;;		_i2c_digipot_backlight
 32002 ;;		_i2c_eeprom_writeByte
 32003 ;;		_i2c_eeprom_readByte
 32004 ;;		_i2c_display_write
 32005 ;;		_i2c_eeprom_write
 32006 ;;		_i2c_eeprom_read
 32007 ;; This function uses a non-reentrant model
 32008 ;;
 32009                           
 32010                           	psect	text157
 32011  008A24                     __ptext157:
 32012                           	opt stack 0
 32013  008A24                     _i2c_set_frequency:
 32014                           	opt stack 28
 32015                           
 32016                           ;incstack = 0
 32017                           ;i2c_set_frequency@frequency stored from wreg
 32018  008A24  6E01               	movwf	i2c_set_frequency@frequency,c
 32019                           
 32020                           ;i2c.c: 125: switch(frequency)
 32021  008A26  D007               	goto	l1195
 32022  008A28                     
 32023                           ;i2c.c: 128: SSP1ADD = 119;
 32024  008A28  0E77               	movlw	119
 32025  008A2A  D003               	goto	L34
 32026  008A2C                     
 32027                           ;i2c.c: 131: SSP1ADD = 59;
 32028  008A2C  0E3B               	movlw	59
 32029  008A2E  D001               	goto	L34
 32030  008A30                     
 32031                           ;i2c.c: 134: SSP1ADD = 29;
 32032  008A30  0E1D               	movlw	29
 32033  008A32                     L34:
 32034  008A32  6EC8               	movwf	4040,c	;volatile
 32035                           
 32036                           ;i2c.c: 136: }
 32037                           
 32038                           ;i2c.c: 135: break;
 32039  008A34  D00A               	goto	l1197
 32040  008A36                     l1195:
 32041  008A36  5001               	movf	i2c_set_frequency@frequency,w,c
 32042                           
 32043                           ; Switch size 1, requested type "space"
 32044                           ; Number of cases is 3, Range of values is 0 to 2
 32045                           ; switch strategies available:
 32046                           ; Name         Instructions Cycles
 32047                           ; simple_byte           10     6 (average)
 32048                           ;	Chosen strategy is simple_byte
 32049  008A38  0A00               	xorlw	0	; case 0
 32050  008A3A  B4D8               	btfsc	status,2,c
 32051  008A3C  D7F5               	goto	l1196
 32052  008A3E  0A01               	xorlw	1	; case 1
 32053  008A40  B4D8               	btfsc	status,2,c
 32054  008A42  D7F4               	goto	l1198
 32055  008A44  0A03               	xorlw	3	; case 2
 32056  008A46  B4D8               	btfsc	status,2,c
 32057  008A48  D7F3               	goto	l1199
 32058  008A4A                     l1197:
 32059                           
 32060                           ;i2c.c: 138: i2c_frequency = frequency;
 32061  008A4A  C001  F18D         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32062  008A4E  0012               	return		;funcret
 32063  008A50                     __end_of_i2c_set_frequency:
 32064                           	opt stack 0
 32065                           tosu	equ	0xFFF
 32066                           tosh	equ	0xFFE
 32067                           tosl	equ	0xFFD
 32068                           pclath	equ	0xFFA
 32069                           tblptru	equ	0xFF8
 32070                           tblptrh	equ	0xFF7
 32071                           tblptrl	equ	0xFF6
 32072                           tablat	equ	0xFF5
 32073                           prodh	equ	0xFF4
 32074                           prodl	equ	0xFF3
 32075                           intcon	equ	0xFF2
 32076                           intcon2	equ	0xFF1
 32077                           intcon3	equ	0xFF0
 32078                           indf0	equ	0xFEF
 32079                           postinc0	equ	0xFEE
 32080                           fsr0h	equ	0xFEA
 32081                           fsr0l	equ	0xFE9
 32082                           wreg	equ	0xFE8
 32083                           indf1	equ	0xFE7
 32084                           postdec1	equ	0xFE5
 32085                           plusw1	equ	0xFE3
 32086                           fsr1h	equ	0xFE2
 32087                           fsr1l	equ	0xFE1
 32088                           indf2	equ	0xFDF
 32089                           postinc2	equ	0xFDE
 32090                           postdec2	equ	0xFDD
 32091                           plusw2	equ	0xFDB
 32092                           fsr2h	equ	0xFDA
 32093                           fsr2l	equ	0xFD9
 32094                           status	equ	0xFD8
 32095                           
 32096 ;; *************** function __i2c_write *****************
 32097 ;; Defined at:
 32098 ;;		line 142 in file "i2c.c"
 32099 ;; Parameters:    Size  Location     Type
 32100 ;;  slave_addres    1    wreg     unsigned char 
 32101 ;;  data            2    5[COMRAM] PTR unsigned char 
 32102 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32103 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32104 ;;		 -> _ic2_display_set_address@data_array(2), 
 32105 ;;  length          1    7[COMRAM] unsigned char 
 32106 ;; Auto vars:     Size  Location     Type
 32107 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32108 ;;  cntr            1    9[COMRAM] unsigned char 
 32109 ;; Return value:  Size  Location     Type
 32110 ;;                  1    wreg      void 
 32111 ;; Registers used:
 32112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32113 ;; Tracked objects:
 32114 ;;		On entry : 0/0
 32115 ;;		On exit  : 0/0
 32116 ;;		Unchanged: 0/0
 32117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32121 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32122 ;;Total ram usage:        5 bytes
 32123 ;; Hardware stack levels used:    1
 32124 ;; Hardware stack levels required when called:    1
 32125 ;; This function calls:
 32126 ;;		__i2c_send
 32127 ;;		__i2c_start
 32128 ;;		__i2c_stop
 32129 ;;		__i2c_wait_idle
 32130 ;; This function is called by:
 32131 ;;		__ic2_display_set_address
 32132 ;;		_i2c_display_send_init_sequence
 32133 ;;		_i2c_digipot_reset_on
 32134 ;;		_i2c_digipot_reset_off
 32135 ;;		_i2c_digipot_backlight
 32136 ;;		_i2c_eeprom_writeByte
 32137 ;;		_i2c_eeprom_readByte
 32138 ;;		_i2c_eeprom_write
 32139 ;;		_i2c_eeprom_read
 32140 ;; This function uses a non-reentrant model
 32141 ;;
 32142                           
 32143                           	psect	text158
 32144  00830A                     __ptext158:
 32145                           	opt stack 0
 32146  00830A                     __i2c_write:
 32147                           	opt stack 27
 32148                           
 32149                           ;incstack = 0
 32150                           ;__i2c_write@slave_address stored from wreg
 32151  00830A  6E09               	movwf	__i2c_write@slave_address,c
 32152                           
 32153                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 32154  00830C  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32155                           
 32156                           ;i2c.c: 147: _i2c_start();
 32157  008310  ECCB  F047         	call	__i2c_start	;wreg free
 32158                           
 32159                           ;i2c.c: 148: _i2c_wait_idle();
 32160  008314  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32161                           
 32162                           ;i2c.c: 149: _i2c_send(slave_address);
 32163  008318  5009               	movf	__i2c_write@slave_address,w,c
 32164  00831A  ECCF  F047         	call	__i2c_send
 32165                           
 32166                           ;i2c.c: 150: _i2c_wait_idle();
 32167  00831E  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32168                           
 32169                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 32170  008322  0E00               	movlw	0
 32171  008324  6E0A               	movwf	__i2c_write@cntr,c
 32172  008326  D00E               	goto	l1203
 32173  008328                     
 32174                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 32175  008328  500A               	movf	__i2c_write@cntr,w,c
 32176  00832A  0D01               	mullw	1
 32177  00832C  50F3               	movf	prodl,w,c
 32178  00832E  2406               	addwf	__i2c_write@data,w,c
 32179  008330  6ED9               	movwf	fsr2l,c
 32180  008332  50F4               	movf	prodh,w,c
 32181  008334  2007               	addwfc	__i2c_write@data+1,w,c
 32182  008336  6EDA               	movwf	fsr2h,c
 32183  008338  50DF               	movf	indf2,w,c
 32184  00833A  ECCF  F047         	call	__i2c_send
 32185                           
 32186                           ;i2c.c: 155: _i2c_wait_idle();
 32187  00833E  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32188  008342  2A0A               	incf	__i2c_write@cntr,f,c
 32189  008344                     l1203:
 32190  008344  5008               	movf	__i2c_write@length,w,c
 32191  008346  5C0A               	subwf	__i2c_write@cntr,w,c
 32192  008348  A0D8               	btfss	status,0,c
 32193  00834A  D7EE               	goto	l1204
 32194                           
 32195                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 32196  00834C  ECC7  F047         	call	__i2c_stop	;wreg free
 32197  008350  0012               	return		;funcret
 32198  008352                     __end_of__i2c_write:
 32199                           	opt stack 0
 32200                           tosu	equ	0xFFF
 32201                           tosh	equ	0xFFE
 32202                           tosl	equ	0xFFD
 32203                           pclath	equ	0xFFA
 32204                           tblptru	equ	0xFF8
 32205                           tblptrh	equ	0xFF7
 32206                           tblptrl	equ	0xFF6
 32207                           tablat	equ	0xFF5
 32208                           prodh	equ	0xFF4
 32209                           prodl	equ	0xFF3
 32210                           intcon	equ	0xFF2
 32211                           intcon2	equ	0xFF1
 32212                           intcon3	equ	0xFF0
 32213                           indf0	equ	0xFEF
 32214                           postinc0	equ	0xFEE
 32215                           fsr0h	equ	0xFEA
 32216                           fsr0l	equ	0xFE9
 32217                           wreg	equ	0xFE8
 32218                           indf1	equ	0xFE7
 32219                           postdec1	equ	0xFE5
 32220                           plusw1	equ	0xFE3
 32221                           fsr1h	equ	0xFE2
 32222                           fsr1l	equ	0xFE1
 32223                           indf2	equ	0xFDF
 32224                           postinc2	equ	0xFDE
 32225                           postdec2	equ	0xFDD
 32226                           plusw2	equ	0xFDB
 32227                           fsr2h	equ	0xFDA
 32228                           fsr2l	equ	0xFD9
 32229                           status	equ	0xFD8
 32230                           
 32231 ;; *************** function __i2c_wait_idle *****************
 32232 ;; Defined at:
 32233 ;;		line 48 in file "i2c.c"
 32234 ;; Parameters:    Size  Location     Type
 32235 ;;		None
 32236 ;; Auto vars:     Size  Location     Type
 32237 ;;		None
 32238 ;; Return value:  Size  Location     Type
 32239 ;;                  1    wreg      void 
 32240 ;; Registers used:
 32241 ;;		wreg, status,2, status,0
 32242 ;; Tracked objects:
 32243 ;;		On entry : 0/0
 32244 ;;		On exit  : 0/0
 32245 ;;		Unchanged: 0/0
 32246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32249 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32250 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32251 ;;Total ram usage:        5 bytes
 32252 ;; Hardware stack levels used:    1
 32253 ;; This function calls:
 32254 ;;		Nothing
 32255 ;; This function is called by:
 32256 ;;		__i2c_write
 32257 ;;		__i2c_read
 32258 ;;		_i2c_display_write_fixed
 32259 ;;		_i2c_display_write
 32260 ;; This function uses a non-reentrant model
 32261 ;;
 32262                           
 32263                           	psect	text159
 32264  007D1C                     __ptext159:
 32265                           	opt stack 0
 32266  007D1C                     __i2c_wait_idle:
 32267                           	opt stack 27
 32268                           
 32269                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32270                           
 32271                           ;incstack = 0
 32272  007D1C  A4C7               	btfss	4039,2,c	;volatile
 32273  007D1E  D003               	goto	u6870
 32274  007D20  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32275  007D22  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32276  007D24  D001               	goto	u6878
 32277  007D26                     u6870:
 32278  007D26  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32279  007D28                     u6878:
 32280  007D28  A0C5               	btfss	4037,0,c	;volatile
 32281  007D2A  D003               	goto	u6880
 32282  007D2C  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32283  007D2E  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32284  007D30  D001               	goto	u6888
 32285  007D32                     u6880:
 32286  007D32  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32287  007D34                     u6888:
 32288  007D34  A2C5               	btfss	4037,1,c	;volatile
 32289  007D36  D003               	goto	u6890
 32290  007D38  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32291  007D3A  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32292  007D3C  D001               	goto	u6898
 32293  007D3E                     u6890:
 32294  007D3E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32295  007D40                     u6898:
 32296  007D40  A4C5               	btfss	4037,2,c	;volatile
 32297  007D42  D003               	goto	u6900
 32298  007D44  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32299  007D46  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32300  007D48  D001               	goto	u6908
 32301  007D4A                     u6900:
 32302  007D4A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32303  007D4C                     u6908:
 32304  007D4C  A6C5               	btfss	4037,3,c	;volatile
 32305  007D4E  D003               	goto	u6910
 32306  007D50  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32307  007D52  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32308  007D54  D001               	goto	u6918
 32309  007D56                     u6910:
 32310  007D56  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32311  007D58                     u6918:
 32312  007D58  A8C5               	btfss	4037,4,c	;volatile
 32313  007D5A  D002               	goto	u6920
 32314  007D5C  0E01               	movlw	1
 32315  007D5E  D001               	goto	u6926
 32316  007D60                     u6920:
 32317  007D60  0E00               	movlw	0
 32318  007D62                     u6926:
 32319  007D62  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32320  007D64  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32321  007D66  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32322  007D68  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32323  007D6A  1001               	iorwf	??__i2c_wait_idle,w,c
 32324  007D6C  0900               	iorlw	0
 32325  007D6E  B4D8               	btfsc	status,2,c
 32326  007D70  0012               	return	
 32327  007D72  D7D4               	goto	__i2c_wait_idle
 32328  007D74                     __end_of__i2c_wait_idle:
 32329                           	opt stack 0
 32330                           tosu	equ	0xFFF
 32331                           tosh	equ	0xFFE
 32332                           tosl	equ	0xFFD
 32333                           pclath	equ	0xFFA
 32334                           tblptru	equ	0xFF8
 32335                           tblptrh	equ	0xFF7
 32336                           tblptrl	equ	0xFF6
 32337                           tablat	equ	0xFF5
 32338                           prodh	equ	0xFF4
 32339                           prodl	equ	0xFF3
 32340                           intcon	equ	0xFF2
 32341                           intcon2	equ	0xFF1
 32342                           intcon3	equ	0xFF0
 32343                           indf0	equ	0xFEF
 32344                           postinc0	equ	0xFEE
 32345                           fsr0h	equ	0xFEA
 32346                           fsr0l	equ	0xFE9
 32347                           wreg	equ	0xFE8
 32348                           indf1	equ	0xFE7
 32349                           postdec1	equ	0xFE5
 32350                           plusw1	equ	0xFE3
 32351                           fsr1h	equ	0xFE2
 32352                           fsr1l	equ	0xFE1
 32353                           indf2	equ	0xFDF
 32354                           postinc2	equ	0xFDE
 32355                           postdec2	equ	0xFDD
 32356                           plusw2	equ	0xFDB
 32357                           fsr2h	equ	0xFDA
 32358                           fsr2l	equ	0xFD9
 32359                           status	equ	0xFD8
 32360                           
 32361 ;; *************** function __i2c_stop *****************
 32362 ;; Defined at:
 32363 ;;		line 75 in file "i2c.c"
 32364 ;; Parameters:    Size  Location     Type
 32365 ;;		None
 32366 ;; Auto vars:     Size  Location     Type
 32367 ;;		None
 32368 ;; Return value:  Size  Location     Type
 32369 ;;                  1    wreg      void 
 32370 ;; Registers used:
 32371 ;;		None
 32372 ;; Tracked objects:
 32373 ;;		On entry : 0/0
 32374 ;;		On exit  : 0/0
 32375 ;;		Unchanged: 0/0
 32376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32381 ;;Total ram usage:        0 bytes
 32382 ;; Hardware stack levels used:    1
 32383 ;; This function calls:
 32384 ;;		Nothing
 32385 ;; This function is called by:
 32386 ;;		__i2c_write
 32387 ;;		__i2c_read
 32388 ;;		_i2c_display_write_fixed
 32389 ;;		_i2c_display_write
 32390 ;; This function uses a non-reentrant model
 32391 ;;
 32392                           
 32393                           	psect	text160
 32394  008F8E                     __ptext160:
 32395                           	opt stack 0
 32396  008F8E                     __i2c_stop:
 32397                           	opt stack 27
 32398                           
 32399                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 32400                           
 32401                           ;incstack = 0
 32402  008F8E  84C5               	bsf	4037,2,c	;volatile
 32403  008F90  A4C5               	btfss	4037,2,c	;volatile
 32404  008F92  0012               	return	
 32405  008F94  D7FD               	goto	l1169
 32406  008F96                     __end_of__i2c_stop:
 32407                           	opt stack 0
 32408                           tosu	equ	0xFFF
 32409                           tosh	equ	0xFFE
 32410                           tosl	equ	0xFFD
 32411                           pclath	equ	0xFFA
 32412                           tblptru	equ	0xFF8
 32413                           tblptrh	equ	0xFF7
 32414                           tblptrl	equ	0xFF6
 32415                           tablat	equ	0xFF5
 32416                           prodh	equ	0xFF4
 32417                           prodl	equ	0xFF3
 32418                           intcon	equ	0xFF2
 32419                           intcon2	equ	0xFF1
 32420                           intcon3	equ	0xFF0
 32421                           indf0	equ	0xFEF
 32422                           postinc0	equ	0xFEE
 32423                           fsr0h	equ	0xFEA
 32424                           fsr0l	equ	0xFE9
 32425                           wreg	equ	0xFE8
 32426                           indf1	equ	0xFE7
 32427                           postdec1	equ	0xFE5
 32428                           plusw1	equ	0xFE3
 32429                           fsr1h	equ	0xFE2
 32430                           fsr1l	equ	0xFE1
 32431                           indf2	equ	0xFDF
 32432                           postinc2	equ	0xFDE
 32433                           postdec2	equ	0xFDD
 32434                           plusw2	equ	0xFDB
 32435                           fsr2h	equ	0xFDA
 32436                           fsr2l	equ	0xFD9
 32437                           status	equ	0xFD8
 32438                           
 32439 ;; *************** function __i2c_start *****************
 32440 ;; Defined at:
 32441 ;;		line 54 in file "i2c.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;		None
 32444 ;; Auto vars:     Size  Location     Type
 32445 ;;		None
 32446 ;; Return value:  Size  Location     Type
 32447 ;;                  1    wreg      void 
 32448 ;; Registers used:
 32449 ;;		None
 32450 ;; Tracked objects:
 32451 ;;		On entry : 0/0
 32452 ;;		On exit  : 0/0
 32453 ;;		Unchanged: 0/0
 32454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32459 ;;Total ram usage:        0 bytes
 32460 ;; Hardware stack levels used:    1
 32461 ;; This function calls:
 32462 ;;		Nothing
 32463 ;; This function is called by:
 32464 ;;		__i2c_write
 32465 ;;		__i2c_read
 32466 ;;		_i2c_display_write_fixed
 32467 ;;		_i2c_display_write
 32468 ;; This function uses a non-reentrant model
 32469 ;;
 32470                           
 32471                           	psect	text161
 32472  008F96                     __ptext161:
 32473                           	opt stack 0
 32474  008F96                     __i2c_start:
 32475                           	opt stack 27
 32476                           
 32477                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32478                           
 32479                           ;incstack = 0
 32480  008F96  80C5               	bsf	4037,0,c	;volatile
 32481  008F98  A0C5               	btfss	4037,0,c	;volatile
 32482  008F9A  0012               	return	
 32483  008F9C  D7FD               	goto	l1154
 32484  008F9E                     __end_of__i2c_start:
 32485                           	opt stack 0
 32486                           tosu	equ	0xFFF
 32487                           tosh	equ	0xFFE
 32488                           tosl	equ	0xFFD
 32489                           pclath	equ	0xFFA
 32490                           tblptru	equ	0xFF8
 32491                           tblptrh	equ	0xFF7
 32492                           tblptrl	equ	0xFF6
 32493                           tablat	equ	0xFF5
 32494                           prodh	equ	0xFF4
 32495                           prodl	equ	0xFF3
 32496                           intcon	equ	0xFF2
 32497                           intcon2	equ	0xFF1
 32498                           intcon3	equ	0xFF0
 32499                           indf0	equ	0xFEF
 32500                           postinc0	equ	0xFEE
 32501                           fsr0h	equ	0xFEA
 32502                           fsr0l	equ	0xFE9
 32503                           wreg	equ	0xFE8
 32504                           indf1	equ	0xFE7
 32505                           postdec1	equ	0xFE5
 32506                           plusw1	equ	0xFE3
 32507                           fsr1h	equ	0xFE2
 32508                           fsr1l	equ	0xFE1
 32509                           indf2	equ	0xFDF
 32510                           postinc2	equ	0xFDE
 32511                           postdec2	equ	0xFDD
 32512                           plusw2	equ	0xFDB
 32513                           fsr2h	equ	0xFDA
 32514                           fsr2l	equ	0xFD9
 32515                           status	equ	0xFD8
 32516                           
 32517 ;; *************** function __i2c_send *****************
 32518 ;; Defined at:
 32519 ;;		line 61 in file "i2c.c"
 32520 ;; Parameters:    Size  Location     Type
 32521 ;;  dat             1    wreg     unsigned char 
 32522 ;; Auto vars:     Size  Location     Type
 32523 ;;  dat             1    0[COMRAM] unsigned char 
 32524 ;; Return value:  Size  Location     Type
 32525 ;;                  1    wreg      void 
 32526 ;; Registers used:
 32527 ;;		wreg
 32528 ;; Tracked objects:
 32529 ;;		On entry : 0/0
 32530 ;;		On exit  : 0/0
 32531 ;;		Unchanged: 0/0
 32532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32536 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32537 ;;Total ram usage:        1 bytes
 32538 ;; Hardware stack levels used:    1
 32539 ;; This function calls:
 32540 ;;		Nothing
 32541 ;; This function is called by:
 32542 ;;		__i2c_write
 32543 ;;		__i2c_read
 32544 ;;		_i2c_display_write_fixed
 32545 ;;		_i2c_display_write
 32546 ;; This function uses a non-reentrant model
 32547 ;;
 32548                           
 32549                           	psect	text162
 32550  008F9E                     __ptext162:
 32551                           	opt stack 0
 32552  008F9E                     __i2c_send:
 32553                           	opt stack 27
 32554                           
 32555                           ;incstack = 0
 32556                           ;__i2c_send@dat stored from wreg
 32557  008F9E  6E01               	movwf	__i2c_send@dat,c
 32558                           
 32559                           ;i2c.c: 63: SSP1BUF = dat;
 32560  008FA0  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32561  008FA4  0012               	return		;funcret
 32562  008FA6                     __end_of__i2c_send:
 32563                           	opt stack 0
 32564                           tosu	equ	0xFFF
 32565                           tosh	equ	0xFFE
 32566                           tosl	equ	0xFFD
 32567                           pclath	equ	0xFFA
 32568                           tblptru	equ	0xFF8
 32569                           tblptrh	equ	0xFF7
 32570                           tblptrl	equ	0xFF6
 32571                           tablat	equ	0xFF5
 32572                           prodh	equ	0xFF4
 32573                           prodl	equ	0xFF3
 32574                           intcon	equ	0xFF2
 32575                           intcon2	equ	0xFF1
 32576                           intcon3	equ	0xFF0
 32577                           indf0	equ	0xFEF
 32578                           postinc0	equ	0xFEE
 32579                           fsr0h	equ	0xFEA
 32580                           fsr0l	equ	0xFE9
 32581                           wreg	equ	0xFE8
 32582                           indf1	equ	0xFE7
 32583                           postdec1	equ	0xFE5
 32584                           plusw1	equ	0xFE3
 32585                           fsr1h	equ	0xFE2
 32586                           fsr1l	equ	0xFE1
 32587                           indf2	equ	0xFDF
 32588                           postinc2	equ	0xFDE
 32589                           postdec2	equ	0xFDD
 32590                           plusw2	equ	0xFDB
 32591                           fsr2h	equ	0xFDA
 32592                           fsr2l	equ	0xFD9
 32593                           status	equ	0xFD8
 32594                           
 32595 ;; *************** function __parse_command_long *****************
 32596 ;; Defined at:
 32597 ;;		line 520 in file "api.c"
 32598 ;; Parameters:    Size  Location     Type
 32599 ;;  data            2   56[BANK0 ] PTR unsigned char 
 32600 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32601 ;; Auto vars:     Size  Location     Type
 32602 ;;  length          1   58[BANK0 ] unsigned char 
 32603 ;; Return value:  Size  Location     Type
 32604 ;;                  1    wreg      unsigned char 
 32605 ;; Registers used:
 32606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32607 ;; Tracked objects:
 32608 ;;		On entry : 0/0
 32609 ;;		On exit  : 0/0
 32610 ;;		Unchanged: 0/0
 32611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32612 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32615 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32616 ;;Total ram usage:        3 bytes
 32617 ;; Hardware stack levels used:    1
 32618 ;; Hardware stack levels required when called:   10
 32619 ;; This function calls:
 32620 ;;		__parse_buffer_to_sector
 32621 ;;		__parse_file_append
 32622 ;;		__parse_file_create
 32623 ;;		__parse_file_delete
 32624 ;;		__parse_file_modify
 32625 ;;		__parse_file_rename
 32626 ;;		__parse_file_resize
 32627 ;;		__parse_format_drive
 32628 ;;		__parse_sector_to_buffer
 32629 ;;		__parse_write_buffer
 32630 ;; This function is called by:
 32631 ;;		_api_parse
 32632 ;; This function uses a non-reentrant model
 32633 ;;
 32634                           
 32635                           	psect	text163
 32636  00561E                     __ptext163:
 32637                           	opt stack 0
 32638  00561E                     __parse_command_long:
 32639                           	opt stack 19
 32640                           
 32641                           ;api.c: 522: uint8_t length = 65;
 32642                           
 32643                           ;incstack = 0
 32644  00561E  0E41               	movlw	65
 32645  005620  0100               	movlb	0	; () banked
 32646  005622  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32647                           
 32648                           ;api.c: 524: switch(data[0])
 32649  005624  D048               	goto	l2786
 32650  005626                     
 32651                           ; BSR set to: 0
 32652                           ;api.c: 527: length = _parse_file_resize(data);
 32653                           
 32654                           ; BSR set to: 0
 32655  005626  C098  F055         	movff	__parse_command_long@data,__parse_file_resize@data
 32656  00562A  C099  F056         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 32657  00562E  EC80  F02B         	call	__parse_file_resize	;wreg free
 32658  005632  D03E               	goto	L43
 32659  005634                     
 32660                           ; BSR set to: 0
 32661                           ;api.c: 531: length = _parse_file_delete(data);
 32662                           
 32663                           ; BSR set to: 0
 32664  005634  C098  F050         	movff	__parse_command_long@data,__parse_file_delete@data
 32665  005638  C099  F051         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32666  00563C  ECE8  F040         	call	__parse_file_delete	;wreg free
 32667  005640  D037               	goto	L43
 32668  005642                     
 32669                           ; BSR set to: 0
 32670                           ;api.c: 535: length = _parse_file_create(data);
 32671                           
 32672                           ; BSR set to: 0
 32673  005642  C098  F059         	movff	__parse_command_long@data,__parse_file_create@data
 32674  005646  C099  F05A         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32675  00564A  EC64  F028         	call	__parse_file_create	;wreg free
 32676  00564E  D030               	goto	L43
 32677  005650                     
 32678                           ; BSR set to: 0
 32679                           ;api.c: 539: length = _parse_file_rename(data);
 32680                           
 32681                           ; BSR set to: 0
 32682  005650  C098  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 32683  005654  C099  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32684  005658  ECD4  F03B         	call	__parse_file_rename	;wreg free
 32685  00565C  D029               	goto	L43
 32686  00565E                     
 32687                           ; BSR set to: 0
 32688                           ;api.c: 543: length = _parse_file_append(data);
 32689                           
 32690                           ; BSR set to: 0
 32691  00565E  C098  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 32692  005662  C099  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32693  005666  ECBD  F039         	call	__parse_file_append	;wreg free
 32694  00566A  D022               	goto	L43
 32695  00566C                     
 32696                           ; BSR set to: 0
 32697                           ;api.c: 547: length = _parse_file_modify(data);
 32698                           
 32699                           ; BSR set to: 0
 32700  00566C  C098  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 32701  005670  C099  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32702  005674  ECDB  F022         	call	__parse_file_modify	;wreg free
 32703  005678  D01B               	goto	L43
 32704  00567A                     
 32705                           ; BSR set to: 0
 32706                           ;api.c: 551: length = _parse_format_drive(data);
 32707                           
 32708                           ; BSR set to: 0
 32709  00567A  C098  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32710  00567E  C099  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32711  005682  EC12  F042         	call	__parse_format_drive	;wreg free
 32712  005686  D014               	goto	L43
 32713  005688                     
 32714                           ; BSR set to: 0
 32715                           ;api.c: 555: length = _parse_sector_to_buffer(data);
 32716                           
 32717                           ; BSR set to: 0
 32718  005688  C098  F054         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 32719  00568C  C099  F055         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 32720  005690  ECB1  F038         	call	__parse_sector_to_buffer	;wreg free
 32721  005694  D00D               	goto	L43
 32722  005696                     
 32723                           ; BSR set to: 0
 32724                           ;api.c: 559: length = _parse_buffer_to_sector(data);
 32725                           
 32726                           ; BSR set to: 0
 32727  005696  C098  F054         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 32728  00569A  C099  F055         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 32729  00569E  ECF5  F038         	call	__parse_buffer_to_sector	;wreg free
 32730  0056A2  D006               	goto	L43
 32731  0056A4                     
 32732                           ; BSR set to: 0
 32733                           ;api.c: 563: length = _parse_write_buffer(data);
 32734                           
 32735                           ; BSR set to: 0
 32736  0056A4  C098  F02B         	movff	__parse_command_long@data,__parse_write_buffer@data
 32737  0056A8  C099  F02C         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 32738  0056AC  EC93  F033         	call	__parse_write_buffer	;wreg free
 32739  0056B0                     L43:
 32740  0056B0  0100               	movlb	0	; () banked
 32741  0056B2  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32742                           
 32743                           ; BSR set to: 0
 32744                           ;api.c: 565: }
 32745                           
 32746                           ;api.c: 564: break;
 32747  0056B4  D023               	goto	l2788
 32748  0056B6                     l2786:
 32749                           
 32750                           ; BSR set to: 0
 32751                           
 32752                           ; BSR set to: 0
 32753  0056B6  C098  FFD9         	movff	__parse_command_long@data,fsr2l
 32754  0056BA  C099  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32755  0056BE  50DF               	movf	indf2,w,c
 32756                           
 32757                           ; Switch size 1, requested type "space"
 32758                           ; Number of cases is 10, Range of values is 80 to 89
 32759                           ; switch strategies available:
 32760                           ; Name         Instructions Cycles
 32761                           ; simple_byte           31    16 (average)
 32762                           ;	Chosen strategy is simple_byte
 32763  0056C0  0A50               	xorlw	80	; case 80
 32764  0056C2  B4D8               	btfsc	status,2,c
 32765  0056C4  D7B0               	goto	l2787
 32766  0056C6  0A01               	xorlw	1	; case 81
 32767  0056C8  B4D8               	btfsc	status,2,c
 32768  0056CA  D7B4               	goto	l2789
 32769  0056CC  0A03               	xorlw	3	; case 82
 32770  0056CE  B4D8               	btfsc	status,2,c
 32771  0056D0  D7B8               	goto	l2790
 32772  0056D2  0A01               	xorlw	1	; case 83
 32773  0056D4  B4D8               	btfsc	status,2,c
 32774  0056D6  D7BC               	goto	l2791
 32775  0056D8  0A07               	xorlw	7	; case 84
 32776  0056DA  B4D8               	btfsc	status,2,c
 32777  0056DC  D7C0               	goto	l2792
 32778  0056DE  0A01               	xorlw	1	; case 85
 32779  0056E0  B4D8               	btfsc	status,2,c
 32780  0056E2  D7C4               	goto	l2793
 32781  0056E4  0A03               	xorlw	3	; case 86
 32782  0056E6  B4D8               	btfsc	status,2,c
 32783  0056E8  D7C8               	goto	l2794
 32784  0056EA  0A01               	xorlw	1	; case 87
 32785  0056EC  B4D8               	btfsc	status,2,c
 32786  0056EE  D7CC               	goto	l2795
 32787  0056F0  0A0F               	xorlw	15	; case 88
 32788  0056F2  B4D8               	btfsc	status,2,c
 32789  0056F4  D7D0               	goto	l2796
 32790  0056F6  0A01               	xorlw	1	; case 89
 32791  0056F8  B4D8               	btfsc	status,2,c
 32792  0056FA  D7D4               	goto	l2797
 32793  0056FC                     l2788:
 32794                           
 32795                           ; BSR set to: 0
 32796                           ;api.c: 567: return length;
 32797                           
 32798                           ; BSR set to: 0
 32799  0056FC  519A               	movf	__parse_command_long@length& (0+255),w,b
 32800  0056FE  0012               	return	
 32801  005700                     __end_of__parse_command_long:
 32802                           	opt stack 0
 32803                           tosu	equ	0xFFF
 32804                           tosh	equ	0xFFE
 32805                           tosl	equ	0xFFD
 32806                           pclath	equ	0xFFA
 32807                           tblptru	equ	0xFF8
 32808                           tblptrh	equ	0xFF7
 32809                           tblptrl	equ	0xFF6
 32810                           tablat	equ	0xFF5
 32811                           prodh	equ	0xFF4
 32812                           prodl	equ	0xFF3
 32813                           intcon	equ	0xFF2
 32814                           intcon2	equ	0xFF1
 32815                           intcon3	equ	0xFF0
 32816                           indf0	equ	0xFEF
 32817                           postinc0	equ	0xFEE
 32818                           fsr0h	equ	0xFEA
 32819                           fsr0l	equ	0xFE9
 32820                           wreg	equ	0xFE8
 32821                           indf1	equ	0xFE7
 32822                           postdec1	equ	0xFE5
 32823                           plusw1	equ	0xFE3
 32824                           fsr1h	equ	0xFE2
 32825                           fsr1l	equ	0xFE1
 32826                           indf2	equ	0xFDF
 32827                           postinc2	equ	0xFDE
 32828                           postdec2	equ	0xFDD
 32829                           plusw2	equ	0xFDB
 32830                           fsr2h	equ	0xFDA
 32831                           fsr2l	equ	0xFD9
 32832                           status	equ	0xFD8
 32833                           
 32834 ;; *************** function __parse_write_buffer *****************
 32835 ;; Defined at:
 32836 ;;		line 739 in file "api.c"
 32837 ;; Parameters:    Size  Location     Type
 32838 ;;  data            2   42[COMRAM] PTR unsigned char 
 32839 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32840 ;; Auto vars:     Size  Location     Type
 32841 ;;  number_of_by    2   47[COMRAM] unsigned int 
 32842 ;;  start_byte      2   45[COMRAM] unsigned int 
 32843 ;; Return value:  Size  Location     Type
 32844 ;;                  1    wreg      unsigned char 
 32845 ;; Registers used:
 32846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32847 ;; Tracked objects:
 32848 ;;		On entry : 0/0
 32849 ;;		On exit  : 0/0
 32850 ;;		Unchanged: 0/0
 32851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32853 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32855 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32856 ;;Total ram usage:        7 bytes
 32857 ;; Hardware stack levels used:    1
 32858 ;; Hardware stack levels required when called:    6
 32859 ;; This function calls:
 32860 ;;		_fat_write_to_buffer
 32861 ;; This function is called by:
 32862 ;;		__parse_command_long
 32863 ;; This function uses a non-reentrant model
 32864 ;;
 32865                           
 32866                           	psect	text164
 32867  006726                     __ptext164:
 32868                           	opt stack 0
 32869  006726                     __parse_write_buffer:
 32870                           	opt stack 22
 32871                           
 32872                           ;api.c: 741: uint16_t start_byte;;api.c: 742: uint16_t number_of_bytes;;api.c: 745: if((
      +                          data[0]!=COMMAND_WRITE_BUFFER) || (data[4]!=0xE2) || (data[5]!=0x30))
 32873                           
 32874                           ; BSR set to: 0
 32875                           ;incstack = 0
 32876  006726  C02B  FFD9         	movff	__parse_write_buffer@data,fsr2l
 32877  00672A  C02C  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 32878  00672E  0E59               	movlw	89
 32879  006730  18DE               	xorwf	postinc2,w,c
 32880  006732  A4D8               	btfss	status,2,c
 32881  006734  D014               	goto	u11050
 32882  006736  EE20 F004          	lfsr	2,4
 32883  00673A  502B               	movf	__parse_write_buffer@data,w,c
 32884  00673C  26D9               	addwf	fsr2l,f,c
 32885  00673E  502C               	movf	__parse_write_buffer@data+1,w,c
 32886  006740  22DA               	addwfc	fsr2h,f,c
 32887  006742  0EE2               	movlw	226
 32888  006744  18DE               	xorwf	postinc2,w,c
 32889  006746  A4D8               	btfss	status,2,c
 32890  006748  D00A               	goto	u11050
 32891  00674A  EE20 F005          	lfsr	2,5
 32892  00674E  502B               	movf	__parse_write_buffer@data,w,c
 32893  006750  26D9               	addwf	fsr2l,f,c
 32894  006752  502C               	movf	__parse_write_buffer@data+1,w,c
 32895  006754  22DA               	addwfc	fsr2h,f,c
 32896  006756  0E30               	movlw	48
 32897  006758  18DE               	xorwf	postinc2,w,c
 32898  00675A  B4D8               	btfsc	status,2,c
 32899  00675C  D002               	goto	l2855
 32900  00675E                     u11050:
 32901                           
 32902                           ;api.c: 746: {;api.c: 748: return 65;
 32903  00675E  0E41               	movlw	65
 32904  006760  0012               	return	
 32905  006762                     l2855:
 32906                           
 32907                           ;api.c: 749: };api.c: 752: start_byte |= data[1];
 32908  006762  EE20 F001          	lfsr	2,1
 32909  006766  502B               	movf	__parse_write_buffer@data,w,c
 32910  006768  26D9               	addwf	fsr2l,f,c
 32911  00676A  502C               	movf	__parse_write_buffer@data+1,w,c
 32912  00676C  22DA               	addwfc	fsr2h,f,c
 32913  00676E  50DF               	movf	indf2,w,c
 32914  006770  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 32915  006772  502D               	movf	??__parse_write_buffer,w,c
 32916  006774  122E               	iorwf	__parse_write_buffer@start_byte,f,c
 32917                           
 32918                           ;api.c: 753: start_byte <<= 8;
 32919  006776  502E               	movf	__parse_write_buffer@start_byte,w,c
 32920  006778  6E2F               	movwf	__parse_write_buffer@start_byte+1,c
 32921  00677A  6A2E               	clrf	__parse_write_buffer@start_byte,c
 32922                           
 32923                           ;api.c: 754: start_byte |= data[2];
 32924  00677C  EE20 F002          	lfsr	2,2
 32925  006780  502B               	movf	__parse_write_buffer@data,w,c
 32926  006782  26D9               	addwf	fsr2l,f,c
 32927  006784  502C               	movf	__parse_write_buffer@data+1,w,c
 32928  006786  22DA               	addwfc	fsr2h,f,c
 32929  006788  50DF               	movf	indf2,w,c
 32930  00678A  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 32931  00678C  502D               	movf	??__parse_write_buffer,w,c
 32932  00678E  122E               	iorwf	__parse_write_buffer@start_byte,f,c
 32933                           
 32934                           ;api.c: 757: number_of_bytes = data[3];
 32935  006790  EE20 F003          	lfsr	2,3
 32936  006794  502B               	movf	__parse_write_buffer@data,w,c
 32937  006796  26D9               	addwf	fsr2l,f,c
 32938  006798  502C               	movf	__parse_write_buffer@data+1,w,c
 32939  00679A  22DA               	addwfc	fsr2h,f,c
 32940  00679C  50DF               	movf	indf2,w,c
 32941  00679E  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 32942  0067A0  502D               	movf	??__parse_write_buffer,w,c
 32943  0067A2  6E30               	movwf	__parse_write_buffer@number_of_bytes,c
 32944  0067A4  6A31               	clrf	__parse_write_buffer@number_of_bytes+1,c
 32945                           
 32946                           ;api.c: 760: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 32947  0067A6  C02E  F025         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 32948  0067AA  C02F  F026         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 32949  0067AE  C030  F027         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 32950  0067B2  C031  F028         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 32951  0067B6  0E06               	movlw	6
 32952  0067B8  242B               	addwf	__parse_write_buffer@data,w,c
 32953  0067BA  6E29               	movwf	fat_write_to_buffer@data,c
 32954  0067BC  0E00               	movlw	0
 32955  0067BE  202C               	addwfc	__parse_write_buffer@data+1,w,c
 32956  0067C0  6E2A               	movwf	fat_write_to_buffer@data+1,c
 32957  0067C2  EC72  F046         	call	_fat_write_to_buffer	;wreg free
 32958                           
 32959                           ;api.c: 763: return 6 + number_of_bytes;
 32960  0067C6  5030               	movf	__parse_write_buffer@number_of_bytes,w,c
 32961  0067C8  0F06               	addlw	6
 32962  0067CA  0012               	return	
 32963  0067CC                     __end_of__parse_write_buffer:
 32964                           	opt stack 0
 32965                           tosu	equ	0xFFF
 32966                           tosh	equ	0xFFE
 32967                           tosl	equ	0xFFD
 32968                           pclath	equ	0xFFA
 32969                           tblptru	equ	0xFF8
 32970                           tblptrh	equ	0xFF7
 32971                           tblptrl	equ	0xFF6
 32972                           tablat	equ	0xFF5
 32973                           prodh	equ	0xFF4
 32974                           prodl	equ	0xFF3
 32975                           intcon	equ	0xFF2
 32976                           intcon2	equ	0xFF1
 32977                           intcon3	equ	0xFF0
 32978                           indf0	equ	0xFEF
 32979                           postinc0	equ	0xFEE
 32980                           fsr0h	equ	0xFEA
 32981                           fsr0l	equ	0xFE9
 32982                           wreg	equ	0xFE8
 32983                           indf1	equ	0xFE7
 32984                           postdec1	equ	0xFE5
 32985                           plusw1	equ	0xFE3
 32986                           fsr1h	equ	0xFE2
 32987                           fsr1l	equ	0xFE1
 32988                           indf2	equ	0xFDF
 32989                           postinc2	equ	0xFDE
 32990                           postdec2	equ	0xFDD
 32991                           plusw2	equ	0xFDB
 32992                           fsr2h	equ	0xFDA
 32993                           fsr2l	equ	0xFD9
 32994                           status	equ	0xFD8
 32995                           
 32996 ;; *************** function _fat_write_to_buffer *****************
 32997 ;; Defined at:
 32998 ;;		line 1439 in file "fat16.c"
 32999 ;; Parameters:    Size  Location     Type
 33000 ;;  start           2   36[COMRAM] unsigned int 
 33001 ;;  length          2   38[COMRAM] unsigned int 
 33002 ;;  data            2   40[COMRAM] PTR unsigned char 
 33003 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33004 ;; Auto vars:     Size  Location     Type
 33005 ;;		None
 33006 ;; Return value:  Size  Location     Type
 33007 ;;                  1    wreg      void 
 33008 ;; Registers used:
 33009 ;;		wreg, status,2, status,0, cstack
 33010 ;; Tracked objects:
 33011 ;;		On entry : 0/0
 33012 ;;		On exit  : 0/0
 33013 ;;		Unchanged: 0/0
 33014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33015 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33018 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33019 ;;Total ram usage:        6 bytes
 33020 ;; Hardware stack levels used:    1
 33021 ;; Hardware stack levels required when called:    5
 33022 ;; This function calls:
 33023 ;;		_flash_write_to_buffer
 33024 ;; This function is called by:
 33025 ;;		__parse_write_buffer
 33026 ;; This function uses a non-reentrant model
 33027 ;;
 33028                           
 33029                           	psect	text165
 33030  008CE4                     __ptext165:
 33031                           	opt stack 0
 33032  008CE4                     _fat_write_to_buffer:
 33033                           	opt stack 22
 33034                           
 33035                           ;fat16.c: 1441: flash_write_to_buffer(start, length, data);
 33036                           
 33037                           ;incstack = 0
 33038  008CE4  C025  F01F         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 33039  008CE8  C026  F020         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 33040  008CEC  C027  F021         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 33041  008CF0  C028  F022         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 33042  008CF4  C029  F023         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 33043  008CF8  C02A  F024         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 33044  008CFC  ECB9  F044         	call	_flash_write_to_buffer	;wreg free
 33045  008D00  0012               	return		;funcret
 33046  008D02                     __end_of_fat_write_to_buffer:
 33047                           	opt stack 0
 33048                           tosu	equ	0xFFF
 33049                           tosh	equ	0xFFE
 33050                           tosl	equ	0xFFD
 33051                           pclath	equ	0xFFA
 33052                           tblptru	equ	0xFF8
 33053                           tblptrh	equ	0xFF7
 33054                           tblptrl	equ	0xFF6
 33055                           tablat	equ	0xFF5
 33056                           prodh	equ	0xFF4
 33057                           prodl	equ	0xFF3
 33058                           intcon	equ	0xFF2
 33059                           intcon2	equ	0xFF1
 33060                           intcon3	equ	0xFF0
 33061                           indf0	equ	0xFEF
 33062                           postinc0	equ	0xFEE
 33063                           fsr0h	equ	0xFEA
 33064                           fsr0l	equ	0xFE9
 33065                           wreg	equ	0xFE8
 33066                           indf1	equ	0xFE7
 33067                           postdec1	equ	0xFE5
 33068                           plusw1	equ	0xFE3
 33069                           fsr1h	equ	0xFE2
 33070                           fsr1l	equ	0xFE1
 33071                           indf2	equ	0xFDF
 33072                           postinc2	equ	0xFDE
 33073                           postdec2	equ	0xFDD
 33074                           plusw2	equ	0xFDB
 33075                           fsr2h	equ	0xFDA
 33076                           fsr2l	equ	0xFD9
 33077                           status	equ	0xFD8
 33078                           
 33079 ;; *************** function _flash_write_to_buffer *****************
 33080 ;; Defined at:
 33081 ;;		line 527 in file "flash.c"
 33082 ;; Parameters:    Size  Location     Type
 33083 ;;  start           2   30[COMRAM] unsigned int 
 33084 ;;  length          2   32[COMRAM] unsigned int 
 33085 ;;  data            2   34[COMRAM] PTR unsigned char 
 33086 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33087 ;; Auto vars:     Size  Location     Type
 33088 ;;		None
 33089 ;; Return value:  Size  Location     Type
 33090 ;;                  1    wreg      void 
 33091 ;; Registers used:
 33092 ;;		wreg, status,2, status,0, cstack
 33093 ;; Tracked objects:
 33094 ;;		On entry : 0/0
 33095 ;;		On exit  : 0/0
 33096 ;;		Unchanged: 0/0
 33097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33098 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33102 ;;Total ram usage:        6 bytes
 33103 ;; Hardware stack levels used:    1
 33104 ;; Hardware stack levels required when called:    4
 33105 ;; This function calls:
 33106 ;;		__flash_write_to_buffer
 33107 ;;		_spi_set_configuration
 33108 ;; This function is called by:
 33109 ;;		_fat_write_to_buffer
 33110 ;; This function uses a non-reentrant model
 33111 ;;
 33112                           
 33113                           	psect	text166
 33114  008972                     __ptext166:
 33115                           	opt stack 0
 33116  008972                     _flash_write_to_buffer:
 33117                           	opt stack 22
 33118                           
 33119                           ;flash.c: 530: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 33120                           
 33121                           ;incstack = 0
 33122  008972  0E00               	movlw	0
 33123  008974  EC62  F023         	call	_spi_set_configuration
 33124                           
 33125                           ;flash.c: 532: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 33126  008978  C01F  F014         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 33127  00897C  C020  F015         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 33128  008980  C023  F016         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 33129  008984  C024  F017         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 33130  008988  C021  F018         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 33131  00898C  C022  F019         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 33132  008990  0E01               	movlw	1
 33133  008992  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 33134  008994  EC39  F041         	call	__flash_write_to_buffer	;wreg free
 33135                           
 33136                           ;flash.c: 535: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 33137  008998  0E01               	movlw	1
 33138  00899A  EC62  F023         	call	_spi_set_configuration
 33139  00899E  0012               	return		;funcret
 33140  0089A0                     __end_of_flash_write_to_buffer:
 33141                           	opt stack 0
 33142                           tosu	equ	0xFFF
 33143                           tosh	equ	0xFFE
 33144                           tosl	equ	0xFFD
 33145                           pclath	equ	0xFFA
 33146                           tblptru	equ	0xFF8
 33147                           tblptrh	equ	0xFF7
 33148                           tblptrl	equ	0xFF6
 33149                           tablat	equ	0xFF5
 33150                           prodh	equ	0xFF4
 33151                           prodl	equ	0xFF3
 33152                           intcon	equ	0xFF2
 33153                           intcon2	equ	0xFF1
 33154                           intcon3	equ	0xFF0
 33155                           indf0	equ	0xFEF
 33156                           postinc0	equ	0xFEE
 33157                           fsr0h	equ	0xFEA
 33158                           fsr0l	equ	0xFE9
 33159                           wreg	equ	0xFE8
 33160                           indf1	equ	0xFE7
 33161                           postdec1	equ	0xFE5
 33162                           plusw1	equ	0xFE3
 33163                           fsr1h	equ	0xFE2
 33164                           fsr1l	equ	0xFE1
 33165                           indf2	equ	0xFDF
 33166                           postinc2	equ	0xFDE
 33167                           postdec2	equ	0xFDD
 33168                           plusw2	equ	0xFDB
 33169                           fsr2h	equ	0xFDA
 33170                           fsr2l	equ	0xFD9
 33171                           status	equ	0xFD8
 33172                           
 33173 ;; *************** function __parse_sector_to_buffer *****************
 33174 ;; Defined at:
 33175 ;;		line 697 in file "api.c"
 33176 ;; Parameters:    Size  Location     Type
 33177 ;;  data            2   83[COMRAM] PTR unsigned char 
 33178 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33179 ;; Auto vars:     Size  Location     Type
 33180 ;;  sector          2   86[COMRAM] unsigned int 
 33181 ;; Return value:  Size  Location     Type
 33182 ;;                  1    wreg      unsigned char 
 33183 ;; Registers used:
 33184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33185 ;; Tracked objects:
 33186 ;;		On entry : 0/0
 33187 ;;		On exit  : 0/0
 33188 ;;		Unchanged: 0/0
 33189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33193 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33194 ;;Total ram usage:        5 bytes
 33195 ;; Hardware stack levels used:    1
 33196 ;; Hardware stack levels required when called:    8
 33197 ;; This function calls:
 33198 ;;		_fat_copy_sector_to_buffer
 33199 ;; This function is called by:
 33200 ;;		__parse_command_long
 33201 ;; This function uses a non-reentrant model
 33202 ;;
 33203                           
 33204                           	psect	text167
 33205  007162                     __ptext167:
 33206                           	opt stack 0
 33207  007162                     __parse_sector_to_buffer:
 33208                           	opt stack 20
 33209                           
 33210                           ;api.c: 700: uint16_t sector;;api.c: 702: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (dat
      +                          a[4]!=0x1B) || (data[5]!=0x35))
 33211                           
 33212                           ;incstack = 0
 33213  007162  C054  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 33214  007166  C055  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 33215  00716A  0E57               	movlw	87
 33216  00716C  18DE               	xorwf	postinc2,w,c
 33217  00716E  A4D8               	btfss	status,2,c
 33218  007170  D014               	goto	u10990
 33219  007172  EE20 F004          	lfsr	2,4
 33220  007176  5054               	movf	__parse_sector_to_buffer@data,w,c
 33221  007178  26D9               	addwf	fsr2l,f,c
 33222  00717A  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33223  00717C  22DA               	addwfc	fsr2h,f,c
 33224  00717E  0E1B               	movlw	27
 33225  007180  18DE               	xorwf	postinc2,w,c
 33226  007182  A4D8               	btfss	status,2,c
 33227  007184  D00A               	goto	u10990
 33228  007186  EE20 F005          	lfsr	2,5
 33229  00718A  5054               	movf	__parse_sector_to_buffer@data,w,c
 33230  00718C  26D9               	addwf	fsr2l,f,c
 33231  00718E  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33232  007190  22DA               	addwfc	fsr2h,f,c
 33233  007192  0E35               	movlw	53
 33234  007194  18DE               	xorwf	postinc2,w,c
 33235  007196  B4D8               	btfsc	status,2,c
 33236  007198  D002               	goto	l2843
 33237  00719A                     u10990:
 33238                           
 33239                           ;api.c: 703: {;api.c: 704: return 6;
 33240  00719A  0E06               	movlw	6
 33241  00719C  0012               	return	
 33242  00719E                     l2843:
 33243                           
 33244                           ;api.c: 705: };api.c: 708: sector |= data[2];
 33245  00719E  EE20 F002          	lfsr	2,2
 33246  0071A2  5054               	movf	__parse_sector_to_buffer@data,w,c
 33247  0071A4  26D9               	addwf	fsr2l,f,c
 33248  0071A6  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33249  0071A8  22DA               	addwfc	fsr2h,f,c
 33250  0071AA  50DF               	movf	indf2,w,c
 33251  0071AC  6E56               	movwf	??__parse_sector_to_buffer& (0+255),c
 33252  0071AE  5056               	movf	??__parse_sector_to_buffer,w,c
 33253  0071B0  1257               	iorwf	__parse_sector_to_buffer@sector,f,c
 33254                           
 33255                           ;api.c: 709: sector <<= 8;
 33256  0071B2  5057               	movf	__parse_sector_to_buffer@sector,w,c
 33257  0071B4  6E58               	movwf	__parse_sector_to_buffer@sector+1,c
 33258  0071B6  6A57               	clrf	__parse_sector_to_buffer@sector,c
 33259                           
 33260                           ;api.c: 710: sector |= data[3];
 33261  0071B8  EE20 F003          	lfsr	2,3
 33262  0071BC  5054               	movf	__parse_sector_to_buffer@data,w,c
 33263  0071BE  26D9               	addwf	fsr2l,f,c
 33264  0071C0  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33265  0071C2  22DA               	addwfc	fsr2h,f,c
 33266  0071C4  50DF               	movf	indf2,w,c
 33267  0071C6  6E56               	movwf	??__parse_sector_to_buffer& (0+255),c
 33268  0071C8  5056               	movf	??__parse_sector_to_buffer,w,c
 33269  0071CA  1257               	iorwf	__parse_sector_to_buffer@sector,f,c
 33270                           
 33271                           ;api.c: 713: fat_copy_sector_to_buffer(data[1], sector);
 33272  0071CC  C057  F043         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 33273  0071D0  C058  F044         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 33274  0071D4  EE20 F001          	lfsr	2,1
 33275  0071D8  5054               	movf	__parse_sector_to_buffer@data,w,c
 33276  0071DA  26D9               	addwf	fsr2l,f,c
 33277  0071DC  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33278  0071DE  22DA               	addwfc	fsr2h,f,c
 33279  0071E0  50DF               	movf	indf2,w,c
 33280  0071E2  ECE5  F031         	call	_fat_copy_sector_to_buffer
 33281                           
 33282                           ;api.c: 715: return 6;
 33283  0071E6  0E06               	movlw	6
 33284  0071E8  0012               	return	
 33285  0071EA                     __end_of__parse_sector_to_buffer:
 33286                           	opt stack 0
 33287                           tosu	equ	0xFFF
 33288                           tosh	equ	0xFFE
 33289                           tosl	equ	0xFFD
 33290                           pclath	equ	0xFFA
 33291                           tblptru	equ	0xFF8
 33292                           tblptrh	equ	0xFF7
 33293                           tblptrl	equ	0xFF6
 33294                           tablat	equ	0xFF5
 33295                           prodh	equ	0xFF4
 33296                           prodl	equ	0xFF3
 33297                           intcon	equ	0xFF2
 33298                           intcon2	equ	0xFF1
 33299                           intcon3	equ	0xFF0
 33300                           indf0	equ	0xFEF
 33301                           postinc0	equ	0xFEE
 33302                           fsr0h	equ	0xFEA
 33303                           fsr0l	equ	0xFE9
 33304                           wreg	equ	0xFE8
 33305                           indf1	equ	0xFE7
 33306                           postdec1	equ	0xFE5
 33307                           plusw1	equ	0xFE3
 33308                           fsr1h	equ	0xFE2
 33309                           fsr1l	equ	0xFE1
 33310                           indf2	equ	0xFDF
 33311                           postinc2	equ	0xFDE
 33312                           postdec2	equ	0xFDD
 33313                           plusw2	equ	0xFDB
 33314                           fsr2h	equ	0xFDA
 33315                           fsr2l	equ	0xFD9
 33316                           status	equ	0xFD8
 33317                           
 33318 ;; *************** function _fat_copy_sector_to_buffer *****************
 33319 ;; Defined at:
 33320 ;;		line 1356 in file "fat16.c"
 33321 ;; Parameters:    Size  Location     Type
 33322 ;;  file_number     1    wreg     unsigned char 
 33323 ;;  sector          2   66[COMRAM] unsigned int 
 33324 ;; Auto vars:     Size  Location     Type
 33325 ;;  file_number     1   82[COMRAM] unsigned char 
 33326 ;;  file_size       4   72[COMRAM] unsigned long 
 33327 ;;  cluster         2   80[COMRAM] unsigned int 
 33328 ;;  physical_sec    2   78[COMRAM] unsigned int 
 33329 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 33330 ;; Return value:  Size  Location     Type
 33331 ;;                  1    wreg      unsigned char 
 33332 ;; Registers used:
 33333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33334 ;; Tracked objects:
 33335 ;;		On entry : 0/0
 33336 ;;		On exit  : 0/0
 33337 ;;		Unchanged: 0/0
 33338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33340 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33342 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33343 ;;Total ram usage:       17 bytes
 33344 ;; Hardware stack levels used:    1
 33345 ;; Hardware stack levels required when called:    7
 33346 ;; This function calls:
 33347 ;;		__data_sector_from_cluster
 33348 ;;		__find_nth_cluster
 33349 ;;		__get_first_cluster
 33350 ;;		__root_is_available
 33351 ;;		_fat_get_file_size
 33352 ;;		_flash_copy_page_to_buffer
 33353 ;; This function is called by:
 33354 ;;		__parse_sector_to_buffer
 33355 ;; This function uses a non-reentrant model
 33356 ;;
 33357                           
 33358                           	psect	text168
 33359  0063CA                     __ptext168:
 33360                           	opt stack 0
 33361  0063CA                     _fat_copy_sector_to_buffer:
 33362                           	opt stack 20
 33363                           
 33364                           ;incstack = 0
 33365                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 33366  0063CA  6E53               	movwf	fat_copy_sector_to_buffer@file_number,c
 33367                           
 33368                           ;fat16.c: 1358: uint32_t file_size;;fat16.c: 1359: uint16_t number_of_clusters;;fat16.c:
      +                           1360: uint16_t cluster;;fat16.c: 1361: uint16_t physical_sector;;fat16.c: 1364: if(_roo
      +                          t_is_available(file_number))
 33369  0063CC  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33370  0063CE  ECA3  F03D         	call	__root_is_available
 33371  0063D2  0900               	iorlw	0
 33372  0063D4  A4D8               	btfss	status,2,c
 33373  0063D6  0012               	return	
 33374                           
 33375                           ;fat16.c: 1368: };fat16.c: 1371: file_size = fat_get_file_size(file_number);
 33376                           
 33377                           ;fat16.c: 1365: {;fat16.c: 1367: return 0xFF;;	Return value of _fat_copy_sector_to_buffe
      +                          r is never used
 33378  0063D8  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33379  0063DA  EC0B  F03C         	call	_fat_get_file_size
 33380  0063DE  C036  F049         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 33381  0063E2  C037  F04A         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 33382  0063E6  C038  F04B         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 33383  0063EA  C039  F04C         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 33384                           
 33385                           ;fat16.c: 1374: number_of_clusters = (uint16_t) ((file_size + 512 - 1) >> 9);
 33386  0063EE  0EFF               	movlw	255
 33387  0063F0  2449               	addwf	fat_copy_sector_to_buffer@file_size,w,c
 33388  0063F2  6E45               	movwf	??_fat_copy_sector_to_buffer& (0+255),c
 33389  0063F4  0E01               	movlw	1
 33390  0063F6  204A               	addwfc	fat_copy_sector_to_buffer@file_size+1,w,c
 33391  0063F8  6E46               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),c
 33392  0063FA  0E00               	movlw	0
 33393  0063FC  204B               	addwfc	fat_copy_sector_to_buffer@file_size+2,w,c
 33394  0063FE  6E47               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),c
 33395  006400  0E00               	movlw	0
 33396  006402  204C               	addwfc	fat_copy_sector_to_buffer@file_size+3,w,c
 33397  006404  6E48               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),c
 33398  006406  0E0A               	movlw	10
 33399  006408  D005               	goto	u10410
 33400  00640A                     u10415:
 33401  00640A  90D8               	bcf	status,0,c
 33402  00640C  3248               	rrcf	??_fat_copy_sector_to_buffer+3,f,c
 33403  00640E  3247               	rrcf	??_fat_copy_sector_to_buffer+2,f,c
 33404  006410  3246               	rrcf	??_fat_copy_sector_to_buffer+1,f,c
 33405  006412  3245               	rrcf	??_fat_copy_sector_to_buffer,f,c
 33406  006414                     u10410:
 33407  006414  2EE8               	decfsz	wreg,f,c
 33408  006416  D7F9               	goto	u10415
 33409  006418  C045  F04D         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 33410  00641C  C046  F04E         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 33411                           
 33412                           ;fat16.c: 1375: if(sector > number_of_clusters)
 33413  006420  5043               	movf	fat_copy_sector_to_buffer@sector,w,c
 33414  006422  5C4D               	subwf	fat_copy_sector_to_buffer@number_of_clusters,w,c
 33415  006424  5044               	movf	fat_copy_sector_to_buffer@sector+1,w,c
 33416  006426  584E               	subwfb	fat_copy_sector_to_buffer@number_of_clusters+1,w,c
 33417  006428  A0D8               	btfss	status,0,c
 33418  00642A  0012               	return	
 33419                           
 33420                           ;fat16.c: 1379: };fat16.c: 1382: cluster = _get_first_cluster(file_number);
 33421                           
 33422                           ;fat16.c: 1376: {;fat16.c: 1378: return 0xFE;;	Return value of _fat_copy_sector_to_buffe
      +                          r is never used
 33423  00642C  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33424  00642E  EC95  F040         	call	__get_first_cluster
 33425  006432  C030  F051         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 33426  006436  C031  F052         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33427                           
 33428                           ;fat16.c: 1383: cluster = _find_nth_cluster(cluster, sector);
 33429  00643A  C051  F038         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 33430  00643E  C052  F039         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 33431  006442  C043  F03A         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 33432  006446  C044  F03B         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 33433  00644A  ECCB  F035         	call	__find_nth_cluster	;wreg free
 33434  00644E  C038  F051         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 33435  006452  C039  F052         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33436                           
 33437                           ;fat16.c: 1386: physical_sector = _data_sector_from_cluster(cluster);
 33438  006456  C051  F001         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 33439  00645A  C052  F002         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 33440  00645E  EC74  F047         	call	__data_sector_from_cluster	;wreg free
 33441  006462  C001  F04F         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@physical_sector
 33442  006466  C002  F050         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@physical_sector+1
 33443                           
 33444                           ;fat16.c: 1389: flash_copy_page_to_buffer(physical_sector);
 33445  00646A  C04F  F01E         	movff	fat_copy_sector_to_buffer@physical_sector,flash_copy_page_to_buffer@page
 33446  00646E  C050  F01F         	movff	fat_copy_sector_to_buffer@physical_sector+1,flash_copy_page_to_buffer@page+1
 33447  006472  EC81  F046         	call	_flash_copy_page_to_buffer	;wreg free
 33448  006476  0012               	return	
 33449  006478                     __end_of_fat_copy_sector_to_buffer:
 33450                           	opt stack 0
 33451                           tosu	equ	0xFFF
 33452                           tosh	equ	0xFFE
 33453                           tosl	equ	0xFFD
 33454                           pclath	equ	0xFFA
 33455                           tblptru	equ	0xFF8
 33456                           tblptrh	equ	0xFF7
 33457                           tblptrl	equ	0xFF6
 33458                           tablat	equ	0xFF5
 33459                           prodh	equ	0xFF4
 33460                           prodl	equ	0xFF3
 33461                           intcon	equ	0xFF2
 33462                           intcon2	equ	0xFF1
 33463                           intcon3	equ	0xFF0
 33464                           indf0	equ	0xFEF
 33465                           postinc0	equ	0xFEE
 33466                           fsr0h	equ	0xFEA
 33467                           fsr0l	equ	0xFE9
 33468                           wreg	equ	0xFE8
 33469                           indf1	equ	0xFE7
 33470                           postdec1	equ	0xFE5
 33471                           plusw1	equ	0xFE3
 33472                           fsr1h	equ	0xFE2
 33473                           fsr1l	equ	0xFE1
 33474                           indf2	equ	0xFDF
 33475                           postinc2	equ	0xFDE
 33476                           postdec2	equ	0xFDD
 33477                           plusw2	equ	0xFDB
 33478                           fsr2h	equ	0xFDA
 33479                           fsr2l	equ	0xFD9
 33480                           status	equ	0xFD8
 33481                           
 33482 ;; *************** function _flash_copy_page_to_buffer *****************
 33483 ;; Defined at:
 33484 ;;		line 500 in file "flash.c"
 33485 ;; Parameters:    Size  Location     Type
 33486 ;;  page            2   29[COMRAM] unsigned int 
 33487 ;; Auto vars:     Size  Location     Type
 33488 ;;		None
 33489 ;; Return value:  Size  Location     Type
 33490 ;;                  1    wreg      void 
 33491 ;; Registers used:
 33492 ;;		wreg, status,2, status,0, cstack
 33493 ;; Tracked objects:
 33494 ;;		On entry : 0/0
 33495 ;;		On exit  : 0/0
 33496 ;;		Unchanged: 0/0
 33497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33502 ;;Total ram usage:        2 bytes
 33503 ;; Hardware stack levels used:    1
 33504 ;; Hardware stack levels required when called:    4
 33505 ;; This function calls:
 33506 ;;		__flash_copy_page_to_buffer
 33507 ;;		_spi_set_configuration
 33508 ;; This function is called by:
 33509 ;;		_fat_copy_sector_to_buffer
 33510 ;; This function uses a non-reentrant model
 33511 ;;
 33512                           
 33513                           	psect	text169
 33514  008D02                     __ptext169:
 33515                           	opt stack 0
 33516  008D02                     _flash_copy_page_to_buffer:
 33517                           	opt stack 22
 33518                           
 33519                           ;flash.c: 503: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 33520                           
 33521                           ;incstack = 0
 33522  008D02  0E00               	movlw	0
 33523  008D04  EC62  F023         	call	_spi_set_configuration
 33524                           
 33525                           ;flash.c: 505: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 33526  008D08  C01E  F014         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 33527  008D0C  C01F  F015         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 33528  008D10  0E01               	movlw	1
 33529  008D12  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 33530  008D14  ECBA  F03E         	call	__flash_copy_page_to_buffer	;wreg free
 33531                           
 33532                           ;flash.c: 508: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 33533  008D18  0E01               	movlw	1
 33534  008D1A  EC62  F023         	call	_spi_set_configuration
 33535  008D1E  0012               	return		;funcret
 33536  008D20                     __end_of_flash_copy_page_to_buffer:
 33537                           	opt stack 0
 33538                           tosu	equ	0xFFF
 33539                           tosh	equ	0xFFE
 33540                           tosl	equ	0xFFD
 33541                           pclath	equ	0xFFA
 33542                           tblptru	equ	0xFF8
 33543                           tblptrh	equ	0xFF7
 33544                           tblptrl	equ	0xFF6
 33545                           tablat	equ	0xFF5
 33546                           prodh	equ	0xFF4
 33547                           prodl	equ	0xFF3
 33548                           intcon	equ	0xFF2
 33549                           intcon2	equ	0xFF1
 33550                           intcon3	equ	0xFF0
 33551                           indf0	equ	0xFEF
 33552                           postinc0	equ	0xFEE
 33553                           fsr0h	equ	0xFEA
 33554                           fsr0l	equ	0xFE9
 33555                           wreg	equ	0xFE8
 33556                           indf1	equ	0xFE7
 33557                           postdec1	equ	0xFE5
 33558                           plusw1	equ	0xFE3
 33559                           fsr1h	equ	0xFE2
 33560                           fsr1l	equ	0xFE1
 33561                           indf2	equ	0xFDF
 33562                           postinc2	equ	0xFDE
 33563                           postdec2	equ	0xFDD
 33564                           plusw2	equ	0xFDB
 33565                           fsr2h	equ	0xFDA
 33566                           fsr2l	equ	0xFD9
 33567                           status	equ	0xFD8
 33568                           
 33569 ;; *************** function __parse_format_drive *****************
 33570 ;; Defined at:
 33571 ;;		line 686 in file "api.c"
 33572 ;; Parameters:    Size  Location     Type
 33573 ;;  data            2   38[COMRAM] PTR unsigned char 
 33574 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33575 ;; Auto vars:     Size  Location     Type
 33576 ;;		None
 33577 ;; Return value:  Size  Location     Type
 33578 ;;                  1    wreg      unsigned char 
 33579 ;; Registers used:
 33580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33581 ;; Tracked objects:
 33582 ;;		On entry : 0/0
 33583 ;;		On exit  : 0/0
 33584 ;;		Unchanged: 0/0
 33585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33589 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33590 ;;Total ram usage:        3 bytes
 33591 ;; Hardware stack levels used:    1
 33592 ;; Hardware stack levels required when called:    6
 33593 ;; This function calls:
 33594 ;;		_fat_format
 33595 ;; This function is called by:
 33596 ;;		__parse_command_long
 33597 ;; This function uses a non-reentrant model
 33598 ;;
 33599                           
 33600                           	psect	text170
 33601  008424                     __ptext170:
 33602                           	opt stack 0
 33603  008424                     __parse_format_drive:
 33604                           	opt stack 22
 33605                           
 33606                           ;api.c: 689: if((data[0]!=COMMAND_FORMAT_DRIVE) || (data[1]!=0xDA) || (data[2]!=0x22))
 33607                           
 33608                           ;incstack = 0
 33609  008424  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 33610  008428  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 33611  00842C  0E56               	movlw	86
 33612  00842E  18DE               	xorwf	postinc2,w,c
 33613  008430  A4D8               	btfss	status,2,c
 33614  008432  D014               	goto	u10960
 33615  008434  EE20 F001          	lfsr	2,1
 33616  008438  5027               	movf	__parse_format_drive@data,w,c
 33617  00843A  26D9               	addwf	fsr2l,f,c
 33618  00843C  5028               	movf	__parse_format_drive@data+1,w,c
 33619  00843E  22DA               	addwfc	fsr2h,f,c
 33620  008440  0EDA               	movlw	218
 33621  008442  18DE               	xorwf	postinc2,w,c
 33622  008444  A4D8               	btfss	status,2,c
 33623  008446  D00A               	goto	u10960
 33624  008448  EE20 F002          	lfsr	2,2
 33625  00844C  5027               	movf	__parse_format_drive@data,w,c
 33626  00844E  26D9               	addwf	fsr2l,f,c
 33627  008450  5028               	movf	__parse_format_drive@data+1,w,c
 33628  008452  22DA               	addwfc	fsr2h,f,c
 33629  008454  0E22               	movlw	34
 33630  008456  18DE               	xorwf	postinc2,w,c
 33631  008458  B4D8               	btfsc	status,2,c
 33632  00845A  D002               	goto	l2837
 33633  00845C                     u10960:
 33634                           
 33635                           ;api.c: 690: {;api.c: 691: return 3;
 33636  00845C  0E03               	movlw	3
 33637  00845E  0012               	return	
 33638  008460                     l2837:
 33639                           
 33640                           ;api.c: 692: };api.c: 693: fat_format();
 33641  008460  EC7D  F014         	call	_fat_format	;wreg free
 33642                           
 33643                           ;api.c: 694: return 3;
 33644  008464  0E03               	movlw	3
 33645  008466  0012               	return	
 33646  008468                     __end_of__parse_format_drive:
 33647                           	opt stack 0
 33648                           tosu	equ	0xFFF
 33649                           tosh	equ	0xFFE
 33650                           tosl	equ	0xFFD
 33651                           pclath	equ	0xFFA
 33652                           tblptru	equ	0xFF8
 33653                           tblptrh	equ	0xFF7
 33654                           tblptrl	equ	0xFF6
 33655                           tablat	equ	0xFF5
 33656                           prodh	equ	0xFF4
 33657                           prodl	equ	0xFF3
 33658                           intcon	equ	0xFF2
 33659                           intcon2	equ	0xFF1
 33660                           intcon3	equ	0xFF0
 33661                           indf0	equ	0xFEF
 33662                           postinc0	equ	0xFEE
 33663                           fsr0h	equ	0xFEA
 33664                           fsr0l	equ	0xFE9
 33665                           wreg	equ	0xFE8
 33666                           indf1	equ	0xFE7
 33667                           postdec1	equ	0xFE5
 33668                           plusw1	equ	0xFE3
 33669                           fsr1h	equ	0xFE2
 33670                           fsr1l	equ	0xFE1
 33671                           indf2	equ	0xFDF
 33672                           postinc2	equ	0xFDE
 33673                           postdec2	equ	0xFDD
 33674                           plusw2	equ	0xFDB
 33675                           fsr2h	equ	0xFDA
 33676                           fsr2l	equ	0xFD9
 33677                           status	equ	0xFD8
 33678                           
 33679 ;; *************** function _fat_format *****************
 33680 ;; Defined at:
 33681 ;;		line 1258 in file "fat16.c"
 33682 ;; Parameters:    Size  Location     Type
 33683 ;;		None
 33684 ;; Auto vars:     Size  Location     Type
 33685 ;;  cntr            2   36[COMRAM] unsigned int 
 33686 ;; Return value:  Size  Location     Type
 33687 ;;                  1    wreg      void 
 33688 ;; Registers used:
 33689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33690 ;; Tracked objects:
 33691 ;;		On entry : 0/0
 33692 ;;		On exit  : 0/0
 33693 ;;		Unchanged: 0/0
 33694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33699 ;;Total ram usage:        2 bytes
 33700 ;; Hardware stack levels used:    1
 33701 ;; Hardware stack levels required when called:    5
 33702 ;; This function calls:
 33703 ;;		__get_data
 33704 ;;		__get_fat
 33705 ;;		__get_fbr
 33706 ;;		__get_mbr
 33707 ;;		__get_root
 33708 ;;		_flash_sector_write
 33709 ;; This function is called by:
 33710 ;;		_fat_init
 33711 ;;		__parse_format_drive
 33712 ;; This function uses a non-reentrant model
 33713 ;;
 33714                           
 33715                           	psect	text171
 33716  0028FA                     __ptext171:
 33717                           	opt stack 0
 33718  0028FA                     _fat_format:
 33719                           	opt stack 23
 33720                           
 33721                           ;fat16.c: 1260: uint16_t cntr;;fat16.c: 1263: for(cntr=0; cntr<512; ++cntr)
 33722                           
 33723                           ;incstack = 0
 33724  0028FA  0E00               	movlw	0
 33725  0028FC  6E26               	movwf	fat_format@cntr+1,c
 33726  0028FE  0E00               	movlw	0
 33727  002900  6E25               	movwf	fat_format@cntr,c
 33728  002902                     l13369:
 33729  002902  0E02               	movlw	2
 33730  002904  5C26               	subwf	fat_format@cntr+1,w,c
 33731  002906  B0D8               	btfsc	status,0,c
 33732  002908  D010               	goto	u10230
 33733                           
 33734                           ;fat16.c: 1264: {;fat16.c: 1265: buffer[cntr] = _get_mbr(cntr);
 33735  00290A  0EC0               	movlw	low _buffer
 33736  00290C  2425               	addwf	fat_format@cntr,w,c
 33737  00290E  6ED9               	movwf	fsr2l,c
 33738  002910  0E03               	movlw	high _buffer
 33739  002912  2026               	addwfc	fat_format@cntr+1,w,c
 33740  002914  6EDA               	movwf	fsr2h,c
 33741  002916  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 33742  00291A  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 33743  00291E  EC79  F02E         	call	__get_mbr	;wreg free
 33744  002922  6EDF               	movwf	indf2,c
 33745  002924  4A25               	infsnz	fat_format@cntr,f,c
 33746  002926  2A26               	incf	fat_format@cntr+1,f,c
 33747  002928  D7EC               	goto	l13369
 33748  00292A                     u10230:
 33749                           
 33750                           ;fat16.c: 1266: };fat16.c: 1267: flash_sector_write(0, buffer);
 33751  00292A  0E00               	movlw	0
 33752  00292C  6E21               	movwf	flash_sector_write@page+1,c
 33753  00292E  0E00               	movlw	0
 33754  002930  6E20               	movwf	flash_sector_write@page,c
 33755  002932  0EC0               	movlw	low _buffer
 33756  002934  6E22               	movwf	flash_sector_write@data,c
 33757  002936  0E03               	movlw	high _buffer
 33758  002938  6E23               	movwf	flash_sector_write@data+1,c
 33759  00293A  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33760                           
 33761                           ;fat16.c: 1270: for(cntr=0; cntr<512; ++cntr)
 33762  00293E  0E00               	movlw	0
 33763  002940  6E26               	movwf	fat_format@cntr+1,c
 33764  002942  0E00               	movlw	0
 33765  002944  6E25               	movwf	fat_format@cntr,c
 33766  002946                     l13383:
 33767  002946  0E02               	movlw	2
 33768  002948  5C26               	subwf	fat_format@cntr+1,w,c
 33769  00294A  B0D8               	btfsc	status,0,c
 33770  00294C  D010               	goto	u10250
 33771                           
 33772                           ;fat16.c: 1271: {;fat16.c: 1272: buffer[cntr] = _get_fbr(cntr);
 33773  00294E  0EC0               	movlw	low _buffer
 33774  002950  2425               	addwf	fat_format@cntr,w,c
 33775  002952  6ED9               	movwf	fsr2l,c
 33776  002954  0E03               	movlw	high _buffer
 33777  002956  2026               	addwfc	fat_format@cntr+1,w,c
 33778  002958  6EDA               	movwf	fsr2h,c
 33779  00295A  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 33780  00295E  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 33781  002962  ECE6  F00E         	call	__get_fbr	;wreg free
 33782  002966  6EDF               	movwf	indf2,c
 33783  002968  4A25               	infsnz	fat_format@cntr,f,c
 33784  00296A  2A26               	incf	fat_format@cntr+1,f,c
 33785  00296C  D7EC               	goto	l13383
 33786  00296E                     u10250:
 33787                           
 33788                           ;fat16.c: 1273: };fat16.c: 1274: flash_sector_write(1, buffer);
 33789  00296E  0E00               	movlw	0
 33790  002970  6E21               	movwf	flash_sector_write@page+1,c
 33791  002972  0E01               	movlw	1
 33792  002974  6E20               	movwf	flash_sector_write@page,c
 33793  002976  0EC0               	movlw	low _buffer
 33794  002978  6E22               	movwf	flash_sector_write@data,c
 33795  00297A  0E03               	movlw	high _buffer
 33796  00297C  6E23               	movwf	flash_sector_write@data+1,c
 33797  00297E  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33798                           
 33799                           ;fat16.c: 1277: for(cntr=0; cntr<512; ++cntr)
 33800  002982  0E00               	movlw	0
 33801  002984  6E26               	movwf	fat_format@cntr+1,c
 33802  002986  0E00               	movlw	0
 33803  002988  6E25               	movwf	fat_format@cntr,c
 33804  00298A                     l13397:
 33805  00298A  0E02               	movlw	2
 33806  00298C  5C26               	subwf	fat_format@cntr+1,w,c
 33807  00298E  B0D8               	btfsc	status,0,c
 33808  002990  D010               	goto	u10270
 33809                           
 33810                           ;fat16.c: 1278: {;fat16.c: 1279: buffer[cntr] = _get_fat(cntr);
 33811  002992  0EC0               	movlw	low _buffer
 33812  002994  2425               	addwf	fat_format@cntr,w,c
 33813  002996  6ED9               	movwf	fsr2l,c
 33814  002998  0E03               	movlw	high _buffer
 33815  00299A  2026               	addwfc	fat_format@cntr+1,w,c
 33816  00299C  6EDA               	movwf	fsr2h,c
 33817  00299E  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 33818  0029A2  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 33819  0029A6  ECBF  F03F         	call	__get_fat	;wreg free
 33820  0029AA  6EDF               	movwf	indf2,c
 33821  0029AC  4A25               	infsnz	fat_format@cntr,f,c
 33822  0029AE  2A26               	incf	fat_format@cntr+1,f,c
 33823  0029B0  D7EC               	goto	l13397
 33824  0029B2                     u10270:
 33825                           
 33826                           ;fat16.c: 1280: };fat16.c: 1281: flash_sector_write(2, buffer);
 33827  0029B2  0E00               	movlw	0
 33828  0029B4  6E21               	movwf	flash_sector_write@page+1,c
 33829  0029B6  0E02               	movlw	2
 33830  0029B8  6E20               	movwf	flash_sector_write@page,c
 33831  0029BA  0EC0               	movlw	low _buffer
 33832  0029BC  6E22               	movwf	flash_sector_write@data,c
 33833  0029BE  0E03               	movlw	high _buffer
 33834  0029C0  6E23               	movwf	flash_sector_write@data+1,c
 33835  0029C2  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33836                           
 33837                           ;fat16.c: 1284: for(cntr=0; cntr<512; ++cntr)
 33838  0029C6  0E00               	movlw	0
 33839  0029C8  6E26               	movwf	fat_format@cntr+1,c
 33840  0029CA  0E00               	movlw	0
 33841  0029CC  6E25               	movwf	fat_format@cntr,c
 33842  0029CE                     l13411:
 33843  0029CE  0E02               	movlw	2
 33844  0029D0  5C26               	subwf	fat_format@cntr+1,w,c
 33845  0029D2  B0D8               	btfsc	status,0,c
 33846  0029D4  D00B               	goto	u10290
 33847                           
 33848                           ;fat16.c: 1285: {;fat16.c: 1286: buffer[cntr] = 0x00;
 33849  0029D6  0EC0               	movlw	low _buffer
 33850  0029D8  2425               	addwf	fat_format@cntr,w,c
 33851  0029DA  6ED9               	movwf	fsr2l,c
 33852  0029DC  0E03               	movlw	high _buffer
 33853  0029DE  2026               	addwfc	fat_format@cntr+1,w,c
 33854  0029E0  6EDA               	movwf	fsr2h,c
 33855  0029E2  0E00               	movlw	0
 33856  0029E4  6EDF               	movwf	indf2,c
 33857  0029E6  4A25               	infsnz	fat_format@cntr,f,c
 33858  0029E8  2A26               	incf	fat_format@cntr+1,f,c
 33859  0029EA  D7F1               	goto	l13411
 33860  0029EC                     u10290:
 33861                           
 33862                           ;fat16.c: 1287: };fat16.c: 1288: for(cntr=2+1; cntr<=33; ++cntr)
 33863  0029EC  0E00               	movlw	0
 33864  0029EE  6E26               	movwf	fat_format@cntr+1,c
 33865  0029F0  0E03               	movlw	3
 33866  0029F2  6E25               	movwf	fat_format@cntr,c
 33867  0029F4                     l13423:
 33868  0029F4  5026               	movf	fat_format@cntr+1,w,c
 33869  0029F6  E111               	bnz	l13433
 33870  0029F8  0E22               	movlw	34
 33871  0029FA  5C25               	subwf	fat_format@cntr,w,c
 33872  0029FC  B0D8               	btfsc	status,0,c
 33873  0029FE  D00D               	goto	u10310
 33874                           
 33875                           ;fat16.c: 1289: {;fat16.c: 1290: flash_sector_write(cntr, buffer);
 33876  002A00  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33877  002A04  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33878  002A08  0EC0               	movlw	low _buffer
 33879  002A0A  6E22               	movwf	flash_sector_write@data,c
 33880  002A0C  0E03               	movlw	high _buffer
 33881  002A0E  6E23               	movwf	flash_sector_write@data+1,c
 33882  002A10  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33883  002A14  4A25               	infsnz	fat_format@cntr,f,c
 33884  002A16  2A26               	incf	fat_format@cntr+1,f,c
 33885  002A18  D7ED               	goto	l13423
 33886  002A1A                     u10310:
 33887  002A1A                     l13433:
 33888                           
 33889                           ;fat16.c: 1291: };fat16.c: 1294: for(cntr=0; cntr<512; ++cntr)
 33890  002A1A  0E00               	movlw	0
 33891  002A1C  6E26               	movwf	fat_format@cntr+1,c
 33892  002A1E  0E00               	movlw	0
 33893  002A20  6E25               	movwf	fat_format@cntr,c
 33894  002A22                     l13435:
 33895  002A22  0E02               	movlw	2
 33896  002A24  5C26               	subwf	fat_format@cntr+1,w,c
 33897  002A26  B0D8               	btfsc	status,0,c
 33898  002A28  D010               	goto	u10330
 33899                           
 33900                           ;fat16.c: 1295: {;fat16.c: 1296: buffer[cntr] = _get_root(cntr);
 33901  002A2A  0EC0               	movlw	low _buffer
 33902  002A2C  2425               	addwf	fat_format@cntr,w,c
 33903  002A2E  6ED9               	movwf	fsr2l,c
 33904  002A30  0E03               	movlw	high _buffer
 33905  002A32  2026               	addwfc	fat_format@cntr+1,w,c
 33906  002A34  6EDA               	movwf	fsr2h,c
 33907  002A36  C025  F001         	movff	fat_format@cntr,__get_root@idx
 33908  002A3A  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 33909  002A3E  EC32  F01A         	call	__get_root	;wreg free
 33910  002A42  6EDF               	movwf	indf2,c
 33911  002A44  4A25               	infsnz	fat_format@cntr,f,c
 33912  002A46  2A26               	incf	fat_format@cntr+1,f,c
 33913  002A48  D7EC               	goto	l13435
 33914  002A4A                     u10330:
 33915                           
 33916                           ;fat16.c: 1297: };fat16.c: 1298: flash_sector_write(34, buffer);
 33917  002A4A  0E00               	movlw	0
 33918  002A4C  6E21               	movwf	flash_sector_write@page+1,c
 33919  002A4E  0E22               	movlw	34
 33920  002A50  6E20               	movwf	flash_sector_write@page,c
 33921  002A52  0EC0               	movlw	low _buffer
 33922  002A54  6E22               	movwf	flash_sector_write@data,c
 33923  002A56  0E03               	movlw	high _buffer
 33924  002A58  6E23               	movwf	flash_sector_write@data+1,c
 33925  002A5A  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33926                           
 33927                           ;fat16.c: 1301: for(cntr=0; cntr<512; ++cntr)
 33928  002A5E  0E00               	movlw	0
 33929  002A60  6E26               	movwf	fat_format@cntr+1,c
 33930  002A62  0E00               	movlw	0
 33931  002A64  6E25               	movwf	fat_format@cntr,c
 33932  002A66                     l13449:
 33933  002A66  0E02               	movlw	2
 33934  002A68  5C26               	subwf	fat_format@cntr+1,w,c
 33935  002A6A  B0D8               	btfsc	status,0,c
 33936  002A6C  D00B               	goto	u10350
 33937                           
 33938                           ;fat16.c: 1302: {;fat16.c: 1303: buffer[cntr] = 0x00;
 33939  002A6E  0EC0               	movlw	low _buffer
 33940  002A70  2425               	addwf	fat_format@cntr,w,c
 33941  002A72  6ED9               	movwf	fsr2l,c
 33942  002A74  0E03               	movlw	high _buffer
 33943  002A76  2026               	addwfc	fat_format@cntr+1,w,c
 33944  002A78  6EDA               	movwf	fsr2h,c
 33945  002A7A  0E00               	movlw	0
 33946  002A7C  6EDF               	movwf	indf2,c
 33947  002A7E  4A25               	infsnz	fat_format@cntr,f,c
 33948  002A80  2A26               	incf	fat_format@cntr+1,f,c
 33949  002A82  D7F1               	goto	l13449
 33950  002A84                     u10350:
 33951                           
 33952                           ;fat16.c: 1304: };fat16.c: 1305: for(cntr=34+1; cntr<=37; ++cntr)
 33953  002A84  0E00               	movlw	0
 33954  002A86  6E26               	movwf	fat_format@cntr+1,c
 33955  002A88  0E23               	movlw	35
 33956  002A8A  6E25               	movwf	fat_format@cntr,c
 33957  002A8C                     l13461:
 33958  002A8C  5026               	movf	fat_format@cntr+1,w,c
 33959  002A8E  E111               	bnz	l13471
 33960  002A90  0E26               	movlw	38
 33961  002A92  5C25               	subwf	fat_format@cntr,w,c
 33962  002A94  B0D8               	btfsc	status,0,c
 33963  002A96  D00D               	goto	u10370
 33964                           
 33965                           ;fat16.c: 1306: {;fat16.c: 1307: flash_sector_write(cntr, buffer);
 33966  002A98  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33967  002A9C  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33968  002AA0  0EC0               	movlw	low _buffer
 33969  002AA2  6E22               	movwf	flash_sector_write@data,c
 33970  002AA4  0E03               	movlw	high _buffer
 33971  002AA6  6E23               	movwf	flash_sector_write@data+1,c
 33972  002AA8  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33973  002AAC  4A25               	infsnz	fat_format@cntr,f,c
 33974  002AAE  2A26               	incf	fat_format@cntr+1,f,c
 33975  002AB0  D7ED               	goto	l13461
 33976  002AB2                     u10370:
 33977  002AB2                     l13471:
 33978                           
 33979                           ;fat16.c: 1308: };fat16.c: 1311: for(cntr=0; cntr<512; ++cntr)
 33980  002AB2  0E00               	movlw	0
 33981  002AB4  6E26               	movwf	fat_format@cntr+1,c
 33982  002AB6  0E00               	movlw	0
 33983  002AB8  6E25               	movwf	fat_format@cntr,c
 33984  002ABA                     l13473:
 33985  002ABA  0E02               	movlw	2
 33986  002ABC  5C26               	subwf	fat_format@cntr+1,w,c
 33987  002ABE  B0D8               	btfsc	status,0,c
 33988  002AC0  D010               	goto	u10390
 33989                           
 33990                           ;fat16.c: 1312: {;fat16.c: 1313: buffer[cntr] = _get_data(cntr);
 33991  002AC2  0EC0               	movlw	low _buffer
 33992  002AC4  2425               	addwf	fat_format@cntr,w,c
 33993  002AC6  6ED9               	movwf	fsr2l,c
 33994  002AC8  0E03               	movlw	high _buffer
 33995  002ACA  2026               	addwfc	fat_format@cntr+1,w,c
 33996  002ACC  6EDA               	movwf	fsr2h,c
 33997  002ACE  C025  F001         	movff	fat_format@cntr,__get_data@idx
 33998  002AD2  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 33999  002AD6  EC67  F045         	call	__get_data	;wreg free
 34000  002ADA  6EDF               	movwf	indf2,c
 34001  002ADC  4A25               	infsnz	fat_format@cntr,f,c
 34002  002ADE  2A26               	incf	fat_format@cntr+1,f,c
 34003  002AE0  D7EC               	goto	l13473
 34004  002AE2                     u10390:
 34005                           
 34006                           ;fat16.c: 1314: };fat16.c: 1315: flash_sector_write(38, buffer);
 34007  002AE2  0E00               	movlw	0
 34008  002AE4  6E21               	movwf	flash_sector_write@page+1,c
 34009  002AE6  0E26               	movlw	38
 34010  002AE8  6E20               	movwf	flash_sector_write@page,c
 34011  002AEA  0EC0               	movlw	low _buffer
 34012  002AEC  6E22               	movwf	flash_sector_write@data,c
 34013  002AEE  0E03               	movlw	high _buffer
 34014  002AF0  6E23               	movwf	flash_sector_write@data+1,c
 34015  002AF2  ECEA  F03F         	call	_flash_sector_write	;wreg free
 34016  002AF6  0012               	return		;funcret
 34017  002AF8                     __end_of_fat_format:
 34018                           	opt stack 0
 34019                           tosu	equ	0xFFF
 34020                           tosh	equ	0xFFE
 34021                           tosl	equ	0xFFD
 34022                           pclath	equ	0xFFA
 34023                           tblptru	equ	0xFF8
 34024                           tblptrh	equ	0xFF7
 34025                           tblptrl	equ	0xFF6
 34026                           tablat	equ	0xFF5
 34027                           prodh	equ	0xFF4
 34028                           prodl	equ	0xFF3
 34029                           intcon	equ	0xFF2
 34030                           intcon2	equ	0xFF1
 34031                           intcon3	equ	0xFF0
 34032                           indf0	equ	0xFEF
 34033                           postinc0	equ	0xFEE
 34034                           fsr0h	equ	0xFEA
 34035                           fsr0l	equ	0xFE9
 34036                           wreg	equ	0xFE8
 34037                           indf1	equ	0xFE7
 34038                           postdec1	equ	0xFE5
 34039                           plusw1	equ	0xFE3
 34040                           fsr1h	equ	0xFE2
 34041                           fsr1l	equ	0xFE1
 34042                           indf2	equ	0xFDF
 34043                           postinc2	equ	0xFDE
 34044                           postdec2	equ	0xFDD
 34045                           plusw2	equ	0xFDB
 34046                           fsr2h	equ	0xFDA
 34047                           fsr2l	equ	0xFD9
 34048                           status	equ	0xFD8
 34049                           
 34050 ;; *************** function __get_root *****************
 34051 ;; Defined at:
 34052 ;;		line 1148 in file "fat16.c"
 34053 ;; Parameters:    Size  Location     Type
 34054 ;;  idx             2    0[COMRAM] unsigned int 
 34055 ;; Auto vars:     Size  Location     Type
 34056 ;;		None
 34057 ;; Return value:  Size  Location     Type
 34058 ;;                  1    wreg      unsigned char 
 34059 ;; Registers used:
 34060 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34061 ;; Tracked objects:
 34062 ;;		On entry : 0/0
 34063 ;;		On exit  : 0/0
 34064 ;;		Unchanged: 0/0
 34065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34070 ;;Total ram usage:        6 bytes
 34071 ;; Hardware stack levels used:    1
 34072 ;; This function calls:
 34073 ;;		Nothing
 34074 ;; This function is called by:
 34075 ;;		_fat_format
 34076 ;; This function uses a non-reentrant model
 34077 ;;
 34078                           
 34079                           	psect	text172
 34080  003464                     __ptext172:
 34081                           	opt stack 0
 34082  003464                     __get_root:
 34083                           	opt stack 27
 34084                           
 34085                           ;fat16.c: 1150: if(idx < 0x20)
 34086                           
 34087                           ;incstack = 0
 34088  003464  5002               	movf	__get_root@idx+1,w,c
 34089  003466  E11D               	bnz	l12655
 34090  003468  0E20               	movlw	32
 34091  00346A  5C01               	subwf	__get_root@idx,w,c
 34092  00346C  B0D8               	btfsc	status,0,c
 34093  00346E  D019               	goto	l2209
 34094                           
 34095                           ;fat16.c: 1151: {;fat16.c: 1152: if(idx < 11)
 34096  003470  5002               	movf	__get_root@idx+1,w,c
 34097  003472  E110               	bnz	l12649
 34098  003474  0E0B               	movlw	11
 34099  003476  5C01               	subwf	__get_root@idx,w,c
 34100  003478  B0D8               	btfsc	status,0,c
 34101  00347A  D00C               	goto	l2207
 34102                           
 34103                           ;fat16.c: 1153: {;fat16.c: 1154: return "SolarChargr"[idx];
 34104  00347C  0EDD               	movlw	low STR_9
 34105  00347E  2401               	addwf	__get_root@idx,w,c
 34106  003480  6EF6               	movwf	tblptrl,c
 34107  003482  0E9F               	movlw	high STR_9
 34108  003484  2002               	addwfc	__get_root@idx+1,w,c
 34109  003486  6EF7               	movwf	tblptrh,c
 34110  003488                     	if	1	;There are 3 active tblptr bytes
 34111  003488  6AF8               	clrf	tblptru,c
 34112  00348A  0E00               	movlw	low (__mediumconst shr (0+16))
 34113  00348C  22F8               	addwfc	tblptru,f,c
 34114  00348E                     	endif
 34115  00348E  0008               	tblrd		*
 34116  003490  50F5               	movf	tablat,w,c
 34117  003492  0012               	return	
 34118  003494                     l2207:
 34119  003494                     l12649:
 34120                           
 34121                           ;fat16.c: 1155: };fat16.c: 1156: if(idx==11)
 34122  003494  0E0B               	movlw	11
 34123  003496  1801               	xorwf	__get_root@idx,w,c
 34124  003498  1002               	iorwf	__get_root@idx+1,w,c
 34125  00349A  A4D8               	btfss	status,2,c
 34126  00349C  D002               	goto	l2209
 34127                           
 34128                           ;fat16.c: 1157: {;fat16.c: 1158: return 0x08;
 34129  00349E  0E08               	movlw	8
 34130  0034A0  0012               	return	
 34131  0034A2                     l2209:
 34132  0034A2                     l12655:
 34133                           
 34134                           ;fat16.c: 1159: };fat16.c: 1160: };fat16.c: 1161: if(idx < 0x40)
 34135  0034A2  5002               	movf	__get_root@idx+1,w,c
 34136  0034A4  E103               	bnz	u9381
 34137  0034A6  0E40               	movlw	64
 34138  0034A8  5C01               	subwf	__get_root@idx,w,c
 34139  0034AA  B0D8               	btfsc	status,0,c
 34140  0034AC                     u9381:
 34141  0034AC  D0A4               	goto	l2235
 34142                           
 34143                           ;fat16.c: 1162: {;fat16.c: 1163: idx -= 0x20;
 34144  0034AE  0E20               	movlw	32
 34145  0034B0  5E01               	subwf	__get_root@idx,f,c
 34146  0034B2  0E00               	movlw	0
 34147  0034B4  5A02               	subwfb	__get_root@idx+1,f,c
 34148                           
 34149                           ;fat16.c: 1164: if(idx < 0+8)
 34150  0034B6  5002               	movf	__get_root@idx+1,w,c
 34151  0034B8  E110               	bnz	l12663
 34152  0034BA  0E08               	movlw	8
 34153  0034BC  5C01               	subwf	__get_root@idx,w,c
 34154  0034BE  B0D8               	btfsc	status,0,c
 34155  0034C0  D00C               	goto	l2211
 34156                           
 34157                           ;fat16.c: 1165: {;fat16.c: 1166: return "FILE    "[idx];
 34158  0034C2  0EE9               	movlw	low STR_10
 34159  0034C4  2401               	addwf	__get_root@idx,w,c
 34160  0034C6  6EF6               	movwf	tblptrl,c
 34161  0034C8  0E9F               	movlw	high STR_10
 34162  0034CA  2002               	addwfc	__get_root@idx+1,w,c
 34163  0034CC  6EF7               	movwf	tblptrh,c
 34164  0034CE                     	if	1	;There are 3 active tblptr bytes
 34165  0034CE  6AF8               	clrf	tblptru,c
 34166  0034D0  0E00               	movlw	low (__mediumconst shr (0+16))
 34167  0034D2  22F8               	addwfc	tblptru,f,c
 34168  0034D4                     	endif
 34169  0034D4  0008               	tblrd		*
 34170  0034D6  50F5               	movf	tablat,w,c
 34171  0034D8  0012               	return	
 34172  0034DA                     l2211:
 34173  0034DA                     l12663:
 34174                           
 34175                           ;fat16.c: 1167: };fat16.c: 1168: if(idx < 11)
 34176  0034DA  5002               	movf	__get_root@idx+1,w,c
 34177  0034DC  E146               	bnz	l12755
 34178  0034DE  0E0B               	movlw	11
 34179  0034E0  5C01               	subwf	__get_root@idx,w,c
 34180  0034E2  B0D8               	btfsc	status,0,c
 34181  0034E4  D042               	goto	l2213
 34182                           
 34183                           ;fat16.c: 1169: {;fat16.c: 1170: return "TXT"[idx-8];
 34184  0034E6  0EF8               	movlw	248
 34185  0034E8  6E03               	movwf	??__get_root& (0+255),c
 34186  0034EA  0EFF               	movlw	255
 34187  0034EC  6E04               	movwf	(??__get_root+1)& (0+255),c
 34188  0034EE  C001  F005         	movff	__get_root@idx,??__get_root+2
 34189  0034F2  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 34190  0034F6  5003               	movf	??__get_root,w,c
 34191  0034F8  2605               	addwf	??__get_root+2,f,c
 34192  0034FA  5004               	movf	??__get_root+1,w,c
 34193  0034FC  2206               	addwfc	??__get_root+3,f,c
 34194  0034FE  0EFB               	movlw	low STR_11
 34195  003500  2405               	addwf	??__get_root+2,w,c
 34196  003502  6EF6               	movwf	tblptrl,c
 34197  003504  0E9F               	movlw	high STR_11
 34198  003506  2006               	addwfc	??__get_root+3,w,c
 34199  003508  6EF7               	movwf	tblptrh,c
 34200  00350A                     	if	1	;There are 3 active tblptr bytes
 34201  00350A  6AF8               	clrf	tblptru,c
 34202  00350C  0E00               	movlw	low (__mediumconst shr (0+16))
 34203  00350E  22F8               	addwfc	tblptru,f,c
 34204  003510                     	endif
 34205  003510  0008               	tblrd		*
 34206  003512  50F5               	movf	tablat,w,c
 34207  003514  0012               	return	
 34208  003516                     
 34209                           ;fat16.c: 1175: return 0x20;
 34210  003516  0E20               	movlw	32
 34211  003518  0012               	return	
 34212  00351A                     
 34213                           ;fat16.c: 1177: return 0x06;
 34214  00351A  0E06               	movlw	6
 34215  00351C  0012               	return	
 34216  00351E                     
 34217                           ;fat16.c: 1179: return 0x28;
 34218  00351E  0E28               	movlw	40
 34219  003520  0012               	return	
 34220  003522                     
 34221                           ;fat16.c: 1181: return 0x78;
 34222  003522  0E78               	movlw	120
 34223  003524  0012               	return	
 34224  003526                     
 34225                           ;fat16.c: 1183: return 0xDE;
 34226  003526  0EDE               	movlw	222
 34227  003528  0012               	return	
 34228  00352A                     
 34229                           ;fat16.c: 1185: return 0x38;
 34230  00352A  0E38               	movlw	56
 34231  00352C  0012               	return	
 34232  00352E                     
 34233                           ;fat16.c: 1187: return 0x5F;
 34234  00352E  0E5F               	movlw	95
 34235  003530  0012               	return	
 34236  003532                     
 34237                           ;fat16.c: 1189: return 0x4B;
 34238  003532  0E4B               	movlw	75
 34239  003534  0012               	return	
 34240  003536                     
 34241                           ;fat16.c: 1191: return 0x00;
 34242  003536  0E00               	movlw	0
 34243  003538  0012               	return	
 34244  00353A                     
 34245                           ;fat16.c: 1193: return 0x00;
 34246  00353A  0E00               	movlw	0
 34247  00353C  0012               	return	
 34248  00353E                     
 34249                           ;fat16.c: 1195: return 0x04;
 34250  00353E  0E04               	movlw	4
 34251  003540  0012               	return	
 34252  003542                     
 34253                           ;fat16.c: 1197: return 0x77;
 34254  003542  0E77               	movlw	119
 34255  003544  0012               	return	
 34256  003546                     
 34257                           ;fat16.c: 1199: return 0xDE;
 34258  003546  0EDE               	movlw	222
 34259  003548  0012               	return	
 34260  00354A                     
 34261                           ;fat16.c: 1201: return 0x38;
 34262  00354A  0E38               	movlw	56
 34263  00354C  0012               	return	
 34264  00354E                     
 34265                           ;fat16.c: 1203: return ((unsigned char)((((uint16_t)2))&0xFF));
 34266  00354E  0E02               	movlw	2
 34267  003550  0012               	return	
 34268  003552                     
 34269                           ;fat16.c: 1205: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 34270  003552  0E00               	movlw	0
 34271  003554  0012               	return	
 34272  003556                     
 34273                           ;fat16.c: 1207: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 34274  003556  0E0C               	movlw	12
 34275  003558  0012               	return	
 34276  00355A                     
 34277                           ;fat16.c: 1209: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 34278  00355A  0E00               	movlw	0
 34279  00355C  0012               	return	
 34280  00355E                     
 34281                           ;fat16.c: 1211: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 34282  00355E  0E00               	movlw	0
 34283  003560  0012               	return	
 34284  003562                     
 34285                           ;fat16.c: 1213: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34286  003562  0E00               	movlw	0
 34287  003564  0012               	return	
 34288  003566                     
 34289                           ;fat16.c: 1215: return 0x00;
 34290  003566  0E00               	movlw	0
 34291  003568  0012               	return	
 34292  00356A                     l2213:
 34293  00356A                     l12755:
 34294  00356A  C001  F003         	movff	__get_root@idx,??__get_root
 34295  00356E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 34296                           
 34297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34298                           ; Switch size 1, requested type "space"
 34299                           ; Number of cases is 1, Range of values is 0 to 0
 34300                           ; switch strategies available:
 34301                           ; Name         Instructions Cycles
 34302                           ; simple_byte            4     3 (average)
 34303                           ;	Chosen strategy is simple_byte
 34304  003572  5004               	movf	??__get_root+1,w,c
 34305  003574  0A00               	xorlw	0	; case 0
 34306  003576  A4D8               	btfss	status,2,c
 34307  003578  D7F6               	goto	l2234
 34308                           
 34309                           ; Switch size 1, requested type "space"
 34310                           ; Number of cases is 20, Range of values is 11 to 31
 34311                           ; switch strategies available:
 34312                           ; Name         Instructions Cycles
 34313                           ; simple_byte           61    31 (average)
 34314                           ;	Chosen strategy is simple_byte
 34315  00357A  5003               	movf	??__get_root,w,c
 34316  00357C  0A0B               	xorlw	11	; case 11
 34317  00357E  B4D8               	btfsc	status,2,c
 34318  003580  D7CA               	goto	l2214
 34319  003582  0A06               	xorlw	6	; case 13
 34320  003584  B4D8               	btfsc	status,2,c
 34321  003586  D7C9               	goto	l2215
 34322  003588  0A03               	xorlw	3	; case 14
 34323  00358A  B4D8               	btfsc	status,2,c
 34324  00358C  D7C8               	goto	l2216
 34325  00358E  0A01               	xorlw	1	; case 15
 34326  003590  B4D8               	btfsc	status,2,c
 34327  003592  D7C7               	goto	l2217
 34328  003594  0A1F               	xorlw	31	; case 16
 34329  003596  B4D8               	btfsc	status,2,c
 34330  003598  D7C6               	goto	l2218
 34331  00359A  0A01               	xorlw	1	; case 17
 34332  00359C  B4D8               	btfsc	status,2,c
 34333  00359E  D7C5               	goto	l2219
 34334  0035A0  0A03               	xorlw	3	; case 18
 34335  0035A2  B4D8               	btfsc	status,2,c
 34336  0035A4  D7C4               	goto	l2220
 34337  0035A6  0A01               	xorlw	1	; case 19
 34338  0035A8  B4D8               	btfsc	status,2,c
 34339  0035AA  D7C3               	goto	l2221
 34340  0035AC  0A07               	xorlw	7	; case 20
 34341  0035AE  B4D8               	btfsc	status,2,c
 34342  0035B0  D7C2               	goto	l2222
 34343  0035B2  0A01               	xorlw	1	; case 21
 34344  0035B4  B4D8               	btfsc	status,2,c
 34345  0035B6  D7C1               	goto	l2223
 34346  0035B8  0A03               	xorlw	3	; case 22
 34347  0035BA  B4D8               	btfsc	status,2,c
 34348  0035BC  D7C0               	goto	l2224
 34349  0035BE  0A01               	xorlw	1	; case 23
 34350  0035C0  B4D8               	btfsc	status,2,c
 34351  0035C2  D7BF               	goto	l2225
 34352  0035C4  0A0F               	xorlw	15	; case 24
 34353  0035C6  B4D8               	btfsc	status,2,c
 34354  0035C8  D7BE               	goto	l2226
 34355  0035CA  0A01               	xorlw	1	; case 25
 34356  0035CC  B4D8               	btfsc	status,2,c
 34357  0035CE  D7BD               	goto	l2227
 34358  0035D0  0A03               	xorlw	3	; case 26
 34359  0035D2  B4D8               	btfsc	status,2,c
 34360  0035D4  D7BC               	goto	l2228
 34361  0035D6  0A01               	xorlw	1	; case 27
 34362  0035D8  B4D8               	btfsc	status,2,c
 34363  0035DA  D7BB               	goto	l2229
 34364  0035DC  0A07               	xorlw	7	; case 28
 34365  0035DE  B4D8               	btfsc	status,2,c
 34366  0035E0  D7BA               	goto	l2230
 34367  0035E2  0A01               	xorlw	1	; case 29
 34368  0035E4  B4D8               	btfsc	status,2,c
 34369  0035E6  D7B9               	goto	l2231
 34370  0035E8  0A03               	xorlw	3	; case 30
 34371  0035EA  B4D8               	btfsc	status,2,c
 34372  0035EC  D7B8               	goto	l2232
 34373  0035EE  0A01               	xorlw	1	; case 31
 34374  0035F0  B4D8               	btfsc	status,2,c
 34375  0035F2  D7B7               	goto	l2233
 34376  0035F4  D7B8               	goto	l2234
 34377  0035F6                     l2235:
 34378                           
 34379                           ;fat16.c: 1217: };fat16.c: 1218: return 0X00;
 34380  0035F6  0E00               	movlw	0
 34381  0035F8  0012               	return	
 34382  0035FA                     __end_of__get_root:
 34383                           	opt stack 0
 34384                           tosu	equ	0xFFF
 34385                           tosh	equ	0xFFE
 34386                           tosl	equ	0xFFD
 34387                           pclath	equ	0xFFA
 34388                           tblptru	equ	0xFF8
 34389                           tblptrh	equ	0xFF7
 34390                           tblptrl	equ	0xFF6
 34391                           tablat	equ	0xFF5
 34392                           prodh	equ	0xFF4
 34393                           prodl	equ	0xFF3
 34394                           intcon	equ	0xFF2
 34395                           intcon2	equ	0xFF1
 34396                           intcon3	equ	0xFF0
 34397                           indf0	equ	0xFEF
 34398                           postinc0	equ	0xFEE
 34399                           fsr0h	equ	0xFEA
 34400                           fsr0l	equ	0xFE9
 34401                           wreg	equ	0xFE8
 34402                           indf1	equ	0xFE7
 34403                           postdec1	equ	0xFE5
 34404                           plusw1	equ	0xFE3
 34405                           fsr1h	equ	0xFE2
 34406                           fsr1l	equ	0xFE1
 34407                           indf2	equ	0xFDF
 34408                           postinc2	equ	0xFDE
 34409                           postdec2	equ	0xFDD
 34410                           plusw2	equ	0xFDB
 34411                           fsr2h	equ	0xFDA
 34412                           fsr2l	equ	0xFD9
 34413                           status	equ	0xFD8
 34414                           
 34415 ;; *************** function __get_mbr *****************
 34416 ;; Defined at:
 34417 ;;		line 975 in file "fat16.c"
 34418 ;; Parameters:    Size  Location     Type
 34419 ;;  idx             2    0[COMRAM] unsigned int 
 34420 ;; Auto vars:     Size  Location     Type
 34421 ;;		None
 34422 ;; Return value:  Size  Location     Type
 34423 ;;                  1    wreg      unsigned char 
 34424 ;; Registers used:
 34425 ;;		wreg, status,2, status,0
 34426 ;; Tracked objects:
 34427 ;;		On entry : 0/0
 34428 ;;		On exit  : 0/0
 34429 ;;		Unchanged: 0/0
 34430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34435 ;;Total ram usage:        4 bytes
 34436 ;; Hardware stack levels used:    1
 34437 ;; This function calls:
 34438 ;;		Nothing
 34439 ;; This function is called by:
 34440 ;;		_fat_get_format_status
 34441 ;;		_fat_format
 34442 ;; This function uses a non-reentrant model
 34443 ;;
 34444                           
 34445                           	psect	text173
 34446  005CF2                     __ptext173:
 34447                           	opt stack 0
 34448  005CF2                     __get_mbr:
 34449                           	opt stack 27
 34450                           
 34451                           ;fat16.c: 977: switch (idx)
 34452                           
 34453                           ;incstack = 0
 34454  005CF2  D026               	goto	l2116
 34455  005CF4                     
 34456                           ;fat16.c: 980: return 0x80;
 34457  005CF4  0E80               	movlw	128
 34458  005CF6  0012               	return	
 34459  005CF8                     
 34460                           ;fat16.c: 982: return 0;
 34461  005CF8  0E00               	movlw	0
 34462  005CFA  0012               	return	
 34463  005CFC                     
 34464                           ;fat16.c: 984: return 2;
 34465  005CFC  0E02               	movlw	2
 34466  005CFE  0012               	return	
 34467  005D00                     
 34468                           ;fat16.c: 986: return 0;
 34469  005D00  0E00               	movlw	0
 34470  005D02  0012               	return	
 34471  005D04                     
 34472                           ;fat16.c: 988: return 0x04;
 34473  005D04  0E04               	movlw	4
 34474  005D06  0012               	return	
 34475  005D08                     
 34476                           ;fat16.c: 990: return 2;
 34477  005D08  0E02               	movlw	2
 34478  005D0A  0012               	return	
 34479  005D0C                     
 34480                           ;fat16.c: 992: return 3;
 34481  005D0C  0E03               	movlw	3
 34482  005D0E  0012               	return	
 34483  005D10                     
 34484                           ;fat16.c: 994: return 8;
 34485  005D10  0E08               	movlw	8
 34486  005D12  0012               	return	
 34487  005D14                     
 34488                           ;fat16.c: 996: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
 34489  005D14  0E01               	movlw	1
 34490  005D16  0012               	return	
 34491  005D18                     
 34492                           ;fat16.c: 998: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
 34493  005D18  0E00               	movlw	0
 34494  005D1A  0012               	return	
 34495  005D1C                     
 34496                           ;fat16.c: 1000: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 34497  005D1C  0E00               	movlw	0
 34498  005D1E  0012               	return	
 34499  005D20                     
 34500                           ;fat16.c: 1002: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34501  005D20  0E00               	movlw	0
 34502  005D22  0012               	return	
 34503  005D24                     
 34504                           ;fat16.c: 1004: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 34505  005D24  0EFF               	movlw	255
 34506  005D26  0012               	return	
 34507  005D28                     
 34508                           ;fat16.c: 1006: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 34509  005D28  0E1F               	movlw	31
 34510  005D2A  0012               	return	
 34511  005D2C                     
 34512                           ;fat16.c: 1008: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 34513  005D2C  0E00               	movlw	0
 34514  005D2E  0012               	return	
 34515  005D30                     
 34516                           ;fat16.c: 1010: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 34517  005D30  0E00               	movlw	0
 34518  005D32  0012               	return	
 34519  005D34                     
 34520                           ;fat16.c: 1012: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 34521  005D34  0E55               	movlw	85
 34522  005D36  0012               	return	
 34523  005D38                     
 34524                           ;fat16.c: 1014: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 34525  005D38  0EAA               	movlw	170
 34526  005D3A  0012               	return	
 34527  005D3C                     
 34528                           ;fat16.c: 1016: return 0X00;
 34529  005D3C  0E00               	movlw	0
 34530                           
 34531                           ;fat16.c: 1017: }
 34532  005D3E  0012               	return	
 34533  005D40                     l2116:
 34534  005D40  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 34535  005D44  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 34536                           
 34537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34538                           ; Switch size 1, requested type "space"
 34539                           ; Number of cases is 1, Range of values is 1 to 1
 34540                           ; switch strategies available:
 34541                           ; Name         Instructions Cycles
 34542                           ; simple_byte            4     3 (average)
 34543                           ;	Chosen strategy is simple_byte
 34544  005D48  5004               	movf	??__get_mbr+1,w,c
 34545  005D4A  0A01               	xorlw	1	; case 1
 34546  005D4C  A4D8               	btfss	status,2,c
 34547  005D4E  D7F6               	goto	l2136
 34548                           
 34549                           ; Switch size 1, requested type "space"
 34550                           ; Number of cases is 18, Range of values is 190 to 255
 34551                           ; switch strategies available:
 34552                           ; Name         Instructions Cycles
 34553                           ; simple_byte           55    28 (average)
 34554                           ;	Chosen strategy is simple_byte
 34555  005D50  5003               	movf	??__get_mbr,w,c
 34556  005D52  0ABE               	xorlw	190	; case 190
 34557  005D54  B4D8               	btfsc	status,2,c
 34558  005D56  D7CE               	goto	l2117
 34559  005D58  0A01               	xorlw	1	; case 191
 34560  005D5A  B4D8               	btfsc	status,2,c
 34561  005D5C  D7CD               	goto	l2119
 34562  005D5E  0A7F               	xorlw	127	; case 192
 34563  005D60  B4D8               	btfsc	status,2,c
 34564  005D62  D7CC               	goto	l2120
 34565  005D64  0A01               	xorlw	1	; case 193
 34566  005D66  B4D8               	btfsc	status,2,c
 34567  005D68  D7CB               	goto	l2121
 34568  005D6A  0A03               	xorlw	3	; case 194
 34569  005D6C  B4D8               	btfsc	status,2,c
 34570  005D6E  D7CA               	goto	l2122
 34571  005D70  0A01               	xorlw	1	; case 195
 34572  005D72  B4D8               	btfsc	status,2,c
 34573  005D74  D7C9               	goto	l2123
 34574  005D76  0A07               	xorlw	7	; case 196
 34575  005D78  B4D8               	btfsc	status,2,c
 34576  005D7A  D7C8               	goto	l2124
 34577  005D7C  0A01               	xorlw	1	; case 197
 34578  005D7E  B4D8               	btfsc	status,2,c
 34579  005D80  D7C7               	goto	l2125
 34580  005D82  0A03               	xorlw	3	; case 198
 34581  005D84  B4D8               	btfsc	status,2,c
 34582  005D86  D7C6               	goto	l2126
 34583  005D88  0A01               	xorlw	1	; case 199
 34584  005D8A  B4D8               	btfsc	status,2,c
 34585  005D8C  D7C5               	goto	l2127
 34586  005D8E  0A0F               	xorlw	15	; case 200
 34587  005D90  B4D8               	btfsc	status,2,c
 34588  005D92  D7C4               	goto	l2128
 34589  005D94  0A01               	xorlw	1	; case 201
 34590  005D96  B4D8               	btfsc	status,2,c
 34591  005D98  D7C3               	goto	l2129
 34592  005D9A  0A03               	xorlw	3	; case 202
 34593  005D9C  B4D8               	btfsc	status,2,c
 34594  005D9E  D7C2               	goto	l2130
 34595  005DA0  0A01               	xorlw	1	; case 203
 34596  005DA2  B4D8               	btfsc	status,2,c
 34597  005DA4  D7C1               	goto	l2131
 34598  005DA6  0A07               	xorlw	7	; case 204
 34599  005DA8  B4D8               	btfsc	status,2,c
 34600  005DAA  D7C0               	goto	l2132
 34601  005DAC  0A01               	xorlw	1	; case 205
 34602  005DAE  B4D8               	btfsc	status,2,c
 34603  005DB0  D7BF               	goto	l2133
 34604  005DB2  0A33               	xorlw	51	; case 254
 34605  005DB4  B4D8               	btfsc	status,2,c
 34606  005DB6  D7BE               	goto	l2134
 34607  005DB8  0A01               	xorlw	1	; case 255
 34608  005DBA  B4D8               	btfsc	status,2,c
 34609  005DBC  D7BD               	goto	l2135
 34610  005DBE  D7BE               	goto	l2136
 34611  005DC0                     __end_of__get_mbr:
 34612                           	opt stack 0
 34613                           tosu	equ	0xFFF
 34614                           tosh	equ	0xFFE
 34615                           tosl	equ	0xFFD
 34616                           pclath	equ	0xFFA
 34617                           tblptru	equ	0xFF8
 34618                           tblptrh	equ	0xFF7
 34619                           tblptrl	equ	0xFF6
 34620                           tablat	equ	0xFF5
 34621                           prodh	equ	0xFF4
 34622                           prodl	equ	0xFF3
 34623                           intcon	equ	0xFF2
 34624                           intcon2	equ	0xFF1
 34625                           intcon3	equ	0xFF0
 34626                           indf0	equ	0xFEF
 34627                           postinc0	equ	0xFEE
 34628                           fsr0h	equ	0xFEA
 34629                           fsr0l	equ	0xFE9
 34630                           wreg	equ	0xFE8
 34631                           indf1	equ	0xFE7
 34632                           postdec1	equ	0xFE5
 34633                           plusw1	equ	0xFE3
 34634                           fsr1h	equ	0xFE2
 34635                           fsr1l	equ	0xFE1
 34636                           indf2	equ	0xFDF
 34637                           postinc2	equ	0xFDE
 34638                           postdec2	equ	0xFDD
 34639                           plusw2	equ	0xFDB
 34640                           fsr2h	equ	0xFDA
 34641                           fsr2l	equ	0xFD9
 34642                           status	equ	0xFD8
 34643                           
 34644 ;; *************** function __get_fbr *****************
 34645 ;; Defined at:
 34646 ;;		line 1020 in file "fat16.c"
 34647 ;; Parameters:    Size  Location     Type
 34648 ;;  idx             2    0[COMRAM] unsigned int 
 34649 ;; Auto vars:     Size  Location     Type
 34650 ;;		None
 34651 ;; Return value:  Size  Location     Type
 34652 ;;                  1    wreg      unsigned char 
 34653 ;; Registers used:
 34654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34655 ;; Tracked objects:
 34656 ;;		On entry : 0/0
 34657 ;;		On exit  : 0/0
 34658 ;;		Unchanged: 0/0
 34659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34664 ;;Total ram usage:        4 bytes
 34665 ;; Hardware stack levels used:    1
 34666 ;; This function calls:
 34667 ;;		Nothing
 34668 ;; This function is called by:
 34669 ;;		_fat_get_format_status
 34670 ;;		_fat_format
 34671 ;; This function uses a non-reentrant model
 34672 ;;
 34673                           
 34674                           	psect	text174
 34675  001DCC                     __ptext174:
 34676                           	opt stack 0
 34677  001DCC                     __get_fbr:
 34678                           	opt stack 27
 34679                           
 34680                           ;fat16.c: 1022: switch (idx)
 34681                           
 34682                           ;incstack = 0
 34683  001DCC  D091               	goto	l2140
 34684  001DCE                     
 34685                           ;fat16.c: 1025: return 0xEB;
 34686  001DCE  0EEB               	movlw	235
 34687  001DD0  0012               	return	
 34688  001DD2                     
 34689                           ;fat16.c: 1027: return 0x3C;
 34690  001DD2  0E3C               	movlw	60
 34691  001DD4  0012               	return	
 34692  001DD6                     
 34693                           ;fat16.c: 1029: return 0x90;
 34694  001DD6  0E90               	movlw	144
 34695  001DD8  0012               	return	
 34696  001DDA                     
 34697                           ;fat16.c: 1031: return "MSDOS5.0"[0];
 34698  001DDA  0EF2               	movlw	low STR_1
 34699  001DDC  6EF6               	movwf	tblptrl,c
 34700  001DDE                     	if	1	;There is more than 1 active tblptr byte
 34701  001DDE  0E9F               	movlw	high STR_1
 34702  001DE0  6EF7               	movwf	tblptrh,c
 34703  001DE2                     	endif
 34704  001DE2                     	if	1	;There are 3 active tblptr bytes
 34705  001DE2  0E00               	movlw	low (STR_1 shr (0+16))
 34706  001DE4  6EF8               	movwf	tblptru,c
 34707  001DE6                     	endif
 34708  001DE6  0008               	tblrd		*
 34709  001DE8  50F5               	movf	tablat,w,c
 34710  001DEA  0012               	return	
 34711  001DEC                     
 34712                           ;fat16.c: 1033: return "MSDOS5.0"[1];
 34713  001DEC  0EF3               	movlw	low (STR_1+1)
 34714  001DEE  6EF6               	movwf	tblptrl,c
 34715  001DF0  0E9F               	movlw	high (STR_1+1)
 34716  001DF2  6EF7               	movwf	tblptrh,c
 34717  001DF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34718  001DF4  6AF8               	clrf	tblptru,c
 34719  001DF6                     	endif
 34720  001DF6                     	if	0	;tblptru may be non-zero
 34721  001DF6                     	endif
 34722  001DF6  0008               	tblrd		*
 34723  001DF8  50F5               	movf	tablat,w,c
 34724  001DFA  0012               	return	
 34725  001DFC                     
 34726                           ;fat16.c: 1035: return "MSDOS5.0"[2];
 34727  001DFC  0EF4               	movlw	low (STR_1+2)
 34728  001DFE  6EF6               	movwf	tblptrl,c
 34729  001E00  0E9F               	movlw	high (STR_1+2)
 34730  001E02  6EF7               	movwf	tblptrh,c
 34731  001E04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34732  001E04  6AF8               	clrf	tblptru,c
 34733  001E06                     	endif
 34734  001E06                     	if	0	;tblptru may be non-zero
 34735  001E06                     	endif
 34736  001E06  0008               	tblrd		*
 34737  001E08  50F5               	movf	tablat,w,c
 34738  001E0A  0012               	return	
 34739  001E0C                     
 34740                           ;fat16.c: 1037: return "MSDOS5.0"[3];
 34741  001E0C  0EF5               	movlw	low (STR_1+3)
 34742  001E0E  6EF6               	movwf	tblptrl,c
 34743  001E10  0E9F               	movlw	high (STR_1+3)
 34744  001E12  6EF7               	movwf	tblptrh,c
 34745  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34746  001E14  6AF8               	clrf	tblptru,c
 34747  001E16                     	endif
 34748  001E16                     	if	0	;tblptru may be non-zero
 34749  001E16                     	endif
 34750  001E16  0008               	tblrd		*
 34751  001E18  50F5               	movf	tablat,w,c
 34752  001E1A  0012               	return	
 34753  001E1C                     
 34754                           ;fat16.c: 1039: return "MSDOS5.0"[4];
 34755  001E1C  0EF6               	movlw	low (STR_1+4)
 34756  001E1E  6EF6               	movwf	tblptrl,c
 34757  001E20  0E9F               	movlw	high (STR_1+4)
 34758  001E22  6EF7               	movwf	tblptrh,c
 34759  001E24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34760  001E24  6AF8               	clrf	tblptru,c
 34761  001E26                     	endif
 34762  001E26                     	if	0	;tblptru may be non-zero
 34763  001E26                     	endif
 34764  001E26  0008               	tblrd		*
 34765  001E28  50F5               	movf	tablat,w,c
 34766  001E2A  0012               	return	
 34767  001E2C                     
 34768                           ;fat16.c: 1041: return "MSDOS5.0"[5];
 34769  001E2C  0EF7               	movlw	low (STR_1+5)
 34770  001E2E  6EF6               	movwf	tblptrl,c
 34771  001E30  0E9F               	movlw	high (STR_1+5)
 34772  001E32  6EF7               	movwf	tblptrh,c
 34773  001E34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34774  001E34  6AF8               	clrf	tblptru,c
 34775  001E36                     	endif
 34776  001E36                     	if	0	;tblptru may be non-zero
 34777  001E36                     	endif
 34778  001E36  0008               	tblrd		*
 34779  001E38  50F5               	movf	tablat,w,c
 34780  001E3A  0012               	return	
 34781  001E3C                     
 34782                           ;fat16.c: 1043: return "MSDOS5.0"[6];
 34783  001E3C  0EF8               	movlw	low (STR_1+6)
 34784  001E3E  6EF6               	movwf	tblptrl,c
 34785  001E40  0E9F               	movlw	high (STR_1+6)
 34786  001E42  6EF7               	movwf	tblptrh,c
 34787  001E44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34788  001E44  6AF8               	clrf	tblptru,c
 34789  001E46                     	endif
 34790  001E46                     	if	0	;tblptru may be non-zero
 34791  001E46                     	endif
 34792  001E46  0008               	tblrd		*
 34793  001E48  50F5               	movf	tablat,w,c
 34794  001E4A  0012               	return	
 34795  001E4C                     
 34796                           ;fat16.c: 1045: return "MSDOS5.0"[7];
 34797  001E4C  0EF9               	movlw	low (STR_1+7)
 34798  001E4E  6EF6               	movwf	tblptrl,c
 34799  001E50  0E9F               	movlw	high (STR_1+7)
 34800  001E52  6EF7               	movwf	tblptrh,c
 34801  001E54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34802  001E54  6AF8               	clrf	tblptru,c
 34803  001E56                     	endif
 34804  001E56                     	if	0	;tblptru may be non-zero
 34805  001E56                     	endif
 34806  001E56  0008               	tblrd		*
 34807  001E58  50F5               	movf	tablat,w,c
 34808  001E5A  0012               	return	
 34809  001E5C                     
 34810                           ;fat16.c: 1047: return ((unsigned char)((((uint16_t)512))&0xFF));
 34811  001E5C  0E00               	movlw	0
 34812  001E5E  0012               	return	
 34813  001E60                     
 34814                           ;fat16.c: 1049: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 34815  001E60  0E02               	movlw	2
 34816  001E62  0012               	return	
 34817  001E64                     
 34818                           ;fat16.c: 1051: return 1;
 34819  001E64  0E01               	movlw	1
 34820  001E66  0012               	return	
 34821  001E68                     
 34822                           ;fat16.c: 1053: return ((unsigned char)((((uint16_t)1))&0xFF));
 34823  001E68  0E01               	movlw	1
 34824  001E6A  0012               	return	
 34825  001E6C                     
 34826                           ;fat16.c: 1055: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 34827  001E6C  0E00               	movlw	0
 34828  001E6E  0012               	return	
 34829  001E70                     
 34830                           ;fat16.c: 1057: return 1;
 34831  001E70  0E01               	movlw	1
 34832  001E72  0012               	return	
 34833  001E74                     
 34834                           ;fat16.c: 1059: return ((unsigned char)((((uint16_t)64))&0xFF));
 34835  001E74  0E40               	movlw	64
 34836  001E76  0012               	return	
 34837  001E78                     
 34838                           ;fat16.c: 1061: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 34839  001E78  0E00               	movlw	0
 34840  001E7A  0012               	return	
 34841  001E7C                     
 34842                           ;fat16.c: 1063: return ((unsigned char)((((uint16_t)8191))&0xFF));
 34843  001E7C  0EFF               	movlw	255
 34844  001E7E  0012               	return	
 34845  001E80                     
 34846                           ;fat16.c: 1065: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 34847  001E80  0E1F               	movlw	31
 34848  001E82  0012               	return	
 34849  001E84                     
 34850                           ;fat16.c: 1067: return 0XF8;
 34851  001E84  0EF8               	movlw	248
 34852  001E86  0012               	return	
 34853  001E88                     
 34854                           ;fat16.c: 1069: return ((unsigned char)((((uint16_t)32))&0xFF));
 34855  001E88  0E20               	movlw	32
 34856  001E8A  0012               	return	
 34857  001E8C                     
 34858                           ;fat16.c: 1071: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 34859  001E8C  0E00               	movlw	0
 34860  001E8E  0012               	return	
 34861  001E90                     
 34862                           ;fat16.c: 1073: return ((unsigned char)((((uint16_t)63))&0xFF));
 34863  001E90  0E3F               	movlw	63
 34864  001E92  0012               	return	
 34865  001E94                     
 34866                           ;fat16.c: 1075: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 34867  001E94  0E00               	movlw	0
 34868  001E96  0012               	return	
 34869  001E98                     
 34870                           ;fat16.c: 1077: return ((unsigned char)((((uint16_t)16))&0xFF));
 34871  001E98  0E10               	movlw	16
 34872  001E9A  0012               	return	
 34873  001E9C                     
 34874                           ;fat16.c: 1079: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 34875  001E9C  0E00               	movlw	0
 34876  001E9E  0012               	return	
 34877  001EA0                     
 34878                           ;fat16.c: 1081: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 34879  001EA0  0E00               	movlw	0
 34880  001EA2  0012               	return	
 34881  001EA4                     
 34882                           ;fat16.c: 1083: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 34883  001EA4  0E00               	movlw	0
 34884  001EA6  0012               	return	
 34885  001EA8                     
 34886                           ;fat16.c: 1085: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 34887  001EA8  0E00               	movlw	0
 34888  001EAA  0012               	return	
 34889  001EAC                     
 34890                           ;fat16.c: 1087: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34891  001EAC  0E00               	movlw	0
 34892  001EAE  0012               	return	
 34893  001EB0                     
 34894                           ;fat16.c: 1089: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 34895  001EB0  0E01               	movlw	1
 34896  001EB2  0012               	return	
 34897  001EB4                     
 34898                           ;fat16.c: 1091: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 34899  001EB4  0E00               	movlw	0
 34900  001EB6  0012               	return	
 34901  001EB8                     
 34902                           ;fat16.c: 1093: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 34903  001EB8  0E22               	movlw	34
 34904  001EBA  0012               	return	
 34905  001EBC                     
 34906                           ;fat16.c: 1095: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 34907  001EBC  0E00               	movlw	0
 34908  001EBE  0012               	return	
 34909  001EC0                     
 34910                           ;fat16.c: 1099: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34911                           
 34912                           ;fat16.c: 1098: case 0x2F:
 34913  001EC0  0E00               	movlw	0
 34914  001EC2  0012               	return	
 34915  001EC4                     
 34916                           ;fat16.c: 1101: return 'F';
 34917  001EC4  0E46               	movlw	70
 34918  001EC6  0012               	return	
 34919  001EC8                     
 34920                           ;fat16.c: 1103: return 'A';
 34921  001EC8  0E41               	movlw	65
 34922  001ECA  0012               	return	
 34923  001ECC                     
 34924                           ;fat16.c: 1105: return 'T';
 34925  001ECC  0E54               	movlw	84
 34926  001ECE  0012               	return	
 34927  001ED0                     
 34928                           ;fat16.c: 1107: return '1';
 34929  001ED0  0E31               	movlw	49
 34930  001ED2  0012               	return	
 34931  001ED4                     
 34932                           ;fat16.c: 1109: return '6';
 34933  001ED4  0E36               	movlw	54
 34934  001ED6  0012               	return	
 34935  001ED8                     
 34936                           ;fat16.c: 1111: return ' ';
 34937  001ED8  0E20               	movlw	32
 34938  001EDA  0012               	return	
 34939  001EDC                     
 34940                           ;fat16.c: 1113: return ' ';
 34941  001EDC  0E20               	movlw	32
 34942  001EDE  0012               	return	
 34943  001EE0                     
 34944                           ;fat16.c: 1115: return ' ';
 34945  001EE0  0E20               	movlw	32
 34946  001EE2  0012               	return	
 34947  001EE4                     
 34948                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 34949  001EE4  0E55               	movlw	85
 34950  001EE6  0012               	return	
 34951  001EE8                     
 34952                           ;fat16.c: 1119: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 34953  001EE8  0EAA               	movlw	170
 34954  001EEA  0012               	return	
 34955  001EEC                     
 34956                           ;fat16.c: 1121: return 0X00;
 34957  001EEC  0E00               	movlw	0
 34958                           
 34959                           ;fat16.c: 1122: }
 34960  001EEE  0012               	return	
 34961  001EF0                     l2140:
 34962  001EF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 34963  001EF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 34964                           
 34965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 34966                           ; Switch size 1, requested type "space"
 34967                           ; Number of cases is 2, Range of values is 0 to 1
 34968                           ; switch strategies available:
 34969                           ; Name         Instructions Cycles
 34970                           ; simple_byte            7     4 (average)
 34971                           ;	Chosen strategy is simple_byte
 34972  001EF8  5004               	movf	??__get_fbr+1,w,c
 34973  001EFA  0A00               	xorlw	0	; case 0
 34974  001EFC  B4D8               	btfsc	status,2,c
 34975  001EFE  D004               	goto	l16283
 34976  001F00  0A01               	xorlw	1	; case 1
 34977  001F02  B4D8               	btfsc	status,2,c
 34978  001F04  D08D               	goto	l16285
 34979  001F06  D7F2               	goto	l2190
 34980  001F08                     l16283:
 34981                           
 34982                           ; Switch size 1, requested type "space"
 34983                           ; Number of cases is 46, Range of values is 0 to 61
 34984                           ; switch strategies available:
 34985                           ; Name         Instructions Cycles
 34986                           ; simple_byte          139    70 (average)
 34987                           ;	Chosen strategy is simple_byte
 34988  001F08  5003               	movf	??__get_fbr,w,c
 34989  001F0A  0A00               	xorlw	0	; case 0
 34990  001F0C  B4D8               	btfsc	status,2,c
 34991  001F0E  D75F               	goto	l2141
 34992  001F10  0A01               	xorlw	1	; case 1
 34993  001F12  B4D8               	btfsc	status,2,c
 34994  001F14  D75E               	goto	l2143
 34995  001F16  0A03               	xorlw	3	; case 2
 34996  001F18  B4D8               	btfsc	status,2,c
 34997  001F1A  D75D               	goto	l2144
 34998  001F1C  0A01               	xorlw	1	; case 3
 34999  001F1E  B4D8               	btfsc	status,2,c
 35000  001F20  D75C               	goto	l2145
 35001  001F22  0A07               	xorlw	7	; case 4
 35002  001F24  B4D8               	btfsc	status,2,c
 35003  001F26  D762               	goto	l2146
 35004  001F28  0A01               	xorlw	1	; case 5
 35005  001F2A  B4D8               	btfsc	status,2,c
 35006  001F2C  D767               	goto	l2147
 35007  001F2E  0A03               	xorlw	3	; case 6
 35008  001F30  B4D8               	btfsc	status,2,c
 35009  001F32  D76C               	goto	l2148
 35010  001F34  0A01               	xorlw	1	; case 7
 35011  001F36  B4D8               	btfsc	status,2,c
 35012  001F38  D771               	goto	l2149
 35013  001F3A  0A0F               	xorlw	15	; case 8
 35014  001F3C  B4D8               	btfsc	status,2,c
 35015  001F3E  D776               	goto	l2150
 35016  001F40  0A01               	xorlw	1	; case 9
 35017  001F42  B4D8               	btfsc	status,2,c
 35018  001F44  D77B               	goto	l2151
 35019  001F46  0A03               	xorlw	3	; case 10
 35020  001F48  B4D8               	btfsc	status,2,c
 35021  001F4A  D780               	goto	l2152
 35022  001F4C  0A01               	xorlw	1	; case 11
 35023  001F4E  B4D8               	btfsc	status,2,c
 35024  001F50  D785               	goto	l2153
 35025  001F52  0A07               	xorlw	7	; case 12
 35026  001F54  B4D8               	btfsc	status,2,c
 35027  001F56  D784               	goto	l2154
 35028  001F58  0A01               	xorlw	1	; case 13
 35029  001F5A  B4D8               	btfsc	status,2,c
 35030  001F5C  D783               	goto	l2155
 35031  001F5E  0A03               	xorlw	3	; case 14
 35032  001F60  B4D8               	btfsc	status,2,c
 35033  001F62  D782               	goto	l2156
 35034  001F64  0A01               	xorlw	1	; case 15
 35035  001F66  B4D8               	btfsc	status,2,c
 35036  001F68  D781               	goto	l2157
 35037  001F6A  0A1F               	xorlw	31	; case 16
 35038  001F6C  B4D8               	btfsc	status,2,c
 35039  001F6E  D780               	goto	l2158
 35040  001F70  0A01               	xorlw	1	; case 17
 35041  001F72  B4D8               	btfsc	status,2,c
 35042  001F74  D77F               	goto	l2159
 35043  001F76  0A03               	xorlw	3	; case 18
 35044  001F78  B4D8               	btfsc	status,2,c
 35045  001F7A  D77E               	goto	l2160
 35046  001F7C  0A01               	xorlw	1	; case 19
 35047  001F7E  B4D8               	btfsc	status,2,c
 35048  001F80  D77D               	goto	l2161
 35049  001F82  0A07               	xorlw	7	; case 20
 35050  001F84  B4D8               	btfsc	status,2,c
 35051  001F86  D77C               	goto	l2162
 35052  001F88  0A01               	xorlw	1	; case 21
 35053  001F8A  B4D8               	btfsc	status,2,c
 35054  001F8C  D77B               	goto	l2163
 35055  001F8E  0A03               	xorlw	3	; case 22
 35056  001F90  B4D8               	btfsc	status,2,c
 35057  001F92  D77A               	goto	l2164
 35058  001F94  0A01               	xorlw	1	; case 23
 35059  001F96  B4D8               	btfsc	status,2,c
 35060  001F98  D779               	goto	l2165
 35061  001F9A  0A0F               	xorlw	15	; case 24
 35062  001F9C  B4D8               	btfsc	status,2,c
 35063  001F9E  D778               	goto	l2166
 35064  001FA0  0A01               	xorlw	1	; case 25
 35065  001FA2  B4D8               	btfsc	status,2,c
 35066  001FA4  D777               	goto	l2167
 35067  001FA6  0A03               	xorlw	3	; case 26
 35068  001FA8  B4D8               	btfsc	status,2,c
 35069  001FAA  D776               	goto	l2168
 35070  001FAC  0A01               	xorlw	1	; case 27
 35071  001FAE  B4D8               	btfsc	status,2,c
 35072  001FB0  D775               	goto	l2169
 35073  001FB2  0A07               	xorlw	7	; case 28
 35074  001FB4  B4D8               	btfsc	status,2,c
 35075  001FB6  D774               	goto	l2170
 35076  001FB8  0A01               	xorlw	1	; case 29
 35077  001FBA  B4D8               	btfsc	status,2,c
 35078  001FBC  D773               	goto	l2171
 35079  001FBE  0A03               	xorlw	3	; case 30
 35080  001FC0  B4D8               	btfsc	status,2,c
 35081  001FC2  D772               	goto	l2172
 35082  001FC4  0A01               	xorlw	1	; case 31
 35083  001FC6  B4D8               	btfsc	status,2,c
 35084  001FC8  D771               	goto	l2173
 35085  001FCA  0A37               	xorlw	55	; case 40
 35086  001FCC  B4D8               	btfsc	status,2,c
 35087  001FCE  D770               	goto	l2174
 35088  001FD0  0A01               	xorlw	1	; case 41
 35089  001FD2  B4D8               	btfsc	status,2,c
 35090  001FD4  D76F               	goto	l2175
 35091  001FD6  0A05               	xorlw	5	; case 44
 35092  001FD8  B4D8               	btfsc	status,2,c
 35093  001FDA  D76E               	goto	l2176
 35094  001FDC  0A01               	xorlw	1	; case 45
 35095  001FDE  B4D8               	btfsc	status,2,c
 35096  001FE0  D76D               	goto	l2177
 35097  001FE2  0A03               	xorlw	3	; case 46
 35098  001FE4  B4D8               	btfsc	status,2,c
 35099  001FE6  D76C               	goto	l2178
 35100  001FE8  0A01               	xorlw	1	; case 47
 35101  001FEA  B4D8               	btfsc	status,2,c
 35102  001FEC  D769               	goto	l2178
 35103  001FEE  0A19               	xorlw	25	; case 54
 35104  001FF0  B4D8               	btfsc	status,2,c
 35105  001FF2  D768               	goto	l2180
 35106  001FF4  0A01               	xorlw	1	; case 55
 35107  001FF6  B4D8               	btfsc	status,2,c
 35108  001FF8  D767               	goto	l2181
 35109  001FFA  0A0F               	xorlw	15	; case 56
 35110  001FFC  B4D8               	btfsc	status,2,c
 35111  001FFE  D766               	goto	l2182
 35112  002000  0A01               	xorlw	1	; case 57
 35113  002002  B4D8               	btfsc	status,2,c
 35114  002004  D765               	goto	l2183
 35115  002006  0A03               	xorlw	3	; case 58
 35116  002008  B4D8               	btfsc	status,2,c
 35117  00200A  D764               	goto	l2184
 35118  00200C  0A01               	xorlw	1	; case 59
 35119  00200E  B4D8               	btfsc	status,2,c
 35120  002010  D763               	goto	l2185
 35121  002012  0A07               	xorlw	7	; case 60
 35122  002014  B4D8               	btfsc	status,2,c
 35123  002016  D762               	goto	l2186
 35124  002018  0A01               	xorlw	1	; case 61
 35125  00201A  B4D8               	btfsc	status,2,c
 35126  00201C  D761               	goto	l2187
 35127  00201E  D766               	goto	l2190
 35128  002020                     l16285:
 35129                           
 35130                           ; Switch size 1, requested type "space"
 35131                           ; Number of cases is 2, Range of values is 254 to 255
 35132                           ; switch strategies available:
 35133                           ; Name         Instructions Cycles
 35134                           ; simple_byte            7     4 (average)
 35135                           ;	Chosen strategy is simple_byte
 35136  002020  5003               	movf	??__get_fbr,w,c
 35137  002022  0AFE               	xorlw	254	; case 254
 35138  002024  B4D8               	btfsc	status,2,c
 35139  002026  D75E               	goto	l2188
 35140  002028  0A01               	xorlw	1	; case 255
 35141  00202A  B4D8               	btfsc	status,2,c
 35142  00202C  D75D               	goto	l2189
 35143  00202E  D75E               	goto	l2190
 35144  002030                     __end_of__get_fbr:
 35145                           	opt stack 0
 35146                           tosu	equ	0xFFF
 35147                           tosh	equ	0xFFE
 35148                           tosl	equ	0xFFD
 35149                           pclath	equ	0xFFA
 35150                           tblptru	equ	0xFF8
 35151                           tblptrh	equ	0xFF7
 35152                           tblptrl	equ	0xFF6
 35153                           tablat	equ	0xFF5
 35154                           prodh	equ	0xFF4
 35155                           prodl	equ	0xFF3
 35156                           intcon	equ	0xFF2
 35157                           intcon2	equ	0xFF1
 35158                           intcon3	equ	0xFF0
 35159                           indf0	equ	0xFEF
 35160                           postinc0	equ	0xFEE
 35161                           fsr0h	equ	0xFEA
 35162                           fsr0l	equ	0xFE9
 35163                           wreg	equ	0xFE8
 35164                           indf1	equ	0xFE7
 35165                           postdec1	equ	0xFE5
 35166                           plusw1	equ	0xFE3
 35167                           fsr1h	equ	0xFE2
 35168                           fsr1l	equ	0xFE1
 35169                           indf2	equ	0xFDF
 35170                           postinc2	equ	0xFDE
 35171                           postdec2	equ	0xFDD
 35172                           plusw2	equ	0xFDB
 35173                           fsr2h	equ	0xFDA
 35174                           fsr2l	equ	0xFD9
 35175                           status	equ	0xFD8
 35176                           
 35177 ;; *************** function __get_fat *****************
 35178 ;; Defined at:
 35179 ;;		line 1125 in file "fat16.c"
 35180 ;; Parameters:    Size  Location     Type
 35181 ;;  idx             2    0[COMRAM] unsigned int 
 35182 ;; Auto vars:     Size  Location     Type
 35183 ;;		None
 35184 ;; Return value:  Size  Location     Type
 35185 ;;                  1    wreg      unsigned char 
 35186 ;; Registers used:
 35187 ;;		wreg, status,2, status,0
 35188 ;; Tracked objects:
 35189 ;;		On entry : 0/0
 35190 ;;		On exit  : 0/0
 35191 ;;		Unchanged: 0/0
 35192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35197 ;;Total ram usage:        4 bytes
 35198 ;; Hardware stack levels used:    1
 35199 ;; This function calls:
 35200 ;;		Nothing
 35201 ;; This function is called by:
 35202 ;;		_fat_format
 35203 ;; This function uses a non-reentrant model
 35204 ;;
 35205                           
 35206                           	psect	text175
 35207  007F7E                     __ptext175:
 35208                           	opt stack 0
 35209  007F7E                     __get_fat:
 35210                           	opt stack 27
 35211                           
 35212                           ;fat16.c: 1127: switch (idx)
 35213                           
 35214                           ;incstack = 0
 35215  007F7E  D00E               	goto	l2194
 35216  007F80                     
 35217                           ;fat16.c: 1131: return 0xF8;
 35218  007F80  0EF8               	movlw	248
 35219  007F82  0012               	return	
 35220  007F84                     
 35221                           ;fat16.c: 1133: return 0xFF;
 35222  007F84  0EFF               	movlw	255
 35223  007F86  0012               	return	
 35224  007F88                     
 35225                           ;fat16.c: 1135: return 0xFF;
 35226  007F88  0EFF               	movlw	255
 35227  007F8A  0012               	return	
 35228  007F8C                     
 35229                           ;fat16.c: 1137: return 0xFF;
 35230  007F8C  0EFF               	movlw	255
 35231  007F8E  0012               	return	
 35232  007F90                     
 35233                           ;fat16.c: 1140: return 0xFF;
 35234  007F90  0EFF               	movlw	255
 35235  007F92  0012               	return	
 35236  007F94                     
 35237                           ;fat16.c: 1142: return 0xFF;
 35238  007F94  0EFF               	movlw	255
 35239  007F96  0012               	return	
 35240  007F98                     
 35241                           ;fat16.c: 1144: return 0X00;
 35242  007F98  0E00               	movlw	0
 35243                           
 35244                           ;fat16.c: 1145: }
 35245  007F9A  0012               	return	
 35246  007F9C                     l2194:
 35247  007F9C  C001  F003         	movff	__get_fat@idx,??__get_fat
 35248  007FA0  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 35249                           
 35250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35251                           ; Switch size 1, requested type "space"
 35252                           ; Number of cases is 1, Range of values is 0 to 0
 35253                           ; switch strategies available:
 35254                           ; Name         Instructions Cycles
 35255                           ; simple_byte            4     3 (average)
 35256                           ;	Chosen strategy is simple_byte
 35257  007FA4  5004               	movf	??__get_fat+1,w,c
 35258  007FA6  0A00               	xorlw	0	; case 0
 35259  007FA8  A4D8               	btfss	status,2,c
 35260  007FAA  D7F6               	goto	l2202
 35261                           
 35262                           ; Switch size 1, requested type "space"
 35263                           ; Number of cases is 6, Range of values is 0 to 5
 35264                           ; switch strategies available:
 35265                           ; Name         Instructions Cycles
 35266                           ; simple_byte           19    10 (average)
 35267                           ;	Chosen strategy is simple_byte
 35268  007FAC  5003               	movf	??__get_fat,w,c
 35269  007FAE  0A00               	xorlw	0	; case 0
 35270  007FB0  B4D8               	btfsc	status,2,c
 35271  007FB2  D7E6               	goto	l2195
 35272  007FB4  0A01               	xorlw	1	; case 1
 35273  007FB6  B4D8               	btfsc	status,2,c
 35274  007FB8  D7E5               	goto	l2197
 35275  007FBA  0A03               	xorlw	3	; case 2
 35276  007FBC  B4D8               	btfsc	status,2,c
 35277  007FBE  D7E4               	goto	l2198
 35278  007FC0  0A01               	xorlw	1	; case 3
 35279  007FC2  B4D8               	btfsc	status,2,c
 35280  007FC4  D7E3               	goto	l2199
 35281  007FC6  0A07               	xorlw	7	; case 4
 35282  007FC8  B4D8               	btfsc	status,2,c
 35283  007FCA  D7E2               	goto	l2200
 35284  007FCC  0A01               	xorlw	1	; case 5
 35285  007FCE  B4D8               	btfsc	status,2,c
 35286  007FD0  D7E1               	goto	l2201
 35287  007FD2  D7E2               	goto	l2202
 35288  007FD4                     __end_of__get_fat:
 35289                           	opt stack 0
 35290                           tosu	equ	0xFFF
 35291                           tosh	equ	0xFFE
 35292                           tosl	equ	0xFFD
 35293                           pclath	equ	0xFFA
 35294                           tblptru	equ	0xFF8
 35295                           tblptrh	equ	0xFF7
 35296                           tblptrl	equ	0xFF6
 35297                           tablat	equ	0xFF5
 35298                           prodh	equ	0xFF4
 35299                           prodl	equ	0xFF3
 35300                           intcon	equ	0xFF2
 35301                           intcon2	equ	0xFF1
 35302                           intcon3	equ	0xFF0
 35303                           indf0	equ	0xFEF
 35304                           postinc0	equ	0xFEE
 35305                           fsr0h	equ	0xFEA
 35306                           fsr0l	equ	0xFE9
 35307                           wreg	equ	0xFE8
 35308                           indf1	equ	0xFE7
 35309                           postdec1	equ	0xFE5
 35310                           plusw1	equ	0xFE3
 35311                           fsr1h	equ	0xFE2
 35312                           fsr1l	equ	0xFE1
 35313                           indf2	equ	0xFDF
 35314                           postinc2	equ	0xFDE
 35315                           postdec2	equ	0xFDD
 35316                           plusw2	equ	0xFDB
 35317                           fsr2h	equ	0xFDA
 35318                           fsr2l	equ	0xFD9
 35319                           status	equ	0xFD8
 35320                           
 35321 ;; *************** function __get_data *****************
 35322 ;; Defined at:
 35323 ;;		line 1221 in file "fat16.c"
 35324 ;; Parameters:    Size  Location     Type
 35325 ;;  idx             2    0[COMRAM] unsigned int 
 35326 ;; Auto vars:     Size  Location     Type
 35327 ;;		None
 35328 ;; Return value:  Size  Location     Type
 35329 ;;                  1    wreg      unsigned char 
 35330 ;; Registers used:
 35331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35332 ;; Tracked objects:
 35333 ;;		On entry : 0/0
 35334 ;;		On exit  : 0/0
 35335 ;;		Unchanged: 0/0
 35336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35341 ;;Total ram usage:        2 bytes
 35342 ;; Hardware stack levels used:    1
 35343 ;; This function calls:
 35344 ;;		Nothing
 35345 ;; This function is called by:
 35346 ;;		_fat_format
 35347 ;; This function uses a non-reentrant model
 35348 ;;
 35349                           
 35350                           	psect	text176
 35351  008ACE                     __ptext176:
 35352                           	opt stack 0
 35353  008ACE                     __get_data:
 35354                           	opt stack 27
 35355                           
 35356                           ;fat16.c: 1223: if(idx < 12)
 35357                           
 35358                           ;incstack = 0
 35359  008ACE  5002               	movf	__get_data@idx+1,w,c
 35360  008AD0  E110               	bnz	l12771
 35361  008AD2  0E0C               	movlw	12
 35362  008AD4  5C01               	subwf	__get_data@idx,w,c
 35363  008AD6  B0D8               	btfsc	status,0,c
 35364  008AD8  D00C               	goto	l2238
 35365                           
 35366                           ;fat16.c: 1224: {;fat16.c: 1225: return "hello world!"[idx];
 35367  008ADA  0ED0               	movlw	low STR_12
 35368  008ADC  2401               	addwf	__get_data@idx,w,c
 35369  008ADE  6EF6               	movwf	tblptrl,c
 35370  008AE0  0E9F               	movlw	high STR_12
 35371  008AE2  2002               	addwfc	__get_data@idx+1,w,c
 35372  008AE4  6EF7               	movwf	tblptrh,c
 35373  008AE6                     	if	1	;There are 3 active tblptr bytes
 35374  008AE6  6AF8               	clrf	tblptru,c
 35375  008AE8  0E00               	movlw	low (__mediumconst shr (0+16))
 35376  008AEA  22F8               	addwfc	tblptru,f,c
 35377  008AEC                     	endif
 35378  008AEC  0008               	tblrd		*
 35379  008AEE  50F5               	movf	tablat,w,c
 35380  008AF0  0012               	return	
 35381  008AF2                     l2238:
 35382  008AF2                     l12771:
 35383                           
 35384                           ;fat16.c: 1226: };fat16.c: 1227: return 0X00;
 35385  008AF2  0E00               	movlw	0
 35386  008AF4  0012               	return	
 35387  008AF6                     __end_of__get_data:
 35388                           	opt stack 0
 35389                           tosu	equ	0xFFF
 35390                           tosh	equ	0xFFE
 35391                           tosl	equ	0xFFD
 35392                           pclath	equ	0xFFA
 35393                           tblptru	equ	0xFF8
 35394                           tblptrh	equ	0xFF7
 35395                           tblptrl	equ	0xFF6
 35396                           tablat	equ	0xFF5
 35397                           prodh	equ	0xFF4
 35398                           prodl	equ	0xFF3
 35399                           intcon	equ	0xFF2
 35400                           intcon2	equ	0xFF1
 35401                           intcon3	equ	0xFF0
 35402                           indf0	equ	0xFEF
 35403                           postinc0	equ	0xFEE
 35404                           fsr0h	equ	0xFEA
 35405                           fsr0l	equ	0xFE9
 35406                           wreg	equ	0xFE8
 35407                           indf1	equ	0xFE7
 35408                           postdec1	equ	0xFE5
 35409                           plusw1	equ	0xFE3
 35410                           fsr1h	equ	0xFE2
 35411                           fsr1l	equ	0xFE1
 35412                           indf2	equ	0xFDF
 35413                           postinc2	equ	0xFDE
 35414                           postdec2	equ	0xFDD
 35415                           plusw2	equ	0xFDB
 35416                           fsr2h	equ	0xFDA
 35417                           fsr2l	equ	0xFD9
 35418                           status	equ	0xFD8
 35419                           
 35420 ;; *************** function __parse_file_resize *****************
 35421 ;; Defined at:
 35422 ;;		line 570 in file "api.c"
 35423 ;; Parameters:    Size  Location     Type
 35424 ;;  data            2   84[COMRAM] PTR unsigned char 
 35425 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35426 ;; Auto vars:     Size  Location     Type
 35427 ;;  file_size       4   87[COMRAM] unsigned long 
 35428 ;; Return value:  Size  Location     Type
 35429 ;;                  1    wreg      unsigned char 
 35430 ;; Registers used:
 35431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35432 ;; Tracked objects:
 35433 ;;		On entry : 0/0
 35434 ;;		On exit  : 0/0
 35435 ;;		Unchanged: 0/0
 35436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35440 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35441 ;;Total ram usage:        7 bytes
 35442 ;; Hardware stack levels used:    1
 35443 ;; Hardware stack levels required when called:    8
 35444 ;; This function calls:
 35445 ;;		_fat_resize_file
 35446 ;; This function is called by:
 35447 ;;		__parse_command_long
 35448 ;; This function uses a non-reentrant model
 35449 ;;
 35450                           
 35451                           	psect	text177
 35452  005700                     __ptext177:
 35453                           	opt stack 0
 35454  005700                     __parse_file_resize:
 35455                           	opt stack 20
 35456                           
 35457                           ;api.c: 573: uint32_t file_size;;api.c: 574: if((data[0]!=COMMAND_FILE_RESIZE) || (data[
      +                          6]!=0x4C) || (data[7]!=0xEA))
 35458                           
 35459                           ;incstack = 0
 35460  005700  C055  FFD9         	movff	__parse_file_resize@data,fsr2l
 35461  005704  C056  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 35462  005708  0E50               	movlw	80
 35463  00570A  18DE               	xorwf	postinc2,w,c
 35464  00570C  A4D8               	btfss	status,2,c
 35465  00570E  D014               	goto	u10780
 35466  005710  EE20 F006          	lfsr	2,6
 35467  005714  5055               	movf	__parse_file_resize@data,w,c
 35468  005716  26D9               	addwf	fsr2l,f,c
 35469  005718  5056               	movf	__parse_file_resize@data+1,w,c
 35470  00571A  22DA               	addwfc	fsr2h,f,c
 35471  00571C  0E4C               	movlw	76
 35472  00571E  18DE               	xorwf	postinc2,w,c
 35473  005720  A4D8               	btfss	status,2,c
 35474  005722  D00A               	goto	u10780
 35475  005724  EE20 F007          	lfsr	2,7
 35476  005728  5055               	movf	__parse_file_resize@data,w,c
 35477  00572A  26D9               	addwf	fsr2l,f,c
 35478  00572C  5056               	movf	__parse_file_resize@data+1,w,c
 35479  00572E  22DA               	addwfc	fsr2h,f,c
 35480  005730  0EEA               	movlw	234
 35481  005732  18DE               	xorwf	postinc2,w,c
 35482  005734  B4D8               	btfsc	status,2,c
 35483  005736  D002               	goto	l2801
 35484  005738                     u10780:
 35485                           
 35486                           ;api.c: 575: {;api.c: 576: return 8;
 35487  005738  0E08               	movlw	8
 35488  00573A  0012               	return	
 35489  00573C                     l2801:
 35490                           
 35491                           ;api.c: 577: };api.c: 580: file_size = data[2];
 35492  00573C  EE20 F002          	lfsr	2,2
 35493  005740  5055               	movf	__parse_file_resize@data,w,c
 35494  005742  26D9               	addwf	fsr2l,f,c
 35495  005744  5056               	movf	__parse_file_resize@data+1,w,c
 35496  005746  22DA               	addwfc	fsr2h,f,c
 35497  005748  50DF               	movf	indf2,w,c
 35498  00574A  6E57               	movwf	??__parse_file_resize& (0+255),c
 35499  00574C  5057               	movf	??__parse_file_resize,w,c
 35500  00574E  6E58               	movwf	__parse_file_resize@file_size,c
 35501  005750  6A59               	clrf	__parse_file_resize@file_size+1,c
 35502  005752  6A5A               	clrf	__parse_file_resize@file_size+2,c
 35503  005754  6A5B               	clrf	__parse_file_resize@file_size+3,c
 35504                           
 35505                           ;api.c: 581: file_size <<= 8;
 35506  005756  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35507  00575A  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35508  00575E  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35509  005762  6A58               	clrf	__parse_file_resize@file_size,c
 35510                           
 35511                           ;api.c: 582: file_size |= data[3];
 35512  005764  EE20 F003          	lfsr	2,3
 35513  005768  5055               	movf	__parse_file_resize@data,w,c
 35514  00576A  26D9               	addwf	fsr2l,f,c
 35515  00576C  5056               	movf	__parse_file_resize@data+1,w,c
 35516  00576E  22DA               	addwfc	fsr2h,f,c
 35517  005770  50DF               	movf	indf2,w,c
 35518  005772  6E57               	movwf	??__parse_file_resize& (0+255),c
 35519  005774  5057               	movf	??__parse_file_resize,w,c
 35520  005776  1258               	iorwf	__parse_file_resize@file_size,f,c
 35521                           
 35522                           ;api.c: 583: file_size <<= 8;
 35523  005778  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35524  00577C  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35525  005780  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35526  005784  6A58               	clrf	__parse_file_resize@file_size,c
 35527                           
 35528                           ;api.c: 584: file_size |= data[4];
 35529  005786  EE20 F004          	lfsr	2,4
 35530  00578A  5055               	movf	__parse_file_resize@data,w,c
 35531  00578C  26D9               	addwf	fsr2l,f,c
 35532  00578E  5056               	movf	__parse_file_resize@data+1,w,c
 35533  005790  22DA               	addwfc	fsr2h,f,c
 35534  005792  50DF               	movf	indf2,w,c
 35535  005794  6E57               	movwf	??__parse_file_resize& (0+255),c
 35536  005796  5057               	movf	??__parse_file_resize,w,c
 35537  005798  1258               	iorwf	__parse_file_resize@file_size,f,c
 35538                           
 35539                           ;api.c: 585: file_size <<= 8;
 35540  00579A  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35541  00579E  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35542  0057A2  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35543  0057A6  6A58               	clrf	__parse_file_resize@file_size,c
 35544                           
 35545                           ;api.c: 586: file_size |= data[5];
 35546  0057A8  EE20 F005          	lfsr	2,5
 35547  0057AC  5055               	movf	__parse_file_resize@data,w,c
 35548  0057AE  26D9               	addwf	fsr2l,f,c
 35549  0057B0  5056               	movf	__parse_file_resize@data+1,w,c
 35550  0057B2  22DA               	addwfc	fsr2h,f,c
 35551  0057B4  50DF               	movf	indf2,w,c
 35552  0057B6  6E57               	movwf	??__parse_file_resize& (0+255),c
 35553  0057B8  5057               	movf	??__parse_file_resize,w,c
 35554  0057BA  1258               	iorwf	__parse_file_resize@file_size,f,c
 35555                           
 35556                           ;api.c: 589: fat_resize_file(data[1], file_size);
 35557  0057BC  C058  F04D         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 35558  0057C0  C059  F04E         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 35559  0057C4  C05A  F04F         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 35560  0057C8  C05B  F050         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 35561  0057CC  EE20 F001          	lfsr	2,1
 35562  0057D0  5055               	movf	__parse_file_resize@data,w,c
 35563  0057D2  26D9               	addwf	fsr2l,f,c
 35564  0057D4  5056               	movf	__parse_file_resize@data+1,w,c
 35565  0057D6  22DA               	addwfc	fsr2h,f,c
 35566  0057D8  50DF               	movf	indf2,w,c
 35567  0057DA  ECF3  F026         	call	_fat_resize_file
 35568                           
 35569                           ;api.c: 590: return 8;
 35570  0057DE  0E08               	movlw	8
 35571  0057E0  0012               	return	
 35572  0057E2                     __end_of__parse_file_resize:
 35573                           	opt stack 0
 35574                           tosu	equ	0xFFF
 35575                           tosh	equ	0xFFE
 35576                           tosl	equ	0xFFD
 35577                           pclath	equ	0xFFA
 35578                           tblptru	equ	0xFF8
 35579                           tblptrh	equ	0xFF7
 35580                           tblptrl	equ	0xFF6
 35581                           tablat	equ	0xFF5
 35582                           prodh	equ	0xFF4
 35583                           prodl	equ	0xFF3
 35584                           intcon	equ	0xFF2
 35585                           intcon2	equ	0xFF1
 35586                           intcon3	equ	0xFF0
 35587                           indf0	equ	0xFEF
 35588                           postinc0	equ	0xFEE
 35589                           fsr0h	equ	0xFEA
 35590                           fsr0l	equ	0xFE9
 35591                           wreg	equ	0xFE8
 35592                           indf1	equ	0xFE7
 35593                           postdec1	equ	0xFE5
 35594                           plusw1	equ	0xFE3
 35595                           fsr1h	equ	0xFE2
 35596                           fsr1l	equ	0xFE1
 35597                           indf2	equ	0xFDF
 35598                           postinc2	equ	0xFDE
 35599                           postdec2	equ	0xFDD
 35600                           plusw2	equ	0xFDB
 35601                           fsr2h	equ	0xFDA
 35602                           fsr2l	equ	0xFD9
 35603                           status	equ	0xFD8
 35604                           
 35605 ;; *************** function __parse_file_rename *****************
 35606 ;; Defined at:
 35607 ;;		line 631 in file "api.c"
 35608 ;; Parameters:    Size  Location     Type
 35609 ;;  data            2    0[BANK0 ] PTR unsigned char 
 35610 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35611 ;; Auto vars:     Size  Location     Type
 35612 ;;		None
 35613 ;; Return value:  Size  Location     Type
 35614 ;;                  1    wreg      unsigned char 
 35615 ;; Registers used:
 35616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35617 ;; Tracked objects:
 35618 ;;		On entry : 0/0
 35619 ;;		On exit  : 0/0
 35620 ;;		Unchanged: 0/0
 35621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35625 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35626 ;;Total ram usage:        3 bytes
 35627 ;; Hardware stack levels used:    1
 35628 ;; Hardware stack levels required when called:    7
 35629 ;; This function calls:
 35630 ;;		_fat_rename_file
 35631 ;; This function is called by:
 35632 ;;		__parse_command_long
 35633 ;; This function uses a non-reentrant model
 35634 ;;
 35635                           
 35636                           	psect	text178
 35637  0077A8                     __ptext178:
 35638                           	opt stack 0
 35639  0077A8                     __parse_file_rename:
 35640                           	opt stack 21
 35641                           
 35642                           ;api.c: 634: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 35643                           
 35644                           ;incstack = 0
 35645  0077A8  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 35646  0077AC  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 35647  0077B0  0E53               	movlw	83
 35648  0077B2  18DE               	xorwf	postinc2,w,c
 35649  0077B4  A4D8               	btfss	status,2,c
 35650  0077B6  D015               	goto	u10870
 35651  0077B8  0100               	movlb	0	; () banked
 35652  0077BA  EE20 F00D          	lfsr	2,13
 35653  0077BE  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35654  0077C0  26D9               	addwf	fsr2l,f,c
 35655  0077C2  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35656  0077C4  22DA               	addwfc	fsr2h,f,c
 35657  0077C6  0E7E               	movlw	126
 35658  0077C8  18DE               	xorwf	postinc2,w,c
 35659  0077CA  A4D8               	btfss	status,2,c
 35660  0077CC  D00A               	goto	u10870
 35661                           
 35662                           ; BSR set to: 0
 35663  0077CE  EE20 F00E          	lfsr	2,14
 35664  0077D2  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35665  0077D4  26D9               	addwf	fsr2l,f,c
 35666  0077D6  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35667  0077D8  22DA               	addwfc	fsr2h,f,c
 35668  0077DA  0E18               	movlw	24
 35669  0077DC  18DE               	xorwf	postinc2,w,c
 35670  0077DE  B4D8               	btfsc	status,2,c
 35671  0077E0  D002               	goto	l2819
 35672  0077E2                     u10870:
 35673                           
 35674                           ;api.c: 635: {;api.c: 636: return 15;
 35675                           
 35676                           ; BSR set to: 0
 35677  0077E2  0E0F               	movlw	15
 35678  0077E4  0012               	return	
 35679  0077E6                     l2819:
 35680                           
 35681                           ;api.c: 637: };api.c: 640: fat_rename_file(data[1], &data[2], &data[10]);
 35682  0077E6  0E02               	movlw	2
 35683  0077E8  0100               	movlb	0	; () banked
 35684  0077EA  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 35685  0077EC  6E38               	movwf	fat_rename_file@name,c
 35686  0077EE  0E00               	movlw	0
 35687  0077F0  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 35688  0077F2  6E39               	movwf	fat_rename_file@name+1,c
 35689  0077F4  0E0A               	movlw	10
 35690  0077F6  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 35691  0077F8  6E3A               	movwf	fat_rename_file@extension,c
 35692  0077FA  0E00               	movlw	0
 35693  0077FC  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 35694  0077FE  6E3B               	movwf	fat_rename_file@extension+1,c
 35695  007800  EE20 F001          	lfsr	2,1
 35696  007804  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35697  007806  26D9               	addwf	fsr2l,f,c
 35698  007808  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35699  00780A  22DA               	addwfc	fsr2h,f,c
 35700  00780C  50DF               	movf	indf2,w,c
 35701  00780E  EC68  F036         	call	_fat_rename_file
 35702                           
 35703                           ;api.c: 641: return 15;
 35704  007812  0E0F               	movlw	15
 35705  007814  0012               	return	
 35706  007816                     __end_of__parse_file_rename:
 35707                           	opt stack 0
 35708                           tosu	equ	0xFFF
 35709                           tosh	equ	0xFFE
 35710                           tosl	equ	0xFFD
 35711                           pclath	equ	0xFFA
 35712                           tblptru	equ	0xFF8
 35713                           tblptrh	equ	0xFF7
 35714                           tblptrl	equ	0xFF6
 35715                           tablat	equ	0xFF5
 35716                           prodh	equ	0xFF4
 35717                           prodl	equ	0xFF3
 35718                           intcon	equ	0xFF2
 35719                           intcon2	equ	0xFF1
 35720                           intcon3	equ	0xFF0
 35721                           indf0	equ	0xFEF
 35722                           postinc0	equ	0xFEE
 35723                           fsr0h	equ	0xFEA
 35724                           fsr0l	equ	0xFE9
 35725                           wreg	equ	0xFE8
 35726                           indf1	equ	0xFE7
 35727                           postdec1	equ	0xFE5
 35728                           plusw1	equ	0xFE3
 35729                           fsr1h	equ	0xFE2
 35730                           fsr1l	equ	0xFE1
 35731                           indf2	equ	0xFDF
 35732                           postinc2	equ	0xFDE
 35733                           postdec2	equ	0xFDD
 35734                           plusw2	equ	0xFDB
 35735                           fsr2h	equ	0xFDA
 35736                           fsr2l	equ	0xFD9
 35737                           status	equ	0xFD8
 35738                           
 35739 ;; *************** function _fat_rename_file *****************
 35740 ;; Defined at:
 35741 ;;		line 717 in file "fat16.c"
 35742 ;; Parameters:    Size  Location     Type
 35743 ;;  file_number     1    wreg     unsigned char 
 35744 ;;  name            2   55[COMRAM] PTR unsigned char 
 35745 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35746 ;;  extension       2   57[COMRAM] PTR unsigned char 
 35747 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35748 ;; Auto vars:     Size  Location     Type
 35749 ;;  file_number     1   60[COMRAM] unsigned char 
 35750 ;;  root           32   61[COMRAM] struct .
 35751 ;;  cntr            1   93[COMRAM] unsigned char 
 35752 ;;  return_code     1   59[COMRAM] unsigned char 
 35753 ;; Return value:  Size  Location     Type
 35754 ;;                  1    wreg      void 
 35755 ;; Registers used:
 35756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35757 ;; Tracked objects:
 35758 ;;		On entry : 0/0
 35759 ;;		On exit  : 0/0
 35760 ;;		Unchanged: 0/0
 35761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35763 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35765 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35766 ;;Total ram usage:       39 bytes
 35767 ;; Hardware stack levels used:    1
 35768 ;; Hardware stack levels required when called:    6
 35769 ;; This function calls:
 35770 ;;		__write_root
 35771 ;;		_fat_get_file_information
 35772 ;; This function is called by:
 35773 ;;		__parse_file_rename
 35774 ;; This function uses a non-reentrant model
 35775 ;;
 35776                           
 35777                           	psect	text179
 35778  006CD0                     __ptext179:
 35779                           	opt stack 0
 35780  006CD0                     _fat_rename_file:
 35781                           	opt stack 21
 35782                           
 35783                           ;incstack = 0
 35784                           ;fat_rename_file@file_number stored from wreg
 35785  006CD0  6E3D               	movwf	fat_rename_file@file_number,c
 35786                           
 35787                           ;fat16.c: 719: rootEntry_t root;;fat16.c: 720: uint8_t cntr;;fat16.c: 721: uint8_t retur
      +                          n_code;;fat16.c: 724: return_code = fat_get_file_information(file_number, &root);
 35788  006CD2  0E3E               	movlw	low fat_rename_file@root
 35789  006CD4  6E30               	movwf	fat_get_file_information@data,c
 35790  006CD6  0E00               	movlw	high fat_rename_file@root
 35791  006CD8  6E31               	movwf	fat_get_file_information@data+1,c
 35792  006CDA  503D               	movf	fat_rename_file@file_number,w,c
 35793  006CDC  EC2B  F03B         	call	_fat_get_file_information
 35794  006CE0  6E3C               	movwf	fat_rename_file@return_code,c
 35795                           
 35796                           ;fat16.c: 725: if(return_code!=0x00)
 35797  006CE2  503C               	movf	fat_rename_file@return_code,w,c
 35798  006CE4  A4D8               	btfss	status,2,c
 35799  006CE6  0012               	return	
 35800                           
 35801                           ;fat16.c: 729: };fat16.c: 732: for(cntr=0; cntr<8; ++cntr)
 35802                           
 35803                           ;fat16.c: 726: {;fat16.c: 728: return;
 35804  006CE8  0E00               	movlw	0
 35805  006CEA  6E5E               	movwf	fat_rename_file@cntr,c
 35806  006CEC                     l13297:
 35807  006CEC  0E07               	movlw	7
 35808  006CEE  645E               	cpfsgt	fat_rename_file@cntr,c
 35809  006CF0  D001               	goto	l2077
 35810  006CF2  D014               	goto	u10130
 35811  006CF4                     l2077:
 35812                           
 35813                           ;fat16.c: 733: {;fat16.c: 734: root.fileName[cntr] = name[cntr];
 35814  006CF4  505E               	movf	fat_rename_file@cntr,w,c
 35815  006CF6  0D01               	mullw	1
 35816  006CF8  50F3               	movf	prodl,w,c
 35817  006CFA  2438               	addwf	fat_rename_file@name,w,c
 35818  006CFC  6ED9               	movwf	fsr2l,c
 35819  006CFE  50F4               	movf	prodh,w,c
 35820  006D00  2039               	addwfc	fat_rename_file@name+1,w,c
 35821  006D02  6EDA               	movwf	fsr2h,c
 35822  006D04  505E               	movf	fat_rename_file@cntr,w,c
 35823  006D06  0D01               	mullw	1
 35824  006D08  0E3E               	movlw	low fat_rename_file@root
 35825  006D0A  24F3               	addwf	prodl,w,c
 35826  006D0C  6EE1               	movwf	fsr1l,c
 35827  006D0E  0E00               	movlw	high fat_rename_file@root
 35828  006D10  20F4               	addwfc	prodh,w,c
 35829  006D12  6EE2               	movwf	fsr1h,c
 35830  006D14  CFDF FFE7          	movff	indf2,indf1
 35831  006D18  2A5E               	incf	fat_rename_file@cntr,f,c
 35832  006D1A  D7E8               	goto	l13297
 35833  006D1C                     u10130:
 35834                           
 35835                           ;fat16.c: 735: };fat16.c: 738: for(cntr=0; cntr<3; ++cntr)
 35836  006D1C  0E00               	movlw	0
 35837  006D1E  6E5E               	movwf	fat_rename_file@cntr,c
 35838  006D20                     l13309:
 35839  006D20  0E02               	movlw	2
 35840  006D22  645E               	cpfsgt	fat_rename_file@cntr,c
 35841  006D24  D001               	goto	l2079
 35842  006D26  D018               	goto	u10150
 35843  006D28                     l2079:
 35844                           
 35845                           ;fat16.c: 739: {;fat16.c: 740: root.fileExtension[cntr] = extension[cntr];
 35846  006D28  505E               	movf	fat_rename_file@cntr,w,c
 35847  006D2A  0D01               	mullw	1
 35848  006D2C  50F3               	movf	prodl,w,c
 35849  006D2E  243A               	addwf	fat_rename_file@extension,w,c
 35850  006D30  6ED9               	movwf	fsr2l,c
 35851  006D32  50F4               	movf	prodh,w,c
 35852  006D34  203B               	addwfc	fat_rename_file@extension+1,w,c
 35853  006D36  6EDA               	movwf	fsr2h,c
 35854  006D38  505E               	movf	fat_rename_file@cntr,w,c
 35855  006D3A  0D01               	mullw	1
 35856  006D3C  0E08               	movlw	8
 35857  006D3E  26F3               	addwf	prodl,f,c
 35858  006D40  0E00               	movlw	0
 35859  006D42  22F4               	addwfc	prodh,f,c
 35860  006D44  0E3E               	movlw	low fat_rename_file@root
 35861  006D46  24F3               	addwf	prodl,w,c
 35862  006D48  6EE1               	movwf	fsr1l,c
 35863  006D4A  0E00               	movlw	high fat_rename_file@root
 35864  006D4C  20F4               	addwfc	prodh,w,c
 35865  006D4E  6EE2               	movwf	fsr1h,c
 35866  006D50  CFDF FFE7          	movff	indf2,indf1
 35867  006D54  2A5E               	incf	fat_rename_file@cntr,f,c
 35868  006D56  D7E4               	goto	l13309
 35869  006D58                     u10150:
 35870                           
 35871                           ;fat16.c: 741: };fat16.c: 744: _write_root(file_number, &root);
 35872  006D58  0E3E               	movlw	low fat_rename_file@root
 35873  006D5A  6E29               	movwf	__write_root@data,c
 35874  006D5C  0E00               	movlw	high fat_rename_file@root
 35875  006D5E  6E2A               	movwf	__write_root@data+1,c
 35876  006D60  503D               	movf	fat_rename_file@file_number,w,c
 35877  006D62  EC34  F042         	call	__write_root
 35878  006D66  0012               	return		;funcret
 35879  006D68                     __end_of_fat_rename_file:
 35880                           	opt stack 0
 35881                           tosu	equ	0xFFF
 35882                           tosh	equ	0xFFE
 35883                           tosl	equ	0xFFD
 35884                           pclath	equ	0xFFA
 35885                           tblptru	equ	0xFF8
 35886                           tblptrh	equ	0xFF7
 35887                           tblptrl	equ	0xFF6
 35888                           tablat	equ	0xFF5
 35889                           prodh	equ	0xFF4
 35890                           prodl	equ	0xFF3
 35891                           intcon	equ	0xFF2
 35892                           intcon2	equ	0xFF1
 35893                           intcon3	equ	0xFF0
 35894                           indf0	equ	0xFEF
 35895                           postinc0	equ	0xFEE
 35896                           fsr0h	equ	0xFEA
 35897                           fsr0l	equ	0xFE9
 35898                           wreg	equ	0xFE8
 35899                           indf1	equ	0xFE7
 35900                           postdec1	equ	0xFE5
 35901                           plusw1	equ	0xFE3
 35902                           fsr1h	equ	0xFE2
 35903                           fsr1l	equ	0xFE1
 35904                           indf2	equ	0xFDF
 35905                           postinc2	equ	0xFDE
 35906                           postdec2	equ	0xFDD
 35907                           plusw2	equ	0xFDB
 35908                           fsr2h	equ	0xFDA
 35909                           fsr2l	equ	0xFD9
 35910                           status	equ	0xFD8
 35911                           
 35912 ;; *************** function __parse_file_modify *****************
 35913 ;; Defined at:
 35914 ;;		line 658 in file "api.c"
 35915 ;; Parameters:    Size  Location     Type
 35916 ;;  data            2   85[COMRAM] PTR unsigned char 
 35917 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35918 ;; Auto vars:     Size  Location     Type
 35919 ;;  start_byte      4   90[COMRAM] unsigned long 
 35920 ;;  number_of_by    2   88[COMRAM] unsigned int 
 35921 ;; Return value:  Size  Location     Type
 35922 ;;                  1    wreg      unsigned char 
 35923 ;; Registers used:
 35924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35925 ;; Tracked objects:
 35926 ;;		On entry : 0/0
 35927 ;;		On exit  : 0/0
 35928 ;;		Unchanged: 0/0
 35929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35931 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35933 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35934 ;;Total ram usage:        9 bytes
 35935 ;; Hardware stack levels used:    1
 35936 ;; Hardware stack levels required when called:    8
 35937 ;; This function calls:
 35938 ;;		_fat_modify_file
 35939 ;; This function is called by:
 35940 ;;		__parse_command_long
 35941 ;; This function uses a non-reentrant model
 35942 ;;
 35943                           
 35944                           	psect	text180
 35945  0045B6                     __ptext180:
 35946                           	opt stack 0
 35947  0045B6                     __parse_file_modify:
 35948                           	opt stack 20
 35949                           
 35950                           ;api.c: 660: uint16_t number_of_bytes;;api.c: 661: uint32_t start_byte;;api.c: 664: if((
      +                          data[0]!=COMMAND_FILE_MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 35951                           
 35952                           ;incstack = 0
 35953  0045B6  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 35954  0045BA  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 35955  0045BE  0E55               	movlw	85
 35956  0045C0  18DE               	xorwf	postinc2,w,c
 35957  0045C2  A4D8               	btfss	status,2,c
 35958  0045C4  D014               	goto	u10930
 35959  0045C6  EE20 F007          	lfsr	2,7
 35960  0045CA  5056               	movf	__parse_file_modify@data,w,c
 35961  0045CC  26D9               	addwf	fsr2l,f,c
 35962  0045CE  5057               	movf	__parse_file_modify@data+1,w,c
 35963  0045D0  22DA               	addwfc	fsr2h,f,c
 35964  0045D2  0E0F               	movlw	15
 35965  0045D4  18DE               	xorwf	postinc2,w,c
 35966  0045D6  A4D8               	btfss	status,2,c
 35967  0045D8  D00A               	goto	u10930
 35968  0045DA  EE20 F008          	lfsr	2,8
 35969  0045DE  5056               	movf	__parse_file_modify@data,w,c
 35970  0045E0  26D9               	addwf	fsr2l,f,c
 35971  0045E2  5057               	movf	__parse_file_modify@data+1,w,c
 35972  0045E4  22DA               	addwfc	fsr2h,f,c
 35973  0045E6  0E9B               	movlw	155
 35974  0045E8  18DE               	xorwf	postinc2,w,c
 35975  0045EA  B4D8               	btfsc	status,2,c
 35976  0045EC  D002               	goto	l2831
 35977  0045EE                     u10930:
 35978                           
 35979                           ;api.c: 665: {;api.c: 667: return 65;
 35980  0045EE  0E41               	movlw	65
 35981  0045F0  0012               	return	
 35982  0045F2                     l2831:
 35983                           
 35984                           ;api.c: 668: };api.c: 671: number_of_bytes = data[6];
 35985  0045F2  EE20 F006          	lfsr	2,6
 35986  0045F6  5056               	movf	__parse_file_modify@data,w,c
 35987  0045F8  26D9               	addwf	fsr2l,f,c
 35988  0045FA  5057               	movf	__parse_file_modify@data+1,w,c
 35989  0045FC  22DA               	addwfc	fsr2h,f,c
 35990  0045FE  50DF               	movf	indf2,w,c
 35991  004600  6E58               	movwf	??__parse_file_modify& (0+255),c
 35992  004602  5058               	movf	??__parse_file_modify,w,c
 35993  004604  6E59               	movwf	__parse_file_modify@number_of_bytes,c
 35994  004606  6A5A               	clrf	__parse_file_modify@number_of_bytes+1,c
 35995                           
 35996                           ;api.c: 674: start_byte = data[2];
 35997  004608  EE20 F002          	lfsr	2,2
 35998  00460C  5056               	movf	__parse_file_modify@data,w,c
 35999  00460E  26D9               	addwf	fsr2l,f,c
 36000  004610  5057               	movf	__parse_file_modify@data+1,w,c
 36001  004612  22DA               	addwfc	fsr2h,f,c
 36002  004614  50DF               	movf	indf2,w,c
 36003  004616  6E58               	movwf	??__parse_file_modify& (0+255),c
 36004  004618  5058               	movf	??__parse_file_modify,w,c
 36005  00461A  6E5B               	movwf	__parse_file_modify@start_byte,c
 36006  00461C  6A5C               	clrf	__parse_file_modify@start_byte+1,c
 36007  00461E  6A5D               	clrf	__parse_file_modify@start_byte+2,c
 36008  004620  6A5E               	clrf	__parse_file_modify@start_byte+3,c
 36009                           
 36010                           ;api.c: 675: start_byte <<= 8;
 36011  004622  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36012  004626  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36013  00462A  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36014  00462E  6A5B               	clrf	__parse_file_modify@start_byte,c
 36015                           
 36016                           ;api.c: 676: start_byte |= data[3];
 36017  004630  EE20 F003          	lfsr	2,3
 36018  004634  5056               	movf	__parse_file_modify@data,w,c
 36019  004636  26D9               	addwf	fsr2l,f,c
 36020  004638  5057               	movf	__parse_file_modify@data+1,w,c
 36021  00463A  22DA               	addwfc	fsr2h,f,c
 36022  00463C  50DF               	movf	indf2,w,c
 36023  00463E  6E58               	movwf	??__parse_file_modify& (0+255),c
 36024  004640  5058               	movf	??__parse_file_modify,w,c
 36025  004642  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36026                           
 36027                           ;api.c: 677: start_byte <<= 8;
 36028  004644  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36029  004648  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36030  00464C  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36031  004650  6A5B               	clrf	__parse_file_modify@start_byte,c
 36032                           
 36033                           ;api.c: 678: start_byte |= data[4];
 36034  004652  EE20 F004          	lfsr	2,4
 36035  004656  5056               	movf	__parse_file_modify@data,w,c
 36036  004658  26D9               	addwf	fsr2l,f,c
 36037  00465A  5057               	movf	__parse_file_modify@data+1,w,c
 36038  00465C  22DA               	addwfc	fsr2h,f,c
 36039  00465E  50DF               	movf	indf2,w,c
 36040  004660  6E58               	movwf	??__parse_file_modify& (0+255),c
 36041  004662  5058               	movf	??__parse_file_modify,w,c
 36042  004664  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36043                           
 36044                           ;api.c: 679: start_byte <<= 8;
 36045  004666  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36046  00466A  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36047  00466E  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36048  004672  6A5B               	clrf	__parse_file_modify@start_byte,c
 36049                           
 36050                           ;api.c: 680: start_byte |= data[5];
 36051  004674  EE20 F005          	lfsr	2,5
 36052  004678  5056               	movf	__parse_file_modify@data,w,c
 36053  00467A  26D9               	addwf	fsr2l,f,c
 36054  00467C  5057               	movf	__parse_file_modify@data+1,w,c
 36055  00467E  22DA               	addwfc	fsr2h,f,c
 36056  004680  50DF               	movf	indf2,w,c
 36057  004682  6E58               	movwf	??__parse_file_modify& (0+255),c
 36058  004684  5058               	movf	??__parse_file_modify,w,c
 36059  004686  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36060                           
 36061                           ;api.c: 682: fat_modify_file(data[1], start_byte, number_of_bytes, &data[9]);
 36062  004688  C05B  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 36063  00468C  C05C  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 36064  004690  C05D  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 36065  004694  C05E  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 36066  004698  C059  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 36067  00469C  C05A  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 36068  0046A0  0E09               	movlw	9
 36069  0046A2  2456               	addwf	__parse_file_modify@data,w,c
 36070  0046A4  6E48               	movwf	fat_modify_file@data,c
 36071  0046A6  0E00               	movlw	0
 36072  0046A8  2057               	addwfc	__parse_file_modify@data+1,w,c
 36073  0046AA  6E49               	movwf	fat_modify_file@data+1,c
 36074  0046AC  EE20 F001          	lfsr	2,1
 36075  0046B0  5056               	movf	__parse_file_modify@data,w,c
 36076  0046B2  26D9               	addwf	fsr2l,f,c
 36077  0046B4  5057               	movf	__parse_file_modify@data+1,w,c
 36078  0046B6  22DA               	addwfc	fsr2h,f,c
 36079  0046B8  50DF               	movf	indf2,w,c
 36080  0046BA  EC42  F011         	call	_fat_modify_file
 36081                           
 36082                           ;api.c: 683: return number_of_bytes + 9;
 36083  0046BE  5059               	movf	__parse_file_modify@number_of_bytes,w,c
 36084  0046C0  0F09               	addlw	9
 36085  0046C2  0012               	return	
 36086  0046C4                     __end_of__parse_file_modify:
 36087                           	opt stack 0
 36088                           tosu	equ	0xFFF
 36089                           tosh	equ	0xFFE
 36090                           tosl	equ	0xFFD
 36091                           pclath	equ	0xFFA
 36092                           tblptru	equ	0xFF8
 36093                           tblptrh	equ	0xFF7
 36094                           tblptrl	equ	0xFF6
 36095                           tablat	equ	0xFF5
 36096                           prodh	equ	0xFF4
 36097                           prodl	equ	0xFF3
 36098                           intcon	equ	0xFF2
 36099                           intcon2	equ	0xFF1
 36100                           intcon3	equ	0xFF0
 36101                           indf0	equ	0xFEF
 36102                           postinc0	equ	0xFEE
 36103                           fsr0h	equ	0xFEA
 36104                           fsr0l	equ	0xFE9
 36105                           wreg	equ	0xFE8
 36106                           indf1	equ	0xFE7
 36107                           postdec1	equ	0xFE5
 36108                           plusw1	equ	0xFE3
 36109                           fsr1h	equ	0xFE2
 36110                           fsr1l	equ	0xFE1
 36111                           indf2	equ	0xFDF
 36112                           postinc2	equ	0xFDE
 36113                           postdec2	equ	0xFDD
 36114                           plusw2	equ	0xFDB
 36115                           fsr2h	equ	0xFDA
 36116                           fsr2l	equ	0xFD9
 36117                           status	equ	0xFD8
 36118                           
 36119 ;; *************** function __parse_file_delete *****************
 36120 ;; Defined at:
 36121 ;;		line 594 in file "api.c"
 36122 ;; Parameters:    Size  Location     Type
 36123 ;;  data            2   79[COMRAM] PTR unsigned char 
 36124 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36125 ;; Auto vars:     Size  Location     Type
 36126 ;;		None
 36127 ;; Return value:  Size  Location     Type
 36128 ;;                  1    wreg      unsigned char 
 36129 ;; Registers used:
 36130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36131 ;; Tracked objects:
 36132 ;;		On entry : 0/0
 36133 ;;		On exit  : 0/0
 36134 ;;		Unchanged: 0/0
 36135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36139 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36140 ;;Total ram usage:        3 bytes
 36141 ;; Hardware stack levels used:    1
 36142 ;; Hardware stack levels required when called:    8
 36143 ;; This function calls:
 36144 ;;		_fat_delete_file
 36145 ;; This function is called by:
 36146 ;;		__parse_command_long
 36147 ;; This function uses a non-reentrant model
 36148 ;;
 36149                           
 36150                           	psect	text181
 36151  0081D0                     __ptext181:
 36152                           	opt stack 0
 36153  0081D0                     __parse_file_delete:
 36154                           	opt stack 20
 36155                           
 36156                           ;api.c: 597: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 36157                           
 36158                           ;incstack = 0
 36159  0081D0  C050  FFD9         	movff	__parse_file_delete@data,fsr2l
 36160  0081D4  C051  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 36161  0081D8  0E51               	movlw	81
 36162  0081DA  18DE               	xorwf	postinc2,w,c
 36163  0081DC  A4D8               	btfss	status,2,c
 36164  0081DE  D014               	goto	u10810
 36165  0081E0  EE20 F002          	lfsr	2,2
 36166  0081E4  5050               	movf	__parse_file_delete@data,w,c
 36167  0081E6  26D9               	addwf	fsr2l,f,c
 36168  0081E8  5051               	movf	__parse_file_delete@data+1,w,c
 36169  0081EA  22DA               	addwfc	fsr2h,f,c
 36170  0081EC  0E66               	movlw	102
 36171  0081EE  18DE               	xorwf	postinc2,w,c
 36172  0081F0  A4D8               	btfss	status,2,c
 36173  0081F2  D00A               	goto	u10810
 36174  0081F4  EE20 F003          	lfsr	2,3
 36175  0081F8  5050               	movf	__parse_file_delete@data,w,c
 36176  0081FA  26D9               	addwf	fsr2l,f,c
 36177  0081FC  5051               	movf	__parse_file_delete@data+1,w,c
 36178  0081FE  22DA               	addwfc	fsr2h,f,c
 36179  008200  0EA0               	movlw	160
 36180  008202  18DE               	xorwf	postinc2,w,c
 36181  008204  B4D8               	btfsc	status,2,c
 36182  008206  D002               	goto	l2807
 36183  008208                     u10810:
 36184                           
 36185                           ;api.c: 598: {;api.c: 599: return 4;
 36186  008208  0E04               	movlw	4
 36187  00820A  0012               	return	
 36188  00820C                     l2807:
 36189                           
 36190                           ;api.c: 600: };api.c: 603: fat_delete_file(data[1]);
 36191  00820C  EE20 F001          	lfsr	2,1
 36192  008210  5050               	movf	__parse_file_delete@data,w,c
 36193  008212  26D9               	addwf	fsr2l,f,c
 36194  008214  5051               	movf	__parse_file_delete@data+1,w,c
 36195  008216  22DA               	addwfc	fsr2h,f,c
 36196  008218  50DF               	movf	indf2,w,c
 36197  00821A  ECD9  F042         	call	_fat_delete_file
 36198                           
 36199                           ;api.c: 604: return 4;
 36200  00821E  0E04               	movlw	4
 36201  008220  0012               	return	
 36202  008222                     __end_of__parse_file_delete:
 36203                           	opt stack 0
 36204                           tosu	equ	0xFFF
 36205                           tosh	equ	0xFFE
 36206                           tosl	equ	0xFFD
 36207                           pclath	equ	0xFFA
 36208                           tblptru	equ	0xFF8
 36209                           tblptrh	equ	0xFF7
 36210                           tblptrl	equ	0xFF6
 36211                           tablat	equ	0xFF5
 36212                           prodh	equ	0xFF4
 36213                           prodl	equ	0xFF3
 36214                           intcon	equ	0xFF2
 36215                           intcon2	equ	0xFF1
 36216                           intcon3	equ	0xFF0
 36217                           indf0	equ	0xFEF
 36218                           postinc0	equ	0xFEE
 36219                           fsr0h	equ	0xFEA
 36220                           fsr0l	equ	0xFE9
 36221                           wreg	equ	0xFE8
 36222                           indf1	equ	0xFE7
 36223                           postdec1	equ	0xFE5
 36224                           plusw1	equ	0xFE3
 36225                           fsr1h	equ	0xFE2
 36226                           fsr1l	equ	0xFE1
 36227                           indf2	equ	0xFDF
 36228                           postinc2	equ	0xFDE
 36229                           postdec2	equ	0xFDD
 36230                           plusw2	equ	0xFDB
 36231                           fsr2h	equ	0xFDA
 36232                           fsr2l	equ	0xFD9
 36233                           status	equ	0xFD8
 36234                           
 36235 ;; *************** function _fat_delete_file *****************
 36236 ;; Defined at:
 36237 ;;		line 647 in file "fat16.c"
 36238 ;; Parameters:    Size  Location     Type
 36239 ;;  file_number     1    wreg     unsigned char 
 36240 ;; Auto vars:     Size  Location     Type
 36241 ;;  file_number     1   78[COMRAM] unsigned char 
 36242 ;;  first_cluste    2   76[COMRAM] unsigned int 
 36243 ;; Return value:  Size  Location     Type
 36244 ;;                  1    wreg      void 
 36245 ;; Registers used:
 36246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36247 ;; Tracked objects:
 36248 ;;		On entry : 0/0
 36249 ;;		On exit  : 0/0
 36250 ;;		Unchanged: 0/0
 36251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36253 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36255 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36256 ;;Total ram usage:        3 bytes
 36257 ;; Hardware stack levels used:    1
 36258 ;; Hardware stack levels required when called:    7
 36259 ;; This function calls:
 36260 ;;		__delete_root
 36261 ;;		__get_first_cluster
 36262 ;;		__make_cluster_chain
 36263 ;;		__root_is_available
 36264 ;; This function is called by:
 36265 ;;		__parse_file_delete
 36266 ;; This function uses a non-reentrant model
 36267 ;;
 36268                           
 36269                           	psect	text182
 36270  0085B2                     __ptext182:
 36271                           	opt stack 0
 36272  0085B2                     _fat_delete_file:
 36273                           	opt stack 20
 36274                           
 36275                           ;incstack = 0
 36276                           ;fat_delete_file@file_number stored from wreg
 36277  0085B2  6E4F               	movwf	fat_delete_file@file_number,c
 36278                           
 36279                           ;fat16.c: 649: uint16_t first_cluster;;fat16.c: 652: if(file_number>=64)
 36280  0085B4  0E3F               	movlw	63
 36281  0085B6  644F               	cpfsgt	fat_delete_file@file_number,c
 36282  0085B8  D001               	goto	l2064
 36283  0085BA  0012               	return	
 36284  0085BC                     l2064:
 36285                           
 36286                           ;fat16.c: 656: };fat16.c: 659: if(_root_is_available(file_number))
 36287  0085BC  504F               	movf	fat_delete_file@file_number,w,c
 36288  0085BE  ECA3  F03D         	call	__root_is_available
 36289  0085C2  0900               	iorlw	0
 36290  0085C4  A4D8               	btfss	status,2,c
 36291  0085C6  0012               	return	
 36292                           
 36293                           ;fat16.c: 663: };fat16.c: 666: first_cluster = _get_first_cluster(file_number);
 36294                           
 36295                           ;fat16.c: 660: {;fat16.c: 662: return;
 36296  0085C8  504F               	movf	fat_delete_file@file_number,w,c
 36297  0085CA  EC95  F040         	call	__get_first_cluster
 36298  0085CE  C030  F04D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 36299  0085D2  C031  F04E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 36300                           
 36301                           ;fat16.c: 669: _make_cluster_chain(first_cluster, 0);
 36302  0085D6  C04D  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 36303  0085DA  C04E  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 36304  0085DE  0E00               	movlw	0
 36305  0085E0  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 36306  0085E2  0E00               	movlw	0
 36307  0085E4  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 36308  0085E6  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 36309                           
 36310                           ;fat16.c: 673: _delete_root(file_number);
 36311  0085EA  504F               	movf	fat_delete_file@file_number,w,c
 36312  0085EC  ECA9  F041         	call	__delete_root
 36313  0085F0  0012               	return		;funcret
 36314  0085F2                     __end_of_fat_delete_file:
 36315                           	opt stack 0
 36316                           tosu	equ	0xFFF
 36317                           tosh	equ	0xFFE
 36318                           tosl	equ	0xFFD
 36319                           pclath	equ	0xFFA
 36320                           tblptru	equ	0xFF8
 36321                           tblptrh	equ	0xFF7
 36322                           tblptrl	equ	0xFF6
 36323                           tablat	equ	0xFF5
 36324                           prodh	equ	0xFF4
 36325                           prodl	equ	0xFF3
 36326                           intcon	equ	0xFF2
 36327                           intcon2	equ	0xFF1
 36328                           intcon3	equ	0xFF0
 36329                           indf0	equ	0xFEF
 36330                           postinc0	equ	0xFEE
 36331                           fsr0h	equ	0xFEA
 36332                           fsr0l	equ	0xFE9
 36333                           wreg	equ	0xFE8
 36334                           indf1	equ	0xFE7
 36335                           postdec1	equ	0xFE5
 36336                           plusw1	equ	0xFE3
 36337                           fsr1h	equ	0xFE2
 36338                           fsr1l	equ	0xFE1
 36339                           indf2	equ	0xFDF
 36340                           postinc2	equ	0xFDE
 36341                           postdec2	equ	0xFDD
 36342                           plusw2	equ	0xFDB
 36343                           fsr2h	equ	0xFDA
 36344                           fsr2l	equ	0xFD9
 36345                           status	equ	0xFD8
 36346                           
 36347 ;; *************** function __delete_root *****************
 36348 ;; Defined at:
 36349 ;;		line 486 in file "fat16.c"
 36350 ;; Parameters:    Size  Location     Type
 36351 ;;  file_number     1    wreg     unsigned char 
 36352 ;; Auto vars:     Size  Location     Type
 36353 ;;  file_number     1   45[COMRAM] unsigned char 
 36354 ;;  offset          2   42[COMRAM] unsigned int 
 36355 ;;  sector          2   40[COMRAM] unsigned int 
 36356 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 36357 ;; Return value:  Size  Location     Type
 36358 ;;                  1    wreg      void 
 36359 ;; Registers used:
 36360 ;;		wreg, status,2, status,0, cstack
 36361 ;; Tracked objects:
 36362 ;;		On entry : 0/0
 36363 ;;		On exit  : 0/0
 36364 ;;		Unchanged: 0/0
 36365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36367 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36370 ;;Total ram usage:        6 bytes
 36371 ;; Hardware stack levels used:    1
 36372 ;; Hardware stack levels required when called:    5
 36373 ;; This function calls:
 36374 ;;		__offset_from_file_number
 36375 ;;		__sector_from_file_number
 36376 ;;		_flash_partial_write
 36377 ;; This function is called by:
 36378 ;;		_fat_delete_file
 36379 ;; This function uses a non-reentrant model
 36380 ;;
 36381                           
 36382                           	psect	text183
 36383  008352                     __ptext183:
 36384                           	opt stack 0
 36385  008352                     __delete_root:
 36386                           	opt stack 21
 36387                           
 36388                           ;incstack = 0
 36389                           ;__delete_root@file_number stored from wreg
 36390  008352  6E2E               	movwf	__delete_root@file_number,c
 36391                           
 36392                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 36393  008354  502E               	movf	__delete_root@file_number,w,c
 36394  008356  EC28  F045         	call	__sector_from_file_number
 36395  00835A  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 36396  00835E  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 36397                           
 36398                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 36399  008362  502E               	movf	__delete_root@file_number,w,c
 36400  008364  ECB4  F045         	call	__offset_from_file_number
 36401  008368  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 36402  00836C  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 36403                           
 36404                           ;fat16.c: 497: deleted_value = 0xE5;
 36405  008370  0EE5               	movlw	229
 36406  008372  6E2D               	movwf	__delete_root@deleted_value,c
 36407                           
 36408                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 36409  008374  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 36410  008378  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 36411  00837C  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 36412  008380  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 36413  008384  0E00               	movlw	0
 36414  008386  6E25               	movwf	flash_partial_write@length+1,c
 36415  008388  0E01               	movlw	1
 36416  00838A  6E24               	movwf	flash_partial_write@length,c
 36417  00838C  0E2D               	movlw	low __delete_root@deleted_value
 36418  00838E  6E26               	movwf	flash_partial_write@data,c
 36419  008390  0E00               	movlw	high __delete_root@deleted_value
 36420  008392  6E27               	movwf	flash_partial_write@data+1,c
 36421  008394  EC9C  F03B         	call	_flash_partial_write	;wreg free
 36422  008398  0012               	return		;funcret
 36423  00839A                     __end_of__delete_root:
 36424                           	opt stack 0
 36425                           tosu	equ	0xFFF
 36426                           tosh	equ	0xFFE
 36427                           tosl	equ	0xFFD
 36428                           pclath	equ	0xFFA
 36429                           tblptru	equ	0xFF8
 36430                           tblptrh	equ	0xFF7
 36431                           tblptrl	equ	0xFF6
 36432                           tablat	equ	0xFF5
 36433                           prodh	equ	0xFF4
 36434                           prodl	equ	0xFF3
 36435                           intcon	equ	0xFF2
 36436                           intcon2	equ	0xFF1
 36437                           intcon3	equ	0xFF0
 36438                           indf0	equ	0xFEF
 36439                           postinc0	equ	0xFEE
 36440                           fsr0h	equ	0xFEA
 36441                           fsr0l	equ	0xFE9
 36442                           wreg	equ	0xFE8
 36443                           indf1	equ	0xFE7
 36444                           postdec1	equ	0xFE5
 36445                           plusw1	equ	0xFE3
 36446                           fsr1h	equ	0xFE2
 36447                           fsr1l	equ	0xFE1
 36448                           indf2	equ	0xFDF
 36449                           postinc2	equ	0xFDE
 36450                           postdec2	equ	0xFDD
 36451                           plusw2	equ	0xFDB
 36452                           fsr2h	equ	0xFDA
 36453                           fsr2l	equ	0xFD9
 36454                           status	equ	0xFD8
 36455                           
 36456 ;; *************** function __parse_file_create *****************
 36457 ;; Defined at:
 36458 ;;		line 607 in file "api.c"
 36459 ;; Parameters:    Size  Location     Type
 36460 ;;  data            2   88[COMRAM] PTR unsigned char 
 36461 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36462 ;; Auto vars:     Size  Location     Type
 36463 ;;  file_size       4   91[COMRAM] unsigned long 
 36464 ;; Return value:  Size  Location     Type
 36465 ;;                  1    wreg      unsigned char 
 36466 ;; Registers used:
 36467 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36468 ;; Tracked objects:
 36469 ;;		On entry : 0/0
 36470 ;;		On exit  : 0/0
 36471 ;;		Unchanged: 0/0
 36472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36476 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36477 ;;Total ram usage:        7 bytes
 36478 ;; Hardware stack levels used:    1
 36479 ;; Hardware stack levels required when called:    8
 36480 ;; This function calls:
 36481 ;;		_fat_create_file
 36482 ;; This function is called by:
 36483 ;;		__parse_command_long
 36484 ;; This function uses a non-reentrant model
 36485 ;;
 36486                           
 36487                           	psect	text184
 36488  0050C8                     __ptext184:
 36489                           	opt stack 0
 36490  0050C8                     __parse_file_create:
 36491                           	opt stack 20
 36492                           
 36493                           ;api.c: 610: uint32_t file_size;;api.c: 611: if((data[0]!=COMMAND_FILE_CREATE) || (data[
      +                          16]!=0xBD) || (data[17]!=0x4F))
 36494                           
 36495                           ;incstack = 0
 36496  0050C8  C059  FFD9         	movff	__parse_file_create@data,fsr2l
 36497  0050CC  C05A  FFDA         	movff	__parse_file_create@data+1,fsr2h
 36498  0050D0  0E52               	movlw	82
 36499  0050D2  18DE               	xorwf	postinc2,w,c
 36500  0050D4  A4D8               	btfss	status,2,c
 36501  0050D6  D014               	goto	u10840
 36502  0050D8  EE20 F010          	lfsr	2,16
 36503  0050DC  5059               	movf	__parse_file_create@data,w,c
 36504  0050DE  26D9               	addwf	fsr2l,f,c
 36505  0050E0  505A               	movf	__parse_file_create@data+1,w,c
 36506  0050E2  22DA               	addwfc	fsr2h,f,c
 36507  0050E4  0EBD               	movlw	189
 36508  0050E6  18DE               	xorwf	postinc2,w,c
 36509  0050E8  A4D8               	btfss	status,2,c
 36510  0050EA  D00A               	goto	u10840
 36511  0050EC  EE20 F011          	lfsr	2,17
 36512  0050F0  5059               	movf	__parse_file_create@data,w,c
 36513  0050F2  26D9               	addwf	fsr2l,f,c
 36514  0050F4  505A               	movf	__parse_file_create@data+1,w,c
 36515  0050F6  22DA               	addwfc	fsr2h,f,c
 36516  0050F8  0E4F               	movlw	79
 36517  0050FA  18DE               	xorwf	postinc2,w,c
 36518  0050FC  B4D8               	btfsc	status,2,c
 36519  0050FE  D002               	goto	l2813
 36520  005100                     u10840:
 36521                           
 36522                           ;api.c: 612: {;api.c: 613: return 18;
 36523  005100  0E12               	movlw	18
 36524  005102  0012               	return	
 36525  005104                     l2813:
 36526                           
 36527                           ;api.c: 614: };api.c: 617: file_size = data[12];
 36528  005104  EE20 F00C          	lfsr	2,12
 36529  005108  5059               	movf	__parse_file_create@data,w,c
 36530  00510A  26D9               	addwf	fsr2l,f,c
 36531  00510C  505A               	movf	__parse_file_create@data+1,w,c
 36532  00510E  22DA               	addwfc	fsr2h,f,c
 36533  005110  50DF               	movf	indf2,w,c
 36534  005112  6E5B               	movwf	??__parse_file_create& (0+255),c
 36535  005114  505B               	movf	??__parse_file_create,w,c
 36536  005116  6E5C               	movwf	__parse_file_create@file_size,c
 36537  005118  6A5D               	clrf	__parse_file_create@file_size+1,c
 36538  00511A  6A5E               	clrf	__parse_file_create@file_size+2,c
 36539  00511C  6A5F               	clrf	__parse_file_create@file_size+3,c
 36540                           
 36541                           ;api.c: 618: file_size <<= 8;
 36542  00511E  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36543  005122  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36544  005126  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36545  00512A  6A5C               	clrf	__parse_file_create@file_size,c
 36546                           
 36547                           ;api.c: 619: file_size |= data[13];
 36548  00512C  EE20 F00D          	lfsr	2,13
 36549  005130  5059               	movf	__parse_file_create@data,w,c
 36550  005132  26D9               	addwf	fsr2l,f,c
 36551  005134  505A               	movf	__parse_file_create@data+1,w,c
 36552  005136  22DA               	addwfc	fsr2h,f,c
 36553  005138  50DF               	movf	indf2,w,c
 36554  00513A  6E5B               	movwf	??__parse_file_create& (0+255),c
 36555  00513C  505B               	movf	??__parse_file_create,w,c
 36556  00513E  125C               	iorwf	__parse_file_create@file_size,f,c
 36557                           
 36558                           ;api.c: 620: file_size <<= 8;
 36559  005140  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36560  005144  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36561  005148  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36562  00514C  6A5C               	clrf	__parse_file_create@file_size,c
 36563                           
 36564                           ;api.c: 621: file_size |= data[14];
 36565  00514E  EE20 F00E          	lfsr	2,14
 36566  005152  5059               	movf	__parse_file_create@data,w,c
 36567  005154  26D9               	addwf	fsr2l,f,c
 36568  005156  505A               	movf	__parse_file_create@data+1,w,c
 36569  005158  22DA               	addwfc	fsr2h,f,c
 36570  00515A  50DF               	movf	indf2,w,c
 36571  00515C  6E5B               	movwf	??__parse_file_create& (0+255),c
 36572  00515E  505B               	movf	??__parse_file_create,w,c
 36573  005160  125C               	iorwf	__parse_file_create@file_size,f,c
 36574                           
 36575                           ;api.c: 622: file_size <<= 8;
 36576  005162  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36577  005166  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36578  00516A  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36579  00516E  6A5C               	clrf	__parse_file_create@file_size,c
 36580                           
 36581                           ;api.c: 623: file_size |= data[15];
 36582  005170  EE20 F00F          	lfsr	2,15
 36583  005174  5059               	movf	__parse_file_create@data,w,c
 36584  005176  26D9               	addwf	fsr2l,f,c
 36585  005178  505A               	movf	__parse_file_create@data+1,w,c
 36586  00517A  22DA               	addwfc	fsr2h,f,c
 36587  00517C  50DF               	movf	indf2,w,c
 36588  00517E  6E5B               	movwf	??__parse_file_create& (0+255),c
 36589  005180  505B               	movf	??__parse_file_create,w,c
 36590  005182  125C               	iorwf	__parse_file_create@file_size,f,c
 36591                           
 36592                           ;api.c: 626: fat_create_file(&data[1], &data[9], file_size);
 36593  005184  0E01               	movlw	1
 36594  005186  2459               	addwf	__parse_file_create@data,w,c
 36595  005188  6E4D               	movwf	fat_create_file@name,c
 36596  00518A  0E00               	movlw	0
 36597  00518C  205A               	addwfc	__parse_file_create@data+1,w,c
 36598  00518E  6E4E               	movwf	fat_create_file@name+1,c
 36599  005190  0E09               	movlw	9
 36600  005192  2459               	addwf	__parse_file_create@data,w,c
 36601  005194  6E4F               	movwf	fat_create_file@extension,c
 36602  005196  0E00               	movlw	0
 36603  005198  205A               	addwfc	__parse_file_create@data+1,w,c
 36604  00519A  6E50               	movwf	fat_create_file@extension+1,c
 36605  00519C  C05C  F051         	movff	__parse_file_create@file_size,fat_create_file@size
 36606  0051A0  C05D  F052         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 36607  0051A4  C05E  F053         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 36608  0051A8  C05F  F054         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 36609  0051AC  ECF4  F01F         	call	_fat_create_file	;wreg free
 36610                           
 36611                           ;api.c: 628: return 18;
 36612  0051B0  0E12               	movlw	18
 36613  0051B2  0012               	return	
 36614  0051B4                     __end_of__parse_file_create:
 36615                           	opt stack 0
 36616                           tosu	equ	0xFFF
 36617                           tosh	equ	0xFFE
 36618                           tosl	equ	0xFFD
 36619                           pclath	equ	0xFFA
 36620                           tblptru	equ	0xFF8
 36621                           tblptrh	equ	0xFF7
 36622                           tblptrl	equ	0xFF6
 36623                           tablat	equ	0xFF5
 36624                           prodh	equ	0xFF4
 36625                           prodl	equ	0xFF3
 36626                           intcon	equ	0xFF2
 36627                           intcon2	equ	0xFF1
 36628                           intcon3	equ	0xFF0
 36629                           indf0	equ	0xFEF
 36630                           postinc0	equ	0xFEE
 36631                           fsr0h	equ	0xFEA
 36632                           fsr0l	equ	0xFE9
 36633                           wreg	equ	0xFE8
 36634                           indf1	equ	0xFE7
 36635                           postdec1	equ	0xFE5
 36636                           plusw1	equ	0xFE3
 36637                           fsr1h	equ	0xFE2
 36638                           fsr1l	equ	0xFE1
 36639                           indf2	equ	0xFDF
 36640                           postinc2	equ	0xFDE
 36641                           postdec2	equ	0xFDD
 36642                           plusw2	equ	0xFDB
 36643                           fsr2h	equ	0xFDA
 36644                           fsr2l	equ	0xFD9
 36645                           status	equ	0xFD8
 36646                           
 36647 ;; *************** function _fat_create_file *****************
 36648 ;; Defined at:
 36649 ;;		line 586 in file "fat16.c"
 36650 ;; Parameters:    Size  Location     Type
 36651 ;;  name            2   76[COMRAM] PTR unsigned char 
 36652 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36653 ;;  extension       2   78[COMRAM] PTR unsigned char 
 36654 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36655 ;;  size            4   80[COMRAM] unsigned long 
 36656 ;; Auto vars:     Size  Location     Type
 36657 ;;  root_entry     32    5[BANK0 ] struct .
 36658 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 36659 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 36660 ;;  file_number     1    4[BANK0 ] unsigned char 
 36661 ;; Return value:  Size  Location     Type
 36662 ;;                  1    wreg      unsigned char 
 36663 ;; Registers used:
 36664 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36665 ;; Tracked objects:
 36666 ;;		On entry : 0/0
 36667 ;;		On exit  : 0/0
 36668 ;;		Unchanged: 0/0
 36669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36671 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36673 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36674 ;;Total ram usage:       49 bytes
 36675 ;; Hardware stack levels used:    1
 36676 ;; Hardware stack levels required when called:    7
 36677 ;; This function calls:
 36678 ;;		__get_available_root_entry
 36679 ;;		__get_date
 36680 ;;		__get_time
 36681 ;;		__make_cluster_chain
 36682 ;;		__write_root
 36683 ;;		_fat_find_file
 36684 ;;		_memcpy
 36685 ;; This function is called by:
 36686 ;;		__parse_file_create
 36687 ;; This function uses a non-reentrant model
 36688 ;;
 36689                           
 36690                           	psect	text185
 36691  003FE8                     __ptext185:
 36692                           	opt stack 0
 36693  003FE8                     _fat_create_file:
 36694                           	opt stack 20
 36695                           
 36696                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 36697                           
 36698                           ;incstack = 0
 36699  003FE8  C04D  F02C         	movff	fat_create_file@name,fat_find_file@name
 36700  003FEC  C04E  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 36701  003FF0  C04F  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 36702  003FF4  C050  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 36703  003FF8  EC61  F02C         	call	_fat_find_file	;wreg free
 36704  003FFC  0AFF               	xorlw	255
 36705  003FFE  A4D8               	btfss	status,2,c
 36706  004000  0012               	return	
 36707                           
 36708                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 36709                           
 36710                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 36711  004002  ECFE  F045         	call	__get_available_root_entry	;wreg free
 36712  004006  0100               	movlb	0	; () banked
 36713  004008  6F64               	movwf	fat_create_file@file_number& (0+255),b
 36714                           
 36715                           ; BSR set to: 0
 36716                           ;fat16.c: 605: if(file_number == 0xFF)
 36717  00400A  2964               	incf	fat_create_file@file_number& (0+255),w,b
 36718  00400C  B4D8               	btfsc	status,2,c
 36719  00400E  0012               	return	
 36720                           
 36721                           ; BSR set to: 0
 36722                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 36723                           
 36724                           ; BSR set to: 0
 36725                           
 36726                           ; BSR set to: 0
 36727                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 36728  004010  0EFF               	movlw	255
 36729  004012  2451               	addwf	fat_create_file@size,w,c
 36730  004014  6E55               	movwf	??_fat_create_file& (0+255),c
 36731  004016  0E01               	movlw	1
 36732  004018  2052               	addwfc	fat_create_file@size+1,w,c
 36733  00401A  6E56               	movwf	(??_fat_create_file+1)& (0+255),c
 36734  00401C  0E00               	movlw	0
 36735  00401E  2053               	addwfc	fat_create_file@size+2,w,c
 36736  004020  6E57               	movwf	(??_fat_create_file+2)& (0+255),c
 36737  004022  0E00               	movlw	0
 36738  004024  2054               	addwfc	fat_create_file@size+3,w,c
 36739  004026  6E58               	movwf	(??_fat_create_file+3)& (0+255),c
 36740  004028  0E0A               	movlw	10
 36741  00402A  D005               	goto	u10040
 36742  00402C                     u10045:
 36743  00402C  90D8               	bcf	status,0,c
 36744  00402E  3258               	rrcf	??_fat_create_file+3,f,c
 36745  004030  3257               	rrcf	??_fat_create_file+2,f,c
 36746  004032  3256               	rrcf	??_fat_create_file+1,f,c
 36747  004034  3255               	rrcf	??_fat_create_file,f,c
 36748  004036                     u10040:
 36749  004036  2EE8               	decfsz	wreg,f,c
 36750  004038  D7F9               	goto	u10045
 36751  00403A  C055  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 36752  00403E  C056  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 36753                           
 36754                           ; BSR set to: 0
 36755                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 36756  004042  0E00               	movlw	0
 36757  004044  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 36758  004046  0E00               	movlw	0
 36759  004048  6E36               	movwf	__make_cluster_chain@first_cluster,c
 36760  00404A  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 36761  00404E  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 36762  004052  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 36763  004056  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 36764  00405A  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 36765                           
 36766                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 36767  00405E  0100               	movlb	0	; () banked
 36768  004060  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 36769  004062  E103               	bnz	l13225
 36770  004064  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 36771  004066  B4D8               	btfsc	status,2,c
 36772  004068  0012               	return	
 36773  00406A                     l13225:
 36774                           
 36775                           ; BSR set to: 0
 36776                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 36777  00406A  0E65               	movlw	low fat_create_file@root_entry
 36778  00406C  6E01               	movwf	memcpy@d1,c
 36779  00406E  0E00               	movlw	high fat_create_file@root_entry
 36780  004070  6E02               	movwf	memcpy@d1+1,c
 36781  004072  C04D  F003         	movff	fat_create_file@name,memcpy@s1
 36782  004076  C04E  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 36783  00407A  5003               	movf	memcpy@s1,w,c
 36784  00407C  1004               	iorwf	memcpy@s1+1,w,c
 36785  00407E  A4D8               	btfss	status,2,c
 36786  004080  0E20               	movlw	32
 36787  004082  6E05               	movwf	memcpy@s1+2,c
 36788  004084  0E00               	movlw	0
 36789  004086  6E07               	movwf	memcpy@n+1,c
 36790  004088  0E08               	movlw	8
 36791  00408A  6E06               	movwf	memcpy@n,c
 36792  00408C  ECDD  F03C         	call	_memcpy	;wreg free
 36793                           
 36794                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 36795  004090  0E6D               	movlw	low (fat_create_file@root_entry+8)
 36796  004092  6E01               	movwf	memcpy@d1,c
 36797  004094  0E00               	movlw	high (fat_create_file@root_entry+8)
 36798  004096  6E02               	movwf	memcpy@d1+1,c
 36799  004098  C04F  F003         	movff	fat_create_file@extension,memcpy@s1
 36800  00409C  C050  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 36801  0040A0  5003               	movf	memcpy@s1,w,c
 36802  0040A2  1004               	iorwf	memcpy@s1+1,w,c
 36803  0040A4  A4D8               	btfss	status,2,c
 36804  0040A6  0E20               	movlw	32
 36805  0040A8  6E05               	movwf	memcpy@s1+2,c
 36806  0040AA  0E00               	movlw	0
 36807  0040AC  6E07               	movwf	memcpy@n+1,c
 36808  0040AE  0E03               	movlw	3
 36809  0040B0  6E06               	movwf	memcpy@n,c
 36810  0040B2  ECDD  F03C         	call	_memcpy	;wreg free
 36811                           
 36812                           ;fat16.c: 629: root_entry.attributes = 0x00;
 36813  0040B6  0E00               	movlw	0
 36814  0040B8  0100               	movlb	0	; () banked
 36815  0040BA  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 36816                           
 36817                           ; BSR set to: 0
 36818                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 36819  0040BC  0E00               	movlw	0
 36820  0040BE  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 36821                           
 36822                           ; BSR set to: 0
 36823                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 36824  0040C0  0E00               	movlw	0
 36825  0040C2  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 36826                           
 36827                           ; BSR set to: 0
 36828                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 36829  0040C4  ECBD  F047         	call	__get_time	;wreg free
 36830  0040C8  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 36831  0040CC  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 36832                           
 36833                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 36834  0040D0  ECC2  F047         	call	__get_date	;wreg free
 36835  0040D4  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 36836  0040D8  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 36837                           
 36838                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 36839  0040DC  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 36840  0040E0  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 36841                           
 36842                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 36843  0040E4  0E00               	movlw	0
 36844  0040E6  0100               	movlb	0	; () banked
 36845  0040E8  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 36846  0040EA  0E00               	movlw	0
 36847  0040EC  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 36848                           
 36849                           ; BSR set to: 0
 36850                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 36851  0040EE  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 36852  0040F2  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 36853                           
 36854                           ; BSR set to: 0
 36855                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 36856  0040F6  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 36857  0040FA  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 36858                           
 36859                           ; BSR set to: 0
 36860                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 36861  0040FE  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 36862  004102  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 36863                           
 36864                           ; BSR set to: 0
 36865                           ;fat16.c: 639: root_entry.fileSize = size;
 36866  004106  C051  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 36867  00410A  C052  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 36868  00410E  C053  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 36869  004112  C054  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 36870                           
 36871                           ; BSR set to: 0
 36872                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 36873  004116  0E65               	movlw	low fat_create_file@root_entry
 36874  004118  6E29               	movwf	__write_root@data,c
 36875  00411A  0E00               	movlw	high fat_create_file@root_entry
 36876  00411C  6E2A               	movwf	__write_root@data+1,c
 36877  00411E  5164               	movf	fat_create_file@file_number& (0+255),w,b
 36878  004120  EC34  F042         	call	__write_root
 36879  004124  0012               	return	
 36880  004126                     __end_of_fat_create_file:
 36881                           	opt stack 0
 36882                           tosu	equ	0xFFF
 36883                           tosh	equ	0xFFE
 36884                           tosl	equ	0xFFD
 36885                           pclath	equ	0xFFA
 36886                           tblptru	equ	0xFF8
 36887                           tblptrh	equ	0xFF7
 36888                           tblptrl	equ	0xFF6
 36889                           tablat	equ	0xFF5
 36890                           prodh	equ	0xFF4
 36891                           prodl	equ	0xFF3
 36892                           intcon	equ	0xFF2
 36893                           intcon2	equ	0xFF1
 36894                           intcon3	equ	0xFF0
 36895                           indf0	equ	0xFEF
 36896                           postinc0	equ	0xFEE
 36897                           fsr0h	equ	0xFEA
 36898                           fsr0l	equ	0xFE9
 36899                           wreg	equ	0xFE8
 36900                           indf1	equ	0xFE7
 36901                           postdec1	equ	0xFE5
 36902                           plusw1	equ	0xFE3
 36903                           fsr1h	equ	0xFE2
 36904                           fsr1l	equ	0xFE1
 36905                           indf2	equ	0xFDF
 36906                           postinc2	equ	0xFDE
 36907                           postdec2	equ	0xFDD
 36908                           plusw2	equ	0xFDB
 36909                           fsr2h	equ	0xFDA
 36910                           fsr2l	equ	0xFD9
 36911                           status	equ	0xFD8
 36912                           
 36913 ;; *************** function _memcpy *****************
 36914 ;; Defined at:
 36915 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 36916 ;; Parameters:    Size  Location     Type
 36917 ;;  d1              2    0[COMRAM] PTR void 
 36918 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36919 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36920 ;;  s1              3    2[COMRAM] PTR const void 
 36921 ;;		 -> _spi_external_rx_buffer(64), ROM(40959), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36922 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36923 ;;		 -> SetupPkt(8), 
 36924 ;;  n               2    5[COMRAM] unsigned int 
 36925 ;; Auto vars:     Size  Location     Type
 36926 ;;  s               3    7[COMRAM] PTR const unsigned char 
 36927 ;;		 -> _spi_external_rx_buffer(64), ROM(40959), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36928 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36929 ;;		 -> SetupPkt(8), 
 36930 ;;  d               2   10[COMRAM] PTR unsigned char 
 36931 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36932 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36933 ;;  tmp             1   12[COMRAM] unsigned char 
 36934 ;; Return value:  Size  Location     Type
 36935 ;;                  2    0[COMRAM] PTR void 
 36936 ;; Registers used:
 36937 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36938 ;; Tracked objects:
 36939 ;;		On entry : 0/0
 36940 ;;		On exit  : 0/0
 36941 ;;		Unchanged: 0/0
 36942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36943 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36944 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36946 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36947 ;;Total ram usage:       13 bytes
 36948 ;; Hardware stack levels used:    1
 36949 ;; This function calls:
 36950 ;;		Nothing
 36951 ;; This function is called by:
 36952 ;;		_USBCtrlEPService
 36953 ;;		_MSDProcessCommandMediaPresent
 36954 ;;		__flash_set_page_size
 36955 ;;		_fat_create_file
 36956 ;;		_internalFlash_read
 36957 ;;		_api_prepare
 36958 ;; This function uses a non-reentrant model
 36959 ;;
 36960                           
 36961                           	psect	text186
 36962  0079BA                     __ptext186:
 36963                           	opt stack 0
 36964  0079BA                     _memcpy:
 36965                           	opt stack 27
 36966                           
 36967                           ;incstack = 0
 36968  0079BA  C003  F008         	movff	memcpy@s1,memcpy@s
 36969  0079BE  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 36970  0079C2  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 36971  0079C6  C001  F00B         	movff	memcpy@d1,memcpy@d
 36972  0079CA  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 36973  0079CE  D01F               	goto	l3687
 36974  0079D0                     l11547:
 36975  0079D0  C008  FFF6         	movff	memcpy@s,tblptrl
 36976  0079D4  C009  FFF7         	movff	memcpy@s+1,tblptrh
 36977  0079D8  C00A  FFF8         	movff	memcpy@s+2,tblptru
 36978  0079DC  BAF8               	btfsc	tblptru,5,c
 36979  0079DE  D003               	bra	u8357
 36980  0079E0  0008               	tblrd		*
 36981  0079E2  50F5               	movf	tablat,w,c
 36982  0079E4  D005               	bra	u8350
 36983  0079E6                     u8357:
 36984  0079E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 36985  0079EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 36986  0079EE  50EF               	movf	indf0,w,c
 36987  0079F0                     u8350:
 36988  0079F0  6E0D               	movwf	memcpy@tmp,c
 36989  0079F2  0E01               	movlw	1
 36990  0079F4  2608               	addwf	memcpy@s,f,c
 36991  0079F6  0E00               	movlw	0
 36992  0079F8  2209               	addwfc	memcpy@s+1,f,c
 36993  0079FA  0E00               	movlw	0
 36994  0079FC  220A               	addwfc	memcpy@s+2,f,c
 36995  0079FE  C00B  FFD9         	movff	memcpy@d,fsr2l
 36996  007A02  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 36997  007A06  C00D  FFDF         	movff	memcpy@tmp,indf2
 36998  007A0A  4A0B               	infsnz	memcpy@d,f,c
 36999  007A0C  2A0C               	incf	memcpy@d+1,f,c
 37000  007A0E                     l3687:
 37001  007A0E  0606               	decf	memcpy@n,f,c
 37002  007A10  A0D8               	btfss	status,0,c
 37003  007A12  0607               	decf	memcpy@n+1,f,c
 37004  007A14  2806               	incf	memcpy@n,w,c
 37005  007A16  E1DC               	bnz	l11547
 37006  007A18  2807               	incf	memcpy@n+1,w,c
 37007  007A1A  B4D8               	btfsc	status,2,c
 37008  007A1C  0012               	return	
 37009  007A1E  D7D8               	goto	l3688
 37010  007A20                     __end_of_memcpy:
 37011                           	opt stack 0
 37012                           tosu	equ	0xFFF
 37013                           tosh	equ	0xFFE
 37014                           tosl	equ	0xFFD
 37015                           pclath	equ	0xFFA
 37016                           tblptru	equ	0xFF8
 37017                           tblptrh	equ	0xFF7
 37018                           tblptrl	equ	0xFF6
 37019                           tablat	equ	0xFF5
 37020                           prodh	equ	0xFF4
 37021                           prodl	equ	0xFF3
 37022                           intcon	equ	0xFF2
 37023                           intcon2	equ	0xFF1
 37024                           intcon3	equ	0xFF0
 37025                           indf0	equ	0xFEF
 37026                           postinc0	equ	0xFEE
 37027                           fsr0h	equ	0xFEA
 37028                           fsr0l	equ	0xFE9
 37029                           wreg	equ	0xFE8
 37030                           indf1	equ	0xFE7
 37031                           postdec1	equ	0xFE5
 37032                           plusw1	equ	0xFE3
 37033                           fsr1h	equ	0xFE2
 37034                           fsr1l	equ	0xFE1
 37035                           indf2	equ	0xFDF
 37036                           postinc2	equ	0xFDE
 37037                           postdec2	equ	0xFDD
 37038                           plusw2	equ	0xFDB
 37039                           fsr2h	equ	0xFDA
 37040                           fsr2l	equ	0xFD9
 37041                           status	equ	0xFD8
 37042                           
 37043 ;; *************** function _fat_find_file *****************
 37044 ;; Defined at:
 37045 ;;		line 517 in file "fat16.c"
 37046 ;; Parameters:    Size  Location     Type
 37047 ;;  name            2   43[COMRAM] PTR unsigned char 
 37048 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 37049 ;;  extension       2   45[COMRAM] PTR unsigned char 
 37050 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 37051 ;; Auto vars:     Size  Location     Type
 37052 ;;  offset          2   52[COMRAM] unsigned int 
 37053 ;;  sector          2   50[COMRAM] unsigned int 
 37054 ;;  file_number     1   49[COMRAM] unsigned char 
 37055 ;; Return value:  Size  Location     Type
 37056 ;;                  1    wreg      unsigned char 
 37057 ;; Registers used:
 37058 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37059 ;; Tracked objects:
 37060 ;;		On entry : 0/0
 37061 ;;		On exit  : 0/0
 37062 ;;		Unchanged: 0/0
 37063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37065 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37067 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37068 ;;Total ram usage:       11 bytes
 37069 ;; Hardware stack levels used:    1
 37070 ;; Hardware stack levels required when called:    5
 37071 ;; This function calls:
 37072 ;;		_flash_sector_read
 37073 ;;		_strncmp
 37074 ;; This function is called by:
 37075 ;;		_fat_create_file
 37076 ;;		__bootloader_find_file
 37077 ;;		__fill_buffer_find_file
 37078 ;; This function uses a non-reentrant model
 37079 ;;
 37080                           
 37081                           	psect	text187
 37082  0058C2                     __ptext187:
 37083                           	opt stack 0
 37084  0058C2                     _fat_find_file:
 37085                           	opt stack 23
 37086                           
 37087                           ;fat16.c: 519: uint8_t file_number = 0;
 37088                           
 37089                           ;incstack = 0
 37090  0058C2  0E00               	movlw	0
 37091  0058C4  6E32               	movwf	fat_find_file@file_number,c
 37092                           
 37093                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 37094  0058C6  0E00               	movlw	0
 37095  0058C8  6E34               	movwf	fat_find_file@sector+1,c
 37096  0058CA  0E22               	movlw	34
 37097  0058CC  6E33               	movwf	fat_find_file@sector,c
 37098  0058CE  5034               	movf	fat_find_file@sector+1,w,c
 37099  0058D0  E166               	bnz	l2042
 37100  0058D2  0E26               	movlw	38
 37101  0058D4  5C33               	subwf	fat_find_file@sector,w,c
 37102  0058D6  B0D8               	btfsc	status,0,c
 37103  0058D8  D062               	goto	u9200
 37104                           
 37105                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 37106  0058DA  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 37107  0058DE  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 37108  0058E2  0EC0               	movlw	low _buffer
 37109  0058E4  6E2A               	movwf	flash_sector_read@data,c
 37110  0058E6  0E03               	movlw	high _buffer
 37111  0058E8  6E2B               	movwf	flash_sector_read@data+1,c
 37112  0058EA  EC3F  F044         	call	_flash_sector_read	;wreg free
 37113                           
 37114                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 37115  0058EE  0E00               	movlw	0
 37116  0058F0  6E36               	movwf	fat_find_file@offset+1,c
 37117  0058F2  0E00               	movlw	0
 37118  0058F4  6E35               	movwf	fat_find_file@offset,c
 37119  0058F6                     l12185:
 37120  0058F6  0E02               	movlw	2
 37121  0058F8  5C36               	subwf	fat_find_file@offset+1,w,c
 37122  0058FA  B0D8               	btfsc	status,0,c
 37123  0058FC  D04B               	goto	u9190
 37124                           
 37125                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 37126  0058FE  0EC0               	movlw	low _buffer
 37127  005900  2435               	addwf	fat_find_file@offset,w,c
 37128  005902  6ED9               	movwf	fsr2l,c
 37129  005904  0E03               	movlw	high _buffer
 37130  005906  2036               	addwfc	fat_find_file@offset+1,w,c
 37131  005908  6EDA               	movwf	fsr2h,c
 37132  00590A  50DF               	movf	indf2,w,c
 37133  00590C  A4D8               	btfss	status,2,c
 37134  00590E  D002               	goto	l2045
 37135                           
 37136                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 37137  005910  0EFF               	movlw	255
 37138  005912  0012               	return	
 37139  005914                     l2045:
 37140                           
 37141                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 37142  005914  0EC0               	movlw	low _buffer
 37143  005916  2435               	addwf	fat_find_file@offset,w,c
 37144  005918  6ED9               	movwf	fsr2l,c
 37145  00591A  0E03               	movlw	high _buffer
 37146  00591C  2036               	addwfc	fat_find_file@offset+1,w,c
 37147  00591E  6EDA               	movwf	fsr2h,c
 37148  005920  0EE5               	movlw	229
 37149  005922  18DE               	xorwf	postinc2,w,c
 37150  005924  B4D8               	btfsc	status,2,c
 37151  005926  D030               	goto	l2051
 37152                           
 37153                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 37154                           
 37155                           ;fat16.c: 537: {;fat16.c: 541: }
 37156  005928  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 37157  00592C  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 37158  005930  0EC0               	movlw	low _buffer
 37159  005932  2435               	addwf	fat_find_file@offset,w,c
 37160  005934  6E03               	movwf	strncmp@s2,c
 37161  005936  0E03               	movlw	high _buffer
 37162  005938  2036               	addwfc	fat_find_file@offset+1,w,c
 37163  00593A  6E04               	movwf	strncmp@s2+1,c
 37164  00593C  0E00               	movlw	0
 37165  00593E  6E06               	movwf	strncmp@len+1,c
 37166  005940  0E08               	movlw	8
 37167  005942  6E05               	movwf	strncmp@len,c
 37168  005944  ECD0  F030         	call	_strncmp	;wreg free
 37169  005948  5001               	movf	?_strncmp,w,c
 37170  00594A  1002               	iorwf	?_strncmp+1,w,c
 37171  00594C  A4D8               	btfss	status,2,c
 37172  00594E  D01C               	goto	l2051
 37173                           
 37174                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 37175  005950  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 37176  005954  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 37177  005958  0E08               	movlw	8
 37178  00595A  2435               	addwf	fat_find_file@offset,w,c
 37179  00595C  6E30               	movwf	??_fat_find_file& (0+255),c
 37180  00595E  0E00               	movlw	0
 37181  005960  2036               	addwfc	fat_find_file@offset+1,w,c
 37182  005962  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 37183  005964  0EC0               	movlw	low _buffer
 37184  005966  2430               	addwf	??_fat_find_file,w,c
 37185  005968  6E03               	movwf	strncmp@s2,c
 37186  00596A  0E03               	movlw	high _buffer
 37187  00596C  2031               	addwfc	??_fat_find_file+1,w,c
 37188  00596E  6E04               	movwf	strncmp@s2+1,c
 37189  005970  0E00               	movlw	0
 37190  005972  6E06               	movwf	strncmp@len+1,c
 37191  005974  0E03               	movlw	3
 37192  005976  6E05               	movwf	strncmp@len,c
 37193  005978  ECD0  F030         	call	_strncmp	;wreg free
 37194  00597C  5001               	movf	?_strncmp,w,c
 37195  00597E  1002               	iorwf	?_strncmp+1,w,c
 37196  005980  A4D8               	btfss	status,2,c
 37197  005982  D002               	goto	l2051
 37198                           
 37199                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 37200  005984  5032               	movf	fat_find_file@file_number,w,c
 37201  005986  0012               	return	
 37202  005988                     l2051:
 37203                           
 37204                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 37205  005988  2A32               	incf	fat_find_file@file_number,f,c
 37206  00598A  0E20               	movlw	32
 37207  00598C  2635               	addwf	fat_find_file@offset,f,c
 37208  00598E  0E00               	movlw	0
 37209  005990  2236               	addwfc	fat_find_file@offset+1,f,c
 37210  005992  D7B1               	goto	l12185
 37211  005994                     u9190:
 37212  005994  4A33               	infsnz	fat_find_file@sector,f,c
 37213  005996  2A34               	incf	fat_find_file@sector+1,f,c
 37214  005998  5034               	movf	fat_find_file@sector+1,w,c
 37215  00599A  E101               	bnz	l12219
 37216  00599C  D79A               	goto	L44
 37217  00599E                     u9200:
 37218  00599E                     l2042:
 37219  00599E                     l12219:
 37220                           
 37221                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 37222  00599E  0EFF               	movlw	255
 37223  0059A0  0012               	return	
 37224  0059A2                     __end_of_fat_find_file:
 37225                           	opt stack 0
 37226                           tosu	equ	0xFFF
 37227                           tosh	equ	0xFFE
 37228                           tosl	equ	0xFFD
 37229                           pclath	equ	0xFFA
 37230                           tblptru	equ	0xFF8
 37231                           tblptrh	equ	0xFF7
 37232                           tblptrl	equ	0xFF6
 37233                           tablat	equ	0xFF5
 37234                           prodh	equ	0xFF4
 37235                           prodl	equ	0xFF3
 37236                           intcon	equ	0xFF2
 37237                           intcon2	equ	0xFF1
 37238                           intcon3	equ	0xFF0
 37239                           indf0	equ	0xFEF
 37240                           postinc0	equ	0xFEE
 37241                           fsr0h	equ	0xFEA
 37242                           fsr0l	equ	0xFE9
 37243                           wreg	equ	0xFE8
 37244                           indf1	equ	0xFE7
 37245                           postdec1	equ	0xFE5
 37246                           plusw1	equ	0xFE3
 37247                           fsr1h	equ	0xFE2
 37248                           fsr1l	equ	0xFE1
 37249                           indf2	equ	0xFDF
 37250                           postinc2	equ	0xFDE
 37251                           postdec2	equ	0xFDD
 37252                           plusw2	equ	0xFDB
 37253                           fsr2h	equ	0xFDA
 37254                           fsr2l	equ	0xFD9
 37255                           status	equ	0xFD8
 37256                           
 37257 ;; *************** function _strncmp *****************
 37258 ;; Defined at:
 37259 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 37260 ;; Parameters:    Size  Location     Type
 37261 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 37262 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 37263 ;;		 -> RAM(3759), 
 37264 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 37265 ;;		 -> buffer(512), 
 37266 ;;  len             2    4[COMRAM] unsigned int 
 37267 ;; Auto vars:     Size  Location     Type
 37268 ;;		None
 37269 ;; Return value:  Size  Location     Type
 37270 ;;                  2    0[COMRAM] int 
 37271 ;; Registers used:
 37272 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37273 ;; Tracked objects:
 37274 ;;		On entry : 0/0
 37275 ;;		On exit  : 0/0
 37276 ;;		Unchanged: 0/0
 37277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37278 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37280 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37281 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37282 ;;Total ram usage:        9 bytes
 37283 ;; Hardware stack levels used:    1
 37284 ;; This function calls:
 37285 ;;		Nothing
 37286 ;; This function is called by:
 37287 ;;		_fat_find_file
 37288 ;; This function uses a non-reentrant model
 37289 ;;
 37290                           
 37291                           	psect	text188
 37292  0061A0                     __ptext188:
 37293                           	opt stack 0
 37294  0061A0                     _strncmp:
 37295                           	opt stack 27
 37296                           
 37297                           ;incstack = 0
 37298  0061A0  D053               	goto	l3705
 37299  0061A2                     l11429:
 37300  0061A2  C001  FFF6         	movff	strncmp@s1,tblptrl
 37301  0061A6  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37302  0061AA  6AF8               	clrf	tblptru,c
 37303  0061AC  0E0E               	movlw	(high __ramtop+-1)
 37304  0061AE  64F7               	cpfsgt	tblptrh,c
 37305  0061B0  D003               	bra	u8187
 37306  0061B2  0008               	tblrd		*
 37307  0061B4  50F5               	movf	tablat,w,c
 37308  0061B6  D005               	bra	u8180
 37309  0061B8                     u8187:
 37310  0061B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 37311  0061BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 37312  0061C0  50EF               	movf	indf0,w,c
 37313  0061C2                     u8180:
 37314  0061C2  0900               	iorlw	0
 37315  0061C4  B4D8               	btfsc	status,2,c
 37316  0061C6  D019               	goto	u8200
 37317  0061C8  C003  FFD9         	movff	strncmp@s2,fsr2l
 37318  0061CC  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37319  0061D0  50DF               	movf	indf2,w,c
 37320  0061D2  6E07               	movwf	??_strncmp& (0+255),c
 37321  0061D4  C001  FFF6         	movff	strncmp@s1,tblptrl
 37322  0061D8  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37323  0061DC  6AF8               	clrf	tblptru,c
 37324  0061DE  0E0E               	movlw	(high __ramtop+-1)
 37325  0061E0  64F7               	cpfsgt	tblptrh,c
 37326  0061E2  D003               	bra	u8207
 37327  0061E4  0008               	tblrd		*
 37328  0061E6  50F5               	movf	tablat,w,c
 37329  0061E8  D005               	bra	u8205
 37330  0061EA                     u8207:
 37331  0061EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 37332  0061EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 37333  0061F2  50EF               	movf	indf0,w,c
 37334  0061F4                     u8205:
 37335  0061F4  1807               	xorwf	??_strncmp,w,c
 37336  0061F6  B4D8               	btfsc	status,2,c
 37337  0061F8  D023               	goto	l3707
 37338  0061FA                     u8200:
 37339  0061FA  C003  FFD9         	movff	strncmp@s2,fsr2l
 37340  0061FE  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37341  006202  50DF               	movf	indf2,w,c
 37342  006204  6E07               	movwf	??_strncmp& (0+255),c
 37343  006206  6A08               	clrf	(??_strncmp+1)& (0+255),c
 37344  006208  1E07               	comf	??_strncmp,f,c
 37345  00620A  1E08               	comf	??_strncmp+1,f,c
 37346  00620C  4A07               	infsnz	??_strncmp,f,c
 37347  00620E  2A08               	incf	??_strncmp+1,f,c
 37348  006210  C001  FFF6         	movff	strncmp@s1,tblptrl
 37349  006214  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37350  006218  6AF8               	clrf	tblptru,c
 37351  00621A  0E0E               	movlw	(high __ramtop+-1)
 37352  00621C  64F7               	cpfsgt	tblptrh,c
 37353  00621E  D003               	bra	u8217
 37354  006220  0008               	tblrd		*
 37355  006222  50F5               	movf	tablat,w,c
 37356  006224  D005               	bra	u8210
 37357  006226                     u8217:
 37358  006226  CFF6 FFE9          	movff	tblptrl,fsr0l
 37359  00622A  CFF7 FFEA          	movff	tblptrh,fsr0h
 37360  00622E  50EF               	movf	indf0,w,c
 37361  006230                     u8210:
 37362  006230  6E09               	movwf	(??_strncmp+2)& (0+255),c
 37363  006232  5009               	movf	??_strncmp+2,w,c
 37364  006234  2407               	addwf	??_strncmp,w,c
 37365  006236  6E01               	movwf	?_strncmp,c
 37366  006238  0E00               	movlw	0
 37367  00623A  2008               	addwfc	??_strncmp+1,w,c
 37368  00623C  6E02               	movwf	?_strncmp+1,c
 37369  00623E  0012               	return	
 37370  006240                     l3707:
 37371  006240  4A01               	infsnz	strncmp@s1,f,c
 37372  006242  2A02               	incf	strncmp@s1+1,f,c
 37373  006244  4A03               	infsnz	strncmp@s2,f,c
 37374  006246  2A04               	incf	strncmp@s2+1,f,c
 37375  006248                     l3705:
 37376  006248  0605               	decf	strncmp@len,f,c
 37377  00624A  A0D8               	btfss	status,0,c
 37378  00624C  0606               	decf	strncmp@len+1,f,c
 37379  00624E  2805               	incf	strncmp@len,w,c
 37380  006250  E1A8               	bnz	l11429
 37381  006252  2806               	incf	strncmp@len+1,w,c
 37382  006254  A4D8               	btfss	status,2,c
 37383  006256  D7A5               	goto	l3706
 37384  006258  0E00               	movlw	0
 37385  00625A  6E02               	movwf	?_strncmp+1,c
 37386  00625C  0E00               	movlw	0
 37387  00625E  6E01               	movwf	?_strncmp,c
 37388  006260  0012               	return	
 37389  006262                     __end_of_strncmp:
 37390                           	opt stack 0
 37391                           tosu	equ	0xFFF
 37392                           tosh	equ	0xFFE
 37393                           tosl	equ	0xFFD
 37394                           pclath	equ	0xFFA
 37395                           tblptru	equ	0xFF8
 37396                           tblptrh	equ	0xFF7
 37397                           tblptrl	equ	0xFF6
 37398                           tablat	equ	0xFF5
 37399                           prodh	equ	0xFF4
 37400                           prodl	equ	0xFF3
 37401                           intcon	equ	0xFF2
 37402                           intcon2	equ	0xFF1
 37403                           intcon3	equ	0xFF0
 37404                           indf0	equ	0xFEF
 37405                           postinc0	equ	0xFEE
 37406                           fsr0h	equ	0xFEA
 37407                           fsr0l	equ	0xFE9
 37408                           wreg	equ	0xFE8
 37409                           indf1	equ	0xFE7
 37410                           postdec1	equ	0xFE5
 37411                           plusw1	equ	0xFE3
 37412                           fsr1h	equ	0xFE2
 37413                           fsr1l	equ	0xFE1
 37414                           indf2	equ	0xFDF
 37415                           postinc2	equ	0xFDE
 37416                           postdec2	equ	0xFDD
 37417                           plusw2	equ	0xFDB
 37418                           fsr2h	equ	0xFDA
 37419                           fsr2l	equ	0xFD9
 37420                           status	equ	0xFD8
 37421                           
 37422 ;; *************** function __get_time *****************
 37423 ;; Defined at:
 37424 ;;		line 376 in file "fat16.c"
 37425 ;; Parameters:    Size  Location     Type
 37426 ;;		None
 37427 ;; Auto vars:     Size  Location     Type
 37428 ;;		None
 37429 ;; Return value:  Size  Location     Type
 37430 ;;                  2    0[COMRAM] unsigned int 
 37431 ;; Registers used:
 37432 ;;		wreg, status,2
 37433 ;; Tracked objects:
 37434 ;;		On entry : 0/0
 37435 ;;		On exit  : 0/0
 37436 ;;		Unchanged: 0/0
 37437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37442 ;;Total ram usage:        2 bytes
 37443 ;; Hardware stack levels used:    1
 37444 ;; This function calls:
 37445 ;;		Nothing
 37446 ;; This function is called by:
 37447 ;;		_fat_create_file
 37448 ;; This function uses a non-reentrant model
 37449 ;;
 37450                           
 37451                           	psect	text189
 37452  008F7A                     __ptext189:
 37453                           	opt stack 0
 37454  008F7A                     __get_time:
 37455                           	opt stack 26
 37456                           
 37457                           ;fat16.c: 388: return 0x0000;
 37458                           
 37459                           ;incstack = 0
 37460  008F7A  0E00               	movlw	0
 37461  008F7C  6E02               	movwf	?__get_time+1,c
 37462  008F7E  0E00               	movlw	0
 37463  008F80  6E01               	movwf	?__get_time,c
 37464  008F82  0012               	return	
 37465  008F84                     __end_of__get_time:
 37466                           	opt stack 0
 37467                           tosu	equ	0xFFF
 37468                           tosh	equ	0xFFE
 37469                           tosl	equ	0xFFD
 37470                           pclath	equ	0xFFA
 37471                           tblptru	equ	0xFF8
 37472                           tblptrh	equ	0xFF7
 37473                           tblptrl	equ	0xFF6
 37474                           tablat	equ	0xFF5
 37475                           prodh	equ	0xFF4
 37476                           prodl	equ	0xFF3
 37477                           intcon	equ	0xFF2
 37478                           intcon2	equ	0xFF1
 37479                           intcon3	equ	0xFF0
 37480                           indf0	equ	0xFEF
 37481                           postinc0	equ	0xFEE
 37482                           fsr0h	equ	0xFEA
 37483                           fsr0l	equ	0xFE9
 37484                           wreg	equ	0xFE8
 37485                           indf1	equ	0xFE7
 37486                           postdec1	equ	0xFE5
 37487                           plusw1	equ	0xFE3
 37488                           fsr1h	equ	0xFE2
 37489                           fsr1l	equ	0xFE1
 37490                           indf2	equ	0xFDF
 37491                           postinc2	equ	0xFDE
 37492                           postdec2	equ	0xFDD
 37493                           plusw2	equ	0xFDB
 37494                           fsr2h	equ	0xFDA
 37495                           fsr2l	equ	0xFD9
 37496                           status	equ	0xFD8
 37497                           
 37498 ;; *************** function __get_date *****************
 37499 ;; Defined at:
 37500 ;;		line 392 in file "fat16.c"
 37501 ;; Parameters:    Size  Location     Type
 37502 ;;		None
 37503 ;; Auto vars:     Size  Location     Type
 37504 ;;		None
 37505 ;; Return value:  Size  Location     Type
 37506 ;;                  2    0[COMRAM] unsigned int 
 37507 ;; Registers used:
 37508 ;;		wreg, status,2
 37509 ;; Tracked objects:
 37510 ;;		On entry : 0/0
 37511 ;;		On exit  : 0/0
 37512 ;;		Unchanged: 0/0
 37513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37518 ;;Total ram usage:        2 bytes
 37519 ;; Hardware stack levels used:    1
 37520 ;; This function calls:
 37521 ;;		Nothing
 37522 ;; This function is called by:
 37523 ;;		_fat_create_file
 37524 ;; This function uses a non-reentrant model
 37525 ;;
 37526                           
 37527                           	psect	text190
 37528  008F84                     __ptext190:
 37529                           	opt stack 0
 37530  008F84                     __get_date:
 37531                           	opt stack 26
 37532                           
 37533                           ;fat16.c: 404: return 0x0000;
 37534                           
 37535                           ;incstack = 0
 37536  008F84  0E00               	movlw	0
 37537  008F86  6E02               	movwf	?__get_date+1,c
 37538  008F88  0E00               	movlw	0
 37539  008F8A  6E01               	movwf	?__get_date,c
 37540  008F8C  0012               	return	
 37541  008F8E                     __end_of__get_date:
 37542                           	opt stack 0
 37543                           tosu	equ	0xFFF
 37544                           tosh	equ	0xFFE
 37545                           tosl	equ	0xFFD
 37546                           pclath	equ	0xFFA
 37547                           tblptru	equ	0xFF8
 37548                           tblptrh	equ	0xFF7
 37549                           tblptrl	equ	0xFF6
 37550                           tablat	equ	0xFF5
 37551                           prodh	equ	0xFF4
 37552                           prodl	equ	0xFF3
 37553                           intcon	equ	0xFF2
 37554                           intcon2	equ	0xFF1
 37555                           intcon3	equ	0xFF0
 37556                           indf0	equ	0xFEF
 37557                           postinc0	equ	0xFEE
 37558                           fsr0h	equ	0xFEA
 37559                           fsr0l	equ	0xFE9
 37560                           wreg	equ	0xFE8
 37561                           indf1	equ	0xFE7
 37562                           postdec1	equ	0xFE5
 37563                           plusw1	equ	0xFE3
 37564                           fsr1h	equ	0xFE2
 37565                           fsr1l	equ	0xFE1
 37566                           indf2	equ	0xFDF
 37567                           postinc2	equ	0xFDE
 37568                           postdec2	equ	0xFDD
 37569                           plusw2	equ	0xFDB
 37570                           fsr2h	equ	0xFDA
 37571                           fsr2l	equ	0xFD9
 37572                           status	equ	0xFD8
 37573                           
 37574 ;; *************** function __get_available_root_entry *****************
 37575 ;; Defined at:
 37576 ;;		line 442 in file "fat16.c"
 37577 ;; Parameters:    Size  Location     Type
 37578 ;;		None
 37579 ;; Auto vars:     Size  Location     Type
 37580 ;;  file_number     1   53[COMRAM] unsigned char 
 37581 ;; Return value:  Size  Location     Type
 37582 ;;                  1    wreg      unsigned char 
 37583 ;; Registers used:
 37584 ;;		wreg, status,2, status,0, cstack
 37585 ;; Tracked objects:
 37586 ;;		On entry : 0/0
 37587 ;;		On exit  : 0/0
 37588 ;;		Unchanged: 0/0
 37589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37594 ;;Total ram usage:        1 bytes
 37595 ;; Hardware stack levels used:    1
 37596 ;; Hardware stack levels required when called:    6
 37597 ;; This function calls:
 37598 ;;		__root_is_available
 37599 ;; This function is called by:
 37600 ;;		_fat_create_file
 37601 ;; This function uses a non-reentrant model
 37602 ;;
 37603                           
 37604                           	psect	text191
 37605  008BFC                     __ptext191:
 37606                           	opt stack 0
 37607  008BFC                     __get_available_root_entry:
 37608                           	opt stack 20
 37609                           
 37610                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 37611                           
 37612                           ;incstack = 0
 37613  008BFC  0E00               	movlw	0
 37614  008BFE  6E36               	movwf	__get_available_root_entry@file_number,c
 37615  008C00                     l12141:
 37616  008C00  0E3F               	movlw	63
 37617  008C02  6436               	cpfsgt	__get_available_root_entry@file_number,c
 37618  008C04  D001               	goto	l2023
 37619  008C06  D00A               	goto	u9120
 37620  008C08                     l2023:
 37621                           
 37622                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 37623  008C08  5036               	movf	__get_available_root_entry@file_number,w,c
 37624  008C0A  ECA3  F03D         	call	__root_is_available
 37625  008C0E  0900               	iorlw	0
 37626  008C10  B4D8               	btfsc	status,2,c
 37627  008C12  D002               	goto	l2025
 37628                           
 37629                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 37630  008C14  5036               	movf	__get_available_root_entry@file_number,w,c
 37631  008C16  0012               	return	
 37632  008C18                     l2025:
 37633  008C18  2A36               	incf	__get_available_root_entry@file_number,f,c
 37634  008C1A  D7F2               	goto	l12141
 37635  008C1C                     u9120:
 37636                           
 37637                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 37638  008C1C  0EFF               	movlw	255
 37639  008C1E  0012               	return	
 37640  008C20                     __end_of__get_available_root_entry:
 37641                           	opt stack 0
 37642                           tosu	equ	0xFFF
 37643                           tosh	equ	0xFFE
 37644                           tosl	equ	0xFFD
 37645                           pclath	equ	0xFFA
 37646                           tblptru	equ	0xFF8
 37647                           tblptrh	equ	0xFF7
 37648                           tblptrl	equ	0xFF6
 37649                           tablat	equ	0xFF5
 37650                           prodh	equ	0xFF4
 37651                           prodl	equ	0xFF3
 37652                           intcon	equ	0xFF2
 37653                           intcon2	equ	0xFF1
 37654                           intcon3	equ	0xFF0
 37655                           indf0	equ	0xFEF
 37656                           postinc0	equ	0xFEE
 37657                           fsr0h	equ	0xFEA
 37658                           fsr0l	equ	0xFE9
 37659                           wreg	equ	0xFE8
 37660                           indf1	equ	0xFE7
 37661                           postdec1	equ	0xFE5
 37662                           plusw1	equ	0xFE3
 37663                           fsr1h	equ	0xFE2
 37664                           fsr1l	equ	0xFE1
 37665                           indf2	equ	0xFDF
 37666                           postinc2	equ	0xFDE
 37667                           postdec2	equ	0xFDD
 37668                           plusw2	equ	0xFDB
 37669                           fsr2h	equ	0xFDA
 37670                           fsr2l	equ	0xFD9
 37671                           status	equ	0xFD8
 37672                           
 37673 ;; *************** function __parse_file_append *****************
 37674 ;; Defined at:
 37675 ;;		line 644 in file "api.c"
 37676 ;; Parameters:    Size  Location     Type
 37677 ;;  data            2   89[COMRAM] PTR unsigned char 
 37678 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37679 ;; Auto vars:     Size  Location     Type
 37680 ;;		None
 37681 ;; Return value:  Size  Location     Type
 37682 ;;                  1    wreg      unsigned char 
 37683 ;; Registers used:
 37684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37685 ;; Tracked objects:
 37686 ;;		On entry : 0/0
 37687 ;;		On exit  : 0/0
 37688 ;;		Unchanged: 0/0
 37689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37693 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37694 ;;Total ram usage:        3 bytes
 37695 ;; Hardware stack levels used:    1
 37696 ;; Hardware stack levels required when called:    9
 37697 ;; This function calls:
 37698 ;;		_fat_append_to_file
 37699 ;; This function is called by:
 37700 ;;		__parse_command_long
 37701 ;; This function uses a non-reentrant model
 37702 ;;
 37703                           
 37704                           	psect	text192
 37705  00737A                     __ptext192:
 37706                           	opt stack 0
 37707  00737A                     __parse_file_append:
 37708                           	opt stack 19
 37709                           
 37710                           ;api.c: 647: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 37711                           
 37712                           ;incstack = 0
 37713  00737A  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 37714  00737E  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 37715  007382  0E54               	movlw	84
 37716  007384  18DE               	xorwf	postinc2,w,c
 37717  007386  A4D8               	btfss	status,2,c
 37718  007388  D014               	goto	u10900
 37719  00738A  EE20 F003          	lfsr	2,3
 37720  00738E  505A               	movf	__parse_file_append@data,w,c
 37721  007390  26D9               	addwf	fsr2l,f,c
 37722  007392  505B               	movf	__parse_file_append@data+1,w,c
 37723  007394  22DA               	addwfc	fsr2h,f,c
 37724  007396  0EFE               	movlw	254
 37725  007398  18DE               	xorwf	postinc2,w,c
 37726  00739A  A4D8               	btfss	status,2,c
 37727  00739C  D00A               	goto	u10900
 37728  00739E  EE20 F004          	lfsr	2,4
 37729  0073A2  505A               	movf	__parse_file_append@data,w,c
 37730  0073A4  26D9               	addwf	fsr2l,f,c
 37731  0073A6  505B               	movf	__parse_file_append@data+1,w,c
 37732  0073A8  22DA               	addwfc	fsr2h,f,c
 37733  0073AA  0E4B               	movlw	75
 37734  0073AC  18DE               	xorwf	postinc2,w,c
 37735  0073AE  B4D8               	btfsc	status,2,c
 37736  0073B0  D002               	goto	l2825
 37737  0073B2                     u10900:
 37738                           
 37739                           ;api.c: 648: {;api.c: 650: return 65;
 37740  0073B2  0E41               	movlw	65
 37741  0073B4  0012               	return	
 37742  0073B6                     l2825:
 37743                           
 37744                           ;api.c: 651: };api.c: 654: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 37745  0073B6  EE20 F002          	lfsr	2,2
 37746  0073BA  505A               	movf	__parse_file_append@data,w,c
 37747  0073BC  26D9               	addwf	fsr2l,f,c
 37748  0073BE  505B               	movf	__parse_file_append@data+1,w,c
 37749  0073C0  22DA               	addwfc	fsr2h,f,c
 37750  0073C2  50DF               	movf	indf2,w,c
 37751  0073C4  6E5C               	movwf	??__parse_file_append& (0+255),c
 37752  0073C6  505C               	movf	??__parse_file_append,w,c
 37753  0073C8  6E56               	movwf	fat_append_to_file@number_of_bytes,c
 37754  0073CA  6A57               	clrf	fat_append_to_file@number_of_bytes+1,c
 37755  0073CC  0E05               	movlw	5
 37756  0073CE  245A               	addwf	__parse_file_append@data,w,c
 37757  0073D0  6E58               	movwf	fat_append_to_file@data,c
 37758  0073D2  0E00               	movlw	0
 37759  0073D4  205B               	addwfc	__parse_file_append@data+1,w,c
 37760  0073D6  6E59               	movwf	fat_append_to_file@data+1,c
 37761  0073D8  EE20 F001          	lfsr	2,1
 37762  0073DC  505A               	movf	__parse_file_append@data,w,c
 37763  0073DE  26D9               	addwf	fsr2l,f,c
 37764  0073E0  505B               	movf	__parse_file_append@data+1,w,c
 37765  0073E2  22DA               	addwfc	fsr2h,f,c
 37766  0073E4  50DF               	movf	indf2,w,c
 37767  0073E6  EC49  F037         	call	_fat_append_to_file
 37768                           
 37769                           ;api.c: 655: return data[2] + 5;
 37770  0073EA  EE20 F002          	lfsr	2,2
 37771  0073EE  505A               	movf	__parse_file_append@data,w,c
 37772  0073F0  26D9               	addwf	fsr2l,f,c
 37773  0073F2  505B               	movf	__parse_file_append@data+1,w,c
 37774  0073F4  22DA               	addwfc	fsr2h,f,c
 37775  0073F6  50DF               	movf	indf2,w,c
 37776  0073F8  0F05               	addlw	5
 37777  0073FA  0012               	return	
 37778  0073FC                     __end_of__parse_file_append:
 37779                           	opt stack 0
 37780                           tosu	equ	0xFFF
 37781                           tosh	equ	0xFFE
 37782                           tosl	equ	0xFFD
 37783                           pclath	equ	0xFFA
 37784                           tblptru	equ	0xFF8
 37785                           tblptrh	equ	0xFF7
 37786                           tblptrl	equ	0xFF6
 37787                           tablat	equ	0xFF5
 37788                           prodh	equ	0xFF4
 37789                           prodl	equ	0xFF3
 37790                           intcon	equ	0xFF2
 37791                           intcon2	equ	0xFF1
 37792                           intcon3	equ	0xFF0
 37793                           indf0	equ	0xFEF
 37794                           postinc0	equ	0xFEE
 37795                           fsr0h	equ	0xFEA
 37796                           fsr0l	equ	0xFE9
 37797                           wreg	equ	0xFE8
 37798                           indf1	equ	0xFE7
 37799                           postdec1	equ	0xFE5
 37800                           plusw1	equ	0xFE3
 37801                           fsr1h	equ	0xFE2
 37802                           fsr1l	equ	0xFE1
 37803                           indf2	equ	0xFDF
 37804                           postinc2	equ	0xFDE
 37805                           postdec2	equ	0xFDD
 37806                           plusw2	equ	0xFDB
 37807                           fsr2h	equ	0xFDA
 37808                           fsr2l	equ	0xFD9
 37809                           status	equ	0xFD8
 37810                           
 37811 ;; *************** function _fat_append_to_file *****************
 37812 ;; Defined at:
 37813 ;;		line 676 in file "fat16.c"
 37814 ;; Parameters:    Size  Location     Type
 37815 ;;  file_number     1    wreg     unsigned char 
 37816 ;;  number_of_by    2   85[COMRAM] unsigned int 
 37817 ;;  data            2   87[COMRAM] PTR unsigned char 
 37818 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37819 ;; Auto vars:     Size  Location     Type
 37820 ;;  file_number     1   55[BANK0 ] unsigned char 
 37821 ;;  old_file_siz    4   51[BANK0 ] unsigned long 
 37822 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 37823 ;;  return_code     1   50[BANK0 ] unsigned char 
 37824 ;; Return value:  Size  Location     Type
 37825 ;;                  1    wreg      unsigned char 
 37826 ;; Registers used:
 37827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37828 ;; Tracked objects:
 37829 ;;		On entry : 0/0
 37830 ;;		On exit  : 0/0
 37831 ;;		Unchanged: 0/0
 37832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37834 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37836 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37837 ;;Total ram usage:       14 bytes
 37838 ;; Hardware stack levels used:    1
 37839 ;; Hardware stack levels required when called:    8
 37840 ;; This function calls:
 37841 ;;		__root_is_available
 37842 ;;		_fat_get_file_size
 37843 ;;		_fat_modify_file
 37844 ;;		_fat_resize_file
 37845 ;; This function is called by:
 37846 ;;		__parse_file_append
 37847 ;; This function uses a non-reentrant model
 37848 ;;
 37849                           
 37850                           	psect	text193
 37851  006E92                     __ptext193:
 37852                           	opt stack 0
 37853  006E92                     _fat_append_to_file:
 37854                           	opt stack 19
 37855                           
 37856                           ;incstack = 0
 37857                           ;fat_append_to_file@file_number stored from wreg
 37858  006E92  0100               	movlb	0	; () banked
 37859  006E94  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 37860                           
 37861                           ;fat16.c: 678: uint32_t old_file_size;;fat16.c: 679: uint32_t new_file_size;;fat16.c: 68
      +                          0: uint8_t return_code;;fat16.c: 683: if(file_number>=64)
 37862  006E96  0E3F               	movlw	63
 37863  006E98  0100               	movlb	0	; () banked
 37864  006E9A  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 37865  006E9C  D001               	goto	l2069
 37866  006E9E  0012               	return	
 37867  006EA0                     l2069:
 37868                           
 37869                           ; BSR set to: 0
 37870                           ;fat16.c: 687: };fat16.c: 690: if(_root_is_available(file_number))
 37871                           
 37872                           ; BSR set to: 0
 37873  006EA0  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37874  006EA2  ECA3  F03D         	call	__root_is_available
 37875  006EA6  0900               	iorlw	0
 37876  006EA8  A4D8               	btfss	status,2,c
 37877  006EAA  0012               	return	
 37878                           
 37879                           ;fat16.c: 694: };fat16.c: 697: old_file_size = fat_get_file_size(file_number);
 37880                           
 37881                           ;fat16.c: 691: {;fat16.c: 693: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 37882  006EAC  0100               	movlb	0	; () banked
 37883  006EAE  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37884  006EB0  EC0B  F03C         	call	_fat_get_file_size
 37885  006EB4  C036  F093         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 37886  006EB8  C037  F094         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 37887  006EBC  C038  F095         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 37888  006EC0  C039  F096         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 37889                           
 37890                           ;fat16.c: 700: new_file_size = old_file_size + number_of_bytes;
 37891  006EC4  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 37892  006EC6  0100               	movlb	0	; () banked
 37893  006EC8  2593               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 37894  006ECA  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 37895  006ECC  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 37896  006ECE  2194               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 37897  006ED0  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 37898  006ED2  0E00               	movlw	0
 37899  006ED4  2195               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 37900  006ED6  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 37901  006ED8  0E00               	movlw	0
 37902  006EDA  2196               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 37903  006EDC  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 37904                           
 37905                           ; BSR set to: 0
 37906                           ;fat16.c: 703: return_code = fat_resize_file(file_number, new_file_size);
 37907  006EDE  C08E  F04D         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 37908  006EE2  C08F  F04E         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 37909  006EE6  C090  F04F         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 37910  006EEA  C091  F050         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 37911  006EEE  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37912  006EF0  ECF3  F026         	call	_fat_resize_file
 37913  006EF4  0100               	movlb	0	; () banked
 37914  006EF6  6F92               	movwf	fat_append_to_file@return_code& (0+255),b
 37915                           
 37916                           ; BSR set to: 0
 37917                           ;fat16.c: 704: if(return_code!=0x00)
 37918  006EF8  5192               	movf	fat_append_to_file@return_code& (0+255),w,b
 37919  006EFA  A4D8               	btfss	status,2,c
 37920  006EFC  0012               	return	
 37921                           
 37922                           ; BSR set to: 0
 37923                           ;fat16.c: 708: };fat16.c: 711: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 37924                           
 37925                           ; BSR set to: 0
 37926                           
 37927                           ; BSR set to: 0
 37928                           ;fat16.c: 705: {;fat16.c: 707: return return_code - 0x0F;;	Return value of _fat_append_t
      +                          o_file is never used
 37929  006EFE  C093  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 37930  006F02  C094  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 37931  006F06  C095  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 37932  006F0A  C096  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 37933  006F0E  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 37934  006F12  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 37935  006F16  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 37936  006F1A  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 37937  006F1E  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37938  006F20  EC42  F011         	call	_fat_modify_file
 37939  006F24  0012               	return	
 37940  006F26                     __end_of_fat_append_to_file:
 37941                           	opt stack 0
 37942                           tosu	equ	0xFFF
 37943                           tosh	equ	0xFFE
 37944                           tosl	equ	0xFFD
 37945                           pclath	equ	0xFFA
 37946                           tblptru	equ	0xFF8
 37947                           tblptrh	equ	0xFF7
 37948                           tblptrl	equ	0xFF6
 37949                           tablat	equ	0xFF5
 37950                           prodh	equ	0xFF4
 37951                           prodl	equ	0xFF3
 37952                           intcon	equ	0xFF2
 37953                           intcon2	equ	0xFF1
 37954                           intcon3	equ	0xFF0
 37955                           indf0	equ	0xFEF
 37956                           postinc0	equ	0xFEE
 37957                           fsr0h	equ	0xFEA
 37958                           fsr0l	equ	0xFE9
 37959                           wreg	equ	0xFE8
 37960                           indf1	equ	0xFE7
 37961                           postdec1	equ	0xFE5
 37962                           plusw1	equ	0xFE3
 37963                           fsr1h	equ	0xFE2
 37964                           fsr1l	equ	0xFE1
 37965                           indf2	equ	0xFDF
 37966                           postinc2	equ	0xFDE
 37967                           postdec2	equ	0xFDD
 37968                           plusw2	equ	0xFDB
 37969                           fsr2h	equ	0xFDA
 37970                           fsr2l	equ	0xFD9
 37971                           status	equ	0xFD8
 37972                           
 37973 ;; *************** function _fat_resize_file *****************
 37974 ;; Defined at:
 37975 ;;		line 850 in file "fat16.c"
 37976 ;; Parameters:    Size  Location     Type
 37977 ;;  file_number     1    wreg     unsigned char 
 37978 ;;  new_file_siz    4   76[COMRAM] unsigned long 
 37979 ;; Auto vars:     Size  Location     Type
 37980 ;;  file_number     1    6[BANK0 ] unsigned char 
 37981 ;;  root           32    7[BANK0 ] struct .
 37982 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 37983 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 37984 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 37985 ;; Return value:  Size  Location     Type
 37986 ;;                  1    wreg      unsigned char 
 37987 ;; Registers used:
 37988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37989 ;; Tracked objects:
 37990 ;;		On entry : 0/0
 37991 ;;		On exit  : 0/0
 37992 ;;		Unchanged: 0/0
 37993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37995 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37996 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37997 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37998 ;;Total ram usage:       47 bytes
 37999 ;; Hardware stack levels used:    1
 38000 ;; Hardware stack levels required when called:    7
 38001 ;; This function calls:
 38002 ;;		__make_cluster_chain
 38003 ;;		__root_is_available
 38004 ;;		__write_root
 38005 ;;		_fat_get_file_information
 38006 ;; This function is called by:
 38007 ;;		_fat_append_to_file
 38008 ;;		__parse_file_resize
 38009 ;; This function uses a non-reentrant model
 38010 ;;
 38011                           
 38012                           	psect	text194
 38013  004DE6                     __ptext194:
 38014                           	opt stack 0
 38015  004DE6                     _fat_resize_file:
 38016                           	opt stack 20
 38017                           
 38018                           ;incstack = 0
 38019                           ;fat_resize_file@file_number stored from wreg
 38020  004DE6  0100               	movlb	0	; () banked
 38021  004DE8  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 38022                           
 38023                           ;fat16.c: 852: rootEntry_t root;;fat16.c: 853: uint16_t old_number_of_clusters;;fat16.c:
      +                           854: uint16_t new_number_of_clusters;;fat16.c: 855: uint16_t first_cluster;;fat16.c: 85
      +                          8: if(file_number>=64)
 38024  004DEA  0E3F               	movlw	63
 38025  004DEC  0100               	movlb	0	; () banked
 38026  004DEE  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 38027  004DF0  D002               	goto	l2098
 38028                           
 38029                           ; BSR set to: 0
 38030                           ;fat16.c: 859: {;fat16.c: 861: return 0xFF;
 38031  004DF2  0EFF               	movlw	255
 38032                           
 38033                           ; BSR set to: 0
 38034  004DF4  0012               	return	
 38035  004DF6                     l2098:
 38036                           
 38037                           ; BSR set to: 0
 38038                           ;fat16.c: 862: };fat16.c: 865: if(_root_is_available(file_number))
 38039                           
 38040                           ; BSR set to: 0
 38041  004DF6  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38042  004DF8  ECA3  F03D         	call	__root_is_available
 38043  004DFC  0900               	iorlw	0
 38044  004DFE  B4D8               	btfsc	status,2,c
 38045  004E00  D002               	goto	l2100
 38046                           
 38047                           ;fat16.c: 866: {;fat16.c: 868: return 0xFE;
 38048  004E02  0EFE               	movlw	254
 38049  004E04  0012               	return	
 38050  004E06                     l2100:
 38051                           
 38052                           ;fat16.c: 869: };fat16.c: 872: fat_get_file_information(file_number, &root);
 38053  004E06  0E67               	movlw	low fat_resize_file@root
 38054  004E08  6E30               	movwf	fat_get_file_information@data,c
 38055  004E0A  0E00               	movlw	high fat_resize_file@root
 38056  004E0C  6E31               	movwf	fat_get_file_information@data+1,c
 38057  004E0E  0100               	movlb	0	; () banked
 38058  004E10  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38059  004E12  EC2B  F03B         	call	_fat_get_file_information
 38060                           
 38061                           ;fat16.c: 875: old_number_of_clusters = (root.fileSize+512-1)>>9;
 38062  004E16  EE20  F083         	lfsr	2,fat_resize_file@root+28
 38063  004E1A  0EFF               	movlw	255
 38064  004E1C  24DE               	addwf	postinc2,w,c
 38065  004E1E  6E51               	movwf	??_fat_resize_file& (0+255),c
 38066  004E20  0E01               	movlw	1
 38067  004E22  20DE               	addwfc	postinc2,w,c
 38068  004E24  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 38069  004E26  0E00               	movlw	0
 38070  004E28  20DE               	addwfc	postinc2,w,c
 38071  004E2A  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 38072  004E2C  0E00               	movlw	0
 38073  004E2E  20DE               	addwfc	postinc2,w,c
 38074  004E30  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 38075  004E32  0E0A               	movlw	10
 38076  004E34  D005               	goto	u9240
 38077  004E36                     u9245:
 38078  004E36  90D8               	bcf	status,0,c
 38079  004E38  3254               	rrcf	??_fat_resize_file+3,f,c
 38080  004E3A  3253               	rrcf	??_fat_resize_file+2,f,c
 38081  004E3C  3252               	rrcf	??_fat_resize_file+1,f,c
 38082  004E3E  3251               	rrcf	??_fat_resize_file,f,c
 38083  004E40                     u9240:
 38084  004E40  2EE8               	decfsz	wreg,f,c
 38085  004E42  D7F9               	goto	u9245
 38086  004E44  C051  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 38087  004E48  C052  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 38088                           
 38089                           ;fat16.c: 876: new_number_of_clusters = (new_file_size+512-1)>>9;
 38090  004E4C  0EFF               	movlw	255
 38091  004E4E  244D               	addwf	fat_resize_file@new_file_size,w,c
 38092  004E50  6E51               	movwf	??_fat_resize_file& (0+255),c
 38093  004E52  0E01               	movlw	1
 38094  004E54  204E               	addwfc	fat_resize_file@new_file_size+1,w,c
 38095  004E56  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 38096  004E58  0E00               	movlw	0
 38097  004E5A  204F               	addwfc	fat_resize_file@new_file_size+2,w,c
 38098  004E5C  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 38099  004E5E  0E00               	movlw	0
 38100  004E60  2050               	addwfc	fat_resize_file@new_file_size+3,w,c
 38101  004E62  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 38102  004E64  0E0A               	movlw	10
 38103  004E66  D005               	goto	u9250
 38104  004E68                     u9255:
 38105  004E68  90D8               	bcf	status,0,c
 38106  004E6A  3254               	rrcf	??_fat_resize_file+3,f,c
 38107  004E6C  3253               	rrcf	??_fat_resize_file+2,f,c
 38108  004E6E  3252               	rrcf	??_fat_resize_file+1,f,c
 38109  004E70  3251               	rrcf	??_fat_resize_file,f,c
 38110  004E72                     u9250:
 38111  004E72  2EE8               	decfsz	wreg,f,c
 38112  004E74  D7F9               	goto	u9255
 38113  004E76  C051  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 38114  004E7A  C052  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 38115                           
 38116                           ;fat16.c: 879: if(old_number_of_clusters!=new_number_of_clusters)
 38117  004E7E  0100               	movlb	0	; () banked
 38118  004E80  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 38119  004E82  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 38120  004E84  E104               	bnz	u9260
 38121  004E86  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 38122  004E88  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 38123  004E8A  B4D8               	btfsc	status,2,c
 38124  004E8C  D01A               	goto	l2101
 38125  004E8E                     u9260:
 38126                           
 38127                           ; BSR set to: 0
 38128                           ;fat16.c: 880: {;fat16.c: 881: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 38129  004E8E  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 38130  004E92  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 38131  004E96  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 38132  004E9A  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 38133  004E9E  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 38134  004EA2  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 38135  004EA6  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 38136                           
 38137                           ;fat16.c: 882: if(first_cluster==0xFFFF)
 38138  004EAA  0100               	movlb	0	; () banked
 38139  004EAC  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 38140  004EAE  E105               	bnz	l2102
 38141  004EB0  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 38142  004EB2  A4D8               	btfss	status,2,c
 38143  004EB4  D002               	goto	l2102
 38144                           
 38145                           ; BSR set to: 0
 38146                           ;fat16.c: 883: {;fat16.c: 885: return 0xFD;
 38147  004EB6  0EFD               	movlw	253
 38148                           
 38149                           ; BSR set to: 0
 38150  004EB8  0012               	return	
 38151  004EBA                     l2102:
 38152                           
 38153                           ; BSR set to: 0
 38154                           ;fat16.c: 886: };fat16.c: 889: root.firstCluster = first_cluster;
 38155  004EBA  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 38156  004EBE  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 38157  004EC2                     l2101:
 38158                           
 38159                           ; BSR set to: 0
 38160                           ;fat16.c: 890: };fat16.c: 893: root.fileSize = new_file_size;
 38161  004EC2  C04D  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 38162  004EC6  C04E  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 38163  004ECA  C04F  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 38164  004ECE  C050  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 38165                           
 38166                           ; BSR set to: 0
 38167                           ;fat16.c: 896: _write_root(file_number, &root);
 38168  004ED2  0E67               	movlw	low fat_resize_file@root
 38169  004ED4  6E29               	movwf	__write_root@data,c
 38170  004ED6  0E00               	movlw	high fat_resize_file@root
 38171  004ED8  6E2A               	movwf	__write_root@data+1,c
 38172  004EDA  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38173  004EDC  EC34  F042         	call	__write_root
 38174                           
 38175                           ;fat16.c: 899: return 0x00;
 38176  004EE0  0E00               	movlw	0
 38177  004EE2  0012               	return	
 38178  004EE4                     __end_of_fat_resize_file:
 38179                           	opt stack 0
 38180                           tosu	equ	0xFFF
 38181                           tosh	equ	0xFFE
 38182                           tosl	equ	0xFFD
 38183                           pclath	equ	0xFFA
 38184                           tblptru	equ	0xFF8
 38185                           tblptrh	equ	0xFF7
 38186                           tblptrl	equ	0xFF6
 38187                           tablat	equ	0xFF5
 38188                           prodh	equ	0xFF4
 38189                           prodl	equ	0xFF3
 38190                           intcon	equ	0xFF2
 38191                           intcon2	equ	0xFF1
 38192                           intcon3	equ	0xFF0
 38193                           indf0	equ	0xFEF
 38194                           postinc0	equ	0xFEE
 38195                           fsr0h	equ	0xFEA
 38196                           fsr0l	equ	0xFE9
 38197                           wreg	equ	0xFE8
 38198                           indf1	equ	0xFE7
 38199                           postdec1	equ	0xFE5
 38200                           plusw1	equ	0xFE3
 38201                           fsr1h	equ	0xFE2
 38202                           fsr1l	equ	0xFE1
 38203                           indf2	equ	0xFDF
 38204                           postinc2	equ	0xFDE
 38205                           postdec2	equ	0xFDD
 38206                           plusw2	equ	0xFDB
 38207                           fsr2h	equ	0xFDA
 38208                           fsr2l	equ	0xFD9
 38209                           status	equ	0xFD8
 38210                           
 38211 ;; *************** function __write_root *****************
 38212 ;; Defined at:
 38213 ;;		line 473 in file "fat16.c"
 38214 ;; Parameters:    Size  Location     Type
 38215 ;;  file_number     1    wreg     unsigned char 
 38216 ;;  data            2   40[COMRAM] PTR struct .
 38217 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 38218 ;; Auto vars:     Size  Location     Type
 38219 ;;  file_number     1   46[COMRAM] unsigned char 
 38220 ;;  offset          2   44[COMRAM] unsigned int 
 38221 ;;  sector          2   42[COMRAM] unsigned int 
 38222 ;; Return value:  Size  Location     Type
 38223 ;;                  1    wreg      void 
 38224 ;; Registers used:
 38225 ;;		wreg, status,2, status,0, cstack
 38226 ;; Tracked objects:
 38227 ;;		On entry : 0/0
 38228 ;;		On exit  : 0/0
 38229 ;;		Unchanged: 0/0
 38230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38232 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38234 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38235 ;;Total ram usage:        7 bytes
 38236 ;; Hardware stack levels used:    1
 38237 ;; Hardware stack levels required when called:    5
 38238 ;; This function calls:
 38239 ;;		__offset_from_file_number
 38240 ;;		__sector_from_file_number
 38241 ;;		_flash_partial_write
 38242 ;; This function is called by:
 38243 ;;		_fat_create_file
 38244 ;;		_fat_rename_file
 38245 ;;		_fat_resize_file
 38246 ;; This function uses a non-reentrant model
 38247 ;;
 38248                           
 38249                           	psect	text195
 38250  008468                     __ptext195:
 38251                           	opt stack 0
 38252  008468                     __write_root:
 38253                           	opt stack 21
 38254                           
 38255                           ;incstack = 0
 38256                           ;__write_root@file_number stored from wreg
 38257  008468  6E2F               	movwf	__write_root@file_number,c
 38258                           
 38259                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 38260  00846A  502F               	movf	__write_root@file_number,w,c
 38261  00846C  EC28  F045         	call	__sector_from_file_number
 38262  008470  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 38263  008474  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 38264                           
 38265                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 38266  008478  502F               	movf	__write_root@file_number,w,c
 38267  00847A  ECB4  F045         	call	__offset_from_file_number
 38268  00847E  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 38269  008482  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 38270                           
 38271                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 38272  008486  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 38273  00848A  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 38274  00848E  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 38275  008492  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 38276  008496  0E00               	movlw	0
 38277  008498  6E25               	movwf	flash_partial_write@length+1,c
 38278  00849A  0E20               	movlw	32
 38279  00849C  6E24               	movwf	flash_partial_write@length,c
 38280  00849E  C029  F026         	movff	__write_root@data,flash_partial_write@data
 38281  0084A2  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 38282  0084A6  EC9C  F03B         	call	_flash_partial_write	;wreg free
 38283  0084AA  0012               	return		;funcret
 38284  0084AC                     __end_of__write_root:
 38285                           	opt stack 0
 38286                           tosu	equ	0xFFF
 38287                           tosh	equ	0xFFE
 38288                           tosl	equ	0xFFD
 38289                           pclath	equ	0xFFA
 38290                           tblptru	equ	0xFF8
 38291                           tblptrh	equ	0xFF7
 38292                           tblptrl	equ	0xFF6
 38293                           tablat	equ	0xFF5
 38294                           prodh	equ	0xFF4
 38295                           prodl	equ	0xFF3
 38296                           intcon	equ	0xFF2
 38297                           intcon2	equ	0xFF1
 38298                           intcon3	equ	0xFF0
 38299                           indf0	equ	0xFEF
 38300                           postinc0	equ	0xFEE
 38301                           fsr0h	equ	0xFEA
 38302                           fsr0l	equ	0xFE9
 38303                           wreg	equ	0xFE8
 38304                           indf1	equ	0xFE7
 38305                           postdec1	equ	0xFE5
 38306                           plusw1	equ	0xFE3
 38307                           fsr1h	equ	0xFE2
 38308                           fsr1l	equ	0xFE1
 38309                           indf2	equ	0xFDF
 38310                           postinc2	equ	0xFDE
 38311                           postdec2	equ	0xFDD
 38312                           plusw2	equ	0xFDB
 38313                           fsr2h	equ	0xFDA
 38314                           fsr2l	equ	0xFD9
 38315                           status	equ	0xFD8
 38316                           
 38317 ;; *************** function __make_cluster_chain *****************
 38318 ;; Defined at:
 38319 ;;		line 213 in file "fat16.c"
 38320 ;; Parameters:    Size  Location     Type
 38321 ;;  first_cluste    2   53[COMRAM] unsigned int 
 38322 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 38323 ;; Auto vars:     Size  Location     Type
 38324 ;;  next_cluster    2   74[COMRAM] unsigned int 
 38325 ;;  offset          2   72[COMRAM] unsigned int 
 38326 ;;  sector_in_bu    2   70[COMRAM] unsigned int 
 38327 ;;  sector          2   68[COMRAM] unsigned int 
 38328 ;;  remaining_cl    2   66[COMRAM] unsigned int 
 38329 ;;  different_se    2   63[COMRAM] unsigned int 
 38330 ;;  minimum_sect    2   61[COMRAM] unsigned int 
 38331 ;;  next_offset     2   59[COMRAM] unsigned int 
 38332 ;;  data_changed    1   65[COMRAM] unsigned char 
 38333 ;; Return value:  Size  Location     Type
 38334 ;;                  2   53[COMRAM] unsigned int 
 38335 ;; Registers used:
 38336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38337 ;; Tracked objects:
 38338 ;;		On entry : 0/0
 38339 ;;		On exit  : 0/0
 38340 ;;		Unchanged: 0/0
 38341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38343 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38345 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38346 ;;Total ram usage:       23 bytes
 38347 ;; Hardware stack levels used:    1
 38348 ;; Hardware stack levels required when called:    6
 38349 ;; This function calls:
 38350 ;;		__fat_offset_from_cluster
 38351 ;;		__fat_sector_from_cluster
 38352 ;;		__get_available_cluster
 38353 ;;		__get_available_offset_from_buffer
 38354 ;;		__read_value_from_offset
 38355 ;;		__write_value_to_offset
 38356 ;;		_flash_sector_read
 38357 ;;		_flash_sector_write
 38358 ;; This function is called by:
 38359 ;;		_fat_create_file
 38360 ;;		_fat_delete_file
 38361 ;;		_fat_resize_file
 38362 ;; This function uses a non-reentrant model
 38363 ;;
 38364                           
 38365                           	psect	text196
 38366  0015D2                     __ptext196:
 38367                           	opt stack 0
 38368  0015D2                     __make_cluster_chain:
 38369                           	opt stack 20
 38370                           
 38371                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 38372                           
 38373                           ;incstack = 0
 38374  0015D2  0E00               	movlw	0
 38375  0015D4  6E48               	movwf	__make_cluster_chain@sector_in_buffer+1,c
 38376  0015D6  0E00               	movlw	0
 38377  0015D8  6E47               	movwf	__make_cluster_chain@sector_in_buffer,c
 38378                           
 38379                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 38380  0015DA  C038  F043         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 38381  0015DE  C039  F044         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 38382                           
 38383                           ;fat16.c: 228: minimum_sector = 2;
 38384  0015E2  0E00               	movlw	0
 38385  0015E4  6E3F               	movwf	__make_cluster_chain@minimum_sector+1,c
 38386  0015E6  0E02               	movlw	2
 38387  0015E8  6E3E               	movwf	__make_cluster_chain@minimum_sector,c
 38388                           
 38389                           ;fat16.c: 229: data_changed = 0;
 38390  0015EA  0E00               	movlw	0
 38391  0015EC  6E42               	movwf	__make_cluster_chain@data_changed,c
 38392                           
 38393                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 38394  0015EE  5036               	movf	__make_cluster_chain@first_cluster,w,c
 38395  0015F0  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 38396  0015F2  A4D8               	btfss	status,2,c
 38397  0015F4  D023               	goto	l1983
 38398  0015F6  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 38399  0015F8  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 38400  0015FA  B4D8               	btfsc	status,2,c
 38401  0015FC  D01F               	goto	l1983
 38402                           
 38403                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 38404  0015FE  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 38405  001602  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 38406  001606  0E00               	movlw	0
 38407  001608  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 38408  00160A  0E00               	movlw	0
 38409  00160C  6E2E               	movwf	__get_available_cluster@skip_sector,c
 38410  00160E  EC6E  F030         	call	__get_available_cluster	;wreg free
 38411  001612  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 38412  001616  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 38413                           
 38414                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 38415  00161A  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 38416  00161E  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 38417  001622  ECEE  F046         	call	__fat_sector_from_cluster	;wreg free
 38418  001626  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 38419  00162A  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 38420                           
 38421                           ;fat16.c: 237: if(first_cluster == 0)
 38422  00162E  5036               	movf	__make_cluster_chain@first_cluster,w,c
 38423  001630  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 38424  001632  A4D8               	btfss	status,2,c
 38425  001634  D003               	goto	l1983
 38426                           
 38427                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 38428  001636  6836               	setf	?__make_cluster_chain,c
 38429  001638  6837               	setf	?__make_cluster_chain+1,c
 38430  00163A  0012               	return	
 38431  00163C                     l1983:
 38432                           
 38433                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 38434  00163C  C036  F04B         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 38435  001640  C037  F04C         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 38436                           
 38437                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 38438  001644  D0FA               	goto	l2000
 38439  001646                     
 38440                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 38441  001646  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 38442  00164A  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 38443  00164E  ECEE  F046         	call	__fat_sector_from_cluster	;wreg free
 38444  001652  C001  F045         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 38445  001656  C002  F046         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 38446                           
 38447                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 38448  00165A  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 38449  00165E  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 38450  001662  ECFA  F046         	call	__fat_offset_from_cluster	;wreg free
 38451  001666  C001  F049         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 38452  00166A  C002  F04A         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 38453                           
 38454                           ;fat16.c: 263: if(sector != sector_in_buffer)
 38455  00166E  5047               	movf	__make_cluster_chain@sector_in_buffer,w,c
 38456  001670  1845               	xorwf	__make_cluster_chain@sector,w,c
 38457  001672  E104               	bnz	u8010
 38458  001674  5048               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 38459  001676  1846               	xorwf	__make_cluster_chain@sector+1,w,c
 38460  001678  B4D8               	btfsc	status,2,c
 38461  00167A  D035               	goto	l1987
 38462  00167C                     u8010:
 38463                           
 38464                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 38465  00167C  5042               	movf	__make_cluster_chain@data_changed,w,c
 38466  00167E  B4D8               	btfsc	status,2,c
 38467  001680  D00A               	goto	l1988
 38468                           
 38469                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 38470  001682  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 38471  001686  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 38472  00168A  0EC0               	movlw	low _buffer
 38473  00168C  6E22               	movwf	flash_sector_write@data,c
 38474  00168E  0E03               	movlw	high _buffer
 38475  001690  6E23               	movwf	flash_sector_write@data+1,c
 38476  001692  ECEA  F03F         	call	_flash_sector_write	;wreg free
 38477  001696                     l1988:
 38478                           
 38479                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 38480  001696  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 38481  00169A  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 38482  00169E  C045  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 38483  0016A2  C046  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 38484  0016A6  EC6E  F030         	call	__get_available_cluster	;wreg free
 38485  0016AA  C02C  F040         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 38486  0016AE  C02D  F041         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 38487                           
 38488                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 38489  0016B2  C040  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 38490  0016B6  C041  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 38491  0016BA  ECEE  F046         	call	__fat_sector_from_cluster	;wreg free
 38492  0016BE  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 38493  0016C2  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 38494                           
 38495                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 38496  0016C6  C045  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 38497  0016CA  C046  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 38498  0016CE  0EC0               	movlw	low _buffer
 38499  0016D0  6E2A               	movwf	flash_sector_read@data,c
 38500  0016D2  0E03               	movlw	high _buffer
 38501  0016D4  6E2B               	movwf	flash_sector_read@data+1,c
 38502  0016D6  EC3F  F044         	call	_flash_sector_read	;wreg free
 38503                           
 38504                           ;fat16.c: 279: sector_in_buffer = sector;
 38505  0016DA  C045  F047         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 38506  0016DE  C046  F048         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 38507                           
 38508                           ;fat16.c: 280: data_changed = 0;
 38509  0016E2  0E00               	movlw	0
 38510  0016E4  6E42               	movwf	__make_cluster_chain@data_changed,c
 38511  0016E6                     l1987:
 38512                           
 38513                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 38514  0016E6  5044               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 38515  0016E8  E104               	bnz	u8030
 38516  0016EA  0E02               	movlw	2
 38517  0016EC  5C43               	subwf	__make_cluster_chain@remaining_clusters,w,c
 38518  0016EE  A0D8               	btfss	status,0,c
 38519  0016F0  D05C               	goto	l1989
 38520  0016F2                     u8030:
 38521                           
 38522                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 38523  0016F2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38524  0016F6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38525  0016FA  0EC0               	movlw	low _buffer
 38526  0016FC  6E03               	movwf	__read_value_from_offset@buffer,c
 38527  0016FE  0E03               	movlw	high _buffer
 38528  001700  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38529  001702  ECCD  F041         	call	__read_value_from_offset	;wreg free
 38530  001706  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38531  00170A  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38532                           
 38533                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 38534  00170E  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 38535  001710  E104               	bnz	u8040
 38536  001712  0E02               	movlw	2
 38537  001714  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38538  001716  A0D8               	btfss	status,0,c
 38539  001718  D006               	goto	u8050
 38540  00171A                     u8040:
 38541  00171A  0EDA               	movlw	218
 38542  00171C  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38543  00171E  0E1F               	movlw	31
 38544  001720  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 38545  001722  A0D8               	btfss	status,0,c
 38546  001724  D068               	goto	l1999
 38547  001726                     u8050:
 38548                           
 38549                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 38550  001726  0E02               	movlw	2
 38551  001728  2449               	addwf	__make_cluster_chain@offset,w,c
 38552  00172A  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 38553  00172C  0E00               	movlw	0
 38554  00172E  204A               	addwfc	__make_cluster_chain@offset+1,w,c
 38555  001730  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 38556  001732  0EC0               	movlw	low _buffer
 38557  001734  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 38558  001736  0E03               	movlw	high _buffer
 38559  001738  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 38560  00173A  EC61  F03E         	call	__get_available_offset_from_buffer	;wreg free
 38561  00173E  C001  F03C         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 38562  001742  C002  F03D         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 38563                           
 38564                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 38565  001746  283C               	incf	__make_cluster_chain@next_offset,w,c
 38566  001748  E103               	bnz	u8060
 38567  00174A  283D               	incf	__make_cluster_chain@next_offset+1,w,c
 38568  00174C  B4D8               	btfsc	status,2,c
 38569  00174E  D013               	goto	l1993
 38570  001750                     u8060:
 38571                           
 38572                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 38573  001750  0EFE               	movlw	254
 38574  001752  2447               	addwf	__make_cluster_chain@sector_in_buffer,w,c
 38575  001754  6E4B               	movwf	__make_cluster_chain@next_cluster,c
 38576  001756  0EFF               	movlw	255
 38577  001758  2048               	addwfc	__make_cluster_chain@sector_in_buffer+1,w,c
 38578  00175A  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 38579                           
 38580                           ;fat16.c: 299: next_cluster <<= 8;
 38581  00175C  504B               	movf	__make_cluster_chain@next_cluster,w,c
 38582  00175E  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 38583  001760  6A4B               	clrf	__make_cluster_chain@next_cluster,c
 38584                           
 38585                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 38586  001762  90D8               	bcf	status,0,c
 38587  001764  303D               	rrcf	__make_cluster_chain@next_offset+1,w,c
 38588  001766  6E3B               	movwf	(??__make_cluster_chain+1)& (0+255),c
 38589  001768  303C               	rrcf	__make_cluster_chain@next_offset,w,c
 38590  00176A  6E3A               	movwf	??__make_cluster_chain& (0+255),c
 38591  00176C  503A               	movf	??__make_cluster_chain,w,c
 38592  00176E  124B               	iorwf	__make_cluster_chain@next_cluster,f,c
 38593  001770  503B               	movf	??__make_cluster_chain+1,w,c
 38594  001772  124C               	iorwf	__make_cluster_chain@next_cluster+1,f,c
 38595                           
 38596                           ;fat16.c: 301: }
 38597  001774  D00B               	goto	l1996
 38598  001776                     l1993:
 38599                           
 38600                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 38601  001776  5040               	movf	__make_cluster_chain@different_sector_cluster,w,c
 38602  001778  1041               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 38603  00177A  A4D8               	btfss	status,2,c
 38604  00177C  D003               	goto	l1995
 38605                           
 38606                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 38607  00177E  6836               	setf	?__make_cluster_chain,c
 38608  001780  6837               	setf	?__make_cluster_chain+1,c
 38609  001782  0012               	return	
 38610  001784                     l1995:
 38611                           
 38612                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 38613  001784  C040  F04B         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 38614  001788  C041  F04C         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 38615  00178C                     l1996:
 38616                           
 38617                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 38618  00178C  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38619  001790  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38620  001794  0EC0               	movlw	low _buffer
 38621  001796  6E03               	movwf	__write_value_to_offset@buffer,c
 38622  001798  0E03               	movlw	high _buffer
 38623  00179A  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38624  00179C  C04B  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 38625  0017A0  C04C  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 38626  0017A4  ECF3  F043         	call	__write_value_to_offset	;wreg free
 38627  0017A8  D024               	goto	L49
 38628  0017AA                     l1989:
 38629                           
 38630                           ;fat16.c: 326: else if(remaining_clusters == 1)
 38631  0017AA  0443               	decf	__make_cluster_chain@remaining_clusters,w,c
 38632  0017AC  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 38633  0017AE  A4D8               	btfss	status,2,c
 38634  0017B0  D026               	goto	l1998
 38635                           
 38636                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 38637  0017B2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38638  0017B6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38639  0017BA  0EC0               	movlw	low _buffer
 38640  0017BC  6E03               	movwf	__read_value_from_offset@buffer,c
 38641  0017BE  0E03               	movlw	high _buffer
 38642  0017C0  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38643  0017C2  ECCD  F041         	call	__read_value_from_offset	;wreg free
 38644  0017C6  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38645  0017CA  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38646                           
 38647                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 38648  0017CE  284B               	incf	__make_cluster_chain@next_cluster,w,c
 38649  0017D0  E103               	bnz	u8090
 38650  0017D2  284C               	incf	__make_cluster_chain@next_cluster+1,w,c
 38651  0017D4  B4D8               	btfsc	status,2,c
 38652  0017D6  D00F               	goto	l1999
 38653  0017D8                     u8090:
 38654                           
 38655                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 38656  0017D8  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38657  0017DC  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38658  0017E0  0EC0               	movlw	low _buffer
 38659  0017E2  6E03               	movwf	__write_value_to_offset@buffer,c
 38660  0017E4  0E03               	movlw	high _buffer
 38661  0017E6  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38662  0017E8  0EFF               	movlw	255
 38663  0017EA  6E06               	movwf	__write_value_to_offset@value+1,c
 38664  0017EC  6805               	setf	__write_value_to_offset@value,c
 38665  0017EE  ECF3  F043         	call	__write_value_to_offset	;wreg free
 38666  0017F2                     L49:
 38667                           
 38668                           ;fat16.c: 336: data_changed = 1;
 38669  0017F2  0E01               	movlw	1
 38670  0017F4  6E42               	movwf	__make_cluster_chain@data_changed,c
 38671  0017F6                     l1999:
 38672                           
 38673                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 38674  0017F6  0643               	decf	__make_cluster_chain@remaining_clusters,f,c
 38675  0017F8  A0D8               	btfss	status,0,c
 38676  0017FA  0644               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 38677                           
 38678                           ;fat16.c: 341: }
 38679  0017FC  D01E               	goto	l2000
 38680  0017FE                     l1998:
 38681                           
 38682                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 38683  0017FE  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38684  001802  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38685  001806  0EC0               	movlw	low _buffer
 38686  001808  6E03               	movwf	__read_value_from_offset@buffer,c
 38687  00180A  0E03               	movlw	high _buffer
 38688  00180C  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38689  00180E  ECCD  F041         	call	__read_value_from_offset	;wreg free
 38690  001812  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38691  001816  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38692                           
 38693                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 38694  00181A  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38695  00181E  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38696  001822  0EC0               	movlw	low _buffer
 38697  001824  6E03               	movwf	__write_value_to_offset@buffer,c
 38698  001826  0E03               	movlw	high _buffer
 38699  001828  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38700  00182A  0E00               	movlw	0
 38701  00182C  6E06               	movwf	__write_value_to_offset@value+1,c
 38702  00182E  0E00               	movlw	0
 38703  001830  6E05               	movwf	__write_value_to_offset@value,c
 38704  001832  ECF3  F043         	call	__write_value_to_offset	;wreg free
 38705                           
 38706                           ;fat16.c: 352: data_changed = 1;
 38707  001836  0E01               	movlw	1
 38708  001838  6E42               	movwf	__make_cluster_chain@data_changed,c
 38709  00183A                     l2000:
 38710  00183A  5043               	movf	__make_cluster_chain@remaining_clusters,w,c
 38711  00183C  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 38712  00183E  A4D8               	btfss	status,2,c
 38713  001840  D702               	goto	l1986
 38714  001842  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 38715  001844  E104               	bnz	u8110
 38716  001846  0E02               	movlw	2
 38717  001848  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38718  00184A  A0D8               	btfss	status,0,c
 38719  00184C  D006               	goto	u8120
 38720  00184E                     u8110:
 38721  00184E  0EDA               	movlw	218
 38722  001850  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38723  001852  0E1F               	movlw	31
 38724  001854  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 38725  001856  A0D8               	btfss	status,0,c
 38726  001858  D6F6               	goto	l1986
 38727  00185A                     u8120:
 38728                           
 38729                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 38730  00185A  5042               	movf	__make_cluster_chain@data_changed,w,c
 38731  00185C  B4D8               	btfsc	status,2,c
 38732  00185E  D00A               	goto	l2004
 38733                           
 38734                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 38735  001860  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 38736  001864  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 38737  001868  0EC0               	movlw	low _buffer
 38738  00186A  6E22               	movwf	flash_sector_write@data,c
 38739  00186C  0E03               	movlw	high _buffer
 38740  00186E  6E23               	movwf	flash_sector_write@data+1,c
 38741  001870  ECEA  F03F         	call	_flash_sector_write	;wreg free
 38742  001874                     l2004:
 38743                           
 38744                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 38745  001874  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 38746  001876  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 38747  001878  B4D8               	btfsc	status,2,c
 38748  00187A  D005               	goto	l2005
 38749                           
 38750                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 38751  00187C  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 38752  001880  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 38753                           
 38754                           ;fat16.c: 367: }
 38755  001884  0012               	return	
 38756  001886                     l2005:
 38757                           
 38758                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 38759  001886  0E00               	movlw	0
 38760  001888  6E37               	movwf	?__make_cluster_chain+1,c
 38761  00188A  0E00               	movlw	0
 38762  00188C  6E36               	movwf	?__make_cluster_chain,c
 38763  00188E  0012               	return	
 38764  001890                     __end_of__make_cluster_chain:
 38765                           	opt stack 0
 38766                           tosu	equ	0xFFF
 38767                           tosh	equ	0xFFE
 38768                           tosl	equ	0xFFD
 38769                           pclath	equ	0xFFA
 38770                           tblptru	equ	0xFF8
 38771                           tblptrh	equ	0xFF7
 38772                           tblptrl	equ	0xFF6
 38773                           tablat	equ	0xFF5
 38774                           prodh	equ	0xFF4
 38775                           prodl	equ	0xFF3
 38776                           intcon	equ	0xFF2
 38777                           intcon2	equ	0xFF1
 38778                           intcon3	equ	0xFF0
 38779                           indf0	equ	0xFEF
 38780                           postinc0	equ	0xFEE
 38781                           fsr0h	equ	0xFEA
 38782                           fsr0l	equ	0xFE9
 38783                           wreg	equ	0xFE8
 38784                           indf1	equ	0xFE7
 38785                           postdec1	equ	0xFE5
 38786                           plusw1	equ	0xFE3
 38787                           fsr1h	equ	0xFE2
 38788                           fsr1l	equ	0xFE1
 38789                           indf2	equ	0xFDF
 38790                           postinc2	equ	0xFDE
 38791                           postdec2	equ	0xFDD
 38792                           plusw2	equ	0xFDB
 38793                           fsr2h	equ	0xFDA
 38794                           fsr2l	equ	0xFD9
 38795                           status	equ	0xFD8
 38796                           
 38797 ;; *************** function _flash_sector_write *****************
 38798 ;; Defined at:
 38799 ;;		line 433 in file "flash.c"
 38800 ;; Parameters:    Size  Location     Type
 38801 ;;  page            2   31[COMRAM] unsigned int 
 38802 ;;  data            2   33[COMRAM] PTR unsigned char 
 38803 ;;		 -> buffer(512), msd_buffer(512), 
 38804 ;; Auto vars:     Size  Location     Type
 38805 ;;  match           1   35[COMRAM] enum E6906
 38806 ;; Return value:  Size  Location     Type
 38807 ;;                  1    wreg      void 
 38808 ;; Registers used:
 38809 ;;		wreg, status,2, status,0, cstack
 38810 ;; Tracked objects:
 38811 ;;		On entry : 0/0
 38812 ;;		On exit  : 0/0
 38813 ;;		Unchanged: 0/0
 38814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38818 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38819 ;;Total ram usage:        5 bytes
 38820 ;; Hardware stack levels used:    1
 38821 ;; Hardware stack levels required when called:    4
 38822 ;; This function calls:
 38823 ;;		__flash_compare_page_to_buffer
 38824 ;;		__flash_write_page_from_buffer
 38825 ;;		__flash_write_to_buffer
 38826 ;;		_spi_set_configuration
 38827 ;; This function is called by:
 38828 ;;		_ExternalFlash_SectorWrite
 38829 ;;		__make_cluster_chain
 38830 ;;		_fat_format
 38831 ;; This function uses a non-reentrant model
 38832 ;;
 38833                           
 38834                           	psect	text197
 38835  007FD4                     __ptext197:
 38836                           	opt stack 0
 38837  007FD4                     _flash_sector_write:
 38838                           	opt stack 23
 38839                           
 38840                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 38841                           
 38842                           ;incstack = 0
 38843  007FD4  0E00               	movlw	0
 38844  007FD6  EC62  F023         	call	_spi_set_configuration
 38845                           
 38846                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 38847  007FDA  0E00               	movlw	0
 38848  007FDC  6E15               	movwf	__flash_write_to_buffer@start+1,c
 38849  007FDE  0E00               	movlw	0
 38850  007FE0  6E14               	movwf	__flash_write_to_buffer@start,c
 38851  007FE2  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 38852  007FE6  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 38853  007FEA  0E02               	movlw	2
 38854  007FEC  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 38855  007FEE  0E00               	movlw	0
 38856  007FF0  6E18               	movwf	__flash_write_to_buffer@data_length,c
 38857  007FF2  0E00               	movlw	0
 38858  007FF4  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 38859  007FF6  EC39  F041         	call	__flash_write_to_buffer	;wreg free
 38860                           
 38861                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 38862  007FFA  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 38863  007FFE  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 38864  008002  0E00               	movlw	0
 38865  008004  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 38866  008006  EC7A  F03A         	call	__flash_compare_page_to_buffer	;wreg free
 38867  00800A  6E24               	movwf	flash_sector_write@match,c
 38868                           
 38869                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 38870  00800C  0424               	decf	flash_sector_write@match,w,c
 38871  00800E  A4D8               	btfss	status,2,c
 38872  008010  D008               	goto	l1837
 38873                           
 38874                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 38875  008012  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 38876  008016  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 38877  00801A  0E00               	movlw	0
 38878  00801C  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 38879  00801E  ECE6  F03E         	call	__flash_write_page_from_buffer	;wreg free
 38880  008022                     l1837:
 38881                           
 38882                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38883  008022  0E01               	movlw	1
 38884  008024  EC62  F023         	call	_spi_set_configuration
 38885  008028  0012               	return		;funcret
 38886  00802A                     __end_of_flash_sector_write:
 38887                           	opt stack 0
 38888                           tosu	equ	0xFFF
 38889                           tosh	equ	0xFFE
 38890                           tosl	equ	0xFFD
 38891                           pclath	equ	0xFFA
 38892                           tblptru	equ	0xFF8
 38893                           tblptrh	equ	0xFF7
 38894                           tblptrl	equ	0xFF6
 38895                           tablat	equ	0xFF5
 38896                           prodh	equ	0xFF4
 38897                           prodl	equ	0xFF3
 38898                           intcon	equ	0xFF2
 38899                           intcon2	equ	0xFF1
 38900                           intcon3	equ	0xFF0
 38901                           indf0	equ	0xFEF
 38902                           postinc0	equ	0xFEE
 38903                           fsr0h	equ	0xFEA
 38904                           fsr0l	equ	0xFE9
 38905                           wreg	equ	0xFE8
 38906                           indf1	equ	0xFE7
 38907                           postdec1	equ	0xFE5
 38908                           plusw1	equ	0xFE3
 38909                           fsr1h	equ	0xFE2
 38910                           fsr1l	equ	0xFE1
 38911                           indf2	equ	0xFDF
 38912                           postinc2	equ	0xFDE
 38913                           postdec2	equ	0xFDD
 38914                           plusw2	equ	0xFDB
 38915                           fsr2h	equ	0xFDA
 38916                           fsr2l	equ	0xFD9
 38917                           status	equ	0xFD8
 38918                           
 38919 ;; *************** function __write_value_to_offset *****************
 38920 ;; Defined at:
 38921 ;;		line 123 in file "fat16.c"
 38922 ;; Parameters:    Size  Location     Type
 38923 ;;  offset          2    0[COMRAM] unsigned int 
 38924 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 38925 ;;		 -> buffer(512), 
 38926 ;;  value           2    4[COMRAM] unsigned int 
 38927 ;; Auto vars:     Size  Location     Type
 38928 ;;		None
 38929 ;; Return value:  Size  Location     Type
 38930 ;;                  1    wreg      void 
 38931 ;; Registers used:
 38932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38933 ;; Tracked objects:
 38934 ;;		On entry : 0/0
 38935 ;;		On exit  : 0/0
 38936 ;;		Unchanged: 0/0
 38937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38938 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38941 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38942 ;;Total ram usage:        8 bytes
 38943 ;; Hardware stack levels used:    1
 38944 ;; This function calls:
 38945 ;;		Nothing
 38946 ;; This function is called by:
 38947 ;;		__make_cluster_chain
 38948 ;; This function uses a non-reentrant model
 38949 ;;
 38950                           
 38951                           	psect	text198
 38952  0087E6                     __ptext198:
 38953                           	opt stack 0
 38954  0087E6                     __write_value_to_offset:
 38955                           	opt stack 25
 38956                           
 38957                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 38958                           
 38959                           ;incstack = 0
 38960  0087E6  5001               	movf	__write_value_to_offset@offset,w,c
 38961  0087E8  2403               	addwf	__write_value_to_offset@buffer,w,c
 38962  0087EA  6ED9               	movwf	fsr2l,c
 38963  0087EC  5002               	movf	__write_value_to_offset@offset+1,w,c
 38964  0087EE  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 38965  0087F0  6EDA               	movwf	fsr2h,c
 38966  0087F2  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 38967                           
 38968                           ;fat16.c: 126: value >>= 8;
 38969  0087F6  5006               	movf	__write_value_to_offset@value+1,w,c
 38970  0087F8  6E05               	movwf	__write_value_to_offset@value,c
 38971  0087FA  6A06               	clrf	__write_value_to_offset@value+1,c
 38972                           
 38973                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 38974  0087FC  0E01               	movlw	1
 38975  0087FE  2401               	addwf	__write_value_to_offset@offset,w,c
 38976  008800  6E07               	movwf	??__write_value_to_offset& (0+255),c
 38977  008802  0E00               	movlw	0
 38978  008804  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 38979  008806  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 38980  008808  5007               	movf	??__write_value_to_offset,w,c
 38981  00880A  2403               	addwf	__write_value_to_offset@buffer,w,c
 38982  00880C  6ED9               	movwf	fsr2l,c
 38983  00880E  5008               	movf	??__write_value_to_offset+1,w,c
 38984  008810  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 38985  008812  6EDA               	movwf	fsr2h,c
 38986  008814  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 38987  008818  0012               	return		;funcret
 38988  00881A                     __end_of__write_value_to_offset:
 38989                           	opt stack 0
 38990                           tosu	equ	0xFFF
 38991                           tosh	equ	0xFFE
 38992                           tosl	equ	0xFFD
 38993                           pclath	equ	0xFFA
 38994                           tblptru	equ	0xFF8
 38995                           tblptrh	equ	0xFF7
 38996                           tblptrl	equ	0xFF6
 38997                           tablat	equ	0xFF5
 38998                           prodh	equ	0xFF4
 38999                           prodl	equ	0xFF3
 39000                           intcon	equ	0xFF2
 39001                           intcon2	equ	0xFF1
 39002                           intcon3	equ	0xFF0
 39003                           indf0	equ	0xFEF
 39004                           postinc0	equ	0xFEE
 39005                           fsr0h	equ	0xFEA
 39006                           fsr0l	equ	0xFE9
 39007                           wreg	equ	0xFE8
 39008                           indf1	equ	0xFE7
 39009                           postdec1	equ	0xFE5
 39010                           plusw1	equ	0xFE3
 39011                           fsr1h	equ	0xFE2
 39012                           fsr1l	equ	0xFE1
 39013                           indf2	equ	0xFDF
 39014                           postinc2	equ	0xFDE
 39015                           postdec2	equ	0xFDD
 39016                           plusw2	equ	0xFDB
 39017                           fsr2h	equ	0xFDA
 39018                           fsr2l	equ	0xFD9
 39019                           status	equ	0xFD8
 39020                           
 39021 ;; *************** function __get_available_cluster *****************
 39022 ;; Defined at:
 39023 ;;		line 130 in file "fat16.c"
 39024 ;; Parameters:    Size  Location     Type
 39025 ;;  first_sector    2   43[COMRAM] unsigned int 
 39026 ;;  skip_sector     2   45[COMRAM] unsigned int 
 39027 ;; Auto vars:     Size  Location     Type
 39028 ;;  sector          2   51[COMRAM] unsigned int 
 39029 ;;  offset          2   49[COMRAM] unsigned int 
 39030 ;;  cluster         2   47[COMRAM] unsigned int 
 39031 ;; Return value:  Size  Location     Type
 39032 ;;                  2   43[COMRAM] unsigned int 
 39033 ;; Registers used:
 39034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39035 ;; Tracked objects:
 39036 ;;		On entry : 0/0
 39037 ;;		On exit  : 0/0
 39038 ;;		Unchanged: 0/0
 39039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39041 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39043 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39044 ;;Total ram usage:       10 bytes
 39045 ;; Hardware stack levels used:    1
 39046 ;; Hardware stack levels required when called:    5
 39047 ;; This function calls:
 39048 ;;		__cluster_from_sector_and_offset
 39049 ;;		__get_available_offset_from_buffer
 39050 ;;		_flash_sector_read
 39051 ;; This function is called by:
 39052 ;;		__make_cluster_chain
 39053 ;; This function uses a non-reentrant model
 39054 ;;
 39055                           
 39056                           	psect	text199
 39057  0060DC                     __ptext199:
 39058                           	opt stack 0
 39059  0060DC                     __get_available_cluster:
 39060                           	opt stack 20
 39061                           
 39062                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 39063                           
 39064                           ;incstack = 0
 39065  0060DC  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 39066  0060E0  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 39067  0060E4                     l10865:
 39068  0060E4  5035               	movf	__get_available_cluster@sector+1,w,c
 39069  0060E6  E157               	bnz	l10897
 39070  0060E8  0E22               	movlw	34
 39071  0060EA  5C34               	subwf	__get_available_cluster@sector,w,c
 39072  0060EC  B0D8               	btfsc	status,0,c
 39073  0060EE  D053               	goto	u7460
 39074                           
 39075                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 39076  0060F0  502E               	movf	__get_available_cluster@skip_sector,w,c
 39077  0060F2  1834               	xorwf	__get_available_cluster@sector,w,c
 39078  0060F4  E104               	bnz	l10873
 39079  0060F6  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 39080  0060F8  1835               	xorwf	__get_available_cluster@sector+1,w,c
 39081  0060FA  B4D8               	btfsc	status,2,c
 39082  0060FC  D049               	goto	l1971
 39083  0060FE                     l10873:
 39084                           
 39085                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 39086  0060FE  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 39087  006102  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 39088  006106  0EC0               	movlw	low _buffer
 39089  006108  6E2A               	movwf	flash_sector_read@data,c
 39090  00610A  0E03               	movlw	high _buffer
 39091  00610C  6E2B               	movwf	flash_sector_read@data+1,c
 39092  00610E  EC3F  F044         	call	_flash_sector_read	;wreg free
 39093                           
 39094                           ;fat16.c: 149: if(sector == 2)
 39095  006112  0E02               	movlw	2
 39096  006114  1834               	xorwf	__get_available_cluster@sector,w,c
 39097  006116  1035               	iorwf	__get_available_cluster@sector+1,w,c
 39098  006118  A4D8               	btfss	status,2,c
 39099  00611A  D00B               	goto	l1966
 39100                           
 39101                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 39102  00611C  0E00               	movlw	0
 39103  00611E  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 39104  006120  0E04               	movlw	4
 39105  006122  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 39106  006124  0EC0               	movlw	low _buffer
 39107  006126  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 39108  006128  0E03               	movlw	high _buffer
 39109  00612A  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 39110  00612C  EC61  F03E         	call	__get_available_offset_from_buffer	;wreg free
 39111  006130  D00A               	goto	L45
 39112  006132                     l1966:
 39113                           
 39114                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 39115  006132  0E00               	movlw	0
 39116  006134  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 39117  006136  0E00               	movlw	0
 39118  006138  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 39119  00613A  0EC0               	movlw	low _buffer
 39120  00613C  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 39121  00613E  0E03               	movlw	high _buffer
 39122  006140  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 39123  006142  EC61  F03E         	call	__get_available_offset_from_buffer	;wreg free
 39124  006146                     L45:
 39125  006146  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 39126  00614A  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 39127                           
 39128                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 39129  00614E  2832               	incf	__get_available_cluster@offset,w,c
 39130  006150  E103               	bnz	u7440
 39131  006152  2833               	incf	__get_available_cluster@offset+1,w,c
 39132  006154  B4D8               	btfsc	status,2,c
 39133  006156  D01C               	goto	l1971
 39134  006158                     u7440:
 39135                           
 39136                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 39137  006158  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 39138  00615C  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 39139  006160  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 39140  006164  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 39141  006168  ECA1  F045         	call	__cluster_from_sector_and_offset	;wreg free
 39142  00616C  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 39143  006170  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 39144                           
 39145                           ;fat16.c: 165: if(cluster > 8191)
 39146  006174  0E20               	movlw	32
 39147  006176  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 39148  006178  A0D8               	btfss	status,0,c
 39149  00617A  D005               	goto	l1969
 39150                           
 39151                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 39152  00617C  0E00               	movlw	0
 39153  00617E  6E2D               	movwf	?__get_available_cluster+1,c
 39154  006180  0E00               	movlw	0
 39155  006182  6E2C               	movwf	?__get_available_cluster,c
 39156  006184  0012               	return	
 39157  006186                     l1969:
 39158                           
 39159                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 39160  006186  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 39161  00618A  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 39162  00618E  0012               	return	
 39163  006190                     l1971:
 39164  006190  4A34               	infsnz	__get_available_cluster@sector,f,c
 39165  006192  2A35               	incf	__get_available_cluster@sector+1,f,c
 39166  006194  D7A7               	goto	l10865
 39167  006196                     u7460:
 39168  006196                     l10897:
 39169                           
 39170                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 39171  006196  0E00               	movlw	0
 39172  006198  6E2D               	movwf	?__get_available_cluster+1,c
 39173  00619A  0E00               	movlw	0
 39174  00619C  6E2C               	movwf	?__get_available_cluster,c
 39175  00619E  0012               	return	
 39176  0061A0                     __end_of__get_available_cluster:
 39177                           	opt stack 0
 39178                           tosu	equ	0xFFF
 39179                           tosh	equ	0xFFE
 39180                           tosl	equ	0xFFD
 39181                           pclath	equ	0xFFA
 39182                           tblptru	equ	0xFF8
 39183                           tblptrh	equ	0xFF7
 39184                           tblptrl	equ	0xFF6
 39185                           tablat	equ	0xFF5
 39186                           prodh	equ	0xFF4
 39187                           prodl	equ	0xFF3
 39188                           intcon	equ	0xFF2
 39189                           intcon2	equ	0xFF1
 39190                           intcon3	equ	0xFF0
 39191                           indf0	equ	0xFEF
 39192                           postinc0	equ	0xFEE
 39193                           fsr0h	equ	0xFEA
 39194                           fsr0l	equ	0xFE9
 39195                           wreg	equ	0xFE8
 39196                           indf1	equ	0xFE7
 39197                           postdec1	equ	0xFE5
 39198                           plusw1	equ	0xFE3
 39199                           fsr1h	equ	0xFE2
 39200                           fsr1l	equ	0xFE1
 39201                           indf2	equ	0xFDF
 39202                           postinc2	equ	0xFDE
 39203                           postdec2	equ	0xFDD
 39204                           plusw2	equ	0xFDB
 39205                           fsr2h	equ	0xFDA
 39206                           fsr2l	equ	0xFD9
 39207                           status	equ	0xFD8
 39208                           
 39209 ;; *************** function __get_available_offset_from_buffer *****************
 39210 ;; Defined at:
 39211 ;;		line 98 in file "fat16.c"
 39212 ;; Parameters:    Size  Location     Type
 39213 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 39214 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 39215 ;;		 -> buffer(512), 
 39216 ;; Auto vars:     Size  Location     Type
 39217 ;;  offset          2    6[COMRAM] unsigned int 
 39218 ;; Return value:  Size  Location     Type
 39219 ;;                  2    0[COMRAM] unsigned int 
 39220 ;; Registers used:
 39221 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39222 ;; Tracked objects:
 39223 ;;		On entry : 0/0
 39224 ;;		On exit  : 0/0
 39225 ;;		Unchanged: 0/0
 39226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39230 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39231 ;;Total ram usage:        8 bytes
 39232 ;; Hardware stack levels used:    1
 39233 ;; This function calls:
 39234 ;;		Nothing
 39235 ;; This function is called by:
 39236 ;;		__get_available_cluster
 39237 ;;		__make_cluster_chain
 39238 ;; This function uses a non-reentrant model
 39239 ;;
 39240                           
 39241                           	psect	text200
 39242  007CC2                     __ptext200:
 39243                           	opt stack 0
 39244  007CC2                     __get_available_offset_from_buffer:
 39245                           	opt stack 25
 39246                           
 39247                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 39248                           
 39249                           ;incstack = 0
 39250  007CC2  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 39251  007CC6  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 39252  007CCA  D021               	goto	L46
 39253  007CCC                     
 39254                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 39255  007CCC  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 39256  007CCE  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 39257  007CD0  6ED9               	movwf	fsr2l,c
 39258  007CD2  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 39259  007CD4  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 39260  007CD6  6EDA               	movwf	fsr2h,c
 39261  007CD8  50DF               	movf	indf2,w,c
 39262  007CDA  A4D8               	btfss	status,2,c
 39263  007CDC  D014               	goto	l1952
 39264  007CDE  0E01               	movlw	1
 39265  007CE0  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 39266  007CE2  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 39267  007CE4  0E00               	movlw	0
 39268  007CE6  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 39269  007CE8  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 39270  007CEA  5005               	movf	??__get_available_offset_from_buffer,w,c
 39271  007CEC  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 39272  007CEE  6ED9               	movwf	fsr2l,c
 39273  007CF0  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 39274  007CF2  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 39275  007CF4  6EDA               	movwf	fsr2h,c
 39276  007CF6  50DF               	movf	indf2,w,c
 39277  007CF8  A4D8               	btfss	status,2,c
 39278  007CFA  D005               	goto	l1952
 39279                           
 39280                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 39281  007CFC  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 39282  007D00  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 39283  007D04  0012               	return	
 39284  007D06                     l1952:
 39285  007D06  0E02               	movlw	2
 39286  007D08  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 39287  007D0A  0E00               	movlw	0
 39288  007D0C  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 39289  007D0E                     L46:
 39290  007D0E  0E02               	movlw	2
 39291  007D10  5C08               	subwf	__get_available_offset_from_buffer@offset+1,w,c
 39292  007D12  A0D8               	btfss	status,0,c
 39293  007D14  D7DB               	goto	l1950
 39294                           
 39295                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 39296  007D16  6801               	setf	?__get_available_offset_from_buffer,c
 39297  007D18  6802               	setf	?__get_available_offset_from_buffer+1,c
 39298  007D1A  0012               	return		;funcret
 39299  007D1C                     __end_of__get_available_offset_from_buffer:
 39300                           	opt stack 0
 39301                           tosu	equ	0xFFF
 39302                           tosh	equ	0xFFE
 39303                           tosl	equ	0xFFD
 39304                           pclath	equ	0xFFA
 39305                           tblptru	equ	0xFF8
 39306                           tblptrh	equ	0xFF7
 39307                           tblptrl	equ	0xFF6
 39308                           tablat	equ	0xFF5
 39309                           prodh	equ	0xFF4
 39310                           prodl	equ	0xFF3
 39311                           intcon	equ	0xFF2
 39312                           intcon2	equ	0xFF1
 39313                           intcon3	equ	0xFF0
 39314                           indf0	equ	0xFEF
 39315                           postinc0	equ	0xFEE
 39316                           fsr0h	equ	0xFEA
 39317                           fsr0l	equ	0xFE9
 39318                           wreg	equ	0xFE8
 39319                           indf1	equ	0xFE7
 39320                           postdec1	equ	0xFE5
 39321                           plusw1	equ	0xFE3
 39322                           fsr1h	equ	0xFE2
 39323                           fsr1l	equ	0xFE1
 39324                           indf2	equ	0xFDF
 39325                           postinc2	equ	0xFDE
 39326                           postdec2	equ	0xFDD
 39327                           plusw2	equ	0xFDB
 39328                           fsr2h	equ	0xFDA
 39329                           fsr2l	equ	0xFD9
 39330                           status	equ	0xFD8
 39331                           
 39332 ;; *************** function __cluster_from_sector_and_offset *****************
 39333 ;; Defined at:
 39334 ;;		line 89 in file "fat16.c"
 39335 ;; Parameters:    Size  Location     Type
 39336 ;;  sector          2    0[COMRAM] unsigned int 
 39337 ;;  offset          2    2[COMRAM] unsigned int 
 39338 ;; Auto vars:     Size  Location     Type
 39339 ;;		None
 39340 ;; Return value:  Size  Location     Type
 39341 ;;                  2    0[COMRAM] unsigned int 
 39342 ;; Registers used:
 39343 ;;		wreg, status,2, status,0
 39344 ;; Tracked objects:
 39345 ;;		On entry : 0/0
 39346 ;;		On exit  : 0/0
 39347 ;;		Unchanged: 0/0
 39348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39353 ;;Total ram usage:        4 bytes
 39354 ;; Hardware stack levels used:    1
 39355 ;; This function calls:
 39356 ;;		Nothing
 39357 ;; This function is called by:
 39358 ;;		__get_available_cluster
 39359 ;; This function uses a non-reentrant model
 39360 ;;
 39361                           
 39362                           	psect	text201
 39363  008B42                     __ptext201:
 39364                           	opt stack 0
 39365  008B42                     __cluster_from_sector_and_offset:
 39366                           	opt stack 24
 39367                           
 39368                           ;fat16.c: 91: offset >>= 1;
 39369                           
 39370                           ;incstack = 0
 39371  008B42  90D8               	bcf	status,0,c
 39372  008B44  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 39373  008B46  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 39374                           
 39375                           ;fat16.c: 92: sector -= 2;
 39376  008B48  0E02               	movlw	2
 39377  008B4A  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 39378  008B4C  0E00               	movlw	0
 39379  008B4E  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 39380                           
 39381                           ;fat16.c: 93: sector <<= 8;
 39382  008B50  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 39383  008B52  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 39384  008B54  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 39385                           
 39386                           ;fat16.c: 94: sector |= offset;
 39387  008B56  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 39388  008B58  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 39389  008B5A  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 39390  008B5C  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 39391                           
 39392                           ;fat16.c: 95: return sector;
 39393  008B5E  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 39394  008B62  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 39395  008B66  0012               	return	
 39396  008B68                     __end_of__cluster_from_sector_and_offset:
 39397                           	opt stack 0
 39398                           tosu	equ	0xFFF
 39399                           tosh	equ	0xFFE
 39400                           tosl	equ	0xFFD
 39401                           pclath	equ	0xFFA
 39402                           tblptru	equ	0xFF8
 39403                           tblptrh	equ	0xFF7
 39404                           tblptrl	equ	0xFF6
 39405                           tablat	equ	0xFF5
 39406                           prodh	equ	0xFF4
 39407                           prodl	equ	0xFF3
 39408                           intcon	equ	0xFF2
 39409                           intcon2	equ	0xFF1
 39410                           intcon3	equ	0xFF0
 39411                           indf0	equ	0xFEF
 39412                           postinc0	equ	0xFEE
 39413                           fsr0h	equ	0xFEA
 39414                           fsr0l	equ	0xFE9
 39415                           wreg	equ	0xFE8
 39416                           indf1	equ	0xFE7
 39417                           postdec1	equ	0xFE5
 39418                           plusw1	equ	0xFE3
 39419                           fsr1h	equ	0xFE2
 39420                           fsr1l	equ	0xFE1
 39421                           indf2	equ	0xFDF
 39422                           postinc2	equ	0xFDE
 39423                           postdec2	equ	0xFDD
 39424                           plusw2	equ	0xFDB
 39425                           fsr2h	equ	0xFDA
 39426                           fsr2l	equ	0xFD9
 39427                           status	equ	0xFD8
 39428                           
 39429 ;; *************** function _fat_modify_file *****************
 39430 ;; Defined at:
 39431 ;;		line 902 in file "fat16.c"
 39432 ;; Parameters:    Size  Location     Type
 39433 ;;  file_number     1    wreg     unsigned char 
 39434 ;;  start_byte      4   65[COMRAM] unsigned long 
 39435 ;;  length          2   69[COMRAM] unsigned int 
 39436 ;;  data            2   71[COMRAM] PTR unsigned char 
 39437 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39438 ;; Auto vars:     Size  Location     Type
 39439 ;;  file_number     1    2[BANK0 ] unsigned char 
 39440 ;;  root           32   14[BANK0 ] struct .
 39441 ;;  position        4   10[BANK0 ] unsigned long 
 39442 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 39443 ;;  offset          2    6[BANK0 ] unsigned int 
 39444 ;;  cluster         2    4[BANK0 ] unsigned int 
 39445 ;;  sector          2    0[BANK0 ] unsigned int 
 39446 ;;  return_code     1    3[BANK0 ] unsigned char 
 39447 ;; Return value:  Size  Location     Type
 39448 ;;                  1    wreg      void 
 39449 ;; Registers used:
 39450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39451 ;; Tracked objects:
 39452 ;;		On entry : 0/0
 39453 ;;		On exit  : 0/0
 39454 ;;		Unchanged: 0/0
 39455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39456 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39457 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39458 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39459 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39460 ;;Total ram usage:       66 bytes
 39461 ;; Hardware stack levels used:    1
 39462 ;; Hardware stack levels required when called:    7
 39463 ;; This function calls:
 39464 ;;		__data_sector_from_cluster
 39465 ;;		__find_nth_cluster
 39466 ;;		__read_fat
 39467 ;;		_fat_get_file_information
 39468 ;;		_flash_partial_write
 39469 ;; This function is called by:
 39470 ;;		_fat_append_to_file
 39471 ;;		__parse_file_modify
 39472 ;; This function uses a non-reentrant model
 39473 ;;
 39474                           
 39475                           	psect	text202
 39476  002284                     __ptext202:
 39477                           	opt stack 0
 39478  002284                     _fat_modify_file:
 39479                           	opt stack 20
 39480                           
 39481                           ;incstack = 0
 39482                           ;fat_modify_file@file_number stored from wreg
 39483  002284  0100               	movlb	0	; () banked
 39484  002286  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 39485                           
 39486                           ;fat16.c: 904: rootEntry_t root;;fat16.c: 905: uint16_t cluster;;fat16.c: 906: uint32_t 
      +                          position;;fat16.c: 907: uint16_t offset;;fat16.c: 908: uint16_t sector;;fat16.c: 909: ui
      +                          nt16_t number_of_bytes;;fat16.c: 910: uint8_t return_code;;fat16.c: 913: return_code = f
      +                          at_get_file_information(file_number, &root);
 39487  002288  0E6E               	movlw	low fat_modify_file@root
 39488  00228A  6E30               	movwf	fat_get_file_information@data,c
 39489  00228C  0E00               	movlw	high fat_modify_file@root
 39490  00228E  6E31               	movwf	fat_get_file_information@data+1,c
 39491  002290  0100               	movlb	0	; () banked
 39492  002292  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 39493  002294  EC2B  F03B         	call	_fat_get_file_information
 39494  002298  0100               	movlb	0	; () banked
 39495  00229A  6F63               	movwf	fat_modify_file@return_code& (0+255),b
 39496                           
 39497                           ; BSR set to: 0
 39498                           ;fat16.c: 914: if(return_code!=0x00)
 39499  00229C  5163               	movf	fat_modify_file@return_code& (0+255),w,b
 39500  00229E  A4D8               	btfss	status,2,c
 39501  0022A0  0012               	return	
 39502                           
 39503                           ; BSR set to: 0
 39504                           ;fat16.c: 918: };fat16.c: 921: if(start_byte>root.fileSize)
 39505                           
 39506                           ; BSR set to: 0
 39507                           
 39508                           ; BSR set to: 0
 39509                           ;fat16.c: 915: {;fat16.c: 917: return;
 39510  0022A2  5042               	movf	fat_modify_file@start_byte,w,c
 39511  0022A4  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 39512  0022A6  5043               	movf	fat_modify_file@start_byte+1,w,c
 39513  0022A8  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 39514  0022AA  5044               	movf	fat_modify_file@start_byte+2,w,c
 39515  0022AC  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 39516  0022AE  5045               	movf	fat_modify_file@start_byte+3,w,c
 39517  0022B0  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 39518  0022B2  A0D8               	btfss	status,0,c
 39519  0022B4  0012               	return	
 39520                           
 39521                           ; BSR set to: 0
 39522                           ;fat16.c: 925: };fat16.c: 927: if((start_byte+length) > root.fileSize)
 39523                           
 39524                           ; BSR set to: 0
 39525                           
 39526                           ; BSR set to: 0
 39527                           ;fat16.c: 922: {;fat16.c: 924: return;
 39528  0022B6  5046               	movf	fat_modify_file@length,w,c
 39529  0022B8  2442               	addwf	fat_modify_file@start_byte,w,c
 39530  0022BA  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39531  0022BC  5047               	movf	fat_modify_file@length+1,w,c
 39532  0022BE  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 39533  0022C0  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39534  0022C2  0E00               	movlw	0
 39535  0022C4  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 39536  0022C6  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 39537  0022C8  0E00               	movlw	0
 39538  0022CA  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 39539  0022CC  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 39540  0022CE  504A               	movf	??_fat_modify_file,w,c
 39541  0022D0  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 39542  0022D2  504B               	movf	??_fat_modify_file+1,w,c
 39543  0022D4  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 39544  0022D6  504C               	movf	??_fat_modify_file+2,w,c
 39545  0022D8  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 39546  0022DA  504D               	movf	??_fat_modify_file+3,w,c
 39547  0022DC  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 39548  0022DE  B0D8               	btfsc	status,0,c
 39549  0022E0  D00E               	goto	l2108
 39550                           
 39551                           ; BSR set to: 0
 39552                           ;fat16.c: 928: {;fat16.c: 930: length = root.fileSize - start_byte;
 39553  0022E2  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 39554  0022E6  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 39555  0022EA  1E4A               	comf	??_fat_modify_file,f,c
 39556  0022EC  1E4B               	comf	??_fat_modify_file+1,f,c
 39557  0022EE  4A4A               	infsnz	??_fat_modify_file,f,c
 39558  0022F0  2A4B               	incf	??_fat_modify_file+1,f,c
 39559  0022F2  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 39560  0022F4  244A               	addwf	??_fat_modify_file,w,c
 39561  0022F6  6E46               	movwf	fat_modify_file@length,c
 39562  0022F8  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 39563  0022FA  204B               	addwfc	??_fat_modify_file+1,w,c
 39564  0022FC  6E47               	movwf	fat_modify_file@length+1,c
 39565  0022FE                     l2108:
 39566                           
 39567                           ; BSR set to: 0
 39568                           ;fat16.c: 931: };fat16.c: 934: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 39569                           
 39570                           ; BSR set to: 0
 39571  0022FE  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 39572  002302  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 39573  002306  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 39574  00230A  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 39575  00230E  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 39576  002312  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 39577  002316  0E0A               	movlw	10
 39578  002318  D005               	goto	u9310
 39579  00231A                     u9315:
 39580  00231A  90D8               	bcf	status,0,c
 39581  00231C  324D               	rrcf	??_fat_modify_file+3,f,c
 39582  00231E  324C               	rrcf	??_fat_modify_file+2,f,c
 39583  002320  324B               	rrcf	??_fat_modify_file+1,f,c
 39584  002322  324A               	rrcf	??_fat_modify_file,f,c
 39585  002324                     u9310:
 39586  002324  2EE8               	decfsz	wreg,f,c
 39587  002326  D7F9               	goto	u9315
 39588  002328  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 39589  00232C  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 39590  002330  ECCB  F035         	call	__find_nth_cluster	;wreg free
 39591  002334  C038  F064         	movff	?__find_nth_cluster,fat_modify_file@cluster
 39592  002338  C039  F065         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 39593                           
 39594                           ;fat16.c: 937: position = start_byte & 0xFFFFFE00;
 39595  00233C  0E00               	movlw	0
 39596  00233E  1442               	andwf	fat_modify_file@start_byte,w,c
 39597  002340  0100               	movlb	0	; () banked
 39598  002342  6F6A               	movwf	fat_modify_file@position& (0+255),b
 39599  002344  0EFE               	movlw	254
 39600  002346  1443               	andwf	fat_modify_file@start_byte+1,w,c
 39601  002348  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 39602  00234A  0EFF               	movlw	255
 39603  00234C  1444               	andwf	fat_modify_file@start_byte+2,w,c
 39604  00234E  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 39605  002350  0EFF               	movlw	255
 39606  002352  1445               	andwf	fat_modify_file@start_byte+3,w,c
 39607  002354  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 39608                           
 39609                           ; BSR set to: 0
 39610                           ;fat16.c: 940: offset = (uint16_t) (start_byte-position);
 39611  002356  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 39612  00235A  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 39613  00235E  1E4A               	comf	??_fat_modify_file,f,c
 39614  002360  1E4B               	comf	??_fat_modify_file+1,f,c
 39615  002362  4A4A               	infsnz	??_fat_modify_file,f,c
 39616  002364  2A4B               	incf	??_fat_modify_file+1,f,c
 39617  002366  5042               	movf	fat_modify_file@start_byte,w,c
 39618  002368  244A               	addwf	??_fat_modify_file,w,c
 39619  00236A  6F66               	movwf	fat_modify_file@offset& (0+255),b
 39620  00236C  5043               	movf	fat_modify_file@start_byte+1,w,c
 39621  00236E  204B               	addwfc	??_fat_modify_file+1,w,c
 39622  002370  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 39623                           
 39624                           ; BSR set to: 0
 39625                           ;fat16.c: 943: position = 0;
 39626  002372  0E00               	movlw	0
 39627  002374  6F6A               	movwf	fat_modify_file@position& (0+255),b
 39628  002376  0E00               	movlw	0
 39629  002378  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 39630  00237A  0E00               	movlw	0
 39631  00237C  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 39632  00237E  0E00               	movlw	0
 39633  002380  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 39634                           
 39635                           ;fat16.c: 944: while(position < length)
 39636  002382  D089               	goto	l2109
 39637  002384                     
 39638                           ; BSR set to: 0
 39639                           ;fat16.c: 945: {;fat16.c: 947: if(offset==512)
 39640                           
 39641                           ; BSR set to: 0
 39642  002384  0E02               	movlw	2
 39643  002386  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 39644  002388  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 39645  00238A  A4D8               	btfss	status,2,c
 39646  00238C  D00F               	goto	l2111
 39647                           
 39648                           ; BSR set to: 0
 39649                           ;fat16.c: 948: {;fat16.c: 950: cluster = _read_fat(cluster);
 39650  00238E  C064  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 39651  002392  C065  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 39652  002396  EC15  F040         	call	__read_fat	;wreg free
 39653  00239A  C030  F064         	movff	?__read_fat,fat_modify_file@cluster
 39654  00239E  C031  F065         	movff	?__read_fat+1,fat_modify_file@cluster+1
 39655                           
 39656                           ;fat16.c: 952: offset = 0;
 39657  0023A2  0E00               	movlw	0
 39658  0023A4  0100               	movlb	0	; () banked
 39659  0023A6  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 39660  0023A8  0E00               	movlw	0
 39661  0023AA  6F66               	movwf	fat_modify_file@offset& (0+255),b
 39662  0023AC                     l2111:
 39663                           
 39664                           ; BSR set to: 0
 39665                           ;fat16.c: 953: };fat16.c: 956: sector = _data_sector_from_cluster(cluster);
 39666                           
 39667                           ; BSR set to: 0
 39668  0023AC  C064  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 39669  0023B0  C065  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 39670  0023B4  EC74  F047         	call	__data_sector_from_cluster	;wreg free
 39671  0023B8  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 39672  0023BC  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 39673                           
 39674                           ;fat16.c: 959: number_of_bytes = 512 - offset;
 39675  0023C0  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 39676  0023C4  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 39677  0023C8  1E4A               	comf	??_fat_modify_file,f,c
 39678  0023CA  1E4B               	comf	??_fat_modify_file+1,f,c
 39679  0023CC  4A4A               	infsnz	??_fat_modify_file,f,c
 39680  0023CE  2A4B               	incf	??_fat_modify_file+1,f,c
 39681  0023D0  0E00               	movlw	0
 39682  0023D2  244A               	addwf	??_fat_modify_file,w,c
 39683  0023D4  0100               	movlb	0	; () banked
 39684  0023D6  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 39685  0023D8  0E02               	movlw	2
 39686  0023DA  204B               	addwfc	??_fat_modify_file+1,w,c
 39687  0023DC  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;fat16.c: 960: if(number_of_bytes > (length-position))
 39691  0023DE  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39692  0023E0  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39693  0023E2  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39694  0023E4  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39695  0023E6  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 39696  0023E8  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 39697  0023EA  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 39698  0023EE  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 39699  0023F2  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 39700  0023F6  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 39701  0023FA  1E4E               	comf	??_fat_modify_file+4,f,c
 39702  0023FC  1E4F               	comf	??_fat_modify_file+5,f,c
 39703  0023FE  1E50               	comf	??_fat_modify_file+6,f,c
 39704  002400  1E51               	comf	??_fat_modify_file+7,f,c
 39705  002402  2A4E               	incf	??_fat_modify_file+4,f,c
 39706  002404  0E00               	movlw	0
 39707  002406  224F               	addwfc	??_fat_modify_file+5,f,c
 39708  002408  2250               	addwfc	??_fat_modify_file+6,f,c
 39709  00240A  2251               	addwfc	??_fat_modify_file+7,f,c
 39710  00240C  5046               	movf	fat_modify_file@length,w,c
 39711  00240E  244E               	addwf	??_fat_modify_file+4,w,c
 39712  002410  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 39713  002412  5047               	movf	fat_modify_file@length+1,w,c
 39714  002414  204F               	addwfc	??_fat_modify_file+5,w,c
 39715  002416  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 39716  002418  0E00               	movlw	0
 39717  00241A  2050               	addwfc	??_fat_modify_file+6,w,c
 39718  00241C  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 39719  00241E  0E00               	movlw	0
 39720  002420  2051               	addwfc	??_fat_modify_file+7,w,c
 39721  002422  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 39722  002424  504A               	movf	??_fat_modify_file,w,c
 39723  002426  5C52               	subwf	??_fat_modify_file+8,w,c
 39724  002428  504B               	movf	??_fat_modify_file+1,w,c
 39725  00242A  5853               	subwfb	??_fat_modify_file+9,w,c
 39726  00242C  504C               	movf	??_fat_modify_file+2,w,c
 39727  00242E  5854               	subwfb	??_fat_modify_file+10,w,c
 39728  002430  504D               	movf	??_fat_modify_file+3,w,c
 39729  002432  5855               	subwfb	??_fat_modify_file+11,w,c
 39730  002434  B0D8               	btfsc	status,0,c
 39731  002436  D00E               	goto	l2112
 39732                           
 39733                           ; BSR set to: 0
 39734                           ;fat16.c: 961: {;fat16.c: 962: number_of_bytes = length - position;
 39735  002438  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 39736  00243C  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 39737  002440  1E4A               	comf	??_fat_modify_file,f,c
 39738  002442  1E4B               	comf	??_fat_modify_file+1,f,c
 39739  002444  4A4A               	infsnz	??_fat_modify_file,f,c
 39740  002446  2A4B               	incf	??_fat_modify_file+1,f,c
 39741  002448  5046               	movf	fat_modify_file@length,w,c
 39742  00244A  244A               	addwf	??_fat_modify_file,w,c
 39743  00244C  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 39744  00244E  5047               	movf	fat_modify_file@length+1,w,c
 39745  002450  204B               	addwfc	??_fat_modify_file+1,w,c
 39746  002452  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 39747  002454                     l2112:
 39748                           
 39749                           ; BSR set to: 0
 39750                           ;fat16.c: 963: };fat16.c: 966: flash_partial_write(sector, offset, number_of_bytes, &dat
      +                          a[position]);
 39751                           
 39752                           ; BSR set to: 0
 39753  002454  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 39754  002458  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 39755  00245C  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 39756  002460  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 39757  002464  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 39758  002468  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 39759  00246C  516A               	movf	fat_modify_file@position& (0+255),w,b
 39760  00246E  2448               	addwf	fat_modify_file@data,w,c
 39761  002470  6E26               	movwf	flash_partial_write@data,c
 39762  002472  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 39763  002474  2049               	addwfc	fat_modify_file@data+1,w,c
 39764  002476  6E27               	movwf	flash_partial_write@data+1,c
 39765  002478  EC9C  F03B         	call	_flash_partial_write	;wreg free
 39766                           
 39767                           ;fat16.c: 969: position += number_of_bytes;
 39768  00247C  0100               	movlb	0	; () banked
 39769  00247E  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39770  002480  276A               	addwf	fat_modify_file@position& (0+255),f,b
 39771  002482  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39772  002484  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 39773  002486  0E00               	movlw	0
 39774  002488  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 39775  00248A  0E00               	movlw	0
 39776  00248C  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 39777                           
 39778                           ; BSR set to: 0
 39779                           ;fat16.c: 970: offset += number_of_bytes;
 39780  00248E  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39781  002490  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 39782  002492  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39783  002494  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 39784  002496                     l2109:
 39785                           
 39786                           ; BSR set to: 0
 39787                           
 39788                           ; BSR set to: 0
 39789  002496  5046               	movf	fat_modify_file@length,w,c
 39790  002498  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39791  00249A  5047               	movf	fat_modify_file@length+1,w,c
 39792  00249C  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39793  00249E  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 39794  0024A0  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 39795  0024A2  504A               	movf	??_fat_modify_file,w,c
 39796  0024A4  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 39797  0024A6  504B               	movf	??_fat_modify_file+1,w,c
 39798  0024A8  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 39799  0024AA  504C               	movf	??_fat_modify_file+2,w,c
 39800  0024AC  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 39801  0024AE  504D               	movf	??_fat_modify_file+3,w,c
 39802  0024B0  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 39803  0024B2  B0D8               	btfsc	status,0,c
 39804  0024B4  0012               	return	
 39805  0024B6  D766               	goto	l2110
 39806  0024B8                     __end_of_fat_modify_file:
 39807                           	opt stack 0
 39808                           tosu	equ	0xFFF
 39809                           tosh	equ	0xFFE
 39810                           tosl	equ	0xFFD
 39811                           pclath	equ	0xFFA
 39812                           tblptru	equ	0xFF8
 39813                           tblptrh	equ	0xFF7
 39814                           tblptrl	equ	0xFF6
 39815                           tablat	equ	0xFF5
 39816                           prodh	equ	0xFF4
 39817                           prodl	equ	0xFF3
 39818                           intcon	equ	0xFF2
 39819                           intcon2	equ	0xFF1
 39820                           intcon3	equ	0xFF0
 39821                           indf0	equ	0xFEF
 39822                           postinc0	equ	0xFEE
 39823                           fsr0h	equ	0xFEA
 39824                           fsr0l	equ	0xFE9
 39825                           wreg	equ	0xFE8
 39826                           indf1	equ	0xFE7
 39827                           postdec1	equ	0xFE5
 39828                           plusw1	equ	0xFE3
 39829                           fsr1h	equ	0xFE2
 39830                           fsr1l	equ	0xFE1
 39831                           indf2	equ	0xFDF
 39832                           postinc2	equ	0xFDE
 39833                           postdec2	equ	0xFDD
 39834                           plusw2	equ	0xFDB
 39835                           fsr2h	equ	0xFDA
 39836                           fsr2l	equ	0xFD9
 39837                           status	equ	0xFD8
 39838                           
 39839 ;; *************** function _flash_partial_write *****************
 39840 ;; Defined at:
 39841 ;;		line 471 in file "flash.c"
 39842 ;; Parameters:    Size  Location     Type
 39843 ;;  page            2   31[COMRAM] unsigned int 
 39844 ;;  start           2   33[COMRAM] unsigned int 
 39845 ;;  length          2   35[COMRAM] unsigned int 
 39846 ;;  data            2   37[COMRAM] PTR unsigned char 
 39847 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 39848 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 39849 ;; Auto vars:     Size  Location     Type
 39850 ;;  match           1   39[COMRAM] enum E6906
 39851 ;; Return value:  Size  Location     Type
 39852 ;;                  1    wreg      void 
 39853 ;; Registers used:
 39854 ;;		wreg, status,2, status,0, cstack
 39855 ;; Tracked objects:
 39856 ;;		On entry : 0/0
 39857 ;;		On exit  : 0/0
 39858 ;;		Unchanged: 0/0
 39859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39860 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39863 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39864 ;;Total ram usage:        9 bytes
 39865 ;; Hardware stack levels used:    1
 39866 ;; Hardware stack levels required when called:    4
 39867 ;; This function calls:
 39868 ;;		__flash_compare_page_to_buffer
 39869 ;;		__flash_copy_page_to_buffer
 39870 ;;		__flash_is_busy
 39871 ;;		__flash_write_page_from_buffer
 39872 ;;		__flash_write_to_buffer
 39873 ;;		_spi_set_configuration
 39874 ;; This function is called by:
 39875 ;;		__write_root
 39876 ;;		__delete_root
 39877 ;;		_fat_modify_file
 39878 ;; This function uses a non-reentrant model
 39879 ;;
 39880                           
 39881                           	psect	text203
 39882  007738                     __ptext203:
 39883                           	opt stack 0
 39884  007738                     _flash_partial_write:
 39885                           	opt stack 21
 39886                           
 39887                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 39888                           
 39889                           ; BSR set to: 0
 39890                           ;incstack = 0
 39891  007738  0E00               	movlw	0
 39892  00773A  EC62  F023         	call	_spi_set_configuration
 39893  00773E  EC32  F046         	call	__flash_is_busy	;wreg free
 39894  007742  0900               	iorlw	0
 39895  007744  A4D8               	btfss	status,2,c
 39896  007746  D7FB               	goto	l1845
 39897                           
 39898                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 39899  007748  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 39900  00774C  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 39901  007750  0E00               	movlw	0
 39902  007752  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 39903  007754  ECBA  F03E         	call	__flash_copy_page_to_buffer	;wreg free
 39904                           
 39905                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 39906  007758  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 39907  00775C  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 39908  007760  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 39909  007764  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 39910  007768  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 39911  00776C  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 39912  007770  0E00               	movlw	0
 39913  007772  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 39914  007774  EC39  F041         	call	__flash_write_to_buffer	;wreg free
 39915                           
 39916                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 39917  007778  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 39918  00777C  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 39919  007780  0E00               	movlw	0
 39920  007782  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 39921  007784  EC7A  F03A         	call	__flash_compare_page_to_buffer	;wreg free
 39922  007788  6E28               	movwf	flash_partial_write@match,c
 39923                           
 39924                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 39925  00778A  0428               	decf	flash_partial_write@match,w,c
 39926  00778C  A4D8               	btfss	status,2,c
 39927  00778E  D008               	goto	l1847
 39928                           
 39929                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 39930  007790  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 39931  007794  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 39932  007798  0E00               	movlw	0
 39933  00779A  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 39934  00779C  ECE6  F03E         	call	__flash_write_page_from_buffer	;wreg free
 39935  0077A0                     l1847:
 39936                           
 39937                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 39938  0077A0  0E01               	movlw	1
 39939  0077A2  EC62  F023         	call	_spi_set_configuration
 39940  0077A6  0012               	return		;funcret
 39941  0077A8                     __end_of_flash_partial_write:
 39942                           	opt stack 0
 39943                           tosu	equ	0xFFF
 39944                           tosh	equ	0xFFE
 39945                           tosl	equ	0xFFD
 39946                           pclath	equ	0xFFA
 39947                           tblptru	equ	0xFF8
 39948                           tblptrh	equ	0xFF7
 39949                           tblptrl	equ	0xFF6
 39950                           tablat	equ	0xFF5
 39951                           prodh	equ	0xFF4
 39952                           prodl	equ	0xFF3
 39953                           intcon	equ	0xFF2
 39954                           intcon2	equ	0xFF1
 39955                           intcon3	equ	0xFF0
 39956                           indf0	equ	0xFEF
 39957                           postinc0	equ	0xFEE
 39958                           fsr0h	equ	0xFEA
 39959                           fsr0l	equ	0xFE9
 39960                           wreg	equ	0xFE8
 39961                           indf1	equ	0xFE7
 39962                           postdec1	equ	0xFE5
 39963                           plusw1	equ	0xFE3
 39964                           fsr1h	equ	0xFE2
 39965                           fsr1l	equ	0xFE1
 39966                           indf2	equ	0xFDF
 39967                           postinc2	equ	0xFDE
 39968                           postdec2	equ	0xFDD
 39969                           plusw2	equ	0xFDB
 39970                           fsr2h	equ	0xFDA
 39971                           fsr2l	equ	0xFD9
 39972                           status	equ	0xFD8
 39973                           
 39974 ;; *************** function __flash_write_to_buffer *****************
 39975 ;; Defined at:
 39976 ;;		line 232 in file "flash.c"
 39977 ;; Parameters:    Size  Location     Type
 39978 ;;  start           2   19[COMRAM] unsigned int 
 39979 ;;  data            2   21[COMRAM] PTR unsigned char 
 39980 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 39981 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 39982 ;;  data_length     2   23[COMRAM] unsigned int 
 39983 ;;  buffer          1   25[COMRAM] enum E6902
 39984 ;; Auto vars:     Size  Location     Type
 39985 ;;  command         4   26[COMRAM] unsigned char [4]
 39986 ;; Return value:  Size  Location     Type
 39987 ;;                  1    wreg      void 
 39988 ;; Registers used:
 39989 ;;		wreg, status,2, status,0, cstack
 39990 ;; Tracked objects:
 39991 ;;		On entry : 0/0
 39992 ;;		On exit  : 0/0
 39993 ;;		Unchanged: 0/0
 39994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39995 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39996 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39998 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39999 ;;Total ram usage:       11 bytes
 40000 ;; Hardware stack levels used:    1
 40001 ;; Hardware stack levels required when called:    3
 40002 ;; This function calls:
 40003 ;;		__flash_is_busy
 40004 ;;		_spi_tx_tx
 40005 ;; This function is called by:
 40006 ;;		_flash_sector_write
 40007 ;;		_flash_partial_write
 40008 ;;		_flash_write_to_buffer
 40009 ;; This function uses a non-reentrant model
 40010 ;;
 40011                           
 40012                           	psect	text204
 40013  008272                     __ptext204:
 40014                           	opt stack 0
 40015  008272                     __flash_write_to_buffer:
 40016                           	opt stack 23
 40017                           
 40018                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 40019                           
 40020                           ;incstack = 0
 40021  008272  EC32  F046         	call	__flash_is_busy	;wreg free
 40022  008276  0900               	iorlw	0
 40023  008278  A4D8               	btfss	status,2,c
 40024  00827A  D7FB               	goto	__flash_write_to_buffer
 40025                           
 40026                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 40027  00827C  501A               	movf	__flash_write_to_buffer@buffer,w,c
 40028  00827E  A4D8               	btfss	status,2,c
 40029  008280  D002               	goto	l1786
 40030                           
 40031                           ;flash.c: 241: command[0] = 0x84;
 40032  008282  0E84               	movlw	132
 40033  008284  6E1B               	movwf	__flash_write_to_buffer@command,c
 40034  008286                     l1786:
 40035                           
 40036                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 40037  008286  041A               	decf	__flash_write_to_buffer@buffer,w,c
 40038  008288  A4D8               	btfss	status,2,c
 40039  00828A  D002               	goto	l1787
 40040                           
 40041                           ;flash.c: 243: command[0] = 0x87;
 40042  00828C  0E87               	movlw	135
 40043  00828E  6E1B               	movwf	__flash_write_to_buffer@command,c
 40044  008290                     l1787:
 40045                           
 40046                           ;flash.c: 245: command[1] = 0x00;
 40047  008290  0E00               	movlw	0
 40048  008292  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 40049                           
 40050                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 40051  008294  5015               	movf	__flash_write_to_buffer@start+1,w,c
 40052  008296  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 40053                           
 40054                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 40055  008298  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 40056                           
 40057                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 40058  00829C  0E1B               	movlw	low __flash_write_to_buffer@command
 40059  00829E  6E01               	movwf	spi_tx_tx@command,c
 40060  0082A0  0E00               	movlw	high __flash_write_to_buffer@command
 40061  0082A2  6E02               	movwf	spi_tx_tx@command+1,c
 40062  0082A4  0E00               	movlw	0
 40063  0082A6  6E04               	movwf	spi_tx_tx@command_length+1,c
 40064  0082A8  0E04               	movlw	4
 40065  0082AA  6E03               	movwf	spi_tx_tx@command_length,c
 40066  0082AC  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 40067  0082B0  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 40068  0082B4  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 40069  0082B8  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 40070  0082BC  EC6B  F038         	call	_spi_tx_tx	;wreg free
 40071  0082C0  0012               	return		;funcret
 40072  0082C2                     __end_of__flash_write_to_buffer:
 40073                           	opt stack 0
 40074                           tosu	equ	0xFFF
 40075                           tosh	equ	0xFFE
 40076                           tosl	equ	0xFFD
 40077                           pclath	equ	0xFFA
 40078                           tblptru	equ	0xFF8
 40079                           tblptrh	equ	0xFF7
 40080                           tblptrl	equ	0xFF6
 40081                           tablat	equ	0xFF5
 40082                           prodh	equ	0xFF4
 40083                           prodl	equ	0xFF3
 40084                           intcon	equ	0xFF2
 40085                           intcon2	equ	0xFF1
 40086                           intcon3	equ	0xFF0
 40087                           indf0	equ	0xFEF
 40088                           postinc0	equ	0xFEE
 40089                           fsr0h	equ	0xFEA
 40090                           fsr0l	equ	0xFE9
 40091                           wreg	equ	0xFE8
 40092                           indf1	equ	0xFE7
 40093                           postdec1	equ	0xFE5
 40094                           plusw1	equ	0xFE3
 40095                           fsr1h	equ	0xFE2
 40096                           fsr1l	equ	0xFE1
 40097                           indf2	equ	0xFDF
 40098                           postinc2	equ	0xFDE
 40099                           postdec2	equ	0xFDD
 40100                           plusw2	equ	0xFDB
 40101                           fsr2h	equ	0xFDA
 40102                           fsr2l	equ	0xFD9
 40103                           status	equ	0xFD8
 40104                           
 40105 ;; *************** function _spi_tx_tx *****************
 40106 ;; Defined at:
 40107 ;;		line 386 in file "spi.c"
 40108 ;; Parameters:    Size  Location     Type
 40109 ;;  command         2    0[COMRAM] PTR unsigned char 
 40110 ;;		 -> _flash_write_to_buffer@command(4), 
 40111 ;;  command_leng    2    2[COMRAM] unsigned int 
 40112 ;;  data            2    4[COMRAM] PTR unsigned char 
 40113 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 40114 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 40115 ;;  data_length     2    6[COMRAM] unsigned int 
 40116 ;; Auto vars:     Size  Location     Type
 40117 ;;		None
 40118 ;; Return value:  Size  Location     Type
 40119 ;;                  1    wreg      void 
 40120 ;; Registers used:
 40121 ;;		wreg, status,2, status,0
 40122 ;; Tracked objects:
 40123 ;;		On entry : 0/0
 40124 ;;		On exit  : 0/0
 40125 ;;		Unchanged: 0/0
 40126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40127 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40130 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40131 ;;Total ram usage:       12 bytes
 40132 ;; Hardware stack levels used:    1
 40133 ;; This function calls:
 40134 ;;		Nothing
 40135 ;; This function is called by:
 40136 ;;		__flash_write_to_buffer
 40137 ;; This function uses a non-reentrant model
 40138 ;;
 40139                           
 40140                           	psect	text205
 40141  0070D6                     __ptext205:
 40142                           	opt stack 0
 40143  0070D6                     _spi_tx_tx:
 40144                           	opt stack 25
 40145                           
 40146                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 40147                           
 40148                           ;incstack = 0
 40149  0070D6  9E88               	bcf	3976,7,c	;volatile
 40150                           
 40151                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 40152  0070D8  9C88               	bcf	3976,6,c	;volatile
 40153                           
 40154                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 40155  0070DA  8A88               	bsf	3976,5,c	;volatile
 40156                           
 40157                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 40158  0070DC  9888               	bcf	3976,4,c	;volatile
 40159                           
 40160                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 40161  0070DE  9688               	bcf	3976,3,c	;volatile
 40162                           
 40163                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 40164  0070E0  8488               	bsf	3976,2,c	;volatile
 40165                           
 40166                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 40167  0070E2  9288               	bcf	3976,1,c	;volatile
 40168                           
 40169                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 40170  0070E4  9886               	bcf	3974,4,c	;volatile
 40171  0070E6  9A86               	bcf	3974,5,c	;volatile
 40172  0070E8  9C86               	bcf	3974,6,c	;volatile
 40173  0070EA  9E86               	bcf	3974,7,c	;volatile
 40174                           
 40175                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 40176  0070EC  9086               	bcf	3974,0,c	;volatile
 40177  0070EE  9286               	bcf	3974,1,c	;volatile
 40178  0070F0  9486               	bcf	3974,2,c	;volatile
 40179  0070F2  9686               	bcf	3974,3,c	;volatile
 40180                           
 40181                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 40182  0070F4  5002               	movf	spi_tx_tx@command+1,w,c
 40183  0070F6  6E6A               	movwf	3946,c	;volatile
 40184                           
 40185                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 40186  0070F8  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 40187                           
 40188                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 40189  0070FC  0EFF               	movlw	255
 40190  0070FE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 40191  007100  0EFF               	movlw	255
 40192  007102  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 40193  007104  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 40194  007108  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 40195  00710C  5009               	movf	??_spi_tx_tx,w,c
 40196  00710E  260B               	addwf	??_spi_tx_tx+2,f,c
 40197  007110  500A               	movf	??_spi_tx_tx+1,w,c
 40198  007112  220C               	addwfc	??_spi_tx_tx+3,f,c
 40199  007114  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 40200  007118  6A0C               	clrf	??_spi_tx_tx+3,c
 40201  00711A  500B               	movf	??_spi_tx_tx+2,w,c
 40202  00711C  6E66               	movwf	3942,c	;volatile
 40203                           
 40204                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 40205  00711E  0403               	decf	spi_tx_tx@command_length,w,c
 40206  007120  6E67               	movwf	3943,c	;volatile
 40207                           
 40208                           ;spi.c: 414: LATDbits.LD7 = 0;
 40209  007122  9E8C               	bcf	3980,7,c	;volatile
 40210                           
 40211                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 40212  007124  8088               	bsf	3976,0,c	;volatile
 40213  007126  B088               	btfsc	3976,0,c	;volatile
 40214  007128  D7FE               	goto	l2994
 40215                           
 40216                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40217  00712A  5006               	movf	spi_tx_tx@data+1,w,c
 40218  00712C  6E6A               	movwf	3946,c	;volatile
 40219                           
 40220                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40221  00712E  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 40222                           
 40223                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40224  007132  0EFF               	movlw	255
 40225  007134  6E09               	movwf	??_spi_tx_tx& (0+255),c
 40226  007136  0EFF               	movlw	255
 40227  007138  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 40228  00713A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 40229  00713E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 40230  007142  5009               	movf	??_spi_tx_tx,w,c
 40231  007144  260B               	addwf	??_spi_tx_tx+2,f,c
 40232  007146  500A               	movf	??_spi_tx_tx+1,w,c
 40233  007148  220C               	addwfc	??_spi_tx_tx+3,f,c
 40234  00714A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 40235  00714E  6A0C               	clrf	??_spi_tx_tx+3,c
 40236  007150  500B               	movf	??_spi_tx_tx+2,w,c
 40237  007152  6E66               	movwf	3942,c	;volatile
 40238                           
 40239                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40240  007154  0407               	decf	spi_tx_tx@data_length,w,c
 40241  007156  6E67               	movwf	3943,c	;volatile
 40242                           
 40243                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 40244  007158  8088               	bsf	3976,0,c	;volatile
 40245  00715A  B088               	btfsc	3976,0,c	;volatile
 40246  00715C  D7FE               	goto	l2997
 40247                           
 40248                           ;spi.c: 433: LATDbits.LD7 = 1;
 40249  00715E  8E8C               	bsf	3980,7,c	;volatile
 40250  007160  0012               	return		;funcret
 40251  007162                     __end_of_spi_tx_tx:
 40252                           	opt stack 0
 40253                           tosu	equ	0xFFF
 40254                           tosh	equ	0xFFE
 40255                           tosl	equ	0xFFD
 40256                           pclath	equ	0xFFA
 40257                           tblptru	equ	0xFF8
 40258                           tblptrh	equ	0xFF7
 40259                           tblptrl	equ	0xFF6
 40260                           tablat	equ	0xFF5
 40261                           prodh	equ	0xFF4
 40262                           prodl	equ	0xFF3
 40263                           intcon	equ	0xFF2
 40264                           intcon2	equ	0xFF1
 40265                           intcon3	equ	0xFF0
 40266                           indf0	equ	0xFEF
 40267                           postinc0	equ	0xFEE
 40268                           fsr0h	equ	0xFEA
 40269                           fsr0l	equ	0xFE9
 40270                           wreg	equ	0xFE8
 40271                           indf1	equ	0xFE7
 40272                           postdec1	equ	0xFE5
 40273                           plusw1	equ	0xFE3
 40274                           fsr1h	equ	0xFE2
 40275                           fsr1l	equ	0xFE1
 40276                           indf2	equ	0xFDF
 40277                           postinc2	equ	0xFDE
 40278                           postdec2	equ	0xFDD
 40279                           plusw2	equ	0xFDB
 40280                           fsr2h	equ	0xFDA
 40281                           fsr2l	equ	0xFD9
 40282                           status	equ	0xFD8
 40283                           
 40284 ;; *************** function __flash_copy_page_to_buffer *****************
 40285 ;; Defined at:
 40286 ;;		line 150 in file "flash.c"
 40287 ;; Parameters:    Size  Location     Type
 40288 ;;  page            2   19[COMRAM] unsigned int 
 40289 ;;  buffer          1   21[COMRAM] enum E6902
 40290 ;; Auto vars:     Size  Location     Type
 40291 ;;  command         4   25[COMRAM] unsigned char [4]
 40292 ;; Return value:  Size  Location     Type
 40293 ;;                  1    wreg      void 
 40294 ;; Registers used:
 40295 ;;		wreg, status,2, status,0, cstack
 40296 ;; Tracked objects:
 40297 ;;		On entry : 0/0
 40298 ;;		On exit  : 0/0
 40299 ;;		Unchanged: 0/0
 40300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40301 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40302 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40303 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40304 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40305 ;;Total ram usage:       10 bytes
 40306 ;; Hardware stack levels used:    1
 40307 ;; Hardware stack levels required when called:    3
 40308 ;; This function calls:
 40309 ;;		__flash_is_busy
 40310 ;;		_spi_tx
 40311 ;; This function is called by:
 40312 ;;		_flash_partial_write
 40313 ;;		_flash_copy_page_to_buffer
 40314 ;; This function uses a non-reentrant model
 40315 ;;
 40316                           
 40317                           	psect	text206
 40318  007D74                     __ptext206:
 40319                           	opt stack 0
 40320  007D74                     __flash_copy_page_to_buffer:
 40321                           	opt stack 22
 40322                           
 40323                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 40324                           
 40325                           ;incstack = 0
 40326  007D74  EC32  F046         	call	__flash_is_busy	;wreg free
 40327  007D78  0900               	iorlw	0
 40328  007D7A  A4D8               	btfss	status,2,c
 40329  007D7C  D7FB               	goto	__flash_copy_page_to_buffer
 40330                           
 40331                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 40332  007D7E  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 40333  007D80  A4D8               	btfss	status,2,c
 40334  007D82  D002               	goto	l1759
 40335                           
 40336                           ;flash.c: 159: command[0] = 0x53;
 40337  007D84  0E53               	movlw	83
 40338  007D86  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 40339  007D88                     l1759:
 40340                           
 40341                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 40342  007D88  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 40343  007D8A  A4D8               	btfss	status,2,c
 40344  007D8C  D002               	goto	l1760
 40345                           
 40346                           ;flash.c: 161: command[0] = 0x55;
 40347  007D8E  0E55               	movlw	85
 40348  007D90  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 40349  007D92                     l1760:
 40350                           
 40351                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 40352  007D92  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 40353  007D96  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 40354  007D9A  0E07               	movlw	7
 40355  007D9C  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 40356  007D9E                     u7005:
 40357  007D9E  90D8               	bcf	status,0,c
 40358  007DA0  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 40359  007DA2  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 40360  007DA4  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 40361  007DA6  D7FB               	goto	u7005
 40362  007DA8  5017               	movf	??__flash_copy_page_to_buffer,w,c
 40363  007DAA  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 40364                           
 40365                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 40366  007DAC  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 40367  007DAE  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 40368  007DB0  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 40369                           
 40370                           ;flash.c: 165: command[3] = 0x00;
 40371  007DB2  0E00               	movlw	0
 40372  007DB4  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 40373                           
 40374                           ;flash.c: 168: spi_tx(command, 4);
 40375  007DB6  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 40376  007DB8  6E01               	movwf	spi_tx@data,c
 40377  007DBA  0E00               	movlw	high __flash_copy_page_to_buffer@command
 40378  007DBC  6E02               	movwf	spi_tx@data+1,c
 40379  007DBE  0E00               	movlw	0
 40380  007DC0  6E04               	movwf	spi_tx@length+1,c
 40381  007DC2  0E04               	movlw	4
 40382  007DC4  6E03               	movwf	spi_tx@length,c
 40383  007DC6  EC12  F03F         	call	_spi_tx	;wreg free
 40384  007DCA  0012               	return		;funcret
 40385  007DCC                     __end_of__flash_copy_page_to_buffer:
 40386                           	opt stack 0
 40387                           tosu	equ	0xFFF
 40388                           tosh	equ	0xFFE
 40389                           tosl	equ	0xFFD
 40390                           pclath	equ	0xFFA
 40391                           tblptru	equ	0xFF8
 40392                           tblptrh	equ	0xFF7
 40393                           tblptrl	equ	0xFF6
 40394                           tablat	equ	0xFF5
 40395                           prodh	equ	0xFF4
 40396                           prodl	equ	0xFF3
 40397                           intcon	equ	0xFF2
 40398                           intcon2	equ	0xFF1
 40399                           intcon3	equ	0xFF0
 40400                           indf0	equ	0xFEF
 40401                           postinc0	equ	0xFEE
 40402                           fsr0h	equ	0xFEA
 40403                           fsr0l	equ	0xFE9
 40404                           wreg	equ	0xFE8
 40405                           indf1	equ	0xFE7
 40406                           postdec1	equ	0xFE5
 40407                           plusw1	equ	0xFE3
 40408                           fsr1h	equ	0xFE2
 40409                           fsr1l	equ	0xFE1
 40410                           indf2	equ	0xFDF
 40411                           postinc2	equ	0xFDE
 40412                           postdec2	equ	0xFDD
 40413                           plusw2	equ	0xFDB
 40414                           fsr2h	equ	0xFDA
 40415                           fsr2l	equ	0xFD9
 40416                           status	equ	0xFD8
 40417                           
 40418 ;; *************** function __flash_compare_page_to_buffer *****************
 40419 ;; Defined at:
 40420 ;;		line 172 in file "flash.c"
 40421 ;; Parameters:    Size  Location     Type
 40422 ;;  page            2   19[COMRAM] unsigned int 
 40423 ;;  buffer          1   21[COMRAM] enum E6902
 40424 ;; Auto vars:     Size  Location     Type
 40425 ;;  command         4   27[COMRAM] unsigned char [4]
 40426 ;;  status          2   25[COMRAM] unsigned int 
 40427 ;; Return value:  Size  Location     Type
 40428 ;;                  1    wreg      enum E6906
 40429 ;; Registers used:
 40430 ;;		wreg, status,2, status,0, cstack
 40431 ;; Tracked objects:
 40432 ;;		On entry : 0/0
 40433 ;;		On exit  : 0/0
 40434 ;;		Unchanged: 0/0
 40435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40437 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40438 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40439 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40440 ;;Total ram usage:       12 bytes
 40441 ;; Hardware stack levels used:    1
 40442 ;; Hardware stack levels required when called:    3
 40443 ;; This function calls:
 40444 ;;		__flash_get_status
 40445 ;;		__flash_is_busy
 40446 ;;		_spi_tx
 40447 ;; This function is called by:
 40448 ;;		_flash_sector_write
 40449 ;;		_flash_partial_write
 40450 ;; This function uses a non-reentrant model
 40451 ;;
 40452                           
 40453                           	psect	text207
 40454  0074F4                     __ptext207:
 40455                           	opt stack 0
 40456  0074F4                     __flash_compare_page_to_buffer:
 40457                           	opt stack 23
 40458                           
 40459                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 40460                           
 40461                           ;incstack = 0
 40462  0074F4  EC32  F046         	call	__flash_is_busy	;wreg free
 40463  0074F8  0900               	iorlw	0
 40464  0074FA  A4D8               	btfss	status,2,c
 40465  0074FC  D7FB               	goto	__flash_compare_page_to_buffer
 40466                           
 40467                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 40468  0074FE  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 40469  007500  A4D8               	btfss	status,2,c
 40470  007502  D002               	goto	l1767
 40471                           
 40472                           ;flash.c: 182: command[0] = 0x60;
 40473  007504  0E60               	movlw	96
 40474  007506  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 40475  007508                     l1767:
 40476                           
 40477                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 40478  007508  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 40479  00750A  A4D8               	btfss	status,2,c
 40480  00750C  D002               	goto	l1768
 40481                           
 40482                           ;flash.c: 184: command[0] = 0x60;
 40483  00750E  0E60               	movlw	96
 40484  007510  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 40485  007512                     l1768:
 40486                           
 40487                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 40488  007512  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 40489  007516  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 40490  00751A  0E07               	movlw	7
 40491  00751C  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 40492  00751E                     u7045:
 40493  00751E  90D8               	bcf	status,0,c
 40494  007520  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 40495  007522  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 40496  007524  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 40497  007526  D7FB               	goto	u7045
 40498  007528  5017               	movf	??__flash_compare_page_to_buffer,w,c
 40499  00752A  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 40500                           
 40501                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 40502  00752C  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 40503  00752E  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 40504  007530  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 40505                           
 40506                           ;flash.c: 188: command[3] = 0x00;
 40507  007532  0E00               	movlw	0
 40508  007534  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 40509                           
 40510                           ;flash.c: 191: spi_tx(command, 4);
 40511  007536  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 40512  007538  6E01               	movwf	spi_tx@data,c
 40513  00753A  0E00               	movlw	high __flash_compare_page_to_buffer@command
 40514  00753C  6E02               	movwf	spi_tx@data+1,c
 40515  00753E  0E00               	movlw	0
 40516  007540  6E04               	movwf	spi_tx@length+1,c
 40517  007542  0E04               	movlw	4
 40518  007544  6E03               	movwf	spi_tx@length,c
 40519  007546  EC12  F03F         	call	_spi_tx	;wreg free
 40520  00754A  EC32  F046         	call	__flash_is_busy	;wreg free
 40521  00754E  0900               	iorlw	0
 40522  007550  A4D8               	btfss	status,2,c
 40523  007552  D7FB               	goto	l1770
 40524                           
 40525                           ;flash.c: 197: status = _flash_get_status();
 40526  007554  EC71  F044         	call	__flash_get_status	;wreg free
 40527  007558  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 40528  00755C  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 40529                           
 40530                           ;flash.c: 200: if(status & 0b0000000001000000)
 40531  007560  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 40532  007562  D002               	goto	l1772
 40533                           
 40534                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 40535  007564  0E01               	movlw	1
 40536                           
 40537                           ;flash.c: 204: }
 40538  007566  0012               	return	
 40539  007568                     l1772:
 40540                           
 40541                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 40542  007568  0E00               	movlw	0
 40543  00756A  0012               	return	
 40544  00756C                     __end_of__flash_compare_page_to_buffer:
 40545                           	opt stack 0
 40546                           tosu	equ	0xFFF
 40547                           tosh	equ	0xFFE
 40548                           tosl	equ	0xFFD
 40549                           pclath	equ	0xFFA
 40550                           tblptru	equ	0xFF8
 40551                           tblptrh	equ	0xFF7
 40552                           tblptrl	equ	0xFF6
 40553                           tablat	equ	0xFF5
 40554                           prodh	equ	0xFF4
 40555                           prodl	equ	0xFF3
 40556                           intcon	equ	0xFF2
 40557                           intcon2	equ	0xFF1
 40558                           intcon3	equ	0xFF0
 40559                           indf0	equ	0xFEF
 40560                           postinc0	equ	0xFEE
 40561                           fsr0h	equ	0xFEA
 40562                           fsr0l	equ	0xFE9
 40563                           wreg	equ	0xFE8
 40564                           indf1	equ	0xFE7
 40565                           postdec1	equ	0xFE5
 40566                           plusw1	equ	0xFE3
 40567                           fsr1h	equ	0xFE2
 40568                           fsr1l	equ	0xFE1
 40569                           indf2	equ	0xFDF
 40570                           postinc2	equ	0xFDE
 40571                           postdec2	equ	0xFDD
 40572                           plusw2	equ	0xFDB
 40573                           fsr2h	equ	0xFDA
 40574                           fsr2l	equ	0xFD9
 40575                           status	equ	0xFD8
 40576                           
 40577 ;; *************** function _fat_get_file_information *****************
 40578 ;; Defined at:
 40579 ;;		line 1327 in file "fat16.c"
 40580 ;; Parameters:    Size  Location     Type
 40581 ;;  file_number     1    wreg     unsigned char 
 40582 ;;  data            2   47[COMRAM] PTR struct .
 40583 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 40584 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), RAM(3759), 
 40585 ;; Auto vars:     Size  Location     Type
 40586 ;;  file_number     1   54[COMRAM] unsigned char 
 40587 ;;  offset          2   52[COMRAM] unsigned int 
 40588 ;;  root_sector     2   50[COMRAM] unsigned int 
 40589 ;; Return value:  Size  Location     Type
 40590 ;;                  1    wreg      unsigned char 
 40591 ;; Registers used:
 40592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40593 ;; Tracked objects:
 40594 ;;		On entry : 0/0
 40595 ;;		On exit  : 0/0
 40596 ;;		Unchanged: 0/0
 40597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40599 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40601 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40602 ;;Total ram usage:        8 bytes
 40603 ;; Hardware stack levels used:    1
 40604 ;; Hardware stack levels required when called:    5
 40605 ;; This function calls:
 40606 ;;		__offset_from_file_number
 40607 ;;		__sector_from_file_number
 40608 ;;		_flash_partial_read
 40609 ;; This function is called by:
 40610 ;;		_fat_rename_file
 40611 ;;		_fat_read_from_file
 40612 ;;		_fat_resize_file
 40613 ;;		_fat_modify_file
 40614 ;;		__bootloader_verify_file
 40615 ;;		__bootloader_program
 40616 ;;		__fill_buffer_get_file_details
 40617 ;; This function uses a non-reentrant model
 40618 ;;
 40619                           
 40620                           	psect	text208
 40621  007656                     __ptext208:
 40622                           	opt stack 0
 40623  007656                     _fat_get_file_information:
 40624                           	opt stack 23
 40625                           
 40626                           ;incstack = 0
 40627                           ;fat_get_file_information@file_number stored from wreg
 40628  007656  6E37               	movwf	fat_get_file_information@file_number,c
 40629                           
 40630                           ;fat16.c: 1329: uint16_t root_sector;;fat16.c: 1330: uint16_t offset;;fat16.c: 1332: if(
      +                          file_number>=64)
 40631  007658  0E3F               	movlw	63
 40632  00765A  6437               	cpfsgt	fat_get_file_information@file_number,c
 40633  00765C  D002               	goto	l2276
 40634                           
 40635                           ;fat16.c: 1333: {;fat16.c: 1335: return 0x01;
 40636  00765E  0E01               	movlw	1
 40637  007660  0012               	return	
 40638  007662                     l2276:
 40639                           
 40640                           ;fat16.c: 1336: };fat16.c: 1339: root_sector = _sector_from_file_number(file_number);
 40641  007662  5037               	movf	fat_get_file_information@file_number,w,c
 40642  007664  EC28  F045         	call	__sector_from_file_number
 40643  007668  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 40644  00766C  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 40645                           
 40646                           ;fat16.c: 1340: offset = _offset_from_file_number(file_number);
 40647  007670  5037               	movf	fat_get_file_information@file_number,w,c
 40648  007672  ECB4  F045         	call	__offset_from_file_number
 40649  007676  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 40650  00767A  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 40651                           
 40652                           ;fat16.c: 1343: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 40653  00767E  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 40654  007682  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 40655  007686  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 40656  00768A  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 40657  00768E  0E00               	movlw	0
 40658  007690  6E2D               	movwf	flash_partial_read@length+1,c
 40659  007692  0E20               	movlw	32
 40660  007694  6E2C               	movwf	flash_partial_read@length,c
 40661  007696  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 40662  00769A  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 40663  00769E  EC58  F044         	call	_flash_partial_read	;wreg free
 40664                           
 40665                           ;fat16.c: 1346: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 40666  0076A2  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 40667  0076A6  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 40668  0076AA  50DF               	movf	indf2,w,c
 40669  0076AC  B4D8               	btfsc	status,2,c
 40670  0076AE  D008               	goto	u8250
 40671  0076B0  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 40672  0076B4  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 40673  0076B8  0EE5               	movlw	229
 40674  0076BA  18DE               	xorwf	postinc2,w,c
 40675  0076BC  A4D8               	btfss	status,2,c
 40676  0076BE  D002               	goto	l2278
 40677  0076C0                     u8250:
 40678                           
 40679                           ;fat16.c: 1347: {;fat16.c: 1349: return 0x02;
 40680  0076C0  0E02               	movlw	2
 40681  0076C2  0012               	return	
 40682  0076C4                     l2278:
 40683                           
 40684                           ;fat16.c: 1350: };fat16.c: 1353: return 0x00;
 40685  0076C4  0E00               	movlw	0
 40686  0076C6  0012               	return	
 40687  0076C8                     __end_of_fat_get_file_information:
 40688                           	opt stack 0
 40689                           tosu	equ	0xFFF
 40690                           tosh	equ	0xFFE
 40691                           tosl	equ	0xFFD
 40692                           pclath	equ	0xFFA
 40693                           tblptru	equ	0xFF8
 40694                           tblptrh	equ	0xFF7
 40695                           tblptrl	equ	0xFF6
 40696                           tablat	equ	0xFF5
 40697                           prodh	equ	0xFF4
 40698                           prodl	equ	0xFF3
 40699                           intcon	equ	0xFF2
 40700                           intcon2	equ	0xFF1
 40701                           intcon3	equ	0xFF0
 40702                           indf0	equ	0xFEF
 40703                           postinc0	equ	0xFEE
 40704                           fsr0h	equ	0xFEA
 40705                           fsr0l	equ	0xFE9
 40706                           wreg	equ	0xFE8
 40707                           indf1	equ	0xFE7
 40708                           postdec1	equ	0xFE5
 40709                           plusw1	equ	0xFE3
 40710                           fsr1h	equ	0xFE2
 40711                           fsr1l	equ	0xFE1
 40712                           indf2	equ	0xFDF
 40713                           postinc2	equ	0xFDE
 40714                           postdec2	equ	0xFDD
 40715                           plusw2	equ	0xFDB
 40716                           fsr2h	equ	0xFDA
 40717                           fsr2l	equ	0xFD9
 40718                           status	equ	0xFD8
 40719                           
 40720 ;; *************** function __parse_buffer_to_sector *****************
 40721 ;; Defined at:
 40722 ;;		line 718 in file "api.c"
 40723 ;; Parameters:    Size  Location     Type
 40724 ;;  data            2   83[COMRAM] PTR unsigned char 
 40725 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 40726 ;; Auto vars:     Size  Location     Type
 40727 ;;  sector          2   86[COMRAM] unsigned int 
 40728 ;; Return value:  Size  Location     Type
 40729 ;;                  1    wreg      unsigned char 
 40730 ;; Registers used:
 40731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40732 ;; Tracked objects:
 40733 ;;		On entry : 0/0
 40734 ;;		On exit  : 0/0
 40735 ;;		Unchanged: 0/0
 40736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40740 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40741 ;;Total ram usage:        5 bytes
 40742 ;; Hardware stack levels used:    1
 40743 ;; Hardware stack levels required when called:    8
 40744 ;; This function calls:
 40745 ;;		_fat_write_sector_from_buffer
 40746 ;; This function is called by:
 40747 ;;		__parse_command_long
 40748 ;; This function uses a non-reentrant model
 40749 ;;
 40750                           
 40751                           	psect	text209
 40752  0071EA                     __ptext209:
 40753                           	opt stack 0
 40754  0071EA                     __parse_buffer_to_sector:
 40755                           	opt stack 20
 40756                           
 40757                           ;api.c: 721: uint16_t sector;;api.c: 723: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (dat
      +                          a[4]!=0x6A) || (data[5]!=0x6D))
 40758                           
 40759                           ;incstack = 0
 40760  0071EA  C054  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 40761  0071EE  C055  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 40762  0071F2  0E58               	movlw	88
 40763  0071F4  18DE               	xorwf	postinc2,w,c
 40764  0071F6  A4D8               	btfss	status,2,c
 40765  0071F8  D014               	goto	u11020
 40766  0071FA  EE20 F004          	lfsr	2,4
 40767  0071FE  5054               	movf	__parse_buffer_to_sector@data,w,c
 40768  007200  26D9               	addwf	fsr2l,f,c
 40769  007202  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40770  007204  22DA               	addwfc	fsr2h,f,c
 40771  007206  0E6A               	movlw	106
 40772  007208  18DE               	xorwf	postinc2,w,c
 40773  00720A  A4D8               	btfss	status,2,c
 40774  00720C  D00A               	goto	u11020
 40775  00720E  EE20 F005          	lfsr	2,5
 40776  007212  5054               	movf	__parse_buffer_to_sector@data,w,c
 40777  007214  26D9               	addwf	fsr2l,f,c
 40778  007216  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40779  007218  22DA               	addwfc	fsr2h,f,c
 40780  00721A  0E6D               	movlw	109
 40781  00721C  18DE               	xorwf	postinc2,w,c
 40782  00721E  B4D8               	btfsc	status,2,c
 40783  007220  D002               	goto	l2849
 40784  007222                     u11020:
 40785                           
 40786                           ;api.c: 724: {;api.c: 725: return 6;
 40787  007222  0E06               	movlw	6
 40788  007224  0012               	return	
 40789  007226                     l2849:
 40790                           
 40791                           ;api.c: 726: };api.c: 729: sector |= data[2];
 40792  007226  EE20 F002          	lfsr	2,2
 40793  00722A  5054               	movf	__parse_buffer_to_sector@data,w,c
 40794  00722C  26D9               	addwf	fsr2l,f,c
 40795  00722E  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40796  007230  22DA               	addwfc	fsr2h,f,c
 40797  007232  50DF               	movf	indf2,w,c
 40798  007234  6E56               	movwf	??__parse_buffer_to_sector& (0+255),c
 40799  007236  5056               	movf	??__parse_buffer_to_sector,w,c
 40800  007238  1257               	iorwf	__parse_buffer_to_sector@sector,f,c
 40801                           
 40802                           ;api.c: 730: sector <<= 8;
 40803  00723A  5057               	movf	__parse_buffer_to_sector@sector,w,c
 40804  00723C  6E58               	movwf	__parse_buffer_to_sector@sector+1,c
 40805  00723E  6A57               	clrf	__parse_buffer_to_sector@sector,c
 40806                           
 40807                           ;api.c: 731: sector |= data[3];
 40808  007240  EE20 F003          	lfsr	2,3
 40809  007244  5054               	movf	__parse_buffer_to_sector@data,w,c
 40810  007246  26D9               	addwf	fsr2l,f,c
 40811  007248  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40812  00724A  22DA               	addwfc	fsr2h,f,c
 40813  00724C  50DF               	movf	indf2,w,c
 40814  00724E  6E56               	movwf	??__parse_buffer_to_sector& (0+255),c
 40815  007250  5056               	movf	??__parse_buffer_to_sector,w,c
 40816  007252  1257               	iorwf	__parse_buffer_to_sector@sector,f,c
 40817                           
 40818                           ;api.c: 734: fat_write_sector_from_buffer(data[1], sector);
 40819  007254  C057  F043         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 40820  007258  C058  F044         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 40821  00725C  EE20 F001          	lfsr	2,1
 40822  007260  5054               	movf	__parse_buffer_to_sector@data,w,c
 40823  007262  26D9               	addwf	fsr2l,f,c
 40824  007264  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40825  007266  22DA               	addwfc	fsr2h,f,c
 40826  007268  50DF               	movf	indf2,w,c
 40827  00726A  EC3C  F032         	call	_fat_write_sector_from_buffer
 40828                           
 40829                           ;api.c: 736: return 6;
 40830  00726E  0E06               	movlw	6
 40831  007270  0012               	return	
 40832  007272                     __end_of__parse_buffer_to_sector:
 40833                           	opt stack 0
 40834                           tosu	equ	0xFFF
 40835                           tosh	equ	0xFFE
 40836                           tosl	equ	0xFFD
 40837                           pclath	equ	0xFFA
 40838                           tblptru	equ	0xFF8
 40839                           tblptrh	equ	0xFF7
 40840                           tblptrl	equ	0xFF6
 40841                           tablat	equ	0xFF5
 40842                           prodh	equ	0xFF4
 40843                           prodl	equ	0xFF3
 40844                           intcon	equ	0xFF2
 40845                           intcon2	equ	0xFF1
 40846                           intcon3	equ	0xFF0
 40847                           indf0	equ	0xFEF
 40848                           postinc0	equ	0xFEE
 40849                           fsr0h	equ	0xFEA
 40850                           fsr0l	equ	0xFE9
 40851                           wreg	equ	0xFE8
 40852                           indf1	equ	0xFE7
 40853                           postdec1	equ	0xFE5
 40854                           plusw1	equ	0xFE3
 40855                           fsr1h	equ	0xFE2
 40856                           fsr1l	equ	0xFE1
 40857                           indf2	equ	0xFDF
 40858                           postinc2	equ	0xFDE
 40859                           postdec2	equ	0xFDD
 40860                           plusw2	equ	0xFDB
 40861                           fsr2h	equ	0xFDA
 40862                           fsr2l	equ	0xFD9
 40863                           status	equ	0xFD8
 40864                           
 40865 ;; *************** function _fat_write_sector_from_buffer *****************
 40866 ;; Defined at:
 40867 ;;		line 1395 in file "fat16.c"
 40868 ;; Parameters:    Size  Location     Type
 40869 ;;  file_number     1    wreg     unsigned char 
 40870 ;;  sector          2   66[COMRAM] unsigned int 
 40871 ;; Auto vars:     Size  Location     Type
 40872 ;;  file_number     1   82[COMRAM] unsigned char 
 40873 ;;  file_size       4   72[COMRAM] unsigned long 
 40874 ;;  cluster         2   80[COMRAM] unsigned int 
 40875 ;;  physical_sec    2   78[COMRAM] unsigned int 
 40876 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 40877 ;; Return value:  Size  Location     Type
 40878 ;;                  1    wreg      unsigned char 
 40879 ;; Registers used:
 40880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40881 ;; Tracked objects:
 40882 ;;		On entry : 0/0
 40883 ;;		On exit  : 0/0
 40884 ;;		Unchanged: 0/0
 40885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40887 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40889 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40890 ;;Total ram usage:       17 bytes
 40891 ;; Hardware stack levels used:    1
 40892 ;; Hardware stack levels required when called:    7
 40893 ;; This function calls:
 40894 ;;		__data_sector_from_cluster
 40895 ;;		__find_nth_cluster
 40896 ;;		__get_first_cluster
 40897 ;;		__root_is_available
 40898 ;;		_fat_get_file_size
 40899 ;;		_flash_write_page_from_buffer
 40900 ;; This function is called by:
 40901 ;;		__parse_buffer_to_sector
 40902 ;; This function uses a non-reentrant model
 40903 ;;
 40904                           
 40905                           	psect	text210
 40906  006478                     __ptext210:
 40907                           	opt stack 0
 40908  006478                     _fat_write_sector_from_buffer:
 40909                           	opt stack 20
 40910                           
 40911                           ;incstack = 0
 40912                           ;fat_write_sector_from_buffer@file_number stored from wreg
 40913  006478  6E53               	movwf	fat_write_sector_from_buffer@file_number,c
 40914                           
 40915                           ;fat16.c: 1397: uint32_t file_size;;fat16.c: 1398: uint16_t number_of_clusters;;fat16.c:
      +                           1399: uint16_t cluster;;fat16.c: 1400: uint16_t physical_sector;;fat16.c: 1403: if(_roo
      +                          t_is_available(file_number))
 40916  00647A  5053               	movf	fat_write_sector_from_buffer@file_number,w,c
 40917  00647C  ECA3  F03D         	call	__root_is_available
 40918  006480  0900               	iorlw	0
 40919  006482  A4D8               	btfss	status,2,c
 40920  006484  0012               	return	
 40921                           
 40922                           ;fat16.c: 1407: };fat16.c: 1410: file_size = fat_get_file_size(file_number);
 40923                           
 40924                           ;fat16.c: 1404: {;fat16.c: 1406: return 0xFF;;	Return value of _fat_write_sector_from_bu
      +                          ffer is never used
 40925  006486  5053               	movf	fat_write_sector_from_buffer@file_number,w,c
 40926  006488  EC0B  F03C         	call	_fat_get_file_size
 40927  00648C  C036  F049         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 40928  006490  C037  F04A         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 40929  006494  C038  F04B         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 40930  006498  C039  F04C         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 40931                           
 40932                           ;fat16.c: 1413: number_of_clusters = (file_size + 512 - 1) >> 9;
 40933  00649C  0EFF               	movlw	255
 40934  00649E  2449               	addwf	fat_write_sector_from_buffer@file_size,w,c
 40935  0064A0  6E45               	movwf	??_fat_write_sector_from_buffer& (0+255),c
 40936  0064A2  0E01               	movlw	1
 40937  0064A4  204A               	addwfc	fat_write_sector_from_buffer@file_size+1,w,c
 40938  0064A6  6E46               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),c
 40939  0064A8  0E00               	movlw	0
 40940  0064AA  204B               	addwfc	fat_write_sector_from_buffer@file_size+2,w,c
 40941  0064AC  6E47               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),c
 40942  0064AE  0E00               	movlw	0
 40943  0064B0  204C               	addwfc	fat_write_sector_from_buffer@file_size+3,w,c
 40944  0064B2  6E48               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),c
 40945  0064B4  0E0A               	movlw	10
 40946  0064B6  D005               	goto	u10440
 40947  0064B8                     u10445:
 40948  0064B8  90D8               	bcf	status,0,c
 40949  0064BA  3248               	rrcf	??_fat_write_sector_from_buffer+3,f,c
 40950  0064BC  3247               	rrcf	??_fat_write_sector_from_buffer+2,f,c
 40951  0064BE  3246               	rrcf	??_fat_write_sector_from_buffer+1,f,c
 40952  0064C0  3245               	rrcf	??_fat_write_sector_from_buffer,f,c
 40953  0064C2                     u10440:
 40954  0064C2  2EE8               	decfsz	wreg,f,c
 40955  0064C4  D7F9               	goto	u10445
 40956  0064C6  C045  F04D         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 40957  0064CA  C046  F04E         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 40958                           
 40959                           ;fat16.c: 1414: if(sector > number_of_clusters)
 40960  0064CE  5043               	movf	fat_write_sector_from_buffer@sector,w,c
 40961  0064D0  5C4D               	subwf	fat_write_sector_from_buffer@number_of_clusters,w,c
 40962  0064D2  5044               	movf	fat_write_sector_from_buffer@sector+1,w,c
 40963  0064D4  584E               	subwfb	fat_write_sector_from_buffer@number_of_clusters+1,w,c
 40964  0064D6  A0D8               	btfss	status,0,c
 40965  0064D8  0012               	return	
 40966                           
 40967                           ;fat16.c: 1418: };fat16.c: 1421: cluster = _get_first_cluster(file_number);
 40968                           
 40969                           ;fat16.c: 1415: {;fat16.c: 1417: return 0xFE;;	Return value of _fat_write_sector_from_bu
      +                          ffer is never used
 40970  0064DA  5053               	movf	fat_write_sector_from_buffer@file_number,w,c
 40971  0064DC  EC95  F040         	call	__get_first_cluster
 40972  0064E0  C030  F051         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 40973  0064E4  C031  F052         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 40974                           
 40975                           ;fat16.c: 1422: cluster = _find_nth_cluster(cluster, sector);
 40976  0064E8  C051  F038         	movff	fat_write_sector_from_buffer@cluster,__find_nth_cluster@cluster
 40977  0064EC  C052  F039         	movff	fat_write_sector_from_buffer@cluster+1,__find_nth_cluster@cluster+1
 40978  0064F0  C043  F03A         	movff	fat_write_sector_from_buffer@sector,__find_nth_cluster@n
 40979  0064F4  C044  F03B         	movff	fat_write_sector_from_buffer@sector+1,__find_nth_cluster@n+1
 40980  0064F8  ECCB  F035         	call	__find_nth_cluster	;wreg free
 40981  0064FC  C038  F051         	movff	?__find_nth_cluster,fat_write_sector_from_buffer@cluster
 40982  006500  C039  F052         	movff	?__find_nth_cluster+1,fat_write_sector_from_buffer@cluster+1
 40983                           
 40984                           ;fat16.c: 1425: physical_sector = _data_sector_from_cluster(cluster);
 40985  006504  C051  F001         	movff	fat_write_sector_from_buffer@cluster,__data_sector_from_cluster@fat_cluster
 40986  006508  C052  F002         	movff	fat_write_sector_from_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 40987  00650C  EC74  F047         	call	__data_sector_from_cluster	;wreg free
 40988  006510  C001  F04F         	movff	?__data_sector_from_cluster,fat_write_sector_from_buffer@physical_sector
 40989  006514  C002  F050         	movff	?__data_sector_from_cluster+1,fat_write_sector_from_buffer@physical_sector+1
 40990                           
 40991                           ;fat16.c: 1428: flash_write_page_from_buffer(physical_sector);
 40992  006518  C04F  F01E         	movff	fat_write_sector_from_buffer@physical_sector,flash_write_page_from_buffer@page
 40993  00651C  C050  F01F         	movff	fat_write_sector_from_buffer@physical_sector+1,flash_write_page_from_buffer@page+
      +                          1
 40994  006520  EC90  F046         	call	_flash_write_page_from_buffer	;wreg free
 40995  006524  0012               	return	
 40996  006526                     __end_of_fat_write_sector_from_buffer:
 40997                           	opt stack 0
 40998                           tosu	equ	0xFFF
 40999                           tosh	equ	0xFFE
 41000                           tosl	equ	0xFFD
 41001                           pclath	equ	0xFFA
 41002                           tblptru	equ	0xFF8
 41003                           tblptrh	equ	0xFF7
 41004                           tblptrl	equ	0xFF6
 41005                           tablat	equ	0xFF5
 41006                           prodh	equ	0xFF4
 41007                           prodl	equ	0xFF3
 41008                           intcon	equ	0xFF2
 41009                           intcon2	equ	0xFF1
 41010                           intcon3	equ	0xFF0
 41011                           indf0	equ	0xFEF
 41012                           postinc0	equ	0xFEE
 41013                           fsr0h	equ	0xFEA
 41014                           fsr0l	equ	0xFE9
 41015                           wreg	equ	0xFE8
 41016                           indf1	equ	0xFE7
 41017                           postdec1	equ	0xFE5
 41018                           plusw1	equ	0xFE3
 41019                           fsr1h	equ	0xFE2
 41020                           fsr1l	equ	0xFE1
 41021                           indf2	equ	0xFDF
 41022                           postinc2	equ	0xFDE
 41023                           postdec2	equ	0xFDD
 41024                           plusw2	equ	0xFDB
 41025                           fsr2h	equ	0xFDA
 41026                           fsr2l	equ	0xFD9
 41027                           status	equ	0xFD8
 41028                           
 41029 ;; *************** function _flash_write_page_from_buffer *****************
 41030 ;; Defined at:
 41031 ;;		line 511 in file "flash.c"
 41032 ;; Parameters:    Size  Location     Type
 41033 ;;  page            2   29[COMRAM] unsigned int 
 41034 ;; Auto vars:     Size  Location     Type
 41035 ;;		None
 41036 ;; Return value:  Size  Location     Type
 41037 ;;                  1    wreg      void 
 41038 ;; Registers used:
 41039 ;;		wreg, status,2, status,0, cstack
 41040 ;; Tracked objects:
 41041 ;;		On entry : 0/0
 41042 ;;		On exit  : 0/0
 41043 ;;		Unchanged: 0/0
 41044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41049 ;;Total ram usage:        2 bytes
 41050 ;; Hardware stack levels used:    1
 41051 ;; Hardware stack levels required when called:    4
 41052 ;; This function calls:
 41053 ;;		__flash_write_page_from_buffer
 41054 ;;		_spi_set_configuration
 41055 ;; This function is called by:
 41056 ;;		_fat_write_sector_from_buffer
 41057 ;; This function uses a non-reentrant model
 41058 ;;
 41059                           
 41060                           	psect	text211
 41061  008D20                     __ptext211:
 41062                           	opt stack 0
 41063  008D20                     _flash_write_page_from_buffer:
 41064                           	opt stack 22
 41065                           
 41066                           ;flash.c: 514: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 41067                           
 41068                           ;incstack = 0
 41069  008D20  0E00               	movlw	0
 41070  008D22  EC62  F023         	call	_spi_set_configuration
 41071                           
 41072                           ;flash.c: 516: _flash_write_page_from_buffer(page, FLASH_BUFFER_2);
 41073  008D26  C01E  F014         	movff	flash_write_page_from_buffer@page,__flash_write_page_from_buffer@page
 41074  008D2A  C01F  F015         	movff	flash_write_page_from_buffer@page+1,__flash_write_page_from_buffer@page+1
 41075  008D2E  0E01               	movlw	1
 41076  008D30  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 41077  008D32  ECE6  F03E         	call	__flash_write_page_from_buffer	;wreg free
 41078                           
 41079                           ;flash.c: 519: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 41080  008D36  0E01               	movlw	1
 41081  008D38  EC62  F023         	call	_spi_set_configuration
 41082  008D3C  0012               	return		;funcret
 41083  008D3E                     __end_of_flash_write_page_from_buffer:
 41084                           	opt stack 0
 41085                           tosu	equ	0xFFF
 41086                           tosh	equ	0xFFE
 41087                           tosl	equ	0xFFD
 41088                           pclath	equ	0xFFA
 41089                           tblptru	equ	0xFF8
 41090                           tblptrh	equ	0xFF7
 41091                           tblptrl	equ	0xFF6
 41092                           tablat	equ	0xFF5
 41093                           prodh	equ	0xFF4
 41094                           prodl	equ	0xFF3
 41095                           intcon	equ	0xFF2
 41096                           intcon2	equ	0xFF1
 41097                           intcon3	equ	0xFF0
 41098                           indf0	equ	0xFEF
 41099                           postinc0	equ	0xFEE
 41100                           fsr0h	equ	0xFEA
 41101                           fsr0l	equ	0xFE9
 41102                           wreg	equ	0xFE8
 41103                           indf1	equ	0xFE7
 41104                           postdec1	equ	0xFE5
 41105                           plusw1	equ	0xFE3
 41106                           fsr1h	equ	0xFE2
 41107                           fsr1l	equ	0xFE1
 41108                           indf2	equ	0xFDF
 41109                           postinc2	equ	0xFDE
 41110                           postdec2	equ	0xFDD
 41111                           plusw2	equ	0xFDB
 41112                           fsr2h	equ	0xFDA
 41113                           fsr2l	equ	0xFD9
 41114                           status	equ	0xFD8
 41115                           
 41116 ;; *************** function __flash_write_page_from_buffer *****************
 41117 ;; Defined at:
 41118 ;;		line 254 in file "flash.c"
 41119 ;; Parameters:    Size  Location     Type
 41120 ;;  page            2   19[COMRAM] unsigned int 
 41121 ;;  buffer          1   21[COMRAM] enum E6902
 41122 ;; Auto vars:     Size  Location     Type
 41123 ;;  command         4   25[COMRAM] unsigned char [4]
 41124 ;; Return value:  Size  Location     Type
 41125 ;;                  1    wreg      void 
 41126 ;; Registers used:
 41127 ;;		wreg, status,2, status,0, cstack
 41128 ;; Tracked objects:
 41129 ;;		On entry : 0/0
 41130 ;;		On exit  : 0/0
 41131 ;;		Unchanged: 0/0
 41132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41133 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41135 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41136 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41137 ;;Total ram usage:       10 bytes
 41138 ;; Hardware stack levels used:    1
 41139 ;; Hardware stack levels required when called:    3
 41140 ;; This function calls:
 41141 ;;		__flash_is_busy
 41142 ;;		_spi_tx
 41143 ;; This function is called by:
 41144 ;;		_flash_sector_write
 41145 ;;		_flash_partial_write
 41146 ;;		_flash_write_page_from_buffer
 41147 ;; This function uses a non-reentrant model
 41148 ;;
 41149                           
 41150                           	psect	text212
 41151  007DCC                     __ptext212:
 41152                           	opt stack 0
 41153  007DCC                     __flash_write_page_from_buffer:
 41154                           	opt stack 23
 41155                           
 41156                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 41157                           
 41158                           ;incstack = 0
 41159  007DCC  EC32  F046         	call	__flash_is_busy	;wreg free
 41160  007DD0  0900               	iorlw	0
 41161  007DD2  A4D8               	btfss	status,2,c
 41162  007DD4  D7FB               	goto	__flash_write_page_from_buffer
 41163                           
 41164                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 41165  007DD6  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 41166  007DD8  A4D8               	btfss	status,2,c
 41167  007DDA  D002               	goto	l1794
 41168                           
 41169                           ;flash.c: 263: command[0] = 0x83;
 41170  007DDC  0E83               	movlw	131
 41171  007DDE  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 41172  007DE0                     l1794:
 41173                           
 41174                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 41175  007DE0  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 41176  007DE2  A4D8               	btfss	status,2,c
 41177  007DE4  D002               	goto	l1795
 41178                           
 41179                           ;flash.c: 265: command[0] = 0x86;
 41180  007DE6  0E86               	movlw	134
 41181  007DE8  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 41182  007DEA                     l1795:
 41183                           
 41184                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 41185  007DEA  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 41186  007DEE  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 41187  007DF2  0E07               	movlw	7
 41188  007DF4  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 41189  007DF6                     u7135:
 41190  007DF6  90D8               	bcf	status,0,c
 41191  007DF8  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 41192  007DFA  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 41193  007DFC  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 41194  007DFE  D7FB               	goto	u7135
 41195  007E00  5017               	movf	??__flash_write_page_from_buffer,w,c
 41196  007E02  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 41197                           
 41198                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 41199  007E04  5014               	movf	__flash_write_page_from_buffer@page,w,c
 41200  007E06  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 41201  007E08  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 41202                           
 41203                           ;flash.c: 269: command[3] = 0x00;
 41204  007E0A  0E00               	movlw	0
 41205  007E0C  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 41206                           
 41207                           ;flash.c: 272: spi_tx(command, 4);
 41208  007E0E  0E1A               	movlw	low __flash_write_page_from_buffer@command
 41209  007E10  6E01               	movwf	spi_tx@data,c
 41210  007E12  0E00               	movlw	high __flash_write_page_from_buffer@command
 41211  007E14  6E02               	movwf	spi_tx@data+1,c
 41212  007E16  0E00               	movlw	0
 41213  007E18  6E04               	movwf	spi_tx@length+1,c
 41214  007E1A  0E04               	movlw	4
 41215  007E1C  6E03               	movwf	spi_tx@length,c
 41216  007E1E  EC12  F03F         	call	_spi_tx	;wreg free
 41217  007E22  0012               	return		;funcret
 41218  007E24                     __end_of__flash_write_page_from_buffer:
 41219                           	opt stack 0
 41220                           tosu	equ	0xFFF
 41221                           tosh	equ	0xFFE
 41222                           tosl	equ	0xFFD
 41223                           pclath	equ	0xFFA
 41224                           tblptru	equ	0xFF8
 41225                           tblptrh	equ	0xFF7
 41226                           tblptrl	equ	0xFF6
 41227                           tablat	equ	0xFF5
 41228                           prodh	equ	0xFF4
 41229                           prodl	equ	0xFF3
 41230                           intcon	equ	0xFF2
 41231                           intcon2	equ	0xFF1
 41232                           intcon3	equ	0xFF0
 41233                           indf0	equ	0xFEF
 41234                           postinc0	equ	0xFEE
 41235                           fsr0h	equ	0xFEA
 41236                           fsr0l	equ	0xFE9
 41237                           wreg	equ	0xFE8
 41238                           indf1	equ	0xFE7
 41239                           postdec1	equ	0xFE5
 41240                           plusw1	equ	0xFE3
 41241                           fsr1h	equ	0xFE2
 41242                           fsr1l	equ	0xFE1
 41243                           indf2	equ	0xFDF
 41244                           postinc2	equ	0xFDE
 41245                           postdec2	equ	0xFDD
 41246                           plusw2	equ	0xFDB
 41247                           fsr2h	equ	0xFDA
 41248                           fsr2l	equ	0xFD9
 41249                           status	equ	0xFD8
 41250                           
 41251 ;; *************** function _fat_get_file_size *****************
 41252 ;; Defined at:
 41253 ;;		line 562 in file "fat16.c"
 41254 ;; Parameters:    Size  Location     Type
 41255 ;;  file_number     1    wreg     unsigned char 
 41256 ;; Auto vars:     Size  Location     Type
 41257 ;;  file_number     1   65[COMRAM] unsigned char 
 41258 ;;  file_size       4   61[COMRAM] unsigned long 
 41259 ;;  offset          2   59[COMRAM] unsigned int 
 41260 ;;  sector          2   57[COMRAM] unsigned int 
 41261 ;; Return value:  Size  Location     Type
 41262 ;;                  4   53[COMRAM] unsigned long 
 41263 ;; Registers used:
 41264 ;;		wreg, status,2, status,0, cstack
 41265 ;; Tracked objects:
 41266 ;;		On entry : 0/0
 41267 ;;		On exit  : 0/0
 41268 ;;		Unchanged: 0/0
 41269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41271 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41273 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41274 ;;Total ram usage:       13 bytes
 41275 ;; Hardware stack levels used:    1
 41276 ;; Hardware stack levels required when called:    6
 41277 ;; This function calls:
 41278 ;;		__offset_from_file_number
 41279 ;;		__root_is_available
 41280 ;;		__sector_from_file_number
 41281 ;;		_flash_partial_read
 41282 ;; This function is called by:
 41283 ;;		_fat_append_to_file
 41284 ;;		_fat_copy_sector_to_buffer
 41285 ;;		_fat_write_sector_from_buffer
 41286 ;;		__bootloader_find_file
 41287 ;;		__bootloader_verify_file
 41288 ;;		__fill_buffer_read_file
 41289 ;; This function uses a non-reentrant model
 41290 ;;
 41291                           
 41292                           	psect	text213
 41293  007816                     __ptext213:
 41294                           	opt stack 0
 41295  007816                     _fat_get_file_size:
 41296                           	opt stack 22
 41297                           
 41298                           ;incstack = 0
 41299                           ;fat_get_file_size@file_number stored from wreg
 41300  007816  6E42               	movwf	fat_get_file_size@file_number,c
 41301                           
 41302                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 41303  007818  5042               	movf	fat_get_file_size@file_number,w,c
 41304  00781A  ECA3  F03D         	call	__root_is_available
 41305  00781E  0900               	iorlw	0
 41306  007820  B4D8               	btfsc	status,2,c
 41307  007822  D005               	goto	l2054
 41308                           
 41309                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 41310  007824  6836               	setf	?_fat_get_file_size,c
 41311  007826  6837               	setf	?_fat_get_file_size+1,c
 41312  007828  6838               	setf	?_fat_get_file_size+2,c
 41313  00782A  6839               	setf	?_fat_get_file_size+3,c
 41314  00782C  0012               	return	
 41315  00782E                     l2054:
 41316                           
 41317                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 41318  00782E  5042               	movf	fat_get_file_size@file_number,w,c
 41319  007830  EC28  F045         	call	__sector_from_file_number
 41320  007834  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 41321  007838  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 41322                           
 41323                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 41324  00783C  5042               	movf	fat_get_file_size@file_number,w,c
 41325  00783E  ECB4  F045         	call	__offset_from_file_number
 41326  007842  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 41327  007846  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 41328                           
 41329                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 41330  00784A  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 41331  00784E  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 41332  007852  0E1C               	movlw	28
 41333  007854  243C               	addwf	fat_get_file_size@offset,w,c
 41334  007856  6E2A               	movwf	flash_partial_read@start,c
 41335  007858  0E00               	movlw	0
 41336  00785A  203D               	addwfc	fat_get_file_size@offset+1,w,c
 41337  00785C  6E2B               	movwf	flash_partial_read@start+1,c
 41338  00785E  0E00               	movlw	0
 41339  007860  6E2D               	movwf	flash_partial_read@length+1,c
 41340  007862  0E04               	movlw	4
 41341  007864  6E2C               	movwf	flash_partial_read@length,c
 41342  007866  0E3E               	movlw	low fat_get_file_size@file_size
 41343  007868  6E2E               	movwf	flash_partial_read@data,c
 41344  00786A  0E00               	movlw	high fat_get_file_size@file_size
 41345  00786C  6E2F               	movwf	flash_partial_read@data+1,c
 41346  00786E  EC58  F044         	call	_flash_partial_read	;wreg free
 41347                           
 41348                           ;fat16.c: 583: return file_size;
 41349  007872  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 41350  007876  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 41351  00787A  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 41352  00787E  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 41353  007882  0012               	return	
 41354  007884                     __end_of_fat_get_file_size:
 41355                           	opt stack 0
 41356                           tosu	equ	0xFFF
 41357                           tosh	equ	0xFFE
 41358                           tosl	equ	0xFFD
 41359                           pclath	equ	0xFFA
 41360                           tblptru	equ	0xFF8
 41361                           tblptrh	equ	0xFF7
 41362                           tblptrl	equ	0xFF6
 41363                           tablat	equ	0xFF5
 41364                           prodh	equ	0xFF4
 41365                           prodl	equ	0xFF3
 41366                           intcon	equ	0xFF2
 41367                           intcon2	equ	0xFF1
 41368                           intcon3	equ	0xFF0
 41369                           indf0	equ	0xFEF
 41370                           postinc0	equ	0xFEE
 41371                           fsr0h	equ	0xFEA
 41372                           fsr0l	equ	0xFE9
 41373                           wreg	equ	0xFE8
 41374                           indf1	equ	0xFE7
 41375                           postdec1	equ	0xFE5
 41376                           plusw1	equ	0xFE3
 41377                           fsr1h	equ	0xFE2
 41378                           fsr1l	equ	0xFE1
 41379                           indf2	equ	0xFDF
 41380                           postinc2	equ	0xFDE
 41381                           postdec2	equ	0xFDD
 41382                           plusw2	equ	0xFDB
 41383                           fsr2h	equ	0xFDA
 41384                           fsr2l	equ	0xFD9
 41385                           status	equ	0xFD8
 41386                           
 41387 ;; *************** function __root_is_available *****************
 41388 ;; Defined at:
 41389 ;;		line 408 in file "fat16.c"
 41390 ;; Parameters:    Size  Location     Type
 41391 ;;  file_number     1    wreg     unsigned char 
 41392 ;; Auto vars:     Size  Location     Type
 41393 ;;  file_number     1   51[COMRAM] unsigned char 
 41394 ;;  offset          2   49[COMRAM] unsigned int 
 41395 ;;  root_sector     2   47[COMRAM] unsigned int 
 41396 ;;  first_byte      1   52[COMRAM] unsigned char 
 41397 ;; Return value:  Size  Location     Type
 41398 ;;                  1    wreg      unsigned char 
 41399 ;; Registers used:
 41400 ;;		wreg, status,2, status,0, cstack
 41401 ;; Tracked objects:
 41402 ;;		On entry : 0/0
 41403 ;;		On exit  : 0/0
 41404 ;;		Unchanged: 0/0
 41405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41407 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41409 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41410 ;;Total ram usage:        6 bytes
 41411 ;; Hardware stack levels used:    1
 41412 ;; Hardware stack levels required when called:    5
 41413 ;; This function calls:
 41414 ;;		__offset_from_file_number
 41415 ;;		__sector_from_file_number
 41416 ;;		_flash_partial_read
 41417 ;; This function is called by:
 41418 ;;		__get_available_root_entry
 41419 ;;		_fat_get_file_size
 41420 ;;		_fat_delete_file
 41421 ;;		_fat_append_to_file
 41422 ;;		_fat_resize_file
 41423 ;;		_fat_copy_sector_to_buffer
 41424 ;;		_fat_write_sector_from_buffer
 41425 ;; This function uses a non-reentrant model
 41426 ;;
 41427                           
 41428                           	psect	text214
 41429  007B46                     __ptext214:
 41430                           	opt stack 0
 41431  007B46                     __root_is_available:
 41432                           	opt stack 22
 41433                           
 41434                           ;incstack = 0
 41435                           ;__root_is_available@file_number stored from wreg
 41436  007B46  6E34               	movwf	__root_is_available@file_number,c
 41437                           
 41438                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 41439  007B48  0E3F               	movlw	63
 41440  007B4A  6434               	cpfsgt	__root_is_available@file_number,c
 41441  007B4C  D002               	goto	l2015
 41442                           
 41443                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 41444  007B4E  0E00               	movlw	0
 41445  007B50  0012               	return	
 41446  007B52                     l2015:
 41447                           
 41448                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 41449  007B52  5034               	movf	__root_is_available@file_number,w,c
 41450  007B54  EC28  F045         	call	__sector_from_file_number
 41451  007B58  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 41452  007B5C  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 41453                           
 41454                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 41455  007B60  5034               	movf	__root_is_available@file_number,w,c
 41456  007B62  ECB4  F045         	call	__offset_from_file_number
 41457  007B66  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 41458  007B6A  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 41459                           
 41460                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 41461  007B6E  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 41462  007B72  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 41463  007B76  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 41464  007B7A  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 41465  007B7E  0E00               	movlw	0
 41466  007B80  6E2D               	movwf	flash_partial_read@length+1,c
 41467  007B82  0E01               	movlw	1
 41468  007B84  6E2C               	movwf	flash_partial_read@length,c
 41469  007B86  0E35               	movlw	low __root_is_available@first_byte
 41470  007B88  6E2E               	movwf	flash_partial_read@data,c
 41471  007B8A  0E00               	movlw	high __root_is_available@first_byte
 41472  007B8C  6E2F               	movwf	flash_partial_read@data+1,c
 41473  007B8E  EC58  F044         	call	_flash_partial_read	;wreg free
 41474                           
 41475                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 41476  007B92  5035               	movf	__root_is_available@first_byte,w,c
 41477  007B94  B4D8               	btfsc	status,2,c
 41478  007B96  D004               	goto	u8170
 41479  007B98  0EE5               	movlw	229
 41480  007B9A  1835               	xorwf	__root_is_available@first_byte,w,c
 41481  007B9C  A4D8               	btfss	status,2,c
 41482  007B9E  D002               	goto	l2017
 41483  007BA0                     u8170:
 41484                           
 41485                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 41486  007BA0  0E01               	movlw	1
 41487                           
 41488                           ;fat16.c: 434: }
 41489  007BA2  0012               	return	
 41490  007BA4                     l2017:
 41491                           
 41492                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 41493  007BA4  0E00               	movlw	0
 41494  007BA6  0012               	return	
 41495  007BA8                     __end_of__root_is_available:
 41496                           	opt stack 0
 41497                           tosu	equ	0xFFF
 41498                           tosh	equ	0xFFE
 41499                           tosl	equ	0xFFD
 41500                           pclath	equ	0xFFA
 41501                           tblptru	equ	0xFF8
 41502                           tblptrh	equ	0xFF7
 41503                           tblptrl	equ	0xFF6
 41504                           tablat	equ	0xFF5
 41505                           prodh	equ	0xFF4
 41506                           prodl	equ	0xFF3
 41507                           intcon	equ	0xFF2
 41508                           intcon2	equ	0xFF1
 41509                           intcon3	equ	0xFF0
 41510                           indf0	equ	0xFEF
 41511                           postinc0	equ	0xFEE
 41512                           fsr0h	equ	0xFEA
 41513                           fsr0l	equ	0xFE9
 41514                           wreg	equ	0xFE8
 41515                           indf1	equ	0xFE7
 41516                           postdec1	equ	0xFE5
 41517                           plusw1	equ	0xFE3
 41518                           fsr1h	equ	0xFE2
 41519                           fsr1l	equ	0xFE1
 41520                           indf2	equ	0xFDF
 41521                           postinc2	equ	0xFDE
 41522                           postdec2	equ	0xFDD
 41523                           plusw2	equ	0xFDB
 41524                           fsr2h	equ	0xFDA
 41525                           fsr2l	equ	0xFD9
 41526                           status	equ	0xFD8
 41527                           
 41528 ;; *************** function __get_first_cluster *****************
 41529 ;; Defined at:
 41530 ;;		line 501 in file "fat16.c"
 41531 ;; Parameters:    Size  Location     Type
 41532 ;;  file_number     1    wreg     unsigned char 
 41533 ;; Auto vars:     Size  Location     Type
 41534 ;;  file_number     1   55[COMRAM] unsigned char 
 41535 ;;  first_cluste    2   53[COMRAM] unsigned int 
 41536 ;;  offset          2   51[COMRAM] unsigned int 
 41537 ;;  sector          2   49[COMRAM] unsigned int 
 41538 ;; Return value:  Size  Location     Type
 41539 ;;                  2   47[COMRAM] unsigned int 
 41540 ;; Registers used:
 41541 ;;		wreg, status,2, status,0, cstack
 41542 ;; Tracked objects:
 41543 ;;		On entry : 0/0
 41544 ;;		On exit  : 0/0
 41545 ;;		Unchanged: 0/0
 41546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41548 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41550 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41551 ;;Total ram usage:        9 bytes
 41552 ;; Hardware stack levels used:    1
 41553 ;; Hardware stack levels required when called:    5
 41554 ;; This function calls:
 41555 ;;		__offset_from_file_number
 41556 ;;		__sector_from_file_number
 41557 ;;		_flash_partial_read
 41558 ;; This function is called by:
 41559 ;;		_fat_delete_file
 41560 ;;		_fat_copy_sector_to_buffer
 41561 ;;		_fat_write_sector_from_buffer
 41562 ;; This function uses a non-reentrant model
 41563 ;;
 41564                           
 41565                           	psect	text215
 41566  00812A                     __ptext215:
 41567                           	opt stack 0
 41568  00812A                     __get_first_cluster:
 41569                           	opt stack 21
 41570                           
 41571                           ;incstack = 0
 41572                           ;__get_first_cluster@file_number stored from wreg
 41573  00812A  6E38               	movwf	__get_first_cluster@file_number,c
 41574                           
 41575                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 41576  00812C  5038               	movf	__get_first_cluster@file_number,w,c
 41577  00812E  EC28  F045         	call	__sector_from_file_number
 41578  008132  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 41579  008136  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 41580                           
 41581                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 41582  00813A  5038               	movf	__get_first_cluster@file_number,w,c
 41583  00813C  ECB4  F045         	call	__offset_from_file_number
 41584  008140  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 41585  008144  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 41586                           
 41587                           ;fat16.c: 510: offset += 26;
 41588  008148  0E1A               	movlw	26
 41589  00814A  2634               	addwf	__get_first_cluster@offset,f,c
 41590  00814C  0E00               	movlw	0
 41591  00814E  2235               	addwfc	__get_first_cluster@offset+1,f,c
 41592                           
 41593                           ;fat16.c: 513: flash_partial_read(sector, offset, 2, &first_cluster);
 41594  008150  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 41595  008154  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 41596  008158  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 41597  00815C  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 41598  008160  0E00               	movlw	0
 41599  008162  6E2D               	movwf	flash_partial_read@length+1,c
 41600  008164  0E02               	movlw	2
 41601  008166  6E2C               	movwf	flash_partial_read@length,c
 41602  008168  0E36               	movlw	low __get_first_cluster@first_cluster
 41603  00816A  6E2E               	movwf	flash_partial_read@data,c
 41604  00816C  0E00               	movlw	high __get_first_cluster@first_cluster
 41605  00816E  6E2F               	movwf	flash_partial_read@data+1,c
 41606  008170  EC58  F044         	call	_flash_partial_read	;wreg free
 41607                           
 41608                           ;fat16.c: 514: return first_cluster;
 41609  008174  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 41610  008178  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 41611  00817C  0012               	return	
 41612  00817E                     __end_of__get_first_cluster:
 41613                           	opt stack 0
 41614                           tosu	equ	0xFFF
 41615                           tosh	equ	0xFFE
 41616                           tosl	equ	0xFFD
 41617                           pclath	equ	0xFFA
 41618                           tblptru	equ	0xFF8
 41619                           tblptrh	equ	0xFF7
 41620                           tblptrl	equ	0xFF6
 41621                           tablat	equ	0xFF5
 41622                           prodh	equ	0xFF4
 41623                           prodl	equ	0xFF3
 41624                           intcon	equ	0xFF2
 41625                           intcon2	equ	0xFF1
 41626                           intcon3	equ	0xFF0
 41627                           indf0	equ	0xFEF
 41628                           postinc0	equ	0xFEE
 41629                           fsr0h	equ	0xFEA
 41630                           fsr0l	equ	0xFE9
 41631                           wreg	equ	0xFE8
 41632                           indf1	equ	0xFE7
 41633                           postdec1	equ	0xFE5
 41634                           plusw1	equ	0xFE3
 41635                           fsr1h	equ	0xFE2
 41636                           fsr1l	equ	0xFE1
 41637                           indf2	equ	0xFDF
 41638                           postinc2	equ	0xFDE
 41639                           postdec2	equ	0xFDD
 41640                           plusw2	equ	0xFDB
 41641                           fsr2h	equ	0xFDA
 41642                           fsr2l	equ	0xFD9
 41643                           status	equ	0xFD8
 41644                           
 41645 ;; *************** function __sector_from_file_number *****************
 41646 ;; Defined at:
 41647 ;;		line 52 in file "fat16.c"
 41648 ;; Parameters:    Size  Location     Type
 41649 ;;  file_number     1    wreg     unsigned char 
 41650 ;; Auto vars:     Size  Location     Type
 41651 ;;  file_number     1    2[COMRAM] unsigned char 
 41652 ;;  sector          2    3[COMRAM] unsigned int 
 41653 ;; Return value:  Size  Location     Type
 41654 ;;                  2    0[COMRAM] unsigned int 
 41655 ;; Registers used:
 41656 ;;		wreg, status,2, status,0
 41657 ;; Tracked objects:
 41658 ;;		On entry : 0/0
 41659 ;;		On exit  : 0/0
 41660 ;;		Unchanged: 0/0
 41661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41663 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41666 ;;Total ram usage:        5 bytes
 41667 ;; Hardware stack levels used:    1
 41668 ;; This function calls:
 41669 ;;		Nothing
 41670 ;; This function is called by:
 41671 ;;		__root_is_available
 41672 ;;		__write_root
 41673 ;;		__delete_root
 41674 ;;		__get_first_cluster
 41675 ;;		_fat_get_file_size
 41676 ;;		_fat_get_file_information
 41677 ;; This function uses a non-reentrant model
 41678 ;;
 41679                           
 41680                           	psect	text216
 41681  008A50                     __ptext216:
 41682                           	opt stack 0
 41683  008A50                     __sector_from_file_number:
 41684                           	opt stack 27
 41685                           
 41686                           ;incstack = 0
 41687                           ;__sector_from_file_number@file_number stored from wreg
 41688  008A50  6E03               	movwf	__sector_from_file_number@file_number,c
 41689                           
 41690                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 41691  008A52  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 41692  008A56  6A05               	clrf	__sector_from_file_number@sector+1,c
 41693                           
 41694                           ;fat16.c: 56: sector >>= 4;
 41695  008A58  3A04               	swapf	__sector_from_file_number@sector,f,c
 41696  008A5A  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 41697  008A5C  0E0F               	movlw	15
 41698  008A5E  1604               	andwf	__sector_from_file_number@sector,f,c
 41699  008A60  5005               	movf	__sector_from_file_number@sector+1,w,c
 41700  008A62  0BF0               	andlw	240
 41701  008A64  1204               	iorwf	__sector_from_file_number@sector,f,c
 41702  008A66  0E0F               	movlw	15
 41703  008A68  1605               	andwf	__sector_from_file_number@sector+1,f,c
 41704                           
 41705                           ;fat16.c: 57: sector += 34;
 41706  008A6A  0E22               	movlw	34
 41707  008A6C  2604               	addwf	__sector_from_file_number@sector,f,c
 41708  008A6E  0E00               	movlw	0
 41709  008A70  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 41710                           
 41711                           ;fat16.c: 58: return sector;
 41712  008A72  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 41713  008A76  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 41714  008A7A  0012               	return	
 41715  008A7C                     __end_of__sector_from_file_number:
 41716                           	opt stack 0
 41717                           tosu	equ	0xFFF
 41718                           tosh	equ	0xFFE
 41719                           tosl	equ	0xFFD
 41720                           pclath	equ	0xFFA
 41721                           tblptru	equ	0xFF8
 41722                           tblptrh	equ	0xFF7
 41723                           tblptrl	equ	0xFF6
 41724                           tablat	equ	0xFF5
 41725                           prodh	equ	0xFF4
 41726                           prodl	equ	0xFF3
 41727                           intcon	equ	0xFF2
 41728                           intcon2	equ	0xFF1
 41729                           intcon3	equ	0xFF0
 41730                           indf0	equ	0xFEF
 41731                           postinc0	equ	0xFEE
 41732                           fsr0h	equ	0xFEA
 41733                           fsr0l	equ	0xFE9
 41734                           wreg	equ	0xFE8
 41735                           indf1	equ	0xFE7
 41736                           postdec1	equ	0xFE5
 41737                           plusw1	equ	0xFE3
 41738                           fsr1h	equ	0xFE2
 41739                           fsr1l	equ	0xFE1
 41740                           indf2	equ	0xFDF
 41741                           postinc2	equ	0xFDE
 41742                           postdec2	equ	0xFDD
 41743                           plusw2	equ	0xFDB
 41744                           fsr2h	equ	0xFDA
 41745                           fsr2l	equ	0xFD9
 41746                           status	equ	0xFD8
 41747                           
 41748 ;; *************** function __offset_from_file_number *****************
 41749 ;; Defined at:
 41750 ;;		line 61 in file "fat16.c"
 41751 ;; Parameters:    Size  Location     Type
 41752 ;;  file_number     1    wreg     unsigned char 
 41753 ;; Auto vars:     Size  Location     Type
 41754 ;;  file_number     1    2[COMRAM] unsigned char 
 41755 ;;  offset          2    3[COMRAM] unsigned int 
 41756 ;; Return value:  Size  Location     Type
 41757 ;;                  2    0[COMRAM] unsigned int 
 41758 ;; Registers used:
 41759 ;;		wreg, status,2, status,0
 41760 ;; Tracked objects:
 41761 ;;		On entry : 0/0
 41762 ;;		On exit  : 0/0
 41763 ;;		Unchanged: 0/0
 41764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41765 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41766 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41768 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41769 ;;Total ram usage:        5 bytes
 41770 ;; Hardware stack levels used:    1
 41771 ;; This function calls:
 41772 ;;		Nothing
 41773 ;; This function is called by:
 41774 ;;		__root_is_available
 41775 ;;		__write_root
 41776 ;;		__delete_root
 41777 ;;		__get_first_cluster
 41778 ;;		_fat_get_file_size
 41779 ;;		_fat_get_file_information
 41780 ;; This function uses a non-reentrant model
 41781 ;;
 41782                           
 41783                           	psect	text217
 41784  008B68                     __ptext217:
 41785                           	opt stack 0
 41786  008B68                     __offset_from_file_number:
 41787                           	opt stack 26
 41788                           
 41789                           ;incstack = 0
 41790                           ;__offset_from_file_number@file_number stored from wreg
 41791  008B68  6E03               	movwf	__offset_from_file_number@file_number,c
 41792                           
 41793                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 41794  008B6A  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 41795  008B6E  6A05               	clrf	__offset_from_file_number@offset+1,c
 41796                           
 41797                           ;fat16.c: 65: offset &= 0b1111;
 41798  008B70  0E0F               	movlw	15
 41799  008B72  1604               	andwf	__offset_from_file_number@offset,f,c
 41800  008B74  0E00               	movlw	0
 41801  008B76  1605               	andwf	__offset_from_file_number@offset+1,f,c
 41802                           
 41803                           ;fat16.c: 66: offset <<= 5;
 41804  008B78  0E05               	movlw	5
 41805  008B7A                     u7405:
 41806  008B7A  90D8               	bcf	status,0,c
 41807  008B7C  3604               	rlcf	__offset_from_file_number@offset,f,c
 41808  008B7E  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 41809  008B80  2EE8               	decfsz	wreg,f,c
 41810  008B82  D7FB               	goto	u7405
 41811                           
 41812                           ;fat16.c: 67: return offset;
 41813  008B84  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 41814  008B88  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 41815  008B8C  0012               	return	
 41816  008B8E                     __end_of__offset_from_file_number:
 41817                           	opt stack 0
 41818                           tosu	equ	0xFFF
 41819                           tosh	equ	0xFFE
 41820                           tosl	equ	0xFFD
 41821                           pclath	equ	0xFFA
 41822                           tblptru	equ	0xFF8
 41823                           tblptrh	equ	0xFF7
 41824                           tblptrl	equ	0xFF6
 41825                           tablat	equ	0xFF5
 41826                           prodh	equ	0xFF4
 41827                           prodl	equ	0xFF3
 41828                           intcon	equ	0xFF2
 41829                           intcon2	equ	0xFF1
 41830                           intcon3	equ	0xFF0
 41831                           indf0	equ	0xFEF
 41832                           postinc0	equ	0xFEE
 41833                           fsr0h	equ	0xFEA
 41834                           fsr0l	equ	0xFE9
 41835                           wreg	equ	0xFE8
 41836                           indf1	equ	0xFE7
 41837                           postdec1	equ	0xFE5
 41838                           plusw1	equ	0xFE3
 41839                           fsr1h	equ	0xFE2
 41840                           fsr1l	equ	0xFE1
 41841                           indf2	equ	0xFDF
 41842                           postinc2	equ	0xFDE
 41843                           postdec2	equ	0xFDD
 41844                           plusw2	equ	0xFDB
 41845                           fsr2h	equ	0xFDA
 41846                           fsr2l	equ	0xFD9
 41847                           status	equ	0xFD8
 41848                           
 41849 ;; *************** function __find_nth_cluster *****************
 41850 ;; Defined at:
 41851 ;;		line 182 in file "fat16.c"
 41852 ;; Parameters:    Size  Location     Type
 41853 ;;  cluster         2   55[COMRAM] unsigned int 
 41854 ;;  n               2   57[COMRAM] unsigned int 
 41855 ;; Auto vars:     Size  Location     Type
 41856 ;;  sector          2   63[COMRAM] unsigned int 
 41857 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 41858 ;;  offset          2   59[COMRAM] unsigned int 
 41859 ;; Return value:  Size  Location     Type
 41860 ;;                  2   55[COMRAM] unsigned int 
 41861 ;; Registers used:
 41862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41863 ;; Tracked objects:
 41864 ;;		On entry : 0/0
 41865 ;;		On exit  : 0/0
 41866 ;;		Unchanged: 0/0
 41867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41869 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41871 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41872 ;;Total ram usage:       10 bytes
 41873 ;; Hardware stack levels used:    1
 41874 ;; Hardware stack levels required when called:    6
 41875 ;; This function calls:
 41876 ;;		__data_sector_from_cluster
 41877 ;;		__fat_offset_from_cluster
 41878 ;;		__read_fat
 41879 ;;		__read_value_from_offset
 41880 ;;		_flash_sector_read
 41881 ;; This function is called by:
 41882 ;;		_fat_read_from_file_fast
 41883 ;;		_fat_modify_file
 41884 ;;		_fat_copy_sector_to_buffer
 41885 ;;		_fat_write_sector_from_buffer
 41886 ;; This function uses a non-reentrant model
 41887 ;;
 41888                           
 41889                           	psect	text218
 41890  006B96                     __ptext218:
 41891                           	opt stack 0
 41892  006B96                     __find_nth_cluster:
 41893                           	opt stack 21
 41894                           
 41895                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 41896                           
 41897                           ;incstack = 0
 41898  006B96  0E00               	movlw	0
 41899  006B98  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 41900  006B9A  0E00               	movlw	0
 41901  006B9C  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 41902                           
 41903                           ;fat16.c: 189: if(n==1)
 41904  006B9E  043A               	decf	__find_nth_cluster@n,w,c
 41905  006BA0  103B               	iorwf	__find_nth_cluster@n+1,w,c
 41906  006BA2  A4D8               	btfss	status,2,c
 41907  006BA4  D03E               	goto	l1976
 41908                           
 41909                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 41910  006BA6  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 41911  006BAA  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 41912  006BAE  EC15  F040         	call	__read_fat	;wreg free
 41913  006BB2  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 41914  006BB6  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 41915  006BBA  0012               	return	
 41916  006BBC                     
 41917                           ;fat16.c: 195: {;fat16.c: 197: sector = _data_sector_from_cluster(cluster);
 41918  006BBC  C038  F001         	movff	__find_nth_cluster@cluster,__data_sector_from_cluster@fat_cluster
 41919  006BC0  C039  F002         	movff	__find_nth_cluster@cluster+1,__data_sector_from_cluster@fat_cluster+1
 41920  006BC4  EC74  F047         	call	__data_sector_from_cluster	;wreg free
 41921  006BC8  C001  F040         	movff	?__data_sector_from_cluster,__find_nth_cluster@sector
 41922  006BCC  C002  F041         	movff	?__data_sector_from_cluster+1,__find_nth_cluster@sector+1
 41923                           
 41924                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 41925  006BD0  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 41926  006BD4  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 41927  006BD8  ECFA  F046         	call	__fat_offset_from_cluster	;wreg free
 41928  006BDC  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 41929  006BE0  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 41930                           
 41931                           ;fat16.c: 201: if(sector != sector_in_buffer)
 41932  006BE4  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 41933  006BE6  1840               	xorwf	__find_nth_cluster@sector,w,c
 41934  006BE8  E104               	bnz	u7960
 41935  006BEA  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 41936  006BEC  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 41937  006BEE  B4D8               	btfsc	status,2,c
 41938  006BF0  D00A               	goto	l1978
 41939  006BF2                     u7960:
 41940                           
 41941                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 41942  006BF2  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 41943  006BF6  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 41944  006BFA  0EC0               	movlw	low _buffer
 41945  006BFC  6E2A               	movwf	flash_sector_read@data,c
 41946  006BFE  0E03               	movlw	high _buffer
 41947  006C00  6E2B               	movwf	flash_sector_read@data+1,c
 41948  006C02  EC3F  F044         	call	_flash_sector_read	;wreg free
 41949  006C06                     l1978:
 41950                           
 41951                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 41952  006C06  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 41953  006C0A  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 41954  006C0E  0EC0               	movlw	low _buffer
 41955  006C10  6E03               	movwf	__read_value_from_offset@buffer,c
 41956  006C12  0E03               	movlw	high _buffer
 41957  006C14  6E04               	movwf	__read_value_from_offset@buffer+1,c
 41958  006C16  ECCD  F041         	call	__read_value_from_offset	;wreg free
 41959  006C1A  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 41960  006C1E  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 41961  006C22                     l1976:
 41962  006C22  503A               	movf	__find_nth_cluster@n,w,c
 41963  006C24  103B               	iorwf	__find_nth_cluster@n+1,w,c
 41964  006C26  A4D8               	btfss	status,2,c
 41965  006C28  D7C9               	goto	l1977
 41966                           
 41967                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 41968  006C2A  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 41969  006C2E  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 41970  006C32  0012               	return		;funcret
 41971  006C34                     __end_of__find_nth_cluster:
 41972                           	opt stack 0
 41973                           tosu	equ	0xFFF
 41974                           tosh	equ	0xFFE
 41975                           tosl	equ	0xFFD
 41976                           pclath	equ	0xFFA
 41977                           tblptru	equ	0xFF8
 41978                           tblptrh	equ	0xFF7
 41979                           tblptrl	equ	0xFF6
 41980                           tablat	equ	0xFF5
 41981                           prodh	equ	0xFF4
 41982                           prodl	equ	0xFF3
 41983                           intcon	equ	0xFF2
 41984                           intcon2	equ	0xFF1
 41985                           intcon3	equ	0xFF0
 41986                           indf0	equ	0xFEF
 41987                           postinc0	equ	0xFEE
 41988                           fsr0h	equ	0xFEA
 41989                           fsr0l	equ	0xFE9
 41990                           wreg	equ	0xFE8
 41991                           indf1	equ	0xFE7
 41992                           postdec1	equ	0xFE5
 41993                           plusw1	equ	0xFE3
 41994                           fsr1h	equ	0xFE2
 41995                           fsr1l	equ	0xFE1
 41996                           indf2	equ	0xFDF
 41997                           postinc2	equ	0xFDE
 41998                           postdec2	equ	0xFDD
 41999                           plusw2	equ	0xFDB
 42000                           fsr2h	equ	0xFDA
 42001                           fsr2l	equ	0xFD9
 42002                           status	equ	0xFD8
 42003                           
 42004 ;; *************** function _flash_sector_read *****************
 42005 ;; Defined at:
 42006 ;;		line 419 in file "flash.c"
 42007 ;; Parameters:    Size  Location     Type
 42008 ;;  page            2   39[COMRAM] unsigned int 
 42009 ;;  data            2   41[COMRAM] PTR unsigned char 
 42010 ;;		 -> buffer(512), msd_buffer(512), 
 42011 ;; Auto vars:     Size  Location     Type
 42012 ;;		None
 42013 ;; Return value:  Size  Location     Type
 42014 ;;                  1    wreg      void 
 42015 ;; Registers used:
 42016 ;;		wreg, status,2, status,0, cstack
 42017 ;; Tracked objects:
 42018 ;;		On entry : 0/0
 42019 ;;		On exit  : 0/0
 42020 ;;		Unchanged: 0/0
 42021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42026 ;;Total ram usage:        4 bytes
 42027 ;; Hardware stack levels used:    1
 42028 ;; Hardware stack levels required when called:    4
 42029 ;; This function calls:
 42030 ;;		__flash_partial_read
 42031 ;;		_spi_set_configuration
 42032 ;; This function is called by:
 42033 ;;		_ExternalFlash_SectorRead
 42034 ;;		__get_available_cluster
 42035 ;;		__find_nth_cluster
 42036 ;;		__make_cluster_chain
 42037 ;;		_fat_find_file
 42038 ;;		_fat_get_format_status
 42039 ;; This function uses a non-reentrant model
 42040 ;;
 42041                           
 42042                           	psect	text219
 42043  00887E                     __ptext219:
 42044                           	opt stack 0
 42045  00887E                     _flash_sector_read:
 42046                           	opt stack 23
 42047                           
 42048                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 42049                           
 42050                           ;incstack = 0
 42051  00887E  0E00               	movlw	0
 42052  008880  EC62  F023         	call	_spi_set_configuration
 42053                           
 42054                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 42055  008884  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 42056  008888  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 42057  00888C  0E00               	movlw	0
 42058  00888E  6E17               	movwf	__flash_partial_read@start+1,c
 42059  008890  0E00               	movlw	0
 42060  008892  6E16               	movwf	__flash_partial_read@start,c
 42061  008894  0E02               	movlw	2
 42062  008896  6E19               	movwf	__flash_partial_read@length+1,c
 42063  008898  0E00               	movlw	0
 42064  00889A  6E18               	movwf	__flash_partial_read@length,c
 42065  00889C  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 42066  0088A0  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 42067  0088A4  ECB6  F03A         	call	__flash_partial_read	;wreg free
 42068                           
 42069                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42070  0088A8  0E01               	movlw	1
 42071  0088AA  EC62  F023         	call	_spi_set_configuration
 42072  0088AE  0012               	return		;funcret
 42073  0088B0                     __end_of_flash_sector_read:
 42074                           	opt stack 0
 42075                           tosu	equ	0xFFF
 42076                           tosh	equ	0xFFE
 42077                           tosl	equ	0xFFD
 42078                           pclath	equ	0xFFA
 42079                           tblptru	equ	0xFF8
 42080                           tblptrh	equ	0xFF7
 42081                           tblptrl	equ	0xFF6
 42082                           tablat	equ	0xFF5
 42083                           prodh	equ	0xFF4
 42084                           prodl	equ	0xFF3
 42085                           intcon	equ	0xFF2
 42086                           intcon2	equ	0xFF1
 42087                           intcon3	equ	0xFF0
 42088                           indf0	equ	0xFEF
 42089                           postinc0	equ	0xFEE
 42090                           fsr0h	equ	0xFEA
 42091                           fsr0l	equ	0xFE9
 42092                           wreg	equ	0xFE8
 42093                           indf1	equ	0xFE7
 42094                           postdec1	equ	0xFE5
 42095                           plusw1	equ	0xFE3
 42096                           fsr1h	equ	0xFE2
 42097                           fsr1l	equ	0xFE1
 42098                           indf2	equ	0xFDF
 42099                           postinc2	equ	0xFDE
 42100                           postdec2	equ	0xFDD
 42101                           plusw2	equ	0xFDB
 42102                           fsr2h	equ	0xFDA
 42103                           fsr2l	equ	0xFD9
 42104                           status	equ	0xFD8
 42105                           
 42106 ;; *************** function __read_value_from_offset *****************
 42107 ;; Defined at:
 42108 ;;		line 114 in file "fat16.c"
 42109 ;; Parameters:    Size  Location     Type
 42110 ;;  offset          2    0[COMRAM] unsigned int 
 42111 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42112 ;;		 -> buffer(512), 
 42113 ;; Auto vars:     Size  Location     Type
 42114 ;;  value           2    7[COMRAM] unsigned int 
 42115 ;; Return value:  Size  Location     Type
 42116 ;;                  2    0[COMRAM] unsigned int 
 42117 ;; Registers used:
 42118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42119 ;; Tracked objects:
 42120 ;;		On entry : 0/0
 42121 ;;		On exit  : 0/0
 42122 ;;		Unchanged: 0/0
 42123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42126 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42127 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42128 ;;Total ram usage:        9 bytes
 42129 ;; Hardware stack levels used:    1
 42130 ;; This function calls:
 42131 ;;		Nothing
 42132 ;; This function is called by:
 42133 ;;		__find_nth_cluster
 42134 ;;		__make_cluster_chain
 42135 ;; This function uses a non-reentrant model
 42136 ;;
 42137                           
 42138                           	psect	text220
 42139  00839A                     __ptext220:
 42140                           	opt stack 0
 42141  00839A                     __read_value_from_offset:
 42142                           	opt stack 26
 42143                           
 42144                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 42145                           
 42146                           ;incstack = 0
 42147  00839A  0E01               	movlw	1
 42148  00839C  2401               	addwf	__read_value_from_offset@offset,w,c
 42149  00839E  6E05               	movwf	??__read_value_from_offset& (0+255),c
 42150  0083A0  0E00               	movlw	0
 42151  0083A2  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 42152  0083A4  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 42153  0083A6  5005               	movf	??__read_value_from_offset,w,c
 42154  0083A8  2403               	addwf	__read_value_from_offset@buffer,w,c
 42155  0083AA  6ED9               	movwf	fsr2l,c
 42156  0083AC  5006               	movf	??__read_value_from_offset+1,w,c
 42157  0083AE  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 42158  0083B0  6EDA               	movwf	fsr2h,c
 42159  0083B2  50DF               	movf	indf2,w,c
 42160  0083B4  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 42161  0083B6  5007               	movf	??__read_value_from_offset+2,w,c
 42162  0083B8  6E08               	movwf	__read_value_from_offset@value,c
 42163  0083BA  6A09               	clrf	__read_value_from_offset@value+1,c
 42164                           
 42165                           ;fat16.c: 118: value <<= 8;
 42166  0083BC  5008               	movf	__read_value_from_offset@value,w,c
 42167  0083BE  6E09               	movwf	__read_value_from_offset@value+1,c
 42168  0083C0  6A08               	clrf	__read_value_from_offset@value,c
 42169                           
 42170                           ;fat16.c: 119: value |= buffer[offset];
 42171  0083C2  5001               	movf	__read_value_from_offset@offset,w,c
 42172  0083C4  2403               	addwf	__read_value_from_offset@buffer,w,c
 42173  0083C6  6ED9               	movwf	fsr2l,c
 42174  0083C8  5002               	movf	__read_value_from_offset@offset+1,w,c
 42175  0083CA  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 42176  0083CC  6EDA               	movwf	fsr2h,c
 42177  0083CE  50DF               	movf	indf2,w,c
 42178  0083D0  6E05               	movwf	??__read_value_from_offset& (0+255),c
 42179  0083D2  5005               	movf	??__read_value_from_offset,w,c
 42180  0083D4  1208               	iorwf	__read_value_from_offset@value,f,c
 42181                           
 42182                           ;fat16.c: 120: return value;
 42183  0083D6  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 42184  0083DA  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 42185  0083DE  0012               	return	
 42186  0083E0                     __end_of__read_value_from_offset:
 42187                           	opt stack 0
 42188                           tosu	equ	0xFFF
 42189                           tosh	equ	0xFFE
 42190                           tosl	equ	0xFFD
 42191                           pclath	equ	0xFFA
 42192                           tblptru	equ	0xFF8
 42193                           tblptrh	equ	0xFF7
 42194                           tblptrl	equ	0xFF6
 42195                           tablat	equ	0xFF5
 42196                           prodh	equ	0xFF4
 42197                           prodl	equ	0xFF3
 42198                           intcon	equ	0xFF2
 42199                           intcon2	equ	0xFF1
 42200                           intcon3	equ	0xFF0
 42201                           indf0	equ	0xFEF
 42202                           postinc0	equ	0xFEE
 42203                           fsr0h	equ	0xFEA
 42204                           fsr0l	equ	0xFE9
 42205                           wreg	equ	0xFE8
 42206                           indf1	equ	0xFE7
 42207                           postdec1	equ	0xFE5
 42208                           plusw1	equ	0xFE3
 42209                           fsr1h	equ	0xFE2
 42210                           fsr1l	equ	0xFE1
 42211                           indf2	equ	0xFDF
 42212                           postinc2	equ	0xFDE
 42213                           postdec2	equ	0xFDD
 42214                           plusw2	equ	0xFDB
 42215                           fsr2h	equ	0xFDA
 42216                           fsr2l	equ	0xFD9
 42217                           status	equ	0xFD8
 42218                           
 42219 ;; *************** function __read_fat *****************
 42220 ;; Defined at:
 42221 ;;		line 456 in file "fat16.c"
 42222 ;; Parameters:    Size  Location     Type
 42223 ;;  cluster         2   47[COMRAM] unsigned int 
 42224 ;; Auto vars:     Size  Location     Type
 42225 ;;  value           2   53[COMRAM] unsigned int 
 42226 ;;  offset          2   51[COMRAM] unsigned int 
 42227 ;;  sector          2   49[COMRAM] unsigned int 
 42228 ;; Return value:  Size  Location     Type
 42229 ;;                  2   47[COMRAM] unsigned int 
 42230 ;; Registers used:
 42231 ;;		wreg, status,2, status,0, cstack
 42232 ;; Tracked objects:
 42233 ;;		On entry : 0/0
 42234 ;;		On exit  : 0/0
 42235 ;;		Unchanged: 0/0
 42236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42238 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42240 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42241 ;;Total ram usage:        8 bytes
 42242 ;; Hardware stack levels used:    1
 42243 ;; Hardware stack levels required when called:    5
 42244 ;; This function calls:
 42245 ;;		__fat_offset_from_cluster
 42246 ;;		__fat_sector_from_cluster
 42247 ;;		_flash_partial_read
 42248 ;; This function is called by:
 42249 ;;		__find_nth_cluster
 42250 ;;		_fat_read_from_file_fast
 42251 ;;		_fat_modify_file
 42252 ;; This function uses a non-reentrant model
 42253 ;;
 42254                           
 42255                           	psect	text221
 42256  00802A                     __ptext221:
 42257                           	opt stack 0
 42258  00802A                     __read_fat:
 42259                           	opt stack 22
 42260                           
 42261                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 42262                           
 42263                           ;incstack = 0
 42264  00802A  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 42265  00802E  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 42266  008032  ECEE  F046         	call	__fat_sector_from_cluster	;wreg free
 42267  008036  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 42268  00803A  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 42269                           
 42270                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 42271  00803E  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 42272  008042  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 42273  008046  ECFA  F046         	call	__fat_offset_from_cluster	;wreg free
 42274  00804A  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 42275  00804E  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 42276                           
 42277                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 42278  008052  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 42279  008056  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 42280  00805A  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 42281  00805E  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 42282  008062  0E00               	movlw	0
 42283  008064  6E2D               	movwf	flash_partial_read@length+1,c
 42284  008066  0E02               	movlw	2
 42285  008068  6E2C               	movwf	flash_partial_read@length,c
 42286  00806A  0E36               	movlw	low __read_fat@value
 42287  00806C  6E2E               	movwf	flash_partial_read@data,c
 42288  00806E  0E00               	movlw	high __read_fat@value
 42289  008070  6E2F               	movwf	flash_partial_read@data+1,c
 42290  008072  EC58  F044         	call	_flash_partial_read	;wreg free
 42291                           
 42292                           ;fat16.c: 470: return value;
 42293  008076  C036  F030         	movff	__read_fat@value,?__read_fat
 42294  00807A  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 42295  00807E  0012               	return	
 42296  008080                     __end_of__read_fat:
 42297                           	opt stack 0
 42298                           tosu	equ	0xFFF
 42299                           tosh	equ	0xFFE
 42300                           tosl	equ	0xFFD
 42301                           pclath	equ	0xFFA
 42302                           tblptru	equ	0xFF8
 42303                           tblptrh	equ	0xFF7
 42304                           tblptrl	equ	0xFF6
 42305                           tablat	equ	0xFF5
 42306                           prodh	equ	0xFF4
 42307                           prodl	equ	0xFF3
 42308                           intcon	equ	0xFF2
 42309                           intcon2	equ	0xFF1
 42310                           intcon3	equ	0xFF0
 42311                           indf0	equ	0xFEF
 42312                           postinc0	equ	0xFEE
 42313                           fsr0h	equ	0xFEA
 42314                           fsr0l	equ	0xFE9
 42315                           wreg	equ	0xFE8
 42316                           indf1	equ	0xFE7
 42317                           postdec1	equ	0xFE5
 42318                           plusw1	equ	0xFE3
 42319                           fsr1h	equ	0xFE2
 42320                           fsr1l	equ	0xFE1
 42321                           indf2	equ	0xFDF
 42322                           postinc2	equ	0xFDE
 42323                           postdec2	equ	0xFDD
 42324                           plusw2	equ	0xFDB
 42325                           fsr2h	equ	0xFDA
 42326                           fsr2l	equ	0xFD9
 42327                           status	equ	0xFD8
 42328                           
 42329 ;; *************** function _flash_partial_read *****************
 42330 ;; Defined at:
 42331 ;;		line 457 in file "flash.c"
 42332 ;; Parameters:    Size  Location     Type
 42333 ;;  page            2   39[COMRAM] unsigned int 
 42334 ;;  start           2   41[COMRAM] unsigned int 
 42335 ;;  length          2   43[COMRAM] unsigned int 
 42336 ;;  data            2   45[COMRAM] PTR unsigned char 
 42337 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 42338 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 42339 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 42340 ;;		 -> RAM(3759), 
 42341 ;; Auto vars:     Size  Location     Type
 42342 ;;		None
 42343 ;; Return value:  Size  Location     Type
 42344 ;;                  1    wreg      void 
 42345 ;; Registers used:
 42346 ;;		wreg, status,2, status,0, cstack
 42347 ;; Tracked objects:
 42348 ;;		On entry : 0/0
 42349 ;;		On exit  : 0/0
 42350 ;;		Unchanged: 0/0
 42351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42352 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42355 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42356 ;;Total ram usage:        8 bytes
 42357 ;; Hardware stack levels used:    1
 42358 ;; Hardware stack levels required when called:    4
 42359 ;; This function calls:
 42360 ;;		__flash_partial_read
 42361 ;;		_spi_set_configuration
 42362 ;; This function is called by:
 42363 ;;		__root_is_available
 42364 ;;		__read_fat
 42365 ;;		__get_first_cluster
 42366 ;;		_fat_get_file_size
 42367 ;;		_fat_read_from_file_fast
 42368 ;;		_fat_get_file_information
 42369 ;; This function uses a non-reentrant model
 42370 ;;
 42371                           
 42372                           	psect	text222
 42373  0088B0                     __ptext222:
 42374                           	opt stack 0
 42375  0088B0                     _flash_partial_read:
 42376                           	opt stack 23
 42377                           
 42378                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 42379                           
 42380                           ;incstack = 0
 42381  0088B0  0E00               	movlw	0
 42382  0088B2  EC62  F023         	call	_spi_set_configuration
 42383                           
 42384                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 42385  0088B6  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 42386  0088BA  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 42387  0088BE  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 42388  0088C2  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 42389  0088C6  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 42390  0088CA  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 42391  0088CE  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 42392  0088D2  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 42393  0088D6  ECB6  F03A         	call	__flash_partial_read	;wreg free
 42394                           
 42395                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42396  0088DA  0E01               	movlw	1
 42397  0088DC  EC62  F023         	call	_spi_set_configuration
 42398  0088E0  0012               	return		;funcret
 42399  0088E2                     __end_of_flash_partial_read:
 42400                           	opt stack 0
 42401                           tosu	equ	0xFFF
 42402                           tosh	equ	0xFFE
 42403                           tosl	equ	0xFFD
 42404                           pclath	equ	0xFFA
 42405                           tblptru	equ	0xFF8
 42406                           tblptrh	equ	0xFF7
 42407                           tblptrl	equ	0xFF6
 42408                           tablat	equ	0xFF5
 42409                           prodh	equ	0xFF4
 42410                           prodl	equ	0xFF3
 42411                           intcon	equ	0xFF2
 42412                           intcon2	equ	0xFF1
 42413                           intcon3	equ	0xFF0
 42414                           indf0	equ	0xFEF
 42415                           postinc0	equ	0xFEE
 42416                           fsr0h	equ	0xFEA
 42417                           fsr0l	equ	0xFE9
 42418                           wreg	equ	0xFE8
 42419                           indf1	equ	0xFE7
 42420                           postdec1	equ	0xFE5
 42421                           plusw1	equ	0xFE3
 42422                           fsr1h	equ	0xFE2
 42423                           fsr1l	equ	0xFE1
 42424                           indf2	equ	0xFDF
 42425                           postinc2	equ	0xFDE
 42426                           postdec2	equ	0xFDD
 42427                           plusw2	equ	0xFDB
 42428                           fsr2h	equ	0xFDA
 42429                           fsr2l	equ	0xFD9
 42430                           status	equ	0xFD8
 42431                           
 42432 ;; *************** function _spi_set_configuration *****************
 42433 ;; Defined at:
 42434 ;;		line 139 in file "spi.c"
 42435 ;; Parameters:    Size  Location     Type
 42436 ;;  configuratio    1    wreg     enum E6749
 42437 ;; Auto vars:     Size  Location     Type
 42438 ;;  configuratio    1    0[COMRAM] enum E6749
 42439 ;;  cntr            1    0        unsigned char 
 42440 ;; Return value:  Size  Location     Type
 42441 ;;                  1    wreg      void 
 42442 ;; Registers used:
 42443 ;;		wreg, status,2, status,0
 42444 ;; Tracked objects:
 42445 ;;		On entry : 0/0
 42446 ;;		On exit  : 0/0
 42447 ;;		Unchanged: 0/0
 42448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42453 ;;Total ram usage:        1 bytes
 42454 ;; Hardware stack levels used:    1
 42455 ;; This function calls:
 42456 ;;		Nothing
 42457 ;; This function is called by:
 42458 ;;		_flash_init
 42459 ;;		_flash_is_busy
 42460 ;;		_flash_sector_read
 42461 ;;		_flash_sector_write
 42462 ;;		_flash_partial_read
 42463 ;;		_flash_partial_write
 42464 ;;		_flash_copy_page_to_buffer
 42465 ;;		_flash_write_page_from_buffer
 42466 ;;		_flash_write_to_buffer
 42467 ;;		_flash_set_power_state
 42468 ;; This function uses a non-reentrant model
 42469 ;;
 42470                           
 42471                           	psect	text223
 42472  0046C4                     __ptext223:
 42473                           	opt stack 0
 42474  0046C4                     _spi_set_configuration:
 42475                           	opt stack 28
 42476                           
 42477                           ;incstack = 0
 42478                           ;spi_set_configuration@configuration stored from wreg
 42479  0046C4  6E01               	movwf	spi_set_configuration@configuration,c
 42480                           
 42481                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 42482  0046C6  D07B               	goto	l2974
 42483  0046C8                     l2975:
 42484                           
 42485                           ;spi.c: 152: LATDbits.LD2 = 1;
 42486  0046C8  848C               	bsf	3980,2,c	;volatile
 42487                           
 42488                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 42489  0046CA  9495               	bcf	3989,2,c	;volatile
 42490                           
 42491                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 42492  0046CC  8495               	bsf	3989,2,c	;volatile
 42493  0046CE  A483               	btfss	3971,2,c	;volatile
 42494  0046D0  D7FE               	goto	l2977
 42495                           
 42496                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 42497  0046D2  9088               	bcf	3976,0,c	;volatile
 42498                           
 42499                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 42500  0046D4  9A72               	bcf	3954,5,c	;volatile
 42501                           
 42502                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 42503  0046D6  8C95               	bsf	3989,6,c	;volatile
 42504                           
 42505                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 42506  0046D8  9895               	bcf	3989,4,c	;volatile
 42507                           
 42508                           ;spi.c: 165: LATDbits.LD4 = 0;
 42509  0046DA  988C               	bcf	3980,4,c	;volatile
 42510                           
 42511                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 42512  0046DC  9A95               	bcf	3989,5,c	;volatile
 42513                           
 42514                           ;spi.c: 167: LATDbits.LD5 = 0;
 42515  0046DE  9A8C               	bcf	3980,5,c	;volatile
 42516                           
 42517                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 42518  0046E0  9E95               	bcf	3989,7,c	;volatile
 42519                           
 42520                           ;spi.c: 169: LATDbits.LD7 = 1;
 42521  0046E2  8E8C               	bsf	3980,7,c	;volatile
 42522                           
 42523                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42524  0046E4  0E55               	movlw	85
 42525  0046E6  6EA7               	movwf	4007,c	;volsfr
 42526  0046E8  0EAA               	movlw	170
 42527  0046EA  6EA7               	movwf	4007,c	;volsfr
 42528  0046EC  010E               	movlb	14	; () banked
 42529  0046EE  91BF               	bcf	191,0,b	;volatile
 42530                           
 42531                           ;spi.c: 174: RPOR23 = 0b00000;
 42532  0046F0  0E00               	movlw	0
 42533  0046F2  6FD7               	movwf	215,b	;volatile
 42534                           
 42535                           ;spi.c: 175: RPINR21 = 0b11111;
 42536  0046F4  0E1F               	movlw	31
 42537  0046F6  6FFC               	movwf	252,b	;volatile
 42538                           
 42539                           ;spi.c: 176: RPINR23 = 0b11111;
 42540  0046F8  0E1F               	movlw	31
 42541  0046FA  6FFE               	movwf	254,b	;volatile
 42542                           
 42543                           ;spi.c: 178: RPINR21 = 23;
 42544  0046FC  0E17               	movlw	23
 42545  0046FE  6FFC               	movwf	252,b	;volatile
 42546                           
 42547                           ;spi.c: 179: RPOR21 = 10;
 42548  004700  0E0A               	movlw	10
 42549  004702  6FD5               	movwf	213,b	;volatile
 42550                           
 42551                           ;spi.c: 181: RPOR22 = 11;
 42552  004704  0E0B               	movlw	11
 42553  004706  6FD6               	movwf	214,b	;volatile
 42554                           
 42555                           ;spi.c: 182: RPINR22 = 22;
 42556  004708  0E16               	movlw	22
 42557  00470A  6FFD               	movwf	253,b	;volatile
 42558                           
 42559                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42560  00470C  0E55               	movlw	85
 42561  00470E  6EA7               	movwf	4007,c	;volsfr
 42562  004710  0EAA               	movlw	170
 42563  004712  6EA7               	movwf	4007,c	;volsfr
 42564                           
 42565                           ; BSR set to: 14
 42566  004714  81BF               	bsf	191,0,b	;volatile
 42567                           
 42568                           ; BSR set to: 14
 42569                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 42570  004716  8E73               	bsf	3955,7,c	;volatile
 42571                           
 42572                           ; BSR set to: 14
 42573                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 42574  004718  8C73               	bsf	3955,6,c	;volatile
 42575                           
 42576                           ; BSR set to: 14
 42577                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 42578  00471A  9E72               	bcf	3954,7,c	;volatile
 42579                           
 42580                           ; BSR set to: 14
 42581                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 42582  00471C  9C72               	bcf	3954,6,c	;volatile
 42583                           
 42584                           ; BSR set to: 14
 42585                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 42586  00471E  9872               	bcf	3954,4,c	;volatile
 42587                           
 42588                           ; BSR set to: 14
 42589                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 42590  004720  9072               	bcf	3954,0,c	;volatile
 42591  004722  9272               	bcf	3954,1,c	;volatile
 42592  004724  9472               	bcf	3954,2,c	;volatile
 42593  004726  9672               	bcf	3954,3,c	;volatile
 42594                           
 42595                           ; BSR set to: 14
 42596                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 42597  004728  8A72               	bsf	3954,5,c	;volatile
 42598                           
 42599                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 42600  00472A  0E00               	movlw	0
 42601  00472C  0101               	movlb	1	; () banked
 42602  00472E  6F8A               	movwf	_active_configuration& (0+255),b
 42603                           
 42604                           ;spi.c: 196: break;
 42605  004730  0012               	return	
 42606  004732                     l2980:
 42607                           
 42608                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 42609  004732  9088               	bcf	3976,0,c	;volatile
 42610                           
 42611                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 42612  004734  9A72               	bcf	3954,5,c	;volatile
 42613                           
 42614                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 42615  004736  010F               	movlb	15	; () banked
 42616  004738  9340               	bcf	64,1,b	;volatile
 42617                           
 42618                           ; BSR set to: 15
 42619                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42620  00473A  0E55               	movlw	85
 42621  00473C  6EA7               	movwf	4007,c	;volsfr
 42622  00473E  0EAA               	movlw	170
 42623  004740  6EA7               	movwf	4007,c	;volsfr
 42624                           
 42625                           ; BSR set to: 15
 42626  004742  010E               	movlb	14	; () banked
 42627  004744  91BF               	bcf	191,0,b	;volatile
 42628                           
 42629                           ;spi.c: 208: RPOR23 = 10;
 42630  004746  0E0A               	movlw	10
 42631  004748  6FD7               	movwf	215,b	;volatile
 42632                           
 42633                           ;spi.c: 209: RPINR21 = 21;
 42634  00474A  0E15               	movlw	21
 42635  00474C  6FFC               	movwf	252,b	;volatile
 42636                           
 42637                           ;spi.c: 210: RPINR22 = 22;
 42638  00474E  0E16               	movlw	22
 42639  004750  6FFD               	movwf	253,b	;volatile
 42640                           
 42641                           ;spi.c: 211: RPINR23 = 19;
 42642  004752  0E13               	movlw	19
 42643  004754  6FFE               	movwf	254,b	;volatile
 42644                           
 42645                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42646  004756  0E55               	movlw	85
 42647  004758  6EA7               	movwf	4007,c	;volsfr
 42648  00475A  0EAA               	movlw	170
 42649  00475C  6EA7               	movwf	4007,c	;volsfr
 42650                           
 42651                           ; BSR set to: 14
 42652  00475E  81BF               	bsf	191,0,b	;volatile
 42653                           
 42654                           ; BSR set to: 14
 42655                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 42656  004760  9A72               	bcf	3954,5,c	;volatile
 42657                           
 42658                           ; BSR set to: 14
 42659                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 42660  004762  8A95               	bsf	3989,5,c	;volatile
 42661                           
 42662                           ; BSR set to: 14
 42663                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 42664  004764  8895               	bsf	3989,4,c	;volatile
 42665                           
 42666                           ; BSR set to: 14
 42667                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 42668  004766  9C95               	bcf	3989,6,c	;volatile
 42669                           
 42670                           ; BSR set to: 14
 42671                           ;spi.c: 227: LATDbits.LD6 = 1;
 42672  004768  8C8C               	bsf	3980,6,c	;volatile
 42673                           
 42674                           ; BSR set to: 14
 42675                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 42676  00476A  8495               	bsf	3989,2,c	;volatile
 42677                           
 42678                           ; BSR set to: 14
 42679                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 42680  00476C  9E73               	bcf	3955,7,c	;volatile
 42681                           
 42682                           ; BSR set to: 14
 42683                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 42684  00476E  8C73               	bsf	3955,6,c	;volatile
 42685                           
 42686                           ; BSR set to: 14
 42687                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 42688  004770  9E72               	bcf	3954,7,c	;volatile
 42689                           
 42690                           ; BSR set to: 14
 42691                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 42692  004772  9C72               	bcf	3954,6,c	;volatile
 42693                           
 42694                           ; BSR set to: 14
 42695                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 42696  004774  9872               	bcf	3954,4,c	;volatile
 42697                           
 42698                           ; BSR set to: 14
 42699                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 42700  004776  5072               	movf	3954,w,c	;volatile
 42701  004778  0BF0               	andlw	-16
 42702  00477A  0904               	iorlw	4
 42703  00477C  6E72               	movwf	3954,c	;volatile
 42704                           
 42705                           ; BSR set to: 14
 42706                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 42707  00477E  9EA4               	bcf	4004,7,c	;volatile
 42708                           
 42709                           ; BSR set to: 14
 42710                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 42711  004780  8A72               	bsf	3954,5,c	;volatile
 42712                           
 42713                           ; BSR set to: 14
 42714                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 42715  004782  8A88               	bsf	3976,5,c	;volatile
 42716                           
 42717                           ; BSR set to: 14
 42718                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 42719  004784  8888               	bsf	3976,4,c	;volatile
 42720                           
 42721                           ; BSR set to: 14
 42722                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 42723  004786  8688               	bsf	3976,3,c	;volatile
 42724                           
 42725                           ; BSR set to: 14
 42726                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 42727  004788  9488               	bcf	3976,2,c	;volatile
 42728                           
 42729                           ; BSR set to: 14
 42730                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 42731  00478A  9288               	bcf	3976,1,c	;volatile
 42732                           
 42733                           ; BSR set to: 14
 42734                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 42735  00478C  9886               	bcf	3974,4,c	;volatile
 42736  00478E  9A86               	bcf	3974,5,c	;volatile
 42737  004790  9C86               	bcf	3974,6,c	;volatile
 42738  004792  9E86               	bcf	3974,7,c	;volatile
 42739                           
 42740                           ; BSR set to: 14
 42741                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 42742  004794  9086               	bcf	3974,0,c	;volatile
 42743  004796  9286               	bcf	3974,1,c	;volatile
 42744  004798  9486               	bcf	3974,2,c	;volatile
 42745  00479A  9686               	bcf	3974,3,c	;volatile
 42746                           
 42747                           ; BSR set to: 14
 42748                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 42749  00479C  0E00               	movlw	0
 42750  00479E  6E66               	movwf	3942,c	;volatile
 42751                           
 42752                           ; BSR set to: 14
 42753                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 42754  0047A0  0E3F               	movlw	63
 42755  0047A2  6E67               	movwf	3943,c	;volatile
 42756                           
 42757                           ; BSR set to: 14
 42758                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 42759  0047A4  0E03               	movlw	high __spi_external_tx_buffer
 42760  0047A6  6E6A               	movwf	3946,c	;volatile
 42761                           
 42762                           ; BSR set to: 14
 42763                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 42764  0047A8  0E40               	movlw	low (low __spi_external_tx_buffer)
 42765  0047AA  6E6B               	movwf	3947,c	;volatile
 42766                           
 42767                           ; BSR set to: 14
 42768                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 42769  0047AC  0E03               	movlw	high __spi_external_rx_buffer
 42770  0047AE  6E68               	movwf	3944,c	;volatile
 42771                           
 42772                           ; BSR set to: 14
 42773                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 42774  0047B0  0E00               	movlw	low (low __spi_external_rx_buffer)
 42775  0047B2  6E69               	movwf	3945,c	;volatile
 42776                           
 42777                           ; BSR set to: 14
 42778                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 42779  0047B4  8088               	bsf	3976,0,c	;volatile
 42780                           
 42781                           ; BSR set to: 14
 42782                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 42783  0047B6  0E01               	movlw	1
 42784  0047B8  0101               	movlb	1	; () banked
 42785  0047BA  6F8A               	movwf	_active_configuration& (0+255),b
 42786                           
 42787                           ; BSR set to: 1
 42788                           ;spi.c: 337: }
 42789                           
 42790                           ;spi.c: 336: break;
 42791  0047BC  0012               	return	
 42792  0047BE                     l2974:
 42793                           
 42794                           ; BSR set to: 1
 42795  0047BE  5001               	movf	spi_set_configuration@configuration,w,c
 42796                           
 42797                           ; Switch size 1, requested type "space"
 42798                           ; Number of cases is 2, Range of values is 0 to 1
 42799                           ; switch strategies available:
 42800                           ; Name         Instructions Cycles
 42801                           ; simple_byte            7     4 (average)
 42802                           ;	Chosen strategy is simple_byte
 42803  0047C0  0A00               	xorlw	0	; case 0
 42804  0047C2  B4D8               	btfsc	status,2,c
 42805  0047C4  D781               	goto	l2975
 42806  0047C6  0A01               	xorlw	1	; case 1
 42807  0047C8  A4D8               	btfss	status,2,c
 42808  0047CA  0012               	return	
 42809  0047CC  D7B2               	goto	l2980
 42810  0047CE                     __end_of_spi_set_configuration:
 42811                           	opt stack 0
 42812                           tosu	equ	0xFFF
 42813                           tosh	equ	0xFFE
 42814                           tosl	equ	0xFFD
 42815                           pclath	equ	0xFFA
 42816                           tblptru	equ	0xFF8
 42817                           tblptrh	equ	0xFF7
 42818                           tblptrl	equ	0xFF6
 42819                           tablat	equ	0xFF5
 42820                           prodh	equ	0xFF4
 42821                           prodl	equ	0xFF3
 42822                           intcon	equ	0xFF2
 42823                           intcon2	equ	0xFF1
 42824                           intcon3	equ	0xFF0
 42825                           indf0	equ	0xFEF
 42826                           postinc0	equ	0xFEE
 42827                           fsr0h	equ	0xFEA
 42828                           fsr0l	equ	0xFE9
 42829                           wreg	equ	0xFE8
 42830                           indf1	equ	0xFE7
 42831                           postdec1	equ	0xFE5
 42832                           plusw1	equ	0xFE3
 42833                           fsr1h	equ	0xFE2
 42834                           fsr1l	equ	0xFE1
 42835                           indf2	equ	0xFDF
 42836                           postinc2	equ	0xFDE
 42837                           postdec2	equ	0xFDD
 42838                           plusw2	equ	0xFDB
 42839                           fsr2h	equ	0xFDA
 42840                           fsr2l	equ	0xFD9
 42841                           status	equ	0xFD8
 42842                           
 42843 ;; *************** function __flash_partial_read *****************
 42844 ;; Defined at:
 42845 ;;		line 305 in file "flash.c"
 42846 ;; Parameters:    Size  Location     Type
 42847 ;;  page            2   19[COMRAM] unsigned int 
 42848 ;;  start           2   21[COMRAM] unsigned int 
 42849 ;;  length          2   23[COMRAM] unsigned int 
 42850 ;;  data            2   25[COMRAM] PTR unsigned char 
 42851 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 42852 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 42853 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 42854 ;;		 -> buffer(512), msd_buffer(512), RAM(3759), 
 42855 ;; Auto vars:     Size  Location     Type
 42856 ;;  command         4   31[COMRAM] unsigned char [4]
 42857 ;;  address         4   35[COMRAM] unsigned long 
 42858 ;; Return value:  Size  Location     Type
 42859 ;;                  1    wreg      void 
 42860 ;; Registers used:
 42861 ;;		wreg, status,2, status,0, cstack
 42862 ;; Tracked objects:
 42863 ;;		On entry : 0/0
 42864 ;;		On exit  : 0/0
 42865 ;;		Unchanged: 0/0
 42866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42867 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42868 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42870 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42871 ;;Total ram usage:       20 bytes
 42872 ;; Hardware stack levels used:    1
 42873 ;; Hardware stack levels required when called:    3
 42874 ;; This function calls:
 42875 ;;		__flash_is_busy
 42876 ;;		_spi_tx_rx
 42877 ;; This function is called by:
 42878 ;;		_flash_sector_read
 42879 ;;		_flash_partial_read
 42880 ;; This function uses a non-reentrant model
 42881 ;;
 42882                           
 42883                           	psect	text224
 42884  00756C                     __ptext224:
 42885                           	opt stack 0
 42886  00756C                     __flash_partial_read:
 42887                           	opt stack 23
 42888                           
 42889                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 42890                           
 42891                           ;incstack = 0
 42892  00756C  EC32  F046         	call	__flash_is_busy	;wreg free
 42893  007570  0900               	iorlw	0
 42894  007572  A4D8               	btfss	status,2,c
 42895  007574  D7FB               	goto	__flash_partial_read
 42896                           
 42897                           ;flash.c: 314: address = page;
 42898  007576  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 42899  00757A  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 42900  00757E  6A26               	clrf	__flash_partial_read@address+2,c
 42901  007580  6A27               	clrf	__flash_partial_read@address+3,c
 42902                           
 42903                           ;flash.c: 315: address <<= 9;
 42904  007582  0E09               	movlw	9
 42905  007584                     u6775:
 42906  007584  90D8               	bcf	status,0,c
 42907  007586  3624               	rlcf	__flash_partial_read@address,f,c
 42908  007588  3625               	rlcf	__flash_partial_read@address+1,f,c
 42909  00758A  3626               	rlcf	__flash_partial_read@address+2,f,c
 42910  00758C  3627               	rlcf	__flash_partial_read@address+3,f,c
 42911  00758E  2EE8               	decfsz	wreg,f,c
 42912  007590  D7F9               	goto	u6775
 42913                           
 42914                           ;flash.c: 316: address |= start;
 42915  007592  5016               	movf	__flash_partial_read@start,w,c
 42916  007594  6E1C               	movwf	??__flash_partial_read& (0+255),c
 42917  007596  5017               	movf	__flash_partial_read@start+1,w,c
 42918  007598  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 42919  00759A  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 42920  00759C  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 42921  00759E  501C               	movf	??__flash_partial_read,w,c
 42922  0075A0  1224               	iorwf	__flash_partial_read@address,f,c
 42923  0075A2  501D               	movf	??__flash_partial_read+1,w,c
 42924  0075A4  1225               	iorwf	__flash_partial_read@address+1,f,c
 42925  0075A6  501E               	movf	??__flash_partial_read+2,w,c
 42926  0075A8  1226               	iorwf	__flash_partial_read@address+2,f,c
 42927  0075AA  501F               	movf	??__flash_partial_read+3,w,c
 42928  0075AC  1227               	iorwf	__flash_partial_read@address+3,f,c
 42929                           
 42930                           ;flash.c: 319: command[0] = 0x03;
 42931  0075AE  0E03               	movlw	3
 42932  0075B0  6E20               	movwf	__flash_partial_read@command,c
 42933                           
 42934                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 42935  0075B2  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 42936                           
 42937                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 42938  0075B6  5025               	movf	__flash_partial_read@address+1,w,c
 42939  0075B8  6E22               	movwf	__flash_partial_read@command+2,c
 42940                           
 42941                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 42942  0075BA  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 42943                           
 42944                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 42945  0075BE  0E20               	movlw	low __flash_partial_read@command
 42946  0075C0  6E01               	movwf	spi_tx_rx@command,c
 42947  0075C2  0E00               	movlw	high __flash_partial_read@command
 42948  0075C4  6E02               	movwf	spi_tx_rx@command+1,c
 42949  0075C6  0E00               	movlw	0
 42950  0075C8  6E04               	movwf	spi_tx_rx@command_length+1,c
 42951  0075CA  0E04               	movlw	4
 42952  0075CC  6E03               	movwf	spi_tx_rx@command_length,c
 42953  0075CE  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 42954  0075D2  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 42955  0075D6  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 42956  0075DA  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 42957  0075DE  EC93  F037         	call	_spi_tx_rx	;wreg free
 42958  0075E2  0012               	return		;funcret
 42959  0075E4                     __end_of__flash_partial_read:
 42960                           	opt stack 0
 42961                           tosu	equ	0xFFF
 42962                           tosh	equ	0xFFE
 42963                           tosl	equ	0xFFD
 42964                           pclath	equ	0xFFA
 42965                           tblptru	equ	0xFF8
 42966                           tblptrh	equ	0xFF7
 42967                           tblptrl	equ	0xFF6
 42968                           tablat	equ	0xFF5
 42969                           prodh	equ	0xFF4
 42970                           prodl	equ	0xFF3
 42971                           intcon	equ	0xFF2
 42972                           intcon2	equ	0xFF1
 42973                           intcon3	equ	0xFF0
 42974                           indf0	equ	0xFEF
 42975                           postinc0	equ	0xFEE
 42976                           fsr0h	equ	0xFEA
 42977                           fsr0l	equ	0xFE9
 42978                           wreg	equ	0xFE8
 42979                           indf1	equ	0xFE7
 42980                           postdec1	equ	0xFE5
 42981                           plusw1	equ	0xFE3
 42982                           fsr1h	equ	0xFE2
 42983                           fsr1l	equ	0xFE1
 42984                           indf2	equ	0xFDF
 42985                           postinc2	equ	0xFDE
 42986                           postdec2	equ	0xFDD
 42987                           plusw2	equ	0xFDB
 42988                           fsr2h	equ	0xFDA
 42989                           fsr2l	equ	0xFD9
 42990                           status	equ	0xFD8
 42991                           
 42992 ;; *************** function __flash_is_busy *****************
 42993 ;; Defined at:
 42994 ;;		line 277 in file "flash.c"
 42995 ;; Parameters:    Size  Location     Type
 42996 ;;		None
 42997 ;; Auto vars:     Size  Location     Type
 42998 ;;  status          2   17[COMRAM] unsigned int 
 42999 ;; Return value:  Size  Location     Type
 43000 ;;                  1    wreg      unsigned char 
 43001 ;; Registers used:
 43002 ;;		wreg, status,2, status,0, cstack
 43003 ;; Tracked objects:
 43004 ;;		On entry : 0/0
 43005 ;;		On exit  : 0/0
 43006 ;;		Unchanged: 0/0
 43007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43012 ;;Total ram usage:        2 bytes
 43013 ;; Hardware stack levels used:    1
 43014 ;; Hardware stack levels required when called:    2
 43015 ;; This function calls:
 43016 ;;		__flash_get_status
 43017 ;;		__flash_wakeup
 43018 ;; This function is called by:
 43019 ;;		__flash_set_page_size
 43020 ;;		__flash_copy_page_to_buffer
 43021 ;;		__flash_compare_page_to_buffer
 43022 ;;		__flash_write_to_buffer
 43023 ;;		__flash_write_page_from_buffer
 43024 ;;		__flash_partial_read
 43025 ;;		_flash_is_busy
 43026 ;;		_flash_partial_write
 43027 ;;		__flash_erase_page
 43028 ;;		_flash_set_power_state
 43029 ;; This function uses a non-reentrant model
 43030 ;;
 43031                           
 43032                           	psect	text225
 43033  008C64                     __ptext225:
 43034                           	opt stack 0
 43035  008C64                     __flash_is_busy:
 43036                           	opt stack 25
 43037                           
 43038                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 43039                           
 43040                           ;incstack = 0
 43041  008C64  0100               	movlb	0	; () banked
 43042  008C66  51E5               	movf	_power_state& (0+255),w,b
 43043  008C68  A4D8               	btfss	status,2,c
 43044                           
 43045                           ; BSR set to: 0
 43046                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 43047  008C6A  EC40  F040         	call	__flash_wakeup	;wreg free
 43048                           
 43049                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 43050  008C6E  EC71  F044         	call	__flash_get_status	;wreg free
 43051  008C72  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 43052  008C76  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 43053                           
 43054                           ;flash.c: 291: if(status & 0b0000000010000000)
 43055  008C7A  AE12               	btfss	__flash_is_busy@status,7,c
 43056  008C7C  D002               	goto	l1800
 43057                           
 43058                           ;flash.c: 292: {;flash.c: 294: return 0;
 43059  008C7E  0E00               	movlw	0
 43060                           
 43061                           ;flash.c: 295: }
 43062  008C80  0012               	return	
 43063  008C82                     l1800:
 43064                           
 43065                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 43066  008C82  0E01               	movlw	1
 43067  008C84  0012               	return	
 43068  008C86                     __end_of__flash_is_busy:
 43069                           	opt stack 0
 43070                           tosu	equ	0xFFF
 43071                           tosh	equ	0xFFE
 43072                           tosl	equ	0xFFD
 43073                           pclath	equ	0xFFA
 43074                           tblptru	equ	0xFF8
 43075                           tblptrh	equ	0xFF7
 43076                           tblptrl	equ	0xFF6
 43077                           tablat	equ	0xFF5
 43078                           prodh	equ	0xFF4
 43079                           prodl	equ	0xFF3
 43080                           intcon	equ	0xFF2
 43081                           intcon2	equ	0xFF1
 43082                           intcon3	equ	0xFF0
 43083                           indf0	equ	0xFEF
 43084                           postinc0	equ	0xFEE
 43085                           fsr0h	equ	0xFEA
 43086                           fsr0l	equ	0xFE9
 43087                           wreg	equ	0xFE8
 43088                           indf1	equ	0xFE7
 43089                           postdec1	equ	0xFE5
 43090                           plusw1	equ	0xFE3
 43091                           fsr1h	equ	0xFE2
 43092                           fsr1l	equ	0xFE1
 43093                           indf2	equ	0xFDF
 43094                           postinc2	equ	0xFDE
 43095                           postdec2	equ	0xFDD
 43096                           plusw2	equ	0xFDB
 43097                           fsr2h	equ	0xFDA
 43098                           fsr2l	equ	0xFD9
 43099                           status	equ	0xFD8
 43100                           
 43101 ;; *************** function __flash_wakeup *****************
 43102 ;; Defined at:
 43103 ;;		line 124 in file "flash.c"
 43104 ;; Parameters:    Size  Location     Type
 43105 ;;		None
 43106 ;; Auto vars:     Size  Location     Type
 43107 ;;  command         1    8[COMRAM] unsigned char 
 43108 ;; Return value:  Size  Location     Type
 43109 ;;                  1    wreg      void 
 43110 ;; Registers used:
 43111 ;;		wreg, status,2, status,0, cstack
 43112 ;; Tracked objects:
 43113 ;;		On entry : 0/0
 43114 ;;		On exit  : 0/0
 43115 ;;		Unchanged: 0/0
 43116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43121 ;;Total ram usage:        1 bytes
 43122 ;; Hardware stack levels used:    1
 43123 ;; Hardware stack levels required when called:    1
 43124 ;; This function calls:
 43125 ;;		_spi_tx
 43126 ;; This function is called by:
 43127 ;;		__flash_is_busy
 43128 ;;		_flash_set_power_state
 43129 ;; This function uses a non-reentrant model
 43130 ;;
 43131                           
 43132                           	psect	text226
 43133  008080                     __ptext226:
 43134                           	opt stack 0
 43135  008080                     __flash_wakeup:
 43136                           	opt stack 25
 43137                           
 43138                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 43139                           
 43140                           ;incstack = 0
 43141  008080  D021               	goto	l1749
 43142  008082                     
 43143                           ;flash.c: 131: command = 0xAB;
 43144  008082  0EAB               	movlw	171
 43145  008084  6E09               	movwf	__flash_wakeup@command,c
 43146                           
 43147                           ;flash.c: 132: spi_tx(&command, 1);
 43148  008086  0E09               	movlw	low __flash_wakeup@command
 43149  008088  6E01               	movwf	spi_tx@data,c
 43150  00808A  0E00               	movlw	high __flash_wakeup@command
 43151  00808C  6E02               	movwf	spi_tx@data+1,c
 43152  00808E  0E00               	movlw	0
 43153  008090  6E04               	movwf	spi_tx@length+1,c
 43154  008092  0E01               	movlw	1
 43155  008094  6E03               	movwf	spi_tx@length,c
 43156  008096  EC12  F03F         	call	_spi_tx	;wreg free
 43157                           
 43158                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 43159  00809A  0E17               	movlw	23
 43160  00809C                     u13247:
 43161  00809C  2EE8               	decfsz	wreg,f,c
 43162  00809E  D7FE               	bra	u13247
 43163  0080A0  F000               	nop	
 43164                           
 43165                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 43166  0080A2  0E00               	movlw	0
 43167  0080A4  0100               	movlb	0	; () banked
 43168  0080A6  6FE5               	movwf	_power_state& (0+255),b
 43169                           
 43170                           ;flash.c: 135: break;
 43171  0080A8  0012               	return	
 43172  0080AA                     l1752:
 43173                           
 43174                           ; BSR set to: 0
 43175                           ;flash.c: 140: LATDbits.LD7 = 0;
 43176  0080AA  9E8C               	bcf	3980,7,c	;volatile
 43177                           
 43178                           ; BSR set to: 0
 43179                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 43180  0080AC  0E0D               	movlw	13
 43181  0080AE                     u13257:
 43182  0080AE  2EE8               	decfsz	wreg,f,c
 43183  0080B0  D7FE               	bra	u13257
 43184  0080B2  F000               	nop	
 43185                           
 43186                           ;flash.c: 142: LATDbits.LD7 = 1;
 43187  0080B4  8E8C               	bsf	3980,7,c	;volatile
 43188                           
 43189                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 43190  0080B6  0E50               	movlw	80
 43191  0080B8                     u13267:
 43192  0080B8  2EE8               	decfsz	wreg,f,c
 43193  0080BA  D7FE               	bra	u13267
 43194                           
 43195                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 43196  0080BC  0E00               	movlw	0
 43197  0080BE  0100               	movlb	0	; () banked
 43198  0080C0  6FE5               	movwf	_power_state& (0+255),b
 43199                           
 43200                           ; BSR set to: 0
 43201                           ;flash.c: 146: }
 43202                           
 43203                           ;flash.c: 145: break;
 43204  0080C2  0012               	return	
 43205  0080C4                     l1749:
 43206                           
 43207                           ; BSR set to: 0
 43208  0080C4  0100               	movlb	0	; () banked
 43209  0080C6  51E5               	movf	_power_state& (0+255),w,b
 43210                           
 43211                           ; Switch size 1, requested type "space"
 43212                           ; Number of cases is 2, Range of values is 1 to 2
 43213                           ; switch strategies available:
 43214                           ; Name         Instructions Cycles
 43215                           ; simple_byte            7     4 (average)
 43216                           ;	Chosen strategy is simple_byte
 43217  0080C8  0A01               	xorlw	1	; case 1
 43218  0080CA  B4D8               	btfsc	status,2,c
 43219  0080CC  D7DA               	goto	l1750
 43220  0080CE  0A03               	xorlw	3	; case 2
 43221  0080D0  A4D8               	btfss	status,2,c
 43222  0080D2  0012               	return	
 43223  0080D4  D7EA               	goto	l1752
 43224  0080D6                     __end_of__flash_wakeup:
 43225                           	opt stack 0
 43226                           tosu	equ	0xFFF
 43227                           tosh	equ	0xFFE
 43228                           tosl	equ	0xFFD
 43229                           pclath	equ	0xFFA
 43230                           tblptru	equ	0xFF8
 43231                           tblptrh	equ	0xFF7
 43232                           tblptrl	equ	0xFF6
 43233                           tablat	equ	0xFF5
 43234                           prodh	equ	0xFF4
 43235                           prodl	equ	0xFF3
 43236                           intcon	equ	0xFF2
 43237                           intcon2	equ	0xFF1
 43238                           intcon3	equ	0xFF0
 43239                           indf0	equ	0xFEF
 43240                           postinc0	equ	0xFEE
 43241                           fsr0h	equ	0xFEA
 43242                           fsr0l	equ	0xFE9
 43243                           wreg	equ	0xFE8
 43244                           indf1	equ	0xFE7
 43245                           postdec1	equ	0xFE5
 43246                           plusw1	equ	0xFE3
 43247                           fsr1h	equ	0xFE2
 43248                           fsr1l	equ	0xFE1
 43249                           indf2	equ	0xFDF
 43250                           postinc2	equ	0xFDE
 43251                           postdec2	equ	0xFDD
 43252                           plusw2	equ	0xFDB
 43253                           fsr2h	equ	0xFDA
 43254                           fsr2l	equ	0xFD9
 43255                           status	equ	0xFD8
 43256                           
 43257 ;; *************** function _spi_tx *****************
 43258 ;; Defined at:
 43259 ;;		line 348 in file "spi.c"
 43260 ;; Parameters:    Size  Location     Type
 43261 ;;  data            2    0[COMRAM] PTR unsigned char 
 43262 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 43263 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 43264 ;;  length          2    2[COMRAM] unsigned int 
 43265 ;; Auto vars:     Size  Location     Type
 43266 ;;		None
 43267 ;; Return value:  Size  Location     Type
 43268 ;;                  1    wreg      void 
 43269 ;; Registers used:
 43270 ;;		wreg, status,2, status,0
 43271 ;; Tracked objects:
 43272 ;;		On entry : 0/0
 43273 ;;		On exit  : 0/0
 43274 ;;		Unchanged: 0/0
 43275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43280 ;;Total ram usage:        8 bytes
 43281 ;; Hardware stack levels used:    1
 43282 ;; This function calls:
 43283 ;;		Nothing
 43284 ;; This function is called by:
 43285 ;;		__flash_set_page_size
 43286 ;;		__flash_wakeup
 43287 ;;		__flash_copy_page_to_buffer
 43288 ;;		__flash_compare_page_to_buffer
 43289 ;;		__flash_write_page_from_buffer
 43290 ;;		__flash_erase_page
 43291 ;;		_flash_set_power_state
 43292 ;; This function uses a non-reentrant model
 43293 ;;
 43294                           
 43295                           	psect	text227
 43296  007E24                     __ptext227:
 43297                           	opt stack 0
 43298  007E24                     _spi_tx:
 43299                           	opt stack 27
 43300                           
 43301                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 43302                           
 43303                           ; BSR set to: 0
 43304                           ;incstack = 0
 43305  007E24  9E88               	bcf	3976,7,c	;volatile
 43306                           
 43307                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 43308  007E26  9C88               	bcf	3976,6,c	;volatile
 43309                           
 43310                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 43311  007E28  8A88               	bsf	3976,5,c	;volatile
 43312                           
 43313                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 43314  007E2A  9888               	bcf	3976,4,c	;volatile
 43315                           
 43316                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 43317  007E2C  9688               	bcf	3976,3,c	;volatile
 43318                           
 43319                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 43320  007E2E  8488               	bsf	3976,2,c	;volatile
 43321                           
 43322                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 43323  007E30  9288               	bcf	3976,1,c	;volatile
 43324                           
 43325                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 43326  007E32  9886               	bcf	3974,4,c	;volatile
 43327  007E34  9A86               	bcf	3974,5,c	;volatile
 43328  007E36  9C86               	bcf	3974,6,c	;volatile
 43329  007E38  9E86               	bcf	3974,7,c	;volatile
 43330                           
 43331                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 43332  007E3A  9086               	bcf	3974,0,c	;volatile
 43333  007E3C  9286               	bcf	3974,1,c	;volatile
 43334  007E3E  9486               	bcf	3974,2,c	;volatile
 43335  007E40  9686               	bcf	3974,3,c	;volatile
 43336                           
 43337                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43338  007E42  5002               	movf	spi_tx@data+1,w,c
 43339  007E44  6E6A               	movwf	3946,c	;volatile
 43340                           
 43341                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43342  007E46  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 43343                           
 43344                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 43345  007E4A  0EFF               	movlw	255
 43346  007E4C  6E05               	movwf	??_spi_tx& (0+255),c
 43347  007E4E  0EFF               	movlw	255
 43348  007E50  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 43349  007E52  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 43350  007E56  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 43351  007E5A  5005               	movf	??_spi_tx,w,c
 43352  007E5C  2607               	addwf	??_spi_tx+2,f,c
 43353  007E5E  5006               	movf	??_spi_tx+1,w,c
 43354  007E60  2208               	addwfc	??_spi_tx+3,f,c
 43355  007E62  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 43356  007E66  6A08               	clrf	??_spi_tx+3,c
 43357  007E68  5007               	movf	??_spi_tx+2,w,c
 43358  007E6A  6E66               	movwf	3942,c	;volatile
 43359                           
 43360                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 43361  007E6C  0403               	decf	spi_tx@length,w,c
 43362  007E6E  6E67               	movwf	3943,c	;volatile
 43363                           
 43364                           ;spi.c: 376: LATDbits.LD7 = 0;
 43365  007E70  9E8C               	bcf	3980,7,c	;volatile
 43366                           
 43367                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 43368  007E72  8088               	bsf	3976,0,c	;volatile
 43369  007E74  B088               	btfsc	3976,0,c	;volatile
 43370  007E76  D7FE               	goto	l2988
 43371                           
 43372                           ;spi.c: 379: LATDbits.LD7 = 1;
 43373  007E78  8E8C               	bsf	3980,7,c	;volatile
 43374  007E7A  0012               	return		;funcret
 43375  007E7C                     __end_of_spi_tx:
 43376                           	opt stack 0
 43377                           tosu	equ	0xFFF
 43378                           tosh	equ	0xFFE
 43379                           tosl	equ	0xFFD
 43380                           pclath	equ	0xFFA
 43381                           tblptru	equ	0xFF8
 43382                           tblptrh	equ	0xFF7
 43383                           tblptrl	equ	0xFF6
 43384                           tablat	equ	0xFF5
 43385                           prodh	equ	0xFF4
 43386                           prodl	equ	0xFF3
 43387                           intcon	equ	0xFF2
 43388                           intcon2	equ	0xFF1
 43389                           intcon3	equ	0xFF0
 43390                           indf0	equ	0xFEF
 43391                           postinc0	equ	0xFEE
 43392                           fsr0h	equ	0xFEA
 43393                           fsr0l	equ	0xFE9
 43394                           wreg	equ	0xFE8
 43395                           indf1	equ	0xFE7
 43396                           postdec1	equ	0xFE5
 43397                           plusw1	equ	0xFE3
 43398                           fsr1h	equ	0xFE2
 43399                           fsr1l	equ	0xFE1
 43400                           indf2	equ	0xFDF
 43401                           postinc2	equ	0xFDE
 43402                           postdec2	equ	0xFDD
 43403                           plusw2	equ	0xFDB
 43404                           fsr2h	equ	0xFDA
 43405                           fsr2l	equ	0xFD9
 43406                           status	equ	0xFD8
 43407                           
 43408 ;; *************** function __flash_get_status *****************
 43409 ;; Defined at:
 43410 ;;		line 113 in file "flash.c"
 43411 ;; Parameters:    Size  Location     Type
 43412 ;;		None
 43413 ;; Auto vars:     Size  Location     Type
 43414 ;;  status          2   15[COMRAM] unsigned int 
 43415 ;;  command         1   14[COMRAM] unsigned char 
 43416 ;; Return value:  Size  Location     Type
 43417 ;;                  2   12[COMRAM] unsigned int 
 43418 ;; Registers used:
 43419 ;;		wreg, status,2, status,0, cstack
 43420 ;; Tracked objects:
 43421 ;;		On entry : 0/0
 43422 ;;		On exit  : 0/0
 43423 ;;		Unchanged: 0/0
 43424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43426 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43429 ;;Total ram usage:        5 bytes
 43430 ;; Hardware stack levels used:    1
 43431 ;; Hardware stack levels required when called:    1
 43432 ;; This function calls:
 43433 ;;		_spi_tx_rx
 43434 ;; This function is called by:
 43435 ;;		__flash_compare_page_to_buffer
 43436 ;;		__flash_is_busy
 43437 ;; This function uses a non-reentrant model
 43438 ;;
 43439                           
 43440                           	psect	text228
 43441  0088E2                     __ptext228:
 43442                           	opt stack 0
 43443  0088E2                     __flash_get_status:
 43444                           	opt stack 25
 43445                           
 43446                           ;flash.c: 117: uint8_t command = 0xD7;
 43447                           
 43448                           ;incstack = 0
 43449  0088E2  0ED7               	movlw	215
 43450  0088E4  6E0F               	movwf	__flash_get_status@command,c
 43451                           
 43452                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 43453  0088E6  0E0F               	movlw	low __flash_get_status@command
 43454  0088E8  6E01               	movwf	spi_tx_rx@command,c
 43455  0088EA  0E00               	movlw	high __flash_get_status@command
 43456  0088EC  6E02               	movwf	spi_tx_rx@command+1,c
 43457  0088EE  0E00               	movlw	0
 43458  0088F0  6E04               	movwf	spi_tx_rx@command_length+1,c
 43459  0088F2  0E01               	movlw	1
 43460  0088F4  6E03               	movwf	spi_tx_rx@command_length,c
 43461  0088F6  0E10               	movlw	low __flash_get_status@status
 43462  0088F8  6E05               	movwf	spi_tx_rx@data,c
 43463  0088FA  0E00               	movlw	high __flash_get_status@status
 43464  0088FC  6E06               	movwf	spi_tx_rx@data+1,c
 43465  0088FE  0E00               	movlw	0
 43466  008900  6E08               	movwf	spi_tx_rx@data_length+1,c
 43467  008902  0E02               	movlw	2
 43468  008904  6E07               	movwf	spi_tx_rx@data_length,c
 43469  008906  EC93  F037         	call	_spi_tx_rx	;wreg free
 43470                           
 43471                           ;flash.c: 120: return status;
 43472  00890A  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 43473  00890E  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 43474  008912  0012               	return	
 43475  008914                     __end_of__flash_get_status:
 43476                           	opt stack 0
 43477                           tosu	equ	0xFFF
 43478                           tosh	equ	0xFFE
 43479                           tosl	equ	0xFFD
 43480                           pclath	equ	0xFFA
 43481                           tblptru	equ	0xFF8
 43482                           tblptrh	equ	0xFF7
 43483                           tblptrl	equ	0xFF6
 43484                           tablat	equ	0xFF5
 43485                           prodh	equ	0xFF4
 43486                           prodl	equ	0xFF3
 43487                           intcon	equ	0xFF2
 43488                           intcon2	equ	0xFF1
 43489                           intcon3	equ	0xFF0
 43490                           indf0	equ	0xFEF
 43491                           postinc0	equ	0xFEE
 43492                           fsr0h	equ	0xFEA
 43493                           fsr0l	equ	0xFE9
 43494                           wreg	equ	0xFE8
 43495                           indf1	equ	0xFE7
 43496                           postdec1	equ	0xFE5
 43497                           plusw1	equ	0xFE3
 43498                           fsr1h	equ	0xFE2
 43499                           fsr1l	equ	0xFE1
 43500                           indf2	equ	0xFDF
 43501                           postinc2	equ	0xFDE
 43502                           postdec2	equ	0xFDD
 43503                           plusw2	equ	0xFDB
 43504                           fsr2h	equ	0xFDA
 43505                           fsr2l	equ	0xFD9
 43506                           status	equ	0xFD8
 43507                           
 43508 ;; *************** function _spi_tx_rx *****************
 43509 ;; Defined at:
 43510 ;;		line 439 in file "spi.c"
 43511 ;; Parameters:    Size  Location     Type
 43512 ;;  command         2    0[COMRAM] PTR unsigned char 
 43513 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 43514 ;;  command_leng    2    2[COMRAM] unsigned int 
 43515 ;;  data            2    4[COMRAM] PTR unsigned char 
 43516 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 43517 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 43518 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 43519 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 43520 ;;  data_length     2    6[COMRAM] unsigned int 
 43521 ;; Auto vars:     Size  Location     Type
 43522 ;;		None
 43523 ;; Return value:  Size  Location     Type
 43524 ;;                  1    wreg      void 
 43525 ;; Registers used:
 43526 ;;		wreg, status,2, status,0
 43527 ;; Tracked objects:
 43528 ;;		On entry : 0/0
 43529 ;;		On exit  : 0/0
 43530 ;;		Unchanged: 0/0
 43531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43532 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43535 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43536 ;;Total ram usage:       12 bytes
 43537 ;; Hardware stack levels used:    1
 43538 ;; This function calls:
 43539 ;;		Nothing
 43540 ;; This function is called by:
 43541 ;;		__flash_get_status
 43542 ;;		__flash_partial_read
 43543 ;; This function uses a non-reentrant model
 43544 ;;
 43545                           
 43546                           	psect	text229
 43547  006F26                     __ptext229:
 43548                           	opt stack 0
 43549  006F26                     _spi_tx_rx:
 43550                           	opt stack 25
 43551                           
 43552                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 43553                           
 43554                           ;incstack = 0
 43555  006F26  9E88               	bcf	3976,7,c	;volatile
 43556                           
 43557                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 43558  006F28  9C88               	bcf	3976,6,c	;volatile
 43559                           
 43560                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 43561  006F2A  8A88               	bsf	3976,5,c	;volatile
 43562                           
 43563                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 43564  006F2C  9888               	bcf	3976,4,c	;volatile
 43565                           
 43566                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 43567  006F2E  9688               	bcf	3976,3,c	;volatile
 43568                           
 43569                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 43570  006F30  8488               	bsf	3976,2,c	;volatile
 43571                           
 43572                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 43573  006F32  9288               	bcf	3976,1,c	;volatile
 43574                           
 43575                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 43576  006F34  9886               	bcf	3974,4,c	;volatile
 43577  006F36  9A86               	bcf	3974,5,c	;volatile
 43578  006F38  9C86               	bcf	3974,6,c	;volatile
 43579  006F3A  9E86               	bcf	3974,7,c	;volatile
 43580                           
 43581                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 43582  006F3C  9086               	bcf	3974,0,c	;volatile
 43583  006F3E  9286               	bcf	3974,1,c	;volatile
 43584  006F40  9486               	bcf	3974,2,c	;volatile
 43585  006F42  9686               	bcf	3974,3,c	;volatile
 43586                           
 43587                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 43588  006F44  5002               	movf	spi_tx_rx@command+1,w,c
 43589  006F46  6E6A               	movwf	3946,c	;volatile
 43590                           
 43591                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 43592  006F48  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 43593                           
 43594                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 43595  006F4C  0EFF               	movlw	255
 43596  006F4E  6E09               	movwf	??_spi_tx_rx& (0+255),c
 43597  006F50  0EFF               	movlw	255
 43598  006F52  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 43599  006F54  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 43600  006F58  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 43601  006F5C  5009               	movf	??_spi_tx_rx,w,c
 43602  006F5E  260B               	addwf	??_spi_tx_rx+2,f,c
 43603  006F60  500A               	movf	??_spi_tx_rx+1,w,c
 43604  006F62  220C               	addwfc	??_spi_tx_rx+3,f,c
 43605  006F64  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 43606  006F68  6A0C               	clrf	??_spi_tx_rx+3,c
 43607  006F6A  500B               	movf	??_spi_tx_rx+2,w,c
 43608  006F6C  6E66               	movwf	3942,c	;volatile
 43609                           
 43610                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 43611  006F6E  0403               	decf	spi_tx_rx@command_length,w,c
 43612  006F70  6E67               	movwf	3943,c	;volatile
 43613                           
 43614                           ;spi.c: 467: LATDbits.LD7 = 0;
 43615  006F72  9E8C               	bcf	3980,7,c	;volatile
 43616                           
 43617                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 43618  006F74  8088               	bsf	3976,0,c	;volatile
 43619  006F76  B088               	btfsc	3976,0,c	;volatile
 43620  006F78  D7FE               	goto	l3003
 43621                           
 43622                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 43623  006F7A  9A88               	bcf	3976,5,c	;volatile
 43624                           
 43625                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 43626  006F7C  8888               	bsf	3976,4,c	;volatile
 43627                           
 43628                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 43629  006F7E  9688               	bcf	3976,3,c	;volatile
 43630                           
 43631                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 43632  006F80  9488               	bcf	3976,2,c	;volatile
 43633                           
 43634                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43635  006F82  5006               	movf	spi_tx_rx@data+1,w,c
 43636  006F84  6E68               	movwf	3944,c	;volatile
 43637                           
 43638                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43639  006F86  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 43640                           
 43641                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 43642  006F8A  0EFF               	movlw	255
 43643  006F8C  6E09               	movwf	??_spi_tx_rx& (0+255),c
 43644  006F8E  0EFF               	movlw	255
 43645  006F90  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 43646  006F92  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 43647  006F96  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 43648  006F9A  5009               	movf	??_spi_tx_rx,w,c
 43649  006F9C  260B               	addwf	??_spi_tx_rx+2,f,c
 43650  006F9E  500A               	movf	??_spi_tx_rx+1,w,c
 43651  006FA0  220C               	addwfc	??_spi_tx_rx+3,f,c
 43652  006FA2  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 43653  006FA6  6A0C               	clrf	??_spi_tx_rx+3,c
 43654  006FA8  500B               	movf	??_spi_tx_rx+2,w,c
 43655  006FAA  6E66               	movwf	3942,c	;volatile
 43656                           
 43657                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 43658  006FAC  0407               	decf	spi_tx_rx@data_length,w,c
 43659  006FAE  6E67               	movwf	3943,c	;volatile
 43660                           
 43661                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 43662  006FB0  8088               	bsf	3976,0,c	;volatile
 43663  006FB2  B088               	btfsc	3976,0,c	;volatile
 43664  006FB4  D7FE               	goto	l3006
 43665                           
 43666                           ;spi.c: 494: LATDbits.LD7 = 1;
 43667  006FB6  8E8C               	bsf	3980,7,c	;volatile
 43668  006FB8  0012               	return		;funcret
 43669  006FBA                     __end_of_spi_tx_rx:
 43670                           	opt stack 0
 43671                           tosu	equ	0xFFF
 43672                           tosh	equ	0xFFE
 43673                           tosl	equ	0xFFD
 43674                           pclath	equ	0xFFA
 43675                           tblptru	equ	0xFF8
 43676                           tblptrh	equ	0xFF7
 43677                           tblptrl	equ	0xFF6
 43678                           tablat	equ	0xFF5
 43679                           prodh	equ	0xFF4
 43680                           prodl	equ	0xFF3
 43681                           intcon	equ	0xFF2
 43682                           intcon2	equ	0xFF1
 43683                           intcon3	equ	0xFF0
 43684                           indf0	equ	0xFEF
 43685                           postinc0	equ	0xFEE
 43686                           fsr0h	equ	0xFEA
 43687                           fsr0l	equ	0xFE9
 43688                           wreg	equ	0xFE8
 43689                           indf1	equ	0xFE7
 43690                           postdec1	equ	0xFE5
 43691                           plusw1	equ	0xFE3
 43692                           fsr1h	equ	0xFE2
 43693                           fsr1l	equ	0xFE1
 43694                           indf2	equ	0xFDF
 43695                           postinc2	equ	0xFDE
 43696                           postdec2	equ	0xFDD
 43697                           plusw2	equ	0xFDB
 43698                           fsr2h	equ	0xFDA
 43699                           fsr2l	equ	0xFD9
 43700                           status	equ	0xFD8
 43701                           
 43702 ;; *************** function __fat_sector_from_cluster *****************
 43703 ;; Defined at:
 43704 ;;		line 75 in file "fat16.c"
 43705 ;; Parameters:    Size  Location     Type
 43706 ;;  cluster         2    0[COMRAM] unsigned int 
 43707 ;; Auto vars:     Size  Location     Type
 43708 ;;		None
 43709 ;; Return value:  Size  Location     Type
 43710 ;;                  2    0[COMRAM] unsigned int 
 43711 ;; Registers used:
 43712 ;;		wreg, status,2, status,0
 43713 ;; Tracked objects:
 43714 ;;		On entry : 0/0
 43715 ;;		On exit  : 0/0
 43716 ;;		Unchanged: 0/0
 43717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43722 ;;Total ram usage:        2 bytes
 43723 ;; Hardware stack levels used:    1
 43724 ;; This function calls:
 43725 ;;		Nothing
 43726 ;; This function is called by:
 43727 ;;		__make_cluster_chain
 43728 ;;		__read_fat
 43729 ;; This function uses a non-reentrant model
 43730 ;;
 43731                           
 43732                           	psect	text230
 43733  008DDC                     __ptext230:
 43734                           	opt stack 0
 43735  008DDC                     __fat_sector_from_cluster:
 43736                           	opt stack 26
 43737                           
 43738                           ;fat16.c: 77: cluster >>= 8;
 43739                           
 43740                           ;incstack = 0
 43741  008DDC  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 43742  008DDE  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 43743  008DE0  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 43744                           
 43745                           ;fat16.c: 78: cluster += 2;
 43746  008DE2  0E02               	movlw	2
 43747  008DE4  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 43748  008DE6  0E00               	movlw	0
 43749  008DE8  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 43750                           
 43751                           ;fat16.c: 79: return cluster;
 43752  008DEA  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 43753  008DEE  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 43754  008DF2  0012               	return	
 43755  008DF4                     __end_of__fat_sector_from_cluster:
 43756                           	opt stack 0
 43757                           tosu	equ	0xFFF
 43758                           tosh	equ	0xFFE
 43759                           tosl	equ	0xFFD
 43760                           pclath	equ	0xFFA
 43761                           tblptru	equ	0xFF8
 43762                           tblptrh	equ	0xFF7
 43763                           tblptrl	equ	0xFF6
 43764                           tablat	equ	0xFF5
 43765                           prodh	equ	0xFF4
 43766                           prodl	equ	0xFF3
 43767                           intcon	equ	0xFF2
 43768                           intcon2	equ	0xFF1
 43769                           intcon3	equ	0xFF0
 43770                           indf0	equ	0xFEF
 43771                           postinc0	equ	0xFEE
 43772                           fsr0h	equ	0xFEA
 43773                           fsr0l	equ	0xFE9
 43774                           wreg	equ	0xFE8
 43775                           indf1	equ	0xFE7
 43776                           postdec1	equ	0xFE5
 43777                           plusw1	equ	0xFE3
 43778                           fsr1h	equ	0xFE2
 43779                           fsr1l	equ	0xFE1
 43780                           indf2	equ	0xFDF
 43781                           postinc2	equ	0xFDE
 43782                           postdec2	equ	0xFDD
 43783                           plusw2	equ	0xFDB
 43784                           fsr2h	equ	0xFDA
 43785                           fsr2l	equ	0xFD9
 43786                           status	equ	0xFD8
 43787                           
 43788 ;; *************** function __fat_offset_from_cluster *****************
 43789 ;; Defined at:
 43790 ;;		line 82 in file "fat16.c"
 43791 ;; Parameters:    Size  Location     Type
 43792 ;;  cluster         2    0[COMRAM] unsigned int 
 43793 ;; Auto vars:     Size  Location     Type
 43794 ;;		None
 43795 ;; Return value:  Size  Location     Type
 43796 ;;                  2    0[COMRAM] unsigned int 
 43797 ;; Registers used:
 43798 ;;		wreg, status,2, status,0
 43799 ;; Tracked objects:
 43800 ;;		On entry : 0/0
 43801 ;;		On exit  : 0/0
 43802 ;;		Unchanged: 0/0
 43803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43808 ;;Total ram usage:        2 bytes
 43809 ;; Hardware stack levels used:    1
 43810 ;; This function calls:
 43811 ;;		Nothing
 43812 ;; This function is called by:
 43813 ;;		__find_nth_cluster
 43814 ;;		__make_cluster_chain
 43815 ;;		__read_fat
 43816 ;; This function uses a non-reentrant model
 43817 ;;
 43818                           
 43819                           	psect	text231
 43820  008DF4                     __ptext231:
 43821                           	opt stack 0
 43822  008DF4                     __fat_offset_from_cluster:
 43823                           	opt stack 26
 43824                           
 43825                           ;fat16.c: 84: cluster &= 0xFF;
 43826                           
 43827                           ;incstack = 0
 43828  008DF4  0EFF               	movlw	255
 43829  008DF6  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 43830  008DF8  0E00               	movlw	0
 43831  008DFA  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 43832                           
 43833                           ;fat16.c: 85: cluster <<= 1;
 43834  008DFC  90D8               	bcf	status,0,c
 43835  008DFE  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 43836  008E00  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 43837                           
 43838                           ;fat16.c: 86: return cluster;
 43839  008E02  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 43840  008E06  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 43841  008E0A  0012               	return	
 43842  008E0C                     __end_of__fat_offset_from_cluster:
 43843                           	opt stack 0
 43844                           tosu	equ	0xFFF
 43845                           tosh	equ	0xFFE
 43846                           tosl	equ	0xFFD
 43847                           pclath	equ	0xFFA
 43848                           tblptru	equ	0xFF8
 43849                           tblptrh	equ	0xFF7
 43850                           tblptrl	equ	0xFF6
 43851                           tablat	equ	0xFF5
 43852                           prodh	equ	0xFF4
 43853                           prodl	equ	0xFF3
 43854                           intcon	equ	0xFF2
 43855                           intcon2	equ	0xFF1
 43856                           intcon3	equ	0xFF0
 43857                           indf0	equ	0xFEF
 43858                           postinc0	equ	0xFEE
 43859                           fsr0h	equ	0xFEA
 43860                           fsr0l	equ	0xFE9
 43861                           wreg	equ	0xFE8
 43862                           indf1	equ	0xFE7
 43863                           postdec1	equ	0xFE5
 43864                           plusw1	equ	0xFE3
 43865                           fsr1h	equ	0xFE2
 43866                           fsr1l	equ	0xFE1
 43867                           indf2	equ	0xFDF
 43868                           postinc2	equ	0xFDE
 43869                           postdec2	equ	0xFDD
 43870                           plusw2	equ	0xFDB
 43871                           fsr2h	equ	0xFDA
 43872                           fsr2l	equ	0xFD9
 43873                           status	equ	0xFD8
 43874                           
 43875 ;; *************** function __data_sector_from_cluster *****************
 43876 ;; Defined at:
 43877 ;;		line 70 in file "fat16.c"
 43878 ;; Parameters:    Size  Location     Type
 43879 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 43880 ;; Auto vars:     Size  Location     Type
 43881 ;;		None
 43882 ;; Return value:  Size  Location     Type
 43883 ;;                  2    0[COMRAM] unsigned int 
 43884 ;; Registers used:
 43885 ;;		wreg, status,2, status,0
 43886 ;; Tracked objects:
 43887 ;;		On entry : 0/0
 43888 ;;		On exit  : 0/0
 43889 ;;		Unchanged: 0/0
 43890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43895 ;;Total ram usage:        2 bytes
 43896 ;; Hardware stack levels used:    1
 43897 ;; This function calls:
 43898 ;;		Nothing
 43899 ;; This function is called by:
 43900 ;;		__find_nth_cluster
 43901 ;;		_fat_read_from_file_fast
 43902 ;;		_fat_modify_file
 43903 ;;		_fat_copy_sector_to_buffer
 43904 ;;		_fat_write_sector_from_buffer
 43905 ;; This function uses a non-reentrant model
 43906 ;;
 43907                           
 43908                           	psect	text232
 43909  008EE8                     __ptext232:
 43910                           	opt stack 0
 43911  008EE8                     __data_sector_from_cluster:
 43912                           	opt stack 26
 43913                           
 43914                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 43915                           
 43916                           ;incstack = 0
 43917  008EE8  0E24               	movlw	36
 43918  008EEA  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 43919  008EEC  6E01               	movwf	?__data_sector_from_cluster,c
 43920  008EEE  0E00               	movlw	0
 43921  008EF0  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 43922  008EF2  6E02               	movwf	?__data_sector_from_cluster+1,c
 43923  008EF4  0012               	return	
 43924  008EF6                     __end_of__data_sector_from_cluster:
 43925                           	opt stack 0
 43926                           tosu	equ	0xFFF
 43927                           tosh	equ	0xFFE
 43928                           tosl	equ	0xFFD
 43929                           pclath	equ	0xFFA
 43930                           tblptru	equ	0xFF8
 43931                           tblptrh	equ	0xFF7
 43932                           tblptrl	equ	0xFF6
 43933                           tablat	equ	0xFF5
 43934                           prodh	equ	0xFF4
 43935                           prodl	equ	0xFF3
 43936                           intcon	equ	0xFF2
 43937                           intcon2	equ	0xFF1
 43938                           intcon3	equ	0xFF0
 43939                           indf0	equ	0xFEF
 43940                           postinc0	equ	0xFEE
 43941                           fsr0h	equ	0xFEA
 43942                           fsr0l	equ	0xFE9
 43943                           wreg	equ	0xFE8
 43944                           indf1	equ	0xFE7
 43945                           postdec1	equ	0xFE5
 43946                           plusw1	equ	0xFE3
 43947                           fsr1h	equ	0xFE2
 43948                           fsr1l	equ	0xFE1
 43949                           indf2	equ	0xFDF
 43950                           postinc2	equ	0xFDE
 43951                           postdec2	equ	0xFDD
 43952                           plusw2	equ	0xFDB
 43953                           fsr2h	equ	0xFDA
 43954                           fsr2l	equ	0xFD9
 43955                           status	equ	0xFD8
 43956                           
 43957 ;; *************** function _USBTransferOnePacket *****************
 43958 ;; Defined at:
 43959 ;;		line 995 in file "usb_device.c"
 43960 ;; Parameters:    Size  Location     Type
 43961 ;;  ep              1    wreg     unsigned char 
 43962 ;;  dir             1    0[COMRAM] unsigned char 
 43963 ;;  data            2    1[COMRAM] PTR unsigned char 
 43964 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 43965 ;;		 -> msd_cbw(31), NULL(0), 
 43966 ;;  len             1    3[COMRAM] unsigned char 
 43967 ;; Auto vars:     Size  Location     Type
 43968 ;;  ep              1    8[COMRAM] unsigned char 
 43969 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 43970 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 43971 ;; Return value:  Size  Location     Type
 43972 ;;                  2    0[COMRAM] PTR void 
 43973 ;; Registers used:
 43974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 43975 ;; Tracked objects:
 43976 ;;		On entry : 0/0
 43977 ;;		On exit  : 0/0
 43978 ;;		Unchanged: 0/0
 43979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43981 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43983 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43984 ;;Total ram usage:       11 bytes
 43985 ;; Hardware stack levels used:    1
 43986 ;; This function calls:
 43987 ;;		Nothing
 43988 ;; This function is called by:
 43989 ;;		_USBMSDInit
 43990 ;;		_USBCheckMSDRequest
 43991 ;;		_MSDTasks
 43992 ;;		_MSDProcessCommandMediaPresent
 43993 ;;		_MSDReadHandler
 43994 ;;		_MSDWriteHandler
 43995 ;;		_MSDTransferTerminated
 43996 ;;		_APP_DeviceCustomHIDInitialize
 43997 ;;		_APP_DeviceCustomHIDTasks
 43998 ;; This function uses a non-reentrant model
 43999 ;;
 44000                           
 44001                           	psect	text233
 44002  004BE4                     __ptext233:
 44003                           	opt stack 0
 44004  004BE4                     _USBTransferOnePacket:
 44005                           	opt stack 27
 44006                           
 44007                           ;incstack = 0
 44008                           ;USBTransferOnePacket@ep stored from wreg
 44009  004BE4  6E09               	movwf	USBTransferOnePacket@ep,c
 44010                           
 44011                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 44012  004BE6  5001               	movf	USBTransferOnePacket@dir,w,c
 44013  004BE8  B4D8               	btfsc	status,2,c
 44014  004BEA  D007               	goto	l183
 44015                           
 44016                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44017  004BEC  5009               	movf	USBTransferOnePacket@ep,w,c
 44018  004BEE  0D02               	mullw	2
 44019  004BF0  0ED1               	movlw	low _pBDTEntryIn
 44020  004BF2  24F3               	addwf	prodl,w,c
 44021  004BF4  6ED9               	movwf	fsr2l,c
 44022  004BF6  0E00               	movlw	high _pBDTEntryIn
 44023  004BF8  D006               	goto	L47
 44024  004BFA                     l183:
 44025                           
 44026                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 44027  004BFA  5009               	movf	USBTransferOnePacket@ep,w,c
 44028  004BFC  0D02               	mullw	2
 44029  004BFE  0E40               	movlw	low _pBDTEntryOut
 44030  004C00  24F3               	addwf	prodl,w,c
 44031  004C02  6ED9               	movwf	fsr2l,c
 44032  004C04  0E01               	movlw	high _pBDTEntryOut
 44033  004C06                     L47:
 44034  004C06  20F4               	addwfc	prodh,w,c
 44035  004C08  6EDA               	movwf	fsr2h,c
 44036  004C0A  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 44037  004C0E  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 44038                           
 44039                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 44040  004C12  500A               	movf	USBTransferOnePacket@handle,w,c
 44041  004C14  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 44042  004C16  A4D8               	btfss	status,2,c
 44043  004C18  D005               	goto	l185
 44044                           
 44045                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 44046  004C1A  0E00               	movlw	0
 44047  004C1C  6E01               	movwf	?_USBTransferOnePacket,c
 44048  004C1E  0E00               	movlw	0
 44049  004C20  6E02               	movwf	?_USBTransferOnePacket+1,c
 44050  004C22  0012               	return	
 44051  004C24                     l185:
 44052                           
 44053                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44054  004C24  EE20 F002          	lfsr	2,2
 44055  004C28  500A               	movf	USBTransferOnePacket@handle,w,c
 44056  004C2A  26D9               	addwf	fsr2l,f,c
 44057  004C2C  500B               	movf	USBTransferOnePacket@handle+1,w,c
 44058  004C2E  22DA               	addwfc	fsr2h,f,c
 44059  004C30  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44060  004C34  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44061                           
 44062                           ;usb_device.c: 1030: handle->CNT = len;
 44063  004C38  EE20 F001          	lfsr	2,1
 44064  004C3C  500A               	movf	USBTransferOnePacket@handle,w,c
 44065  004C3E  26D9               	addwf	fsr2l,f,c
 44066  004C40  500B               	movf	USBTransferOnePacket@handle+1,w,c
 44067  004C42  22DA               	addwfc	fsr2h,f,c
 44068  004C44  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 44069                           
 44070                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44071  004C48  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44072  004C4C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44073  004C50  0E40               	movlw	64
 44074  004C52  16DF               	andwf	indf2,f,c
 44075                           
 44076                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44077  004C54  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44078  004C58  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44079  004C5C  0E00               	movlw	0
 44080  004C5E  86DB               	bsf	plusw2,3,c
 44081                           
 44082                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44083  004C60  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44084  004C64  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44085  004C68  0E00               	movlw	0
 44086  004C6A  8EDB               	bsf	plusw2,7,c
 44087                           
 44088                           ;usb_device.c: 1036: if(dir != 0)
 44089  004C6C  5001               	movf	USBTransferOnePacket@dir,w,c
 44090  004C6E  B4D8               	btfsc	status,2,c
 44091  004C70  D018               	goto	l187
 44092                           
 44093                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 44094  004C72  5009               	movf	USBTransferOnePacket@ep,w,c
 44095  004C74  0D02               	mullw	2
 44096  004C76  0ED1               	movlw	low _pBDTEntryIn
 44097  004C78  24F3               	addwf	prodl,w,c
 44098  004C7A  6ED9               	movwf	fsr2l,c
 44099  004C7C  0E00               	movlw	high _pBDTEntryIn
 44100  004C7E  20F4               	addwfc	prodh,w,c
 44101  004C80  6EDA               	movwf	fsr2h,c
 44102  004C82  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 44103  004C86  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 44104  004C8A  0E04               	movlw	4
 44105  004C8C  1805               	xorwf	??_USBTransferOnePacket,w,c
 44106  004C8E  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 44107  004C90  5006               	movf	??_USBTransferOnePacket+1,w,c
 44108  004C92  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 44109  004C94  5009               	movf	USBTransferOnePacket@ep,w,c
 44110  004C96  0D02               	mullw	2
 44111  004C98  0ED1               	movlw	low _pBDTEntryIn
 44112  004C9A  24F3               	addwf	prodl,w,c
 44113  004C9C  6ED9               	movwf	fsr2l,c
 44114  004C9E  0E00               	movlw	high _pBDTEntryIn
 44115  004CA0  D017               	goto	L48
 44116  004CA2                     l187:
 44117                           
 44118                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 44119  004CA2  5009               	movf	USBTransferOnePacket@ep,w,c
 44120  004CA4  0D02               	mullw	2
 44121  004CA6  0E40               	movlw	low _pBDTEntryOut
 44122  004CA8  24F3               	addwf	prodl,w,c
 44123  004CAA  6ED9               	movwf	fsr2l,c
 44124  004CAC  0E01               	movlw	high _pBDTEntryOut
 44125  004CAE  20F4               	addwfc	prodh,w,c
 44126  004CB0  6EDA               	movwf	fsr2h,c
 44127  004CB2  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 44128  004CB6  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 44129  004CBA  0E04               	movlw	4
 44130  004CBC  1805               	xorwf	??_USBTransferOnePacket,w,c
 44131  004CBE  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 44132  004CC0  5006               	movf	??_USBTransferOnePacket+1,w,c
 44133  004CC2  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 44134  004CC4  5009               	movf	USBTransferOnePacket@ep,w,c
 44135  004CC6  0D02               	mullw	2
 44136  004CC8  0E40               	movlw	low _pBDTEntryOut
 44137  004CCA  24F3               	addwf	prodl,w,c
 44138  004CCC  6ED9               	movwf	fsr2l,c
 44139  004CCE  0E01               	movlw	high _pBDTEntryOut
 44140  004CD0                     L48:
 44141  004CD0  20F4               	addwfc	prodh,w,c
 44142  004CD2  6EDA               	movwf	fsr2h,c
 44143  004CD4  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44144  004CD8  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44145                           
 44146                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 44147  004CDC  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44148  004CE0  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44149  004CE4  0012               	return	
 44150  004CE6                     __end_of_USBTransferOnePacket:
 44151                           	opt stack 0
 44152                           tosu	equ	0xFFF
 44153                           tosh	equ	0xFFE
 44154                           tosl	equ	0xFFD
 44155                           pclath	equ	0xFFA
 44156                           tblptru	equ	0xFF8
 44157                           tblptrh	equ	0xFF7
 44158                           tblptrl	equ	0xFF6
 44159                           tablat	equ	0xFF5
 44160                           prodh	equ	0xFF4
 44161                           prodl	equ	0xFF3
 44162                           intcon	equ	0xFF2
 44163                           intcon2	equ	0xFF1
 44164                           intcon3	equ	0xFF0
 44165                           indf0	equ	0xFEF
 44166                           postinc0	equ	0xFEE
 44167                           fsr0h	equ	0xFEA
 44168                           fsr0l	equ	0xFE9
 44169                           wreg	equ	0xFE8
 44170                           indf1	equ	0xFE7
 44171                           postdec1	equ	0xFE5
 44172                           plusw1	equ	0xFE3
 44173                           fsr1h	equ	0xFE2
 44174                           fsr1l	equ	0xFE1
 44175                           indf2	equ	0xFDF
 44176                           postinc2	equ	0xFDE
 44177                           postdec2	equ	0xFDD
 44178                           plusw2	equ	0xFDB
 44179                           fsr2h	equ	0xFDA
 44180                           fsr2l	equ	0xFD9
 44181                           status	equ	0xFD8
 44182                           tosu	equ	0xFFF
 44183                           tosh	equ	0xFFE
 44184                           tosl	equ	0xFFD
 44185                           pclath	equ	0xFFA
 44186                           tblptru	equ	0xFF8
 44187                           tblptrh	equ	0xFF7
 44188                           tblptrl	equ	0xFF6
 44189                           tablat	equ	0xFF5
 44190                           prodh	equ	0xFF4
 44191                           prodl	equ	0xFF3
 44192                           intcon	equ	0xFF2
 44193                           intcon2	equ	0xFF1
 44194                           intcon3	equ	0xFF0
 44195                           indf0	equ	0xFEF
 44196                           postinc0	equ	0xFEE
 44197                           fsr0h	equ	0xFEA
 44198                           fsr0l	equ	0xFE9
 44199                           wreg	equ	0xFE8
 44200                           indf1	equ	0xFE7
 44201                           postdec1	equ	0xFE5
 44202                           plusw1	equ	0xFE3
 44203                           fsr1h	equ	0xFE2
 44204                           fsr1l	equ	0xFE1
 44205                           indf2	equ	0xFDF
 44206                           postinc2	equ	0xFDE
 44207                           postdec2	equ	0xFDD
 44208                           plusw2	equ	0xFDB
 44209                           fsr2h	equ	0xFDA
 44210                           fsr2l	equ	0xFD9
 44211                           status	equ	0xFD8
 44212                           
 44213                           	psect	text234
 44214  000000                     __ptext234:
 44215                           	opt stack 0
 44216                           tosu	equ	0xFFF
 44217                           tosh	equ	0xFFE
 44218                           tosl	equ	0xFFD
 44219                           pclath	equ	0xFFA
 44220                           tblptru	equ	0xFF8
 44221                           tblptrh	equ	0xFF7
 44222                           tblptrl	equ	0xFF6
 44223                           tablat	equ	0xFF5
 44224                           prodh	equ	0xFF4
 44225                           prodl	equ	0xFF3
 44226                           intcon	equ	0xFF2
 44227                           intcon2	equ	0xFF1
 44228                           intcon3	equ	0xFF0
 44229                           indf0	equ	0xFEF
 44230                           postinc0	equ	0xFEE
 44231                           fsr0h	equ	0xFEA
 44232                           fsr0l	equ	0xFE9
 44233                           wreg	equ	0xFE8
 44234                           indf1	equ	0xFE7
 44235                           postdec1	equ	0xFE5
 44236                           plusw1	equ	0xFE3
 44237                           fsr1h	equ	0xFE2
 44238                           fsr1l	equ	0xFE1
 44239                           indf2	equ	0xFDF
 44240                           postinc2	equ	0xFDE
 44241                           postdec2	equ	0xFDD
 44242                           plusw2	equ	0xFDB
 44243                           fsr2h	equ	0xFDA
 44244                           fsr2l	equ	0xFD9
 44245                           status	equ	0xFD8
 44246                           
 44247                           	psect	rparam
 44248  0000                     tosu	equ	0xFFF
 44249                           tosh	equ	0xFFE
 44250                           tosl	equ	0xFFD
 44251                           pclath	equ	0xFFA
 44252                           tblptru	equ	0xFF8
 44253                           tblptrh	equ	0xFF7
 44254                           tblptrl	equ	0xFF6
 44255                           tablat	equ	0xFF5
 44256                           prodh	equ	0xFF4
 44257                           prodl	equ	0xFF3
 44258                           intcon	equ	0xFF2
 44259                           intcon2	equ	0xFF1
 44260                           intcon3	equ	0xFF0
 44261                           indf0	equ	0xFEF
 44262                           postinc0	equ	0xFEE
 44263                           fsr0h	equ	0xFEA
 44264                           fsr0l	equ	0xFE9
 44265                           wreg	equ	0xFE8
 44266                           indf1	equ	0xFE7
 44267                           postdec1	equ	0xFE5
 44268                           plusw1	equ	0xFE3
 44269                           fsr1h	equ	0xFE2
 44270                           fsr1l	equ	0xFE1
 44271                           indf2	equ	0xFDF
 44272                           postinc2	equ	0xFDE
 44273                           postdec2	equ	0xFDD
 44274                           plusw2	equ	0xFDB
 44275                           fsr2h	equ	0xFDA
 44276                           fsr2l	equ	0xFD9
 44277                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     160
    BANK1           256      0     216
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 40959
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[40959]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 40959
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[40959]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_command_long->__parse_file_rename
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _flash_write_page_from_buffer->__flash_write_page_from_buffer
    __flash_write_page_from_buffer->__flash_is_busy
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2037115
                                             91 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   29687
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   23383
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6079
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  127391
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   57684
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   49282
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   20359
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  102444
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  102444
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   97280
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   49391
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   47633
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   23561
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15973
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13176
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5780
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  726401
                                             87 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   79359
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   55026
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   40834
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   32847
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_buffer                            10     6      4    1135
                                             12 COMRAM    10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_buffer                                 6     0      6     600
                                              6 COMRAM     6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _flash_read_from_buffer                               6     0      6     267
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2777
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    7705
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    7415
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  643729
                                             59 BANK0      6     3      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  556495
                                             56 BANK0      3     1      2
            __parse_buffer_to_sector
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
                __parse_write_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_write_buffer                                  7     5      2    5164
                                             42 COMRAM     7     5      2
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_to_buffer                                  6     0      6    4851
                                             36 COMRAM     6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_to_buffer                                6     0      6    4518
                                             30 COMRAM     6     0      6
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_sector_to_buffer                              5     3      2   47647
                                             83 COMRAM     5     3      2
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_copy_sector_to_buffer                           17    15      2   47401
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_copy_page_to_buffer                            2     0      2    4342
                                             29 COMRAM     2     0      2
         __flash_copy_page_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  3     1      2   17459
                                             38 COMRAM     3     1      2
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   17304
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                   7     5      2   69726
                                             84 COMRAM     7     5      2
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   30111
                                             94 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   29890
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   9     7      2   54011
                                             85 COMRAM     9     7      2
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68225
                                             79 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   68048
                                             76 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   21733
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   7     5      2   72116
                                             88 COMRAM     7     5      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   71800
                                             76 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    6971
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    6795
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  143847
                                             89 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  143604
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   69432
                                             76 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   21999
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 23    19      4   32837
                                             53 COMRAM    23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   15628
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7062
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   53628
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21526
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4163
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7328
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __parse_buffer_to_sector                              5     3      2   47825
                                             83 COMRAM     5     3      2
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_sector_from_buffer                        17    15      2   47579
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
       _flash_write_page_from_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_page_from_buffer                         2     0      2    4520
                                             29 COMRAM     2     0      2
      __flash_write_page_from_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4387
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   13388
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    6705
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    6662
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   15523
                                             55 COMRAM    10     6      4
          __data_sector_from_cluster
           __fat_offset_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    5499
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    7505
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    6433
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __data_sector_from_cluster                            2     0      2     467
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_write_page_from_buffer
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __data_sector_from_cluster
                 __fat_offset_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_buffer_to_sector
         _fat_write_sector_from_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_write_page_from_buffer
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_sector_to_buffer
         _fat_copy_sector_to_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_copy_page_to_buffer
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_write_buffer
         _fat_write_to_buffer
           _flash_write_to_buffer
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_buffer
       _fat_read_from_buffer
         _flash_read_from_buffer
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      31        0.0%
DATA                 0      0     959       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Sep 23 22:51:10 2018

                          __end_of_fat_read_from_file 50C8  
                           ??_internalFlash_getBuffer 0003  
                     __size_of__write_value_to_offset 0034  
                                          _USB_SD_Ptr 9E7B  
                            fat_create_file@extension 004F  
              __end_of_i2c_display_send_init_sequence 89CC  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 89A0  
                        __end_of_fat_read_from_buffer 8CE4  
                                 __system_timer0_init 8C86  
                          flash_read_from_buffer@data 0005  
                                                  _os 00C5  
                                       _USBDeviceInit 3E98  
                                  _USBCheckHIDRequest 5378  
                         ??__data_sector_from_cluster 0003  
                __bootloader_verify_file@return_value 0097  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 0005  
                    __size_of__parse_sector_to_buffer 0088  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 006A  
                                     _fat_resize_file 4DE6  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5E08  
                                                 l210 6AC4  
                                                 l220 4D0E  
                                                 l141 3F06  
                                                 l214 6E60  
                                                 l310 65BA  
                                                 l150 3626  
                                                 l143 3F44  
                                                 l303 8708  
                                                 l151 361C  
                                                 l320 78FE  
                                                 l208 6AAA  
                                                 l224 4D90  
                                                 l304 8706  
                                                 l152 361A  
                                                 l241 5B48  
                                                 l233 5A9C  
                                                 l161 36A2  
                                                 l242 5B10  
                                                 l330 5F46  
                                                 l322 794C  
                                                 l235 5AA6  
                                                 l331 5F0C  
                                                 l251 4454  
                                                 l411 53C6  
                                                 l219 4D66  
                                                 l139 3EDE  
                                                 l171 3732  
                                                 l163 36B8  
                                                 l155 3642  
                                                 l252 443A  
                                                 l412 5394  
                                                 l260 52E0  
                                                 l164 36C4  
                                                 l156 3652  
                                                 l237 5B08  
                                                 l333 5F2C  
                                                 l309 65C0  
                                                 l173 3756  
                                                 l165 36EC  
                                                 l157 365A  
                                                 l238 5AD0  
                                                 l422 53E8  
                                                 l414 53D8  
                         __end_of_USBStdGetDscHandler 4260  
                                                 l262 5354  
                                                 l350 51F4  
                                                 l166 36F8  
                                                 l158 3670  
                                                 l183 4BFA  
                                                 l191 482E  
                                                 l423 5400  
                                                 l415 53B2  
                                                 l271 414C  
                                                 l343 5252  
                                                 l175 3772  
                                                 l159 367C  
                                                 l328 5EC4  
                                                 l248 43DE  
                                                 l424 540C  
                                                 l360 1B6C  
                                                 l272 41DA  
                                                 l352 51FA  
                                                 l344 51C4  
                                                 l168 370A  
                                                 l185 4C24  
                                                 l329 5ECA  
                                                 l249 43BC  
                                                 l521 4BD4  
                                                 l425 5424  
                                                 l361 1B72  
                                                 l281 6650  
                                                 l353 5218  
                                                 l610 7AB8  
                                                 l178 863E  
                                                 l418 5430  
                                                 l530 5F68  
                                                 l274 41E2  
                                                 l282 65DE  
                                                 l354 5234  
                                                 l346 51CE  
                                                 l187 4CA2  
                                                 l603 7AC0  
                                                 l179 864C  
                                                 l371 1C92  
                                                 l363 1BDE  
                                                 l275 4238  
                                                 l347 51D4  
                                                 l620 088E  
                                                 l604 7A84  
                                                 l372 1CAE  
                                                 l268 4248  
                                                 l348 51DA  
                                                 l621 0898  
                                                 l381 1DA6  
                                                 l365 1C26  
                                                 l277 4240  
                                                 l269 4138  
                                                 l285 6666  
                                                 l349 51EE  
                                                 l710 546A  
                                                 l702 1AD6  
                                                 l614 0BE0  
                                                 l630 0A3E  
                                                 l606 7AA0  
                                                 l518 4BDC  
                                                 l534 5FD0  
                                                 l374 1D14  
                                                 l286 65F0  
                                                 l703 1AEE  
                                                 l623 08F0  
                                                 l615 086E  
                                                 l519 4B50  
                                                 l375 1D20  
                                                 l367 1C48  
                                                 l287 65F6  
                                                 l295 8420  
                                                 l712 5480  
                                                 l704 1B08  
                                                 l640 0B08  
                                                 l624 09AA  
                                                 l608 7AAC  
                                                 l800 72A6  
                                                 l376 1D9A  
                                                 l288 6614  
                                                 l296 841E  
                                                 l721 550C  
                                                 l633 0A72  
                                                 l625 09B4  
                                                 l609 7AB2  
                                                 l561 217A  
                                                 l529 6006  
                                                 l369 1CC8  
                                                 l722 54F6  
                                                 l650 0B88  
                                                 l634 0AA0  
                                                 l626 09D4  
                                                 l618 087E  
                                                 l554 2266  
                                                 l562 2164  
                                                 l546 5FD8  
                                                 l810 7298  
                                                 l715 54B0  
                                                 l651 0B9C  
                                                 l571 2196  
                                                 l563 2138  
                                                 l555 203C  
                                                 l379 1D54  
                                                 l644 0B40  
                                                 l636 0AD4  
                                                 l628 0A04  
                                                 l564 2140  
                                                 l804 7274  
                                                 l900 3BD6  
                                                 l661 6C88  
                                                 l741 4A08  
                                                 l733 551E  
                                                 l645 0B54  
                                                 l573 21A8  
                                                 l805 727C  
                                                 l901 3B50  
                                                 l750 4A3C  
                                                 l718 54BC  
                                                 l670 3116  
                                                 l654 0BD8  
                                                 l646 0B72  
                                                 l638 0AF0  
                                                 l566 2158  
                                                 l806 7284  
                                                 l902 3B58  
                                                 l751 4A48  
                                                 l719 54D6  
                                                 l671 3120  
                                                 l575 21CA  
                                                 l559 205C  
                                                 l903 3B60  
                                                 l752 4A5A  
                                                 l680 324E  
                                                 l672 3134  
                                                 l648 0B9E  
                                                 l592 4514  
                                                 l576 21D2  
                                                 l808 728E  
                                                 l904 3B68  
                                                 l753 4A66  
                                                 l737 552E  
                                                 l665 3264  
                                                 l649 0B78  
                                                 l577 21F6  
                                                 l905 3B70  
                                                 l754 4A78  
                                                 l674 317E  
                                                 l666 30B6  
                                                 l690 1938  
                                                 l586 2248  
                                                 l914 7C2E  
                                                 l906 3B78  
                                                 l659 6C72  
                                                 l747 4ABA  
                                                 l755 4AAE  
                                                 l675 31A6  
                                                 l691 1944  
                                                 l907 3B82  
                                                 l748 4A34  
                                                 l668 3288  
                                                 l676 31D6  
                                                 l684 1B1E  
                                                 l692 1964  
                                                 l596 45AC  
                                                 l764 7E9A  
                                                 _BDT 000D00  
                                                 l677 31E8  
                                                 l669 310A  
                                                 l693 19AE  
                                                 l685 1892  
                                                 l597 45A6  
                                                 l589 2250  
                                                 l933 80F6  
                                                 l917 7C54  
                                                 l678 31EE  
                                                 l694 1988  
                                                 l926 8114  
                                                 l918 7C62  
                                                 l679 3202  
                                                 l687 1B42  
                                                 l695 19F4  
                                                 l599 45B0  
                                                 l767 7ED0  
                                                 l935 8102  
                                                 l927 80DA  
                                                 l696 19EC  
                                                 l688 1932  
                                                 l929 80E4  
                                                 l698 1A08  
                                                 l699 1A70  
                                                 l972 66F4  
                                                 l893 3AA4  
                                                 l966 6686  
                                                 l894 3AB2  
                                                 l896 3B3A  
                                                 l898 3B92  
                                                 l899 3B48  
                                                 _LBA 015E  
                                                 _LUN 01B3  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 8C20  
                                   main@tx_start_addr 00BD  
                            __size_of__display_failed 02F6  
                                         _start_line1 9DF4  
                                         _start_line2 9E62  
                                         _start_line3 9EA7  
                                         _start_line4 9E22  
                                  api_prepare@command 00B6  
                                          _USBSuspend 8914  
                       ?_fat_write_sector_from_buffer 0043  
                         flash_read_from_buffer@start 0001  
                                  _internalFlash_read 8714  
                              __end_of_display_update 78EE  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 35FA  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F8  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 46C4  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 014A  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 6B96  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                   __size_of__fill_buffer_read_buffer 00F6  
                        __parse_file_resize@file_size 0058  
                                 api_prepare@inBuffer 00B2  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l2000 183A  
                                                l1008 8E6C  
                                                l1210 706A  
                                                l1203 8344  
                                                l2004 1874  
                                                l2100 4E06  
                                                l1204 8328  
                                                l1300 581E  
                                                l2005 1886  
                                                l2101 4EC2  
                                                l1117 8DC2  
                                                l2110 2384  
                                                l2102 4EBA  
                                                l1302 582E  
                                                l2015 7B52  
                                                l2111 23AC  
                                                l2023 8C08  
                                                l2112 2454  
                                                l2200 7F90  
                                                l2120 5CFC  
                                                l1232 7F1A  
                                                l1304 583E  
                                                l1320 48D8  
                                                l2017 7BA4  
                                                l2025 8C18  
                                                l2201 7F94  
                                                l2121 5D00  
                                                l1233 7EFE  
                                                l1209 7086  
                                                l2042 599E  
                                                l2202 7F98  
                                                l2130 5D24  
                                                l2122 5D04  
                                                l1154 8F98  
                                                l1090 8BCE  
                                                l1306 5856  
                                                l1330 4982  
                                                l3003 6F76  
                                                l2051 5988  
                                                l2131 5D28  
                                                l2123 5D08  
                                                l2211 34DA  
                                                l1091 8BBC  
                                                l1163 8F2C  
                                                l1083 8768  
                                                l1331 49A2  
                                                l1323 48EC  
                                                l2108 22FE  
                                                l2140 1EF0  
                                                l2116 5D40  
                                                l2132 5D2C  
                                                l2124 5D0C  
                                                l2220 352E  
                                                l1084 8772  
                                                l1308 5866  
                                                l1324 4900  
                                                l2109 2496  
                                                l2045 5914  
                                                l2141 1DCE  
                                                l2133 5D30  
                                                l2125 5D10  
                                                l2117 5CF4  
                                                l2213 356A  
                                                l2221 3532  
                                                l1181 8F24  
                                                l2301 89E6  
                                                l1325 4916  
                                                l3006 6FB2  
                                                l2054 782E  
                                                l2150 1E2C  
                                                l2134 5D34  
                                                l2126 5D14  
                                                l2230 3556  
                                                l2222 3536  
                                                l2214 3516  
                                                l1510 0CFC  
                                                l2151 1E3C  
                                                l2143 1DD2  
                                                l2135 5D38  
                                                l2127 5D18  
                                                l2119 5CF8  
                                                l2231 355A  
                                                l2223 353A  
                                                l2215 351A  
                                                l2207 3494  
                                                l1175 8F38  
                                                l2303 89F4  
                                                l1319 49B2  
                                                l1327 493E  
                           ?__fill_buffer_read_buffer 000D  
                                                l2064 85BC  
                                                l2160 1E78  
                                                l2152 1E4C  
                                                l2144 1DD6  
                                                l2136 5D3C  
                                                l2128 5D1C  
                                                l2232 355E  
                                                l2224 353E  
                                                l2216 351E  
                                                l3040 731A  
                                                l1512 0DA8  
                                                l2320 033E  
                                                l1328 4966  
                                                l2161 1E7C  
                                                l2153 1E5C  
                                                l2145 1DDA  
                                                l2129 5D20  
                                                l2233 3562  
                                                l2225 3542  
                                                l2217 3522  
                                                l2209 34A2  
                                                l1169 8F90  
                                                l1601 303E  
                                                l2321 0310  
                                                l2170 1EA0  
                                                l2162 1E80  
                                                l2154 1E60  
                                                l2146 1DEC  
                                                l2234 3566  
                                                l2226 3546  
                                                l2218 3526  
                                                l1514 0E54  
                                                l1602 3006  
                                                l1610 4294  
                                                l2330 048A  
                                                l2314 003E  
                                                l2410 7A44  
                                                l2171 1EA4  
                                                l2163 1E84  
                                                l2155 1E64  
                                                l2147 1DFC  
                                                l2235 35F6  
                                                l2227 354A  
                                                l2219 352A  
                                                l1195 8A36  
                                                l3043 735A  
                                                l1611 4266  
                                                l2091 26C6  
                                                l2083 4FFC  
                                                l2323 039C  
                                                l2180 1EC4  
                                                l2172 1EA8  
                                                l2164 1E88  
                                                l2156 1E68  
                                                l2148 1E0C  
                                                l2228 354E  
                                                l1196 8A28  
                                                l3044 7368  
                                                l1516 0F00  
                                                l1508 0C52  
                                                l1604 3092  
                                                l2092 25B4  
                                                l2420 5A02  
                                                l2324 03C0  
                                                l2316 00B4  
                                                l2404 7A56  
                                                l2244 6816  
                                                l1292 588C  
                                                l2069 6EA0  
                                                l2077 6CF4  
                                                l2181 1EC8  
                                                l2173 1EAC  
                                                l2165 1E8C  
                                                l2157 1E6C  
                                                l2149 1E1C  
                                                l2229 3552  
                                                l1197 8A4A  
                                                l1605 3064  
                                                l1701 7F5C  
                                                l1613 42E8  
                                                l2093 25DC  
                                                l2085 5014  
                                                l2317 0202  
                                                l2413 7A4A  
                                                l2405 7A2C  
                                                l1293 57E4  
                                                l2238 8AF2  
                                                l2190 1EEC  
                                                l2182 1ECC  
                                                l2174 1EB0  
                                                l2166 1E90  
                                                l2158 1E70  
                                                l1198 8A2C  
                                                l1622 37AE  
                                                l1702 7F2E  
                                                l1614 42BA  
                                                l1542 5B8E  
                                                l1550 5B7C  
                                                l2094 2684  
                                                l2086 507A  
                                                l2430 68F6  
                                                l2422 5A58  
                                                l2326 0426  
                                                l2318 0188  
                                                l2079 6D28  
                                                l2183 1ED0  
                                                l2175 1EB4  
                                                l2167 1E94  
                                                l2159 1E74  
                                                l1199 8A30  
                                                l1471 605A  
                                                l1631 38D4  
                                                l1623 3780  
                                                l3039 7326  
                                                l1551 5B82  
                                                l1543 5B58  
                                                l2423 5A5A  
                                                l1800 8C82  
                                                l2184 1ED4  
                                                l2176 1EB8  
                                                l2168 1E98  
                                                l1632 38A6  
                                                l1464 82CE  
                                                l1640 1364  
                                                l1616 433C  
                                                l1552 5B88  
                                                l2424 5A64  
                                                l2328 0458  
                                                l2440 1184  
                                                l2408 7A38  
                                                l2248 6866  
                                                l1296 57F6  
                                                l2185 1ED8  
                                                l2177 1EBC  
                                                l2169 1E9C  
                                                l1625 3802  
                                                l1641 1336  
                                                l1617 430E  
                                                l1553 5BEC  
                                                l1545 5B5E  
                                                l2089 24FC  
                                                l2098 4DF6  
                                                l2194 7F9C  
                                                l2186 1EDC  
                                                l2178 1EC0  
                                                l1474 6080  
                                                l1626 37D4  
                                                l1466 82DA  
                                                l1650 1408  
                                                l1562 2B2C  
                                                l1554 5BD8  
                                                l1546 5B64  
                                                l2418 5A70  
                                                l2442 11E4  
                                                l1298 5806  
                                                l2195 7F80  
                                                l2187 1EE0  
                                                l1643 1536  
                                                l1651 13DA  
                                                l1571 2CC6  
                                                l1563 2AFE  
                                                l1555 5BDE  
                                                l1547 5B6A  
                                                l2419 59AC  
                                                l2443 1216  
                                                l2435 0FD6  
                                                l2276 7662  
                                                l2188 1EE4  
                                                l1476 60A4  
                                                l1628 3880  
                                                l3420 7972  
                                                l1580 3DCE  
                                                l1572 2C98  
                                                l1556 5BE4  
                                                l1548 5B70  
                                                l2460 0660  
                                                l2452 04E2  
                                                l2444 1246  
                                                l2436 0FFA  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 7F84  
                                                l2189 1EE8  
                                                l3501 8546  
                                                l1629 3848  
                                                l3421 7966  
                                                l1645 13B8  
                                                l1637 1310  
                                                l1581 3DA0  
                                                l1565 2B80  
                                                l1557 5C16  
                                                l1549 5B76  
                                                l2701 3C0A  
                                                l2445 12A2  
                                                l1741 74B2  
                                                l1750 8082  
                                                l2278 76C4  
                                                l2198 7F88  
                                                l3502 853E  
                                                l1478 60C8  
                                                l1662 14F8  
                                                l1654 1458  
                                                l1646 138A  
                                                l1638 12E2  
                                                l1566 2B52  
                                                l2710 3CA8  
                                                l2702 3C20  
                                                l2454 057C  
                                                l2438 1092  
                                                l1742 74DE  
                                                l2199 7F8C  
                                                l1663 14CA  
                                                l1655 142A  
                                                l1671 32C2  
                                                l1583 3E22  
                                                l2711 3CBA  
                                                l2703 3C36  
                                                l2551 7438  
                                                l2471 0820  
                                                l2463 069C  
                                                l2455 05F4  
                                                l2447 12C8  
                                                l2439 110A  
                                                l1752 80AA  
                                                l1760 7D92  
                                                l3424 799A  
                                                l1648 1558  
                                                l1592 2F0A  
                                                l1680 341E  
                                                l1672 3294  
                                                l1584 3DF4  
                                                l1568 2C72  
                                                l2712 3CC8  
                                                l2704 3C4C  
                                                l2456 064E  
                                                l2801 573C  
                                                l3505 855E  
                                                l3425 79A8  
                                                l1665 158C  
                                                l1593 2EDC  
                                                l1681 33F0  
                                                l1577 3D7A  
                                                l1569 2C44  
                                                l2713 3CD6  
                                                l2553 7444  
                                                l2465 0746  
                                                l1770 754A  
                                                l3506 8568  
                                                l1690 3950  
                                                l1666 155E  
                                                l1658 14A8  
                                                l1674 3316  
                                                l1586 3E76  
                                                l1578 3D4C  
                                                l2722 5C4A  
                                                l2706 3D1E  
                                                l2714 3CFE  
                                                l2466 080A  
                                                l1659 147A  
                                                l1595 2F5E  
                                                l1675 32E8  
                                                l1587 3E48  
                                                l2707 3C88  
                                                l2299 89DC  
                                                l2459 0854  
                                                l2467 0750  
                                                l1772 7568  
                                                l1692 39D2  
                                                l1596 2F30  
                                                l2724 5CB2  
                                                l2740 62EC  
                                                l2468 07C8  
                                                l1749 80C4  
                                                l1845 773E  
                                                l1837 8022  
                                                l2813 5104  
                                                l1693 39A4  
                                                l1677 336A  
                                                l2725 5C64  
                                                l2741 62B8  
                                                l2709 3C96  
                                                l2469 0804  
                                                l1950 7CCC  
                                                l1686 392A  
                                                l1598 2FB2  
                                                l1678 333C  
                                                l2726 5CE8  
                                                l2718 5C32  
                                                l2750 2EA4  
                                                l2742 62C4  
                                                l2558 8AB4  
                                                l1767 7508  
                                                l1759 7D88  
                                                l1847 77A0  
                                                l2807 820C  
                                                l2831 45F2  
                                                l1695 3A4A  
                                                l1687 38FC  
                                                l1599 2F84  
                                                l2727 5C7C  
                                                l2567 8748  
                                                l1768 7512  
                                                l1952 7D06  
                                                l1696 3A1C  
                                                l2728 5C98  
                                                l2736 6274  
                                                l2825 73B6  
                                                l3705 6248  
                                                l1689 397E  
                                                l2761 6A1E  
                                                l1794 7DE0  
                                                l1786 8286  
                                                l3706 61A2  
                                                l2738 62AE  
                                                l2770 4FA8  
                                                l1795 7DEA  
                                                l1787 8290  
                                                l1971 6190  
                                                l3707 6240  
                                                l2819 77E6  
                                                l2843 719E  
                                                l3491 819C  
                                                l3492 8194  
                                                l2780 638A  
                                                l2748 2E9E  
                                                l1892 8834  
                                                l2837 8460  
                                                l2781 6390  
                                                l2749 2ECC  
                                                l1966 6132  
                                                l2790 5642  
                                                l2774 639C  
                                                l2782 6396  
                                                l2766 2896  
                                                l1983 163C  
                                                l2855 6762  
                                                l2791 5650  
                                                l3495 81BC  
                                                l2775 631A  
                                                l1976 6C22  
                                                l2792 565E  
                                                l3496 81C6  
                                                l1888 8866  
                                                l1977 6BBC  
                                                l2849 7226  
                                                l1969 6186  
                                                l1993 1776  
                                                l2793 566C  
                                                l3681 6956  
                                                l2777 6336  
                                                l1978 6C06  
                                                l1986 1646  
                                                l2786 56B6  
                                                l2794 567A  
                                                l3682 6994  
                                                l2778 6352  
                                                l2698 3C6C  
                                                l2970 8608  
                                                l1995 1784  
                                                l1987 16E6  
                                                l2795 5688  
                                                l2787 5626  
                                                l3675 8512  
                                                l2779 636E  
                                                l2699 3BF4  
                                                l2980 4732  
                                                l1996 178C  
                                                l1988 1696  
                                                l2788 56FC  
                                                l2796 5696  
                                                l1989 17AA  
                                                l2797 56A4  
                                                l2789 5634  
                                                l3693 8A12  
                           ?__offset_from_file_number 0001  
                                                l2974 47BE  
                                                l1998 17FE  
                                                l3694 8A02  
                                                l2975 46C8  
                                                l1999 17F6  
                                                l3687 7A0E  
                                                l3679 691C  
                                                l2967 861A  
                                                l3688 79D0  
                                                l2968 85F6  
                                                l2977 46CE  
                                                l2969 8628  
                                                l2994 7126  
                                                l2988 7E74  
                                                l2997 715A  
                                                STR_1 9FF2  
                                                STR_2 9FF2  
                                                STR_3 9FF2  
                                                STR_4 9FF2  
                                                STR_5 9FF2  
                                                STR_6 9FF2  
                                                STR_7 9FF2  
                               __end_of_checked_line1 9DC4  
                                                STR_8 9FF2  
                               __end_of_checked_line2 9CAE  
                                                STR_9 9FDD  
                               __end_of_checked_line3 9E7B  
                               __end_of_checked_line4 9D43  
                                      _bootloader_run 7A20  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 018D  
                                                u7005 7D9E  
                                                u8010 167C  
                                                u7045 751E  
                                                u8110 184E  
                                                u8030 16F2  
                                                u7135 7DF6  
                                                u8120 185A  
                                                u8040 171A  
                                                u8200 61FA  
                                                u7208 4B70  
                                                u7209 4B82  
                                                u8050 1726  
                                                u8210 6230  
                                                u7330 6046  
                                                u8060 1750  
                                                u7340 606C  
                                                u7244 4BC6  
                                                u7228 4B94  
                                                u7405 8B7A  
                                                u8205 61F4  
                                                u7245 4BC0  
                                                u7229 4BA8  
                                                u7350 6090  
                                                u7510 7976  
                                                u7270 49F4  
                                                u8310 5AF8  
                                                u8207 61EA  
                               ??_USBCtrlTrfTxService 0001  
                                                u7440 6158  
                                                u9120 8C1C  
                                                u9200 599E  
                                                u6720 854A  
                                                u7360 60B4  
                                                u8217 6226  
                                                u8170 7BA0  
                                                u8250 76C0  
                                                u8090 17D8  
                                                u8330 5B38  
                                                u7460 6196  
                                                u8180 61C2  
                                                u6900 7D4A  
                                                u8317 5AEE  
                                                u9310 2324  
                                                u8350 79F0  
                                                u6910 7D56  
                                                u7630 5FB2  
                                                _UCFG 000F39  
                                                u9240 4E40  
                                                u6920 7D60  
                                                u7480 732A  
                                                u8337 5B2E  
                                                u9250 4E72  
                                                u6690 81A0  
                                                u7810 551A  
                                                u8610 1AAA  
                                                u9315 231A  
                                                u8187 61B8  
                                                u9260 4E8E  
                                                u6908 7D4C  
                                                u7900 0D10  
                                                u8428 3158  
                                                u8620 1AAC  
                                                u8508 18EC  
                                                _UEP0 000F26  
                                                u9245 4E36  
                                                u8357 79E6  
                                                u8429 316C  
                                                u8509 1900  
                                                _UEP1 000F27  
                                                u9190 5994  
                                                u6926 7D62  
                                                u6918 7D58  
                                                u6870 7D26  
                                                u8710 8306  
                                                u7910 0DBC  
                                                u7830 552A  
                                    ?_fat_create_file 004D  
                                                u6775 7584  
                                                u9255 4E68  
                                                u8375 30DC  
                                                u6880 7D32  
                                                u7920 0E68  
                                                u7760 54F2  
                                                u6890 7D3E  
                                                u7930 8862  
                                                u9530 41A4  
                                                _UEIE 000F37  
                                                u7940 8830  
                                                u9540 41D4  
                                                u9381 34AC  
                                                u8485 18B8  
                                                u6878 7D28  
                                                u7790 5508  
                                                u8638 1AB2  
                                                u8639 1AC4  
                                                u7960 6BF2  
                                                u6888 7D34  
                                                u8568 19BA  
                                                u9560 422C  
                                                u8569 19CE  
                                                u9537 419A  
                                                u6898 7D40  
                                                u9490 530C  
                                                u9547 41CA  
                                                u9567 4222  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9780 1D3A  
                                                u9950 0B1C  
                                                u9960 0B2E  
                                                u9880 09FC  
                                                u9848 08FC  
                                                u9849 0910  
                                                u9858 092C  
                                                u9859 0940  
                                                u9990 0BA6  
                                                u9898 0A1C  
                                                u9899 0A30  
                               _i2c_digipot_reset_off 8C42  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                        flash_read_from_buffer@length 0003  
                               __size_of__delete_root 0048  
                                      _ResetSenseData 7AE4  
              __end_of__fill_buffer_get_configuration 6B96  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 6AF8  
                     __size_of_flash_read_from_buffer 0002  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0188  
                             fat_write_to_buffer@data 0029  
                                                _main 3A6C  
                                                _itoa 84EE  
                          __end_of_fat_append_to_file 6F26  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5C22  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 6914  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 003F  
                             __bootloader_verify_file 0F98  
                           _ExternalFlash_MediaDetect 8FCE  
                                                prodh 000FF4  
                                                prodl 000FF3  
    __get_available_offset_from_buffer@minimum_offset 0001  
                      fat_modify_file@number_of_bytes 0068  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 8EDA  
                               _display_get_character 8A7C  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 9DB4  
                                __end_of_failed_line2 9D20  
                                __end_of_failed_line4 9E73  
                             __end_of_fat_modify_file 24B8  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 5296  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0039  
                      ??_flash_write_page_from_buffer 0020  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0180  
                    __end_of__fat_sector_from_cluster 8DF4  
                internalFlash_addressFromPage@address 0005  
                              __get_available_cluster 60DC  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 38F6  
                       __write_value_to_offset@buffer 0003  
                                      _hex_file_entry 0193  
                              _bootloader_get_entries 8F5C  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                       __write_value_to_offset@offset 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 88E2  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                __make_cluster_chain@sector_in_buffer 0047  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 017C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 817E  
                                               l11081 54BC  
                                               l11153 8102  
                                               l12141 8C00  
                                               l11149 80E4  
                                               l11183 0C52  
                                               l12219 599E  
                                               l11515 5AA6  
                              ?_i2c_digipot_backlight 0001  
                                               l11429 61A2  
                                               l13071 09CC  
                                               l12185 58F6  
                                               l13225 406A  
                                               l11625 325E  
                                               l11547 79D0  
                                               l13411 29CE  
                                               l11467 8A02  
                                               l13309 6D20  
                             ?__fill_buffer_find_file 0037  
                                               l13423 29F4  
                                               l10873 60FE  
                                               l10865 60E4  
                                               l13433 2A1A  
                                               l13435 2A22  
                                               l10963 53AC  
                                               l14219 747C  
                                               l13461 2A8C  
                                               l12663 34DA  
                                               l12655 34A2  
                                               l13471 2AB2  
                                               l13383 2946  
                                               l11775 82D2  
                                               l14247 67E8  
                                               l10897 6196  
                                               l13297 6CEC  
                                               l12649 3494  
                                               l13473 2ABA  
                                               l13449 2A66  
                                               l13369 2902  
                                               l11769 82C6  
                                               l14265 6838  
                                               l12771 8AF2  
                                               l12755 356A  
                                               l14371 5A02  
                                               l13397 298A  
                                               l14445 743C  
                                               l12839 52D8  
                                               l14439 7430  
                                               l15089 5C92  
                                               l14617 62BC  
                                               l15409 07C8  
                                               l15277 0FF2  
                                               l16271 72F2  
                                               l15535 3702  
                                               l14489 6A16  
                                        spi_tx@length 0003  
                                               l16283 1F08  
                                               l14827 3F3C  
                                               l16285 2020  
                                               l16269 72BE  
                                               l14937 2054  
                                               l14799 3ED6  
                                               l14987 217A  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 6D68  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 9FE9  
                                               STR_11 9FFB  
                                               STR_12 9FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 737A  
                                               ?_utoa 0008  
                                               u10040 4036  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10130 6D1C  
                                               u11020 7222  
                                               u10045 402C  
                                               u10150 6D58  
                                               u10310 2A1A  
                                               u10230 292A  
                                               u10160 24D6  
                                               u10330 2A4A  
                                               u10250 296E  
                                               u10410 6414  
                                               u11050 675E  
                                               u12020 222A  
                                               u10165 24CC  
                                               u12101 89AA  
                                               u10350 2A84  
                                               u10270 29B2  
                                               u10415 640A  
                                               u10440 64C2  
                                               u11224 457C  
                                               u11208 454C  
                                               u11160 44E2  
                                               u11320 686C  
                                               u10185 256E  
                                               u11225 4576  
                                               u11209 455E  
                                               u10370 2AB2  
                                               u10290 29EC  
                                               u11148 44B0  
                                               u11420 59D2  
                                               u11340 00A2  
                                               u12220 1054  
                                               u10445 64B8  
                                               u11149 44C4  
                                               u10390 2AE2  
                                               u11174 44F8  
                                               u11175 44F2  
                                               u11184 452A  
                                               u11440 5A2E  
                                               u12320 053E  
                                               u10625 857E  
                                     __end_of___llmod 79BA  
                                               u11185 4524  
                                               u11505 878C  
                                               u10810 8208  
                              __end_of_USBDeviceTasks 377A  
                                               u11290 681C  
                                               u11515 740A  
                                               u10715 76D6  
                                               u10900 73B2  
                                               u11540 745E  
                                               u12085 822E  
                                               u11630 62EA  
                                               u11710 3FA0  
                                               u10735 8952  
                                               u10840 5100  
                                               u10930 45EE  
                                               u10780 5738  
                                               u11580 2886  
                                               u13237 8BC2  
                                               u10870 77E2  
                                               u11590 4FA0  
                                               u11830 2050  
                                               u13247 809C  
                                               u11495 8D5E  
                                               u10960 845C  
                                               u11680 3EFA  
                                               u12640 3776  
                                               u13257 80AE  
                                               u12730 66A0  
                                               u11850 2084  
                                               u13267 80B8  
                                               u10990 719A  
                                               u12750 66B4  
                                               u12830 4928  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12880 499C  
                                     __end_of___lwdiv 81D0  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 8572  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 0029  
                                _file_minimum_address 0152  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00A5  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00CC  
                      __get_first_cluster@file_number 0038  
                                ?__bootloader_program 0001  
                                        __delete_root 8352  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 007C  
                           __end_of__find_nth_cluster 6C34  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 2284  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5F54  
                     __end_of_internalFlash_getBuffer 8F20  
                     __end_of_USBCtrlEPAllowDataStage 6AF8  
                                               _sd000 9FCC  
                              __write_value_to_offset 87E6  
                                               _sd001 9EE8  
                                               _sd002 9F1C  
                                               _sd003 9F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 7A82  
                 i2c_display_send_init_sequence@F6808 01C7  
                       __end_of_MSDTransferTerminated 7ED2  
                                        _gblCBWLength 018F  
                          __end_of__parse_file_delete 8222  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 73FC  
                          __end_of__parse_file_create 51B4  
                              __end_of_ResetSenseData 7B46  
                          __end_of__parse_file_modify 46C4  
                          __end_of__parse_file_rename 7816  
                           internalFlash_read@address 000E  
                            fat_write_to_buffer@start 0025  
                            __parse_command_long@data 0098  
                           __data_sector_from_cluster 8EE8  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 57E2  
                             ?__fill_buffer_read_file 009E  
                                               pclath 000FFA  
                                     __end_of_ui_init 8E62  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00EC  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 87B2  
                          __end_of__display_rebooting 7F7E  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
            fat_copy_sector_to_buffer@physical_sector 004F  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 6262  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 009E  
                  __fill_buffer_read_buffer@outBuffer 000F  
                          fat_read_from_buffer@length 0009  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 8B1C  
             __fill_buffer_get_file_details@outBuffer 003A  
                                      _MSDReadHandler 30B4  
                     fat_append_to_file@old_file_size 0093  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0060  
               __bootloader_check_address@byte_status 000B  
                         __end_of__make_cluster_chain 1890  
                       internalFlash_readPage@address 0018  
                   __make_cluster_chain@first_cluster 0036  
                                     __initialization 6FBA  
                       fat_read_from_file@file_number 0078  
                            __parse_write_buffer@data 002B  
                           __end_of__flash_get_status 8914  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 8E0C  
               __end_of_ExternalFlash_MediaInitialize 8DAA  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 8D90  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 4EE4  
                                         _FileAddress 0172  
                                        __end_of_main 3BDE  
                                        __end_of_itoa 8530  
                       __end_of_system_encoder_enable 8EAA  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 7F28  
                                        __end_of_utoa 69B8  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 7C66  
                                    _timer_pseudo_isr 874A  
                       fat_read_from_file_fast@offset 0064  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0068  
                                    __end_of_i2c_init 8F02  
                  __size_of_flash_copy_page_to_buffer 001E  
                       fat_read_from_file_fast@sector 0060  
                            __end_of__i2c_acknowledge 8F3E  
                      __end_of__fill_buffer_find_file 6A5A  
                     fat_append_to_file@new_file_size 008E  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00D7  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                              _flash_read_from_buffer 8FD2  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8E38  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 017A  
                                api_prepare@outBuffer 00B4  
                                              ??_main 00BB  
                                    __end_of__i2c_get 8F34  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0076  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00BF  
                            _fat_get_file_information 7656  
                                  __write_root@offset 002D  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 8FCE  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 8FCA  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                  __write_root@sector 002B  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0168  
                               ??__bootloader_program 006E  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                       __get_available_cluster@offset 0032  
                              ?_spi_set_configuration 0001  
             fat_write_sector_from_buffer@file_number 0053  
                       __get_available_cluster@sector 0034  
                fat_copy_sector_to_buffer@file_number 0053  
                                _i2c_eeprom_writeByte 8572  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                  fat_write_sector_from_buffer@sector 0043  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 8BB4  
                              __flash_write_to_buffer 8272  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 28FA  
                                _start_from_byte_next 018B  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 8E0C  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                          ?_fat_copy_sector_to_buffer 0043  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0036  
                                          __i2c_start 8F96  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 830A  
                                _fat_read_from_buffer 8CC6  
                           fat_read_from_file@cluster 0079  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 006E  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7FD4  
                                    __end_of__get_fbr 2030  
                                    __end_of__get_mbr 5DC0  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 328E  
                                 _flash_pages_written 0174  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 6870  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 8ECA  
                   __bootloader_program@page_to_write 00A7  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00F7  
                   fat_append_to_file@number_of_bytes 0056  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 0042  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 747A  
                        __end_of__flash_set_page_size 74F4  
                                     _hexCharsToUint8 8D3E  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 7816  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E8  
                                           ??___lwmod 0005  
                                              _buffer 03C0  
                                   _USBEnableEndpoint 862E  
                       __bootloader_program@address32 00A0  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 79BA  
                                  ?_fat_get_file_size 0036  
                                              _memset 89F8  
                    __end_of__sector_from_file_number 8A7C  
                             __parse_sector_to_buffer 7162  
                                              clear_0 6FF4  
                                              clear_1 7008  
                                              clear_2 701A  
                                              clear_3 7026  
                                              clear_4 7032  
                                              clear_5 703E  
                           _ExternalFlash_SectorWrite 881A  
                                   api_parse@inBuffer 009B  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 9F6E  
                                              _reboot 8DAA  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                   __end_of_flash_copy_page_to_buffer 8D20  
                                              _ui_run 48D6  
                                              _spi_tx 7E24  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 88B0  
              __make_cluster_chain@number_of_clusters 0038  
                                              _tx_buf 01D0  
                                    ?_fat_rename_file 0038  
                          __parse_command_long@length 009A  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0102  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 8A24  
                        __end_of_jump_to_main_program 8FAC  
                               __end_of_fat_find_file 59A2  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 00B4  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 9C98  
                                 __end_of__i2c_open_1 8DDC  
                          __size_of__find_nth_cluster 009E  
                   __fill_buffer_read_buffer@inBuffer 000D  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 7C08  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 7BA8  
                                              tblptru 000FF8  
                                    __end_of_spi_init 862E  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00C1  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 7BA8  
                             __spi_external_rx_buffer 0300  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0044  
                                       main@tx_buffer 00C3  
                         __end_of_fat_write_to_buffer 8D02  
                               ?_fat_read_from_buffer 0007  
                               __end_of_ui_get_status 8FC4  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F6  
                          ??_APP_DeviceCustomHIDTasks 00B7  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0340  
                                   _SYSTEM_Initialize 80D6  
                               fat_modify_file@length 0046  
                               fat_modify_file@offset 0066  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 7044  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                        fat_resize_file@first_cluster 0064  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 8F2A  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00A6  
                         __end_of__parse_command_long 5700  
                   __end_of_failed_line3_noNextRecord 9E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 7884  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 866A  
                    __size_of__parse_buffer_to_sector 0088  
                            _bootloader_get_file_size 8E88  
                 __size_of_ExternalFlash_CapacityRead 0012  
                           fat_read_from_buffer@start 0007  
                                       __end_of_sd000 9FD0  
                                       __end_of_sd001 9F1C  
                                       __end_of_sd002 9F4A  
                                       __end_of_sd003 9FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 8FD4  
                                        __pidataBANK1 8B8E  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 004D  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 8F70  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 8F66  
                           __get_available_root_entry 8BFC  
                                 fat_rename_file@cntr 005E  
                                 fat_rename_file@name 0038  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 003E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 01B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 12DC  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5F54  
                                 _userInterfaceStatus 00E6  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 49DC  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                          flash_write_to_buffer@start 001F  
                           __end_of_i2c_set_frequency 8A50  
                       __size_of__display_programming 01D6  
         fat_write_sector_from_buffer@physical_sector 004F  
                                   __end_of_i2c_reset 8EE8  
                             __end_of_system_delay_ms 8BD8  
                                  __size_of_api_parse 00D0  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0178  
                      __end_of_failed_line3_startCode 9CE9  
                               _communicationSettings 0139  
                                  _flash_sector_write 7FD4  
                                  _fat_read_from_file 4FDA  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 004F  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 0C2A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 086C  
                                        _failed_line1 9DA4  
                                        _failed_line2 9D0E  
                                        _failed_line4 9E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 0190  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 812A  
                                   __end_of__i2c_read 70D6  
                                   __end_of__i2c_send 8FA6  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 65D2  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 8F96  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 006E  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 00C5  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                               _flash_write_to_buffer 8972  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 47CE  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 015A  
                                           ?_i2c_init 0001  
                      __parse_sector_to_buffer@sector 0057  
                    __fill_buffer_read_file@outBuffer 00A0  
                                    _mediaInformation 01AA  
                             __end_of_hexCharsToUint8 8D5A  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                      __get_available_cluster@cluster 0030  
                       __end_of_fat_get_format_status 6870  
                     ??__fill_buffer_get_file_details 003C  
                                       __flash_wakeup 8080  
                            __fill_buffer_get_display 6262  
                             ?__get_available_cluster 002C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00D1  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4DE6  
               __end_of_APP_DeviceCustomHIDInitialize 87E6  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 87B2  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                        __size_of__parse_write_buffer 00A6  
                           __bootloader_check_address 59A2  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                           ??__parse_sector_to_buffer 0056  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 28FA  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 005C  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                            __size_of_fat_delete_file 0040  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 6E92  
                                             ?_memset 0001  
                                          _device_dsc 9FA5  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                      __parse_buffer_to_sector@sector 0057  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 8DC4  
                                    _USBCtrlEPService 6526  
                                             ?_ui_run 0001  
                                          _ep_data_in 016F  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                            __delete_root@file_number 002E  
                       fat_append_to_file@file_number 0097  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 38F6  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 44A4  
                             ?__write_value_to_offset 0001  
                                  _USBCheckStdRequest 51B4  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 9EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0056  
                              fat_append_to_file@data 0058  
                                          _flash_init 8D76  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 5B50  
                                   __end_of__get_data 8AF6  
                                   __end_of__get_date 8F8E  
                                 _USBStdSetCfgHandler 5296  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 8F84  
                                   __end_of__get_root 35FA  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 9D74  
                                          _done_line2 9E9F  
                                          _done_line3 9D64  
                                          _done_line4 9D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                              ??_fat_read_from_buffer 000D  
                     __end_of_bootloader_get_rec_data 8E4E  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0176  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 747A  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 877E  
                                  __get_first_cluster 812A  
                                        __normal_mode 7C08  
                          __end_of_APP_DeviceMSDTasks 8E76  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 8080  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 8EAA  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0096  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 756C  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 74F4  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 9FB7  
                           ?__sector_from_file_number 0001  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                       flash_copy_page_to_buffer@page 001E  
                       fat_read_from_file@return_code 007D  
                                    _system_full_init 7C66  
                                   __read_fat@cluster 0030  
                      __end_of__get_available_cluster 61A0  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0062  
                      __end_of_bootloader_get_entries 8F66  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 5CF2  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 44A4  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 005A  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 81D0  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
           __end_of__get_available_offset_from_buffer 7D1C  
          __size_of__get_available_offset_from_buffer 005A  
                 ??__get_available_offset_from_buffer 0005  
                  ?__get_available_offset_from_buffer 0001  
                   __get_available_offset_from_buffer 7CC2  
                                   __end_of__spi_init 86DC  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 737A  
                                             __Lparam 0000  
                                  __parse_file_create 50C8  
                                _jump_to_main_program 8FA6  
                            __size_of_fat_create_file 013E  
                                   __end_of_hid_rpt01 9F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4AE2  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 45B6  
                             ?_flash_read_from_buffer 0001  
                                  __parse_file_rename 77A8  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 76C8  
                                  __parse_file_resize 5700  
                                          _last_error 018C  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0066  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0380  
                   __end_of__data_sector_from_cluster 8EF6  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 9E98  
                                             ___lldiv 72F8  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 7954  
                                             ___lwdiv 817E  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 8530  
                                   _fast_read_cluster 00FB  
                                  __display_rebooting 7F28  
                         __end_of__parse_format_drive 8468  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0050  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 005A  
                                 ?__parse_file_create 0059  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 86A4  
                                             __pcinit 6FBA  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 9EE8  
                      __end_of__write_value_to_offset 881A  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3A6C  
                                             __ptext1 48D6  
                                     __display_failed 12DC  
                                             __ptext2 8E9A  
                                             __ptext3 89A0  
                                             __ptext4 8C20  
                                             __ptext5 8C42  
                                             __ptext6 8AF6  
                                             __ptext7 57E2  
                                             __ptext8 874A  
                                 ?__parse_file_modify 0056  
                                             __ptext9 8EAA  
                                             _inPipes 00CB  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0060  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EE  
                                 ?__parse_file_resize 0055  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 8CA6  
                                ??__get_first_cluster 0032  
                             __read_value_from_offset 839A  
                             _fat_read_from_file_fast 24B8  
                                        ??_USBSuspend 0018  
                                     __display_search 3D46  
                                  __end_of_USBMSDInit 4BE4  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 8ECA  
                                             _msd_cbw 000D40  
                                     __display_verify 4260  
                                             _msd_csw 000D80  
                            __fill_buffer_read_buffer 4EE4  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8F20  
                            __offset_from_file_number 8B68  
                                             _ui_init 8E4E  
                                          ??_fat_init 0030  
                     __end_of__parse_sector_to_buffer 71EA  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8E38  
                                  __end_of_USB_CD_Ptr 9EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0096  
                              ?_flash_write_to_buffer 001F  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 61A0  
                                 _flash_partial_write 7738  
                         ??_fat_copy_sector_to_buffer 0045  
                                end_of_initialization 7044  
                                ??__parse_file_delete 0052  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 7E7C  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2ED6  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2CE8  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 005C  
                                ??__parse_file_create 005B  
                                  __end_of_USB_SD_Ptr 9E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 00E1  
                                ??__parse_file_modify 0058  
                           __end_of_MSDProcessCommand 45B6  
                                             itoa@buf 0011  
                                ??__parse_file_rename 005F  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 004D  
                                ??__parse_file_resize 0057  
                                     _USB1msTickCount 0162  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 84AC  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
           __fill_buffer_get_file_details@file_number 003D  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                      __end_of_flash_read_from_buffer 8FD4  
                             __parse_buffer_to_sector 71EA  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 8944  
                             _USBCtrlEPAllowDataStage 6A5A  
                                   __end_of_spi_tx_rx 6FBA  
                                   __end_of_spi_tx_tx 7162  
               __end_of__fill_buffer_get_file_details 7656  
              __size_of__fill_buffer_get_file_details 0072  
                       __fill_buffer_get_file_details 75E4  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
        __make_cluster_chain@different_sector_cluster 0040  
                __end_of_ExternalFlash_SectorSizeRead 8F48  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8F3E  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4CE6  
                                             utoa@val 000A  
                                           _MSD_State 00ED  
             __end_of__cluster_from_sector_and_offset 8B68  
            __size_of__cluster_from_sector_and_offset 0026  
                   ??__cluster_from_sector_and_offset 0005  
                    ?__cluster_from_sector_and_offset 0001  
                     __cluster_from_sector_and_offset 8B42  
                         __end_of__bootloader_program 086C  
                               _system_encoder_enable 8E9A  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C4  
                                       ??_api_prepare 0060  
                          _USBStatusStageEnabledFlag1 00F1  
                          _USBStatusStageEnabledFlag2 00F0  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                        __size_of__make_cluster_chain 02BE  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                      __end_of__flash_write_to_buffer 82C2  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       __parse_file_modify@start_byte 005B  
                                   ??_fat_delete_file 004D  
                    __make_cluster_chain@next_cluster 004B  
                              fat_modify_file@cluster 0064  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                     __fill_buffer_find_file@inBuffer 0037  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0250  
                                  _BothEP0OutUOWNsSet 0191  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03C0  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7ED2  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 9DB4  
                                       _checked_line2 9C99  
                                       _checked_line3 9E73  
                                       _checked_line4 9D32  
                                 __delete_root@offset 002B  
                          ??_bootloader_get_file_size 0005  
                 __parse_write_buffer@number_of_bytes 0030  
                                 __delete_root@sector 0029  
                            _failed_line3_dataTooLong 9E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4CE6  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 63CA  
               __end_of_internalFlash_pageFromAddress 8D76  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 8D5A  
                                __end_of_reboot_line1 9E4C  
                                __end_of_search_line1 9DF4  
                                __end_of_search_line2 9D54  
                                __end_of_search_line3 9CD6  
                                __end_of_search_line4 9E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 7B46  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                  __make_cluster_chain@minimum_sector 003E  
                             __end_of__display_failed 15D2  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0062  
                  __find_nth_cluster@sector_in_buffer 003E  
                        fat_resize_file@new_file_size 004D  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 6D68  
                               ??_flash_partial_write 0028  
                        __write_value_to_offset@value 0005  
                       ??_bootloader_get_rec_checksum 0001  
                           _fat_copy_sector_to_buffer 63CA  
                      __bootloader_program@entry_page 0078  
                  fat_copy_sector_to_buffer@file_size 0049  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3E98  
                               __end_of_USBDeviceInit 3FE8  
               __end_of_USBIncrement1msInternalTimers 8CC6  
              __size_of_USBIncrement1msInternalTimers 0020  
                       _USBIncrement1msInternalTimers 8CA6  
                                     ??__display_done 001F  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 438C  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0254  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 48D6  
                                 _i2c_eeprom_readByte 8222  
                                   ??_fat_create_file 0055  
                 __bootloader_program@start_from_byte 00A4  
                  __fill_buffer_read_file@data_length 00AA  
                         __end_of_system_minimal_init 8E22  
                            __size_of_fat_modify_file 0234  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 9CAE  
                                      __end_of_memcpy 7A20  
                                     _MSDRetryAttempt 00E9  
                                      __end_of_memset 8A24  
                                      __end_of_reboot 8DC4  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                          ?_flash_copy_page_to_buffer 001E  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0192  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 49DC  
                                      __end_of_spi_tx 7E7C  
               __get_available_root_entry@file_number 0036  
                                 fat_modify_file@data 0048  
                                 __end_of__ui_encoder 58C2  
                           __flash_set_page_size@size 0018  
                         flash_write_to_buffer@length 0021  
                                 start_initialization 6FBA  
                                 fat_modify_file@root 006E  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                 __parse_write_buffer 6726  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 8EDA  
                                 __end_of_api_prepare 3D46  
                   __end_of__get_available_root_entry 8C20  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0098  
                                     _USBMSDOutHandle 00DF  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 6E92  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1DCC  
                                 __flash_partial_read 756C  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 00E7  
                                      _hexCharToUint8 89CC  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 5E8C  
                            _fast_read_cluster_number 00F9  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 3464  
                            __end_of_USBCtrlEPService 65D2  
                          __size_of_MSDProcessCommand 0112  
                      ??_fat_write_sector_from_buffer 0045  
                                __system_encoder_init 866A  
                                           __i2c_read 704A  
                                           __i2c_send 8F9E  
                           ??__parse_buffer_to_sector 0056  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 8F8E  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                        __size_of_fat_write_to_buffer 001E  
                            ??__fill_buffer_find_file 003B  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 8FCA  
                          __flash_partial_read@length 0018  
                                ?__parse_write_buffer 002B  
                       __end_of_failed_line3_checksum 9E13  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 00E3  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 76C8  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 9D94  
                                   _programming_line2 9CFC  
                                   _programming_line3 9E83  
                                   _programming_line4 9D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                               spi_init@configuration 0004  
                       fat_append_to_file@return_code 0092  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 4126  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B3  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 00E2  
                       __end_of_i2c_digipot_backlight 8B1C  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 8F9E  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0038  
                                  __end_of__i2c_write 8352  
                            __end_of_system_full_init 7CC2  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 00A2  
                      __end_of_USBStdGetStatusHandler 667C  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 00FE  
                            __fat_sector_from_cluster 8DDC  
                         api_parse@receivedDataLength 009D  
                   __end_of__bootloader_check_address 5A7C  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 8972  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 8944  
         fat_copy_sector_to_buffer@number_of_clusters 004D  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 9FCC  
            __get_available_offset_from_buffer@buffer 0003  
                       __end_of_MSDCheckForErrorCases 553C  
             __bootloader_program@address_within_page 007A  
                          fat_create_file@file_number 0064  
                              __end_of_hexCharToUint8 89F8  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0156  
            __get_available_offset_from_buffer@offset 0007  
                  __end_of_flash_command_pagesize_512 9FC8  
                          _flash_command_pagesize_512 9FC4  
                  __end_of_flash_command_pagesize_528 9FC4  
                          _flash_command_pagesize_528 9FC0  
                                      __flash_is_busy 8C64  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 7738  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 9E91  
                                           __get_data 8ACE  
                                           __get_date 8F84  
                                   _flash_sector_read 887E  
                    __bootloader_program@return_value 009C  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 83E0  
                     __end_of_fat_read_from_file_fast 26DE  
                                           __get_time 8F7A  
                                           __get_root 3464  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
                                 __end_of__write_root 84AC  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 8714  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 8BFC  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 83E0  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 003D  
                                           __read_fat 802A  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 9DA4  
                           __end_of_programming_line2 9D0E  
                           __end_of_programming_line3 9E8A  
                           __end_of_programming_line4 9D94  
                    __end_of_ExternalFlash_SectorRead 887E  
                               ??__parse_write_buffer 002D  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 8F7A  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 8F70  
                  __get_available_cluster@skip_sector 002E  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 67CC  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 5C22  
                           fat_create_file@root_entry 0065  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 553C  
                                  _APP_DeviceMSDTasks 8E62  
                                       __pmediumconst 9C98  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 8FCE  
                                           __ptext101 667C  
                                           __ptext110 8E22  
                                           __ptext102 3BDE  
                                           __ptext111 75E4  
                                           __ptext103 26DE  
                                           __ptext200 7CC2  
                                           __ptext120 8FB8  
                                           __ptext112 6262  
                                           __ptext104 4FDA  
                                           __ptext201 8B42  
                                           __ptext121 69B8  
                                           __ptext113 8A7C  
                                           __ptext105 24B8  
                                           __ptext210 6478  
                                           __ptext202 2284  
                                           __ptext130 8B1C  
                                           __ptext122 5C22  
                                           __ptext114 6AF8  
                                           __ptext106 4EE4  
                                           __ptext211 8D20  
                                           __ptext203 7738  
                                           __ptext131 5B50  
                                           __ptext123 6316  
                                           __ptext115 2CE8  
                                           __ptext107 8CC6  
                                           __ptext220 839A  
                                           __ptext212 7DCC  
                                           __ptext204 8272  
                                           __ptext140 8F52  
                                           __ptext132 4260  
                                           __ptext124 8BB4  
                                           __ptext116 8FAC  
                                           __ptext108 8FD2  
                                           __ptext221 802A  
                                           __ptext213 7816  
                                           __ptext205 70D6  
                                           __ptext141 8FC4  
                                           __ptext133 2AF8  
                                           __ptext125 8DAA  
                                           __ptext117 8F48  
                                           __ptext109 553C  
                                           __ptext230 8DDC  
                                           __ptext222 88B0  
                                           __ptext214 7B46  
                                           __ptext206 7D74  
                                           __ptext150 8F70  
                                           __ptext142 8F5C  
                                           __ptext134 3D46  
                                           __ptext126 8FBE  
                                           __ptext118 8E38  
                                           __ptext231 8DF4  
                                           __ptext223 46C4  
                                           __ptext215 812A  
                                           __ptext207 74F4  
                                           __ptext151 6018  
                                           __ptext143 0C2A  
                                           __ptext135 7F28  
                                           __ptext127 7884  
                                           __ptext119 8FB2  
                                           __ptext232 8EE8  
                                           __ptext224 756C  
                                           __ptext216 8A50  
                                           __ptext208 7656  
                                           __ptext160 8F8E  
                                           __ptext152 84EE  
                                           __ptext144 7954  
                                           __ptext136 328E  
                                           __ptext128 7ED2  
                                           __ptext233 4BE4  
                                           __ptext225 8C64  
                                           __ptext217 8B68  
                                           __ptext209 71EA  
                                           __ptext161 8F96  
                                           __ptext153 6914  
                                           __ptext145 72F8  
                                           __ptext137 2ED6  
                                           __ptext129 8BD8  
                                           __ptext234 0000  
                                           __ptext226 8080  
                                           __ptext218 6B96  
                                           __ptext170 8424  
                                           __ptext162 8F9E  
                                           __ptext154 8530  
                                           __ptext146 38F6  
                                           __ptext138 8E88  
                                           __ptext227 7E24  
                                           __ptext219 887E  
                                           __ptext171 28FA  
                                           __ptext163 561E  
                                           __ptext155 817E  
                                           __ptext147 8F66  
                                           __ptext139 12DC  
                                           __ptext228 88E2  
                                           __ptext180 45B6  
                                           __ptext172 3464  
                                           __ptext164 6726  
                                           __ptext156 8572  
                                           __ptext148 82C2  
                                           __ptext229 6F26  
                                           __ptext181 81D0  
                                           __ptext173 5CF2  
                                           __ptext165 8CE4  
                                           __ptext157 8A24  
                                           __ptext149 377A  
                                           __ptext190 8F84  
                                           __ptext182 85B2  
                                           __ptext174 1DCC  
                                           __ptext166 8972  
                                           __ptext158 830A  
                                           __ptext191 8BFC  
                                           __ptext183 8352  
                                           __ptext175 7F7E  
                                           __ptext167 7162  
                                           __ptext159 7D1C  
                                           __ptext192 737A  
                                           __ptext184 50C8  
                                           __ptext176 8ACE  
                                           __ptext168 63CA  
                                           __ptext193 6E92  
                                           __ptext185 3FE8  
                                           __ptext177 5700  
                                           __ptext169 8D02  
                                           __ptext194 4DE6  
                                           __ptext186 79BA  
                                           __ptext178 77A8  
                                           __ptext195 8468  
                                           __ptext187 58C2  
                                           __ptext179 6CD0  
                                           __ptext196 15D2  
                                           __ptext188 61A0  
                                           __ptext197 7FD4  
                                           __ptext189 8F7A  
                                           __ptext198 87E6  
                                           __ptext199 60DC  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 0056  
                                            ?___lwdiv 0001  
                                           __spi_init 86A4  
                          ??__fill_buffer_read_buffer 0011  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                         __size_of_fat_read_from_file 00EE  
                                    ?__display_search 0001  
                                           _hid_rpt01 9F6E  
                                         __ui_encoder 57E2  
                           __get_first_cluster@offset 0034  
                                           _idle_rate 01B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0032  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3BDE  
                             __parse_file_delete@data 0050  
                           fat_modify_file@start_byte 0042  
                     __end_of__parse_buffer_to_sector 7272  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014E  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 004D  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0051  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4BE4  
                          __make_cluster_chain@offset 0049  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                          __make_cluster_chain@sector 0045  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 47CE  
                             ??_flash_write_to_buffer 0025  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6316  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0076  
                              __end_of__flash_is_busy 8C86  
                                       _fat_find_file 58C2  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 007E  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C2A  
                                   __display_itoa_u16 6018  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 7954  
                                   ??_fat_modify_file 004A  
                           __end_of_flash_sector_read 88B0  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 9DE4  
                                 __end_of_found_line2 9CFC  
                                 __end_of_found_line3 9E9F  
                                 __end_of_found_line4 9D32  
                                         _ep_data_out 016C  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8F52  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 8C64  
                       _bootloader_get_rec_dataLength 8F48  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00EA  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 82C2  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
              __cluster_from_sector_and_offset@offset 0003  
                       __size_of_fat_read_from_buffer 001E  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2ED6  
                    __end_of_bootloader_get_file_size 8E9A  
                                         _file_buffer 0290  
              __cluster_from_sector_and_offset@sector 0001  
                                     _config_internal 0169  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 8FBE  
                                     _config_external 0166  
                                      __display_start 2AF8  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                 __make_cluster_chain 15D2  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 8AA6  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 545A  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 003C  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                            ?__parse_sector_to_buffer 0054  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0094  
                            __fat_offset_from_cluster 8DF4  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 0038  
                   __bootloader_verify_file@address32 009B  
                          __end_of_internalFlash_read 874A  
                                          ?_api_parse 009B  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 005A  
                                            _MSDTasks 2030  
                          _USBDeferINDataStagePackets 00EF  
                                        ??_fat_format 0025  
                                     _fat_delete_file 85B2  
                                _active_configuration 018A  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0059  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6DFE  
                          ?__data_sector_from_cluster 0001  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 6F26  
                                           _spi_tx_tx 70D6  
                                __display_verify@cntr 0021  
                                ?__make_cluster_chain 0036  
                     __make_cluster_chain@next_offset 003C  
                    flash_write_page_from_buffer@page 001E  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00DD  
                 __size_of_spi_get_external_tx_buffer 000A  
                               flash_sector_read@data 002A  
                                __display_programming 328E  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 0054  
                           __end_of__display_itoa_u16 60DC  
                           __end_of__display_itoa_u32 0F98  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 9DD4  
                                __end_of_verify_line2 9E59  
                                __end_of_verify_line3 9E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                            fat_rename_file@extension 003A  
                  __size_of_fat_copy_sector_to_buffer 00AE  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F5  
                   __end_of_ExternalFlash_MediaDetect 8FD2  
                        __size_of__parse_format_drive 0044  
                                        _reboot_line1 9E3F  
                                        _search_line1 9DE4  
                                        _search_line2 9D43  
                                        _search_line3 9CC2  
                                        _search_line4 9E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 006A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 6316  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 8468  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 830A  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 8FC4  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 30B4  
                             __end_of_USBStallHandler 8424  
                            __sector_from_file_number 8A50  
                      __end_of_internalFlash_readPage 84EE  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 2CE8  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6FCE  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 0051  
                            __size_of_system_delay_ms 0024  
                __fill_buffer_read_buffer@data_length 0015  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 5378  
                         __size_of__parse_file_delete 0052  
                                  __end_of_fat_format 2AF8  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 00EC  
                                 __display_found@cntr 0028  
                                            _i2c_init 8EF6  
                  __parse_file_modify@number_of_bytes 0059  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 010E  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00EB  
                         __size_of__parse_file_rename 006E  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 00E2  
                      __parse_write_buffer@start_byte 002E  
                                  __end_of_device_dsc 9FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 8F2A  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 3FE8  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0072  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 005C  
                         __end_of_bootloader_filename 9FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 8D90  
                                      _TransferLength 00DB  
                                _bootloader_extension 9FC8  
                           fat_write_to_buffer@length 0027  
                          __end_of_USBCheckMSDRequest 6018  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 884C  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 9D84  
                                  __end_of_done_line2 9EA5  
                                  __end_of_done_line3 9D74  
                                  __end_of_done_line4 9D64  
                                      __i2c_wait_idle 7D1C  
                                     _MSDWriteHandler 1890  
                        fat_create_file@first_cluster 0062  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                               ??__make_cluster_chain 003A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 018E  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 8EBA  
                                         _found_line1 9DD4  
                                         _found_line2 9CE9  
                                         _found_line3 9E98  
                                         _found_line4 9D20  
                                            __get_fat 7F7E  
                                            __get_fbr 1DCC  
                                            __get_mbr 5CF2  
                                __size_of__i2c_open_1 0018  
                         ??_flash_copy_page_to_buffer 0020  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 8E88  
                          _ExternalFlash_CapacityRead 8E76  
                                 _fat_write_to_buffer 8CE4  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 69B8  
                        __size_of__bootloader_program 03D0  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 8EBA  
                    __get_first_cluster@first_cluster 0036  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                   __end_of_fat_copy_sector_to_buffer 6478  
                          __size_of_flash_sector_read 0032  
                                    __display_checked 377A  
               __end_of_bootloader_get_rec_recordType 8FB2  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 8FAC  
                            ??__get_available_cluster 0030  
                                            __ptext10 8EDA  
                                            __ptext11 8E0C  
                                            __ptext20 8EBA  
                                            __ptext12 8EF6  
                                            __ptext21 67CC  
                                            __ptext13 8DC4  
                                            __ptext30 0020  
                                            __ptext22 8C86  
                                            __ptext14 7C66  
                                            __ptext31 8D3E  
                                            __ptext23 866A  
                                            __ptext15 8E4E  
                            fat_read_from_buffer@data 000B  
                                            __ptext40 8AA6  
                                            __ptext32 76C8  
                                            __ptext24 8F02  
                                            __ptext16 8D76  
                                            __ptext41 7BA8  
                                            __ptext33 89CC  
                                            __ptext25 8F0C  
                                            __ptext17 85F2  
                                            __ptext50 8F34  
                                            __ptext42 8944  
                                            __ptext34 73FC  
                                            __ptext26 8FA6  
                                            __ptext18 86A4  
                                            __ptext51 35FA  
                                            __ptext43 59A2  
                                            __ptext35 84AC  
                                            __ptext27 7A20  
                                            __ptext19 747A  
                                            __ptext60 6A5A  
                                            __ptext52 86DC  
                                            __ptext44 6870  
                                            __ptext36 8714  
                                            __ptext28 0F98  
                                            __ptext61 51B4  
                                            __ptext53 8914  
                                            __ptext45 7C08  
                                            __ptext37 8D5A  
                                            __ptext29 049C  
                                            __ptext70 80D6  
                                            __ptext62 5296  
                                            __ptext54 83E0  
                                            __ptext46 8222  
                                            __ptext38 8F16  
                                            __ptext71 7E7C  
                                            __ptext63 89F8  
                                            __ptext55 8CA6  
                                            __ptext47 704A  
                                            __ptext39 877E  
                                            __ptext80 5E8C  
                                            __ptext72 8ECA  
                                            __ptext64 65D2  
                                            __ptext56 3E98  
                                            __ptext48 8F20  
                                            __ptext81 5A7C  
                                            __ptext73 4AE2  
                                            __ptext65 4126  
                                            __ptext57 6526  
                                            __ptext49 8F2A  
                                            __ptext90 30B4  
                                            __ptext82 8E62  
                                            __ptext74 87B2  
                                            __ptext66 1B48  
                                            __ptext58 6D68  
                                            __ptext91 545A  
                                            __ptext83 2030  
                                            __ptext75 862E  
                                            __ptext67 7272  
                                            __ptext59 4CE6  
                                            __ptext92 49DC  
                                            __ptext84 44A4  
                                            __ptext76 6DFE  
                                            __ptext68 5F54  
                                            __ptext93 47CE  
                                            __ptext85 7A82  
                                            __ptext77 78EE  
                                            __ptext69 5378  
                                            __ptext94 7AE4  
                                            __ptext86 086C  
                                            __ptext78 438C  
                                            __ptext95 884C  
                                            __ptext87 1890  
                                            __ptext79 5DC0  
                                            __ptext96 6C34  
                                            __ptext88 8FCA  
                                            __ptext97 8F3E  
                                            __ptext89 881A  
                                            __ptext98 8E76  
                                            __ptext99 8D90  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 7AE4  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 7A82  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                    fat_copy_sector_to_buffer@cluster 0051  
                           flash_write_to_buffer@data 0023  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                __end_of_flash_write_page_from_buffer 8D3E  
               __size_of_flash_write_page_from_buffer 001E  
                        _flash_write_page_from_buffer 8D20  
                             __size_of_bootloader_run 0062  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 561E  
                   __end_of_failed_line3_addressRange 9CC2  
                          ?_ExternalFlash_SectorWrite 0025  
               fat_write_sector_from_buffer@file_size 0049  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 00A0  
                      __size_of__bootloader_find_file 00A4  
                  __end_of__flash_copy_page_to_buffer 7DCC  
                          __flash_copy_page_to_buffer 7D74  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 6726  
                       __end_of__bootloader_find_file 6914  
                        __end_of_i2c_digipot_reset_on 8C42  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 80D6  
                      __end_of_USBCtrlTrfSetupHandler 6DFE  
                                       __size_of_main 0172  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 9F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 85F2  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 26DE  
                         __end_of_flash_partial_write 77A8  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                                ?_fat_write_to_buffer 0025  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 0066  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 839A  
                    __size_of__bootloader_verify_file 0344  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 8FB8  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 8FB2  
                      __fill_buffer_read_buffer@start 0013  
                                 _USBCtrlTrfInHandler 5E8C  
                  _MSDProcessCommandMediaPresent$2390 003C  
                            ??__write_value_to_offset 0007  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 009E  
                              __end_of__i2c_wait_idle 7D74  
               fat_resize_file@old_number_of_clusters 0060  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 85F2  
                    __end_of__fill_buffer_read_buffer 4FDA  
                                _USBCtrlTrfOutHandler 78EE  
                    __end_of__offset_from_file_number 8B8E  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 5DC0  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 8F16  
                                ?__parse_command_long 0098  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
              __make_cluster_chain@remaining_clusters 0043  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3A6C  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00F2  
                  __end_of_spi_get_external_rx_buffer 8F16  
                          _spi_get_external_rx_buffer 8F0C  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 561E  
                             __parse_file_modify@data 0056  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 8ACE  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 8AA6  
                             _internalFlash_erasePage 877E  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8F0C  
                          _spi_get_external_tx_buffer 8F02  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 007B  
                __end_of_MSDComputeDeviceInAndResidue 6CD0  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 6C34  
                          fat_modify_file@return_code 0063  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 9E04  
                                 __end_of_start_line2 9E6B  
                                 __end_of_start_line3 9EA8  
                                 __end_of_start_line4 9E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                          fat_rename_file@return_code 003C  
                                       _flash_is_busy 8E22  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8F34  
                              bootloader_run@timeslot 005C  
                             __end_of_fat_create_file 4126  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                            ??_flash_read_from_buffer 0007  
                         __size_of__root_is_available 0062  
                             __parse_file_rename@data 0060  
                              __size_of_USBDeviceInit 0150  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 72F8  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 7272  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 884C  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 7E24  
              __size_of__flash_write_page_from_buffer 0058  
                       ?_flash_write_page_from_buffer 001E  
                       __flash_write_page_from_buffer 7DCC  
                 fat_write_sector_from_buffer@cluster 0051  
                           _flash_copy_page_to_buffer 8D02  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               ??_fat_write_to_buffer 002B  
                        fat_read_from_file@start_byte 006E  
                                     _display_content 0200  
                     fat_copy_sector_to_buffer@sector 0043  
      fat_write_sector_from_buffer@number_of_clusters 004D  
                          __end_of_flash_partial_read 88E2  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1B48  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                             __write_root@file_number 002F  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 8FBE  
                         _bootloader_get_rec_checksum 8FB8  
                        __parse_sector_to_buffer@data 0054  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                                 fat_resize_file@root 0067  
                        __bootloader_verify_file@root 0076  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                        __parse_buffer_to_sector@data 0054  
                                     _display_prepare 5B50  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 9E04  
                                 _USBCtrlTrfRxService 438C  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 86DC  
                               ??__parse_command_long 0060  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 8BD8  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1B48  
                                     _fat_modify_file 2284  
                        __fill_buffer_read_file@start 00AE  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 5A7C  
                                        ?_api_prepare 00B2  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                __end_of_fat_write_sector_from_buffer 6526  
               __size_of_fat_write_sector_from_buffer 00AE  
                        _fat_write_sector_from_buffer 6478  
                                     _gblMediaPresent 0182  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 8AF6  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 9E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8F5C  
                          _bootloader_get_rec_address 8F52  
                               _USBAlternateInterface 01AF  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 8272  
                          __delete_root@deleted_value 002D  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0186  
                    __make_cluster_chain@data_changed 0042  
                             __parse_file_resize@data 0055  
                           _failed_line3_noNextRecord 9E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 6CD0  
                      __size_of_flash_write_to_buffer 002E  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F4  
                                      _display_update 7884  
                       __end_of_flash_write_to_buffer 89A0  
                                      ??__normal_mode 0019  
                 __get_available_cluster@first_sector 002C  
                                      ?_flash_is_busy 0001  
                     __size_of__get_available_cluster 00C4  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 9CD6  
                            ?__parse_buffer_to_sector 0054  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 545A  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 8B42  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0184  
                             _internalFlash_writePage 73FC  
                         __end_of__parse_write_buffer 67CC  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4AE2  
                        _USBStatusStageTimeoutCounter 00F3  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 75E4  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 85B2  
                                        _verify_line1 9DC4  
                                        _verify_line2 9E4C  
                                        _verify_line3 9E8A  
                                 __parse_format_drive 8424  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr 9EA5  
                                         _power_state 00E5  
                                         _USBInHandle 017E  
                            _APP_DeviceCustomHIDTasks 667C  
                          __end_of_flash_sector_write 802A  
