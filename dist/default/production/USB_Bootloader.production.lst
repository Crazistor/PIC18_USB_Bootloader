

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 08 23:49:58 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   214                           	dabs	1,0x600,512,_msd_buffer
   215                           	dabs	1,0xD00,48,_BDT
   216                           	dabs	1,0xD40,31,_msd_cbw
   217                           	dabs	1,0xD80,13,_msd_csw
   218                           	dabs	1,0xD38,8,_CtrlTrfData
   219                           	dabs	1,0xD30,8,_SetupPkt
   220  0000                     
   221                           ; Version 1.42
   222                           ; Generated 13/04/2017 GMT
   223                           ; 
   224                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   225                           ; All rights reserved.
   226                           ; 
   227                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   228                           ; 
   229                           ; Redistribution and use in source and binary forms, with or without modification, are
   230                           ; permitted provided that the following conditions are met:
   231                           ; 
   232                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   233                           ;        conditions and the following disclaimer.
   234                           ; 
   235                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   236                           ;        of conditions and the following disclaimer in the documentation and/or other
   237                           ;        materials provided with the distribution.
   238                           ; 
   239                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   240                           ;        software without specific prior written permission.
   241                           ; 
   242                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   243                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   244                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   245                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   246                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   247                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   248                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   249                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   250                           ; 
   251                           ; 
   252                           ; Code-generator required, PIC18F47J53 Definitions
   253                           ; 
   254                           ; SFR Addresses
   255  0000                     
   256                           	psect	intcode
   257  000008  EF04 F040          	goto	32776	;# 
   258                           
   259                           	psect	intcodelo
   260  000018  EF0C F040          	goto	32792	; ;# 
   261  0000                     
   262                           	psect	idataBANK0
   263  0078FC                     __pidataBANK0:
   264                           	opt stack 0
   265                           
   266                           ;initializer for _file_number
   267  0078FC  FF                 	db	255
   268                           
   269                           	psect	idataBANK1
   270  00700C                     __pidataBANK1:
   271                           	opt stack 0
   272                           
   273                           ;initializer for _LUN
   274  00700C  40                 	db	low _ExternalFlash_MediaInitialize
   275  00700D  76                 	db	high _ExternalFlash_MediaInitialize
   276  00700E  1A                 	db	low _ExternalFlash_CapacityRead
   277  00700F  78                 	db	high _ExternalFlash_CapacityRead
   278  007010  C6                 	db	low _ExternalFlash_SectorSizeRead
   279  007011  78                 	db	high _ExternalFlash_SectorSizeRead
   280  007012  F8                 	db	low _ExternalFlash_MediaDetect
   281  007013  78                 	db	high _ExternalFlash_MediaDetect
   282  007014  24                 	db	low _ExternalFlash_SectorRead
   283  007015  73                 	db	high _ExternalFlash_SectorRead
   284  007016  F4                 	db	low _ExternalFlash_WriteProtectStateGet
   285  007017  78                 	db	high _ExternalFlash_WriteProtectStateGet
   286  007018  F2                 	db	low _ExternalFlash_SectorWrite
   287  007019  72                 	db	high _ExternalFlash_SectorWrite
   288  00701A  00                 	db	0
   289  00701B  00                 	db	0
   290  00701C  00                 	db	0
   291  00701D  00                 	db	0
   292  00701E  00                 	db	0
   293  00701F  00                 	db	0
   294                           
   295                           ;initializer for i2c_display_init@F8323
   296  007020  3A                 	db	58
   297  007021  1E                 	db	30
   298  007022  39                 	db	57
   299  007023  0C                 	db	12
   300  007024  74                 	db	116
   301  007025  5C                 	db	92
   302  007026  6D                 	db	109
   303  007027  0C                 	db	12
   304  007028  01                 	db	1
   305                           
   306                           ;initializer for i2c_display_send_init_sequence@F8320
   307  007029  3A                 	db	58
   308  00702A  1E                 	db	30
   309  00702B  39                 	db	57
   310  00702C  0C                 	db	12
   311  00702D  74                 	db	116
   312  00702E  5C                 	db	92
   313  00702F  6D                 	db	109
   314  007030  0C                 	db	12
   315  007031  01                 	db	1
   316                           
   317                           ;initializer for system_init@F8463
   318  007032  4E                 	db	78
   319  007033  45                 	db	69
   320  007034  57                 	db	87
   321  007035  46                 	db	70
   322  007036  49                 	db	73
   323  007037  4C                 	db	76
   324  007038  45                 	db	69
   325  007039  20                 	db	32
   326  00703A  00                 	db	0
   327                           
   328                           ;initializer for system_init@F8459
   329  00703B  54                 	db	84
   330  00703C  45                 	db	69
   331  00703D  53                 	db	83
   332  00703E  54                 	db	84
   333  00703F  20                 	db	32
   334  007040  20                 	db	32
   335  007041  20                 	db	32
   336  007042  20                 	db	32
   337  007043  00                 	db	0
   338                           
   339                           ;initializer for system_init@F8465
   340  007044  54                 	db	84
   341  007045  58                 	db	88
   342  007046  54                 	db	84
   343  007047  00                 	db	0
   344                           
   345                           ;initializer for system_init@F8461
   346  007048  54                 	db	84
   347  007049  58                 	db	88
   348  00704A  54                 	db	84
   349  00704B  00                 	db	0
   350                           
   351                           	psect	idataBANK3
   352  006562                     __pidataBANK3:
   353                           	opt stack 0
   354                           
   355                           ;initializer for system_init@F8467
   356  006562  4A                 	db	74
   357  006563  75                 	db	117
   358  006564  73                 	db	115
   359  006565  74                 	db	116
   360  006566  20                 	db	32
   361  006567  61                 	db	97
   362  006568  70                 	db	112
   363  006569  70                 	db	112
   364  00656A  65                 	db	101
   365  00656B  6E                 	db	110
   366  00656C  64                 	db	100
   367  00656D  65                 	db	101
   368  00656E  64                 	db	100
   369  00656F  20                 	db	32
   370  006570  74                 	db	116
   371  006571  68                 	db	104
   372  006572  69                 	db	105
   373  006573  73                 	db	115
   374  006574  20                 	db	32
   375  006575  74                 	db	116
   376  006576  65                 	db	101
   377  006577  78                 	db	120
   378  006578  74                 	db	116
   379  006579  21                 	db	33
   380  00657A  20                 	db	32
   381  00657B  4E                 	db	78
   382  00657C  6F                 	db	111
   383  00657D  77                 	db	119
   384  00657E  20                 	db	32
   385  00657F  74                 	db	116
   386  006580  68                 	db	104
   387  006581  69                 	db	105
   388  006582  73                 	db	115
   389  006583  20                 	db	32
   390  006584  69                 	db	105
   391  006585  73                 	db	115
   392  006586  20                 	db	32
   393  006587  73                 	db	115
   394  006588  75                 	db	117
   395  006589  70                 	db	112
   396  00658A  65                 	db	101
   397  00658B  72                 	db	114
   398  00658C  2D                 	db	45
   399  00658D  6C                 	db	108
   400  00658E  6F                 	db	111
   401  00658F  6E                 	db	110
   402  006590  67                 	db	103
   403  006591  2E                 	db	46
   404  006592  20                 	db	32
   405  006593  69                 	db	105
   406  006594  74                 	db	116
   407  006595  20                 	db	32
   408  006596  67                 	db	103
   409  006597  6F                 	db	111
   410  006598  65                 	db	101
   411  006599  73                 	db	115
   412  00659A  20                 	db	32
   413  00659B  6F                 	db	111
   414  00659C  6E                 	db	110
   415  00659D  20                 	db	32
   416  00659E  61                 	db	97
   417  00659F  6E                 	db	110
   418  0065A0  64                 	db	100
   419  0065A1  20                 	db	32
   420  0065A2  6F                 	db	111
   421  0065A3  6E                 	db	110
   422  0065A4  20                 	db	32
   423  0065A5  61                 	db	97
   424  0065A6  6E                 	db	110
   425  0065A7  64                 	db	100
   426  0065A8  20                 	db	32
   427  0065A9  6F                 	db	111
   428  0065AA  6E                 	db	110
   429  0065AB  20                 	db	32
   430  0065AC  2E                 	db	46
   431  0065AD  2E                 	db	46
   432  0065AE  2E                 	db	46
   433  0065AF  20                 	db	32
   434  0065B0  62                 	db	98
   435  0065B1  75                 	db	117
   436  0065B2  74                 	db	116
   437  0065B3  20                 	db	32
   438  0065B4  66                 	db	102
   439  0065B5  69                 	db	105
   440  0065B6  6E                 	db	110
   441  0065B7  61                 	db	97
   442  0065B8  6C                 	db	108
   443  0065B9  6C                 	db	108
   444  0065BA  79                 	db	121
   445  0065BB  20                 	db	32
   446  0065BC  69                 	db	105
   447  0065BD  74                 	db	116
   448  0065BE  20                 	db	32
   449  0065BF  65                 	db	101
   450  0065C0  6E                 	db	110
   451  0065C1  64                 	db	100
   452  0065C2  73                 	db	115
   453  0065C3  20                 	db	32
   454  0065C4  48                 	db	72
   455  0065C5  45                 	db	69
   456  0065C6  52                 	db	82
   457  0065C7  45                 	db	69
   458  0065C8  2E                 	db	46
   459  0065C9  00                 	db	0
   460                           
   461                           	psect	mediumconst
   462  008CEC                     __pmediumconst:
   463                           	opt stack 0
   464  008CEC  00                 	db	0
   465  008CED                     _checked_line2:
   466                           	opt stack 0
   467  008CED  46                 	db	70
   468  008CEE  69                 	db	105
   469  008CEF  6C                 	db	108
   470  008CF0  65                 	db	101
   471  008CF1  20                 	db	32
   472  008CF2  63                 	db	99
   473  008CF3  68                 	db	104
   474  008CF4  65                 	db	101
   475  008CF5  63                 	db	99
   476  008CF6  6B                 	db	107
   477  008CF7  20                 	db	32
   478  008CF8  63                 	db	99
   479  008CF9  6F                 	db	111
   480  008CFA  6D                 	db	109
   481  008CFB  70                 	db	112
   482  008CFC  6C                 	db	108
   483  008CFD  65                 	db	101
   484  008CFE  74                 	db	116
   485  008CFF  65                 	db	101
   486  008D00  64                 	db	100
   487  008D01  00                 	db	0
   488  008D02                     __end_of_checked_line2:
   489                           	opt stack 0
   490  008D02                     _failed_line3_addressRange:
   491                           	opt stack 0
   492  008D02  41                 	db	65
   493  008D03  64                 	db	100
   494  008D04  64                 	db	100
   495  008D05  72                 	db	114
   496  008D06  2E                 	db	46
   497  008D07  20                 	db	32
   498  008D08  6F                 	db	111
   499  008D09  75                 	db	117
   500  008D0A  74                 	db	116
   501  008D0B  73                 	db	115
   502  008D0C  69                 	db	105
   503  008D0D  64                 	db	100
   504  008D0E  65                 	db	101
   505  008D0F  20                 	db	32
   506  008D10  72                 	db	114
   507  008D11  61                 	db	97
   508  008D12  6E                 	db	110
   509  008D13  67                 	db	103
   510  008D14  65                 	db	101
   511  008D15  00                 	db	0
   512  008D16                     __end_of_failed_line3_addressRange:
   513                           	opt stack 0
   514  008D16                     _start_line3:
   515                           	opt stack 0
   516  008D16  46                 	db	70
   517  008D17  49                 	db	73
   518  008D18  52                 	db	82
   519  008D19  4D                 	db	77
   520  008D1A  57                 	db	87
   521  008D1B  41                 	db	65
   522  008D1C  52                 	db	82
   523  008D1D  45                 	db	69
   524  008D1E  2E                 	db	46
   525  008D1F  48                 	db	72
   526  008D20  45                 	db	69
   527  008D21  58                 	db	88
   528  008D22  20                 	db	32
   529  008D23  6F                 	db	111
   530  008D24  6E                 	db	110
   531  008D25  20                 	db	32
   532  008D26  55                 	db	85
   533  008D27  53                 	db	83
   534  008D28  42                 	db	66
   535  008D29  00                 	db	0
   536  008D2A                     __end_of_start_line3:
   537                           	opt stack 0
   538  008D2A                     _failed_line3_startCode:
   539                           	opt stack 0
   540  008D2A  4D                 	db	77
   541  008D2B  69                 	db	105
   542  008D2C  73                 	db	115
   543  008D2D  73                 	db	115
   544  008D2E  69                 	db	105
   545  008D2F  6E                 	db	110
   546  008D30  67                 	db	103
   547  008D31  20                 	db	32
   548  008D32  73                 	db	115
   549  008D33  74                 	db	116
   550  008D34  61                 	db	97
   551  008D35  72                 	db	114
   552  008D36  74                 	db	116
   553  008D37  20                 	db	32
   554  008D38  63                 	db	99
   555  008D39  6F                 	db	111
   556  008D3A  64                 	db	100
   557  008D3B  65                 	db	101
   558  008D3C  00                 	db	0
   559  008D3D                     __end_of_failed_line3_startCode:
   560                           	opt stack 0
   561  008D3D                     _found_line2:
   562                           	opt stack 0
   563  008D3D  46                 	db	70
   564  008D3E  49                 	db	73
   565  008D3F  52                 	db	82
   566  008D40  4D                 	db	77
   567  008D41  57                 	db	87
   568  008D42  41                 	db	65
   569  008D43  52                 	db	82
   570  008D44  45                 	db	69
   571  008D45  2E                 	db	46
   572  008D46  48                 	db	72
   573  008D47  45                 	db	69
   574  008D48  58                 	db	88
   575  008D49  20                 	db	32
   576  008D4A  66                 	db	102
   577  008D4B  6F                 	db	111
   578  008D4C  75                 	db	117
   579  008D4D  6E                 	db	110
   580  008D4E  64                 	db	100
   581  008D4F  00                 	db	0
   582  008D50                     __end_of_found_line2:
   583                           	opt stack 0
   584  008D50                     _programming_line2:
   585                           	opt stack 0
   586  008D50  50                 	db	80
   587  008D51  72                 	db	114
   588  008D52  6F                 	db	111
   589  008D53  67                 	db	103
   590  008D54  72                 	db	114
   591  008D55  61                 	db	97
   592  008D56  6D                 	db	109
   593  008D57  6D                 	db	109
   594  008D58  69                 	db	105
   595  008D59  6E                 	db	110
   596  008D5A  67                 	db	103
   597  008D5B  20                 	db	32
   598  008D5C  66                 	db	102
   599  008D5D  6C                 	db	108
   600  008D5E  61                 	db	97
   601  008D5F  73                 	db	115
   602  008D60  68                 	db	104
   603  008D61  00                 	db	0
   604  008D62                     __end_of_programming_line2:
   605                           	opt stack 0
   606  008D62                     _failed_line2:
   607                           	opt stack 0
   608  008D62  46                 	db	70
   609  008D63  69                 	db	105
   610  008D64  6C                 	db	108
   611  008D65  65                 	db	101
   612  008D66  20                 	db	32
   613  008D67  63                 	db	99
   614  008D68  68                 	db	104
   615  008D69  65                 	db	101
   616  008D6A  63                 	db	99
   617  008D6B  6B                 	db	107
   618  008D6C  20                 	db	32
   619  008D6D  66                 	db	102
   620  008D6E  61                 	db	97
   621  008D6F  69                 	db	105
   622  008D70  6C                 	db	108
   623  008D71  65                 	db	101
   624  008D72  64                 	db	100
   625  008D73  00                 	db	0
   626  008D74                     __end_of_failed_line2:
   627                           	opt stack 0
   628  008D74                     _found_line4:
   629                           	opt stack 0
   630  008D74  50                 	db	80
   631  008D75  72                 	db	114
   632  008D76  65                 	db	101
   633  008D77  73                 	db	115
   634  008D78  73                 	db	115
   635  008D79  20                 	db	32
   636  008D7A  74                 	db	116
   637  008D7B  6F                 	db	111
   638  008D7C  20                 	db	32
   639  008D7D  75                 	db	117
   640  008D7E  73                 	db	115
   641  008D7F  65                 	db	101
   642  008D80  20                 	db	32
   643  008D81  66                 	db	102
   644  008D82  69                 	db	105
   645  008D83  6C                 	db	108
   646  008D84  65                 	db	101
   647  008D85  00                 	db	0
   648  008D86                     __end_of_found_line4:
   649                           	opt stack 0
   650  008D86                     _checked_line4:
   651                           	opt stack 0
   652  008D86  50                 	db	80
   653  008D87  72                 	db	114
   654  008D88  65                 	db	101
   655  008D89  73                 	db	115
   656  008D8A  73                 	db	115
   657  008D8B  20                 	db	32
   658  008D8C  74                 	db	116
   659  008D8D  6F                 	db	111
   660  008D8E  20                 	db	32
   661  008D8F  70                 	db	112
   662  008D90  72                 	db	114
   663  008D91  6F                 	db	111
   664  008D92  67                 	db	103
   665  008D93  72                 	db	114
   666  008D94  61                 	db	97
   667  008D95  6D                 	db	109
   668  008D96  00                 	db	0
   669  008D97                     __end_of_checked_line4:
   670                           	opt stack 0
   671  008D97                     _start_line2:
   672                           	opt stack 0
   673  008D97  4C                 	db	76
   674  008D98  6F                 	db	111
   675  008D99  6F                 	db	111
   676  008D9A  6B                 	db	107
   677  008D9B  69                 	db	105
   678  008D9C  6E                 	db	110
   679  008D9D  67                 	db	103
   680  008D9E  20                 	db	32
   681  008D9F  66                 	db	102
   682  008DA0  6F                 	db	111
   683  008DA1  72                 	db	114
   684  008DA2  20                 	db	32
   685  008DA3  66                 	db	102
   686  008DA4  69                 	db	105
   687  008DA5  6C                 	db	108
   688  008DA6  65                 	db	101
   689  008DA7  00                 	db	0
   690  008DA8                     __end_of_start_line2:
   691                           	opt stack 0
   692  008DA8                     _start_line1:
   693                           	opt stack 0
   694  008DA8  42                 	db	66
   695  008DA9  6F                 	db	111
   696  008DAA  6F                 	db	111
   697  008DAB  74                 	db	116
   698  008DAC  6C                 	db	108
   699  008DAD  6F                 	db	111
   700  008DAE  61                 	db	97
   701  008DAF  64                 	db	100
   702  008DB0  65                 	db	101
   703  008DB1  72                 	db	114
   704  008DB2  20                 	db	32
   705  008DB3  4D                 	db	77
   706  008DB4  6F                 	db	111
   707  008DB5  64                 	db	100
   708  008DB6  65                 	db	101
   709  008DB7  00                 	db	0
   710  008DB8  00                 	db	0
   711  008DB9                     __end_of_start_line1:
   712                           	opt stack 0
   713  008DB9                     _done_line1:
   714                           	opt stack 0
   715  008DB9  42                 	db	66
   716  008DBA  6F                 	db	111
   717  008DBB  6F                 	db	111
   718  008DBC  74                 	db	116
   719  008DBD  6C                 	db	108
   720  008DBE  6F                 	db	111
   721  008DBF  61                 	db	97
   722  008DC0  64                 	db	100
   723  008DC1  65                 	db	101
   724  008DC2  72                 	db	114
   725  008DC3  20                 	db	32
   726  008DC4  4D                 	db	77
   727  008DC5  6F                 	db	111
   728  008DC6  64                 	db	100
   729  008DC7  65                 	db	101
   730  008DC8  00                 	db	0
   731  008DC9                     __end_of_done_line1:
   732                           	opt stack 0
   733  008DC9                     _programming_line4:
   734                           	opt stack 0
   735  008DC9  50                 	db	80
   736  008DCA  61                 	db	97
   737  008DCB  67                 	db	103
   738  008DCC  65                 	db	101
   739  008DCD  73                 	db	115
   740  008DCE  20                 	db	32
   741  008DCF  77                 	db	119
   742  008DD0  72                 	db	114
   743  008DD1  69                 	db	105
   744  008DD2  74                 	db	116
   745  008DD3  74                 	db	116
   746  008DD4  65                 	db	101
   747  008DD5  6E                 	db	110
   748  008DD6  3A                 	db	58
   749  008DD7  20                 	db	32
   750  008DD8  00                 	db	0
   751  008DD9                     __end_of_programming_line4:
   752                           	opt stack 0
   753  008DD9                     _programming_line1:
   754                           	opt stack 0
   755  008DD9  42                 	db	66
   756  008DDA  6F                 	db	111
   757  008DDB  6F                 	db	111
   758  008DDC  74                 	db	116
   759  008DDD  6C                 	db	108
   760  008DDE  6F                 	db	111
   761  008DDF  61                 	db	97
   762  008DE0  64                 	db	100
   763  008DE1  65                 	db	101
   764  008DE2  72                 	db	114
   765  008DE3  20                 	db	32
   766  008DE4  4D                 	db	77
   767  008DE5  6F                 	db	111
   768  008DE6  64                 	db	100
   769  008DE7  65                 	db	101
   770  008DE8  00                 	db	0
   771  008DE9                     __end_of_programming_line1:
   772                           	opt stack 0
   773  008DE9                     _failed_line1:
   774                           	opt stack 0
   775  008DE9  42                 	db	66
   776  008DEA  6F                 	db	111
   777  008DEB  6F                 	db	111
   778  008DEC  74                 	db	116
   779  008DED  6C                 	db	108
   780  008DEE  6F                 	db	111
   781  008DEF  61                 	db	97
   782  008DF0  64                 	db	100
   783  008DF1  65                 	db	101
   784  008DF2  72                 	db	114
   785  008DF3  20                 	db	32
   786  008DF4  4D                 	db	77
   787  008DF5  6F                 	db	111
   788  008DF6  64                 	db	100
   789  008DF7  65                 	db	101
   790  008DF8  00                 	db	0
   791  008DF9                     __end_of_failed_line1:
   792                           	opt stack 0
   793  008DF9                     _checked_line1:
   794                           	opt stack 0
   795  008DF9  42                 	db	66
   796  008DFA  6F                 	db	111
   797  008DFB  6F                 	db	111
   798  008DFC  74                 	db	116
   799  008DFD  6C                 	db	108
   800  008DFE  6F                 	db	111
   801  008DFF  61                 	db	97
   802  008E00  64                 	db	100
   803  008E01  65                 	db	101
   804  008E02  72                 	db	114
   805  008E03  20                 	db	32
   806  008E04  4D                 	db	77
   807  008E05  6F                 	db	111
   808  008E06  64                 	db	100
   809  008E07  65                 	db	101
   810  008E08  00                 	db	0
   811  008E09                     __end_of_checked_line1:
   812                           	opt stack 0
   813  008E09                     _verify_line1:
   814                           	opt stack 0
   815  008E09  42                 	db	66
   816  008E0A  6F                 	db	111
   817  008E0B  6F                 	db	111
   818  008E0C  74                 	db	116
   819  008E0D  6C                 	db	108
   820  008E0E  6F                 	db	111
   821  008E0F  61                 	db	97
   822  008E10  64                 	db	100
   823  008E11  65                 	db	101
   824  008E12  72                 	db	114
   825  008E13  20                 	db	32
   826  008E14  4D                 	db	77
   827  008E15  6F                 	db	111
   828  008E16  64                 	db	100
   829  008E17  65                 	db	101
   830  008E18  00                 	db	0
   831  008E19                     __end_of_verify_line1:
   832                           	opt stack 0
   833  008E19                     _found_line1:
   834                           	opt stack 0
   835  008E19  42                 	db	66
   836  008E1A  6F                 	db	111
   837  008E1B  6F                 	db	111
   838  008E1C  74                 	db	116
   839  008E1D  6C                 	db	108
   840  008E1E  6F                 	db	111
   841  008E1F  61                 	db	97
   842  008E20  64                 	db	100
   843  008E21  65                 	db	101
   844  008E22  72                 	db	114
   845  008E23  20                 	db	32
   846  008E24  4D                 	db	77
   847  008E25  6F                 	db	111
   848  008E26  64                 	db	100
   849  008E27  65                 	db	101
   850  008E28  00                 	db	0
   851  008E29                     __end_of_found_line1:
   852                           	opt stack 0
   853  008E29                     _failed_line3_checksum:
   854                           	opt stack 0
   855  008E29  43                 	db	67
   856  008E2A  68                 	db	104
   857  008E2B  65                 	db	101
   858  008E2C  63                 	db	99
   859  008E2D  6B                 	db	107
   860  008E2E  73                 	db	115
   861  008E2F  75                 	db	117
   862  008E30  6D                 	db	109
   863  008E31  20                 	db	32
   864  008E32  65                 	db	101
   865  008E33  72                 	db	114
   866  008E34  72                 	db	114
   867  008E35  6F                 	db	111
   868  008E36  72                 	db	114
   869  008E37  00                 	db	0
   870  008E38                     __end_of_failed_line3_checksum:
   871                           	opt stack 0
   872  008E38                     _failed_line3_noNextRecord:
   873                           	opt stack 0
   874  008E38  4E                 	db	78
   875  008E39  6F                 	db	111
   876  008E3A  20                 	db	32
   877  008E3B  6E                 	db	110
   878  008E3C  65                 	db	101
   879  008E3D  78                 	db	120
   880  008E3E  74                 	db	116
   881  008E3F  20                 	db	32
   882  008E40  72                 	db	114
   883  008E41  65                 	db	101
   884  008E42  63                 	db	99
   885  008E43  6F                 	db	111
   886  008E44  72                 	db	114
   887  008E45  64                 	db	100
   888  008E46  00                 	db	0
   889  008E47                     __end_of_failed_line3_noNextRecord:
   890                           	opt stack 0
   891  008E47                     _failed_line3_dataTooLong:
   892                           	opt stack 0
   893  008E47  44                 	db	68
   894  008E48  61                 	db	97
   895  008E49  74                 	db	116
   896  008E4A  61                 	db	97
   897  008E4B  20                 	db	32
   898  008E4C  74                 	db	116
   899  008E4D  6F                 	db	111
   900  008E4E  6F                 	db	111
   901  008E4F  20                 	db	32
   902  008E50  6C                 	db	108
   903  008E51  6F                 	db	111
   904  008E52  6E                 	db	110
   905  008E53  67                 	db	103
   906  008E54  00                 	db	0
   907  008E55                     __end_of_failed_line3_dataTooLong:
   908                           	opt stack 0
   909  008E55                     _verify_line2:
   910                           	opt stack 0
   911  008E55  56                 	db	86
   912  008E56  65                 	db	101
   913  008E57  72                 	db	114
   914  008E58  69                 	db	105
   915  008E59  66                 	db	102
   916  008E5A  79                 	db	121
   917  008E5B  69                 	db	105
   918  008E5C  6E                 	db	110
   919  008E5D  67                 	db	103
   920  008E5E  2E                 	db	46
   921  008E5F  2E                 	db	46
   922  008E60  2E                 	db	46
   923  008E61  00                 	db	0
   924  008E62                     __end_of_verify_line2:
   925                           	opt stack 0
   926  008E62                     _start_line4:
   927                           	opt stack 0
   928  008E62  64                 	db	100
   929  008E63  72                 	db	114
   930  008E64  69                 	db	105
   931  008E65  76                 	db	118
   932  008E66  65                 	db	101
   933  008E67  2E                 	db	46
   934  008E68  2E                 	db	46
   935  008E69  2E                 	db	46
   936  008E6A  00                 	db	0
   937  008E6B                     __end_of_start_line4:
   938                           	opt stack 0
   939  008E6B                     _failed_line4:
   940                           	opt stack 0
   941  008E6B  52                 	db	82
   942  008E6C  65                 	db	101
   943  008E6D  63                 	db	99
   944  008E6E  6F                 	db	111
   945  008E6F  72                 	db	114
   946  008E70  64                 	db	100
   947  008E71  20                 	db	32
   948  008E72  00                 	db	0
   949  008E73                     __end_of_failed_line4:
   950                           	opt stack 0
   951  008E73                     _checked_line3:
   952                           	opt stack 0
   953  008E73  72                 	db	114
   954  008E74  65                 	db	101
   955  008E75  63                 	db	99
   956  008E76  6F                 	db	111
   957  008E77  72                 	db	114
   958  008E78  64                 	db	100
   959  008E79  73                 	db	115
   960  008E7A  00                 	db	0
   961  008E7B                     __end_of_checked_line3:
   962                           	opt stack 0
   963  008E7B                     _USB_SD_Ptr:
   964                           	opt stack 0
   965  008E7B  CB                 	db	low _sd000
   966  008E7C  8F                 	db	high _sd000
   967  008E7D  E7                 	db	low _sd001
   968  008E7E  8E                 	db	high _sd001
   969  008E7F  1B                 	db	low _sd002
   970  008E80  8F                 	db	high _sd002
   971  008E81  8A                 	db	low _sd003
   972  008E82  8F                 	db	high _sd003
   973  008E83                     __end_of_USB_SD_Ptr:
   974                           	opt stack 0
   975  008E83                     _programming_line3:
   976                           	opt stack 0
   977  008E83  45                 	db	69
   978  008E84  6E                 	db	110
   979  008E85  74                 	db	116
   980  008E86  72                 	db	114
   981  008E87  79                 	db	121
   982  008E88  20                 	db	32
   983  008E89  00                 	db	0
   984  008E8A                     __end_of_programming_line3:
   985                           	opt stack 0
   986  008E8A                     _verify_line3:
   987                           	opt stack 0
   988  008E8A  52                 	db	82
   989  008E8B  65                 	db	101
   990  008E8C  63                 	db	99
   991  008E8D  6F                 	db	111
   992  008E8E  72                 	db	114
   993  008E8F  64                 	db	100
   994  008E90  00                 	db	0
   995  008E91                     __end_of_verify_line3:
   996                           	opt stack 0
   997  008E91                     _found_line3b:
   998                           	opt stack 0
   999  008E91  20                 	db	32
  1000  008E92  62                 	db	98
  1001  008E93  79                 	db	121
  1002  008E94  74                 	db	116
  1003  008E95  65                 	db	101
  1004  008E96  73                 	db	115
  1005  008E97  00                 	db	0
  1006  008E98                     __end_of_found_line3b:
  1007                           	opt stack 0
  1008  008E98                     _found_line3:
  1009                           	opt stack 0
  1010  008E98  53                 	db	83
  1011  008E99  69                 	db	105
  1012  008E9A  7A                 	db	122
  1013  008E9B  65                 	db	101
  1014  008E9C  3A                 	db	58
  1015  008E9D  20                 	db	32
  1016  008E9E  00                 	db	0
  1017  008E9F                     __end_of_found_line3:
  1018                           	opt stack 0
  1019  008E9F                     _done_line2:
  1020                           	opt stack 0
  1021  008E9F  44                 	db	68
  1022  008EA0  6F                 	db	111
  1023  008EA1  6E                 	db	110
  1024  008EA2  65                 	db	101
  1025  008EA3  21                 	db	33
  1026  008EA4  00                 	db	0
  1027  008EA5                     __end_of_done_line2:
  1028                           	opt stack 0
  1029  008EA5                     _USB_CD_Ptr:
  1030                           	opt stack 0
  1031  008EA5  A7                 	db	low _configDescriptor1
  1032  008EA6  8E                 	db	high _configDescriptor1
  1033  008EA7                     __end_of_USB_CD_Ptr:
  1034                           	opt stack 0
  1035  008EA7                     _configDescriptor1:
  1036                           	opt stack 0
  1037  008EA7  09                 	db	9
  1038  008EA8  02                 	db	2
  1039  008EA9  40                 	db	64
  1040  008EAA  00                 	db	0
  1041  008EAB  02                 	db	2
  1042  008EAC  01                 	db	1
  1043  008EAD  00                 	db	0
  1044  008EAE  C0                 	db	192
  1045  008EAF  32                 	db	50
  1046  008EB0  09                 	db	9
  1047  008EB1  04                 	db	4
  1048  008EB2  00                 	db	0
  1049  008EB3  00                 	db	0
  1050  008EB4  02                 	db	2
  1051  008EB5  03                 	db	3
  1052  008EB6  00                 	db	0
  1053  008EB7  00                 	db	0
  1054  008EB8  00                 	db	0
  1055  008EB9  09                 	db	9
  1056  008EBA  21                 	db	33
  1057  008EBB  11                 	db	17
  1058  008EBC  01                 	db	1
  1059  008EBD  00                 	db	0
  1060  008EBE  01                 	db	1
  1061  008EBF  22                 	db	34
  1062  008EC0  1D                 	db	29
  1063  008EC1  00                 	db	0
  1064  008EC2  07                 	db	7
  1065  008EC3  05                 	db	5
  1066  008EC4  81                 	db	129
  1067  008EC5  03                 	db	3
  1068  008EC6  40                 	db	64
  1069  008EC7  00                 	db	0
  1070  008EC8  01                 	db	1
  1071  008EC9  07                 	db	7
  1072  008ECA  05                 	db	5
  1073  008ECB  01                 	db	1
  1074  008ECC  03                 	db	3
  1075  008ECD  40                 	db	64
  1076  008ECE  00                 	db	0
  1077  008ECF  01                 	db	1
  1078  008ED0  09                 	db	9
  1079  008ED1  04                 	db	4
  1080  008ED2  01                 	db	1
  1081  008ED3  00                 	db	0
  1082  008ED4  02                 	db	2
  1083  008ED5  08                 	db	8
  1084  008ED6  06                 	db	6
  1085  008ED7  50                 	db	80
  1086  008ED8  00                 	db	0
  1087  008ED9  07                 	db	7
  1088  008EDA  05                 	db	5
  1089  008EDB  82                 	db	130
  1090  008EDC  02                 	db	2
  1091  008EDD  40                 	db	64
  1092  008EDE  00                 	db	0
  1093  008EDF  01                 	db	1
  1094  008EE0  07                 	db	7
  1095  008EE1  05                 	db	5
  1096  008EE2  02                 	db	2
  1097  008EE3  02                 	db	2
  1098  008EE4  40                 	db	64
  1099  008EE5  00                 	db	0
  1100  008EE6  01                 	db	1
  1101  008EE7                     __end_of_configDescriptor1:
  1102                           	opt stack 0
  1103  008EE7                     _sd001:
  1104                           	opt stack 0
  1105  008EE7  34                 	db	52
  1106  008EE8  03                 	db	3
  1107  008EE9  0053               	dw	83
  1108  008EEB  006F               	dw	111
  1109  008EED  006C               	dw	108
  1110  008EEF  0064               	dw	100
  1111  008EF1  0065               	dw	101
  1112  008EF3  0072               	dw	114
  1113  008EF5  006E               	dw	110
  1114  008EF7  0065               	dw	101
  1115  008EF9  0072               	dw	114
  1116  008EFB  0064               	dw	100
  1117  008EFD  002E               	dw	46
  1118  008EFF  0063               	dw	99
  1119  008F01  006F               	dw	111
  1120  008F03  006D               	dw	109
  1121  008F05  0020               	dw	32
  1122  008F07  0020               	dw	32
  1123  008F09  0020               	dw	32
  1124  008F0B  0020               	dw	32
  1125  008F0D  0020               	dw	32
  1126  008F0F  0020               	dw	32
  1127  008F11  0020               	dw	32
  1128  008F13  0020               	dw	32
  1129  008F15  0020               	dw	32
  1130  008F17  0020               	dw	32
  1131  008F19  0020               	dw	32
  1132  008F1B                     __end_of_sd001:
  1133                           	opt stack 0
  1134  008F1B                     _sd002:
  1135                           	opt stack 0
  1136  008F1B  2E                 	db	46
  1137  008F1C  03                 	db	3
  1138  008F1D  004D               	dw	77
  1139  008F1F  0050               	dw	80
  1140  008F21  0050               	dw	80
  1141  008F23  0054               	dw	84
  1142  008F25  0053               	dw	83
  1143  008F27  006F               	dw	111
  1144  008F29  006C               	dw	108
  1145  008F2B  0061               	dw	97
  1146  008F2D  0072               	dw	114
  1147  008F2F  0020               	dw	32
  1148  008F31  0043               	dw	67
  1149  008F33  0068               	dw	104
  1150  008F35  0061               	dw	97
  1151  008F37  0072               	dw	114
  1152  008F39  0067               	dw	103
  1153  008F3B  0065               	dw	101
  1154  008F3D  0072               	dw	114
  1155  008F3F  0020               	dw	32
  1156  008F41  0052               	dw	82
  1157  008F43  0065               	dw	101
  1158  008F45  0076               	dw	118
  1159  008F47  0043               	dw	67
  1160  008F49                     __end_of_sd002:
  1161                           	opt stack 0
  1162  008F49                     _inq_resp:
  1163                           	opt stack 0
  1164  008F49  00                 	db	0
  1165  008F4A  80                 	db	128
  1166  008F4B  04                 	db	4
  1167  008F4C  02                 	db	2
  1168  008F4D  20                 	db	32
  1169  008F4E  00                 	db	0
  1170  008F4F  00                 	db	0
  1171  008F50  00                 	db	0
  1172  008F51  4D                 	db	77
  1173  008F52  69                 	db	105
  1174  008F53  63                 	db	99
  1175  008F54  72                 	db	114
  1176  008F55  6F                 	db	111
  1177  008F56  63                 	db	99
  1178  008F57  68                 	db	104
  1179  008F58  70                 	db	112
  1180  008F59  4D                 	db	77
  1181  008F5A  61                 	db	97
  1182  008F5B  73                 	db	115
  1183  008F5C  73                 	db	115
  1184  008F5D  20                 	db	32
  1185  008F5E  53                 	db	83
  1186  008F5F  74                 	db	116
  1187  008F60  6F                 	db	111
  1188  008F61  72                 	db	114
  1189  008F62  61                 	db	97
  1190  008F63  67                 	db	103
  1191  008F64  65                 	db	101
  1192  008F65  20                 	db	32
  1193  008F66  20                 	db	32
  1194  008F67  20                 	db	32
  1195  008F68  20                 	db	32
  1196  008F69  30                 	db	48
  1197  008F6A  30                 	db	48
  1198  008F6B  30                 	db	48
  1199  008F6C  31                 	db	49
  1200  008F6D                     __end_of_inq_resp:
  1201                           	opt stack 0
  1202  008F6D                     _hid_rpt01:
  1203                           	opt stack 0
  1204  008F6D  06                 	db	6
  1205  008F6E  00                 	db	0
  1206  008F6F  FF                 	db	255
  1207  008F70  09                 	db	9
  1208  008F71  01                 	db	1
  1209  008F72  A1                 	db	161
  1210  008F73  01                 	db	1
  1211  008F74  19                 	db	25
  1212  008F75  01                 	db	1
  1213  008F76  29                 	db	41
  1214  008F77  40                 	db	64
  1215  008F78  15                 	db	21
  1216  008F79  00                 	db	0
  1217  008F7A  26                 	db	38
  1218  008F7B  FF                 	db	255
  1219  008F7C  00                 	db	0
  1220  008F7D  75                 	db	117
  1221  008F7E  08                 	db	8
  1222  008F7F  95                 	db	149
  1223  008F80  40                 	db	64
  1224  008F81  81                 	db	129
  1225  008F82  00                 	db	0
  1226  008F83  19                 	db	25
  1227  008F84  01                 	db	1
  1228  008F85  29                 	db	41
  1229  008F86  40                 	db	64
  1230  008F87  91                 	db	145
  1231  008F88  00                 	db	0
  1232  008F89  C0                 	db	192
  1233  008F8A                     __end_of_hid_rpt01:
  1234                           	opt stack 0
  1235  008F8A                     _sd003:
  1236                           	opt stack 0
  1237  008F8A  1A                 	db	26
  1238  008F8B  03                 	db	3
  1239  008F8C  0031               	dw	49
  1240  008F8E  0032               	dw	50
  1241  008F90  0033               	dw	51
  1242  008F92  0034               	dw	52
  1243  008F94  0035               	dw	53
  1244  008F96  0036               	dw	54
  1245  008F98  0037               	dw	55
  1246  008F9A  0038               	dw	56
  1247  008F9C  0039               	dw	57
  1248  008F9E  0030               	dw	48
  1249  008FA0  0039               	dw	57
  1250  008FA2  0039               	dw	57
  1251  008FA4                     __end_of_sd003:
  1252                           	opt stack 0
  1253  008FA4                     _device_dsc:
  1254                           	opt stack 0
  1255  008FA4  12                 	db	18
  1256  008FA5  01                 	db	1
  1257  008FA6  0200               	dw	512
  1258  008FA8  00                 	db	0
  1259  008FA9  00                 	db	0
  1260  008FAA  00                 	db	0
  1261  008FAB  08                 	db	8
  1262  008FAC  04D8               	dw	1240
  1263  008FAE  F08E               	dw	61582
  1264  008FB0  0100               	dw	256
  1265  008FB2  01                 	db	1
  1266  008FB3  02                 	db	2
  1267  008FB4  00                 	db	0
  1268  008FB5  01                 	db	1
  1269  008FB6                     __end_of_device_dsc:
  1270                           	opt stack 0
  1271  008FB6                     _bootloader_filename:
  1272                           	opt stack 0
  1273  008FB6  46                 	db	70
  1274  008FB7  49                 	db	73
  1275  008FB8  52                 	db	82
  1276  008FB9  4D                 	db	77
  1277  008FBA  57                 	db	87
  1278  008FBB  41                 	db	65
  1279  008FBC  52                 	db	82
  1280  008FBD  45                 	db	69
  1281  008FBE  00                 	db	0
  1282  008FBF                     __end_of_bootloader_filename:
  1283                           	opt stack 0
  1284  008FBF                     _flash_command_pagesize_528:
  1285                           	opt stack 0
  1286  008FBF  3D                 	db	61
  1287  008FC0  2A                 	db	42
  1288  008FC1  80                 	db	128
  1289  008FC2  A7                 	db	167
  1290  008FC3                     __end_of_flash_command_pagesize_528:
  1291                           	opt stack 0
  1292  008FC3                     _flash_command_pagesize_512:
  1293                           	opt stack 0
  1294  008FC3  3D                 	db	61
  1295  008FC4  2A                 	db	42
  1296  008FC5  80                 	db	128
  1297  008FC6  A6                 	db	166
  1298  008FC7                     __end_of_flash_command_pagesize_512:
  1299                           	opt stack 0
  1300  008FC7                     _bootloader_extension:
  1301                           	opt stack 0
  1302  008FC7  48                 	db	72
  1303  008FC8  45                 	db	69
  1304  008FC9  58                 	db	88
  1305  008FCA  00                 	db	0
  1306  008FCB                     __end_of_bootloader_extension:
  1307                           	opt stack 0
  1308  008FCB                     _sd000:
  1309                           	opt stack 0
  1310  008FCB  04                 	db	4
  1311  008FCC  03                 	db	3
  1312  008FCD  0409               	dw	1033
  1313  008FCF                     __end_of_sd000:
  1314                           	opt stack 0
  1315  0000                     _RPINR22	set	3837
  1316  0000                     _RPOR22	set	3798
  1317  0000                     _RPOR21	set	3797
  1318  0000                     _RPINR21	set	3836
  1319  0000                     _RPINR2	set	3810
  1320  0000                     _RPINR3	set	3811
  1321  0000                     _RPINR1	set	3809
  1322  0000                     _PPSCONbits	set	3775
  1323  0000                     _RTCVALH	set	3899
  1324  0000                     _RTCVALL	set	3898
  1325  0000                     _RTCCAL	set	3902
  1326  0000                     _RTCCFGbits	set	3903
  1327  0000                     _ANCON1bits	set	3913
  1328  0000                     _ANCON0bits	set	3912
  1329  0000                     _UEP0bits	set	3878
  1330  0000                     _UIEbits	set	3894
  1331  0000                     _UADDR	set	3896
  1332  0000                     _UIE	set	3894
  1333  0000                     _UEIE	set	3895
  1334  0000                     _UCFG	set	3897
  1335  0000                     _UEP1	set	3879
  1336  0000                     _UEP0	set	3878
  1337  0000                     _TBLPTR	set	4086
  1338  0000                     _INTCON	set	4082
  1339  0000                     _EECON1	set	4006
  1340  0000                     _TABLAT	set	4085
  1341  0000                     _EECON1bits	set	4006
  1342  0000                     _SSP2CON1bits	set	3954
  1343  0000                     _SSP2STATbits	set	3955
  1344  0000                     _RXADDRL	set	3945
  1345  0000                     _RXADDRH	set	3944
  1346  0000                     _DMABCL	set	3943
  1347  0000                     _DMABCH	set	3942
  1348  0000                     _TXADDRL	set	3947
  1349  0000                     _TXADDRH	set	3946
  1350  0000                     _DMACON2bits	set	3974
  1351  0000                     _DMACON1bits	set	3976
  1352  0000                     _SSP1BUF	set	4041
  1353  0000                     _SSP1CON2bits	set	4037
  1354  0000                     _SSP1CON1bits	set	4038
  1355  0000                     _SSP1ADD	set	4040
  1356  0000                     _SSP1STATbits	set	4039
  1357  0000                     _T1CONbits	set	4045
  1358  0000                     _TMR1L	set	4046
  1359  0000                     _TMR1H	set	4047
  1360  0000                     _PIR1bits	set	3998
  1361  0000                     _LATAbits	set	3977
  1362  0000                     _TRISEbits	set	3990
  1363  0000                     _LATEbits	set	3981
  1364  0000                     _LATCbits	set	3979
  1365  0000                     _TRISAbits	set	3986
  1366  0000                     _TRISBbits	set	3987
  1367  0000                     _LATBbits	set	3978
  1368  0000                     _TRISDbits	set	3989
  1369  0000                     _TRISCbits	set	3988
  1370  0000                     _T0CONbits	set	4053
  1371  0000                     _INTCON2bits	set	4081
  1372  0000                     _EECON2	set	4007
  1373  0000                     _PORTBbits	set	3969
  1374  0000                     _INTCON3bits	set	4080
  1375  0000                     _TMR0L	set	4054
  1376  0000                     _TMR0H	set	4055
  1377  0000                     _INTCONbits	set	4082
  1378  0000                     _PORTAbits	set	3968
  1379  0000                     _LATDbits	set	3980
  1380  0000                     _OSCCON	set	4051
  1381  0000                     _OSCTUNEbits	set	3995
  1382  0000                     _USTAT	set	3940
  1383  0000                     _PIR2bits	set	4001
  1384  0000                     _UCON	set	3941
  1385  0000                     _UIRbits	set	3938
  1386  0000                     _UCONbits	set	3941
  1387  0000                     _UIR	set	3938
  1388  0000                     _UEIR	set	3939
  1389  0000                     _PIE2bits	set	4000
  1390  008FCF                     STR_12:
  1391  008FCF  48                 	db	72	;'H'
  1392  008FD0  65                 	db	101	;'e'
  1393  008FD1  6C                 	db	108	;'l'
  1394  008FD2  6C                 	db	108	;'l'
  1395  008FD3  6F                 	db	111	;'o'
  1396  008FD4  20                 	db	32
  1397  008FD5  57                 	db	87	;'W'
  1398  008FD6  6F                 	db	111	;'o'
  1399  008FD7  72                 	db	114	;'r'
  1400  008FD8  6C                 	db	108	;'l'
  1401  008FD9  64                 	db	100	;'d'
  1402  008FDA  21                 	db	33
  1403  008FDB  00                 	db	0
  1404  008FDC                     STR_9:
  1405  008FDC  53                 	db	83	;'S'
  1406  008FDD  6F                 	db	111	;'o'
  1407  008FDE  6C                 	db	108	;'l'
  1408  008FDF  61                 	db	97	;'a'
  1409  008FE0  72                 	db	114	;'r'
  1410  008FE1  43                 	db	67	;'C'
  1411  008FE2  68                 	db	104	;'h'
  1412  008FE3  61                 	db	97	;'a'
  1413  008FE4  72                 	db	114	;'r'
  1414  008FE5  67                 	db	103	;'g'
  1415  008FE6  72                 	db	114	;'r'
  1416  008FE7  00                 	db	0
  1417  008FE8                     STR_10:
  1418  008FE8  46                 	db	70	;'F'
  1419  008FE9  49                 	db	73	;'I'
  1420  008FEA  4C                 	db	76	;'L'
  1421  008FEB  45                 	db	69	;'E'
  1422  008FEC  20                 	db	32
  1423  008FED  20                 	db	32
  1424  008FEE  20                 	db	32
  1425  008FEF  20                 	db	32
  1426  008FF0  00                 	db	0
  1427  008FF1                     STR_1:
  1428  008FF1  4D                 	db	77	;'M'
  1429  008FF2  53                 	db	83	;'S'
  1430  008FF3  44                 	db	68	;'D'
  1431  008FF4  4F                 	db	79	;'O'
  1432  008FF5  53                 	db	83	;'S'
  1433  008FF6  35                 	db	53	;'5'
  1434  008FF7  2E                 	db	46
  1435  008FF8  30                 	db	48	;'0'
  1436  008FF9  00                 	db	0
  1437  008FFA                     STR_11:
  1438  008FFA  54                 	db	84	;'T'
  1439  008FFB  58                 	db	88	;'X'
  1440  008FFC  54                 	db	84	;'T'
  1441  008FFD  00                 	db	0
  1442  0000                     
  1443                           ; #config settings
  1444  008FFE  00                 	db	0	; dummy byte at the end
  1445  0000                     
  1446                           	psect	cinit
  1447  0054A6                     __pcinit:
  1448                           	opt stack 0
  1449  0054A6                     start_initialization:
  1450                           	opt stack 0
  1451  0054A6                     __initialization:
  1452                           	opt stack 0
  1453                           
  1454                           ; Initialize objects allocated to BANK3 (104 bytes)
  1455                           ; load TBLPTR registers with __pidataBANK3
  1456  0054A6  0E62               	movlw	low __pidataBANK3
  1457  0054A8  6EF6               	movwf	tblptrl,c
  1458  0054AA  0E65               	movlw	high __pidataBANK3
  1459  0054AC  6EF7               	movwf	tblptrh,c
  1460  0054AE  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1461  0054B0  6EF8               	movwf	tblptru,c
  1462  0054B2  EE03  F072         	lfsr	0,__pdataBANK3
  1463  0054B6  EE10 F068          	lfsr	1,104
  1464  0054BA                     copy_data0:
  1465  0054BA  0009               	tblrd		*+
  1466  0054BC  CFF5 FFEE          	movff	tablat,postinc0
  1467  0054C0  50E5               	movf	postdec1,w,c
  1468  0054C2  50E1               	movf	fsr1l,w,c
  1469  0054C4  E1FA               	bnz	copy_data0
  1470                           
  1471                           ; Initialize objects allocated to BANK1 (64 bytes)
  1472                           ; load TBLPTR registers with __pidataBANK1
  1473  0054C6  0E0C               	movlw	low __pidataBANK1
  1474  0054C8  6EF6               	movwf	tblptrl,c
  1475  0054CA  0E70               	movlw	high __pidataBANK1
  1476  0054CC  6EF7               	movwf	tblptrh,c
  1477  0054CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1478  0054D0  6EF8               	movwf	tblptru,c
  1479  0054D2  EE01  F0B8         	lfsr	0,__pdataBANK1
  1480  0054D6  EE10 F040          	lfsr	1,64
  1481  0054DA                     copy_data1:
  1482  0054DA  0009               	tblrd		*+
  1483  0054DC  CFF5 FFEE          	movff	tablat,postinc0
  1484  0054E0  50E5               	movf	postdec1,w,c
  1485  0054E2  50E1               	movf	fsr1l,w,c
  1486  0054E4  E1FA               	bnz	copy_data1
  1487                           
  1488                           ; Initialize objects allocated to BANK0 (1 bytes)
  1489                           ; load TBLPTR registers with __pidataBANK0
  1490  0054E6  0EFC               	movlw	low __pidataBANK0
  1491  0054E8  6EF6               	movwf	tblptrl,c
  1492  0054EA  0E78               	movlw	high __pidataBANK0
  1493  0054EC  6EF7               	movwf	tblptrh,c
  1494  0054EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1495  0054F0  6EF8               	movwf	tblptru,c
  1496  0054F2  0009               	tblrd		*+	;fetch initializer
  1497  0054F4  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1498                           
  1499                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1500  0054F8  EE03  F0DA         	lfsr	0,__pbssBIGRAMll
  1501  0054FC  EE12 F000          	lfsr	1,512
  1502  005500                     clear_0:
  1503  005500  6AEE               	clrf	postinc0,c
  1504  005502  50E5               	movf	postdec1,w,c
  1505  005504  50E1               	movf	fsr1l,w,c
  1506  005506  E1FC               	bnz	clear_0
  1507  005508  50E2               	movf	fsr1h,w,c
  1508  00550A  E1FA               	bnz	clear_0
  1509                           
  1510                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1511  00550C  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1512  005510  EE14 F000          	lfsr	1,1024
  1513  005514                     clear_1:
  1514  005514  6AEE               	clrf	postinc0,c
  1515  005516  50E5               	movf	postdec1,w,c
  1516  005518  50E1               	movf	fsr1l,w,c
  1517  00551A  E1FC               	bnz	clear_1
  1518  00551C  50E2               	movf	fsr1h,w,c
  1519  00551E  E1FA               	bnz	clear_1
  1520                           
  1521                           ; Clear objects allocated to BANK3 (114 bytes)
  1522  005520  EE03  F000         	lfsr	0,__pbssBANK3
  1523  005524  0E72               	movlw	114
  1524  005526                     clear_2:
  1525  005526  6AEE               	clrf	postinc0,c
  1526  005528  06E8               	decf	wreg,f,c
  1527  00552A  E1FD               	bnz	clear_2
  1528                           
  1529                           ; Clear objects allocated to BANK2 (244 bytes)
  1530  00552C  EE02  F000         	lfsr	0,__pbssBANK2
  1531  005530  0EF4               	movlw	244
  1532  005532                     clear_3:
  1533  005532  6AEE               	clrf	postinc0,c
  1534  005534  06E8               	decf	wreg,f,c
  1535  005536  E1FD               	bnz	clear_3
  1536                           
  1537                           ; Clear objects allocated to BANK1 (184 bytes)
  1538  005538  EE01  F000         	lfsr	0,__pbssBANK1
  1539  00553C  0EB8               	movlw	184
  1540  00553E                     clear_4:
  1541  00553E  6AEE               	clrf	postinc0,c
  1542  005540  06E8               	decf	wreg,f,c
  1543  005542  E1FD               	bnz	clear_4
  1544                           
  1545                           ; Clear objects allocated to BANK0 (29 bytes)
  1546  005544  EE00  F0E2         	lfsr	0,__pbssBANK0
  1547  005548  0E1D               	movlw	29
  1548  00554A                     clear_5:
  1549  00554A  6AEE               	clrf	postinc0,c
  1550  00554C  06E8               	decf	wreg,f,c
  1551  00554E  E1FD               	bnz	clear_5
  1552                           
  1553                           ; Clear objects allocated to COMRAM (7 bytes)
  1554  005550  EE00  F059         	lfsr	0,__pbssCOMRAM
  1555  005554  0E07               	movlw	7
  1556  005556                     clear_6:
  1557  005556  6AEE               	clrf	postinc0,c
  1558  005558  06E8               	decf	wreg,f,c
  1559  00555A  E1FD               	bnz	clear_6
  1560  00555C                     end_of_initialization:
  1561                           	opt stack 0
  1562  00555C                     __end_of__initialization:
  1563                           	opt stack 0
  1564  00555C  0100               	movlb	0
  1565  00555E  EF2F  F029         	goto	_main	;jump to C main() function
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           postinc0	equ	0xFEE
  1571                           wreg	equ	0xFE8
  1572                           postdec1	equ	0xFE5
  1573                           fsr1h	equ	0xFE2
  1574                           fsr1l	equ	0xFE1
  1575                           
  1576                           	psect	bssCOMRAM
  1577  000059                     __pbssCOMRAM:
  1578                           	opt stack 0
  1579  000059                     _USBInHandle:
  1580                           	opt stack 0
  1581  000059                     	ds	2
  1582  00005B                     _pBDTEntryEP0OutNext:
  1583                           	opt stack 0
  1584  00005B                     	ds	2
  1585  00005D                     _pBDTEntryEP0OutCurrent:
  1586                           	opt stack 0
  1587  00005D                     	ds	2
  1588  00005F                     _USBDeviceState:
  1589                           	opt stack 0
  1590  00005F                     	ds	1
  1591                           tblptru	equ	0xFF8
  1592                           tblptrh	equ	0xFF7
  1593                           tblptrl	equ	0xFF6
  1594                           tablat	equ	0xFF5
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1h	equ	0xFE2
  1599                           fsr1l	equ	0xFE1
  1600                           
  1601                           	psect	bssBANK0
  1602  0000E2                     __pbssBANK0:
  1603                           	opt stack 0
  1604  0000E2                     _os:
  1605                           	opt stack 0
  1606  0000E2                     	ds	6
  1607  0000E8                     _inPipes:
  1608                           	opt stack 0
  1609  0000E8                     	ds	6
  1610  0000EE                     _pBDTEntryIn:
  1611                           	opt stack 0
  1612  0000EE                     	ds	6
  1613  0000F4                     _USBMSDInHandle:
  1614                           	opt stack 0
  1615  0000F4                     	ds	2
  1616  0000F6                     _USBMSDOutHandle:
  1617                           	opt stack 0
  1618  0000F6                     	ds	2
  1619  0000F8                     _MSDHostNoData:
  1620                           	opt stack 0
  1621  0000F8                     	ds	1
  1622  0000F9                     _MSDCommandState:
  1623                           	opt stack 0
  1624  0000F9                     	ds	1
  1625  0000FA                     _MSD_State:
  1626                           	opt stack 0
  1627  0000FA                     	ds	1
  1628  0000FB                     _USBDeferStatusStagePacket:
  1629                           	opt stack 0
  1630  0000FB                     	ds	1
  1631  0000FC                     _controlTransferState:
  1632                           	opt stack 0
  1633  0000FC                     	ds	1
  1634  0000FD                     _USTATcopy:
  1635                           	opt stack 0
  1636  0000FD                     	ds	1
  1637  0000FE                     _USBActiveConfiguration:
  1638                           	opt stack 0
  1639  0000FE                     	ds	1
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1h	equ	0xFE2
  1648                           fsr1l	equ	0xFE1
  1649                           
  1650                           	psect	dataBANK0
  1651  0000FF                     __pdataBANK0:
  1652                           	opt stack 0
  1653  0000FF                     _file_number:
  1654                           	opt stack 0
  1655  0000FF                     	ds	1
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postdec1	equ	0xFE5
  1663                           fsr1h	equ	0xFE2
  1664                           fsr1l	equ	0xFE1
  1665                           
  1666                           	psect	bssBANK1
  1667  000100                     __pbssBANK1:
  1668                           	opt stack 0
  1669  000100                     _gblCBW:
  1670                           	opt stack 0
  1671  000100                     	ds	31
  1672  00011F                     _gblSenseData:
  1673                           	opt stack 0
  1674  00011F                     	ds	18
  1675  000131                     _outPipes:
  1676                           	opt stack 0
  1677  000131                     	ds	8
  1678  000139                     _pBDTEntryOut:
  1679                           	opt stack 0
  1680  000139                     	ds	6
  1681  00013F                     _extended_linear_address:
  1682                           	opt stack 0
  1683  00013F                     	ds	4
  1684  000143                     _hex_file_size:
  1685                           	opt stack 0
  1686  000143                     	ds	4
  1687  000147                     _hex_file_offset:
  1688                           	opt stack 0
  1689  000147                     	ds	4
  1690  00014B                     _file_maximum_address:
  1691                           	opt stack 0
  1692  00014B                     	ds	4
  1693  00014F                     _file_minimum_address:
  1694                           	opt stack 0
  1695  00014F                     	ds	4
  1696  000153                     _gblBLKLen:
  1697                           	opt stack 0
  1698  000153                     	ds	4
  1699  000157                     _gblNumBLKS:
  1700                           	opt stack 0
  1701  000157                     	ds	4
  1702  00015B                     _LBA:
  1703                           	opt stack 0
  1704  00015B                     	ds	4
  1705  00015F                     _USB1msTickCount:
  1706                           	opt stack 0
  1707  00015F                     	ds	4
  1708  000163                     _FileAddress:
  1709                           	opt stack 0
  1710  000163                     	ds	3
  1711  000166                     _ep_data_out:
  1712                           	opt stack 0
  1713  000166                     	ds	3
  1714  000169                     _ep_data_in:
  1715                           	opt stack 0
  1716  000169                     	ds	3
  1717  00016C                     _flash_pages_written:
  1718                           	opt stack 0
  1719  00016C                     	ds	2
  1720  00016E                     _total_hex_file_entries:
  1721                           	opt stack 0
  1722  00016E                     	ds	2
  1723  000170                     _hex_file_entries:
  1724                           	opt stack 0
  1725  000170                     	ds	2
  1726  000172                     _system_ui_inactive_count:
  1727                           	opt stack 0
  1728  000172                     	ds	2
  1729  000174                     _USBOutHandle:
  1730                           	opt stack 0
  1731  000174                     	ds	2
  1732  000176                     _TransferLength:
  1733                           	opt stack 0
  1734  000176                     	ds	2
  1735  000178                     _gblMediaPresent:
  1736                           	opt stack 0
  1737  000178                     	ds	2
  1738  00017A                     _MSBBufferIndex:
  1739                           	opt stack 0
  1740  00017A                     	ds	2
  1741  00017C                     _ptrNextData:
  1742                           	opt stack 0
  1743  00017C                     	ds	2
  1744  00017E                     _pDst:
  1745                           	opt stack 0
  1746  00017E                     	ds	2
  1747  000180                     _start_from_byte_next:
  1748                           	opt stack 0
  1749  000180                     	ds	1
  1750  000181                     _last_error:
  1751                           	opt stack 0
  1752  000181                     	ds	1
  1753  000182                     _power_state:
  1754                           	opt stack 0
  1755  000182                     	ds	1
  1756  000183                     _userInterfaceStatus:
  1757                           	opt stack 0
  1758  000183                     	ds	1
  1759  000184                     _task_list_write_index:
  1760                           	opt stack 0
  1761  000184                     	ds	1
  1762  000185                     _task_list_read_index:
  1763                           	opt stack 0
  1764  000185                     	ds	1
  1765  000186                     _i2c_frequency:
  1766                           	opt stack 0
  1767  000186                     	ds	1
  1768  000187                     _MSDCBWValid:
  1769                           	opt stack 0
  1770  000187                     	ds	1
  1771  000188                     _SoftDetach:
  1772                           	opt stack 0
  1773  000188                     	ds	1
  1774  000189                     _gblCBWLength:
  1775                           	opt stack 0
  1776  000189                     	ds	1
  1777  00018A                     _MSDRetryAttempt:
  1778                           	opt stack 0
  1779  00018A                     	ds	1
  1780  00018B                     _MSDWriteState:
  1781                           	opt stack 0
  1782  00018B                     	ds	1
  1783  00018C                     _MSDReadState:
  1784                           	opt stack 0
  1785  00018C                     	ds	1
  1786  00018D                     _USBTicksSinceSuspendEnd:
  1787                           	opt stack 0
  1788  00018D                     	ds	1
  1789  00018E                     _USBDeferOUTDataStagePackets:
  1790                           	opt stack 0
  1791  00018E                     	ds	1
  1792  00018F                     _USBDeferINDataStagePackets:
  1793                           	opt stack 0
  1794  00018F                     	ds	1
  1795  000190                     _USBStatusStageEnabledFlag2:
  1796                           	opt stack 0
  1797  000190                     	ds	1
  1798  000191                     _USBStatusStageEnabledFlag1:
  1799                           	opt stack 0
  1800  000191                     	ds	1
  1801  000192                     _USBStatusStageTimeoutCounter:
  1802                           	opt stack 0
  1803  000192                     	ds	1
  1804  000193                     _BothEP0OutUOWNsSet:
  1805                           	opt stack 0
  1806  000193                     	ds	1
  1807  000194                     _endpoint_number:
  1808                           	opt stack 0
  1809  000194                     	ds	1
  1810  000195                     _USBBusIsSuspended:
  1811                           	opt stack 0
  1812  000195                     	ds	1
  1813  000196                     _RemoteWakeup:
  1814                           	opt stack 0
  1815  000196                     	ds	1
  1816  000197                     _shortPacketStatus:
  1817                           	opt stack 0
  1818  000197                     	ds	1
  1819  000198                     _hex_file_entry:
  1820                           	opt stack 0
  1821  000198                     	ds	23
  1822  0001AF                     _mediaInformation:
  1823                           	opt stack 0
  1824  0001AF                     	ds	5
  1825  0001B4                     _USBAlternateInterface:
  1826                           	opt stack 0
  1827  0001B4                     	ds	2
  1828  0001B6                     _active_protocol:
  1829                           	opt stack 0
  1830  0001B6                     	ds	1
  1831  0001B7                     _idle_rate:
  1832                           	opt stack 0
  1833  0001B7                     	ds	1
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           
  1844                           	psect	dataBANK1
  1845  0001B8                     __pdataBANK1:
  1846                           	opt stack 0
  1847  0001B8                     _LUN:
  1848                           	opt stack 0
  1849  0001B8                     	ds	20
  1850  0001CC                     i2c_display_init@F8323:
  1851                           	opt stack 0
  1852  0001CC                     	ds	9
  1853  0001D5                     i2c_display_send_init_sequence@F8320:
  1854                           	opt stack 0
  1855  0001D5                     	ds	9
  1856  0001DE                     system_init@F8463:
  1857                           	opt stack 0
  1858  0001DE                     	ds	9
  1859  0001E7                     system_init@F8459:
  1860                           	opt stack 0
  1861  0001E7                     	ds	9
  1862  0001F0                     system_init@F8465:
  1863                           	opt stack 0
  1864  0001F0                     	ds	4
  1865  0001F4                     system_init@F8461:
  1866                           	opt stack 0
  1867  0001F4                     	ds	4
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           postdec1	equ	0xFE5
  1875                           fsr1h	equ	0xFE2
  1876                           fsr1l	equ	0xFE1
  1877                           
  1878                           	psect	bssBANK2
  1879  000200                     __pbssBANK2:
  1880                           	opt stack 0
  1881  000200                     _task_list:
  1882                           	opt stack 0
  1883  000200                     	ds	16
  1884  000210                     _calibrationParameters:
  1885                           	opt stack 0
  1886  000210                     	ds	84
  1887  000264                     _display_content:
  1888                           	opt stack 0
  1889  000264                     	ds	80
  1890  0002B4                     _ToSendDataBuffer:
  1891                           	opt stack 0
  1892  0002B4                     	ds	64
  1893                           tblptru	equ	0xFF8
  1894                           tblptrh	equ	0xFF7
  1895                           tblptrl	equ	0xFF6
  1896                           tablat	equ	0xFF5
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           postdec1	equ	0xFE5
  1900                           fsr1h	equ	0xFE2
  1901                           fsr1l	equ	0xFE1
  1902                           
  1903                           	psect	bssBANK3
  1904  000300                     __pbssBANK3:
  1905                           	opt stack 0
  1906  000300                     _ReceivedDataBuffer:
  1907                           	opt stack 0
  1908  000300                     	ds	64
  1909  000340                     _file_buffer:
  1910                           	opt stack 0
  1911  000340                     	ds	50
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1h	equ	0xFE2
  1920                           fsr1l	equ	0xFE1
  1921                           
  1922                           	psect	dataBANK3
  1923  000372                     __pdataBANK3:
  1924                           	opt stack 0
  1925  000372                     system_init@F8467:
  1926                           	opt stack 0
  1927  000372                     	ds	104
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           fsr1h	equ	0xFE2
  1936                           fsr1l	equ	0xFE1
  1937                           
  1938                           	psect	bssBIGRAMlh
  1939  000800                     __pbssBIGRAMlh:
  1940                           	opt stack 0
  1941  000800                     _pageBuffer:
  1942                           	opt stack 0
  1943  000800                     	ds	1024
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           
  1954                           	psect	bssBIGRAMll
  1955  0003DA                     __pbssBIGRAMll:
  1956                           	opt stack 0
  1957  0003DA                     _buffer:
  1958                           	opt stack 0
  1959  0003DA                     	ds	512
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           postinc0	equ	0xFEE
  1965                           wreg	equ	0xFE8
  1966                           postdec1	equ	0xFE5
  1967                           fsr1h	equ	0xFE2
  1968                           fsr1l	equ	0xFE1
  1969                           
  1970                           	psect	cstackBANK0
  1971  000060                     __pcstackBANK0:
  1972                           	opt stack 0
  1973  000060                     fat_read_from_file@sector:
  1974                           	opt stack 0
  1975  000060                     system_init@appendtext:
  1976                           	opt stack 0
  1977                           
  1978                           ; 104 bytes @ 0x0
  1979  000060                     	ds	2
  1980  000062                     fat_read_from_file@file_number:
  1981                           	opt stack 0
  1982                           
  1983                           ; 1 bytes @ 0x2
  1984  000062                     	ds	1
  1985  000063                     fat_read_from_file@root:
  1986                           	opt stack 0
  1987                           
  1988                           ; 32 bytes @ 0x3
  1989  000063                     	ds	32
  1990  000083                     fat_read_from_file@cluster:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x23
  1994  000083                     	ds	2
  1995  000085                     fat_read_from_file@offset:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x25
  1999  000085                     	ds	2
  2000  000087                     fat_read_from_file@read_length:
  2001                           	opt stack 0
  2002                           
  2003                           ; 2 bytes @ 0x27
  2004  000087                     	ds	2
  2005  000089                     fat_read_from_file@position:
  2006                           	opt stack 0
  2007                           
  2008                           ; 4 bytes @ 0x29
  2009  000089                     	ds	4
  2010  00008D                     __bootloader_program@buffer:
  2011                           	opt stack 0
  2012                           
  2013                           ; 2 bytes @ 0x2D
  2014  00008D                     	ds	2
  2015  00008F                     __bootloader_program@entry_page:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x2F
  2019  00008F                     	ds	2
  2020  000091                     __bootloader_program@address_within_page:
  2021                           	opt stack 0
  2022                           
  2023                           ; 2 bytes @ 0x31
  2024  000091                     	ds	2
  2025  000093                     __bootloader_program@return_value:
  2026                           	opt stack 0
  2027                           
  2028                           ; 4 bytes @ 0x33
  2029  000093                     	ds	4
  2030  000097                     __bootloader_program@address32:
  2031                           	opt stack 0
  2032                           
  2033                           ; 4 bytes @ 0x37
  2034  000097                     	ds	4
  2035  00009B                     __bootloader_program@start_from_byte:
  2036                           	opt stack 0
  2037                           
  2038                           ; 1 bytes @ 0x3B
  2039  00009B                     	ds	1
  2040  00009C                     __bootloader_program@cntr:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0x3C
  2044  00009C                     	ds	2
  2045  00009E                     __bootloader_program@page_to_write:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0x3E
  2049  00009E                     	ds	42
  2050  0000C8                     system_init@filename:
  2051                           	opt stack 0
  2052                           
  2053                           ; 9 bytes @ 0x68
  2054  0000C8                     	ds	9
  2055  0000D1                     system_init@filename2:
  2056                           	opt stack 0
  2057                           
  2058                           ; 9 bytes @ 0x71
  2059  0000D1                     	ds	9
  2060  0000DA                     system_init@extension:
  2061                           	opt stack 0
  2062                           
  2063                           ; 4 bytes @ 0x7A
  2064  0000DA                     	ds	4
  2065  0000DE                     system_init@extension2:
  2066                           	opt stack 0
  2067                           
  2068                           ; 4 bytes @ 0x7E
  2069  0000DE                     	ds	4
  2070                           tblptru	equ	0xFF8
  2071                           tblptrh	equ	0xFF7
  2072                           tblptrl	equ	0xFF6
  2073                           tablat	equ	0xFF5
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           postdec1	equ	0xFE5
  2077                           fsr1h	equ	0xFE2
  2078                           fsr1l	equ	0xFE1
  2079                           
  2080                           	psect	cstackCOMRAM
  2081  000001                     __pcstackCOMRAM:
  2082                           	opt stack 0
  2083  000001                     ??_USBStdGetDscHandler:
  2084  000001                     ??_USBStdGetStatusHandler:
  2085  000001                     ??__i2c_wait_idle:
  2086  000001                     ??__display_clear:
  2087  000001                     ?_USBTransferOnePacket:
  2088                           	opt stack 0
  2089  000001                     ?_ExternalFlash_MediaInitialize:
  2090                           	opt stack 0
  2091  000001                     ?_ExternalFlash_SectorSizeRead:
  2092                           	opt stack 0
  2093  000001                     ?_bootloader_get_entries:
  2094                           	opt stack 0
  2095  000001                     ?_bootloader_get_total_entries:
  2096                           	opt stack 0
  2097  000001                     ?_bootloader_get_rec_address:
  2098                           	opt stack 0
  2099  000001                     ?_bootloader_get_flashPagesWritten:
  2100                           	opt stack 0
  2101  000001                     ?_strncmp:
  2102                           	opt stack 0
  2103  000001                     ?_internalFlash_pageFromAddress:
  2104                           	opt stack 0
  2105  000001                     ?_internalFlash_getBuffer:
  2106                           	opt stack 0
  2107  000001                     ?__sector_from_cluster:
  2108                           	opt stack 0
  2109  000001                     ?___lwdiv:
  2110                           	opt stack 0
  2111  000001                     ?___lwmod:
  2112                           	opt stack 0
  2113  000001                     ?_ExternalFlash_CapacityRead:
  2114                           	opt stack 0
  2115  000001                     ?_bootloader_get_file_size:
  2116                           	opt stack 0
  2117  000001                     ?_internalFlash_addressFromPage:
  2118                           	opt stack 0
  2119  000001                     ?___lldiv:
  2120                           	opt stack 0
  2121  000001                     ?___llmod:
  2122                           	opt stack 0
  2123  000001                     USBTransferOnePacket@dir:
  2124                           	opt stack 0
  2125  000001                     USBStallEndpoint@dir:
  2126                           	opt stack 0
  2127  000001                     USBConfigureEndpoint@direction:
  2128                           	opt stack 0
  2129  000001                     USBCtrlTrfTxService@byteToSend:
  2130                           	opt stack 0
  2131  000001                     USBCtrlTrfRxService@i:
  2132                           	opt stack 0
  2133  000001                     __i2c_send@dat:
  2134                           	opt stack 0
  2135  000001                     i2c_set_frequency@frequency:
  2136                           	opt stack 0
  2137  000001                     get_next_eeprom_write_task@task:
  2138                           	opt stack 0
  2139  000001                     display_get_character@position:
  2140                           	opt stack 0
  2141  000001                     __display_start@cntr:
  2142                           	opt stack 0
  2143  000001                     rtcc_set_year@year:
  2144                           	opt stack 0
  2145  000001                     rtcc_set_month@month:
  2146                           	opt stack 0
  2147  000001                     rtcc_set_day@day:
  2148                           	opt stack 0
  2149  000001                     rtcc_set_hours@hours:
  2150                           	opt stack 0
  2151  000001                     rtcc_set_minutes@minutes:
  2152                           	opt stack 0
  2153  000001                     rtcc_set_seconds@seconds:
  2154                           	opt stack 0
  2155  000001                     hexCharToUint8@c:
  2156                           	opt stack 0
  2157  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2158                           	opt stack 0
  2159  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2160                           	opt stack 0
  2161  000001                     SYSTEM_Initialize@pll_startup_counter:
  2162                           	opt stack 0
  2163  000001                     __i2c_eeprom_load_default_calibration@buffer:
  2164                           	opt stack 0
  2165  000001                     __flash_spi_tx@data:
  2166                           	opt stack 0
  2167  000001                     __flash_spi_tx_tx@command:
  2168                           	opt stack 0
  2169  000001                     __flash_spi_tx_rx@command:
  2170                           	opt stack 0
  2171  000001                     ExternalFlash_MediaInitialize@config:
  2172                           	opt stack 0
  2173  000001                     ExternalFlash_SectorSizeRead@config:
  2174                           	opt stack 0
  2175  000001                     ExternalFlash_CapacityRead@config:
  2176                           	opt stack 0
  2177  000001                     ExternalFlash_MediaDetect@config:
  2178                           	opt stack 0
  2179  000001                     ExternalFlash_WriteProtectStateGet@config:
  2180                           	opt stack 0
  2181  000001                     __sector_from_cluster@fat_cluster:
  2182                           	opt stack 0
  2183  000001                     __get_mbr@idx:
  2184                           	opt stack 0
  2185  000001                     __get_fbr@idx:
  2186                           	opt stack 0
  2187  000001                     __get_fat@idx:
  2188                           	opt stack 0
  2189  000001                     __get_root@idx:
  2190                           	opt stack 0
  2191  000001                     __get_data@idx:
  2192                           	opt stack 0
  2193  000001                     internalFlash_addressFromPage@page:
  2194                           	opt stack 0
  2195  000001                     ___lwdiv@dividend:
  2196                           	opt stack 0
  2197  000001                     ___lwmod@dividend:
  2198                           	opt stack 0
  2199  000001                     memcpy@d1:
  2200                           	opt stack 0
  2201  000001                     memset@p1:
  2202                           	opt stack 0
  2203  000001                     strncmp@s1:
  2204                           	opt stack 0
  2205  000001                     __bootloader_check_address@address:
  2206                           	opt stack 0
  2207  000001                     internalFlash_pageFromAddress@address:
  2208                           	opt stack 0
  2209  000001                     ___lldiv@dividend:
  2210                           	opt stack 0
  2211  000001                     ___llmod@dividend:
  2212                           	opt stack 0
  2213                           
  2214                           ; 4 bytes @ 0x0
  2215  000001                     	ds	1
  2216  000002                     ??_USBConfigureEndpoint:
  2217  000002                     ??_display_get_character:
  2218  000002                     ??_USBStallEndpoint:
  2219  000002                     USBCtrlTrfRxService@byteToRead:
  2220                           	opt stack 0
  2221  000002                     USBCtrlTrfInHandler@lastDTS:
  2222                           	opt stack 0
  2223  000002                     __parse_command_long@data:
  2224                           	opt stack 0
  2225  000002                     schedule_eeprom_write_task@task:
  2226                           	opt stack 0
  2227  000002                     hexCharToUint8@ascii:
  2228                           	opt stack 0
  2229  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2230                           	opt stack 0
  2231  000002                     USBTransferOnePacket@data:
  2232                           	opt stack 0
  2233  000002                     USBStdGetStatusHandler@p:
  2234                           	opt stack 0
  2235                           
  2236                           ; 2 bytes @ 0x1
  2237  000002                     	ds	1
  2238  000003                     ??_MSDComputeDeviceInAndResidue:
  2239  000003                     ??__get_mbr:
  2240  000003                     ??__get_fbr:
  2241  000003                     ??__get_fat:
  2242  000003                     ??__get_root:
  2243  000003                     ?_hexCharsToUint16:
  2244                           	opt stack 0
  2245  000003                     __parse_command_long@cmd:
  2246                           	opt stack 0
  2247  000003                     __i2c_eeprom_load_default_calibration@index:
  2248                           	opt stack 0
  2249  000003                     schedule_eeprom_write_task@idx:
  2250                           	opt stack 0
  2251  000003                     __display_clear@row:
  2252                           	opt stack 0
  2253  000003                     hexCharsToUint8@c2:
  2254                           	opt stack 0
  2255  000003                     hexCharsToUint16@c2:
  2256                           	opt stack 0
  2257  000003                     SYSTEM_Initialize@pll_startup_counter_2666:
  2258                           	opt stack 0
  2259  000003                     __flash_spi_tx@length:
  2260                           	opt stack 0
  2261  000003                     __flash_spi_tx_tx@command_length:
  2262                           	opt stack 0
  2263  000003                     __flash_spi_tx_rx@command_length:
  2264                           	opt stack 0
  2265  000003                     internalFlash_erasePage@page:
  2266                           	opt stack 0
  2267  000003                     internalFlash_writePage@page:
  2268                           	opt stack 0
  2269  000003                     ___lwdiv@divisor:
  2270                           	opt stack 0
  2271  000003                     ___lwmod@divisor:
  2272                           	opt stack 0
  2273  000003                     memset@c:
  2274                           	opt stack 0
  2275  000003                     strncmp@s2:
  2276                           	opt stack 0
  2277  000003                     memcpy@s1:
  2278                           	opt stack 0
  2279                           
  2280                           ; 3 bytes @ 0x2
  2281  000003                     	ds	1
  2282  000004                     ??_hexCharsToUint8:
  2283  000004                     USBTransferOnePacket@len:
  2284                           	opt stack 0
  2285  000004                     __parse_command_calibration@item:
  2286                           	opt stack 0
  2287  000004                     display_get_character@line:
  2288                           	opt stack 0
  2289  000004                     __display_clear@col:
  2290                           	opt stack 0
  2291  000004                     hexCharsToUint16@c3:
  2292                           	opt stack 0
  2293                           
  2294                           ; 1 bytes @ 0x3
  2295  000004                     	ds	1
  2296  000005                     ??_USBTransferOnePacket:
  2297  000005                     ??__fill_buffer_get_display1:
  2298  000005                     ??__fill_buffer_get_display2:
  2299  000005                     ??_internalFlash_pageFromAddress:
  2300  000005                     ??__flash_spi_tx:
  2301  000005                     SYSTEM_Initialize@state:
  2302                           	opt stack 0
  2303  000005                     __parse_command_calibration@dat1:
  2304                           	opt stack 0
  2305  000005                     hexCharsToUint8@c1:
  2306                           	opt stack 0
  2307  000005                     hexCharsToUint16@c4:
  2308                           	opt stack 0
  2309  000005                     __bootloader_check_address@dataLength:
  2310                           	opt stack 0
  2311  000005                     ___lwmod@counter:
  2312                           	opt stack 0
  2313  000005                     __flash_spi_tx_tx@data:
  2314                           	opt stack 0
  2315  000005                     __flash_spi_tx_rx@data:
  2316                           	opt stack 0
  2317  000005                     ___lwdiv@quotient:
  2318                           	opt stack 0
  2319  000005                     memset@n:
  2320                           	opt stack 0
  2321  000005                     strncmp@len:
  2322                           	opt stack 0
  2323  000005                     internalFlash_erasePage@address:
  2324                           	opt stack 0
  2325  000005                     internalFlash_writePage@address:
  2326                           	opt stack 0
  2327  000005                     internalFlash_addressFromPage@address:
  2328                           	opt stack 0
  2329  000005                     ___lldiv@divisor:
  2330                           	opt stack 0
  2331  000005                     ___llmod@divisor:
  2332                           	opt stack 0
  2333                           
  2334                           ; 4 bytes @ 0x4
  2335  000005                     	ds	1
  2336  000006                     ??_hexCharsToUint16:
  2337  000006                     ??__bootloader_check_address:
  2338  000006                     USBStallEndpoint@ep:
  2339                           	opt stack 0
  2340  000006                     USBConfigureEndpoint@EPNum:
  2341                           	opt stack 0
  2342  000006                     __fill_buffer_get_display1@cntr:
  2343                           	opt stack 0
  2344  000006                     __fill_buffer_get_display2@cntr:
  2345                           	opt stack 0
  2346  000006                     __parse_command_calibration@dat2:
  2347                           	opt stack 0
  2348  000006                     hexCharsToUint8@retVal:
  2349                           	opt stack 0
  2350  000006                     __i2c_write@data:
  2351                           	opt stack 0
  2352  000006                     __i2c_read@data:
  2353                           	opt stack 0
  2354  000006                     i2c_display_write_fixed@data:
  2355                           	opt stack 0
  2356  000006                     memcpy@n:
  2357                           	opt stack 0
  2358                           
  2359                           ; 2 bytes @ 0x5
  2360  000006                     	ds	1
  2361  000007                     ??_strncmp:
  2362  000007                     __fill_buffer_get_display1@line:
  2363                           	opt stack 0
  2364  000007                     __fill_buffer_get_display2@line:
  2365                           	opt stack 0
  2366  000007                     __parse_command_calibration@dat3:
  2367                           	opt stack 0
  2368  000007                     ___lwdiv@counter:
  2369                           	opt stack 0
  2370  000007                     USBStallEndpoint@p:
  2371                           	opt stack 0
  2372  000007                     USBConfigureEndpoint@handle:
  2373                           	opt stack 0
  2374  000007                     __flash_spi_tx_tx@data_length:
  2375                           	opt stack 0
  2376  000007                     __flash_spi_tx_rx@data_length:
  2377                           	opt stack 0
  2378  000007                     memset@p:
  2379                           	opt stack 0
  2380                           
  2381                           ; 2 bytes @ 0x6
  2382  000007                     	ds	1
  2383  000008                     ??__parse_command_calibration:
  2384  000008                     __fill_buffer_get_display1@position:
  2385                           	opt stack 0
  2386  000008                     __fill_buffer_get_display2@position:
  2387                           	opt stack 0
  2388  000008                     __i2c_write@length:
  2389                           	opt stack 0
  2390  000008                     __i2c_read@length:
  2391                           	opt stack 0
  2392  000008                     i2c_display_write_fixed@length:
  2393                           	opt stack 0
  2394  000008                     utoa@buf:
  2395                           	opt stack 0
  2396  000008                     memcpy@s:
  2397                           	opt stack 0
  2398                           
  2399                           ; 3 bytes @ 0x7
  2400  000008                     	ds	1
  2401  000009                     ??__i2c_read:
  2402  000009                     ??__flash_spi_tx_tx:
  2403  000009                     ??__flash_spi_tx_rx:
  2404  000009                     ?_internalFlash_addressWithinPage:
  2405                           	opt stack 0
  2406  000009                     USBDeviceInit@i:
  2407                           	opt stack 0
  2408  000009                     USBEnableEndpoint@options:
  2409                           	opt stack 0
  2410  000009                     USBTransferOnePacket@ep:
  2411                           	opt stack 0
  2412  000009                     MSDErrorHandler@ErrorCase:
  2413                           	opt stack 0
  2414  000009                     __i2c_write@slave_address:
  2415                           	opt stack 0
  2416  000009                     i2c_display_write_fixed@pos:
  2417                           	opt stack 0
  2418  000009                     __flash_wakeup@command:
  2419                           	opt stack 0
  2420  000009                     hexCharsToUint16@c1:
  2421                           	opt stack 0
  2422  000009                     ___llmod@counter:
  2423                           	opt stack 0
  2424  000009                     internalFlash_writePage@cntr:
  2425                           	opt stack 0
  2426  000009                     internalFlash_addressWithinPage@address:
  2427                           	opt stack 0
  2428  000009                     ___lldiv@quotient:
  2429                           	opt stack 0
  2430                           
  2431                           ; 4 bytes @ 0x8
  2432  000009                     	ds	1
  2433  00000A                     MSDErrorHandler@OldMSD_State:
  2434                           	opt stack 0
  2435  00000A                     __i2c_write@cntr:
  2436                           	opt stack 0
  2437  00000A                     __bootloader_check_address@worst_case:
  2438                           	opt stack 0
  2439  00000A                     USBEnableEndpoint@p:
  2440                           	opt stack 0
  2441  00000A                     USBTransferOnePacket@handle:
  2442                           	opt stack 0
  2443  00000A                     __parse_command_calibration@parameter:
  2444                           	opt stack 0
  2445  00000A                     hexCharsToUint16@retVal:
  2446                           	opt stack 0
  2447  00000A                     utoa@val:
  2448                           	opt stack 0
  2449                           
  2450                           ; 2 bytes @ 0x9
  2451  00000A                     	ds	1
  2452  00000B                     __ic2_display_set_address@address:
  2453                           	opt stack 0
  2454  00000B                     i2c_digipot_backlight@level:
  2455                           	opt stack 0
  2456  00000B                     __bootloader_check_address@byte_status:
  2457                           	opt stack 0
  2458  00000B                     internalFlash_writePage@block_cntr:
  2459                           	opt stack 0
  2460  00000B                     i2c_digipot_reset_on@data_array:
  2461                           	opt stack 0
  2462  00000B                     i2c_digipot_reset_off@data_array:
  2463                           	opt stack 0
  2464  00000B                     i2c_eeprom_write@address:
  2465                           	opt stack 0
  2466  00000B                     memcpy@d:
  2467                           	opt stack 0
  2468  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2469                           	opt stack 0
  2470  00000B                     i2c_display_send_init_sequence@init_sequence:
  2471                           	opt stack 0
  2472                           
  2473                           ; 9 bytes @ 0xA
  2474  00000B                     	ds	1
  2475  00000C                     ??_USBMSDInit:
  2476  00000C                     ?_parseHexFileEntry:
  2477                           	opt stack 0
  2478  00000C                     USBEnableEndpoint@ep:
  2479                           	opt stack 0
  2480  00000C                     __bootloader_check_address@cntr:
  2481                           	opt stack 0
  2482  00000C                     internalFlash_writePage@byte_cntr:
  2483                           	opt stack 0
  2484  00000C                     _USBCheckMSDRequest$2316:
  2485                           	opt stack 0
  2486  00000C                     MSDTransferTerminated@handle:
  2487                           	opt stack 0
  2488  00000C                     __ic2_display_set_address@data_array:
  2489                           	opt stack 0
  2490  00000C                     i2c_digipot_backlight@data_array:
  2491                           	opt stack 0
  2492  00000C                     parseHexFileEntry@data:
  2493                           	opt stack 0
  2494  00000C                     utoa@base:
  2495                           	opt stack 0
  2496                           
  2497                           ; 2 bytes @ 0xB
  2498  00000C                     	ds	1
  2499  00000D                     ?__flash_get_status:
  2500                           	opt stack 0
  2501  00000D                     ___lldiv@counter:
  2502                           	opt stack 0
  2503  00000D                     memcpy@tmp:
  2504                           	opt stack 0
  2505  00000D                     i2c_eeprom_write@data:
  2506                           	opt stack 0
  2507  00000D                     internalFlash_addressWithinPage@page:
  2508                           	opt stack 0
  2509                           
  2510                           ; 2 bytes @ 0xC
  2511  00000D                     	ds	1
  2512  00000E                     i2c_display_cursor@position:
  2513                           	opt stack 0
  2514  00000E                     _USBCheckMSDRequest$2317:
  2515                           	opt stack 0
  2516  00000E                     _MSDTransferTerminated$2404:
  2517                           	opt stack 0
  2518  00000E                     utoa@v:
  2519                           	opt stack 0
  2520  00000E                     parseHexFileEntry@offset:
  2521                           	opt stack 0
  2522  00000E                     internalFlash_read@address:
  2523                           	opt stack 0
  2524                           
  2525                           ; 4 bytes @ 0xD
  2526  00000E                     	ds	1
  2527  00000F                     ??_internalFlash_addressWithinPage:
  2528  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2529                           	opt stack 0
  2530  00000F                     i2c_display_cursor@line:
  2531                           	opt stack 0
  2532  00000F                     i2c_eeprom_write@length:
  2533                           	opt stack 0
  2534  00000F                     __flash_get_status@command:
  2535                           	opt stack 0
  2536                           
  2537                           ; 1 bytes @ 0xE
  2538  00000F                     	ds	1
  2539  000010                     ??_i2c_eeprom_write:
  2540  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2541                           	opt stack 0
  2542  000010                     __i2c_read@slave_address:
  2543                           	opt stack 0
  2544  000010                     i2c_display_cursor@address:
  2545                           	opt stack 0
  2546  000010                     utoa@c:
  2547                           	opt stack 0
  2548  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2549                           	opt stack 0
  2550  000010                     __flash_get_status@status:
  2551                           	opt stack 0
  2552                           
  2553                           ; 2 bytes @ 0xF
  2554  000010                     	ds	1
  2555  000011                     MSDCheckForErrorCases@DeviceNoData:
  2556                           	opt stack 0
  2557  000011                     __i2c_read@cntr:
  2558                           	opt stack 0
  2559  000011                     itoa@buf:
  2560                           	opt stack 0
  2561                           
  2562                           ; 2 bytes @ 0x10
  2563  000011                     	ds	1
  2564  000012                     internalFlash_read@data_length:
  2565                           	opt stack 0
  2566  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2567                           	opt stack 0
  2568  000012                     i2c_eeprom_read@address:
  2569                           	opt stack 0
  2570  000012                     flash_is_busy@status:
  2571                           	opt stack 0
  2572  000012                     parseHexFileEntry@hexEntry:
  2573                           	opt stack 0
  2574                           
  2575                           ; 2 bytes @ 0x11
  2576  000012                     	ds	1
  2577  000013                     internalFlash_read@buffer:
  2578                           	opt stack 0
  2579  000013                     itoa@val:
  2580                           	opt stack 0
  2581  000013                     internalFlash_addressWithinPage@page_start_address:
  2582                           	opt stack 0
  2583  000013                     i2c_eeprom_write@dat:
  2584                           	opt stack 0
  2585                           
  2586                           ; 17 bytes @ 0x12
  2587  000013                     	ds	1
  2588  000014                     ??_parseHexFileEntry:
  2589  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2590                           	opt stack 0
  2591  000014                     i2c_eeprom_read@data:
  2592                           	opt stack 0
  2593  000014                     __flash_compare_page_to_buffer@page:
  2594                           	opt stack 0
  2595  000014                     __flash_write_to_buffer@start:
  2596                           	opt stack 0
  2597  000014                     __flash_write_page_from_buffer@page:
  2598                           	opt stack 0
  2599  000014                     flash_partial_read@page:
  2600                           	opt stack 0
  2601  000014                     __flash_set_page_size@command:
  2602                           	opt stack 0
  2603                           
  2604                           ; 4 bytes @ 0x13
  2605  000014                     	ds	1
  2606  000015                     internalFlash_readPage@page:
  2607                           	opt stack 0
  2608  000015                     itoa@base:
  2609                           	opt stack 0
  2610                           
  2611                           ; 2 bytes @ 0x14
  2612  000015                     	ds	1
  2613  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2614  000016                     i2c_eeprom_read@length:
  2615                           	opt stack 0
  2616  000016                     __flash_compare_page_to_buffer@buffer:
  2617                           	opt stack 0
  2618  000016                     __flash_write_page_from_buffer@buffer:
  2619                           	opt stack 0
  2620  000016                     __flash_write_to_buffer@data:
  2621                           	opt stack 0
  2622  000016                     flash_partial_read@start:
  2623                           	opt stack 0
  2624                           
  2625                           ; 2 bytes @ 0x15
  2626  000016                     	ds	1
  2627  000017                     ??_i2c_eeprom_read:
  2628  000017                     ??__flash_compare_page_to_buffer:
  2629  000017                     ??__flash_write_page_from_buffer:
  2630  000017                     itoa@cp:
  2631                           	opt stack 0
  2632  000017                     internalFlash_readPage@address:
  2633                           	opt stack 0
  2634                           
  2635                           ; 4 bytes @ 0x16
  2636  000017                     	ds	1
  2637  000018                     ??_USBStdFeatureReqHandler:
  2638  000018                     USBStdSetCfgHandler@i:
  2639                           	opt stack 0
  2640  000018                     i2c_eeprom_read@addr:
  2641                           	opt stack 0
  2642  000018                     __flash_set_page_size@size:
  2643                           	opt stack 0
  2644  000018                     __flash_write_to_buffer@data_length:
  2645                           	opt stack 0
  2646  000018                     flash_partial_read@length:
  2647                           	opt stack 0
  2648                           
  2649                           ; 2 bytes @ 0x17
  2650  000018                     	ds	1
  2651  000019                     i2c_eeprom_read@slave_address:
  2652                           	opt stack 0
  2653  000019                     USBStdFeatureReqHandler@pUEP:
  2654                           	opt stack 0
  2655  000019                     __display_itoa_u16@value:
  2656                           	opt stack 0
  2657                           
  2658                           ; 4 bytes @ 0x18
  2659  000019                     	ds	1
  2660  00001A                     ??_i2c_eeprom_read_calibration:
  2661  00001A                     __flash_write_to_buffer@buffer:
  2662                           	opt stack 0
  2663  00001A                     __flash_compare_page_to_buffer@status:
  2664                           	opt stack 0
  2665  00001A                     flash_partial_read@data:
  2666                           	opt stack 0
  2667  00001A                     __flash_write_page_from_buffer@command:
  2668                           	opt stack 0
  2669  00001A                     rtcc_read_eeprom@date:
  2670                           	opt stack 0
  2671                           
  2672                           ; 6 bytes @ 0x19
  2673  00001A                     	ds	1
  2674  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2675                           	opt stack 0
  2676  00001B                     __flash_write_to_buffer@command:
  2677                           	opt stack 0
  2678                           
  2679                           ; 4 bytes @ 0x1A
  2680  00001B                     	ds	1
  2681  00001C                     ??_flash_partial_read:
  2682  00001C                     parseHexFileEntry@i:
  2683                           	opt stack 0
  2684  00001C                     USBStdFeatureReqHandler@p:
  2685                           	opt stack 0
  2686  00001C                     i2c_eeprom_read_calibration@buffer:
  2687                           	opt stack 0
  2688  00001C                     __flash_compare_page_to_buffer@command:
  2689                           	opt stack 0
  2690                           
  2691                           ; 4 bytes @ 0x1B
  2692  00001C                     	ds	1
  2693  00001D                     __display_itoa_u16@text:
  2694                           	opt stack 0
  2695                           
  2696                           ; 2 bytes @ 0x1C
  2697  00001D                     	ds	1
  2698  00001E                     ??_USBCtrlEPService:
  2699  00001E                     
  2700                           ; 1 bytes @ 0x1D
  2701  00001E                     	ds	1
  2702  00001F                     ??__display_verify:
  2703  00001F                     ??__display_checked:
  2704  00001F                     __display_programming@cntr:
  2705                           	opt stack 0
  2706  00001F                     __display_done@cntr:
  2707                           	opt stack 0
  2708  00001F                     __display_itoa_u32@value:
  2709                           	opt stack 0
  2710                           
  2711                           ; 4 bytes @ 0x1E
  2712  00001F                     	ds	1
  2713  000020                     USBDeviceTasks@i:
  2714                           	opt stack 0
  2715  000020                     i2c_eeprom_read_calibration@addr:
  2716                           	opt stack 0
  2717  000020                     flash_page_write@page:
  2718                           	opt stack 0
  2719  000020                     flash_partial_read@command:
  2720                           	opt stack 0
  2721                           
  2722                           ; 4 bytes @ 0x1F
  2723  000020                     	ds	1
  2724  000021                     __display_verify@cntr:
  2725                           	opt stack 0
  2726  000021                     __display_checked@start:
  2727                           	opt stack 0
  2728                           
  2729                           ; 1 bytes @ 0x20
  2730  000021                     	ds	1
  2731  000022                     i2c_eeprom_read_calibration@cntr:
  2732                           	opt stack 0
  2733  000022                     __display_checked@cntr:
  2734                           	opt stack 0
  2735  000022                     flash_page_write@data:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x21
  2739  000022                     	ds	1
  2740  000023                     __display_itoa_u32@text:
  2741                           	opt stack 0
  2742                           
  2743                           ; 2 bytes @ 0x22
  2744  000023                     	ds	1
  2745  000024                     i2c_eeprom_write@slave_address:
  2746                           	opt stack 0
  2747  000024                     flash_page_write@match:
  2748                           	opt stack 0
  2749  000024                     flash_partial_read@address:
  2750                           	opt stack 0
  2751                           
  2752                           ; 4 bytes @ 0x23
  2753  000024                     	ds	1
  2754  000025                     ??__display_found:
  2755  000025                     i2c_eeprom_write@cntr:
  2756                           	opt stack 0
  2757  000025                     __display_failed@cntr:
  2758                           	opt stack 0
  2759  000025                     ExternalFlash_SectorWrite@config:
  2760                           	opt stack 0
  2761  000025                     fat_format@cntr:
  2762                           	opt stack 0
  2763                           
  2764                           ; 2 bytes @ 0x24
  2765  000025                     	ds	1
  2766  000026                     ??__write_calibration:
  2767  000026                     rtcc_write_eeprom@date:
  2768                           	opt stack 0
  2769                           
  2770                           ; 6 bytes @ 0x25
  2771  000026                     	ds	1
  2772  000027                     __display_found@start:
  2773                           	opt stack 0
  2774  000027                     ExternalFlash_SectorWrite@sector_addr:
  2775                           	opt stack 0
  2776                           
  2777                           ; 4 bytes @ 0x26
  2778  000027                     	ds	1
  2779  000028                     ?__read_fat:
  2780                           	opt stack 0
  2781  000028                     ?_fat_get_file_size:
  2782                           	opt stack 0
  2783  000028                     __display_found@cntr:
  2784                           	opt stack 0
  2785  000028                     flash_page_read@page:
  2786                           	opt stack 0
  2787  000028                     __read_fat@cluster:
  2788                           	opt stack 0
  2789  000028                     __read_root@data:
  2790                           	opt stack 0
  2791  000028                     fat_find_file@name:
  2792                           	opt stack 0
  2793  000028                     __write_calibration@buffer:
  2794                           	opt stack 0
  2795                           
  2796                           ; 16 bytes @ 0x27
  2797  000028                     	ds	1
  2798  000029                     ??_display_prepare:
  2799                           
  2800                           ; 1 bytes @ 0x28
  2801  000029                     	ds	1
  2802  00002A                     ??__read_root:
  2803  00002A                     flash_page_read@data:
  2804                           	opt stack 0
  2805  00002A                     __read_fat@fat_sector:
  2806                           	opt stack 0
  2807  00002A                     fat_find_file@extension:
  2808                           	opt stack 0
  2809                           
  2810                           ; 2 bytes @ 0x29
  2811  00002A                     	ds	1
  2812  00002B                     display_prepare@mode:
  2813                           	opt stack 0
  2814  00002B                     ExternalFlash_SectorWrite@buffer:
  2815                           	opt stack 0
  2816  00002B                     __read_root@root_sector:
  2817                           	opt stack 0
  2818                           
  2819                           ; 2 bytes @ 0x2A
  2820  00002B                     	ds	1
  2821  00002C                     ??_fat_get_file_size:
  2822  00002C                     ??_fat_get_format_status:
  2823  00002C                     __parse_command_short@cmd:
  2824                           	opt stack 0
  2825  00002C                     ExternalFlash_SectorRead@config:
  2826                           	opt stack 0
  2827  00002C                     __read_fat@offset:
  2828                           	opt stack 0
  2829  00002C                     fat_find_file@buffer:
  2830                           	opt stack 0
  2831                           
  2832                           ; 11 bytes @ 0x2B
  2833  00002C                     	ds	1
  2834  00002D                     ??_APP_DeviceCustomHIDTasks:
  2835  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2836                           	opt stack 0
  2837  00002D                     __read_root@offset:
  2838                           	opt stack 0
  2839  00002D                     fat_get_file_size@sector:
  2840                           	opt stack 0
  2841                           
  2842                           ; 2 bytes @ 0x2C
  2843  00002D                     	ds	1
  2844  00002E                     ExternalFlash_SectorWrite@page:
  2845                           	opt stack 0
  2846  00002E                     __read_fat@value:
  2847                           	opt stack 0
  2848  00002E                     fat_get_format_status@cntr:
  2849                           	opt stack 0
  2850  00002E                     ExternalFlash_SectorRead@sector_addr:
  2851                           	opt stack 0
  2852                           
  2853                           ; 4 bytes @ 0x2D
  2854  00002E                     	ds	1
  2855  00002F                     __read_root@slot:
  2856                           	opt stack 0
  2857  00002F                     fat_get_file_size@file_size:
  2858                           	opt stack 0
  2859                           
  2860                           ; 4 bytes @ 0x2E
  2861  00002F                     	ds	1
  2862  000030                     ??_MSDWriteHandler:
  2863  000030                     fat_read_from_file@start_byte:
  2864                           	opt stack 0
  2865                           
  2866                           ; 4 bytes @ 0x2F
  2867  000030                     	ds	2
  2868  000032                     ExternalFlash_SectorRead@buffer:
  2869                           	opt stack 0
  2870                           
  2871                           ; 2 bytes @ 0x31
  2872  000032                     	ds	1
  2873  000033                     fat_get_file_size@offset:
  2874                           	opt stack 0
  2875                           
  2876                           ; 2 bytes @ 0x32
  2877  000033                     	ds	1
  2878  000034                     ExternalFlash_SectorRead@page:
  2879                           	opt stack 0
  2880  000034                     fat_read_from_file@length:
  2881                           	opt stack 0
  2882                           
  2883                           ; 4 bytes @ 0x33
  2884  000034                     	ds	1
  2885  000035                     fat_get_file_size@file_number:
  2886                           	opt stack 0
  2887  000035                     APP_DeviceCustomHIDTasks@return_value:
  2888                           	opt stack 0
  2889                           
  2890                           ; 2 bytes @ 0x34
  2891  000035                     	ds	1
  2892  000036                     ??_MSDReadHandler:
  2893                           
  2894                           ; 1 bytes @ 0x35
  2895  000036                     	ds	1
  2896  000037                     APP_DeviceCustomHIDTasks@idx:
  2897                           	opt stack 0
  2898  000037                     fat_find_file@slot:
  2899                           	opt stack 0
  2900                           
  2901                           ; 1 bytes @ 0x36
  2902  000037                     	ds	1
  2903  000038                     __write_calibration@addr:
  2904                           	opt stack 0
  2905  000038                     fat_find_file@sector:
  2906                           	opt stack 0
  2907  000038                     fat_read_from_file@data:
  2908                           	opt stack 0
  2909                           
  2910                           ; 2 bytes @ 0x37
  2911  000038                     	ds	2
  2912  00003A                     ??_MSDProcessCommandMediaPresent:
  2913  00003A                     ??_fat_read_from_file:
  2914  00003A                     __write_calibration@ptr:
  2915                           	opt stack 0
  2916  00003A                     fat_find_file@offset:
  2917                           	opt stack 0
  2918                           
  2919                           ; 2 bytes @ 0x39
  2920  00003A                     	ds	2
  2921  00003C                     __write_calibration@index:
  2922                           	opt stack 0
  2923  00003C                     _MSDProcessCommandMediaPresent$2387:
  2924                           	opt stack 0
  2925                           
  2926                           ; 2 bytes @ 0x3B
  2927  00003C                     	ds	1
  2928  00003D                     __write_calibration@cntr:
  2929                           	opt stack 0
  2930                           
  2931                           ; 1 bytes @ 0x3C
  2932  00003D                     	ds	1
  2933  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2934                           	opt stack 0
  2935                           
  2936                           ; 1 bytes @ 0x3D
  2937  00003E                     	ds	1
  2938  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  2939                           	opt stack 0
  2940                           
  2941                           ; 4 bytes @ 0x3E
  2942  00003F                     	ds	4
  2943  000043                     MSDProcessCommandMediaPresent@capacity:
  2944                           	opt stack 0
  2945                           
  2946                           ; 4 bytes @ 0x42
  2947  000043                     	ds	3
  2948  000046                     ??__bootloader_verify_file:
  2949  000046                     ??__bootloader_program:
  2950                           
  2951                           ; 1 bytes @ 0x45
  2952  000046                     	ds	1
  2953  000047                     MSDProcessCommandMediaPresent@i:
  2954                           	opt stack 0
  2955                           
  2956                           ; 1 bytes @ 0x46
  2957  000047                     	ds	1
  2958  000048                     ??_MSDProcessCommand:
  2959  000048                     
  2960                           ; 1 bytes @ 0x47
  2961  000048                     	ds	5
  2962  00004D                     ??_MSDTasks:
  2963                           
  2964                           ; 1 bytes @ 0x4C
  2965  00004D                     	ds	1
  2966  00004E                     __bootloader_verify_file@rec_counter:
  2967                           	opt stack 0
  2968  00004E                     _MSDTasks$2369:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x4D
  2972  00004E                     	ds	1
  2973  00004F                     __bootloader_verify_file@return_value:
  2974                           	opt stack 0
  2975                           
  2976                           ; 4 bytes @ 0x4E
  2977  00004F                     	ds	1
  2978  000050                     _MSDTasks$2370:
  2979                           	opt stack 0
  2980                           
  2981                           ; 2 bytes @ 0x4F
  2982  000050                     	ds	2
  2983  000052                     MSDTasks@i:
  2984                           	opt stack 0
  2985                           
  2986                           ; 1 bytes @ 0x51
  2987  000052                     	ds	1
  2988  000053                     __bootloader_verify_file@address32:
  2989                           	opt stack 0
  2990                           
  2991                           ; 4 bytes @ 0x52
  2992  000053                     	ds	4
  2993  000057                     ??_main:
  2994                           
  2995                           ; 1 bytes @ 0x56
  2996  000057                     	ds	2
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           postinc0	equ	0xFEE
  3002                           wreg	equ	0xFE8
  3003                           postdec1	equ	0xFE5
  3004                           fsr1h	equ	0xFE2
  3005                           fsr1l	equ	0xFE1
  3006                           
  3007 ;;
  3008 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3009 ;;
  3010 ;; *************** function _main *****************
  3011 ;; Defined at:
  3012 ;;		line 76 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;Total ram usage:        2 bytes
  3031 ;; Hardware stack levels required when called:   12
  3032 ;; This function calls:
  3033 ;;		_APP_DeviceCustomHIDTasks
  3034 ;;		_APP_DeviceMSDTasks
  3035 ;;		_SYSTEM_Initialize
  3036 ;;		_USBDeviceInit
  3037 ;;		_USBDeviceTasks
  3038 ;;		_bootloader_run
  3039 ;;		_display_prepare
  3040 ;;		_display_update
  3041 ;;		_i2c_eeprom_tasks
  3042 ;;		_system_init
  3043 ;;		_timer_pseudo_isr
  3044 ;;		_ui_get_status
  3045 ;;		_ui_run
  3046 ;; This function is called by:
  3047 ;;		Startup code after reset
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text0
  3052  00525E                     __ptext0:
  3053                           	opt stack 0
  3054  00525E                     _main:
  3055                           	opt stack 19
  3056                           
  3057                           ;main.c: 79: system_init();
  3058                           
  3059                           ;incstack = 0
  3060  00525E  EC53  F025         	call	_system_init	;wreg free
  3061                           
  3062                           ;main.c: 81: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3063  005262  0E00               	movlw	0
  3064  005264  EC6A  F035         	call	_SYSTEM_Initialize
  3065                           
  3066                           ;main.c: 83: USBDeviceInit();
  3067  005268  ECE6  F01B         	call	_USBDeviceInit	;wreg free
  3068  00526C                     l14589:
  3069                           
  3070                           ;main.c: 87: {
  3071                           ;main.c: 102: USBDeviceTasks();
  3072  00526C  EC61  F01A         	call	_USBDeviceTasks	;wreg free
  3073                           
  3074                           ;main.c: 106: APP_DeviceMSDTasks();
  3075  005270  EC04  F03C         	call	_APP_DeviceMSDTasks	;wreg free
  3076                           
  3077                           ;main.c: 107: APP_DeviceCustomHIDTasks();
  3078  005274  ECD6  F009         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3079                           
  3080                           ;main.c: 111: timer_pseudo_isr();
  3081  005278  EC26  F038         	call	_timer_pseudo_isr	;wreg free
  3082                           
  3083                           ;main.c: 113: if(!os.done)
  3084  00527C  0100               	movlb	0	; () banked
  3085  00527E  51E5               	movf	(_os+3)& (0+255),w,b	;volatile
  3086  005280  A4D8               	btfss	status,2,c
  3087  005282  D7F4               	goto	l14589
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;main.c: 114: {
  3091                           ;main.c: 116: i2c_eeprom_tasks();
  3092  005284  EC0C  F032         	call	_i2c_eeprom_tasks	;wreg free
  3093                           
  3094                           ;main.c: 119: ui_run();
  3095  005288  EC5D  F024         	call	_ui_run	;wreg free
  3096                           
  3097                           ;main.c: 122: switch(os.timeSlot&0b00000111)
  3098  00528C  D024               	goto	l14623
  3099  00528E                     l14601:
  3100                           
  3101                           ;main.c: 125: bootloader_run();
  3102  00528E  EC5C  F037         	call	_bootloader_run	;wreg free
  3103                           
  3104                           ;main.c: 126: break;
  3105  005292  D043               	goto	l14625
  3106  005294                     l14603:
  3107                           
  3108                           ;main.c: 129: bootloader_run();
  3109  005294  EC5C  F037         	call	_bootloader_run	;wreg free
  3110                           
  3111                           ;main.c: 130: break;
  3112  005298  D040               	goto	l14625
  3113  00529A                     l14605:
  3114                           
  3115                           ;main.c: 133: bootloader_run();
  3116  00529A  EC5C  F037         	call	_bootloader_run	;wreg free
  3117                           
  3118                           ;main.c: 134: break;
  3119  00529E  D03D               	goto	l14625
  3120  0052A0                     l14607:
  3121                           
  3122                           ;main.c: 137: bootloader_run();
  3123  0052A0  EC5C  F037         	call	_bootloader_run	;wreg free
  3124                           
  3125                           ;main.c: 138: break;
  3126  0052A4  D03A               	goto	l14625
  3127  0052A6                     l14609:
  3128                           
  3129                           ;main.c: 141: bootloader_run();
  3130  0052A6  EC5C  F037         	call	_bootloader_run	;wreg free
  3131                           
  3132                           ;main.c: 142: break;
  3133  0052AA  D037               	goto	l14625
  3134  0052AC                     l14611:
  3135                           
  3136                           ;main.c: 145: bootloader_run();
  3137  0052AC  EC5C  F037         	call	_bootloader_run	;wreg free
  3138                           
  3139                           ;main.c: 146: break;
  3140  0052B0  D034               	goto	l14625
  3141  0052B2                     l14613:
  3142                           
  3143                           ;main.c: 149: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3144  0052B2  EC77  F03C         	call	_ui_get_status	;wreg free
  3145  0052B6  0A05               	xorlw	5
  3146  0052B8  A4D8               	btfss	status,2,c
  3147  0052BA  D02F               	goto	l14625
  3148                           
  3149                           ;main.c: 150: {
  3150                           ;main.c: 151: display_prepare(os.display_mode);
  3151  0052BC  0100               	movlb	0	; () banked
  3152  0052BE  51E7               	movf	(_os+5)& (0+255),w,b	;volatile
  3153  0052C0  ECC9  F028         	call	_display_prepare
  3154                           
  3155                           ;main.c: 152: }
  3156                           ;main.c: 153: break;
  3157  0052C4  D02A               	goto	l14625
  3158  0052C6                     l14617:
  3159                           
  3160                           ;main.c: 156: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3161  0052C6  EC77  F03C         	call	_ui_get_status	;wreg free
  3162  0052CA  0A05               	xorlw	5
  3163  0052CC  A4D8               	btfss	status,2,c
  3164  0052CE  D025               	goto	l14625
  3165                           
  3166                           ;main.c: 157: {
  3167                           ;main.c: 158: display_update();
  3168  0052D0  EC7C  F032         	call	_display_update	;wreg free
  3169                           
  3170                           ;main.c: 161: }
  3171                           
  3172                           ;main.c: 159: }
  3173                           ;main.c: 160: break;
  3174  0052D4  D022               	goto	l14625
  3175  0052D6                     l14623:
  3176  0052D6  0100               	movlb	0	; () banked
  3177  0052D8  51E4               	movf	(_os+2)& (0+255),w,b	;volatile
  3178  0052DA  0B07               	andlw	7
  3179  0052DC  6E57               	movwf	??_main& (0+255),c
  3180  0052DE  6A58               	clrf	(??_main+1)& (0+255),c
  3181                           
  3182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3183                           ; Switch size 1, requested type "space"
  3184                           ; Number of cases is 1, Range of values is 0 to 0
  3185                           ; switch strategies available:
  3186                           ; Name         Instructions Cycles
  3187                           ; simple_byte            4     3 (average)
  3188                           ;	Chosen strategy is simple_byte
  3189  0052E0  5058               	movf	??_main+1,w,c
  3190  0052E2  0A00               	xorlw	0	; case 0
  3191  0052E4  A4D8               	btfss	status,2,c
  3192  0052E6  D019               	goto	l14625
  3193                           
  3194                           ; BSR set to: 0
  3195                           ; Switch size 1, requested type "space"
  3196                           ; Number of cases is 8, Range of values is 0 to 7
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte           25    13 (average)
  3200                           ;	Chosen strategy is simple_byte
  3201  0052E8  5057               	movf	??_main,w,c
  3202  0052EA  0A00               	xorlw	0	; case 0
  3203  0052EC  B4D8               	btfsc	status,2,c
  3204  0052EE  D7CF               	goto	l14601
  3205  0052F0  0A01               	xorlw	1	; case 1
  3206  0052F2  B4D8               	btfsc	status,2,c
  3207  0052F4  D7CF               	goto	l14603
  3208  0052F6  0A03               	xorlw	3	; case 2
  3209  0052F8  B4D8               	btfsc	status,2,c
  3210  0052FA  D7CF               	goto	l14605
  3211  0052FC  0A01               	xorlw	1	; case 3
  3212  0052FE  B4D8               	btfsc	status,2,c
  3213  005300  D7CF               	goto	l14607
  3214  005302  0A07               	xorlw	7	; case 4
  3215  005304  B4D8               	btfsc	status,2,c
  3216  005306  D7CF               	goto	l14609
  3217  005308  0A01               	xorlw	1	; case 5
  3218  00530A  B4D8               	btfsc	status,2,c
  3219  00530C  D7CF               	goto	l14611
  3220  00530E  0A03               	xorlw	3	; case 6
  3221  005310  B4D8               	btfsc	status,2,c
  3222  005312  D7CF               	goto	l14613
  3223  005314  0A01               	xorlw	1	; case 7
  3224  005316  B4D8               	btfsc	status,2,c
  3225  005318  D7D6               	goto	l14617
  3226  00531A                     l14625:
  3227                           
  3228                           ;main.c: 162: os.done = 1;
  3229  00531A  0E01               	movlw	1
  3230  00531C  0100               	movlb	0	; () banked
  3231  00531E  6FE5               	movwf	(_os+3)& (0+255),b	;volatile
  3232                           
  3233                           ; BSR set to: 0
  3234                           
  3235                           ; BSR set to: 0
  3236  005320  D7A5               	goto	l14589
  3237  005322                     __end_of_main:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           postinc0	equ	0xFEE
  3244                           wreg	equ	0xFE8
  3245                           postdec1	equ	0xFE5
  3246                           fsr1h	equ	0xFE2
  3247                           fsr1l	equ	0xFE1
  3248                           status	equ	0xFD8
  3249                           
  3250 ;; *************** function _ui_run *****************
  3251 ;; Defined at:
  3252 ;;		line 70 in file "ui.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;Total ram usage:        0 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    3
  3273 ;; This function calls:
  3274 ;;		__ui_encoder
  3275 ;;		_i2c_digipot_backlight
  3276 ;;		_i2c_digipot_reset_off
  3277 ;;		_i2c_digipot_reset_on
  3278 ;;		_i2c_display_send_init_sequence
  3279 ;;		_system_encoder_enable
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text1
  3286  0048BA                     __ptext1:
  3287                           	opt stack 0
  3288  0048BA                     _ui_run:
  3289                           	opt stack 27
  3290                           
  3291                           ;ui.c: 72: switch(userInterfaceStatus)
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;incstack = 0
  3295  0048BA  D067               	goto	l14347
  3296  0048BC                     l14299:
  3297                           
  3298                           ;ui.c: 75: if (os.buttonCount!=0)
  3299  0048BC  0100               	movlb	0	; () banked
  3300  0048BE  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  3301  0048C0  B4D8               	btfsc	status,2,c
  3302  0048C2  0012               	return	
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;ui.c: 76: {
  3306                           ;ui.c: 78: LATCbits.LC2 = 1;
  3307  0048C4  848B               	bsf	3979,2,c	;volatile
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;ui.c: 79: os.buttonCount = 0;
  3311  0048C6  0E00               	movlw	0
  3312  0048C8  0100               	movlb	0	; () banked
  3313  0048CA  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  3314                           
  3315                           ;ui.c: 81: system_ui_inactive_count = 0;
  3316  0048CC  0E00               	movlw	0
  3317  0048CE  0101               	movlb	1	; () banked
  3318  0048D0  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3319  0048D2  0E00               	movlw	0
  3320  0048D4  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3321                           
  3322                           ;ui.c: 82: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  3323  0048D6  0E01               	movlw	1
  3324  0048D8  0101               	movlb	1	; () banked
  3325  0048DA  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3326                           
  3327                           ; BSR set to: 1
  3328                           ;ui.c: 83: }
  3329                           ;ui.c: 84: break;
  3330  0048DC  0012               	return	
  3331  0048DE                     l1501:
  3332                           
  3333                           ; BSR set to: 1
  3334                           ;ui.c: 88: LATDbits.LD0 = 0;
  3335  0048DE  908C               	bcf	3980,0,c	;volatile
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;ui.c: 90: system_ui_inactive_count = 0;
  3339  0048E0  0E00               	movlw	0
  3340  0048E2  0101               	movlb	1	; () banked
  3341  0048E4  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3342  0048E6  0E00               	movlw	0
  3343  0048E8  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3344                           
  3345                           ;ui.c: 91: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3346  0048EA  0E02               	movlw	2
  3347  0048EC  0101               	movlb	1	; () banked
  3348  0048EE  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3349                           
  3350                           ;ui.c: 92: break;
  3351  0048F0  0012               	return	
  3352  0048F2                     l14307:
  3353                           
  3354                           ; BSR set to: 1
  3355                           ;ui.c: 96: i2c_digipot_reset_on();
  3356  0048F2  ECCD  F03A         	call	_i2c_digipot_reset_on	;wreg free
  3357                           
  3358                           ;ui.c: 98: system_ui_inactive_count = 0;
  3359  0048F6  0E00               	movlw	0
  3360  0048F8  0101               	movlb	1	; () banked
  3361  0048FA  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3362  0048FC  0E00               	movlw	0
  3363  0048FE  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3364                           
  3365                           ; BSR set to: 1
  3366                           ;ui.c: 99: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3367  004900  0E03               	movlw	3
  3368  004902  0101               	movlb	1	; () banked
  3369  004904  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3370                           
  3371                           ;ui.c: 100: break;
  3372  004906  0012               	return	
  3373  004908                     l14313:
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;ui.c: 103: ++system_ui_inactive_count;
  3377  004908  0101               	movlb	1	; () banked
  3378  00490A  4B72               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3379  00490C  2B73               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3380                           
  3381                           ; BSR set to: 1
  3382                           ;ui.c: 105: if (system_ui_inactive_count>3)
  3383  00490E  0101               	movlb	1	; () banked
  3384  004910  5173               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3385  004912  E105               	bnz	u11400
  3386  004914  0E04               	movlw	4
  3387  004916  0101               	movlb	1	; () banked
  3388  004918  5D72               	subwf	_system_ui_inactive_count& (0+255),w,b
  3389  00491A  A0D8               	btfss	status,0,c
  3390  00491C  0012               	return	
  3391  00491E                     u11400:
  3392                           
  3393                           ; BSR set to: 1
  3394                           ;ui.c: 106: {
  3395                           ;ui.c: 107: i2c_digipot_reset_off();
  3396  00491E  ECDE  F03A         	call	_i2c_digipot_reset_off	;wreg free
  3397                           
  3398                           ;ui.c: 108: system_ui_inactive_count = 0;
  3399  004922  0E00               	movlw	0
  3400  004924  0101               	movlb	1	; () banked
  3401  004926  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3402  004928  0E00               	movlw	0
  3403  00492A  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3404                           
  3405                           ; BSR set to: 1
  3406                           ;ui.c: 109: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3407  00492C  0E04               	movlw	4
  3408  00492E  0101               	movlb	1	; () banked
  3409  004930  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;ui.c: 110: }
  3413                           ;ui.c: 111: break;
  3414  004932  0012               	return	
  3415  004934                     l14323:
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;ui.c: 115: i2c_display_send_init_sequence();
  3419  004934  ECC4  F039         	call	_i2c_display_send_init_sequence	;wreg free
  3420                           
  3421                           ;ui.c: 117: i2c_digipot_backlight(150);
  3422  004938  0E96               	movlw	150
  3423  00493A  EC82  F03A         	call	_i2c_digipot_backlight
  3424                           
  3425                           ;ui.c: 119: system_encoder_enable();
  3426  00493E  EC16  F03C         	call	_system_encoder_enable	;wreg free
  3427                           
  3428                           ;ui.c: 121: system_ui_inactive_count = 0;
  3429  004942  0E00               	movlw	0
  3430  004944  0101               	movlb	1	; () banked
  3431  004946  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3432  004948  0E00               	movlw	0
  3433  00494A  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3434                           
  3435                           ; BSR set to: 1
  3436                           ;ui.c: 122: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3437  00494C  0E05               	movlw	5
  3438  00494E  0101               	movlb	1	; () banked
  3439  004950  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3440                           
  3441                           ;ui.c: 123: break;
  3442  004952  0012               	return	
  3443  004954                     l14333:
  3444                           
  3445                           ; BSR set to: 1
  3446                           ;ui.c: 126: if (os.encoderCount==0 && os.buttonCount==0)
  3447  004954  0100               	movlb	0	; () banked
  3448  004956  51E2               	movf	_os& (0+255),w,b	;volatile
  3449  004958  A4D8               	btfss	status,2,c
  3450  00495A  D00F               	goto	l14341
  3451                           
  3452                           ; BSR set to: 0
  3453  00495C  0100               	movlb	0	; () banked
  3454  00495E  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  3455  004960  A4D8               	btfss	status,2,c
  3456  004962  D00B               	goto	l14341
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;ui.c: 127: {
  3460                           ;ui.c: 128: if(system_ui_inactive_count<0xFFFF)
  3461  004964  0101               	movlb	1	; () banked
  3462  004966  2972               	incf	_system_ui_inactive_count& (0+255),w,b
  3463  004968  E104               	bnz	u11430
  3464  00496A  0101               	movlb	1	; () banked
  3465  00496C  2973               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3466  00496E  B4D8               	btfsc	status,2,c
  3467  004970  0012               	return	
  3468  004972                     u11430:
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;ui.c: 129: ++system_ui_inactive_count;
  3472  004972  0101               	movlb	1	; () banked
  3473  004974  4B72               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3474  004976  2B73               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3475                           
  3476                           ; BSR set to: 1
  3477                           ;ui.c: 130: }
  3478  004978  0012               	return	
  3479  00497A                     l14341:
  3480                           
  3481                           ;ui.c: 131: else
  3482                           ;ui.c: 132: {
  3483                           ;ui.c: 133: system_ui_inactive_count = 0;
  3484  00497A  0E00               	movlw	0
  3485  00497C  0101               	movlb	1	; () banked
  3486  00497E  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3487  004980  0E00               	movlw	0
  3488  004982  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3489                           
  3490                           ; BSR set to: 1
  3491                           ;ui.c: 134: _ui_encoder();
  3492  004984  EC9E  F02F         	call	__ui_encoder	;wreg free
  3493                           
  3494                           ;ui.c: 137: }
  3495                           
  3496                           ;ui.c: 135: }
  3497                           ;ui.c: 136: break;
  3498  004988  0012               	return	
  3499  00498A                     l14347:
  3500  00498A  0101               	movlb	1	; () banked
  3501  00498C  5183               	movf	_userInterfaceStatus& (0+255),w,b
  3502                           
  3503                           ; Switch size 1, requested type "space"
  3504                           ; Number of cases is 6, Range of values is 0 to 5
  3505                           ; switch strategies available:
  3506                           ; Name         Instructions Cycles
  3507                           ; simple_byte           19    10 (average)
  3508                           ;	Chosen strategy is simple_byte
  3509  00498E  0A00               	xorlw	0	; case 0
  3510  004990  B4D8               	btfsc	status,2,c
  3511  004992  D794               	goto	l14299
  3512  004994  0A01               	xorlw	1	; case 1
  3513  004996  B4D8               	btfsc	status,2,c
  3514  004998  D7A2               	goto	l1501
  3515  00499A  0A03               	xorlw	3	; case 2
  3516  00499C  B4D8               	btfsc	status,2,c
  3517  00499E  D7A9               	goto	l14307
  3518  0049A0  0A01               	xorlw	1	; case 3
  3519  0049A2  B4D8               	btfsc	status,2,c
  3520  0049A4  D7B1               	goto	l14313
  3521  0049A6  0A07               	xorlw	7	; case 4
  3522  0049A8  B4D8               	btfsc	status,2,c
  3523  0049AA  D7C4               	goto	l14323
  3524  0049AC  0A01               	xorlw	1	; case 5
  3525  0049AE  A4D8               	btfss	status,2,c
  3526  0049B0  0012               	return	
  3527  0049B2  D7D0               	goto	l14333
  3528  0049B4                     __end_of_ui_run:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function _system_encoder_enable *****************
  3542 ;; Defined at:
  3543 ;;		line 131 in file "os.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_ui_run
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text2
  3571  00782C                     __ptext2:
  3572                           	opt stack 0
  3573  00782C                     _system_encoder_enable:
  3574                           	opt stack 29
  3575                           
  3576                           ;os.c: 134: INTCON3bits.INT2IF = 0;
  3577                           
  3578                           ;incstack = 0
  3579  00782C  92F0               	bcf	intcon3,1,c	;volatile
  3580                           
  3581                           ;os.c: 135: INTCON3bits.INT3IF = 0;
  3582  00782E  94F0               	bcf	intcon3,2,c	;volatile
  3583                           
  3584                           ;os.c: 138: os.encoderCount = 0;
  3585  007830  0E00               	movlw	0
  3586  007832  0100               	movlb	0	; () banked
  3587  007834  6FE2               	movwf	_os& (0+255),b	;volatile
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;os.c: 141: INTCON3bits.INT2IE = 1;
  3591  007836  88F0               	bsf	intcon3,4,c	;volatile
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;os.c: 142: INTCON3bits.INT3IE = 1;
  3595  007838  8AF0               	bsf	intcon3,5,c	;volatile
  3596                           
  3597                           ; BSR set to: 0
  3598  00783A  0012               	return		;funcret
  3599  00783C                     __end_of_system_encoder_enable:
  3600                           	opt stack 0
  3601                           tblptru	equ	0xFF8
  3602                           tblptrh	equ	0xFF7
  3603                           tblptrl	equ	0xFF6
  3604                           tablat	equ	0xFF5
  3605                           intcon3	equ	0xFF0
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           postdec1	equ	0xFE5
  3609                           fsr1h	equ	0xFE2
  3610                           fsr1l	equ	0xFE1
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function _i2c_display_send_init_sequence *****************
  3614 ;; Defined at:
  3615 ;;		line 225 in file "i2c.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;Total ram usage:        9 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    2
  3636 ;; This function calls:
  3637 ;;		__i2c_write
  3638 ;;		_i2c_set_frequency
  3639 ;; This function is called by:
  3640 ;;		_ui_run
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text3
  3645  007388                     __ptext3:
  3646                           	opt stack 0
  3647  007388                     _i2c_display_send_init_sequence:
  3648                           	opt stack 27
  3649                           
  3650                           ;i2c.c: 227: uint8_t init_sequence[9] = {
  3651                           ;i2c.c: 228: 0x3A,
  3652                           ;i2c.c: 230: 0b00011110,
  3653                           ;i2c.c: 231: 0x39,
  3654                           ;i2c.c: 233: 0b00001100,
  3655                           ;i2c.c: 234: 0x74,
  3656                           ;i2c.c: 235: 0b1011100,
  3657                           ;i2c.c: 236: 0x6d,
  3658                           ;i2c.c: 237: 0x0c,
  3659                           ;i2c.c: 238: 0x01
  3660                           ;i2c.c: 239: };
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;incstack = 0
  3664  007388  EE21  F0D5         	lfsr	2,i2c_display_send_init_sequence@F8320
  3665  00738C  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3666  007390  0E08               	movlw	8
  3667  007392                     u10131:
  3668  007392  CFDB FFE3          	movff	plusw2,plusw1
  3669  007396  06E8               	decf	wreg,f,c
  3670  007398  E2FC               	bc	u10131
  3671                           
  3672                           ;i2c.c: 242: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3673  00739A  0E00               	movlw	0
  3674  00739C  EC06  F03A         	call	_i2c_set_frequency
  3675                           
  3676                           ;i2c.c: 245: _i2c_write(0b01111000, &init_sequence[0], 9);
  3677  0073A0  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3678  0073A2  6E06               	movwf	__i2c_write@data,c
  3679  0073A4  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3680  0073A6  6E07               	movwf	__i2c_write@data+1,c
  3681  0073A8  0E09               	movlw	9
  3682  0073AA  6E08               	movwf	__i2c_write@length,c
  3683  0073AC  0E78               	movlw	120
  3684  0073AE  EC14  F037         	call	__i2c_write
  3685  0073B2  0012               	return		;funcret
  3686  0073B4                     __end_of_i2c_display_send_init_sequence:
  3687                           	opt stack 0
  3688                           tblptru	equ	0xFF8
  3689                           tblptrh	equ	0xFF7
  3690                           tblptrl	equ	0xFF6
  3691                           tablat	equ	0xFF5
  3692                           intcon3	equ	0xFF0
  3693                           postinc0	equ	0xFEE
  3694                           wreg	equ	0xFE8
  3695                           postdec1	equ	0xFE5
  3696                           plusw1	equ	0xFE3
  3697                           fsr1h	equ	0xFE2
  3698                           fsr1l	equ	0xFE1
  3699                           plusw2	equ	0xFDB
  3700                           status	equ	0xFD8
  3701                           
  3702 ;; *************** function _i2c_digipot_reset_on *****************
  3703 ;; Defined at:
  3704 ;;		line 402 in file "i2c.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;Total ram usage:        2 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    2
  3725 ;; This function calls:
  3726 ;;		__i2c_write
  3727 ;;		_i2c_set_frequency
  3728 ;; This function is called by:
  3729 ;;		_ui_run
  3730 ;;		_i2c_display_init
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text4
  3735  00759A                     __ptext4:
  3736                           	opt stack 0
  3737  00759A                     _i2c_digipot_reset_on:
  3738                           	opt stack 27
  3739                           
  3740                           ;i2c.c: 404: uint8_t data_array[2];
  3741                           ;i2c.c: 405: data_array[0] = 0x10 | 0x00;
  3742                           
  3743                           ;incstack = 0
  3744  00759A  0E10               	movlw	16
  3745  00759C  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  3746                           
  3747                           ;i2c.c: 407: data_array[1] = 0x00;
  3748  00759E  0E00               	movlw	0
  3749  0075A0  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  3750                           
  3751                           ;i2c.c: 410: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3752  0075A2  0E02               	movlw	2
  3753  0075A4  EC06  F03A         	call	_i2c_set_frequency
  3754                           
  3755                           ;i2c.c: 412: _i2c_write(0b01011100, &data_array[0], 2);
  3756  0075A8  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  3757  0075AA  6E06               	movwf	__i2c_write@data,c
  3758  0075AC  0E00               	movlw	high i2c_digipot_reset_on@data_array
  3759  0075AE  6E07               	movwf	__i2c_write@data+1,c
  3760  0075B0  0E02               	movlw	2
  3761  0075B2  6E08               	movwf	__i2c_write@length,c
  3762  0075B4  0E5C               	movlw	92
  3763  0075B6  EC14  F037         	call	__i2c_write
  3764  0075BA  0012               	return		;funcret
  3765  0075BC                     __end_of_i2c_digipot_reset_on:
  3766                           	opt stack 0
  3767                           tblptru	equ	0xFF8
  3768                           tblptrh	equ	0xFF7
  3769                           tblptrl	equ	0xFF6
  3770                           tablat	equ	0xFF5
  3771                           intcon3	equ	0xFF0
  3772                           postinc0	equ	0xFEE
  3773                           wreg	equ	0xFE8
  3774                           postdec1	equ	0xFE5
  3775                           plusw1	equ	0xFE3
  3776                           fsr1h	equ	0xFE2
  3777                           fsr1l	equ	0xFE1
  3778                           plusw2	equ	0xFDB
  3779                           status	equ	0xFD8
  3780                           
  3781 ;; *************** function _i2c_digipot_reset_off *****************
  3782 ;; Defined at:
  3783 ;;		line 415 in file "i2c.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;Total ram usage:        2 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    2
  3804 ;; This function calls:
  3805 ;;		__i2c_write
  3806 ;;		_i2c_set_frequency
  3807 ;; This function is called by:
  3808 ;;		_ui_run
  3809 ;;		_i2c_display_init
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text5
  3814  0075BC                     __ptext5:
  3815                           	opt stack 0
  3816  0075BC                     _i2c_digipot_reset_off:
  3817                           	opt stack 27
  3818                           
  3819                           ;i2c.c: 417: uint8_t data_array[2];
  3820                           ;i2c.c: 418: data_array[0] = 0x10 | 0x00;
  3821                           
  3822                           ;incstack = 0
  3823  0075BC  0E10               	movlw	16
  3824  0075BE  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  3825                           
  3826                           ;i2c.c: 419: data_array[1] = 0x80;
  3827  0075C0  0E80               	movlw	128
  3828  0075C2  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  3829                           
  3830                           ;i2c.c: 422: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3831  0075C4  0E02               	movlw	2
  3832  0075C6  EC06  F03A         	call	_i2c_set_frequency
  3833                           
  3834                           ;i2c.c: 424: _i2c_write(0b01011100, &data_array[0], 2);
  3835  0075CA  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  3836  0075CC  6E06               	movwf	__i2c_write@data,c
  3837  0075CE  0E00               	movlw	high i2c_digipot_reset_off@data_array
  3838  0075D0  6E07               	movwf	__i2c_write@data+1,c
  3839  0075D2  0E02               	movlw	2
  3840  0075D4  6E08               	movwf	__i2c_write@length,c
  3841  0075D6  0E5C               	movlw	92
  3842  0075D8  EC14  F037         	call	__i2c_write
  3843  0075DC  0012               	return		;funcret
  3844  0075DE                     __end_of_i2c_digipot_reset_off:
  3845                           	opt stack 0
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           intcon3	equ	0xFF0
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           postdec1	equ	0xFE5
  3854                           plusw1	equ	0xFE3
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           plusw2	equ	0xFDB
  3858                           status	equ	0xFD8
  3859                           
  3860 ;; *************** function _i2c_digipot_backlight *****************
  3861 ;; Defined at:
  3862 ;;		line 427 in file "i2c.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  level           1    wreg     unsigned char 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  level           1   10[COMRAM] unsigned char 
  3867 ;;  data_array      2   11[COMRAM] unsigned char [2]
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        3 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    2
  3884 ;; This function calls:
  3885 ;;		__i2c_write
  3886 ;;		_i2c_set_frequency
  3887 ;; This function is called by:
  3888 ;;		_ui_run
  3889 ;;		_i2c_display_init
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text6
  3894  007504                     __ptext6:
  3895                           	opt stack 0
  3896  007504                     _i2c_digipot_backlight:
  3897                           	opt stack 27
  3898                           
  3899                           ;incstack = 0
  3900                           ;i2c_digipot_backlight@level stored from wreg
  3901  007504  6E0B               	movwf	i2c_digipot_backlight@level,c
  3902                           
  3903                           ;i2c.c: 429: uint8_t data_array[2];
  3904                           ;i2c.c: 430: data_array[0] = 0x00 | 0x00;
  3905  007506  0E00               	movlw	0
  3906  007508  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  3907                           
  3908                           ;i2c.c: 431: data_array[1] = level>>1;
  3909  00750A  90D8               	bcf	status,0,c
  3910  00750C  300B               	rrcf	i2c_digipot_backlight@level,w,c
  3911  00750E  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  3912                           
  3913                           ;i2c.c: 434: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3914  007510  0E02               	movlw	2
  3915  007512  EC06  F03A         	call	_i2c_set_frequency
  3916                           
  3917                           ;i2c.c: 436: _i2c_write(0b01011100, &data_array[0], 2);
  3918  007516  0E0C               	movlw	low i2c_digipot_backlight@data_array
  3919  007518  6E06               	movwf	__i2c_write@data,c
  3920  00751A  0E00               	movlw	high i2c_digipot_backlight@data_array
  3921  00751C  6E07               	movwf	__i2c_write@data+1,c
  3922  00751E  0E02               	movlw	2
  3923  007520  6E08               	movwf	__i2c_write@length,c
  3924  007522  0E5C               	movlw	92
  3925  007524  EC14  F037         	call	__i2c_write
  3926  007528  0012               	return		;funcret
  3927  00752A                     __end_of_i2c_digipot_backlight:
  3928                           	opt stack 0
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           intcon3	equ	0xFF0
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           plusw1	equ	0xFE3
  3938                           fsr1h	equ	0xFE2
  3939                           fsr1l	equ	0xFE1
  3940                           plusw2	equ	0xFDB
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function __ui_encoder *****************
  3944 ;; Defined at:
  3945 ;;		line 17 in file "ui.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_ui_run
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text7
  3973  005F3C                     __ptext7:
  3974                           	opt stack 0
  3975  005F3C                     __ui_encoder:
  3976                           	opt stack 29
  3977                           
  3978                           ;ui.c: 19: switch(os.display_mode)
  3979                           
  3980                           ;incstack = 0
  3981  005F3C  D029               	goto	l13371
  3982  005F3E                     l13357:
  3983                           
  3984                           ;ui.c: 25: if(os.buttonCount>0)
  3985  005F3E  0100               	movlb	0	; () banked
  3986  005F40  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  3987  005F42  0A80               	xorlw	128
  3988  005F44  0F7F               	addlw	-129
  3989  005F46  A0D8               	btfss	status,0,c
  3990  005F48  0012               	return	
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;ui.c: 26: {
  3994                           ;ui.c: 27: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  3995  005F4A  0E20               	movlw	32
  3996  005F4C  0100               	movlb	0	; () banked
  3997  005F4E  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
  3998                           
  3999                           ;ui.c: 28: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4000  005F50  0E20               	movlw	32
  4001  005F52  0100               	movlb	0	; () banked
  4002  005F54  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
  4003                           
  4004                           ;ui.c: 29: os.buttonCount = 0;
  4005  005F56  0E00               	movlw	0
  4006  005F58  0100               	movlb	0	; () banked
  4007  005F5A  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;ui.c: 37: break;
  4011                           
  4012                           ;ui.c: 36: case DISPLAY_MODE_BOOTLOADER_CHECK_FAILED:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;ui.c: 34: break;
  4016                           
  4017                           ;ui.c: 33: case DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;ui.c: 30: }
  4021                           ;ui.c: 31: break;
  4022  005F5C  0012               	return	
  4023  005F5E                     l13361:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;ui.c: 40: if(os.buttonCount>0)
  4027  005F5E  0100               	movlb	0	; () banked
  4028  005F60  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  4029  005F62  0A80               	xorlw	128
  4030  005F64  0F7F               	addlw	-129
  4031  005F66  A0D8               	btfss	status,0,c
  4032  005F68  0012               	return	
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;ui.c: 41: {
  4036                           ;ui.c: 42: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4037  005F6A  0E50               	movlw	80
  4038  005F6C  0100               	movlb	0	; () banked
  4039  005F6E  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
  4040                           
  4041                           ;ui.c: 43: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4042  005F70  0E50               	movlw	80
  4043  005F72  0100               	movlb	0	; () banked
  4044  005F74  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
  4045                           
  4046                           ;ui.c: 44: os.buttonCount = 0;
  4047  005F76  0E00               	movlw	0
  4048  005F78  0100               	movlb	0	; () banked
  4049  005F7A  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;ui.c: 49: break;
  4053                           
  4054                           ;ui.c: 48: case BOOTLOADER_MODE_PROGRAMMING:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;ui.c: 45: }
  4058                           ;ui.c: 46: break;
  4059  005F7C  0012               	return	
  4060  005F7E                     l13365:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;ui.c: 52: if(os.buttonCount>0)
  4064  005F7E  0100               	movlb	0	; () banked
  4065  005F80  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  4066  005F82  0A80               	xorlw	128
  4067  005F84  0F7F               	addlw	-129
  4068  005F86  A0D8               	btfss	status,0,c
  4069  005F88  0012               	return	
  4070                           
  4071                           ; BSR set to: 0
  4072  005F8A  EF00 F048          	goto	36864	;# 
  4073                           
  4074                           ;ui.c: 58: }
  4075                           
  4076                           ;ui.c: 55: }
  4077                           ;ui.c: 57: break;
  4078  005F8E  0012               	return	
  4079  005F90                     l13371:
  4080  005F90  0100               	movlb	0	; () banked
  4081  005F92  51E7               	movf	(_os+5)& (0+255),w,b	;volatile
  4082                           
  4083                           ; Switch size 1, requested type "space"
  4084                           ; Number of cases is 7, Range of values is 0 to 96
  4085                           ; switch strategies available:
  4086                           ; Name         Instructions Cycles
  4087                           ; simple_byte           22    12 (average)
  4088                           ;	Chosen strategy is simple_byte
  4089  005F94  0A00               	xorlw	0	; case 0
  4090  005F96  B4D8               	btfsc	status,2,c
  4091  005F98  0012               	return	
  4092  005F9A  0A10               	xorlw	16	; case 16
  4093  005F9C  B4D8               	btfsc	status,2,c
  4094  005F9E  D7CF               	goto	l13357
  4095  005FA0  0A30               	xorlw	48	; case 32
  4096  005FA2  B4D8               	btfsc	status,2,c
  4097  005FA4  0012               	return	
  4098  005FA6  0A10               	xorlw	16	; case 48
  4099  005FA8  B4D8               	btfsc	status,2,c
  4100  005FAA  D7D9               	goto	l13361
  4101  005FAC  0A70               	xorlw	112	; case 64
  4102  005FAE  B4D8               	btfsc	status,2,c
  4103  005FB0  0012               	return	
  4104  005FB2  0A10               	xorlw	16	; case 80
  4105  005FB4  B4D8               	btfsc	status,2,c
  4106  005FB6  0012               	return	
  4107  005FB8  0A30               	xorlw	48	; case 96
  4108  005FBA  A4D8               	btfss	status,2,c
  4109  005FBC  0012               	return	
  4110  005FBE  D7DF               	goto	l13365
  4111  005FC0                     __end_of__ui_encoder:
  4112                           	opt stack 0
  4113                           tblptru	equ	0xFF8
  4114                           tblptrh	equ	0xFF7
  4115                           tblptrl	equ	0xFF6
  4116                           tablat	equ	0xFF5
  4117                           intcon3	equ	0xFF0
  4118                           postinc0	equ	0xFEE
  4119                           wreg	equ	0xFE8
  4120                           postdec1	equ	0xFE5
  4121                           plusw1	equ	0xFE3
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           plusw2	equ	0xFDB
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _timer_pseudo_isr *****************
  4128 ;; Defined at:
  4129 ;;		line 43 in file "os.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		wreg, status,2, status,0
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text8
  4157  00704C                     __ptext8:
  4158                           	opt stack 0
  4159  00704C                     _timer_pseudo_isr:
  4160                           	opt stack 30
  4161                           
  4162                           ;os.c: 46: if(INTCONbits.T0IF==0)
  4163                           
  4164                           ;incstack = 0
  4165  00704C  A4F2               	btfss	intcon,2,c	;volatile
  4166  00704E  0012               	return	
  4167                           
  4168                           ;os.c: 49: }
  4169                           ;os.c: 53: TMR0H = 0xD1;
  4170                           
  4171                           ;os.c: 47: {
  4172                           ;os.c: 48: return;
  4173  007050  0ED1               	movlw	209
  4174  007052  6ED7               	movwf	4055,c	;volatile
  4175                           
  4176                           ;os.c: 54: TMR0L = 0x20;
  4177  007054  0E20               	movlw	32
  4178  007056  6ED6               	movwf	4054,c	;volatile
  4179                           
  4180                           ;os.c: 55: ++os.timeSlot;
  4181  007058  0100               	movlb	0	; () banked
  4182  00705A  2BE4               	incf	(_os+2)& (0+255),f,b	;volatile
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;os.c: 56: os.done = 0;
  4186  00705C  0E00               	movlw	0
  4187  00705E  0100               	movlb	0	; () banked
  4188  007060  6FE5               	movwf	(_os+3)& (0+255),b	;volatile
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;os.c: 57: INTCONbits.T0IF = 0;
  4192  007062  94F2               	bcf	intcon,2,c	;volatile
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;os.c: 60: if(INTCON3bits.INT1IF)
  4196  007064  A0F0               	btfss	intcon3,0,c	;volatile
  4197  007066  D003               	goto	l14261
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;os.c: 61: {
  4201                           ;os.c: 62: ++os.buttonCount;
  4202  007068  0100               	movlb	0	; () banked
  4203  00706A  2BE3               	incf	(_os+1)& (0+255),f,b	;volatile
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;os.c: 63: INTCON3bits.INT1IF = 0;
  4207  00706C  90F0               	bcf	intcon3,0,c	;volatile
  4208  00706E                     l14261:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;os.c: 64: }
  4212                           ;os.c: 67: if(INTCON3bits.INT2IF)
  4213  00706E  A2F0               	btfss	intcon3,1,c	;volatile
  4214  007070  D005               	goto	l14269
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;os.c: 68: {
  4218                           ;os.c: 69: if(!PORTBbits.RB6)
  4219  007072  BC81               	btfsc	3969,6,c	;volatile
  4220  007074  D002               	goto	l14267
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;os.c: 70: {
  4224                           ;os.c: 71: --os.encoderCount;
  4225  007076  0100               	movlb	0	; () banked
  4226  007078  07E2               	decf	_os& (0+255),f,b	;volatile
  4227  00707A                     l14267:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;os.c: 72: }
  4231                           ;os.c: 73: INTCON3bits.INT2IF = 0;
  4232  00707A  92F0               	bcf	intcon3,1,c	;volatile
  4233  00707C                     l14269:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;os.c: 74: }
  4237                           ;os.c: 75: if(INTCON3bits.INT3IF)
  4238  00707C  A4F0               	btfss	intcon3,2,c	;volatile
  4239  00707E  0012               	return	
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;os.c: 76: {
  4243                           ;os.c: 77: if(!PORTBbits.RB7)
  4244  007080  BE81               	btfsc	3969,7,c	;volatile
  4245  007082  D002               	goto	l14275
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;os.c: 78: {
  4249                           ;os.c: 79: ++os.encoderCount;
  4250  007084  0100               	movlb	0	; () banked
  4251  007086  2BE2               	incf	_os& (0+255),f,b	;volatile
  4252  007088                     l14275:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;os.c: 80: }
  4256                           ;os.c: 81: INTCON3bits.INT3IF = 0;
  4257  007088  94F0               	bcf	intcon3,2,c	;volatile
  4258  00708A  0012               	return	
  4259  00708C                     __end_of_timer_pseudo_isr:
  4260                           	opt stack 0
  4261                           tblptru	equ	0xFF8
  4262                           tblptrh	equ	0xFF7
  4263                           tblptrl	equ	0xFF6
  4264                           tablat	equ	0xFF5
  4265                           intcon	equ	0xFF2
  4266                           intcon3	equ	0xFF0
  4267                           postinc0	equ	0xFEE
  4268                           wreg	equ	0xFE8
  4269                           postdec1	equ	0xFE5
  4270                           plusw1	equ	0xFE3
  4271                           fsr1h	equ	0xFE2
  4272                           fsr1l	equ	0xFE1
  4273                           plusw2	equ	0xFDB
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function _system_init *****************
  4277 ;; Defined at:
  4278 ;;		line 175 in file "os.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  appendtext    104    0[BANK0 ] unsigned char [104]
  4283 ;;  temp           50    0        unsigned char [50]
  4284 ;;  filename2       9  113[BANK0 ] unsigned char [9]
  4285 ;;  filename        9  104[BANK0 ] unsigned char [9]
  4286 ;;  extension2      4  126[BANK0 ] unsigned char [4]
  4287 ;;  extension       4  122[BANK0 ] unsigned char [4]
  4288 ;;  file_number     1    0        unsigned char 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Locals:         0     130       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Totals:         0     130       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;Total ram usage:      130 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    7
  4305 ;; This function calls:
  4306 ;;		__system_encoder_init
  4307 ;;		__system_timer0_init
  4308 ;;		_fat_init
  4309 ;;		_flash_init
  4310 ;;		_i2c_eeprom_read_calibration
  4311 ;;		_i2c_init
  4312 ;;		_rtcc_init
  4313 ;;		_ui_init
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text9
  4320  004AA6                     __ptext9:
  4321                           	opt stack 0
  4322  004AA6                     _system_init:
  4323                           	opt stack 23
  4324                           
  4325                           ;os.c: 177: char filename[9] = "TEST    ";
  4326                           
  4327                           ;incstack = 0
  4328  004AA6  EE21  F0E7         	lfsr	2,system_init@F8459
  4329  004AAA  EE10  F0C8         	lfsr	1,system_init@filename
  4330  004AAE  0E08               	movlw	8
  4331  004AB0                     u11071:
  4332  004AB0  CFDB FFE3          	movff	plusw2,plusw1
  4333  004AB4  06E8               	decf	wreg,f,c
  4334  004AB6  E2FC               	bc	u11071
  4335                           
  4336                           ;os.c: 178: char extension[4] = "TXT";
  4337  004AB8  C1F4  F0DA         	movff	system_init@F8461,system_init@extension
  4338  004ABC  C1F5  F0DB         	movff	system_init@F8461+1,system_init@extension+1
  4339  004AC0  C1F6  F0DC         	movff	system_init@F8461+2,system_init@extension+2
  4340  004AC4  C1F7  F0DD         	movff	system_init@F8461+3,system_init@extension+3
  4341                           
  4342                           ;os.c: 179: char filename2[9] = "NEWFILE ";
  4343  004AC8  EE21  F0DE         	lfsr	2,system_init@F8463
  4344  004ACC  EE10  F0D1         	lfsr	1,system_init@filename2
  4345  004AD0  0E08               	movlw	8
  4346  004AD2                     u11081:
  4347  004AD2  CFDB FFE3          	movff	plusw2,plusw1
  4348  004AD6  06E8               	decf	wreg,f,c
  4349  004AD8  E2FC               	bc	u11081
  4350                           
  4351                           ;os.c: 180: char extension2[4] = "TXT";
  4352  004ADA  C1F0  F0DE         	movff	system_init@F8465,system_init@extension2
  4353  004ADE  C1F1  F0DF         	movff	system_init@F8465+1,system_init@extension2+1
  4354  004AE2  C1F2  F0E0         	movff	system_init@F8465+2,system_init@extension2+2
  4355  004AE6  C1F3  F0E1         	movff	system_init@F8465+3,system_init@extension2+3
  4356                           
  4357                           ;os.c: 181: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  4358  004AEA  EE23  F072         	lfsr	2,system_init@F8467
  4359  004AEE  EE10  F060         	lfsr	1,system_init@appendtext
  4360  004AF2  0E67               	movlw	103
  4361  004AF4                     u11091:
  4362  004AF4  CFDB FFE3          	movff	plusw2,plusw1
  4363  004AF8  06E8               	decf	wreg,f,c
  4364  004AFA  E2FC               	bc	u11091
  4365                           
  4366                           ;os.c: 182: uint8_t file_number;
  4367                           ;os.c: 183: uint8_t temp[50];
  4368                           ;os.c: 186: TRISCbits.TRISC2 = 0;
  4369  004AFC  9494               	bcf	3988,2,c	;volatile
  4370                           
  4371                           ;os.c: 187: TRISDbits.TRISD0 = 0;
  4372  004AFE  9095               	bcf	3989,0,c	;volatile
  4373                           
  4374                           ;os.c: 189: TRISDbits.TRISD3 = 0;
  4375  004B00  9695               	bcf	3989,3,c	;volatile
  4376                           
  4377                           ;os.c: 190: LATDbits.LD3 = 0;
  4378  004B02  968C               	bcf	3980,3,c	;volatile
  4379                           
  4380                           ;os.c: 193: LATDbits.LD2 = 0;
  4381  004B04  948C               	bcf	3980,2,c	;volatile
  4382                           
  4383                           ;os.c: 194: TRISDbits.TRISD2 = 0;
  4384  004B06  9495               	bcf	3989,2,c	;volatile
  4385                           
  4386                           ;os.c: 197: LATBbits.LB1 = 0;
  4387  004B08  928A               	bcf	3978,1,c	;volatile
  4388                           
  4389                           ;os.c: 198: TRISBbits.TRISB1 = 0;
  4390  004B0A  9293               	bcf	3987,1,c	;volatile
  4391                           
  4392                           ;os.c: 199: LATBbits.LB2 = 0;
  4393  004B0C  948A               	bcf	3978,2,c	;volatile
  4394                           
  4395                           ;os.c: 200: TRISBbits.TRISB2 = 0;
  4396  004B0E  9493               	bcf	3987,2,c	;volatile
  4397                           
  4398                           ;os.c: 201: LATBbits.LB3 = 0;
  4399  004B10  968A               	bcf	3978,3,c	;volatile
  4400                           
  4401                           ;os.c: 202: TRISBbits.TRISB3 = 0;
  4402  004B12  9693               	bcf	3987,3,c	;volatile
  4403                           
  4404                           ;os.c: 205: TRISDbits.TRISD6 = 1;
  4405  004B14  8C95               	bsf	3989,6,c	;volatile
  4406                           
  4407                           ;os.c: 206: TRISDbits.TRISD4 = 0;
  4408  004B16  9895               	bcf	3989,4,c	;volatile
  4409                           
  4410                           ;os.c: 207: TRISDbits.TRISD5 = 0;
  4411  004B18  9A95               	bcf	3989,5,c	;volatile
  4412                           
  4413                           ;os.c: 208: TRISDbits.TRISD7 = 0;
  4414  004B1A  9E95               	bcf	3989,7,c	;volatile
  4415                           
  4416                           ;os.c: 209: LATDbits.LD7 = 1;
  4417  004B1C  8E8C               	bsf	3980,7,c	;volatile
  4418                           
  4419                           ;os.c: 212: TRISAbits.TRISA3 = 1;
  4420  004B1E  8692               	bsf	3986,3,c	;volatile
  4421                           
  4422                           ;os.c: 213: ANCON0bits.PCFG3 = 0;
  4423  004B20  010F               	movlb	15	; () banked
  4424  004B22  9748               	bcf	72,3,b	;volatile
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;os.c: 214: TRISBbits.TRISB0 = 1;
  4428  004B24  8093               	bsf	3987,0,c	;volatile
  4429                           
  4430                           ; BSR set to: 15
  4431                           ;os.c: 215: ANCON1bits.PCFG12 = 0;
  4432  004B26  010F               	movlb	15	; () banked
  4433  004B28  9949               	bcf	73,4,b	;volatile
  4434                           
  4435                           ; BSR set to: 15
  4436                           ;os.c: 216: TRISAbits.TRISA1 = 1;
  4437  004B2A  8292               	bsf	3986,1,c	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440                           ;os.c: 217: ANCON0bits.PCFG1 = 0;
  4441  004B2C  010F               	movlb	15	; () banked
  4442  004B2E  9348               	bcf	72,1,b	;volatile
  4443                           
  4444                           ; BSR set to: 15
  4445                           ;os.c: 218: TRISAbits.TRISA2 = 1;
  4446  004B30  8492               	bsf	3986,2,c	;volatile
  4447                           
  4448                           ; BSR set to: 15
  4449                           ;os.c: 219: ANCON0bits.PCFG2 = 0;
  4450  004B32  010F               	movlb	15	; () banked
  4451  004B34  9548               	bcf	72,2,b	;volatile
  4452                           
  4453                           ; BSR set to: 15
  4454                           ;os.c: 222: LATCbits.LC7 = 0;
  4455  004B36  9E8B               	bcf	3979,7,c	;volatile
  4456                           
  4457                           ; BSR set to: 15
  4458                           ;os.c: 223: TRISCbits.TRISC7 = 0;
  4459  004B38  9E94               	bcf	3988,7,c	;volatile
  4460                           
  4461                           ; BSR set to: 15
  4462                           ;os.c: 224: LATEbits.LE2 = 1;
  4463  004B3A  848D               	bsf	3981,2,c	;volatile
  4464                           
  4465                           ; BSR set to: 15
  4466                           ;os.c: 225: TRISEbits.TRISE2 = 0;
  4467  004B3C  9496               	bcf	3990,2,c	;volatile
  4468                           
  4469                           ; BSR set to: 15
  4470                           ;os.c: 226: LATEbits.LE1 = 1;
  4471  004B3E  828D               	bsf	3981,1,c	;volatile
  4472                           
  4473                           ; BSR set to: 15
  4474                           ;os.c: 227: TRISEbits.TRISE1 = 0;
  4475  004B40  9296               	bcf	3990,1,c	;volatile
  4476                           
  4477                           ; BSR set to: 15
  4478                           ;os.c: 228: LATEbits.LE0 = 1;
  4479  004B42  808D               	bsf	3981,0,c	;volatile
  4480                           
  4481                           ; BSR set to: 15
  4482                           ;os.c: 229: TRISEbits.TRISE0 = 0;
  4483  004B44  9096               	bcf	3990,0,c	;volatile
  4484                           
  4485                           ; BSR set to: 15
  4486                           ;os.c: 230: LATAbits.LA5 = 1;
  4487  004B46  8A89               	bsf	3977,5,c	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;os.c: 231: TRISAbits.TRISA5 = 0;
  4491  004B48  9A92               	bcf	3986,5,c	;volatile
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;os.c: 233: TRISAbits.TRISA0 = 1;
  4495  004B4A  8092               	bsf	3986,0,c	;volatile
  4496                           
  4497                           ; BSR set to: 15
  4498                           ;os.c: 234: ANCON0bits.PCFG0 = 1;
  4499  004B4C  010F               	movlb	15	; () banked
  4500  004B4E  8148               	bsf	72,0,b	;volatile
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;os.c: 235: TRISBbits.TRISB6 = 1;
  4504  004B50  8C93               	bsf	3987,6,c	;volatile
  4505                           
  4506                           ; BSR set to: 15
  4507                           ;os.c: 236: TRISBbits.TRISB7 = 1;
  4508  004B52  8E93               	bsf	3987,7,c	;volatile
  4509                           
  4510                           ; BSR set to: 15
  4511                           ;os.c: 239: os.bootloader_mode = BOOTLOADER_MODE_START;
  4512  004B54  0E00               	movlw	0
  4513  004B56  0100               	movlb	0	; () banked
  4514  004B58  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;os.c: 240: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4518  004B5A  0E00               	movlw	0
  4519  004B5C  0100               	movlb	0	; () banked
  4520  004B5E  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;os.c: 244: PIR1bits.TMR1IF = 0;
  4524  004B60  909E               	bcf	3998,0,c	;volatile
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;os.c: 246: TMR1H = 0xFC;
  4528  004B62  0EFC               	movlw	252
  4529  004B64  6ECF               	movwf	4047,c	;volatile
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;os.c: 247: TMR1L = 0x00;
  4533  004B66  0E00               	movlw	0
  4534  004B68  6ECE               	movwf	4046,c	;volatile
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;os.c: 249: T1CONbits.TMR1ON = 1;
  4538  004B6A  80CD               	bsf	4045,0,c	;volatile
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;os.c: 251: T1CONbits.T1OSCEN = 1;
  4542  004B6C  86CD               	bsf	4045,3,c	;volatile
  4543  004B6E                     l1222:
  4544  004B6E  A09E               	btfss	3998,0,c	;volatile
  4545  004B70  D7FE               	goto	l1222
  4546                           
  4547                           ;os.c: 255: T1CONbits.TMR1ON = 0;
  4548  004B72  90CD               	bcf	4045,0,c	;volatile
  4549                           
  4550                           ;os.c: 258: i2c_init();
  4551  004B74  EC35  F03C         	call	_i2c_init	;wreg free
  4552                           
  4553                           ;os.c: 260: ui_init();
  4554  004B78  ECB5  F03B         	call	_ui_init	;wreg free
  4555                           
  4556                           ;os.c: 263: rtcc_init();
  4557  004B7C  EC00  F03B         	call	_rtcc_init	;wreg free
  4558                           
  4559                           ;os.c: 266: i2c_eeprom_read_calibration();
  4560  004B80  EC49  F021         	call	_i2c_eeprom_read_calibration	;wreg free
  4561                           
  4562                           ;os.c: 269: _system_timer0_init();
  4563  004B84  EC10  F03B         	call	__system_timer0_init	;wreg free
  4564                           
  4565                           ;os.c: 272: _system_encoder_init();
  4566  004B88  ECA2  F037         	call	__system_encoder_init	;wreg free
  4567                           
  4568                           ;os.c: 274: flash_init();
  4569  004B8C  EC0E  F036         	call	_flash_init	;wreg free
  4570                           
  4571                           ;os.c: 275: fat_init();
  4572  004B90  EC1E  F03C         	call	_fat_init	;wreg free
  4573  004B94  0012               	return		;funcret
  4574  004B96                     __end_of_system_init:
  4575                           	opt stack 0
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           intcon	equ	0xFF2
  4581                           intcon3	equ	0xFF0
  4582                           postinc0	equ	0xFEE
  4583                           wreg	equ	0xFE8
  4584                           postdec1	equ	0xFE5
  4585                           plusw1	equ	0xFE3
  4586                           fsr1h	equ	0xFE2
  4587                           fsr1l	equ	0xFE1
  4588                           plusw2	equ	0xFDB
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function _ui_init *****************
  4592 ;; Defined at:
  4593 ;;		line 61 in file "ui.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;Total ram usage:        0 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_system_init
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           	psect	text10
  4621  00776A                     __ptext10:
  4622                           	opt stack 0
  4623  00776A                     _ui_init:
  4624                           	opt stack 29
  4625                           
  4626                           ;ui.c: 63: system_ui_inactive_count = 0;
  4627                           
  4628                           ;incstack = 0
  4629  00776A  0E00               	movlw	0
  4630  00776C  0101               	movlb	1	; () banked
  4631  00776E  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4632  007770  0E00               	movlw	0
  4633  007772  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;ui.c: 65: LATCbits.LC2 = 1;
  4637  007774  848B               	bsf	3979,2,c	;volatile
  4638                           
  4639                           ;ui.c: 66: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4640  007776  0E01               	movlw	1
  4641  007778  0101               	movlb	1	; () banked
  4642  00777A  6F83               	movwf	_userInterfaceStatus& (0+255),b
  4643                           
  4644                           ; BSR set to: 1
  4645  00777C  0012               	return		;funcret
  4646  00777E                     __end_of_ui_init:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           intcon	equ	0xFF2
  4653                           intcon3	equ	0xFF0
  4654                           postinc0	equ	0xFEE
  4655                           wreg	equ	0xFE8
  4656                           postdec1	equ	0xFE5
  4657                           plusw1	equ	0xFE3
  4658                           fsr1h	equ	0xFE2
  4659                           fsr1l	equ	0xFE1
  4660                           plusw2	equ	0xFDB
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _rtcc_init *****************
  4664 ;; Defined at:
  4665 ;;		line 81 in file "rtcc.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    4
  4686 ;; This function calls:
  4687 ;;		_rtcc_read_eeprom
  4688 ;; This function is called by:
  4689 ;;		_system_init
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text11
  4694  007600                     __ptext11:
  4695                           	opt stack 0
  4696  007600                     _rtcc_init:
  4697                           	opt stack 25
  4698                           
  4699                           ;rtcc.c: 83: EECON2 = 0x55;
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;incstack = 0
  4703  007600  0E55               	movlw	85
  4704  007602  6EA7               	movwf	4007,c	;volatile
  4705                           
  4706                           ;rtcc.c: 84: EECON2 = 0xAA;
  4707  007604  0EAA               	movlw	170
  4708  007606  6EA7               	movwf	4007,c	;volatile
  4709                           
  4710                           ;rtcc.c: 85: RTCCFGbits.RTCWREN = 1;
  4711  007608  010F               	movlb	15	; () banked
  4712  00760A  8B3F               	bsf	63,5,b	;volatile
  4713                           
  4714                           ; BSR set to: 15
  4715                           ;rtcc.c: 86: RTCCFGbits.RTCEN = 1;
  4716  00760C  010F               	movlb	15	; () banked
  4717  00760E  8F3F               	bsf	63,7,b	;volatile
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;rtcc.c: 87: RTCCFGbits.RTCOE = 0;
  4721  007610  010F               	movlb	15	; () banked
  4722  007612  953F               	bcf	63,2,b	;volatile
  4723                           
  4724                           ;rtcc.c: 88: RTCCAL = 0x00;
  4725  007614  0E00               	movlw	0
  4726  007616  010F               	movlb	15	; () banked
  4727  007618  6F3E               	movwf	62,b	;volatile
  4728                           
  4729                           ; BSR set to: 15
  4730                           ;rtcc.c: 91: rtcc_read_eeprom();
  4731  00761A  EC46  F038         	call	_rtcc_read_eeprom	;wreg free
  4732  00761E  0012               	return		;funcret
  4733  007620                     __end_of_rtcc_init:
  4734                           	opt stack 0
  4735                           tblptru	equ	0xFF8
  4736                           tblptrh	equ	0xFF7
  4737                           tblptrl	equ	0xFF6
  4738                           tablat	equ	0xFF5
  4739                           intcon	equ	0xFF2
  4740                           intcon3	equ	0xFF0
  4741                           postinc0	equ	0xFEE
  4742                           wreg	equ	0xFE8
  4743                           postdec1	equ	0xFE5
  4744                           plusw1	equ	0xFE3
  4745                           fsr1h	equ	0xFE2
  4746                           fsr1l	equ	0xFE1
  4747                           plusw2	equ	0xFDB
  4748                           status	equ	0xFD8
  4749                           
  4750 ;; *************** function _rtcc_read_eeprom *****************
  4751 ;; Defined at:
  4752 ;;		line 330 in file "rtcc.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;		None
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  date            6   25[COMRAM] unsigned char [6]
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4770 ;;Total ram usage:        6 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; Hardware stack levels required when called:    3
  4773 ;; This function calls:
  4774 ;;		_i2c_eeprom_read
  4775 ;;		_rtcc_set_day
  4776 ;;		_rtcc_set_hours
  4777 ;;		_rtcc_set_minutes
  4778 ;;		_rtcc_set_month
  4779 ;;		_rtcc_set_seconds
  4780 ;;		_rtcc_set_year
  4781 ;; This function is called by:
  4782 ;;		_rtcc_init
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text12
  4787  00708C                     __ptext12:
  4788                           	opt stack 0
  4789  00708C                     _rtcc_read_eeprom:
  4790                           	opt stack 25
  4791                           
  4792                           ;rtcc.c: 332: uint8_t date[6];
  4793                           ;rtcc.c: 333: i2c_eeprom_read(0x0040, &date[0], 6);
  4794                           
  4795                           ;incstack = 0
  4796  00708C  0E00               	movlw	0
  4797  00708E  6E13               	movwf	i2c_eeprom_read@address+1,c
  4798  007090  0E40               	movlw	64
  4799  007092  6E12               	movwf	i2c_eeprom_read@address,c
  4800  007094  0E1A               	movlw	low rtcc_read_eeprom@date
  4801  007096  6E14               	movwf	i2c_eeprom_read@data,c
  4802  007098  0E00               	movlw	high rtcc_read_eeprom@date
  4803  00709A  6E15               	movwf	i2c_eeprom_read@data+1,c
  4804  00709C  0E06               	movlw	6
  4805  00709E  6E16               	movwf	i2c_eeprom_read@length,c
  4806  0070A0  EC35  F036         	call	_i2c_eeprom_read	;wreg free
  4807                           
  4808                           ;rtcc.c: 336: rtcc_set_year(date[0]);
  4809  0070A4  501A               	movf	rtcc_read_eeprom@date,w,c
  4810  0070A6  EC57  F03B         	call	_rtcc_set_year
  4811                           
  4812                           ;rtcc.c: 337: rtcc_set_month(date[1]);
  4813  0070AA  501B               	movf	rtcc_read_eeprom@date+1,w,c
  4814  0070AC  EC6F  F03B         	call	_rtcc_set_month
  4815                           
  4816                           ;rtcc.c: 338: rtcc_set_day(date[2]);
  4817  0070B0  501C               	movf	rtcc_read_eeprom@date+2,w,c
  4818  0070B2  EC93  F03B         	call	_rtcc_set_day
  4819                           
  4820                           ;rtcc.c: 339: rtcc_set_hours(date[3]);
  4821  0070B6  501D               	movf	rtcc_read_eeprom@date+3,w,c
  4822  0070B8  EC87  F03B         	call	_rtcc_set_hours
  4823                           
  4824                           ;rtcc.c: 340: rtcc_set_minutes(date[4]);
  4825  0070BC  501E               	movf	rtcc_read_eeprom@date+4,w,c
  4826  0070BE  EC7B  F03B         	call	_rtcc_set_minutes
  4827                           
  4828                           ;rtcc.c: 341: rtcc_set_seconds(date[5]);
  4829  0070C2  501F               	movf	rtcc_read_eeprom@date+5,w,c
  4830  0070C4  EC63  F03B         	call	_rtcc_set_seconds
  4831  0070C8  0012               	return		;funcret
  4832  0070CA                     __end_of_rtcc_read_eeprom:
  4833                           	opt stack 0
  4834                           tblptru	equ	0xFF8
  4835                           tblptrh	equ	0xFF7
  4836                           tblptrl	equ	0xFF6
  4837                           tablat	equ	0xFF5
  4838                           intcon	equ	0xFF2
  4839                           intcon3	equ	0xFF0
  4840                           postinc0	equ	0xFEE
  4841                           wreg	equ	0xFE8
  4842                           postdec1	equ	0xFE5
  4843                           plusw1	equ	0xFE3
  4844                           fsr1h	equ	0xFE2
  4845                           fsr1l	equ	0xFE1
  4846                           plusw2	equ	0xFDB
  4847                           status	equ	0xFD8
  4848                           
  4849 ;; *************** function _i2c_init *****************
  4850 ;; Defined at:
  4851 ;;		line 93 in file "i2c.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4869 ;;Total ram usage:        0 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    1
  4872 ;; This function calls:
  4873 ;;		__i2c_open_1
  4874 ;;		_i2c_set_frequency
  4875 ;; This function is called by:
  4876 ;;		_system_init
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text13
  4881  00786A                     __ptext13:
  4882                           	opt stack 0
  4883  00786A                     _i2c_init:
  4884                           	opt stack 28
  4885                           
  4886                           ;i2c.c: 95: _i2c_open_1();
  4887                           
  4888                           ;incstack = 0
  4889  00786A  EC4B  F03B         	call	__i2c_open_1	;wreg free
  4890                           
  4891                           ;i2c.c: 97: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4892  00786E  0E00               	movlw	0
  4893  007870  EC06  F03A         	call	_i2c_set_frequency
  4894  007874  0012               	return		;funcret
  4895  007876                     __end_of_i2c_init:
  4896                           	opt stack 0
  4897                           tblptru	equ	0xFF8
  4898                           tblptrh	equ	0xFF7
  4899                           tblptrl	equ	0xFF6
  4900                           tablat	equ	0xFF5
  4901                           intcon	equ	0xFF2
  4902                           intcon3	equ	0xFF0
  4903                           postinc0	equ	0xFEE
  4904                           wreg	equ	0xFE8
  4905                           postdec1	equ	0xFE5
  4906                           plusw1	equ	0xFE3
  4907                           fsr1h	equ	0xFE2
  4908                           fsr1l	equ	0xFE1
  4909                           plusw2	equ	0xFDB
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function __i2c_open_1 *****************
  4913 ;; Defined at:
  4914 ;;		line 32 in file "i2c.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_i2c_init
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text14
  4942  007696                     __ptext14:
  4943                           	opt stack 0
  4944  007696                     __i2c_open_1:
  4945                           	opt stack 28
  4946                           
  4947                           ;i2c.c: 34: SSP1STATbits.SMP = 0;
  4948                           
  4949                           ;incstack = 0
  4950  007696  9EC7               	bcf	4039,7,c	;volatile
  4951                           
  4952                           ;i2c.c: 35: SSP1STATbits.CKE = 0;
  4953  007698  9CC7               	bcf	4039,6,c	;volatile
  4954                           
  4955                           ;i2c.c: 36: SSP1ADD = 29;
  4956  00769A  0E1D               	movlw	29
  4957  00769C  6EC8               	movwf	4040,c	;volatile
  4958                           
  4959                           ;i2c.c: 37: SSP1CON1bits.WCOL = 0;
  4960  00769E  9EC6               	bcf	4038,7,c	;volatile
  4961                           
  4962                           ;i2c.c: 38: SSP1CON1bits.SSPOV = 0;
  4963  0076A0  9CC6               	bcf	4038,6,c	;volatile
  4964                           
  4965                           ;i2c.c: 39: SSP1CON1bits.SSPM = 0b1000;
  4966  0076A2  50C6               	movf	4038,w,c	;volatile
  4967  0076A4  0BF0               	andlw	-16
  4968  0076A6  0908               	iorlw	8
  4969  0076A8  6EC6               	movwf	4038,c	;volatile
  4970                           
  4971                           ;i2c.c: 40: SSP1CON1bits.SSPEN = 1;
  4972  0076AA  8AC6               	bsf	4038,5,c	;volatile
  4973  0076AC  0012               	return		;funcret
  4974  0076AE                     __end_of__i2c_open_1:
  4975                           	opt stack 0
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           intcon	equ	0xFF2
  4981                           intcon3	equ	0xFF0
  4982                           postinc0	equ	0xFEE
  4983                           wreg	equ	0xFE8
  4984                           postdec1	equ	0xFE5
  4985                           plusw1	equ	0xFE3
  4986                           fsr1h	equ	0xFE2
  4987                           fsr1l	equ	0xFE1
  4988                           plusw2	equ	0xFDB
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function _i2c_eeprom_read_calibration *****************
  4992 ;; Defined at:
  4993 ;;		line 556 in file "i2c.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  buffer          4   27[COMRAM] unsigned char [4]
  4998 ;;  addr            2   31[COMRAM] unsigned int 
  4999 ;;  cntr            1   33[COMRAM] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;Total ram usage:        9 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    3
  5016 ;; This function calls:
  5017 ;;		__i2c_eeprom_load_default_calibration
  5018 ;;		_i2c_eeprom_read
  5019 ;;		_schedule_eeprom_write_task
  5020 ;; This function is called by:
  5021 ;;		_system_init
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025                           	psect	text15
  5026  004292                     __ptext15:
  5027                           	opt stack 0
  5028  004292                     _i2c_eeprom_read_calibration:
  5029                           	opt stack 26
  5030                           
  5031                           ;i2c.c: 558: uint8_t buffer[4];
  5032                           ;i2c.c: 559: uint8_t cntr;
  5033                           ;i2c.c: 560: uint16_t addr;
  5034                           ;i2c.c: 562: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  5035                           
  5036                           ;incstack = 0
  5037  004292  0E00               	movlw	0
  5038  004294  6E22               	movwf	i2c_eeprom_read_calibration@cntr,c
  5039  004296                     l13189:
  5040  004296  0E06               	movlw	6
  5041  004298  6422               	cpfsgt	i2c_eeprom_read_calibration@cntr,c
  5042  00429A  D001               	goto	l13193
  5043  00429C  0012               	return	
  5044  00429E                     l13193:
  5045                           
  5046                           ;i2c.c: 563: {
  5047                           ;i2c.c: 565: addr = 0x0100 + (cntr<<4);
  5048  00429E  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5049  0042A0  6E1A               	movwf	??_i2c_eeprom_read_calibration& (0+255),c
  5050  0042A2  6A1B               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),c
  5051  0042A4  3A1A               	swapf	??_i2c_eeprom_read_calibration,f,c
  5052  0042A6  3A1B               	swapf	??_i2c_eeprom_read_calibration+1,f,c
  5053  0042A8  0EF0               	movlw	240
  5054  0042AA  161B               	andwf	??_i2c_eeprom_read_calibration+1,f,c
  5055  0042AC  501A               	movf	??_i2c_eeprom_read_calibration,w,c
  5056  0042AE  0B0F               	andlw	15
  5057  0042B0  121B               	iorwf	??_i2c_eeprom_read_calibration+1,f,c
  5058  0042B2  0EF0               	movlw	240
  5059  0042B4  161A               	andwf	??_i2c_eeprom_read_calibration,f,c
  5060  0042B6  0E00               	movlw	0
  5061  0042B8  241A               	addwf	??_i2c_eeprom_read_calibration,w,c
  5062  0042BA  6E20               	movwf	i2c_eeprom_read_calibration@addr,c
  5063  0042BC  0E01               	movlw	1
  5064  0042BE  201B               	addwfc	??_i2c_eeprom_read_calibration+1,w,c
  5065  0042C0  6E21               	movwf	i2c_eeprom_read_calibration@addr+1,c
  5066                           
  5067                           ;i2c.c: 566: i2c_eeprom_read(addr, &buffer[0], 4);
  5068  0042C2  C020  F012         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  5069  0042C6  C021  F013         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  5070  0042CA  0E1C               	movlw	low i2c_eeprom_read_calibration@buffer
  5071  0042CC  6E14               	movwf	i2c_eeprom_read@data,c
  5072  0042CE  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  5073  0042D0  6E15               	movwf	i2c_eeprom_read@data+1,c
  5074  0042D2  0E04               	movlw	4
  5075  0042D4  6E16               	movwf	i2c_eeprom_read@length,c
  5076  0042D6  EC35  F036         	call	_i2c_eeprom_read	;wreg free
  5077                           
  5078                           ;i2c.c: 568: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  5079  0042DA  0E77               	movlw	119
  5080  0042DC  181C               	xorwf	i2c_eeprom_read_calibration@buffer,w,c
  5081  0042DE  A4D8               	btfss	status,2,c
  5082  0042E0  D021               	goto	l13209
  5083  0042E2  0E55               	movlw	85
  5084  0042E4  181D               	xorwf	i2c_eeprom_read_calibration@buffer+1,w,c
  5085  0042E6  A4D8               	btfss	status,2,c
  5086  0042E8  D01D               	goto	l13209
  5087  0042EA  0E33               	movlw	51
  5088  0042EC  181E               	xorwf	i2c_eeprom_read_calibration@buffer+2,w,c
  5089  0042EE  A4D8               	btfss	status,2,c
  5090  0042F0  D019               	goto	l13209
  5091  0042F2  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5092  0042F4  181F               	xorwf	i2c_eeprom_read_calibration@buffer+3,w,c
  5093  0042F6  A4D8               	btfss	status,2,c
  5094  0042F8  D015               	goto	l13209
  5095                           
  5096                           ;i2c.c: 569: {
  5097                           ;i2c.c: 571: addr += 4;
  5098  0042FA  0E04               	movlw	4
  5099  0042FC  2620               	addwf	i2c_eeprom_read_calibration@addr,f,c
  5100  0042FE  0E00               	movlw	0
  5101  004300  2221               	addwfc	i2c_eeprom_read_calibration@addr+1,f,c
  5102                           
  5103                           ;i2c.c: 572: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  5104  004302  C020  F012         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  5105  004306  C021  F013         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  5106  00430A  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5107  00430C  0D0C               	mullw	12
  5108  00430E  0E10               	movlw	low _calibrationParameters
  5109  004310  24F3               	addwf	prodl,w,c
  5110  004312  6E14               	movwf	i2c_eeprom_read@data,c
  5111  004314  0E02               	movlw	high _calibrationParameters
  5112  004316  20F4               	addwfc	prodh,w,c
  5113  004318  6E15               	movwf	i2c_eeprom_read@data+1,c
  5114  00431A  0E0C               	movlw	12
  5115  00431C  6E16               	movwf	i2c_eeprom_read@length,c
  5116  00431E  EC35  F036         	call	_i2c_eeprom_read	;wreg free
  5117                           
  5118                           ;i2c.c: 573: }
  5119  004322  D03F               	goto	l13229
  5120  004324                     l13209:
  5121                           
  5122                           ;i2c.c: 574: else
  5123                           ;i2c.c: 575: {
  5124                           ;i2c.c: 577: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  5125  004324  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5126  004326  0D0C               	mullw	12
  5127  004328  0E10               	movlw	low _calibrationParameters
  5128  00432A  24F3               	addwf	prodl,w,c
  5129  00432C  6E01               	movwf	__i2c_eeprom_load_default_calibration@buffer,c
  5130  00432E  0E02               	movlw	high _calibrationParameters
  5131  004330  20F4               	addwfc	prodh,w,c
  5132  004332  6E02               	movwf	__i2c_eeprom_load_default_calibration@buffer+1,c
  5133  004334  C022  F003         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  5134  004338  EC40  F006         	call	__i2c_eeprom_load_default_calibration	;wreg free
  5135                           
  5136                           ;i2c.c: 579: switch((calibrationIndex_t) cntr)
  5137  00433C  D01C               	goto	l13227
  5138  00433E                     l13211:
  5139                           
  5140                           ;i2c.c: 582: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  5141  00433E  0E02               	movlw	2
  5142  004340  ECBD  F035         	call	_schedule_eeprom_write_task
  5143                           
  5144                           ;i2c.c: 583: break;
  5145  004344  D02E               	goto	l13229
  5146  004346                     l13213:
  5147                           
  5148                           ;i2c.c: 585: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  5149  004346  0E03               	movlw	3
  5150  004348  ECBD  F035         	call	_schedule_eeprom_write_task
  5151                           
  5152                           ;i2c.c: 586: break;
  5153  00434C  D02A               	goto	l13229
  5154  00434E                     l13215:
  5155                           
  5156                           ;i2c.c: 588: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  5157  00434E  0E04               	movlw	4
  5158  004350  ECBD  F035         	call	_schedule_eeprom_write_task
  5159                           
  5160                           ;i2c.c: 589: break;
  5161  004354  D026               	goto	l13229
  5162  004356                     l13217:
  5163                           
  5164                           ;i2c.c: 591: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  5165  004356  0E05               	movlw	5
  5166  004358  ECBD  F035         	call	_schedule_eeprom_write_task
  5167                           
  5168                           ;i2c.c: 592: break;
  5169  00435C  D022               	goto	l13229
  5170  00435E                     l13219:
  5171                           
  5172                           ;i2c.c: 594: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  5173  00435E  0E06               	movlw	6
  5174  004360  ECBD  F035         	call	_schedule_eeprom_write_task
  5175                           
  5176                           ;i2c.c: 595: break;
  5177  004364  D01E               	goto	l13229
  5178  004366                     l13221:
  5179                           
  5180                           ;i2c.c: 597: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  5181  004366  0E07               	movlw	7
  5182  004368  ECBD  F035         	call	_schedule_eeprom_write_task
  5183                           
  5184                           ;i2c.c: 598: break;
  5185  00436C  D01A               	goto	l13229
  5186  00436E                     l13223:
  5187                           
  5188                           ;i2c.c: 600: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  5189  00436E  0E08               	movlw	8
  5190  004370  ECBD  F035         	call	_schedule_eeprom_write_task
  5191                           
  5192                           ;i2c.c: 602: }
  5193                           
  5194                           ;i2c.c: 601: break;
  5195  004374  D016               	goto	l13229
  5196  004376                     l13227:
  5197  004376  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5198                           
  5199                           ; Switch size 1, requested type "space"
  5200                           ; Number of cases is 7, Range of values is 0 to 6
  5201                           ; switch strategies available:
  5202                           ; Name         Instructions Cycles
  5203                           ; simple_byte           22    12 (average)
  5204                           ;	Chosen strategy is simple_byte
  5205  004378  0A00               	xorlw	0	; case 0
  5206  00437A  B4D8               	btfsc	status,2,c
  5207  00437C  D7E0               	goto	l13211
  5208  00437E  0A01               	xorlw	1	; case 1
  5209  004380  B4D8               	btfsc	status,2,c
  5210  004382  D7E1               	goto	l13213
  5211  004384  0A03               	xorlw	3	; case 2
  5212  004386  B4D8               	btfsc	status,2,c
  5213  004388  D7E2               	goto	l13215
  5214  00438A  0A01               	xorlw	1	; case 3
  5215  00438C  B4D8               	btfsc	status,2,c
  5216  00438E  D7E3               	goto	l13217
  5217  004390  0A07               	xorlw	7	; case 4
  5218  004392  B4D8               	btfsc	status,2,c
  5219  004394  D7E4               	goto	l13219
  5220  004396  0A01               	xorlw	1	; case 5
  5221  004398  B4D8               	btfsc	status,2,c
  5222  00439A  D7E5               	goto	l13221
  5223  00439C  0A03               	xorlw	3	; case 6
  5224  00439E  B4D8               	btfsc	status,2,c
  5225  0043A0  D7E6               	goto	l13223
  5226  0043A2                     l13229:
  5227  0043A2  2A22               	incf	i2c_eeprom_read_calibration@cntr,f,c
  5228  0043A4  D778               	goto	l13189
  5229  0043A6                     __end_of_i2c_eeprom_read_calibration:
  5230                           	opt stack 0
  5231                           tblptru	equ	0xFF8
  5232                           tblptrh	equ	0xFF7
  5233                           tblptrl	equ	0xFF6
  5234                           tablat	equ	0xFF5
  5235                           prodh	equ	0xFF4
  5236                           prodl	equ	0xFF3
  5237                           intcon	equ	0xFF2
  5238                           intcon3	equ	0xFF0
  5239                           postinc0	equ	0xFEE
  5240                           wreg	equ	0xFE8
  5241                           postdec1	equ	0xFE5
  5242                           plusw1	equ	0xFE3
  5243                           fsr1h	equ	0xFE2
  5244                           fsr1l	equ	0xFE1
  5245                           plusw2	equ	0xFDB
  5246                           status	equ	0xFD8
  5247                           
  5248 ;; *************** function _i2c_eeprom_read *****************
  5249 ;; Defined at:
  5250 ;;		line 540 in file "i2c.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  address         2   17[COMRAM] unsigned int 
  5253 ;;  data            2   19[COMRAM] PTR unsigned char 
  5254 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  5255 ;;  length          1   21[COMRAM] unsigned char 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  slave_addres    1   24[COMRAM] unsigned char 
  5258 ;;  addr            1   23[COMRAM] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5268 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;Total ram usage:        8 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    2
  5275 ;; This function calls:
  5276 ;;		__i2c_read
  5277 ;;		__i2c_write
  5278 ;;		_i2c_set_frequency
  5279 ;; This function is called by:
  5280 ;;		_i2c_eeprom_read_calibration
  5281 ;;		_rtcc_read_eeprom
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text16
  5286  006C6A                     __ptext16:
  5287                           	opt stack 0
  5288  006C6A                     _i2c_eeprom_read:
  5289                           	opt stack 25
  5290                           
  5291                           ;i2c.c: 542: uint8_t slave_address;
  5292                           ;i2c.c: 543: uint8_t addr;
  5293                           ;i2c.c: 544: addr = address & 0xFF;
  5294                           
  5295                           ;incstack = 0
  5296  006C6A  C012  F018         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  5297                           
  5298                           ;i2c.c: 545: address &= 0b0000011100000000;
  5299  006C6E  0E00               	movlw	0
  5300  006C70  1612               	andwf	i2c_eeprom_read@address,f,c
  5301  006C72  0E07               	movlw	7
  5302  006C74  1613               	andwf	i2c_eeprom_read@address+1,f,c
  5303                           
  5304                           ;i2c.c: 546: address >>= 7;
  5305  006C76  0E07               	movlw	7
  5306  006C78  6E17               	movwf	??_i2c_eeprom_read& (0+255),c
  5307  006C7A                     u8435:
  5308  006C7A  90D8               	bcf	status,0,c
  5309  006C7C  3213               	rrcf	i2c_eeprom_read@address+1,f,c
  5310  006C7E  3212               	rrcf	i2c_eeprom_read@address,f,c
  5311  006C80  2E17               	decfsz	??_i2c_eeprom_read& (0+255),f,c
  5312  006C82  D7FB               	goto	u8435
  5313                           
  5314                           ;i2c.c: 547: slave_address = 0b10100000 | address;
  5315  006C84  5012               	movf	i2c_eeprom_read@address,w,c
  5316  006C86  09A0               	iorlw	160
  5317  006C88  6E19               	movwf	i2c_eeprom_read@slave_address,c
  5318                           
  5319                           ;i2c.c: 550: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5320  006C8A  0E02               	movlw	2
  5321  006C8C  EC06  F03A         	call	_i2c_set_frequency
  5322                           
  5323                           ;i2c.c: 552: _i2c_write(slave_address, &addr, 1);
  5324  006C90  0E18               	movlw	low i2c_eeprom_read@addr
  5325  006C92  6E06               	movwf	__i2c_write@data,c
  5326  006C94  0E00               	movlw	high i2c_eeprom_read@addr
  5327  006C96  6E07               	movwf	__i2c_write@data+1,c
  5328  006C98  0E01               	movlw	1
  5329  006C9A  6E08               	movwf	__i2c_write@length,c
  5330  006C9C  5019               	movf	i2c_eeprom_read@slave_address,w,c
  5331  006C9E  EC14  F037         	call	__i2c_write
  5332                           
  5333                           ;i2c.c: 553: _i2c_read(slave_address, &data[0], length);
  5334  006CA2  C014  F006         	movff	i2c_eeprom_read@data,__i2c_read@data
  5335  006CA6  C015  F007         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  5336  006CAA  C016  F008         	movff	i2c_eeprom_read@length,__i2c_read@length
  5337  006CAE  5019               	movf	i2c_eeprom_read@slave_address,w,c
  5338  006CB0  EC8C  F02E         	call	__i2c_read
  5339  006CB4  0012               	return		;funcret
  5340  006CB6                     __end_of_i2c_eeprom_read:
  5341                           	opt stack 0
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           intcon	equ	0xFF2
  5349                           intcon3	equ	0xFF0
  5350                           postinc0	equ	0xFEE
  5351                           wreg	equ	0xFE8
  5352                           postdec1	equ	0xFE5
  5353                           plusw1	equ	0xFE3
  5354                           fsr1h	equ	0xFE2
  5355                           fsr1l	equ	0xFE1
  5356                           plusw2	equ	0xFDB
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function __i2c_read *****************
  5360 ;; Defined at:
  5361 ;;		line 144 in file "i2c.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  slave_addres    1    wreg     unsigned char 
  5364 ;;  data            2    5[COMRAM] PTR unsigned char 
  5365 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  5366 ;;  length          1    7[COMRAM] unsigned char 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  slave_addres    1   15[COMRAM] unsigned char 
  5369 ;;  cntr            1   16[COMRAM] unsigned char 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5383 ;;Total ram usage:       12 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    1
  5386 ;; This function calls:
  5387 ;;		__i2c_acknowledge
  5388 ;;		__i2c_get
  5389 ;;		__i2c_not_acknowledge
  5390 ;;		__i2c_send
  5391 ;;		__i2c_start
  5392 ;;		__i2c_stop
  5393 ;;		__i2c_wait_idle
  5394 ;; This function is called by:
  5395 ;;		_i2c_eeprom_read
  5396 ;;		_i2c_eeprom_readByte
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text17
  5401  005D18                     __ptext17:
  5402                           	opt stack 0
  5403  005D18                     __i2c_read:
  5404                           	opt stack 25
  5405                           
  5406                           ;incstack = 0
  5407                           ;__i2c_read@slave_address stored from wreg
  5408  005D18  6E10               	movwf	__i2c_read@slave_address,c
  5409                           
  5410                           ;i2c.c: 146: uint8_t cntr;
  5411                           ;i2c.c: 148: _i2c_wait_idle();
  5412  005D1A  EC92  F034         	call	__i2c_wait_idle	;wreg free
  5413                           
  5414                           ;i2c.c: 149: _i2c_start();
  5415  005D1E  EC6C  F03C         	call	__i2c_start	;wreg free
  5416                           
  5417                           ;i2c.c: 150: _i2c_wait_idle();
  5418  005D22  EC92  F034         	call	__i2c_wait_idle	;wreg free
  5419                           
  5420                           ;i2c.c: 151: _i2c_send(slave_address | 0x01);
  5421  005D26  5010               	movf	__i2c_read@slave_address,w,c
  5422  005D28  0901               	iorlw	1
  5423  005D2A  EC70  F03C         	call	__i2c_send
  5424                           
  5425                           ;i2c.c: 152: _i2c_wait_idle();
  5426  005D2E  EC92  F034         	call	__i2c_wait_idle	;wreg free
  5427                           
  5428                           ;i2c.c: 162: for(cntr=0; cntr<length-1; ++cntr)
  5429  005D32  0E00               	movlw	0
  5430  005D34  6E11               	movwf	__i2c_read@cntr,c
  5431  005D36  D00E               	goto	l10909
  5432  005D38                     l10903:
  5433                           
  5434                           ;i2c.c: 163: {
  5435                           ;i2c.c: 164: data[cntr] = _i2c_get();
  5436  005D38  5011               	movf	__i2c_read@cntr,w,c
  5437  005D3A  0D01               	mullw	1
  5438  005D3C  50F3               	movf	prodl,w,c
  5439  005D3E  2406               	addwf	__i2c_read@data,w,c
  5440  005D40  6ED9               	movwf	fsr2l,c
  5441  005D42  50F4               	movf	prodh,w,c
  5442  005D44  2007               	addwfc	__i2c_read@data+1,w,c
  5443  005D46  6EDA               	movwf	fsr2h,c
  5444  005D48  EC40  F03C         	call	__i2c_get	;wreg free
  5445  005D4C  6EDF               	movwf	indf2,c
  5446                           
  5447                           ;i2c.c: 165: _i2c_acknowledge();
  5448  005D4E  EC45  F03C         	call	__i2c_acknowledge	;wreg free
  5449  005D52  2A11               	incf	__i2c_read@cntr,f,c
  5450  005D54                     l10909:
  5451  005D54  0EFF               	movlw	255
  5452  005D56  6E09               	movwf	??__i2c_read& (0+255),c
  5453  005D58  0EFF               	movlw	255
  5454  005D5A  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
  5455  005D5C  5008               	movf	__i2c_read@length,w,c
  5456  005D5E  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
  5457  005D60  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
  5458  005D62  5009               	movf	??__i2c_read,w,c
  5459  005D64  260B               	addwf	??__i2c_read+2,f,c
  5460  005D66  500A               	movf	??__i2c_read+1,w,c
  5461  005D68  220C               	addwfc	??__i2c_read+3,f,c
  5462  005D6A  5011               	movf	__i2c_read@cntr,w,c
  5463  005D6C  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
  5464  005D6E  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
  5465  005D70  500B               	movf	??__i2c_read+2,w,c
  5466  005D72  5C0D               	subwf	??__i2c_read+4,w,c
  5467  005D74  500E               	movf	??__i2c_read+5,w,c
  5468  005D76  0A80               	xorlw	128
  5469  005D78  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
  5470  005D7A  500C               	movf	??__i2c_read+3,w,c
  5471  005D7C  0A80               	xorlw	128
  5472  005D7E  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
  5473  005D80  A0D8               	btfss	status,0,c
  5474  005D82  D7DA               	goto	l10903
  5475                           
  5476                           ;i2c.c: 166: }
  5477                           ;i2c.c: 167: data[cntr] = _i2c_get();
  5478  005D84  5011               	movf	__i2c_read@cntr,w,c
  5479  005D86  0D01               	mullw	1
  5480  005D88  50F3               	movf	prodl,w,c
  5481  005D8A  2406               	addwf	__i2c_read@data,w,c
  5482  005D8C  6ED9               	movwf	fsr2l,c
  5483  005D8E  50F4               	movf	prodh,w,c
  5484  005D90  2007               	addwfc	__i2c_read@data+1,w,c
  5485  005D92  6EDA               	movwf	fsr2h,c
  5486  005D94  EC40  F03C         	call	__i2c_get	;wreg free
  5487  005D98  6EDF               	movwf	indf2,c
  5488                           
  5489                           ;i2c.c: 168: _i2c_not_acknowledge();
  5490  005D9A  EC3B  F03C         	call	__i2c_not_acknowledge	;wreg free
  5491                           
  5492                           ;i2c.c: 170: _i2c_stop();
  5493  005D9E  EC68  F03C         	call	__i2c_stop	;wreg free
  5494  005DA2  0012               	return		;funcret
  5495  005DA4                     __end_of__i2c_read:
  5496                           	opt stack 0
  5497                           tblptru	equ	0xFF8
  5498                           tblptrh	equ	0xFF7
  5499                           tblptrl	equ	0xFF6
  5500                           tablat	equ	0xFF5
  5501                           prodh	equ	0xFF4
  5502                           prodl	equ	0xFF3
  5503                           intcon	equ	0xFF2
  5504                           intcon3	equ	0xFF0
  5505                           postinc0	equ	0xFEE
  5506                           wreg	equ	0xFE8
  5507                           postdec1	equ	0xFE5
  5508                           plusw1	equ	0xFE3
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           indf2	equ	0xFDF
  5512                           plusw2	equ	0xFDB
  5513                           fsr2h	equ	0xFDA
  5514                           fsr2l	equ	0xFD9
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function __i2c_not_acknowledge *****************
  5518 ;; Defined at:
  5519 ;;		line 86 in file "i2c.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		None
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;Total ram usage:        0 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		__i2c_read
  5543 ;;		_i2c_adc_read
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text18
  5548  007876                     __ptext18:
  5549                           	opt stack 0
  5550  007876                     __i2c_not_acknowledge:
  5551                           	opt stack 25
  5552                           
  5553                           ;i2c.c: 88: SSP1CON2bits.ACKDT = 1;
  5554                           
  5555                           ;incstack = 0
  5556  007876  8AC5               	bsf	4037,5,c	;volatile
  5557                           
  5558                           ;i2c.c: 89: SSP1CON2bits.ACKEN = 1;
  5559  007878  88C5               	bsf	4037,4,c	;volatile
  5560  00787A                     l1302:
  5561  00787A  A8C5               	btfss	4037,4,c	;volatile
  5562  00787C  0012               	return	
  5563  00787E  D7FD               	goto	l1302
  5564  007880                     __end_of__i2c_not_acknowledge:
  5565                           	opt stack 0
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           intcon3	equ	0xFF0
  5574                           postinc0	equ	0xFEE
  5575                           wreg	equ	0xFE8
  5576                           postdec1	equ	0xFE5
  5577                           plusw1	equ	0xFE3
  5578                           fsr1h	equ	0xFE2
  5579                           fsr1l	equ	0xFE1
  5580                           indf2	equ	0xFDF
  5581                           plusw2	equ	0xFDB
  5582                           fsr2h	equ	0xFDA
  5583                           fsr2l	equ	0xFD9
  5584                           status	equ	0xFD8
  5585                           
  5586 ;; *************** function __i2c_get *****************
  5587 ;; Defined at:
  5588 ;;		line 63 in file "i2c.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      unsigned char 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		__i2c_read
  5612 ;;		_i2c_adc_read
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text19
  5617  007880                     __ptext19:
  5618                           	opt stack 0
  5619  007880                     __i2c_get:
  5620                           	opt stack 25
  5621                           
  5622                           ;i2c.c: 65: SSP1CON2bits.RCEN = 1 ;
  5623                           
  5624                           ;incstack = 0
  5625  007880  86C5               	bsf	4037,3,c	;volatile
  5626  007882                     l1284:
  5627  007882  B6C5               	btfsc	4037,3,c	;volatile
  5628  007884  D7FE               	goto	l1284
  5629                           
  5630                           ;i2c.c: 67: return SSP1BUF;
  5631  007886  50C9               	movf	4041,w,c	;volatile
  5632  007888  0012               	return	
  5633  00788A                     __end_of__i2c_get:
  5634                           	opt stack 0
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           prodh	equ	0xFF4
  5640                           prodl	equ	0xFF3
  5641                           intcon	equ	0xFF2
  5642                           intcon3	equ	0xFF0
  5643                           postinc0	equ	0xFEE
  5644                           wreg	equ	0xFE8
  5645                           postdec1	equ	0xFE5
  5646                           plusw1	equ	0xFE3
  5647                           fsr1h	equ	0xFE2
  5648                           fsr1l	equ	0xFE1
  5649                           indf2	equ	0xFDF
  5650                           plusw2	equ	0xFDB
  5651                           fsr2h	equ	0xFDA
  5652                           fsr2l	equ	0xFD9
  5653                           status	equ	0xFD8
  5654                           
  5655 ;; *************** function __i2c_acknowledge *****************
  5656 ;; Defined at:
  5657 ;;		line 78 in file "i2c.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		None
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5675 ;;Total ram usage:        0 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		__i2c_read
  5681 ;;		_i2c_adc_read
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text20
  5686  00788A                     __ptext20:
  5687                           	opt stack 0
  5688  00788A                     __i2c_acknowledge:
  5689                           	opt stack 25
  5690                           
  5691                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 0;
  5692                           
  5693                           ;incstack = 0
  5694  00788A  9AC5               	bcf	4037,5,c	;volatile
  5695                           
  5696                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  5697  00788C  88C5               	bsf	4037,4,c	;volatile
  5698  00788E                     l1296:
  5699  00788E  A8C5               	btfss	4037,4,c	;volatile
  5700  007890  0012               	return	
  5701  007892  D7FD               	goto	l1296
  5702  007894                     __end_of__i2c_acknowledge:
  5703                           	opt stack 0
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           intcon3	equ	0xFF0
  5712                           postinc0	equ	0xFEE
  5713                           wreg	equ	0xFE8
  5714                           postdec1	equ	0xFE5
  5715                           plusw1	equ	0xFE3
  5716                           fsr1h	equ	0xFE2
  5717                           fsr1l	equ	0xFE1
  5718                           indf2	equ	0xFDF
  5719                           plusw2	equ	0xFDB
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function __i2c_eeprom_load_default_calibration *****************
  5725 ;; Defined at:
  5726 ;;		line 622 in file "i2c.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  buffer          2    0[COMRAM] PTR struct .
  5729 ;;		 -> calibrationParameters(84), 
  5730 ;;  index           1    2[COMRAM] enum E8141
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;		None
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5742 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5746 ;;Total ram usage:        3 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_i2c_eeprom_read_calibration
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text21
  5756  000C80                     __ptext21:
  5757                           	opt stack 0
  5758  000C80                     __i2c_eeprom_load_default_calibration:
  5759                           	opt stack 28
  5760                           
  5761                           ;i2c.c: 624: switch(index)
  5762                           
  5763                           ;incstack = 0
  5764  000C80  D1C7               	goto	l12129
  5765  000C82                     l12029:
  5766                           
  5767                           ;i2c.c: 627: (*buffer).NeutralOffset = 0;
  5768  000C82  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5769  000C86  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5770  000C8A  0E00               	movlw	0
  5771  000C8C  6EDE               	movwf	postinc2,c
  5772  000C8E  0E00               	movlw	0
  5773  000C90  6EDD               	movwf	postdec2,c
  5774                           
  5775                           ;i2c.c: 628: (*buffer).NeutralMultiplier = 11;
  5776  000C92  EE20 F002          	lfsr	2,2
  5777  000C96  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5778  000C98  26D9               	addwf	fsr2l,f,c
  5779  000C9A  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5780  000C9C  22DA               	addwfc	fsr2h,f,c
  5781  000C9E  0E0B               	movlw	11
  5782  000CA0  6EDE               	movwf	postinc2,c
  5783  000CA2  0E00               	movlw	0
  5784  000CA4  6EDD               	movwf	postdec2,c
  5785                           
  5786                           ;i2c.c: 629: (*buffer).NeutralShift = 4;
  5787  000CA6  EE20 F004          	lfsr	2,4
  5788  000CAA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5789  000CAC  26D9               	addwf	fsr2l,f,c
  5790  000CAE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5791  000CB0  22DA               	addwfc	fsr2h,f,c
  5792  000CB2  0E04               	movlw	4
  5793  000CB4  6EDF               	movwf	indf2,c
  5794                           
  5795                           ;i2c.c: 630: (*buffer).Offset = 0;
  5796  000CB6  EE20 F005          	lfsr	2,5
  5797  000CBA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5798  000CBC  26D9               	addwf	fsr2l,f,c
  5799  000CBE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5800  000CC0  22DA               	addwfc	fsr2h,f,c
  5801  000CC2  0E00               	movlw	0
  5802  000CC4  6EDE               	movwf	postinc2,c
  5803  000CC6  0E00               	movlw	0
  5804  000CC8  6EDD               	movwf	postdec2,c
  5805                           
  5806                           ;i2c.c: 631: (*buffer).Multiplier = 11;
  5807  000CCA  EE20 F007          	lfsr	2,7
  5808  000CCE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5809  000CD0  26D9               	addwf	fsr2l,f,c
  5810  000CD2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5811  000CD4  22DA               	addwfc	fsr2h,f,c
  5812  000CD6  0E0B               	movlw	11
  5813  000CD8  6EDE               	movwf	postinc2,c
  5814  000CDA  0E00               	movlw	0
  5815  000CDC  6EDD               	movwf	postdec2,c
  5816                           
  5817                           ;i2c.c: 632: (*buffer).Shift = 4;
  5818  000CDE  EE20 F009          	lfsr	2,9
  5819  000CE2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5820  000CE4  26D9               	addwf	fsr2l,f,c
  5821  000CE6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5822  000CE8  22DA               	addwfc	fsr2h,f,c
  5823  000CEA  0E04               	movlw	4
  5824  000CEC  6EDF               	movwf	indf2,c
  5825                           
  5826                           ;i2c.c: 633: (*buffer).AutoCalibration = 0;
  5827  000CEE  EE20 F00A          	lfsr	2,10
  5828  000CF2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5829  000CF4  26D9               	addwf	fsr2l,f,c
  5830  000CF6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5831  000CF8  22DA               	addwfc	fsr2h,f,c
  5832  000CFA  0E00               	movlw	0
  5833  000CFC  6EDE               	movwf	postinc2,c
  5834  000CFE  0E00               	movlw	0
  5835  000D00  6EDD               	movwf	postdec2,c
  5836                           
  5837                           ;i2c.c: 634: break;
  5838  000D02  0012               	return	
  5839  000D04                     l12043:
  5840                           
  5841                           ;i2c.c: 636: (*buffer).NeutralOffset = 0;
  5842  000D04  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5843  000D08  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5844  000D0C  0E00               	movlw	0
  5845  000D0E  6EDE               	movwf	postinc2,c
  5846  000D10  0E00               	movlw	0
  5847  000D12  6EDD               	movwf	postdec2,c
  5848                           
  5849                           ;i2c.c: 637: (*buffer).NeutralMultiplier = 17;
  5850  000D14  EE20 F002          	lfsr	2,2
  5851  000D18  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5852  000D1A  26D9               	addwf	fsr2l,f,c
  5853  000D1C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5854  000D1E  22DA               	addwfc	fsr2h,f,c
  5855  000D20  0E11               	movlw	17
  5856  000D22  6EDE               	movwf	postinc2,c
  5857  000D24  0E00               	movlw	0
  5858  000D26  6EDD               	movwf	postdec2,c
  5859                           
  5860                           ;i2c.c: 638: (*buffer).NeutralShift = 5;
  5861  000D28  EE20 F004          	lfsr	2,4
  5862  000D2C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5863  000D2E  26D9               	addwf	fsr2l,f,c
  5864  000D30  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5865  000D32  22DA               	addwfc	fsr2h,f,c
  5866  000D34  0E05               	movlw	5
  5867  000D36  6EDF               	movwf	indf2,c
  5868                           
  5869                           ;i2c.c: 639: (*buffer).Offset = 0;
  5870  000D38  EE20 F005          	lfsr	2,5
  5871  000D3C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5872  000D3E  26D9               	addwf	fsr2l,f,c
  5873  000D40  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5874  000D42  22DA               	addwfc	fsr2h,f,c
  5875  000D44  0E00               	movlw	0
  5876  000D46  6EDE               	movwf	postinc2,c
  5877  000D48  0E00               	movlw	0
  5878  000D4A  6EDD               	movwf	postdec2,c
  5879                           
  5880                           ;i2c.c: 640: (*buffer).Multiplier = 17;
  5881  000D4C  EE20 F007          	lfsr	2,7
  5882  000D50  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5883  000D52  26D9               	addwf	fsr2l,f,c
  5884  000D54  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5885  000D56  22DA               	addwfc	fsr2h,f,c
  5886  000D58  0E11               	movlw	17
  5887  000D5A  6EDE               	movwf	postinc2,c
  5888  000D5C  0E00               	movlw	0
  5889  000D5E  6EDD               	movwf	postdec2,c
  5890                           
  5891                           ;i2c.c: 641: (*buffer).Shift = 5;
  5892  000D60  EE20 F009          	lfsr	2,9
  5893  000D64  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5894  000D66  26D9               	addwf	fsr2l,f,c
  5895  000D68  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5896  000D6A  22DA               	addwfc	fsr2h,f,c
  5897  000D6C  0E05               	movlw	5
  5898  000D6E  6EDF               	movwf	indf2,c
  5899                           
  5900                           ;i2c.c: 642: (*buffer).AutoCalibration = 0;
  5901  000D70  EE20 F00A          	lfsr	2,10
  5902  000D74  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5903  000D76  26D9               	addwf	fsr2l,f,c
  5904  000D78  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5905  000D7A  22DA               	addwfc	fsr2h,f,c
  5906  000D7C  0E00               	movlw	0
  5907  000D7E  6EDE               	movwf	postinc2,c
  5908  000D80  0E00               	movlw	0
  5909  000D82  6EDD               	movwf	postdec2,c
  5910                           
  5911                           ;i2c.c: 643: break;
  5912  000D84  0012               	return	
  5913  000D86                     l12057:
  5914                           
  5915                           ;i2c.c: 645: (*buffer).NeutralOffset = 0;
  5916  000D86  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5917  000D8A  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5918  000D8E  0E00               	movlw	0
  5919  000D90  6EDE               	movwf	postinc2,c
  5920  000D92  0E00               	movlw	0
  5921  000D94  6EDD               	movwf	postdec2,c
  5922                           
  5923                           ;i2c.c: 646: (*buffer).NeutralMultiplier = 5851;
  5924  000D96  EE20 F002          	lfsr	2,2
  5925  000D9A  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5926  000D9C  26D9               	addwf	fsr2l,f,c
  5927  000D9E  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5928  000DA0  22DA               	addwfc	fsr2h,f,c
  5929  000DA2  0EDB               	movlw	219
  5930  000DA4  6EDE               	movwf	postinc2,c
  5931  000DA6  0E16               	movlw	22
  5932  000DA8  6EDD               	movwf	postdec2,c
  5933                           
  5934                           ;i2c.c: 647: (*buffer).NeutralShift = 15;
  5935  000DAA  EE20 F004          	lfsr	2,4
  5936  000DAE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5937  000DB0  26D9               	addwf	fsr2l,f,c
  5938  000DB2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5939  000DB4  22DA               	addwfc	fsr2h,f,c
  5940  000DB6  0E0F               	movlw	15
  5941  000DB8  6EDF               	movwf	indf2,c
  5942                           
  5943                           ;i2c.c: 648: (*buffer).Offset = 0;
  5944  000DBA  EE20 F005          	lfsr	2,5
  5945  000DBE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5946  000DC0  26D9               	addwf	fsr2l,f,c
  5947  000DC2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5948  000DC4  22DA               	addwfc	fsr2h,f,c
  5949  000DC6  0E00               	movlw	0
  5950  000DC8  6EDE               	movwf	postinc2,c
  5951  000DCA  0E00               	movlw	0
  5952  000DCC  6EDD               	movwf	postdec2,c
  5953                           
  5954                           ;i2c.c: 649: (*buffer).Multiplier = 5851;
  5955  000DCE  EE20 F007          	lfsr	2,7
  5956  000DD2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5957  000DD4  26D9               	addwf	fsr2l,f,c
  5958  000DD6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5959  000DD8  22DA               	addwfc	fsr2h,f,c
  5960  000DDA  0EDB               	movlw	219
  5961  000DDC  6EDE               	movwf	postinc2,c
  5962  000DDE  0E16               	movlw	22
  5963  000DE0  6EDD               	movwf	postdec2,c
  5964                           
  5965                           ;i2c.c: 650: (*buffer).Shift = 15;
  5966  000DE2  EE20 F009          	lfsr	2,9
  5967  000DE6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5968  000DE8  26D9               	addwf	fsr2l,f,c
  5969  000DEA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5970  000DEC  22DA               	addwfc	fsr2h,f,c
  5971  000DEE  0E0F               	movlw	15
  5972  000DF0  6EDF               	movwf	indf2,c
  5973                           
  5974                           ;i2c.c: 651: (*buffer).AutoCalibration = 0;
  5975  000DF2  EE20 F00A          	lfsr	2,10
  5976  000DF6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5977  000DF8  26D9               	addwf	fsr2l,f,c
  5978  000DFA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5979  000DFC  22DA               	addwfc	fsr2h,f,c
  5980  000DFE  0E00               	movlw	0
  5981  000E00  6EDE               	movwf	postinc2,c
  5982  000E02  0E00               	movlw	0
  5983  000E04  6EDD               	movwf	postdec2,c
  5984                           
  5985                           ;i2c.c: 652: break;
  5986  000E06  0012               	return	
  5987  000E08                     l12071:
  5988                           
  5989                           ;i2c.c: 654: (*buffer).NeutralOffset = 0;
  5990  000E08  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5991  000E0C  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5992  000E10  0E00               	movlw	0
  5993  000E12  6EDE               	movwf	postinc2,c
  5994  000E14  0E00               	movlw	0
  5995  000E16  6EDD               	movwf	postdec2,c
  5996                           
  5997                           ;i2c.c: 655: (*buffer).NeutralMultiplier = 5851;
  5998  000E18  EE20 F002          	lfsr	2,2
  5999  000E1C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6000  000E1E  26D9               	addwf	fsr2l,f,c
  6001  000E20  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6002  000E22  22DA               	addwfc	fsr2h,f,c
  6003  000E24  0EDB               	movlw	219
  6004  000E26  6EDE               	movwf	postinc2,c
  6005  000E28  0E16               	movlw	22
  6006  000E2A  6EDD               	movwf	postdec2,c
  6007                           
  6008                           ;i2c.c: 656: (*buffer).NeutralShift = 15;
  6009  000E2C  EE20 F004          	lfsr	2,4
  6010  000E30  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6011  000E32  26D9               	addwf	fsr2l,f,c
  6012  000E34  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6013  000E36  22DA               	addwfc	fsr2h,f,c
  6014  000E38  0E0F               	movlw	15
  6015  000E3A  6EDF               	movwf	indf2,c
  6016                           
  6017                           ;i2c.c: 657: (*buffer).Offset = 0;
  6018  000E3C  EE20 F005          	lfsr	2,5
  6019  000E40  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6020  000E42  26D9               	addwf	fsr2l,f,c
  6021  000E44  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6022  000E46  22DA               	addwfc	fsr2h,f,c
  6023  000E48  0E00               	movlw	0
  6024  000E4A  6EDE               	movwf	postinc2,c
  6025  000E4C  0E00               	movlw	0
  6026  000E4E  6EDD               	movwf	postdec2,c
  6027                           
  6028                           ;i2c.c: 658: (*buffer).Multiplier = 5851;
  6029  000E50  EE20 F007          	lfsr	2,7
  6030  000E54  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6031  000E56  26D9               	addwf	fsr2l,f,c
  6032  000E58  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6033  000E5A  22DA               	addwfc	fsr2h,f,c
  6034  000E5C  0EDB               	movlw	219
  6035  000E5E  6EDE               	movwf	postinc2,c
  6036  000E60  0E16               	movlw	22
  6037  000E62  6EDD               	movwf	postdec2,c
  6038                           
  6039                           ;i2c.c: 659: (*buffer).Shift = 15;
  6040  000E64  EE20 F009          	lfsr	2,9
  6041  000E68  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6042  000E6A  26D9               	addwf	fsr2l,f,c
  6043  000E6C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6044  000E6E  22DA               	addwfc	fsr2h,f,c
  6045  000E70  0E0F               	movlw	15
  6046  000E72  6EDF               	movwf	indf2,c
  6047                           
  6048                           ;i2c.c: 660: (*buffer).AutoCalibration = 0;
  6049  000E74  EE20 F00A          	lfsr	2,10
  6050  000E78  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6051  000E7A  26D9               	addwf	fsr2l,f,c
  6052  000E7C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6053  000E7E  22DA               	addwfc	fsr2h,f,c
  6054  000E80  0E00               	movlw	0
  6055  000E82  6EDE               	movwf	postinc2,c
  6056  000E84  0E00               	movlw	0
  6057  000E86  6EDD               	movwf	postdec2,c
  6058                           
  6059                           ;i2c.c: 661: break;
  6060  000E88  0012               	return	
  6061  000E8A                     l12085:
  6062                           
  6063                           ;i2c.c: 663: (*buffer).NeutralOffset = -13769;
  6064  000E8A  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  6065  000E8E  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  6066  000E92  0E37               	movlw	55
  6067  000E94  6EDE               	movwf	postinc2,c
  6068  000E96  0ECA               	movlw	202
  6069  000E98  6EDD               	movwf	postdec2,c
  6070                           
  6071                           ;i2c.c: 664: (*buffer).NeutralMultiplier = -11479;
  6072  000E9A  EE20 F002          	lfsr	2,2
  6073  000E9E  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6074  000EA0  26D9               	addwf	fsr2l,f,c
  6075  000EA2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6076  000EA4  22DA               	addwfc	fsr2h,f,c
  6077  000EA6  0E29               	movlw	41
  6078  000EA8  6EDE               	movwf	postinc2,c
  6079  000EAA  0ED3               	movlw	211
  6080  000EAC  6EDD               	movwf	postdec2,c
  6081                           
  6082                           ;i2c.c: 665: (*buffer).NeutralShift = 13;
  6083  000EAE  EE20 F004          	lfsr	2,4
  6084  000EB2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6085  000EB4  26D9               	addwf	fsr2l,f,c
  6086  000EB6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6087  000EB8  22DA               	addwfc	fsr2h,f,c
  6088  000EBA  0E0D               	movlw	13
  6089  000EBC  6EDF               	movwf	indf2,c
  6090                           
  6091                           ;i2c.c: 666: (*buffer).Offset = -13769;
  6092  000EBE  EE20 F005          	lfsr	2,5
  6093  000EC2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6094  000EC4  26D9               	addwf	fsr2l,f,c
  6095  000EC6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6096  000EC8  22DA               	addwfc	fsr2h,f,c
  6097  000ECA  0E37               	movlw	55
  6098  000ECC  6EDE               	movwf	postinc2,c
  6099  000ECE  0ECA               	movlw	202
  6100  000ED0  6EDD               	movwf	postdec2,c
  6101                           
  6102                           ;i2c.c: 667: (*buffer).Multiplier = -11479;
  6103  000ED2  EE20 F007          	lfsr	2,7
  6104  000ED6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6105  000ED8  26D9               	addwf	fsr2l,f,c
  6106  000EDA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6107  000EDC  22DA               	addwfc	fsr2h,f,c
  6108  000EDE  0E29               	movlw	41
  6109  000EE0  6EDE               	movwf	postinc2,c
  6110  000EE2  0ED3               	movlw	211
  6111  000EE4  6EDD               	movwf	postdec2,c
  6112                           
  6113                           ;i2c.c: 668: (*buffer).Shift = 13;
  6114  000EE6  EE20 F009          	lfsr	2,9
  6115  000EEA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6116  000EEC  26D9               	addwf	fsr2l,f,c
  6117  000EEE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6118  000EF0  22DA               	addwfc	fsr2h,f,c
  6119  000EF2  0E0D               	movlw	13
  6120  000EF4  6EDF               	movwf	indf2,c
  6121                           
  6122                           ;i2c.c: 669: (*buffer).AutoCalibration = 0;
  6123  000EF6  EE20 F00A          	lfsr	2,10
  6124  000EFA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6125  000EFC  26D9               	addwf	fsr2l,f,c
  6126  000EFE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6127  000F00  22DA               	addwfc	fsr2h,f,c
  6128  000F02  0E00               	movlw	0
  6129  000F04  6EDE               	movwf	postinc2,c
  6130  000F06  0E00               	movlw	0
  6131  000F08  6EDD               	movwf	postdec2,c
  6132                           
  6133                           ;i2c.c: 670: break;
  6134  000F0A  0012               	return	
  6135  000F0C                     l12099:
  6136                           
  6137                           ;i2c.c: 672: (*buffer).NeutralOffset = -13769;
  6138  000F0C  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  6139  000F10  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  6140  000F14  0E37               	movlw	55
  6141  000F16  6EDE               	movwf	postinc2,c
  6142  000F18  0ECA               	movlw	202
  6143  000F1A  6EDD               	movwf	postdec2,c
  6144                           
  6145                           ;i2c.c: 673: (*buffer).NeutralMultiplier = -11479;
  6146  000F1C  EE20 F002          	lfsr	2,2
  6147  000F20  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6148  000F22  26D9               	addwf	fsr2l,f,c
  6149  000F24  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6150  000F26  22DA               	addwfc	fsr2h,f,c
  6151  000F28  0E29               	movlw	41
  6152  000F2A  6EDE               	movwf	postinc2,c
  6153  000F2C  0ED3               	movlw	211
  6154  000F2E  6EDD               	movwf	postdec2,c
  6155                           
  6156                           ;i2c.c: 674: (*buffer).NeutralShift = 13;
  6157  000F30  EE20 F004          	lfsr	2,4
  6158  000F34  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6159  000F36  26D9               	addwf	fsr2l,f,c
  6160  000F38  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6161  000F3A  22DA               	addwfc	fsr2h,f,c
  6162  000F3C  0E0D               	movlw	13
  6163  000F3E  6EDF               	movwf	indf2,c
  6164                           
  6165                           ;i2c.c: 675: (*buffer).Offset = -13769;
  6166  000F40  EE20 F005          	lfsr	2,5
  6167  000F44  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6168  000F46  26D9               	addwf	fsr2l,f,c
  6169  000F48  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6170  000F4A  22DA               	addwfc	fsr2h,f,c
  6171  000F4C  0E37               	movlw	55
  6172  000F4E  6EDE               	movwf	postinc2,c
  6173  000F50  0ECA               	movlw	202
  6174  000F52  6EDD               	movwf	postdec2,c
  6175                           
  6176                           ;i2c.c: 676: (*buffer).Multiplier = -11479;
  6177  000F54  EE20 F007          	lfsr	2,7
  6178  000F58  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6179  000F5A  26D9               	addwf	fsr2l,f,c
  6180  000F5C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6181  000F5E  22DA               	addwfc	fsr2h,f,c
  6182  000F60  0E29               	movlw	41
  6183  000F62  6EDE               	movwf	postinc2,c
  6184  000F64  0ED3               	movlw	211
  6185  000F66  6EDD               	movwf	postdec2,c
  6186                           
  6187                           ;i2c.c: 677: (*buffer).Shift = 13;
  6188  000F68  EE20 F009          	lfsr	2,9
  6189  000F6C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6190  000F6E  26D9               	addwf	fsr2l,f,c
  6191  000F70  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6192  000F72  22DA               	addwfc	fsr2h,f,c
  6193  000F74  0E0D               	movlw	13
  6194  000F76  6EDF               	movwf	indf2,c
  6195                           
  6196                           ;i2c.c: 678: (*buffer).AutoCalibration = 0;
  6197  000F78  EE20 F00A          	lfsr	2,10
  6198  000F7C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6199  000F7E  26D9               	addwf	fsr2l,f,c
  6200  000F80  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6201  000F82  22DA               	addwfc	fsr2h,f,c
  6202  000F84  0E00               	movlw	0
  6203  000F86  6EDE               	movwf	postinc2,c
  6204  000F88  0E00               	movlw	0
  6205  000F8A  6EDD               	movwf	postdec2,c
  6206                           
  6207                           ;i2c.c: 679: break;
  6208  000F8C  0012               	return	
  6209  000F8E                     l12113:
  6210                           
  6211                           ;i2c.c: 681: (*buffer).NeutralOffset = -13769;
  6212  000F8E  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  6213  000F92  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  6214  000F96  0E37               	movlw	55
  6215  000F98  6EDE               	movwf	postinc2,c
  6216  000F9A  0ECA               	movlw	202
  6217  000F9C  6EDD               	movwf	postdec2,c
  6218                           
  6219                           ;i2c.c: 682: (*buffer).NeutralMultiplier = -11479;
  6220  000F9E  EE20 F002          	lfsr	2,2
  6221  000FA2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6222  000FA4  26D9               	addwf	fsr2l,f,c
  6223  000FA6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6224  000FA8  22DA               	addwfc	fsr2h,f,c
  6225  000FAA  0E29               	movlw	41
  6226  000FAC  6EDE               	movwf	postinc2,c
  6227  000FAE  0ED3               	movlw	211
  6228  000FB0  6EDD               	movwf	postdec2,c
  6229                           
  6230                           ;i2c.c: 683: (*buffer).NeutralShift = 13;
  6231  000FB2  EE20 F004          	lfsr	2,4
  6232  000FB6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6233  000FB8  26D9               	addwf	fsr2l,f,c
  6234  000FBA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6235  000FBC  22DA               	addwfc	fsr2h,f,c
  6236  000FBE  0E0D               	movlw	13
  6237  000FC0  6EDF               	movwf	indf2,c
  6238                           
  6239                           ;i2c.c: 684: (*buffer).Offset = -13769;
  6240  000FC2  EE20 F005          	lfsr	2,5
  6241  000FC6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6242  000FC8  26D9               	addwf	fsr2l,f,c
  6243  000FCA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6244  000FCC  22DA               	addwfc	fsr2h,f,c
  6245  000FCE  0E37               	movlw	55
  6246  000FD0  6EDE               	movwf	postinc2,c
  6247  000FD2  0ECA               	movlw	202
  6248  000FD4  6EDD               	movwf	postdec2,c
  6249                           
  6250                           ;i2c.c: 685: (*buffer).Multiplier = -11479;
  6251  000FD6  EE20 F007          	lfsr	2,7
  6252  000FDA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6253  000FDC  26D9               	addwf	fsr2l,f,c
  6254  000FDE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6255  000FE0  22DA               	addwfc	fsr2h,f,c
  6256  000FE2  0E29               	movlw	41
  6257  000FE4  6EDE               	movwf	postinc2,c
  6258  000FE6  0ED3               	movlw	211
  6259  000FE8  6EDD               	movwf	postdec2,c
  6260                           
  6261                           ;i2c.c: 686: (*buffer).Shift = 13;
  6262  000FEA  EE20 F009          	lfsr	2,9
  6263  000FEE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6264  000FF0  26D9               	addwf	fsr2l,f,c
  6265  000FF2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6266  000FF4  22DA               	addwfc	fsr2h,f,c
  6267  000FF6  0E0D               	movlw	13
  6268  000FF8  6EDF               	movwf	indf2,c
  6269                           
  6270                           ;i2c.c: 687: (*buffer).AutoCalibration = 0;
  6271  000FFA  EE20 F00A          	lfsr	2,10
  6272  000FFE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  6273  001000  26D9               	addwf	fsr2l,f,c
  6274  001002  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  6275  001004  22DA               	addwfc	fsr2h,f,c
  6276  001006  0E00               	movlw	0
  6277  001008  6EDE               	movwf	postinc2,c
  6278  00100A  0E00               	movlw	0
  6279  00100C  6EDD               	movwf	postdec2,c
  6280                           
  6281                           ;i2c.c: 689: }
  6282                           
  6283                           ;i2c.c: 688: break;
  6284  00100E  0012               	return	
  6285  001010                     l12129:
  6286  001010  5003               	movf	__i2c_eeprom_load_default_calibration@index,w,c
  6287                           
  6288                           ; Switch size 1, requested type "space"
  6289                           ; Number of cases is 7, Range of values is 0 to 6
  6290                           ; switch strategies available:
  6291                           ; Name         Instructions Cycles
  6292                           ; simple_byte           22    12 (average)
  6293                           ;	Chosen strategy is simple_byte
  6294  001012  0A00               	xorlw	0	; case 0
  6295  001014  B4D8               	btfsc	status,2,c
  6296  001016  D635               	goto	l12029
  6297  001018  0A01               	xorlw	1	; case 1
  6298  00101A  B4D8               	btfsc	status,2,c
  6299  00101C  D673               	goto	l12043
  6300  00101E  0A03               	xorlw	3	; case 2
  6301  001020  B4D8               	btfsc	status,2,c
  6302  001022  D6B1               	goto	l12057
  6303  001024  0A01               	xorlw	1	; case 3
  6304  001026  B4D8               	btfsc	status,2,c
  6305  001028  D6EF               	goto	l12071
  6306  00102A  0A07               	xorlw	7	; case 4
  6307  00102C  B4D8               	btfsc	status,2,c
  6308  00102E  D72D               	goto	l12085
  6309  001030  0A01               	xorlw	1	; case 5
  6310  001032  B4D8               	btfsc	status,2,c
  6311  001034  D76B               	goto	l12099
  6312  001036  0A03               	xorlw	3	; case 6
  6313  001038  A4D8               	btfss	status,2,c
  6314  00103A  0012               	return	
  6315  00103C  D7A8               	goto	l12113
  6316  00103E                     __end_of__i2c_eeprom_load_default_calibration:
  6317                           	opt stack 0
  6318                           tblptru	equ	0xFF8
  6319                           tblptrh	equ	0xFF7
  6320                           tblptrl	equ	0xFF6
  6321                           tablat	equ	0xFF5
  6322                           prodh	equ	0xFF4
  6323                           prodl	equ	0xFF3
  6324                           intcon	equ	0xFF2
  6325                           intcon3	equ	0xFF0
  6326                           postinc0	equ	0xFEE
  6327                           wreg	equ	0xFE8
  6328                           postdec1	equ	0xFE5
  6329                           plusw1	equ	0xFE3
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           plusw2	equ	0xFDB
  6336                           fsr2h	equ	0xFDA
  6337                           fsr2l	equ	0xFD9
  6338                           status	equ	0xFD8
  6339                           
  6340 ;; *************** function _flash_init *****************
  6341 ;; Defined at:
  6342 ;;		line 448 in file "flash.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;		None
  6345 ;; Auto vars:     Size  Location     Type
  6346 ;;		None
  6347 ;; Return value:  Size  Location     Type
  6348 ;;                  1    wreg      void 
  6349 ;; Registers used:
  6350 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6351 ;; Tracked objects:
  6352 ;;		On entry : 0/0
  6353 ;;		On exit  : 0/0
  6354 ;;		Unchanged: 0/0
  6355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;Total ram usage:        0 bytes
  6361 ;; Hardware stack levels used:    1
  6362 ;; Hardware stack levels required when called:    4
  6363 ;; This function calls:
  6364 ;;		__flash_set_page_size
  6365 ;; This function is called by:
  6366 ;;		_system_init
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text22
  6371  006C1C                     __ptext22:
  6372                           	opt stack 0
  6373  006C1C                     _flash_init:
  6374                           	opt stack 25
  6375                           
  6376                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6377                           
  6378                           ;incstack = 0
  6379  006C1C  0E55               	movlw	85
  6380  006C1E  6EA7               	movwf	4007,c	;volatile
  6381  006C20  0EAA               	movlw	170
  6382  006C22  6EA7               	movwf	4007,c	;volatile
  6383  006C24  010E               	movlb	14	; () banked
  6384  006C26  91BF               	bcf	191,0,b	;volatile
  6385                           
  6386                           ;flash.c: 452: RPINR21 = 23;
  6387  006C28  0E17               	movlw	23
  6388  006C2A  010E               	movlb	14	; () banked
  6389  006C2C  6FFC               	movwf	252,b	;volatile
  6390                           
  6391                           ;flash.c: 453: RPOR21 = 10;
  6392  006C2E  0E0A               	movlw	10
  6393  006C30  010E               	movlb	14	; () banked
  6394  006C32  6FD5               	movwf	213,b	;volatile
  6395                           
  6396                           ;flash.c: 455: RPOR22 = 11;
  6397  006C34  0E0B               	movlw	11
  6398  006C36  010E               	movlb	14	; () banked
  6399  006C38  6FD6               	movwf	214,b	;volatile
  6400                           
  6401                           ;flash.c: 456: RPINR22 = 22;
  6402  006C3A  0E16               	movlw	22
  6403  006C3C  010E               	movlb	14	; () banked
  6404  006C3E  6FFD               	movwf	253,b	;volatile
  6405                           
  6406                           ;flash.c: 458: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6407  006C40  0E55               	movlw	85
  6408  006C42  6EA7               	movwf	4007,c	;volatile
  6409  006C44  0EAA               	movlw	170
  6410  006C46  6EA7               	movwf	4007,c	;volatile
  6411                           
  6412                           ; BSR set to: 14
  6413  006C48  010E               	movlb	14	; () banked
  6414  006C4A  81BF               	bsf	191,0,b	;volatile
  6415                           
  6416                           ; BSR set to: 14
  6417                           ;flash.c: 461: SSP2STATbits.SMP = 1;
  6418  006C4C  8E73               	bsf	3955,7,c	;volatile
  6419                           
  6420                           ; BSR set to: 14
  6421                           ;flash.c: 462: SSP2STATbits.CKE = 1;
  6422  006C4E  8C73               	bsf	3955,6,c	;volatile
  6423                           
  6424                           ; BSR set to: 14
  6425                           ;flash.c: 463: SSP2CON1bits.CKP = 0;
  6426  006C50  9872               	bcf	3954,4,c	;volatile
  6427                           
  6428                           ; BSR set to: 14
  6429                           ;flash.c: 464: SSP2CON1bits.SSPM =0b0000;
  6430  006C52  9072               	bcf	3954,0,c	;volatile
  6431  006C54  9272               	bcf	3954,1,c	;volatile
  6432  006C56  9472               	bcf	3954,2,c	;volatile
  6433  006C58  9672               	bcf	3954,3,c	;volatile
  6434                           
  6435                           ; BSR set to: 14
  6436                           ;flash.c: 465: SSP2CON1bits.SSPEN = 1;
  6437  006C5A  8A72               	bsf	3954,5,c	;volatile
  6438                           
  6439                           ;flash.c: 468: power_state = FLASH_POWER_STATE_NORMAL;
  6440  006C5C  0E00               	movlw	0
  6441  006C5E  0101               	movlb	1	; () banked
  6442  006C60  6F82               	movwf	_power_state& (0+255),b
  6443                           
  6444                           ; BSR set to: 1
  6445                           ;flash.c: 471: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  6446  006C62  0E00               	movlw	0
  6447  006C64  ECE1  F030         	call	__flash_set_page_size
  6448  006C68  0012               	return		;funcret
  6449  006C6A                     __end_of_flash_init:
  6450                           	opt stack 0
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           intcon	equ	0xFF2
  6458                           intcon3	equ	0xFF0
  6459                           postinc0	equ	0xFEE
  6460                           wreg	equ	0xFE8
  6461                           postdec1	equ	0xFE5
  6462                           plusw1	equ	0xFE3
  6463                           fsr1h	equ	0xFE2
  6464                           fsr1l	equ	0xFE1
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           plusw2	equ	0xFDB
  6469                           fsr2h	equ	0xFDA
  6470                           fsr2l	equ	0xFD9
  6471                           status	equ	0xFD8
  6472                           
  6473 ;; *************** function __flash_set_page_size *****************
  6474 ;; Defined at:
  6475 ;;		line 260 in file "flash.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  size            1    wreg     enum E8293
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  size            1   23[COMRAM] enum E8293
  6480 ;;  command         4   19[COMRAM] unsigned char [4]
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;Total ram usage:        5 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    3
  6497 ;; This function calls:
  6498 ;;		__flash_spi_tx
  6499 ;;		_flash_is_busy
  6500 ;;		_memcpy
  6501 ;; This function is called by:
  6502 ;;		_flash_init
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text23
  6507  0061C2                     __ptext23:
  6508                           	opt stack 0
  6509  0061C2                     __flash_set_page_size:
  6510                           	opt stack 25
  6511                           
  6512                           ;incstack = 0
  6513                           ;__flash_set_page_size@size stored from wreg
  6514  0061C2  6E18               	movwf	__flash_set_page_size@size,c
  6515  0061C4                     l12259:
  6516  0061C4  ECEF  F03A         	call	_flash_is_busy	;wreg free
  6517  0061C8  0900               	iorlw	0
  6518  0061CA  A4D8               	btfss	status,2,c
  6519  0061CC  D7FB               	goto	l12259
  6520                           
  6521                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
  6522  0061CE  5018               	movf	__flash_set_page_size@size,w,c
  6523  0061D0  A4D8               	btfss	status,2,c
  6524  0061D2  D013               	goto	l12265
  6525                           
  6526                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
  6527  0061D4  0E14               	movlw	low __flash_set_page_size@command
  6528  0061D6  6E01               	movwf	memcpy@d1,c
  6529  0061D8  0E00               	movlw	high __flash_set_page_size@command
  6530  0061DA  6E02               	movwf	memcpy@d1+1,c
  6531  0061DC  0EC3               	movlw	low _flash_command_pagesize_512
  6532  0061DE  6E03               	movwf	memcpy@s1,c
  6533  0061E0  0E8F               	movlw	high _flash_command_pagesize_512
  6534  0061E2  6E04               	movwf	memcpy@s1+1,c
  6535  0061E4  5003               	movf	memcpy@s1,w,c
  6536  0061E6  1004               	iorwf	memcpy@s1+1,w,c
  6537  0061E8  A4D8               	btfss	status,2,c
  6538  0061EA  0E00               	movlw	low (__mediumconst shr (0+16))
  6539  0061EC  6E05               	movwf	memcpy@s1+2,c
  6540  0061EE  0E00               	movlw	0
  6541  0061F0  6E07               	movwf	memcpy@n+1,c
  6542  0061F2  0E04               	movlw	4
  6543  0061F4  6E06               	movwf	memcpy@n,c
  6544  0061F6  EC4B  F033         	call	_memcpy	;wreg free
  6545  0061FA                     l12265:
  6546                           
  6547                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
  6548  0061FA  0418               	decf	__flash_set_page_size@size,w,c
  6549  0061FC  A4D8               	btfss	status,2,c
  6550  0061FE  D013               	goto	l12269
  6551                           
  6552                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
  6553  006200  0E14               	movlw	low __flash_set_page_size@command
  6554  006202  6E01               	movwf	memcpy@d1,c
  6555  006204  0E00               	movlw	high __flash_set_page_size@command
  6556  006206  6E02               	movwf	memcpy@d1+1,c
  6557  006208  0EBF               	movlw	low _flash_command_pagesize_528
  6558  00620A  6E03               	movwf	memcpy@s1,c
  6559  00620C  0E8F               	movlw	high _flash_command_pagesize_528
  6560  00620E  6E04               	movwf	memcpy@s1+1,c
  6561  006210  5003               	movf	memcpy@s1,w,c
  6562  006212  1004               	iorwf	memcpy@s1+1,w,c
  6563  006214  A4D8               	btfss	status,2,c
  6564  006216  0E00               	movlw	low (__mediumconst shr (0+16))
  6565  006218  6E05               	movwf	memcpy@s1+2,c
  6566  00621A  0E00               	movlw	0
  6567  00621C  6E07               	movwf	memcpy@n+1,c
  6568  00621E  0E04               	movlw	4
  6569  006220  6E06               	movwf	memcpy@n,c
  6570  006222  EC4B  F033         	call	_memcpy	;wreg free
  6571  006226                     l12269:
  6572                           
  6573                           ;flash.c: 274: _flash_spi_tx(command, 4);
  6574  006226  0E14               	movlw	low __flash_set_page_size@command
  6575  006228  6E01               	movwf	__flash_spi_tx@data,c
  6576  00622A  0E00               	movlw	high __flash_set_page_size@command
  6577  00622C  6E02               	movwf	__flash_spi_tx@data+1,c
  6578  00622E  0E00               	movlw	0
  6579  006230  6E04               	movwf	__flash_spi_tx@length+1,c
  6580  006232  0E04               	movlw	4
  6581  006234  6E03               	movwf	__flash_spi_tx@length,c
  6582  006236  EC66  F034         	call	__flash_spi_tx	;wreg free
  6583  00623A  0012               	return		;funcret
  6584  00623C                     __end_of__flash_set_page_size:
  6585                           	opt stack 0
  6586                           tblptru	equ	0xFF8
  6587                           tblptrh	equ	0xFF7
  6588                           tblptrl	equ	0xFF6
  6589                           tablat	equ	0xFF5
  6590                           prodh	equ	0xFF4
  6591                           prodl	equ	0xFF3
  6592                           intcon	equ	0xFF2
  6593                           intcon3	equ	0xFF0
  6594                           postinc0	equ	0xFEE
  6595                           wreg	equ	0xFE8
  6596                           postdec1	equ	0xFE5
  6597                           plusw1	equ	0xFE3
  6598                           fsr1h	equ	0xFE2
  6599                           fsr1l	equ	0xFE1
  6600                           indf2	equ	0xFDF
  6601                           postinc2	equ	0xFDE
  6602                           postdec2	equ	0xFDD
  6603                           plusw2	equ	0xFDB
  6604                           fsr2h	equ	0xFDA
  6605                           fsr2l	equ	0xFD9
  6606                           status	equ	0xFD8
  6607                           
  6608 ;; *************** function _fat_init *****************
  6609 ;; Defined at:
  6610 ;;		line 1023 in file "fat16.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;		None
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;Total ram usage:        0 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    6
  6631 ;; This function calls:
  6632 ;;		_fat_format
  6633 ;;		_fat_get_format_status
  6634 ;; This function is called by:
  6635 ;;		_system_init
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text24
  6640  00783C                     __ptext24:
  6641                           	opt stack 0
  6642  00783C                     _fat_init:
  6643                           	opt stack 23
  6644                           
  6645                           ;fat16.c: 1026: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6646                           
  6647                           ;incstack = 0
  6648  00783C  EC6A  F02C         	call	_fat_get_format_status	;wreg free
  6649  007840  0900               	iorlw	0
  6650  007842  A4D8               	btfss	status,2,c
  6651  007844  0012               	return	
  6652                           
  6653                           ;fat16.c: 1027: {
  6654                           ;fat16.c: 1028: fat_format();
  6655  007846  ECD5  F014         	call	_fat_format	;wreg free
  6656  00784A  0012               	return	
  6657  00784C                     __end_of_fat_init:
  6658                           	opt stack 0
  6659                           tblptru	equ	0xFF8
  6660                           tblptrh	equ	0xFF7
  6661                           tblptrl	equ	0xFF6
  6662                           tablat	equ	0xFF5
  6663                           prodh	equ	0xFF4
  6664                           prodl	equ	0xFF3
  6665                           intcon	equ	0xFF2
  6666                           intcon3	equ	0xFF0
  6667                           postinc0	equ	0xFEE
  6668                           wreg	equ	0xFE8
  6669                           postdec1	equ	0xFE5
  6670                           plusw1	equ	0xFE3
  6671                           fsr1h	equ	0xFE2
  6672                           fsr1l	equ	0xFE1
  6673                           indf2	equ	0xFDF
  6674                           postinc2	equ	0xFDE
  6675                           postdec2	equ	0xFDD
  6676                           plusw2	equ	0xFDB
  6677                           fsr2h	equ	0xFDA
  6678                           fsr2l	equ	0xFD9
  6679                           status	equ	0xFD8
  6680                           
  6681 ;; *************** function _fat_get_format_status *****************
  6682 ;; Defined at:
  6683 ;;		line 935 in file "fat16.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  cntr            2   45[COMRAM] unsigned int 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      enum E8279
  6690 ;; Registers used:
  6691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;Total ram usage:        4 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:    5
  6704 ;; This function calls:
  6705 ;;		__get_fbr
  6706 ;;		__get_mbr
  6707 ;;		_flash_page_read
  6708 ;; This function is called by:
  6709 ;;		_fat_init
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text25
  6714  0058D4                     __ptext25:
  6715                           	opt stack 0
  6716  0058D4                     _fat_get_format_status:
  6717                           	opt stack 23
  6718                           
  6719                           ;fat16.c: 937: uint16_t cntr;
  6720                           ;fat16.c: 940: flash_page_read(0, buffer);
  6721                           
  6722                           ;incstack = 0
  6723  0058D4  0E00               	movlw	0
  6724  0058D6  6E29               	movwf	flash_page_read@page+1,c
  6725  0058D8  0E00               	movlw	0
  6726  0058DA  6E28               	movwf	flash_page_read@page,c
  6727  0058DC  0EDA               	movlw	low _buffer
  6728  0058DE  6E2A               	movwf	flash_page_read@data,c
  6729  0058E0  0E03               	movlw	high _buffer
  6730  0058E2  6E2B               	movwf	flash_page_read@data+1,c
  6731  0058E4  ECA8  F03A         	call	_flash_page_read	;wreg free
  6732                           
  6733                           ;fat16.c: 941: for(cntr=0; cntr<512; ++cntr)
  6734  0058E8  0E00               	movlw	0
  6735  0058EA  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6736  0058EC  0E00               	movlw	0
  6737  0058EE  6E2E               	movwf	fat_get_format_status@cntr,c
  6738  0058F0                     l12393:
  6739  0058F0  0E02               	movlw	2
  6740  0058F2  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6741  0058F4  B0D8               	btfsc	status,0,c
  6742  0058F6  D016               	goto	l12407
  6743                           
  6744                           ;fat16.c: 942: {
  6745                           ;fat16.c: 943: if(buffer[cntr] != _get_mbr(cntr))
  6746  0058F8  0EDA               	movlw	low _buffer
  6747  0058FA  242E               	addwf	fat_get_format_status@cntr,w,c
  6748  0058FC  6ED9               	movwf	fsr2l,c
  6749  0058FE  0E03               	movlw	high _buffer
  6750  005900  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6751  005902  6EDA               	movwf	fsr2h,c
  6752  005904  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6753  005908  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6754  00590C  EC62  F028         	call	__get_mbr	;wreg free
  6755  005910  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6756  005912  50DE               	movf	postinc2,w,c
  6757  005914  182D               	xorwf	??_fat_get_format_status+1,w,c
  6758  005916  B4D8               	btfsc	status,2,c
  6759  005918  D002               	goto	l12403
  6760                           
  6761                           ;fat16.c: 944: {
  6762                           ;fat16.c: 945: return DRIVE_NOT_FORMATED;
  6763  00591A  0E00               	movlw	0
  6764  00591C  0012               	return	
  6765  00591E                     l12403:
  6766  00591E  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6767  005920  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6768  005922  D7E6               	goto	l12393
  6769  005924                     l12407:
  6770                           
  6771                           ;fat16.c: 946: }
  6772                           ;fat16.c: 947: }
  6773                           ;fat16.c: 950: flash_page_read(1, buffer);
  6774  005924  0E00               	movlw	0
  6775  005926  6E29               	movwf	flash_page_read@page+1,c
  6776  005928  0E01               	movlw	1
  6777  00592A  6E28               	movwf	flash_page_read@page,c
  6778  00592C  0EDA               	movlw	low _buffer
  6779  00592E  6E2A               	movwf	flash_page_read@data,c
  6780  005930  0E03               	movlw	high _buffer
  6781  005932  6E2B               	movwf	flash_page_read@data+1,c
  6782  005934  ECA8  F03A         	call	_flash_page_read	;wreg free
  6783                           
  6784                           ;fat16.c: 951: for(cntr=0; cntr<512; ++cntr)
  6785  005938  0E00               	movlw	0
  6786  00593A  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6787  00593C  0E00               	movlw	0
  6788  00593E  6E2E               	movwf	fat_get_format_status@cntr,c
  6789  005940                     l12411:
  6790  005940  0E02               	movlw	2
  6791  005942  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6792  005944  B0D8               	btfsc	status,0,c
  6793  005946  D016               	goto	l12425
  6794                           
  6795                           ;fat16.c: 952: {
  6796                           ;fat16.c: 953: if(buffer[cntr] != _get_fbr(cntr))
  6797  005948  0EDA               	movlw	low _buffer
  6798  00594A  242E               	addwf	fat_get_format_status@cntr,w,c
  6799  00594C  6ED9               	movwf	fsr2l,c
  6800  00594E  0E03               	movlw	high _buffer
  6801  005950  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6802  005952  6EDA               	movwf	fsr2h,c
  6803  005954  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6804  005958  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6805  00595C  EC74  F012         	call	__get_fbr	;wreg free
  6806  005960  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6807  005962  50DE               	movf	postinc2,w,c
  6808  005964  182D               	xorwf	??_fat_get_format_status+1,w,c
  6809  005966  B4D8               	btfsc	status,2,c
  6810  005968  D002               	goto	l12421
  6811                           
  6812                           ;fat16.c: 954: {
  6813                           ;fat16.c: 955: return DRIVE_NOT_FORMATED;
  6814  00596A  0E00               	movlw	0
  6815  00596C  0012               	return	
  6816  00596E                     l12421:
  6817  00596E  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6818  005970  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6819  005972  D7E6               	goto	l12411
  6820  005974                     l12425:
  6821                           
  6822                           ;fat16.c: 956: }
  6823                           ;fat16.c: 957: }
  6824                           ;fat16.c: 960: return DRIVE_FORMATED;
  6825  005974  0E01               	movlw	1
  6826  005976  0012               	return	
  6827  005978                     __end_of_fat_get_format_status:
  6828                           	opt stack 0
  6829                           tblptru	equ	0xFF8
  6830                           tblptrh	equ	0xFF7
  6831                           tblptrl	equ	0xFF6
  6832                           tablat	equ	0xFF5
  6833                           prodh	equ	0xFF4
  6834                           prodl	equ	0xFF3
  6835                           intcon	equ	0xFF2
  6836                           intcon3	equ	0xFF0
  6837                           postinc0	equ	0xFEE
  6838                           wreg	equ	0xFE8
  6839                           postdec1	equ	0xFE5
  6840                           plusw1	equ	0xFE3
  6841                           fsr1h	equ	0xFE2
  6842                           fsr1l	equ	0xFE1
  6843                           indf2	equ	0xFDF
  6844                           postinc2	equ	0xFDE
  6845                           postdec2	equ	0xFDD
  6846                           plusw2	equ	0xFDB
  6847                           fsr2h	equ	0xFDA
  6848                           fsr2l	equ	0xFD9
  6849                           status	equ	0xFD8
  6850                           
  6851 ;; *************** function _fat_format *****************
  6852 ;; Defined at:
  6853 ;;		line 963 in file "fat16.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;		None
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  cntr            2   36[COMRAM] unsigned int 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;Total ram usage:        2 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    5
  6874 ;; This function calls:
  6875 ;;		__get_data
  6876 ;;		__get_fat
  6877 ;;		__get_fbr
  6878 ;;		__get_mbr
  6879 ;;		__get_root
  6880 ;;		_flash_page_write
  6881 ;; This function is called by:
  6882 ;;		_fat_init
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text26
  6887  0029AA                     __ptext26:
  6888                           	opt stack 0
  6889  0029AA                     _fat_format:
  6890                           	opt stack 23
  6891                           
  6892                           ;fat16.c: 965: uint16_t cntr;
  6893                           ;fat16.c: 968: for(cntr=0; cntr<512; ++cntr)
  6894                           
  6895                           ;incstack = 0
  6896  0029AA  0E00               	movlw	0
  6897  0029AC  6E26               	movwf	fat_format@cntr+1,c
  6898  0029AE  0E00               	movlw	0
  6899  0029B0  6E25               	movwf	fat_format@cntr,c
  6900  0029B2                     l12431:
  6901  0029B2  0E02               	movlw	2
  6902  0029B4  5C26               	subwf	fat_format@cntr+1,w,c
  6903  0029B6  B0D8               	btfsc	status,0,c
  6904  0029B8  D010               	goto	l12441
  6905                           
  6906                           ;fat16.c: 969: {
  6907                           ;fat16.c: 970: buffer[cntr] = _get_mbr(cntr);
  6908  0029BA  0EDA               	movlw	low _buffer
  6909  0029BC  2425               	addwf	fat_format@cntr,w,c
  6910  0029BE  6ED9               	movwf	fsr2l,c
  6911  0029C0  0E03               	movlw	high _buffer
  6912  0029C2  2026               	addwfc	fat_format@cntr+1,w,c
  6913  0029C4  6EDA               	movwf	fsr2h,c
  6914  0029C6  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  6915  0029CA  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  6916  0029CE  EC62  F028         	call	__get_mbr	;wreg free
  6917  0029D2  6EDF               	movwf	indf2,c
  6918  0029D4  4A25               	infsnz	fat_format@cntr,f,c
  6919  0029D6  2A26               	incf	fat_format@cntr+1,f,c
  6920  0029D8  D7EC               	goto	l12431
  6921  0029DA                     l12441:
  6922                           
  6923                           ;fat16.c: 971: }
  6924                           ;fat16.c: 972: flash_page_write(0, buffer);
  6925  0029DA  0E00               	movlw	0
  6926  0029DC  6E21               	movwf	flash_page_write@page+1,c
  6927  0029DE  0E00               	movlw	0
  6928  0029E0  6E20               	movwf	flash_page_write@page,c
  6929  0029E2  0EDA               	movlw	low _buffer
  6930  0029E4  6E22               	movwf	flash_page_write@data,c
  6931  0029E6  0E03               	movlw	high _buffer
  6932  0029E8  6E23               	movwf	flash_page_write@data+1,c
  6933  0029EA  ECA7  F036         	call	_flash_page_write	;wreg free
  6934                           
  6935                           ;fat16.c: 975: for(cntr=0; cntr<512; ++cntr)
  6936  0029EE  0E00               	movlw	0
  6937  0029F0  6E26               	movwf	fat_format@cntr+1,c
  6938  0029F2  0E00               	movlw	0
  6939  0029F4  6E25               	movwf	fat_format@cntr,c
  6940  0029F6                     l12445:
  6941  0029F6  0E02               	movlw	2
  6942  0029F8  5C26               	subwf	fat_format@cntr+1,w,c
  6943  0029FA  B0D8               	btfsc	status,0,c
  6944  0029FC  D010               	goto	l12455
  6945                           
  6946                           ;fat16.c: 976: {
  6947                           ;fat16.c: 977: buffer[cntr] = _get_fbr(cntr);
  6948  0029FE  0EDA               	movlw	low _buffer
  6949  002A00  2425               	addwf	fat_format@cntr,w,c
  6950  002A02  6ED9               	movwf	fsr2l,c
  6951  002A04  0E03               	movlw	high _buffer
  6952  002A06  2026               	addwfc	fat_format@cntr+1,w,c
  6953  002A08  6EDA               	movwf	fsr2h,c
  6954  002A0A  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  6955  002A0E  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  6956  002A12  EC74  F012         	call	__get_fbr	;wreg free
  6957  002A16  6EDF               	movwf	indf2,c
  6958  002A18  4A25               	infsnz	fat_format@cntr,f,c
  6959  002A1A  2A26               	incf	fat_format@cntr+1,f,c
  6960  002A1C  D7EC               	goto	l12445
  6961  002A1E                     l12455:
  6962                           
  6963                           ;fat16.c: 978: }
  6964                           ;fat16.c: 979: flash_page_write(1, buffer);
  6965  002A1E  0E00               	movlw	0
  6966  002A20  6E21               	movwf	flash_page_write@page+1,c
  6967  002A22  0E01               	movlw	1
  6968  002A24  6E20               	movwf	flash_page_write@page,c
  6969  002A26  0EDA               	movlw	low _buffer
  6970  002A28  6E22               	movwf	flash_page_write@data,c
  6971  002A2A  0E03               	movlw	high _buffer
  6972  002A2C  6E23               	movwf	flash_page_write@data+1,c
  6973  002A2E  ECA7  F036         	call	_flash_page_write	;wreg free
  6974                           
  6975                           ;fat16.c: 982: for(cntr=0; cntr<512; ++cntr)
  6976  002A32  0E00               	movlw	0
  6977  002A34  6E26               	movwf	fat_format@cntr+1,c
  6978  002A36  0E00               	movlw	0
  6979  002A38  6E25               	movwf	fat_format@cntr,c
  6980  002A3A                     l12459:
  6981  002A3A  0E02               	movlw	2
  6982  002A3C  5C26               	subwf	fat_format@cntr+1,w,c
  6983  002A3E  B0D8               	btfsc	status,0,c
  6984  002A40  D010               	goto	l12469
  6985                           
  6986                           ;fat16.c: 983: {
  6987                           ;fat16.c: 984: buffer[cntr] = _get_fat(cntr);
  6988  002A42  0EDA               	movlw	low _buffer
  6989  002A44  2425               	addwf	fat_format@cntr,w,c
  6990  002A46  6ED9               	movwf	fsr2l,c
  6991  002A48  0E03               	movlw	high _buffer
  6992  002A4A  2026               	addwfc	fat_format@cntr+1,w,c
  6993  002A4C  6EDA               	movwf	fsr2h,c
  6994  002A4E  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  6995  002A52  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  6996  002A56  ECBE  F034         	call	__get_fat	;wreg free
  6997  002A5A  6EDF               	movwf	indf2,c
  6998  002A5C  4A25               	infsnz	fat_format@cntr,f,c
  6999  002A5E  2A26               	incf	fat_format@cntr+1,f,c
  7000  002A60  D7EC               	goto	l12459
  7001  002A62                     l12469:
  7002                           
  7003                           ;fat16.c: 985: }
  7004                           ;fat16.c: 986: flash_page_write(2, buffer);
  7005  002A62  0E00               	movlw	0
  7006  002A64  6E21               	movwf	flash_page_write@page+1,c
  7007  002A66  0E02               	movlw	2
  7008  002A68  6E20               	movwf	flash_page_write@page,c
  7009  002A6A  0EDA               	movlw	low _buffer
  7010  002A6C  6E22               	movwf	flash_page_write@data,c
  7011  002A6E  0E03               	movlw	high _buffer
  7012  002A70  6E23               	movwf	flash_page_write@data+1,c
  7013  002A72  ECA7  F036         	call	_flash_page_write	;wreg free
  7014                           
  7015                           ;fat16.c: 989: for(cntr=0; cntr<512; ++cntr)
  7016  002A76  0E00               	movlw	0
  7017  002A78  6E26               	movwf	fat_format@cntr+1,c
  7018  002A7A  0E00               	movlw	0
  7019  002A7C  6E25               	movwf	fat_format@cntr,c
  7020  002A7E                     l12473:
  7021  002A7E  0E02               	movlw	2
  7022  002A80  5C26               	subwf	fat_format@cntr+1,w,c
  7023  002A82  B0D8               	btfsc	status,0,c
  7024  002A84  D00B               	goto	l12483
  7025                           
  7026                           ;fat16.c: 990: {
  7027                           ;fat16.c: 991: buffer[cntr] = 0x00;
  7028  002A86  0EDA               	movlw	low _buffer
  7029  002A88  2425               	addwf	fat_format@cntr,w,c
  7030  002A8A  6ED9               	movwf	fsr2l,c
  7031  002A8C  0E03               	movlw	high _buffer
  7032  002A8E  2026               	addwfc	fat_format@cntr+1,w,c
  7033  002A90  6EDA               	movwf	fsr2h,c
  7034  002A92  0E00               	movlw	0
  7035  002A94  6EDF               	movwf	indf2,c
  7036  002A96  4A25               	infsnz	fat_format@cntr,f,c
  7037  002A98  2A26               	incf	fat_format@cntr+1,f,c
  7038  002A9A  D7F1               	goto	l12473
  7039  002A9C                     l12483:
  7040                           
  7041                           ;fat16.c: 992: }
  7042                           ;fat16.c: 993: for(cntr=3; cntr<=17; ++cntr)
  7043  002A9C  0E00               	movlw	0
  7044  002A9E  6E26               	movwf	fat_format@cntr+1,c
  7045  002AA0  0E03               	movlw	3
  7046  002AA2  6E25               	movwf	fat_format@cntr,c
  7047  002AA4                     l12485:
  7048  002AA4  5026               	movf	fat_format@cntr+1,w,c
  7049  002AA6  E111               	bnz	l12495
  7050  002AA8  0E12               	movlw	18
  7051  002AAA  5C25               	subwf	fat_format@cntr,w,c
  7052  002AAC  B0D8               	btfsc	status,0,c
  7053  002AAE  D00D               	goto	l12495
  7054                           
  7055                           ;fat16.c: 994: {
  7056                           ;fat16.c: 995: flash_page_write(cntr, buffer);
  7057  002AB0  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  7058  002AB4  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  7059  002AB8  0EDA               	movlw	low _buffer
  7060  002ABA  6E22               	movwf	flash_page_write@data,c
  7061  002ABC  0E03               	movlw	high _buffer
  7062  002ABE  6E23               	movwf	flash_page_write@data+1,c
  7063  002AC0  ECA7  F036         	call	_flash_page_write	;wreg free
  7064  002AC4  4A25               	infsnz	fat_format@cntr,f,c
  7065  002AC6  2A26               	incf	fat_format@cntr+1,f,c
  7066  002AC8  D7ED               	goto	l12485
  7067  002ACA                     l12495:
  7068                           
  7069                           ;fat16.c: 996: }
  7070                           ;fat16.c: 999: for(cntr=0; cntr<512; ++cntr)
  7071  002ACA  0E00               	movlw	0
  7072  002ACC  6E26               	movwf	fat_format@cntr+1,c
  7073  002ACE  0E00               	movlw	0
  7074  002AD0  6E25               	movwf	fat_format@cntr,c
  7075  002AD2                     l12497:
  7076  002AD2  0E02               	movlw	2
  7077  002AD4  5C26               	subwf	fat_format@cntr+1,w,c
  7078  002AD6  B0D8               	btfsc	status,0,c
  7079  002AD8  D010               	goto	l12507
  7080                           
  7081                           ;fat16.c: 1000: {
  7082                           ;fat16.c: 1001: buffer[cntr] = _get_root(cntr);
  7083  002ADA  0EDA               	movlw	low _buffer
  7084  002ADC  2425               	addwf	fat_format@cntr,w,c
  7085  002ADE  6ED9               	movwf	fsr2l,c
  7086  002AE0  0E03               	movlw	high _buffer
  7087  002AE2  2026               	addwfc	fat_format@cntr+1,w,c
  7088  002AE4  6EDA               	movwf	fsr2h,c
  7089  002AE6  C025  F001         	movff	fat_format@cntr,__get_root@idx
  7090  002AEA  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  7091  002AEE  EC96  F019         	call	__get_root	;wreg free
  7092  002AF2  6EDF               	movwf	indf2,c
  7093  002AF4  4A25               	infsnz	fat_format@cntr,f,c
  7094  002AF6  2A26               	incf	fat_format@cntr+1,f,c
  7095  002AF8  D7EC               	goto	l12497
  7096  002AFA                     l12507:
  7097                           
  7098                           ;fat16.c: 1002: }
  7099                           ;fat16.c: 1003: flash_page_write(18, buffer);
  7100  002AFA  0E00               	movlw	0
  7101  002AFC  6E21               	movwf	flash_page_write@page+1,c
  7102  002AFE  0E12               	movlw	18
  7103  002B00  6E20               	movwf	flash_page_write@page,c
  7104  002B02  0EDA               	movlw	low _buffer
  7105  002B04  6E22               	movwf	flash_page_write@data,c
  7106  002B06  0E03               	movlw	high _buffer
  7107  002B08  6E23               	movwf	flash_page_write@data+1,c
  7108  002B0A  ECA7  F036         	call	_flash_page_write	;wreg free
  7109                           
  7110                           ;fat16.c: 1006: for(cntr=0; cntr<512; ++cntr)
  7111  002B0E  0E00               	movlw	0
  7112  002B10  6E26               	movwf	fat_format@cntr+1,c
  7113  002B12  0E00               	movlw	0
  7114  002B14  6E25               	movwf	fat_format@cntr,c
  7115  002B16                     l12511:
  7116  002B16  0E02               	movlw	2
  7117  002B18  5C26               	subwf	fat_format@cntr+1,w,c
  7118  002B1A  B0D8               	btfsc	status,0,c
  7119  002B1C  D00B               	goto	l12521
  7120                           
  7121                           ;fat16.c: 1007: {
  7122                           ;fat16.c: 1008: buffer[cntr] = 0x00;
  7123  002B1E  0EDA               	movlw	low _buffer
  7124  002B20  2425               	addwf	fat_format@cntr,w,c
  7125  002B22  6ED9               	movwf	fsr2l,c
  7126  002B24  0E03               	movlw	high _buffer
  7127  002B26  2026               	addwfc	fat_format@cntr+1,w,c
  7128  002B28  6EDA               	movwf	fsr2h,c
  7129  002B2A  0E00               	movlw	0
  7130  002B2C  6EDF               	movwf	indf2,c
  7131  002B2E  4A25               	infsnz	fat_format@cntr,f,c
  7132  002B30  2A26               	incf	fat_format@cntr+1,f,c
  7133  002B32  D7F1               	goto	l12511
  7134  002B34                     l12521:
  7135                           
  7136                           ;fat16.c: 1009: }
  7137                           ;fat16.c: 1010: for(cntr=19; cntr<=21; ++cntr)
  7138  002B34  0E00               	movlw	0
  7139  002B36  6E26               	movwf	fat_format@cntr+1,c
  7140  002B38  0E13               	movlw	19
  7141  002B3A  6E25               	movwf	fat_format@cntr,c
  7142  002B3C                     l12523:
  7143  002B3C  5026               	movf	fat_format@cntr+1,w,c
  7144  002B3E  E111               	bnz	l12533
  7145  002B40  0E16               	movlw	22
  7146  002B42  5C25               	subwf	fat_format@cntr,w,c
  7147  002B44  B0D8               	btfsc	status,0,c
  7148  002B46  D00D               	goto	l12533
  7149                           
  7150                           ;fat16.c: 1011: {
  7151                           ;fat16.c: 1012: flash_page_write(cntr, buffer);
  7152  002B48  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  7153  002B4C  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  7154  002B50  0EDA               	movlw	low _buffer
  7155  002B52  6E22               	movwf	flash_page_write@data,c
  7156  002B54  0E03               	movlw	high _buffer
  7157  002B56  6E23               	movwf	flash_page_write@data+1,c
  7158  002B58  ECA7  F036         	call	_flash_page_write	;wreg free
  7159  002B5C  4A25               	infsnz	fat_format@cntr,f,c
  7160  002B5E  2A26               	incf	fat_format@cntr+1,f,c
  7161  002B60  D7ED               	goto	l12523
  7162  002B62                     l12533:
  7163                           
  7164                           ;fat16.c: 1013: }
  7165                           ;fat16.c: 1016: for(cntr=0; cntr<512; ++cntr)
  7166  002B62  0E00               	movlw	0
  7167  002B64  6E26               	movwf	fat_format@cntr+1,c
  7168  002B66  0E00               	movlw	0
  7169  002B68  6E25               	movwf	fat_format@cntr,c
  7170  002B6A                     l12535:
  7171  002B6A  0E02               	movlw	2
  7172  002B6C  5C26               	subwf	fat_format@cntr+1,w,c
  7173  002B6E  B0D8               	btfsc	status,0,c
  7174  002B70  D010               	goto	l12545
  7175                           
  7176                           ;fat16.c: 1017: {
  7177                           ;fat16.c: 1018: buffer[cntr] = _get_data(cntr);
  7178  002B72  0EDA               	movlw	low _buffer
  7179  002B74  2425               	addwf	fat_format@cntr,w,c
  7180  002B76  6ED9               	movwf	fsr2l,c
  7181  002B78  0E03               	movlw	high _buffer
  7182  002B7A  2026               	addwfc	fat_format@cntr+1,w,c
  7183  002B7C  6EDA               	movwf	fsr2h,c
  7184  002B7E  C025  F001         	movff	fat_format@cntr,__get_data@idx
  7185  002B82  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  7186  002B86  EC46  F03A         	call	__get_data	;wreg free
  7187  002B8A  6EDF               	movwf	indf2,c
  7188  002B8C  4A25               	infsnz	fat_format@cntr,f,c
  7189  002B8E  2A26               	incf	fat_format@cntr+1,f,c
  7190  002B90  D7EC               	goto	l12535
  7191  002B92                     l12545:
  7192                           
  7193                           ;fat16.c: 1019: }
  7194                           ;fat16.c: 1020: flash_page_write(22, buffer);
  7195  002B92  0E00               	movlw	0
  7196  002B94  6E21               	movwf	flash_page_write@page+1,c
  7197  002B96  0E16               	movlw	22
  7198  002B98  6E20               	movwf	flash_page_write@page,c
  7199  002B9A  0EDA               	movlw	low _buffer
  7200  002B9C  6E22               	movwf	flash_page_write@data,c
  7201  002B9E  0E03               	movlw	high _buffer
  7202  002BA0  6E23               	movwf	flash_page_write@data+1,c
  7203  002BA2  ECA7  F036         	call	_flash_page_write	;wreg free
  7204  002BA6  0012               	return		;funcret
  7205  002BA8                     __end_of_fat_format:
  7206                           	opt stack 0
  7207                           tblptru	equ	0xFF8
  7208                           tblptrh	equ	0xFF7
  7209                           tblptrl	equ	0xFF6
  7210                           tablat	equ	0xFF5
  7211                           prodh	equ	0xFF4
  7212                           prodl	equ	0xFF3
  7213                           intcon	equ	0xFF2
  7214                           intcon3	equ	0xFF0
  7215                           postinc0	equ	0xFEE
  7216                           wreg	equ	0xFE8
  7217                           postdec1	equ	0xFE5
  7218                           plusw1	equ	0xFE3
  7219                           fsr1h	equ	0xFE2
  7220                           fsr1l	equ	0xFE1
  7221                           indf2	equ	0xFDF
  7222                           postinc2	equ	0xFDE
  7223                           postdec2	equ	0xFDD
  7224                           plusw2	equ	0xFDB
  7225                           fsr2h	equ	0xFDA
  7226                           fsr2l	equ	0xFD9
  7227                           status	equ	0xFD8
  7228                           
  7229 ;; *************** function __get_root *****************
  7230 ;; Defined at:
  7231 ;;		line 849 in file "fat16.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  idx             2    0[COMRAM] unsigned int 
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;		None
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      unsigned char 
  7238 ;; Registers used:
  7239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7247 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;Total ram usage:        6 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_fat_format
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text27
  7259  00332C                     __ptext27:
  7260                           	opt stack 0
  7261  00332C                     __get_root:
  7262                           	opt stack 27
  7263                           
  7264                           ;fat16.c: 851: if (idx < 0x20)
  7265                           
  7266                           ;incstack = 0
  7267  00332C  5002               	movf	__get_root@idx+1,w,c
  7268  00332E  E11D               	bnz	l11671
  7269  003330  0E20               	movlw	32
  7270  003332  5C01               	subwf	__get_root@idx,w,c
  7271  003334  B0D8               	btfsc	status,0,c
  7272  003336  D019               	goto	l11671
  7273                           
  7274                           ;fat16.c: 852: {
  7275                           ;fat16.c: 853: if (idx < 11)
  7276  003338  5002               	movf	__get_root@idx+1,w,c
  7277  00333A  E110               	bnz	l11665
  7278  00333C  0E0B               	movlw	11
  7279  00333E  5C01               	subwf	__get_root@idx,w,c
  7280  003340  B0D8               	btfsc	status,0,c
  7281  003342  D00C               	goto	l11665
  7282                           
  7283                           ;fat16.c: 854: {
  7284                           ;fat16.c: 855: return "SolarChargr"[idx];
  7285  003344  0EDC               	movlw	low STR_9
  7286  003346  2401               	addwf	__get_root@idx,w,c
  7287  003348  6EF6               	movwf	tblptrl,c
  7288  00334A  0E8F               	movlw	high STR_9
  7289  00334C  2002               	addwfc	__get_root@idx+1,w,c
  7290  00334E  6EF7               	movwf	tblptrh,c
  7291  003350                     	if	1	;There are 3 active tblptr bytes
  7292  003350  6AF8               	clrf	tblptru,c
  7293  003352  0E00               	movlw	low (__mediumconst shr (0+16))
  7294  003354  22F8               	addwfc	tblptru,f,c
  7295  003356                     	endif
  7296  003356  0008               	tblrd		*
  7297  003358  50F5               	movf	tablat,w,c
  7298  00335A  0012               	return	
  7299  00335C                     l11665:
  7300                           
  7301                           ;fat16.c: 856: }
  7302                           ;fat16.c: 857: if(idx==11)
  7303  00335C  0E0B               	movlw	11
  7304  00335E  1801               	xorwf	__get_root@idx,w,c
  7305  003360  1002               	iorwf	__get_root@idx+1,w,c
  7306  003362  A4D8               	btfss	status,2,c
  7307  003364  D002               	goto	l11671
  7308                           
  7309                           ;fat16.c: 858: {
  7310                           ;fat16.c: 859: return 0x08;
  7311  003366  0E08               	movlw	8
  7312  003368  0012               	return	
  7313  00336A                     l11671:
  7314                           
  7315                           ;fat16.c: 860: }
  7316                           ;fat16.c: 861: }
  7317                           ;fat16.c: 862: if (idx < 0x40)
  7318  00336A  5002               	movf	__get_root@idx+1,w,c
  7319  00336C  E103               	bnz	u8551
  7320  00336E  0E40               	movlw	64
  7321  003370  5C01               	subwf	__get_root@idx,w,c
  7322  003372  B0D8               	btfsc	status,0,c
  7323  003374                     u8551:
  7324  003374  D0A4               	goto	l11773
  7325                           
  7326                           ;fat16.c: 863: {
  7327                           ;fat16.c: 864: idx -= 0x20;
  7328  003376  0E20               	movlw	32
  7329  003378  5E01               	subwf	__get_root@idx,f,c
  7330  00337A  0E00               	movlw	0
  7331  00337C  5A02               	subwfb	__get_root@idx+1,f,c
  7332                           
  7333                           ;fat16.c: 865: if (idx < 0+8)
  7334  00337E  5002               	movf	__get_root@idx+1,w,c
  7335  003380  E110               	bnz	l11679
  7336  003382  0E08               	movlw	8
  7337  003384  5C01               	subwf	__get_root@idx,w,c
  7338  003386  B0D8               	btfsc	status,0,c
  7339  003388  D00C               	goto	l11679
  7340                           
  7341                           ;fat16.c: 866: {
  7342                           ;fat16.c: 867: return "FILE    "[idx];
  7343  00338A  0EE8               	movlw	low STR_10
  7344  00338C  2401               	addwf	__get_root@idx,w,c
  7345  00338E  6EF6               	movwf	tblptrl,c
  7346  003390  0E8F               	movlw	high STR_10
  7347  003392  2002               	addwfc	__get_root@idx+1,w,c
  7348  003394  6EF7               	movwf	tblptrh,c
  7349  003396                     	if	1	;There are 3 active tblptr bytes
  7350  003396  6AF8               	clrf	tblptru,c
  7351  003398  0E00               	movlw	low (__mediumconst shr (0+16))
  7352  00339A  22F8               	addwfc	tblptru,f,c
  7353  00339C                     	endif
  7354  00339C  0008               	tblrd		*
  7355  00339E  50F5               	movf	tablat,w,c
  7356  0033A0  0012               	return	
  7357  0033A2                     l11679:
  7358                           
  7359                           ;fat16.c: 868: }
  7360                           ;fat16.c: 869: if (idx < 11)
  7361  0033A2  5002               	movf	__get_root@idx+1,w,c
  7362  0033A4  E146               	bnz	l11771
  7363  0033A6  0E0B               	movlw	11
  7364  0033A8  5C01               	subwf	__get_root@idx,w,c
  7365  0033AA  B0D8               	btfsc	status,0,c
  7366  0033AC  D042               	goto	l11771
  7367                           
  7368                           ;fat16.c: 870: {
  7369                           ;fat16.c: 871: return "TXT"[idx-8];
  7370  0033AE  0EF8               	movlw	248
  7371  0033B0  6E03               	movwf	??__get_root& (0+255),c
  7372  0033B2  0EFF               	movlw	255
  7373  0033B4  6E04               	movwf	(??__get_root+1)& (0+255),c
  7374  0033B6  C001  F005         	movff	__get_root@idx,??__get_root+2
  7375  0033BA  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  7376  0033BE  5003               	movf	??__get_root,w,c
  7377  0033C0  2605               	addwf	??__get_root+2,f,c
  7378  0033C2  5004               	movf	??__get_root+1,w,c
  7379  0033C4  2206               	addwfc	??__get_root+3,f,c
  7380  0033C6  0EFA               	movlw	low STR_11
  7381  0033C8  2405               	addwf	??__get_root+2,w,c
  7382  0033CA  6EF6               	movwf	tblptrl,c
  7383  0033CC  0E8F               	movlw	high STR_11
  7384  0033CE  2006               	addwfc	??__get_root+3,w,c
  7385  0033D0  6EF7               	movwf	tblptrh,c
  7386  0033D2                     	if	1	;There are 3 active tblptr bytes
  7387  0033D2  6AF8               	clrf	tblptru,c
  7388  0033D4  0E00               	movlw	low (__mediumconst shr (0+16))
  7389  0033D6  22F8               	addwfc	tblptru,f,c
  7390  0033D8                     	endif
  7391  0033D8  0008               	tblrd		*
  7392  0033DA  50F5               	movf	tablat,w,c
  7393  0033DC  0012               	return	
  7394  0033DE                     l11685:
  7395                           
  7396                           ;fat16.c: 876: return 0x20;
  7397  0033DE  0E20               	movlw	32
  7398  0033E0  0012               	return	
  7399  0033E2                     l11689:
  7400                           
  7401                           ;fat16.c: 878: return 0x06;
  7402  0033E2  0E06               	movlw	6
  7403  0033E4  0012               	return	
  7404  0033E6                     l11693:
  7405                           
  7406                           ;fat16.c: 880: return 0x28;
  7407  0033E6  0E28               	movlw	40
  7408  0033E8  0012               	return	
  7409  0033EA                     l11697:
  7410                           
  7411                           ;fat16.c: 882: return 0x78;
  7412  0033EA  0E78               	movlw	120
  7413  0033EC  0012               	return	
  7414  0033EE                     l11701:
  7415                           
  7416                           ;fat16.c: 884: return 0xDE;
  7417  0033EE  0EDE               	movlw	222
  7418  0033F0  0012               	return	
  7419  0033F2                     l11705:
  7420                           
  7421                           ;fat16.c: 886: return 0x38;
  7422  0033F2  0E38               	movlw	56
  7423  0033F4  0012               	return	
  7424  0033F6                     l11709:
  7425                           
  7426                           ;fat16.c: 888: return 0x5F;
  7427  0033F6  0E5F               	movlw	95
  7428  0033F8  0012               	return	
  7429  0033FA                     l11713:
  7430                           
  7431                           ;fat16.c: 890: return 0x4B;
  7432  0033FA  0E4B               	movlw	75
  7433  0033FC  0012               	return	
  7434  0033FE                     l11717:
  7435                           
  7436                           ;fat16.c: 892: return 0x00;
  7437  0033FE  0E00               	movlw	0
  7438  003400  0012               	return	
  7439  003402                     l11721:
  7440                           
  7441                           ;fat16.c: 894: return 0x00;
  7442  003402  0E00               	movlw	0
  7443  003404  0012               	return	
  7444  003406                     l11725:
  7445                           
  7446                           ;fat16.c: 896: return 0x04;
  7447  003406  0E04               	movlw	4
  7448  003408  0012               	return	
  7449  00340A                     l11729:
  7450                           
  7451                           ;fat16.c: 898: return 0x77;
  7452  00340A  0E77               	movlw	119
  7453  00340C  0012               	return	
  7454  00340E                     l11733:
  7455                           
  7456                           ;fat16.c: 900: return 0xDE;
  7457  00340E  0EDE               	movlw	222
  7458  003410  0012               	return	
  7459  003412                     l11737:
  7460                           
  7461                           ;fat16.c: 902: return 0x38;
  7462  003412  0E38               	movlw	56
  7463  003414  0012               	return	
  7464  003416                     l11741:
  7465                           
  7466                           ;fat16.c: 904: return ((unsigned char)((((uint16_t)2))&0xFF));
  7467  003416  0E02               	movlw	2
  7468  003418  0012               	return	
  7469  00341A                     l11745:
  7470                           
  7471                           ;fat16.c: 906: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  7472  00341A  0E00               	movlw	0
  7473  00341C  0012               	return	
  7474  00341E                     l11749:
  7475                           
  7476                           ;fat16.c: 908: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  7477  00341E  0E0C               	movlw	12
  7478  003420  0012               	return	
  7479  003422                     l11753:
  7480                           
  7481                           ;fat16.c: 911: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  7482  003422  0E00               	movlw	0
  7483  003424  0012               	return	
  7484  003426                     l11757:
  7485                           
  7486                           ;fat16.c: 914: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  7487  003426  0E00               	movlw	0
  7488  003428  0012               	return	
  7489  00342A                     l11761:
  7490                           
  7491                           ;fat16.c: 917: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  7492  00342A  0E00               	movlw	0
  7493  00342C  0012               	return	
  7494  00342E                     l11765:
  7495                           
  7496                           ;fat16.c: 920: return 0x00;
  7497  00342E  0E00               	movlw	0
  7498  003430  0012               	return	
  7499  003432                     l11771:
  7500  003432  C001  F003         	movff	__get_root@idx,??__get_root
  7501  003436  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  7502                           
  7503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7504                           ; Switch size 1, requested type "space"
  7505                           ; Number of cases is 1, Range of values is 0 to 0
  7506                           ; switch strategies available:
  7507                           ; Name         Instructions Cycles
  7508                           ; simple_byte            4     3 (average)
  7509                           ;	Chosen strategy is simple_byte
  7510  00343A  5004               	movf	??__get_root+1,w,c
  7511  00343C  0A00               	xorlw	0	; case 0
  7512  00343E  A4D8               	btfss	status,2,c
  7513  003440  D7F6               	goto	l11765
  7514                           
  7515                           ; Switch size 1, requested type "space"
  7516                           ; Number of cases is 20, Range of values is 11 to 31
  7517                           ; switch strategies available:
  7518                           ; Name         Instructions Cycles
  7519                           ; simple_byte           61    31 (average)
  7520                           ;	Chosen strategy is simple_byte
  7521  003442  5003               	movf	??__get_root,w,c
  7522  003444  0A0B               	xorlw	11	; case 11
  7523  003446  B4D8               	btfsc	status,2,c
  7524  003448  D7CA               	goto	l11685
  7525  00344A  0A06               	xorlw	6	; case 13
  7526  00344C  B4D8               	btfsc	status,2,c
  7527  00344E  D7C9               	goto	l11689
  7528  003450  0A03               	xorlw	3	; case 14
  7529  003452  B4D8               	btfsc	status,2,c
  7530  003454  D7C8               	goto	l11693
  7531  003456  0A01               	xorlw	1	; case 15
  7532  003458  B4D8               	btfsc	status,2,c
  7533  00345A  D7C7               	goto	l11697
  7534  00345C  0A1F               	xorlw	31	; case 16
  7535  00345E  B4D8               	btfsc	status,2,c
  7536  003460  D7C6               	goto	l11701
  7537  003462  0A01               	xorlw	1	; case 17
  7538  003464  B4D8               	btfsc	status,2,c
  7539  003466  D7C5               	goto	l11705
  7540  003468  0A03               	xorlw	3	; case 18
  7541  00346A  B4D8               	btfsc	status,2,c
  7542  00346C  D7C4               	goto	l11709
  7543  00346E  0A01               	xorlw	1	; case 19
  7544  003470  B4D8               	btfsc	status,2,c
  7545  003472  D7C3               	goto	l11713
  7546  003474  0A07               	xorlw	7	; case 20
  7547  003476  B4D8               	btfsc	status,2,c
  7548  003478  D7C2               	goto	l11717
  7549  00347A  0A01               	xorlw	1	; case 21
  7550  00347C  B4D8               	btfsc	status,2,c
  7551  00347E  D7C1               	goto	l11721
  7552  003480  0A03               	xorlw	3	; case 22
  7553  003482  B4D8               	btfsc	status,2,c
  7554  003484  D7C0               	goto	l11725
  7555  003486  0A01               	xorlw	1	; case 23
  7556  003488  B4D8               	btfsc	status,2,c
  7557  00348A  D7BF               	goto	l11729
  7558  00348C  0A0F               	xorlw	15	; case 24
  7559  00348E  B4D8               	btfsc	status,2,c
  7560  003490  D7BE               	goto	l11733
  7561  003492  0A01               	xorlw	1	; case 25
  7562  003494  B4D8               	btfsc	status,2,c
  7563  003496  D7BD               	goto	l11737
  7564  003498  0A03               	xorlw	3	; case 26
  7565  00349A  B4D8               	btfsc	status,2,c
  7566  00349C  D7BC               	goto	l11741
  7567  00349E  0A01               	xorlw	1	; case 27
  7568  0034A0  B4D8               	btfsc	status,2,c
  7569  0034A2  D7BB               	goto	l11745
  7570  0034A4  0A07               	xorlw	7	; case 28
  7571  0034A6  B4D8               	btfsc	status,2,c
  7572  0034A8  D7BA               	goto	l11749
  7573  0034AA  0A01               	xorlw	1	; case 29
  7574  0034AC  B4D8               	btfsc	status,2,c
  7575  0034AE  D7B9               	goto	l11753
  7576  0034B0  0A03               	xorlw	3	; case 30
  7577  0034B2  B4D8               	btfsc	status,2,c
  7578  0034B4  D7B8               	goto	l11757
  7579  0034B6  0A01               	xorlw	1	; case 31
  7580  0034B8  B4D8               	btfsc	status,2,c
  7581  0034BA  D7B7               	goto	l11761
  7582  0034BC  D7B8               	goto	l11765
  7583  0034BE                     l11773:
  7584                           
  7585                           ;fat16.c: 922: }
  7586                           ;fat16.c: 923: return 0X00;
  7587  0034BE  0E00               	movlw	0
  7588  0034C0  0012               	return	
  7589  0034C2                     __end_of__get_root:
  7590                           	opt stack 0
  7591                           tblptru	equ	0xFF8
  7592                           tblptrh	equ	0xFF7
  7593                           tblptrl	equ	0xFF6
  7594                           tablat	equ	0xFF5
  7595                           prodh	equ	0xFF4
  7596                           prodl	equ	0xFF3
  7597                           intcon	equ	0xFF2
  7598                           intcon3	equ	0xFF0
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           postdec1	equ	0xFE5
  7602                           plusw1	equ	0xFE3
  7603                           fsr1h	equ	0xFE2
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           plusw2	equ	0xFDB
  7609                           fsr2h	equ	0xFDA
  7610                           fsr2l	equ	0xFD9
  7611                           status	equ	0xFD8
  7612                           
  7613 ;; *************** function __get_mbr *****************
  7614 ;; Defined at:
  7615 ;;		line 637 in file "fat16.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  idx             2    0[COMRAM] unsigned int 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      unsigned char 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;Total ram usage:        4 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_fat_get_format_status
  7639 ;;		_fat_format
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text28
  7644  0050C4                     __ptext28:
  7645                           	opt stack 0
  7646  0050C4                     __get_mbr:
  7647                           	opt stack 27
  7648                           
  7649                           ;fat16.c: 639: switch (idx)
  7650                           
  7651                           ;incstack = 0
  7652  0050C4  D026               	goto	l11403
  7653  0050C6                     l11325:
  7654                           
  7655                           ;fat16.c: 650: return 0x80;
  7656  0050C6  0E80               	movlw	128
  7657  0050C8  0012               	return	
  7658  0050CA                     l11329:
  7659                           
  7660                           ;fat16.c: 652: return ((1%63)+1);
  7661  0050CA  0E02               	movlw	2
  7662  0050CC  0012               	return	
  7663  0050CE                     l11333:
  7664                           
  7665                           ;fat16.c: 655: return (((1/(16*63)) & 0b00000011)<<6) | (((1/63)%16) & 0b00111111);
  7666  0050CE  0E00               	movlw	0
  7667  0050D0  0012               	return	
  7668  0050D2                     l11337:
  7669                           
  7670                           ;fat16.c: 658: return (1/(16*63)) >> 2;
  7671  0050D2  0E00               	movlw	0
  7672  0050D4  0012               	return	
  7673  0050D6                     l11341:
  7674                           
  7675                           ;fat16.c: 661: return 0x04;
  7676  0050D6  0E04               	movlw	4
  7677  0050D8  0012               	return	
  7678  0050DA                     l11345:
  7679                           
  7680                           ;fat16.c: 664: return (((1+5000-1)%63)+1);
  7681  0050DA  0E18               	movlw	24
  7682  0050DC  0012               	return	
  7683  0050DE                     l11349:
  7684                           
  7685                           ;fat16.c: 667: return ((((1+5000-1)/(16*63)) & 0b00000011) << 6) | ((((1+5000-1)/63)%16)
      +                           & 0b00111111);
  7686  0050DE  0E0F               	movlw	15
  7687  0050E0  0012               	return	
  7688  0050E2                     l11353:
  7689                           
  7690                           ;fat16.c: 670: return ((1+5000-1)/(16*63)) >> 2;
  7691  0050E2  0E01               	movlw	1
  7692  0050E4  0012               	return	
  7693  0050E6                     l11357:
  7694                           
  7695                           ;fat16.c: 673: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  7696  0050E6  0E01               	movlw	1
  7697  0050E8  0012               	return	
  7698  0050EA                     l11361:
  7699                           
  7700                           ;fat16.c: 675: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  7701  0050EA  0E00               	movlw	0
  7702  0050EC  0012               	return	
  7703  0050EE                     l11365:
  7704                           
  7705                           ;fat16.c: 677: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  7706  0050EE  0E00               	movlw	0
  7707  0050F0  0012               	return	
  7708  0050F2                     l11369:
  7709                           
  7710                           ;fat16.c: 679: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  7711  0050F2  0E00               	movlw	0
  7712  0050F4  0012               	return	
  7713  0050F6                     l11373:
  7714                           
  7715                           ;fat16.c: 681: return ((unsigned char)((((unsigned short)((((uint32_t)5000))&0xFFFF)))&0
      +                          xFF));
  7716  0050F6  0E88               	movlw	136
  7717  0050F8  0012               	return	
  7718  0050FA                     l11377:
  7719                           
  7720                           ;fat16.c: 683: return ((unsigned char)(((((unsigned short)((((uint32_t)5000))&0xFFFF)))>
      +                          >8)&0xFF));
  7721  0050FA  0E13               	movlw	19
  7722  0050FC  0012               	return	
  7723  0050FE                     l11381:
  7724                           
  7725                           ;fat16.c: 685: return ((unsigned char)((((unsigned short)(((((uint32_t)5000))>>16)&0xFFF
      +                          F)))&0xFF));
  7726  0050FE  0E00               	movlw	0
  7727  005100  0012               	return	
  7728  005102                     l11385:
  7729                           
  7730                           ;fat16.c: 687: return ((unsigned char)(((((unsigned short)(((((uint32_t)5000))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  7731  005102  0E00               	movlw	0
  7732  005104  0012               	return	
  7733  005106                     l11389:
  7734                           
  7735                           ;fat16.c: 689: return 0X55AA >> 8;
  7736  005106  0E55               	movlw	85
  7737  005108  0012               	return	
  7738  00510A                     l11393:
  7739                           
  7740                           ;fat16.c: 691: return 0X55AA & 0XFF;
  7741  00510A  0EAA               	movlw	170
  7742  00510C  0012               	return	
  7743  00510E                     l11397:
  7744                           
  7745                           ;fat16.c: 693: return 0X00;
  7746  00510E  0E00               	movlw	0
  7747                           
  7748                           ;fat16.c: 694: }
  7749  005110  0012               	return	
  7750  005112                     l11403:
  7751  005112  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  7752  005116  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  7753                           
  7754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7755                           ; Switch size 1, requested type "space"
  7756                           ; Number of cases is 1, Range of values is 1 to 1
  7757                           ; switch strategies available:
  7758                           ; Name         Instructions Cycles
  7759                           ; simple_byte            4     3 (average)
  7760                           ;	Chosen strategy is simple_byte
  7761  00511A  5004               	movf	??__get_mbr+1,w,c
  7762  00511C  0A01               	xorlw	1	; case 1
  7763  00511E  A4D8               	btfss	status,2,c
  7764  005120  D7F6               	goto	l11397
  7765                           
  7766                           ; Switch size 1, requested type "space"
  7767                           ; Number of cases is 18, Range of values is 190 to 255
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte           55    28 (average)
  7771                           ;	Chosen strategy is simple_byte
  7772  005122  5003               	movf	??__get_mbr,w,c
  7773  005124  0ABE               	xorlw	190	; case 190
  7774  005126  B4D8               	btfsc	status,2,c
  7775  005128  D7CE               	goto	l11325
  7776  00512A  0A01               	xorlw	1	; case 191
  7777  00512C  B4D8               	btfsc	status,2,c
  7778  00512E  D7CD               	goto	l11329
  7779  005130  0A7F               	xorlw	127	; case 192
  7780  005132  B4D8               	btfsc	status,2,c
  7781  005134  D7CC               	goto	l11333
  7782  005136  0A01               	xorlw	1	; case 193
  7783  005138  B4D8               	btfsc	status,2,c
  7784  00513A  D7CB               	goto	l11337
  7785  00513C  0A03               	xorlw	3	; case 194
  7786  00513E  B4D8               	btfsc	status,2,c
  7787  005140  D7CA               	goto	l11341
  7788  005142  0A01               	xorlw	1	; case 195
  7789  005144  B4D8               	btfsc	status,2,c
  7790  005146  D7C9               	goto	l11345
  7791  005148  0A07               	xorlw	7	; case 196
  7792  00514A  B4D8               	btfsc	status,2,c
  7793  00514C  D7C8               	goto	l11349
  7794  00514E  0A01               	xorlw	1	; case 197
  7795  005150  B4D8               	btfsc	status,2,c
  7796  005152  D7C7               	goto	l11353
  7797  005154  0A03               	xorlw	3	; case 198
  7798  005156  B4D8               	btfsc	status,2,c
  7799  005158  D7C6               	goto	l11357
  7800  00515A  0A01               	xorlw	1	; case 199
  7801  00515C  B4D8               	btfsc	status,2,c
  7802  00515E  D7C5               	goto	l11361
  7803  005160  0A0F               	xorlw	15	; case 200
  7804  005162  B4D8               	btfsc	status,2,c
  7805  005164  D7C4               	goto	l11365
  7806  005166  0A01               	xorlw	1	; case 201
  7807  005168  B4D8               	btfsc	status,2,c
  7808  00516A  D7C3               	goto	l11369
  7809  00516C  0A03               	xorlw	3	; case 202
  7810  00516E  B4D8               	btfsc	status,2,c
  7811  005170  D7C2               	goto	l11373
  7812  005172  0A01               	xorlw	1	; case 203
  7813  005174  B4D8               	btfsc	status,2,c
  7814  005176  D7C1               	goto	l11377
  7815  005178  0A07               	xorlw	7	; case 204
  7816  00517A  B4D8               	btfsc	status,2,c
  7817  00517C  D7C0               	goto	l11381
  7818  00517E  0A01               	xorlw	1	; case 205
  7819  005180  B4D8               	btfsc	status,2,c
  7820  005182  D7BF               	goto	l11385
  7821  005184  0A33               	xorlw	51	; case 254
  7822  005186  B4D8               	btfsc	status,2,c
  7823  005188  D7BE               	goto	l11389
  7824  00518A  0A01               	xorlw	1	; case 255
  7825  00518C  B4D8               	btfsc	status,2,c
  7826  00518E  D7BD               	goto	l11393
  7827  005190  D7BE               	goto	l11397
  7828  005192                     __end_of__get_mbr:
  7829                           	opt stack 0
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           prodh	equ	0xFF4
  7835                           prodl	equ	0xFF3
  7836                           intcon	equ	0xFF2
  7837                           intcon3	equ	0xFF0
  7838                           postinc0	equ	0xFEE
  7839                           wreg	equ	0xFE8
  7840                           postdec1	equ	0xFE5
  7841                           plusw1	equ	0xFE3
  7842                           fsr1h	equ	0xFE2
  7843                           fsr1l	equ	0xFE1
  7844                           indf2	equ	0xFDF
  7845                           postinc2	equ	0xFDE
  7846                           postdec2	equ	0xFDD
  7847                           plusw2	equ	0xFDB
  7848                           fsr2h	equ	0xFDA
  7849                           fsr2l	equ	0xFD9
  7850                           status	equ	0xFD8
  7851                           
  7852 ;; *************** function __get_fbr *****************
  7853 ;; Defined at:
  7854 ;;		line 697 in file "fat16.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;  idx             2    0[COMRAM] unsigned int 
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;		None
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      unsigned char 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;Total ram usage:        4 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_fat_get_format_status
  7878 ;;		_fat_format
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text29
  7883  0024E8                     __ptext29:
  7884                           	opt stack 0
  7885  0024E8                     __get_fbr:
  7886                           	opt stack 27
  7887                           
  7888                           ;fat16.c: 699: switch (idx)
  7889                           
  7890                           ;incstack = 0
  7891  0024E8  D093               	goto	l11609
  7892  0024EA                     l11411:
  7893                           
  7894                           ;fat16.c: 702: return 0xEB;
  7895  0024EA  0EEB               	movlw	235
  7896  0024EC  0012               	return	
  7897  0024EE                     l11415:
  7898                           
  7899                           ;fat16.c: 704: return 0x3C;
  7900  0024EE  0E3C               	movlw	60
  7901  0024F0  0012               	return	
  7902  0024F2                     l11419:
  7903                           
  7904                           ;fat16.c: 706: return 0x90;
  7905  0024F2  0E90               	movlw	144
  7906  0024F4  0012               	return	
  7907  0024F6                     l11423:
  7908                           
  7909                           ;fat16.c: 708: return "MSDOS5.0"[0];
  7910  0024F6  0EF1               	movlw	low STR_1
  7911  0024F8  6EF6               	movwf	tblptrl,c
  7912  0024FA                     	if	1	;There is more than 1 active tblptr byte
  7913  0024FA  0E8F               	movlw	high STR_1
  7914  0024FC  6EF7               	movwf	tblptrh,c
  7915  0024FE                     	endif
  7916  0024FE                     	if	1	;There are 3 active tblptr bytes
  7917  0024FE  0E00               	movlw	low (STR_1 shr (0+16))
  7918  002500  6EF8               	movwf	tblptru,c
  7919  002502                     	endif
  7920  002502  0008               	tblrd		*
  7921  002504  50F5               	movf	tablat,w,c
  7922  002506  0012               	return	
  7923  002508                     l11427:
  7924                           
  7925                           ;fat16.c: 710: return "MSDOS5.0"[1];
  7926  002508  0EF2               	movlw	low (STR_1+1)
  7927  00250A  6EF6               	movwf	tblptrl,c
  7928  00250C  0E8F               	movlw	high (STR_1+1)
  7929  00250E  6EF7               	movwf	tblptrh,c
  7930  002510                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7931  002510  6AF8               	clrf	tblptru,c
  7932  002512                     	endif
  7933  002512                     	if	0	;tblptru may be non-zero
  7934  002512                     	endif
  7935  002512  0008               	tblrd		*
  7936  002514  50F5               	movf	tablat,w,c
  7937  002516  0012               	return	
  7938  002518                     l11431:
  7939                           
  7940                           ;fat16.c: 712: return "MSDOS5.0"[2];
  7941  002518  0EF3               	movlw	low (STR_1+2)
  7942  00251A  6EF6               	movwf	tblptrl,c
  7943  00251C  0E8F               	movlw	high (STR_1+2)
  7944  00251E  6EF7               	movwf	tblptrh,c
  7945  002520                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7946  002520  6AF8               	clrf	tblptru,c
  7947  002522                     	endif
  7948  002522                     	if	0	;tblptru may be non-zero
  7949  002522                     	endif
  7950  002522  0008               	tblrd		*
  7951  002524  50F5               	movf	tablat,w,c
  7952  002526  0012               	return	
  7953  002528                     l11435:
  7954                           
  7955                           ;fat16.c: 714: return "MSDOS5.0"[3];
  7956  002528  0EF4               	movlw	low (STR_1+3)
  7957  00252A  6EF6               	movwf	tblptrl,c
  7958  00252C  0E8F               	movlw	high (STR_1+3)
  7959  00252E  6EF7               	movwf	tblptrh,c
  7960  002530                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7961  002530  6AF8               	clrf	tblptru,c
  7962  002532                     	endif
  7963  002532                     	if	0	;tblptru may be non-zero
  7964  002532                     	endif
  7965  002532  0008               	tblrd		*
  7966  002534  50F5               	movf	tablat,w,c
  7967  002536  0012               	return	
  7968  002538                     l11439:
  7969                           
  7970                           ;fat16.c: 716: return "MSDOS5.0"[4];
  7971  002538  0EF5               	movlw	low (STR_1+4)
  7972  00253A  6EF6               	movwf	tblptrl,c
  7973  00253C  0E8F               	movlw	high (STR_1+4)
  7974  00253E  6EF7               	movwf	tblptrh,c
  7975  002540                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7976  002540  6AF8               	clrf	tblptru,c
  7977  002542                     	endif
  7978  002542                     	if	0	;tblptru may be non-zero
  7979  002542                     	endif
  7980  002542  0008               	tblrd		*
  7981  002544  50F5               	movf	tablat,w,c
  7982  002546  0012               	return	
  7983  002548                     l11443:
  7984                           
  7985                           ;fat16.c: 718: return "MSDOS5.0"[5];
  7986  002548  0EF6               	movlw	low (STR_1+5)
  7987  00254A  6EF6               	movwf	tblptrl,c
  7988  00254C  0E8F               	movlw	high (STR_1+5)
  7989  00254E  6EF7               	movwf	tblptrh,c
  7990  002550                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7991  002550  6AF8               	clrf	tblptru,c
  7992  002552                     	endif
  7993  002552                     	if	0	;tblptru may be non-zero
  7994  002552                     	endif
  7995  002552  0008               	tblrd		*
  7996  002554  50F5               	movf	tablat,w,c
  7997  002556  0012               	return	
  7998  002558                     l11447:
  7999                           
  8000                           ;fat16.c: 720: return "MSDOS5.0"[6];
  8001  002558  0EF7               	movlw	low (STR_1+6)
  8002  00255A  6EF6               	movwf	tblptrl,c
  8003  00255C  0E8F               	movlw	high (STR_1+6)
  8004  00255E  6EF7               	movwf	tblptrh,c
  8005  002560                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8006  002560  6AF8               	clrf	tblptru,c
  8007  002562                     	endif
  8008  002562                     	if	0	;tblptru may be non-zero
  8009  002562                     	endif
  8010  002562  0008               	tblrd		*
  8011  002564  50F5               	movf	tablat,w,c
  8012  002566  0012               	return	
  8013  002568                     l11451:
  8014                           
  8015                           ;fat16.c: 722: return "MSDOS5.0"[7];
  8016  002568  0EF8               	movlw	low (STR_1+7)
  8017  00256A  6EF6               	movwf	tblptrl,c
  8018  00256C  0E8F               	movlw	high (STR_1+7)
  8019  00256E  6EF7               	movwf	tblptrh,c
  8020  002570                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8021  002570  6AF8               	clrf	tblptru,c
  8022  002572                     	endif
  8023  002572                     	if	0	;tblptru may be non-zero
  8024  002572                     	endif
  8025  002572  0008               	tblrd		*
  8026  002574  50F5               	movf	tablat,w,c
  8027  002576  0012               	return	
  8028  002578                     l11455:
  8029                           
  8030                           ;fat16.c: 724: return ((unsigned char)((((uint16_t)512))&0xFF));
  8031  002578  0E00               	movlw	0
  8032  00257A  0012               	return	
  8033  00257C                     l11459:
  8034                           
  8035                           ;fat16.c: 726: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  8036  00257C  0E02               	movlw	2
  8037  00257E  0012               	return	
  8038  002580                     l11463:
  8039                           
  8040                           ;fat16.c: 728: return 1;
  8041  002580  0E01               	movlw	1
  8042  002582  0012               	return	
  8043  002584                     l11467:
  8044                           
  8045                           ;fat16.c: 730: return ((unsigned char)((((uint16_t)1))&0xFF));
  8046  002584  0E01               	movlw	1
  8047  002586  0012               	return	
  8048  002588                     l11471:
  8049                           
  8050                           ;fat16.c: 733: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  8051  002588  0E00               	movlw	0
  8052  00258A  0012               	return	
  8053  00258C                     l11475:
  8054                           
  8055                           ;fat16.c: 736: return 1;
  8056  00258C  0E01               	movlw	1
  8057  00258E  0012               	return	
  8058  002590                     l11479:
  8059                           
  8060                           ;fat16.c: 738: return ((unsigned char)((((uint16_t)64))&0xFF));
  8061  002590  0E40               	movlw	64
  8062  002592  0012               	return	
  8063  002594                     l11483:
  8064                           
  8065                           ;fat16.c: 741: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  8066  002594  0E00               	movlw	0
  8067  002596  0012               	return	
  8068  002598                     l11487:
  8069                           
  8070                           ;fat16.c: 744: return ((unsigned char)((((uint16_t)4114))&0xFF));
  8071  002598  0E12               	movlw	18
  8072  00259A  0012               	return	
  8073  00259C                     l11491:
  8074                           
  8075                           ;fat16.c: 747: return ((unsigned char)(((((uint16_t)4114))>>8)&0xFF));
  8076  00259C  0E10               	movlw	16
  8077  00259E  0012               	return	
  8078  0025A0                     l11495:
  8079                           
  8080                           ;fat16.c: 750: return 0XF8;
  8081  0025A0  0EF8               	movlw	248
  8082  0025A2  0012               	return	
  8083  0025A4                     l11499:
  8084                           
  8085                           ;fat16.c: 752: return ((unsigned char)((((uint16_t)16))&0xFF));
  8086  0025A4  0E10               	movlw	16
  8087  0025A6  0012               	return	
  8088  0025A8                     l11503:
  8089                           
  8090                           ;fat16.c: 755: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  8091  0025A8  0E00               	movlw	0
  8092  0025AA  0012               	return	
  8093  0025AC                     l11507:
  8094                           
  8095                           ;fat16.c: 758: return ((unsigned char)((((uint16_t)63))&0xFF));
  8096  0025AC  0E3F               	movlw	63
  8097  0025AE  0012               	return	
  8098  0025B0                     l11511:
  8099                           
  8100                           ;fat16.c: 761: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  8101  0025B0  0E00               	movlw	0
  8102  0025B2  0012               	return	
  8103  0025B4                     l11515:
  8104                           
  8105                           ;fat16.c: 764: return ((unsigned char)((((uint16_t)16))&0xFF));
  8106  0025B4  0E10               	movlw	16
  8107  0025B6  0012               	return	
  8108  0025B8                     l11519:
  8109                           
  8110                           ;fat16.c: 767: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  8111  0025B8  0E00               	movlw	0
  8112  0025BA  0012               	return	
  8113  0025BC                     l11523:
  8114                           
  8115                           ;fat16.c: 770: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  8116  0025BC  0E00               	movlw	0
  8117  0025BE  0012               	return	
  8118  0025C0                     l11527:
  8119                           
  8120                           ;fat16.c: 773: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  8121  0025C0  0E00               	movlw	0
  8122  0025C2  0012               	return	
  8123  0025C4                     l11531:
  8124                           
  8125                           ;fat16.c: 776: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  8126  0025C4  0E00               	movlw	0
  8127  0025C6  0012               	return	
  8128  0025C8                     l11535:
  8129                           
  8130                           ;fat16.c: 779: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  8131  0025C8  0E00               	movlw	0
  8132  0025CA  0012               	return	
  8133  0025CC                     l11539:
  8134                           
  8135                           ;fat16.c: 782: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  8136  0025CC  0E01               	movlw	1
  8137  0025CE  0012               	return	
  8138  0025D0                     l11543:
  8139                           
  8140                           ;fat16.c: 785: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  8141  0025D0  0E00               	movlw	0
  8142  0025D2  0012               	return	
  8143  0025D4                     l11547:
  8144                           
  8145                           ;fat16.c: 788: return ((unsigned char)((((unsigned short)((((uint32_t)((16*1)+1)))&0xFFF
      +                          F)))&0xFF));
  8146  0025D4  0E11               	movlw	17
  8147  0025D6  0012               	return	
  8148  0025D8                     l11551:
  8149                           
  8150                           ;fat16.c: 791: return ((unsigned char)(((((unsigned short)((((uint32_t)((16*1)+1)))&0xFF
      +                          FF)))>>8)&0xFF));
  8151  0025D8  0E00               	movlw	0
  8152  0025DA  0012               	return	
  8153  0025DC                     l11555:
  8154                           
  8155                           ;fat16.c: 794: return ((unsigned char)((((unsigned short)(((((uint32_t)((16*1)+1)))>>16)
      +                          &0xFFFF)))&0xFF));
  8156  0025DC  0E11               	movlw	17
  8157  0025DE  0012               	return	
  8158  0025E0                     l11559:
  8159                           
  8160                           ;fat16.c: 797: return ((unsigned char)(((((unsigned short)(((((uint32_t)((16*1)+1)))>>16
      +                          )&0xFFFF)))>>8)&0xFF));
  8161  0025E0  0E00               	movlw	0
  8162  0025E2  0012               	return	
  8163  0025E4                     l11563:
  8164                           
  8165                           ;fat16.c: 800: return 'F';
  8166  0025E4  0E46               	movlw	70
  8167  0025E6  0012               	return	
  8168  0025E8                     l11567:
  8169                           
  8170                           ;fat16.c: 802: return 'A';
  8171  0025E8  0E41               	movlw	65
  8172  0025EA  0012               	return	
  8173  0025EC                     l11571:
  8174                           
  8175                           ;fat16.c: 804: return 'T';
  8176  0025EC  0E54               	movlw	84
  8177  0025EE  0012               	return	
  8178  0025F0                     l11575:
  8179                           
  8180                           ;fat16.c: 806: return '1';
  8181  0025F0  0E31               	movlw	49
  8182  0025F2  0012               	return	
  8183  0025F4                     l11579:
  8184                           
  8185                           ;fat16.c: 808: return '6';
  8186  0025F4  0E36               	movlw	54
  8187  0025F6  0012               	return	
  8188  0025F8                     l11583:
  8189                           
  8190                           ;fat16.c: 810: return ' ';
  8191  0025F8  0E20               	movlw	32
  8192  0025FA  0012               	return	
  8193  0025FC                     l11587:
  8194                           
  8195                           ;fat16.c: 812: return ' ';
  8196  0025FC  0E20               	movlw	32
  8197  0025FE  0012               	return	
  8198  002600                     l11591:
  8199                           
  8200                           ;fat16.c: 814: return ' ';
  8201  002600  0E20               	movlw	32
  8202  002602  0012               	return	
  8203  002604                     l11595:
  8204                           
  8205                           ;fat16.c: 816: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  8206  002604  0E55               	movlw	85
  8207  002606  0012               	return	
  8208  002608                     l11599:
  8209                           
  8210                           ;fat16.c: 819: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  8211  002608  0EAA               	movlw	170
  8212  00260A  0012               	return	
  8213  00260C                     l11603:
  8214                           
  8215                           ;fat16.c: 822: return 0X00;
  8216  00260C  0E00               	movlw	0
  8217                           
  8218                           ;fat16.c: 823: }
  8219  00260E  0012               	return	
  8220  002610                     l11609:
  8221  002610  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  8222  002614  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  8223                           
  8224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8225                           ; Switch size 1, requested type "space"
  8226                           ; Number of cases is 2, Range of values is 0 to 1
  8227                           ; switch strategies available:
  8228                           ; Name         Instructions Cycles
  8229                           ; simple_byte            7     4 (average)
  8230                           ;	Chosen strategy is simple_byte
  8231  002618  5004               	movf	??__get_fbr+1,w,c
  8232  00261A  0A00               	xorlw	0	; case 0
  8233  00261C  B4D8               	btfsc	status,2,c
  8234  00261E  D004               	goto	l15393
  8235  002620  0A01               	xorlw	1	; case 1
  8236  002622  B4D8               	btfsc	status,2,c
  8237  002624  D08D               	goto	l15395
  8238  002626  D7F2               	goto	l11603
  8239  002628                     l15393:
  8240                           
  8241                           ; Switch size 1, requested type "space"
  8242                           ; Number of cases is 46, Range of values is 0 to 61
  8243                           ; switch strategies available:
  8244                           ; Name         Instructions Cycles
  8245                           ; simple_byte          139    70 (average)
  8246                           ;	Chosen strategy is simple_byte
  8247  002628  5003               	movf	??__get_fbr,w,c
  8248  00262A  0A00               	xorlw	0	; case 0
  8249  00262C  B4D8               	btfsc	status,2,c
  8250  00262E  D75D               	goto	l11411
  8251  002630  0A01               	xorlw	1	; case 1
  8252  002632  B4D8               	btfsc	status,2,c
  8253  002634  D75C               	goto	l11415
  8254  002636  0A03               	xorlw	3	; case 2
  8255  002638  B4D8               	btfsc	status,2,c
  8256  00263A  D75B               	goto	l11419
  8257  00263C  0A01               	xorlw	1	; case 3
  8258  00263E  B4D8               	btfsc	status,2,c
  8259  002640  D75A               	goto	l11423
  8260  002642  0A07               	xorlw	7	; case 4
  8261  002644  B4D8               	btfsc	status,2,c
  8262  002646  D760               	goto	l11427
  8263  002648  0A01               	xorlw	1	; case 5
  8264  00264A  B4D8               	btfsc	status,2,c
  8265  00264C  D765               	goto	l11431
  8266  00264E  0A03               	xorlw	3	; case 6
  8267  002650  B4D8               	btfsc	status,2,c
  8268  002652  D76A               	goto	l11435
  8269  002654  0A01               	xorlw	1	; case 7
  8270  002656  B4D8               	btfsc	status,2,c
  8271  002658  D76F               	goto	l11439
  8272  00265A  0A0F               	xorlw	15	; case 8
  8273  00265C  B4D8               	btfsc	status,2,c
  8274  00265E  D774               	goto	l11443
  8275  002660  0A01               	xorlw	1	; case 9
  8276  002662  B4D8               	btfsc	status,2,c
  8277  002664  D779               	goto	l11447
  8278  002666  0A03               	xorlw	3	; case 10
  8279  002668  B4D8               	btfsc	status,2,c
  8280  00266A  D77E               	goto	l11451
  8281  00266C  0A01               	xorlw	1	; case 11
  8282  00266E  B4D8               	btfsc	status,2,c
  8283  002670  D783               	goto	l11455
  8284  002672  0A07               	xorlw	7	; case 12
  8285  002674  B4D8               	btfsc	status,2,c
  8286  002676  D782               	goto	l11459
  8287  002678  0A01               	xorlw	1	; case 13
  8288  00267A  B4D8               	btfsc	status,2,c
  8289  00267C  D781               	goto	l11463
  8290  00267E  0A03               	xorlw	3	; case 14
  8291  002680  B4D8               	btfsc	status,2,c
  8292  002682  D780               	goto	l11467
  8293  002684  0A01               	xorlw	1	; case 15
  8294  002686  B4D8               	btfsc	status,2,c
  8295  002688  D77F               	goto	l11471
  8296  00268A  0A1F               	xorlw	31	; case 16
  8297  00268C  B4D8               	btfsc	status,2,c
  8298  00268E  D77E               	goto	l11475
  8299  002690  0A01               	xorlw	1	; case 17
  8300  002692  B4D8               	btfsc	status,2,c
  8301  002694  D77D               	goto	l11479
  8302  002696  0A03               	xorlw	3	; case 18
  8303  002698  B4D8               	btfsc	status,2,c
  8304  00269A  D77C               	goto	l11483
  8305  00269C  0A01               	xorlw	1	; case 19
  8306  00269E  B4D8               	btfsc	status,2,c
  8307  0026A0  D77B               	goto	l11487
  8308  0026A2  0A07               	xorlw	7	; case 20
  8309  0026A4  B4D8               	btfsc	status,2,c
  8310  0026A6  D77A               	goto	l11491
  8311  0026A8  0A01               	xorlw	1	; case 21
  8312  0026AA  B4D8               	btfsc	status,2,c
  8313  0026AC  D779               	goto	l11495
  8314  0026AE  0A03               	xorlw	3	; case 22
  8315  0026B0  B4D8               	btfsc	status,2,c
  8316  0026B2  D778               	goto	l11499
  8317  0026B4  0A01               	xorlw	1	; case 23
  8318  0026B6  B4D8               	btfsc	status,2,c
  8319  0026B8  D777               	goto	l11503
  8320  0026BA  0A0F               	xorlw	15	; case 24
  8321  0026BC  B4D8               	btfsc	status,2,c
  8322  0026BE  D776               	goto	l11507
  8323  0026C0  0A01               	xorlw	1	; case 25
  8324  0026C2  B4D8               	btfsc	status,2,c
  8325  0026C4  D775               	goto	l11511
  8326  0026C6  0A03               	xorlw	3	; case 26
  8327  0026C8  B4D8               	btfsc	status,2,c
  8328  0026CA  D774               	goto	l11515
  8329  0026CC  0A01               	xorlw	1	; case 27
  8330  0026CE  B4D8               	btfsc	status,2,c
  8331  0026D0  D773               	goto	l11519
  8332  0026D2  0A07               	xorlw	7	; case 28
  8333  0026D4  B4D8               	btfsc	status,2,c
  8334  0026D6  D772               	goto	l11523
  8335  0026D8  0A01               	xorlw	1	; case 29
  8336  0026DA  B4D8               	btfsc	status,2,c
  8337  0026DC  D771               	goto	l11527
  8338  0026DE  0A03               	xorlw	3	; case 30
  8339  0026E0  B4D8               	btfsc	status,2,c
  8340  0026E2  D770               	goto	l11531
  8341  0026E4  0A01               	xorlw	1	; case 31
  8342  0026E6  B4D8               	btfsc	status,2,c
  8343  0026E8  D76F               	goto	l11535
  8344  0026EA  0A37               	xorlw	55	; case 40
  8345  0026EC  B4D8               	btfsc	status,2,c
  8346  0026EE  D76E               	goto	l11539
  8347  0026F0  0A01               	xorlw	1	; case 41
  8348  0026F2  B4D8               	btfsc	status,2,c
  8349  0026F4  D76D               	goto	l11543
  8350  0026F6  0A05               	xorlw	5	; case 44
  8351  0026F8  B4D8               	btfsc	status,2,c
  8352  0026FA  D76C               	goto	l11547
  8353  0026FC  0A01               	xorlw	1	; case 45
  8354  0026FE  B4D8               	btfsc	status,2,c
  8355  002700  D76B               	goto	l11551
  8356  002702  0A03               	xorlw	3	; case 46
  8357  002704  B4D8               	btfsc	status,2,c
  8358  002706  D76A               	goto	l11555
  8359  002708  0A01               	xorlw	1	; case 47
  8360  00270A  B4D8               	btfsc	status,2,c
  8361  00270C  D769               	goto	l11559
  8362  00270E  0A19               	xorlw	25	; case 54
  8363  002710  B4D8               	btfsc	status,2,c
  8364  002712  D768               	goto	l11563
  8365  002714  0A01               	xorlw	1	; case 55
  8366  002716  B4D8               	btfsc	status,2,c
  8367  002718  D767               	goto	l11567
  8368  00271A  0A0F               	xorlw	15	; case 56
  8369  00271C  B4D8               	btfsc	status,2,c
  8370  00271E  D766               	goto	l11571
  8371  002720  0A01               	xorlw	1	; case 57
  8372  002722  B4D8               	btfsc	status,2,c
  8373  002724  D765               	goto	l11575
  8374  002726  0A03               	xorlw	3	; case 58
  8375  002728  B4D8               	btfsc	status,2,c
  8376  00272A  D764               	goto	l11579
  8377  00272C  0A01               	xorlw	1	; case 59
  8378  00272E  B4D8               	btfsc	status,2,c
  8379  002730  D763               	goto	l11583
  8380  002732  0A07               	xorlw	7	; case 60
  8381  002734  B4D8               	btfsc	status,2,c
  8382  002736  D762               	goto	l11587
  8383  002738  0A01               	xorlw	1	; case 61
  8384  00273A  B4D8               	btfsc	status,2,c
  8385  00273C  D761               	goto	l11591
  8386  00273E  D766               	goto	l11603
  8387  002740                     l15395:
  8388                           
  8389                           ; Switch size 1, requested type "space"
  8390                           ; Number of cases is 2, Range of values is 254 to 255
  8391                           ; switch strategies available:
  8392                           ; Name         Instructions Cycles
  8393                           ; simple_byte            7     4 (average)
  8394                           ;	Chosen strategy is simple_byte
  8395  002740  5003               	movf	??__get_fbr,w,c
  8396  002742  0AFE               	xorlw	254	; case 254
  8397  002744  B4D8               	btfsc	status,2,c
  8398  002746  D75E               	goto	l11595
  8399  002748  0A01               	xorlw	1	; case 255
  8400  00274A  B4D8               	btfsc	status,2,c
  8401  00274C  D75D               	goto	l11599
  8402  00274E  D75E               	goto	l11603
  8403  002750                     __end_of__get_fbr:
  8404                           	opt stack 0
  8405                           tblptru	equ	0xFF8
  8406                           tblptrh	equ	0xFF7
  8407                           tblptrl	equ	0xFF6
  8408                           tablat	equ	0xFF5
  8409                           prodh	equ	0xFF4
  8410                           prodl	equ	0xFF3
  8411                           intcon	equ	0xFF2
  8412                           intcon3	equ	0xFF0
  8413                           postinc0	equ	0xFEE
  8414                           wreg	equ	0xFE8
  8415                           postdec1	equ	0xFE5
  8416                           plusw1	equ	0xFE3
  8417                           fsr1h	equ	0xFE2
  8418                           fsr1l	equ	0xFE1
  8419                           indf2	equ	0xFDF
  8420                           postinc2	equ	0xFDE
  8421                           postdec2	equ	0xFDD
  8422                           plusw2	equ	0xFDB
  8423                           fsr2h	equ	0xFDA
  8424                           fsr2l	equ	0xFD9
  8425                           status	equ	0xFD8
  8426                           
  8427 ;; *************** function __get_fat *****************
  8428 ;; Defined at:
  8429 ;;		line 826 in file "fat16.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  idx             2    0[COMRAM] unsigned int 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      unsigned char 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;Total ram usage:        4 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_fat_format
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text30
  8457  00697C                     __ptext30:
  8458                           	opt stack 0
  8459  00697C                     __get_fat:
  8460                           	opt stack 27
  8461                           
  8462                           ;fat16.c: 828: switch (idx)
  8463                           
  8464                           ;incstack = 0
  8465  00697C  D00E               	goto	l11651
  8466  00697E                     l11621:
  8467                           
  8468                           ;fat16.c: 832: return 0xF8;
  8469  00697E  0EF8               	movlw	248
  8470  006980  0012               	return	
  8471  006982                     l11625:
  8472                           
  8473                           ;fat16.c: 834: return 0xFF;
  8474  006982  0EFF               	movlw	255
  8475  006984  0012               	return	
  8476  006986                     l11629:
  8477                           
  8478                           ;fat16.c: 836: return 0xFF;
  8479  006986  0EFF               	movlw	255
  8480  006988  0012               	return	
  8481  00698A                     l11633:
  8482                           
  8483                           ;fat16.c: 838: return 0xFF;
  8484  00698A  0EFF               	movlw	255
  8485  00698C  0012               	return	
  8486  00698E                     l11637:
  8487                           
  8488                           ;fat16.c: 841: return 0xFF;
  8489  00698E  0EFF               	movlw	255
  8490  006990  0012               	return	
  8491  006992                     l11641:
  8492                           
  8493                           ;fat16.c: 843: return 0xFF;
  8494  006992  0EFF               	movlw	255
  8495  006994  0012               	return	
  8496  006996                     l11645:
  8497                           
  8498                           ;fat16.c: 845: return 0X00;
  8499  006996  0E00               	movlw	0
  8500                           
  8501                           ;fat16.c: 846: }
  8502  006998  0012               	return	
  8503  00699A                     l11651:
  8504  00699A  C001  F003         	movff	__get_fat@idx,??__get_fat
  8505  00699E  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  8506                           
  8507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8508                           ; Switch size 1, requested type "space"
  8509                           ; Number of cases is 1, Range of values is 0 to 0
  8510                           ; switch strategies available:
  8511                           ; Name         Instructions Cycles
  8512                           ; simple_byte            4     3 (average)
  8513                           ;	Chosen strategy is simple_byte
  8514  0069A2  5004               	movf	??__get_fat+1,w,c
  8515  0069A4  0A00               	xorlw	0	; case 0
  8516  0069A6  A4D8               	btfss	status,2,c
  8517  0069A8  D7F6               	goto	l11645
  8518                           
  8519                           ; Switch size 1, requested type "space"
  8520                           ; Number of cases is 6, Range of values is 0 to 5
  8521                           ; switch strategies available:
  8522                           ; Name         Instructions Cycles
  8523                           ; simple_byte           19    10 (average)
  8524                           ;	Chosen strategy is simple_byte
  8525  0069AA  5003               	movf	??__get_fat,w,c
  8526  0069AC  0A00               	xorlw	0	; case 0
  8527  0069AE  B4D8               	btfsc	status,2,c
  8528  0069B0  D7E6               	goto	l11621
  8529  0069B2  0A01               	xorlw	1	; case 1
  8530  0069B4  B4D8               	btfsc	status,2,c
  8531  0069B6  D7E5               	goto	l11625
  8532  0069B8  0A03               	xorlw	3	; case 2
  8533  0069BA  B4D8               	btfsc	status,2,c
  8534  0069BC  D7E4               	goto	l11629
  8535  0069BE  0A01               	xorlw	1	; case 3
  8536  0069C0  B4D8               	btfsc	status,2,c
  8537  0069C2  D7E3               	goto	l11633
  8538  0069C4  0A07               	xorlw	7	; case 4
  8539  0069C6  B4D8               	btfsc	status,2,c
  8540  0069C8  D7E2               	goto	l11637
  8541  0069CA  0A01               	xorlw	1	; case 5
  8542  0069CC  B4D8               	btfsc	status,2,c
  8543  0069CE  D7E1               	goto	l11641
  8544  0069D0  D7E2               	goto	l11645
  8545  0069D2                     __end_of__get_fat:
  8546                           	opt stack 0
  8547                           tblptru	equ	0xFF8
  8548                           tblptrh	equ	0xFF7
  8549                           tblptrl	equ	0xFF6
  8550                           tablat	equ	0xFF5
  8551                           prodh	equ	0xFF4
  8552                           prodl	equ	0xFF3
  8553                           intcon	equ	0xFF2
  8554                           intcon3	equ	0xFF0
  8555                           postinc0	equ	0xFEE
  8556                           wreg	equ	0xFE8
  8557                           postdec1	equ	0xFE5
  8558                           plusw1	equ	0xFE3
  8559                           fsr1h	equ	0xFE2
  8560                           fsr1l	equ	0xFE1
  8561                           indf2	equ	0xFDF
  8562                           postinc2	equ	0xFDE
  8563                           postdec2	equ	0xFDD
  8564                           plusw2	equ	0xFDB
  8565                           fsr2h	equ	0xFDA
  8566                           fsr2l	equ	0xFD9
  8567                           status	equ	0xFD8
  8568                           
  8569 ;; *************** function __get_data *****************
  8570 ;; Defined at:
  8571 ;;		line 926 in file "fat16.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  idx             2    0[COMRAM] unsigned int 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      unsigned char 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;Total ram usage:        2 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_fat_format
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text31
  8599  00748C                     __ptext31:
  8600                           	opt stack 0
  8601  00748C                     __get_data:
  8602                           	opt stack 27
  8603                           
  8604                           ;fat16.c: 928: if (idx < 12)
  8605                           
  8606                           ;incstack = 0
  8607  00748C  5002               	movf	__get_data@idx+1,w,c
  8608  00748E  E110               	bnz	l11787
  8609  007490  0E0C               	movlw	12
  8610  007492  5C01               	subwf	__get_data@idx,w,c
  8611  007494  B0D8               	btfsc	status,0,c
  8612  007496  D00C               	goto	l11787
  8613                           
  8614                           ;fat16.c: 929: {
  8615                           ;fat16.c: 930: return "Hello World!"[idx];
  8616  007498  0ECF               	movlw	low STR_12
  8617  00749A  2401               	addwf	__get_data@idx,w,c
  8618  00749C  6EF6               	movwf	tblptrl,c
  8619  00749E  0E8F               	movlw	high STR_12
  8620  0074A0  2002               	addwfc	__get_data@idx+1,w,c
  8621  0074A2  6EF7               	movwf	tblptrh,c
  8622  0074A4                     	if	1	;There are 3 active tblptr bytes
  8623  0074A4  6AF8               	clrf	tblptru,c
  8624  0074A6  0E00               	movlw	low (__mediumconst shr (0+16))
  8625  0074A8  22F8               	addwfc	tblptru,f,c
  8626  0074AA                     	endif
  8627  0074AA  0008               	tblrd		*
  8628  0074AC  50F5               	movf	tablat,w,c
  8629  0074AE  0012               	return	
  8630  0074B0                     l11787:
  8631                           
  8632                           ;fat16.c: 931: }
  8633                           ;fat16.c: 932: return 0X00;
  8634  0074B0  0E00               	movlw	0
  8635  0074B2  0012               	return	
  8636  0074B4                     __end_of__get_data:
  8637                           	opt stack 0
  8638                           tblptru	equ	0xFF8
  8639                           tblptrh	equ	0xFF7
  8640                           tblptrl	equ	0xFF6
  8641                           tablat	equ	0xFF5
  8642                           prodh	equ	0xFF4
  8643                           prodl	equ	0xFF3
  8644                           intcon	equ	0xFF2
  8645                           intcon3	equ	0xFF0
  8646                           postinc0	equ	0xFEE
  8647                           wreg	equ	0xFE8
  8648                           postdec1	equ	0xFE5
  8649                           plusw1	equ	0xFE3
  8650                           fsr1h	equ	0xFE2
  8651                           fsr1l	equ	0xFE1
  8652                           indf2	equ	0xFDF
  8653                           postinc2	equ	0xFDE
  8654                           postdec2	equ	0xFDD
  8655                           plusw2	equ	0xFDB
  8656                           fsr2h	equ	0xFDA
  8657                           fsr2l	equ	0xFD9
  8658                           status	equ	0xFD8
  8659                           
  8660 ;; *************** function __system_timer0_init *****************
  8661 ;; Defined at:
  8662 ;;		line 147 in file "os.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;		None
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, status,2
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;Total ram usage:        0 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; This function calls:
  8683 ;;		Nothing
  8684 ;; This function is called by:
  8685 ;;		_system_init
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text32
  8690  007620                     __ptext32:
  8691                           	opt stack 0
  8692  007620                     __system_timer0_init:
  8693                           	opt stack 29
  8694                           
  8695                           ;os.c: 150: T0CONbits.T0CS = 0;
  8696                           
  8697                           ;incstack = 0
  8698  007620  9AD5               	bcf	4053,5,c	;volatile
  8699                           
  8700                           ;os.c: 152: T0CONbits.T08BIT = 0;
  8701  007622  9CD5               	bcf	4053,6,c	;volatile
  8702                           
  8703                           ;os.c: 154: T0CONbits.T0PS2 = 0;
  8704  007624  94D5               	bcf	4053,2,c	;volatile
  8705                           
  8706                           ;os.c: 155: T0CONbits.T0PS1 = 1;
  8707  007626  82D5               	bsf	4053,1,c	;volatile
  8708                           
  8709                           ;os.c: 156: T0CONbits.T0PS0 = 0;
  8710  007628  90D5               	bcf	4053,0,c	;volatile
  8711                           
  8712                           ;os.c: 158: T0CONbits.PSA = 0;
  8713  00762A  96D5               	bcf	4053,3,c	;volatile
  8714                           
  8715                           ;os.c: 160: TMR0H = 0xD1;
  8716  00762C  0ED1               	movlw	209
  8717  00762E  6ED7               	movwf	4055,c	;volatile
  8718                           
  8719                           ;os.c: 161: TMR0L = 0x20;
  8720  007630  0E20               	movlw	32
  8721  007632  6ED6               	movwf	4054,c	;volatile
  8722                           
  8723                           ;os.c: 163: T0CONbits.TMR0ON = 1;
  8724  007634  8ED5               	bsf	4053,7,c	;volatile
  8725                           
  8726                           ;os.c: 167: INTCONbits.TMR0IF = 0;
  8727  007636  94F2               	bcf	intcon,2,c	;volatile
  8728                           
  8729                           ;os.c: 172: os.timeSlot = 0;
  8730  007638  0E00               	movlw	0
  8731  00763A  0100               	movlb	0	; () banked
  8732  00763C  6FE4               	movwf	(_os+2)& (0+255),b	;volatile
  8733                           
  8734                           ; BSR set to: 0
  8735  00763E  0012               	return		;funcret
  8736  007640                     __end_of__system_timer0_init:
  8737                           	opt stack 0
  8738                           tblptru	equ	0xFF8
  8739                           tblptrh	equ	0xFF7
  8740                           tblptrl	equ	0xFF6
  8741                           tablat	equ	0xFF5
  8742                           prodh	equ	0xFF4
  8743                           prodl	equ	0xFF3
  8744                           intcon	equ	0xFF2
  8745                           intcon3	equ	0xFF0
  8746                           postinc0	equ	0xFEE
  8747                           wreg	equ	0xFE8
  8748                           postdec1	equ	0xFE5
  8749                           plusw1	equ	0xFE3
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           indf2	equ	0xFDF
  8753                           postinc2	equ	0xFDE
  8754                           postdec2	equ	0xFDD
  8755                           plusw2	equ	0xFDB
  8756                           fsr2h	equ	0xFDA
  8757                           fsr2l	equ	0xFD9
  8758                           status	equ	0xFD8
  8759                           
  8760 ;; *************** function __system_encoder_init *****************
  8761 ;; Defined at:
  8762 ;;		line 97 in file "os.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;		None
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;		None
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;Total ram usage:        0 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_system_init
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text33
  8790  006F44                     __ptext33:
  8791                           	opt stack 0
  8792  006F44                     __system_encoder_init:
  8793                           	opt stack 29
  8794                           
  8795                           ;os.c: 99: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;incstack = 0
  8799  006F44  0E55               	movlw	85
  8800  006F46  6EA7               	movwf	4007,c	;volatile
  8801  006F48  0EAA               	movlw	170
  8802  006F4A  6EA7               	movwf	4007,c	;volatile
  8803  006F4C  010E               	movlb	14	; () banked
  8804  006F4E  91BF               	bcf	191,0,b	;volatile
  8805                           
  8806                           ;os.c: 100: RPINR1 = 0;
  8807  006F50  0E00               	movlw	0
  8808  006F52  010E               	movlb	14	; () banked
  8809  006F54  6FE1               	movwf	225,b	;volatile
  8810                           
  8811                           ;os.c: 101: RPINR3 = 9;
  8812  006F56  0E09               	movlw	9
  8813  006F58  010E               	movlb	14	; () banked
  8814  006F5A  6FE3               	movwf	227,b	;volatile
  8815                           
  8816                           ;os.c: 102: RPINR2 = 10;
  8817  006F5C  0E0A               	movlw	10
  8818  006F5E  010E               	movlb	14	; () banked
  8819  006F60  6FE2               	movwf	226,b	;volatile
  8820                           
  8821                           ;os.c: 103: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  8822  006F62  0E55               	movlw	85
  8823  006F64  6EA7               	movwf	4007,c	;volatile
  8824  006F66  0EAA               	movlw	170
  8825  006F68  6EA7               	movwf	4007,c	;volatile
  8826                           
  8827                           ; BSR set to: 14
  8828  006F6A  010E               	movlb	14	; () banked
  8829  006F6C  91BF               	bcf	191,0,b	;volatile
  8830                           
  8831                           ; BSR set to: 14
  8832                           ;os.c: 111: INTCON2bits.INTEDG1 = 0;
  8833  006F6E  9AF1               	bcf	intcon2,5,c	;volatile
  8834                           
  8835                           ; BSR set to: 14
  8836                           ;os.c: 112: INTCON3bits.INT1IF = 0;
  8837  006F70  90F0               	bcf	intcon3,0,c	;volatile
  8838                           
  8839                           ; BSR set to: 14
  8840                           ;os.c: 114: INTCON2bits.INTEDG2 = 1;
  8841  006F72  88F1               	bsf	intcon2,4,c	;volatile
  8842                           
  8843                           ; BSR set to: 14
  8844                           ;os.c: 115: INTCON3bits.INT2IF = 0;
  8845  006F74  92F0               	bcf	intcon3,1,c	;volatile
  8846                           
  8847                           ; BSR set to: 14
  8848                           ;os.c: 117: INTCON2bits.INTEDG3 = 1;
  8849  006F76  86F1               	bsf	intcon2,3,c	;volatile
  8850                           
  8851                           ; BSR set to: 14
  8852                           ;os.c: 118: INTCON3bits.INT3IF = 0;
  8853  006F78  94F0               	bcf	intcon3,2,c	;volatile
  8854                           
  8855                           ;os.c: 120: os.encoderCount = 0;
  8856  006F7A  0E00               	movlw	0
  8857  006F7C  0100               	movlb	0	; () banked
  8858  006F7E  6FE2               	movwf	_os& (0+255),b	;volatile
  8859                           
  8860                           ;os.c: 121: os.buttonCount = 0;
  8861  006F80  0E00               	movlw	0
  8862  006F82  0100               	movlb	0	; () banked
  8863  006F84  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  8864                           
  8865                           ; BSR set to: 0
  8866  006F86  0012               	return		;funcret
  8867  006F88                     __end_of__system_encoder_init:
  8868                           	opt stack 0
  8869                           tblptru	equ	0xFF8
  8870                           tblptrh	equ	0xFF7
  8871                           tblptrl	equ	0xFF6
  8872                           tablat	equ	0xFF5
  8873                           prodh	equ	0xFF4
  8874                           prodl	equ	0xFF3
  8875                           intcon	equ	0xFF2
  8876                           intcon2	equ	0xFF1
  8877                           intcon3	equ	0xFF0
  8878                           postinc0	equ	0xFEE
  8879                           wreg	equ	0xFE8
  8880                           postdec1	equ	0xFE5
  8881                           plusw1	equ	0xFE3
  8882                           fsr1h	equ	0xFE2
  8883                           fsr1l	equ	0xFE1
  8884                           indf2	equ	0xFDF
  8885                           postinc2	equ	0xFDE
  8886                           postdec2	equ	0xFDD
  8887                           plusw2	equ	0xFDB
  8888                           fsr2h	equ	0xFDA
  8889                           fsr2l	equ	0xFD9
  8890                           status	equ	0xFD8
  8891                           
  8892 ;; *************** function _i2c_eeprom_tasks *****************
  8893 ;; Defined at:
  8894 ;;		line 756 in file "i2c.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;		None
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;Total ram usage:        0 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; Hardware stack levels required when called:    4
  8915 ;; This function calls:
  8916 ;;		__write_calibration
  8917 ;;		_get_next_eeprom_write_task
  8918 ;; This function is called by:
  8919 ;;		_main
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text34
  8924  006418                     __ptext34:
  8925                           	opt stack 0
  8926  006418                     _i2c_eeprom_tasks:
  8927                           	opt stack 26
  8928                           
  8929                           ;i2c.c: 758: switch(get_next_eeprom_write_task())
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;incstack = 0
  8933  006418  D01C               	goto	l14295
  8934  00641A                     l14279:
  8935                           
  8936                           ;i2c.c: 763: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
  8937  00641A  0E00               	movlw	0
  8938  00641C  EC44  F02E         	call	__write_calibration
  8939                           
  8940                           ;i2c.c: 764: break;
  8941  006420  0012               	return	
  8942  006422                     l14281:
  8943                           
  8944                           ;i2c.c: 766: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
  8945  006422  0E01               	movlw	1
  8946  006424  EC44  F02E         	call	__write_calibration
  8947                           
  8948                           ;i2c.c: 767: break;
  8949  006428  0012               	return	
  8950  00642A                     l14283:
  8951                           
  8952                           ;i2c.c: 769: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
  8953  00642A  0E02               	movlw	2
  8954  00642C  EC44  F02E         	call	__write_calibration
  8955                           
  8956                           ;i2c.c: 770: break;
  8957  006430  0012               	return	
  8958  006432                     l14285:
  8959                           
  8960                           ;i2c.c: 772: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
  8961  006432  0E03               	movlw	3
  8962  006434  EC44  F02E         	call	__write_calibration
  8963                           
  8964                           ;i2c.c: 773: break;
  8965  006438  0012               	return	
  8966  00643A                     l14287:
  8967                           
  8968                           ;i2c.c: 775: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  8969  00643A  0E04               	movlw	4
  8970  00643C  EC44  F02E         	call	__write_calibration
  8971                           
  8972                           ;i2c.c: 776: break;
  8973  006440  0012               	return	
  8974  006442                     l14289:
  8975                           
  8976                           ;i2c.c: 778: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  8977  006442  0E05               	movlw	5
  8978  006444  EC44  F02E         	call	__write_calibration
  8979                           
  8980                           ;i2c.c: 779: break;
  8981  006448  0012               	return	
  8982  00644A                     l14291:
  8983                           
  8984                           ;i2c.c: 781: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  8985  00644A  0E06               	movlw	6
  8986  00644C  EC44  F02E         	call	__write_calibration
  8987                           
  8988                           ;i2c.c: 783: }
  8989                           
  8990                           ;i2c.c: 782: break;
  8991  006450  0012               	return	
  8992  006452                     l14295:
  8993  006452  ECF9  F038         	call	_get_next_eeprom_write_task	;wreg free
  8994                           
  8995                           ; Switch size 1, requested type "space"
  8996                           ; Number of cases is 8, Range of values is 1 to 8
  8997                           ; switch strategies available:
  8998                           ; Name         Instructions Cycles
  8999                           ; simple_byte           25    13 (average)
  9000                           ;	Chosen strategy is simple_byte
  9001  006456  0A01               	xorlw	1	; case 1
  9002  006458  B4D8               	btfsc	status,2,c
  9003  00645A  0012               	return	
  9004  00645C  0A03               	xorlw	3	; case 2
  9005  00645E  B4D8               	btfsc	status,2,c
  9006  006460  D7DC               	goto	l14279
  9007  006462  0A01               	xorlw	1	; case 3
  9008  006464  B4D8               	btfsc	status,2,c
  9009  006466  D7DD               	goto	l14281
  9010  006468  0A07               	xorlw	7	; case 4
  9011  00646A  B4D8               	btfsc	status,2,c
  9012  00646C  D7DE               	goto	l14283
  9013  00646E  0A01               	xorlw	1	; case 5
  9014  006470  B4D8               	btfsc	status,2,c
  9015  006472  D7DF               	goto	l14285
  9016  006474  0A03               	xorlw	3	; case 6
  9017  006476  B4D8               	btfsc	status,2,c
  9018  006478  D7E0               	goto	l14287
  9019  00647A  0A01               	xorlw	1	; case 7
  9020  00647C  B4D8               	btfsc	status,2,c
  9021  00647E  D7E1               	goto	l14289
  9022  006480  0A0F               	xorlw	15	; case 8
  9023  006482  A4D8               	btfss	status,2,c
  9024  006484  0012               	return	
  9025  006486  D7E1               	goto	l14291
  9026  006488                     __end_of_i2c_eeprom_tasks:
  9027                           	opt stack 0
  9028                           tblptru	equ	0xFF8
  9029                           tblptrh	equ	0xFF7
  9030                           tblptrl	equ	0xFF6
  9031                           tablat	equ	0xFF5
  9032                           prodh	equ	0xFF4
  9033                           prodl	equ	0xFF3
  9034                           intcon	equ	0xFF2
  9035                           intcon2	equ	0xFF1
  9036                           intcon3	equ	0xFF0
  9037                           postinc0	equ	0xFEE
  9038                           wreg	equ	0xFE8
  9039                           postdec1	equ	0xFE5
  9040                           plusw1	equ	0xFE3
  9041                           fsr1h	equ	0xFE2
  9042                           fsr1l	equ	0xFE1
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           plusw2	equ	0xFDB
  9047                           fsr2h	equ	0xFDA
  9048                           fsr2l	equ	0xFD9
  9049                           status	equ	0xFD8
  9050                           
  9051 ;; *************** function _get_next_eeprom_write_task *****************
  9052 ;; Defined at:
  9053 ;;		line 736 in file "i2c.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;		None
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  task            1    0[COMRAM] enum E8218
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      enum E8218
  9060 ;; Registers used:
  9061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;Total ram usage:        1 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_i2c_eeprom_tasks
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text35
  9081  0071F2                     __ptext35:
  9082                           	opt stack 0
  9083  0071F2                     _get_next_eeprom_write_task:
  9084                           	opt stack 29
  9085                           
  9086                           ;i2c.c: 738: eeprom_write_task_t task;
  9087                           ;i2c.c: 739: if (task_list_read_index == task_list_write_index)
  9088                           
  9089                           ;incstack = 0
  9090  0071F2  0101               	movlb	1	; () banked
  9091  0071F4  5184               	movf	_task_list_write_index& (0+255),w,b
  9092  0071F6  0101               	movlb	1	; () banked
  9093  0071F8  1985               	xorwf	_task_list_read_index& (0+255),w,b
  9094  0071FA  A4D8               	btfss	status,2,c
  9095  0071FC  D002               	goto	l13345
  9096                           
  9097                           ; BSR set to: 1
  9098                           ;i2c.c: 740: {
  9099                           ;i2c.c: 742: return EEPROM_WRITE_TASK_NONE;
  9100  0071FE  0E00               	movlw	0
  9101                           
  9102                           ; BSR set to: 1
  9103                           ;i2c.c: 743: }
  9104                           
  9105                           ; BSR set to: 1
  9106  007200  0012               	return	
  9107  007202                     l13345:
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;i2c.c: 744: else
  9111                           ;i2c.c: 745: {
  9112                           ;i2c.c: 747: task = task_list[task_list_read_index];
  9113  007202  0101               	movlb	1	; () banked
  9114  007204  5185               	movf	_task_list_read_index& (0+255),w,b
  9115  007206  0D01               	mullw	1
  9116  007208  0E00               	movlw	low _task_list
  9117  00720A  24F3               	addwf	prodl,w,c
  9118  00720C  6ED9               	movwf	fsr2l,c
  9119  00720E  0E02               	movlw	high _task_list
  9120  007210  20F4               	addwfc	prodh,w,c
  9121  007212  6EDA               	movwf	fsr2h,c
  9122  007214  50DF               	movf	indf2,w,c
  9123  007216  6E01               	movwf	get_next_eeprom_write_task@task,c
  9124                           
  9125                           ; BSR set to: 1
  9126                           ;i2c.c: 749: ++task_list_read_index;
  9127  007218  0101               	movlb	1	; () banked
  9128  00721A  2B85               	incf	_task_list_read_index& (0+255),f,b
  9129                           
  9130                           ; BSR set to: 1
  9131                           ;i2c.c: 750: task_list_read_index &= 0x0F;
  9132  00721C  0E0F               	movlw	15
  9133  00721E  0101               	movlb	1	; () banked
  9134  007220  1785               	andwf	_task_list_read_index& (0+255),f,b
  9135                           
  9136                           ; BSR set to: 1
  9137                           ;i2c.c: 752: return task;
  9138  007222  5001               	movf	get_next_eeprom_write_task@task,w,c
  9139                           
  9140                           ; BSR set to: 1
  9141  007224  0012               	return	
  9142  007226                     __end_of_get_next_eeprom_write_task:
  9143                           	opt stack 0
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           intcon	equ	0xFF2
  9151                           intcon2	equ	0xFF1
  9152                           intcon3	equ	0xFF0
  9153                           postinc0	equ	0xFEE
  9154                           wreg	equ	0xFE8
  9155                           postdec1	equ	0xFE5
  9156                           plusw1	equ	0xFE3
  9157                           fsr1h	equ	0xFE2
  9158                           fsr1l	equ	0xFE1
  9159                           indf2	equ	0xFDF
  9160                           postinc2	equ	0xFDE
  9161                           postdec2	equ	0xFDD
  9162                           plusw2	equ	0xFDB
  9163                           fsr2h	equ	0xFDA
  9164                           fsr2l	equ	0xFD9
  9165                           status	equ	0xFD8
  9166                           
  9167 ;; *************** function __write_calibration *****************
  9168 ;; Defined at:
  9169 ;;		line 692 in file "i2c.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  index           1    wreg     enum E8141
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  index           1   59[COMRAM] enum E8141
  9174 ;;  buffer         16   39[COMRAM] unsigned char [16]
  9175 ;;  ptr             2   57[COMRAM] PTR unsigned char 
  9176 ;;		 -> calibrationParameters(84), 
  9177 ;;  addr            2   55[COMRAM] unsigned int 
  9178 ;;  cntr            1   60[COMRAM] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;Total ram usage:       24 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; Hardware stack levels required when called:    3
  9195 ;; This function calls:
  9196 ;;		_i2c_eeprom_write
  9197 ;; This function is called by:
  9198 ;;		_i2c_eeprom_tasks
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text36
  9203  005C88                     __ptext36:
  9204                           	opt stack 0
  9205  005C88                     __write_calibration:
  9206                           	opt stack 26
  9207                           
  9208                           ; BSR set to: 1
  9209                           ;incstack = 0
  9210                           ;__write_calibration@index stored from wreg
  9211  005C88  6E3C               	movwf	__write_calibration@index,c
  9212                           
  9213                           ;i2c.c: 694: uint8_t buffer[16];
  9214                           ;i2c.c: 695: uint8_t *ptr;
  9215                           ;i2c.c: 696: uint8_t cntr;
  9216                           ;i2c.c: 697: uint16_t addr;
  9217                           ;i2c.c: 698: buffer[0] = 0x77;
  9218  005C8A  0E77               	movlw	119
  9219  005C8C  6E28               	movwf	__write_calibration@buffer,c
  9220                           
  9221                           ;i2c.c: 699: buffer[1] = 0x55;
  9222  005C8E  0E55               	movlw	85
  9223  005C90  6E29               	movwf	__write_calibration@buffer+1,c
  9224                           
  9225                           ;i2c.c: 700: buffer[2] = 0x33;
  9226  005C92  0E33               	movlw	51
  9227  005C94  6E2A               	movwf	__write_calibration@buffer+2,c
  9228                           
  9229                           ;i2c.c: 701: buffer[3] = (uint8_t) index;
  9230  005C96  C03C  F02B         	movff	__write_calibration@index,__write_calibration@buffer+3
  9231                           
  9232                           ;i2c.c: 702: ptr = (uint8_t*) &calibrationParameters[index];
  9233  005C9A  503C               	movf	__write_calibration@index,w,c
  9234  005C9C  0D0C               	mullw	12
  9235  005C9E  0E10               	movlw	low _calibrationParameters
  9236  005CA0  24F3               	addwf	prodl,w,c
  9237  005CA2  6E3A               	movwf	__write_calibration@ptr,c
  9238  005CA4  0E02               	movlw	high _calibrationParameters
  9239  005CA6  20F4               	addwfc	prodh,w,c
  9240  005CA8  6E3B               	movwf	__write_calibration@ptr+1,c
  9241                           
  9242                           ;i2c.c: 703: for(cntr=4; cntr<16; ++cntr)
  9243  005CAA  0E04               	movlw	4
  9244  005CAC  6E3D               	movwf	__write_calibration@cntr,c
  9245  005CAE                     l13321:
  9246  005CAE  0E0F               	movlw	15
  9247  005CB0  643D               	cpfsgt	__write_calibration@cntr,c
  9248  005CB2  D001               	goto	l13325
  9249  005CB4  D012               	goto	l13333
  9250  005CB6                     l13325:
  9251                           
  9252                           ;i2c.c: 704: {
  9253                           ;i2c.c: 705: buffer[cntr] = *ptr;
  9254  005CB6  C03A  FFD9         	movff	__write_calibration@ptr,fsr2l
  9255  005CBA  C03B  FFDA         	movff	__write_calibration@ptr+1,fsr2h
  9256  005CBE  503D               	movf	__write_calibration@cntr,w,c
  9257  005CC0  0D01               	mullw	1
  9258  005CC2  0E28               	movlw	low __write_calibration@buffer
  9259  005CC4  24F3               	addwf	prodl,w,c
  9260  005CC6  6EE1               	movwf	fsr1l,c
  9261  005CC8  0E00               	movlw	high __write_calibration@buffer
  9262  005CCA  20F4               	addwfc	prodh,w,c
  9263  005CCC  6EE2               	movwf	fsr1h,c
  9264  005CCE  CFDF FFE7          	movff	indf2,indf1
  9265                           
  9266                           ;i2c.c: 706: ++ptr;
  9267  005CD2  4A3A               	infsnz	__write_calibration@ptr,f,c
  9268  005CD4  2A3B               	incf	__write_calibration@ptr+1,f,c
  9269  005CD6  2A3D               	incf	__write_calibration@cntr,f,c
  9270  005CD8  D7EA               	goto	l13321
  9271  005CDA                     l13333:
  9272                           
  9273                           ;i2c.c: 707: }
  9274                           ;i2c.c: 708: addr = 0x0100 + (index<<4);
  9275  005CDA  503C               	movf	__write_calibration@index,w,c
  9276  005CDC  6E26               	movwf	??__write_calibration& (0+255),c
  9277  005CDE  6A27               	clrf	(??__write_calibration+1)& (0+255),c
  9278  005CE0  3A26               	swapf	??__write_calibration,f,c
  9279  005CE2  3A27               	swapf	??__write_calibration+1,f,c
  9280  005CE4  0EF0               	movlw	240
  9281  005CE6  1627               	andwf	??__write_calibration+1,f,c
  9282  005CE8  5026               	movf	??__write_calibration,w,c
  9283  005CEA  0B0F               	andlw	15
  9284  005CEC  1227               	iorwf	??__write_calibration+1,f,c
  9285  005CEE  0EF0               	movlw	240
  9286  005CF0  1626               	andwf	??__write_calibration,f,c
  9287  005CF2  0E00               	movlw	0
  9288  005CF4  2426               	addwf	??__write_calibration,w,c
  9289  005CF6  6E38               	movwf	__write_calibration@addr,c
  9290  005CF8  0E01               	movlw	1
  9291  005CFA  2027               	addwfc	??__write_calibration+1,w,c
  9292  005CFC  6E39               	movwf	__write_calibration@addr+1,c
  9293                           
  9294                           ;i2c.c: 709: i2c_eeprom_write(addr, &buffer[0], 16);
  9295  005CFE  C038  F00B         	movff	__write_calibration@addr,i2c_eeprom_write@address
  9296  005D02  C039  F00C         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
  9297  005D06  0E28               	movlw	low __write_calibration@buffer
  9298  005D08  6E0D               	movwf	i2c_eeprom_write@data,c
  9299  005D0A  0E00               	movlw	high __write_calibration@buffer
  9300  005D0C  6E0E               	movwf	i2c_eeprom_write@data+1,c
  9301  005D0E  0E10               	movlw	16
  9302  005D10  6E0F               	movwf	i2c_eeprom_write@length,c
  9303  005D12  ECA2  F030         	call	_i2c_eeprom_write	;wreg free
  9304  005D16  0012               	return		;funcret
  9305  005D18                     __end_of__write_calibration:
  9306                           	opt stack 0
  9307                           tblptru	equ	0xFF8
  9308                           tblptrh	equ	0xFF7
  9309                           tblptrl	equ	0xFF6
  9310                           tablat	equ	0xFF5
  9311                           prodh	equ	0xFF4
  9312                           prodl	equ	0xFF3
  9313                           intcon	equ	0xFF2
  9314                           intcon2	equ	0xFF1
  9315                           intcon3	equ	0xFF0
  9316                           postinc0	equ	0xFEE
  9317                           wreg	equ	0xFE8
  9318                           indf1	equ	0xFE7
  9319                           postdec1	equ	0xFE5
  9320                           plusw1	equ	0xFE3
  9321                           fsr1h	equ	0xFE2
  9322                           fsr1l	equ	0xFE1
  9323                           indf2	equ	0xFDF
  9324                           postinc2	equ	0xFDE
  9325                           postdec2	equ	0xFDD
  9326                           plusw2	equ	0xFDB
  9327                           fsr2h	equ	0xFDA
  9328                           fsr2l	equ	0xFD9
  9329                           status	equ	0xFD8
  9330                           
  9331 ;; *************** function _display_update *****************
  9332 ;; Defined at:
  9333 ;;		line 462 in file "display.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;		None
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;		None
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  1    wreg      void 
  9340 ;; Registers used:
  9341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9351 ;;Total ram usage:        0 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    4
  9354 ;; This function calls:
  9355 ;;		_i2c_display_cursor
  9356 ;;		_i2c_display_write_fixed
  9357 ;; This function is called by:
  9358 ;;		_main
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           	psect	text37
  9363  0064F8                     __ptext37:
  9364                           	opt stack 0
  9365  0064F8                     _display_update:
  9366                           	opt stack 26
  9367                           
  9368                           ;display.c: 464: i2c_display_cursor(0, 0);
  9369                           
  9370                           ;incstack = 0
  9371  0064F8  0E00               	movlw	0
  9372  0064FA  6E0E               	movwf	i2c_display_cursor@position,c
  9373  0064FC  0E00               	movlw	0
  9374  0064FE  ECBB  F03A         	call	_i2c_display_cursor
  9375                           
  9376                           ;display.c: 465: i2c_display_write_fixed(&display_content[0][0], 20);
  9377  006502  0E64               	movlw	low _display_content
  9378  006504  6E06               	movwf	i2c_display_write_fixed@data,c
  9379  006506  0E02               	movlw	high _display_content
  9380  006508  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9381  00650A  0E14               	movlw	20
  9382  00650C  6E08               	movwf	i2c_display_write_fixed@length,c
  9383  00650E  ECE9  F034         	call	_i2c_display_write_fixed	;wreg free
  9384                           
  9385                           ;display.c: 466: i2c_display_cursor(1, 0);
  9386  006512  0E00               	movlw	0
  9387  006514  6E0E               	movwf	i2c_display_cursor@position,c
  9388  006516  0E01               	movlw	1
  9389  006518  ECBB  F03A         	call	_i2c_display_cursor
  9390                           
  9391                           ;display.c: 467: i2c_display_write_fixed(&display_content[1][0], 20);
  9392  00651C  0E78               	movlw	low (_display_content+20)
  9393  00651E  6E06               	movwf	i2c_display_write_fixed@data,c
  9394  006520  0E02               	movlw	high (_display_content+20)
  9395  006522  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9396  006524  0E14               	movlw	20
  9397  006526  6E08               	movwf	i2c_display_write_fixed@length,c
  9398  006528  ECE9  F034         	call	_i2c_display_write_fixed	;wreg free
  9399                           
  9400                           ;display.c: 468: i2c_display_cursor(2, 0);
  9401  00652C  0E00               	movlw	0
  9402  00652E  6E0E               	movwf	i2c_display_cursor@position,c
  9403  006530  0E02               	movlw	2
  9404  006532  ECBB  F03A         	call	_i2c_display_cursor
  9405                           
  9406                           ;display.c: 469: i2c_display_write_fixed(&display_content[2][0], 20);
  9407  006536  0E8C               	movlw	low (_display_content+40)
  9408  006538  6E06               	movwf	i2c_display_write_fixed@data,c
  9409  00653A  0E02               	movlw	high (_display_content+40)
  9410  00653C  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9411  00653E  0E14               	movlw	20
  9412  006540  6E08               	movwf	i2c_display_write_fixed@length,c
  9413  006542  ECE9  F034         	call	_i2c_display_write_fixed	;wreg free
  9414                           
  9415                           ;display.c: 470: i2c_display_cursor(3, 0);
  9416  006546  0E00               	movlw	0
  9417  006548  6E0E               	movwf	i2c_display_cursor@position,c
  9418  00654A  0E03               	movlw	3
  9419  00654C  ECBB  F03A         	call	_i2c_display_cursor
  9420                           
  9421                           ;display.c: 471: i2c_display_write_fixed(&display_content[3][0], 20);
  9422  006550  0EA0               	movlw	low (_display_content+60)
  9423  006552  6E06               	movwf	i2c_display_write_fixed@data,c
  9424  006554  0E02               	movlw	high (_display_content+60)
  9425  006556  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9426  006558  0E14               	movlw	20
  9427  00655A  6E08               	movwf	i2c_display_write_fixed@length,c
  9428  00655C  ECE9  F034         	call	_i2c_display_write_fixed	;wreg free
  9429  006560  0012               	return		;funcret
  9430  006562                     __end_of_display_update:
  9431                           	opt stack 0
  9432                           tblptru	equ	0xFF8
  9433                           tblptrh	equ	0xFF7
  9434                           tblptrl	equ	0xFF6
  9435                           tablat	equ	0xFF5
  9436                           prodh	equ	0xFF4
  9437                           prodl	equ	0xFF3
  9438                           intcon	equ	0xFF2
  9439                           intcon2	equ	0xFF1
  9440                           intcon3	equ	0xFF0
  9441                           postinc0	equ	0xFEE
  9442                           wreg	equ	0xFE8
  9443                           indf1	equ	0xFE7
  9444                           postdec1	equ	0xFE5
  9445                           plusw1	equ	0xFE3
  9446                           fsr1h	equ	0xFE2
  9447                           fsr1l	equ	0xFE1
  9448                           indf2	equ	0xFDF
  9449                           postinc2	equ	0xFDE
  9450                           postdec2	equ	0xFDD
  9451                           plusw2	equ	0xFDB
  9452                           fsr2h	equ	0xFDA
  9453                           fsr2l	equ	0xFD9
  9454                           status	equ	0xFD8
  9455                           
  9456 ;; *************** function _i2c_display_write_fixed *****************
  9457 ;; Defined at:
  9458 ;;		line 341 in file "i2c.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  data            2    5[COMRAM] PTR unsigned char 
  9461 ;;		 -> display_content(80), 
  9462 ;;  length          1    7[COMRAM] unsigned char 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  pos             1    8[COMRAM] unsigned char 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9474 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9478 ;;Total ram usage:        4 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    1
  9481 ;; This function calls:
  9482 ;;		__i2c_send
  9483 ;;		__i2c_start
  9484 ;;		__i2c_stop
  9485 ;;		__i2c_wait_idle
  9486 ;;		_i2c_set_frequency
  9487 ;; This function is called by:
  9488 ;;		_display_update
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           	psect	text38
  9493  0069D2                     __ptext38:
  9494                           	opt stack 0
  9495  0069D2                     _i2c_display_write_fixed:
  9496                           	opt stack 28
  9497                           
  9498                           ;i2c.c: 343: uint8_t pos;
  9499                           ;i2c.c: 346: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9500                           
  9501                           ;incstack = 0
  9502  0069D2  0E00               	movlw	0
  9503  0069D4  EC06  F03A         	call	_i2c_set_frequency
  9504                           
  9505                           ;i2c.c: 348: _i2c_wait_idle();
  9506  0069D8  EC92  F034         	call	__i2c_wait_idle	;wreg free
  9507                           
  9508                           ;i2c.c: 349: _i2c_start();
  9509  0069DC  EC6C  F03C         	call	__i2c_start	;wreg free
  9510                           
  9511                           ;i2c.c: 350: _i2c_wait_idle();
  9512  0069E0  EC92  F034         	call	__i2c_wait_idle	;wreg free
  9513                           
  9514                           ;i2c.c: 351: _i2c_send(0b01111000);
  9515  0069E4  0E78               	movlw	120
  9516  0069E6  EC70  F03C         	call	__i2c_send
  9517                           
  9518                           ;i2c.c: 352: _i2c_wait_idle();
  9519  0069EA  EC92  F034         	call	__i2c_wait_idle	;wreg free
  9520                           
  9521                           ;i2c.c: 353: _i2c_send(0b01000000);
  9522  0069EE  0E40               	movlw	64
  9523  0069F0  EC70  F03C         	call	__i2c_send
  9524                           
  9525                           ;i2c.c: 354: _i2c_wait_idle();
  9526  0069F4  EC92  F034         	call	__i2c_wait_idle	;wreg free
  9527                           
  9528                           ;i2c.c: 357: for(pos=0; pos<length; ++pos)
  9529  0069F8  0E00               	movlw	0
  9530  0069FA  6E09               	movwf	i2c_display_write_fixed@pos,c
  9531  0069FC  D00E               	goto	l13309
  9532  0069FE                     l13303:
  9533                           
  9534                           ;i2c.c: 358: {
  9535                           ;i2c.c: 359: _i2c_send(data[pos]);
  9536  0069FE  5009               	movf	i2c_display_write_fixed@pos,w,c
  9537  006A00  0D01               	mullw	1
  9538  006A02  50F3               	movf	prodl,w,c
  9539  006A04  2406               	addwf	i2c_display_write_fixed@data,w,c
  9540  006A06  6ED9               	movwf	fsr2l,c
  9541  006A08  50F4               	movf	prodh,w,c
  9542  006A0A  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  9543  006A0C  6EDA               	movwf	fsr2h,c
  9544  006A0E  50DF               	movf	indf2,w,c
  9545  006A10  EC70  F03C         	call	__i2c_send
  9546                           
  9547                           ;i2c.c: 360: _i2c_wait_idle();
  9548  006A14  EC92  F034         	call	__i2c_wait_idle	;wreg free
  9549  006A18  2A09               	incf	i2c_display_write_fixed@pos,f,c
  9550  006A1A                     l13309:
  9551  006A1A  5008               	movf	i2c_display_write_fixed@length,w,c
  9552  006A1C  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  9553  006A1E  A0D8               	btfss	status,0,c
  9554  006A20  D7EE               	goto	l13303
  9555                           
  9556                           ;i2c.c: 361: }
  9557                           ;i2c.c: 363: _i2c_stop();
  9558  006A22  EC68  F03C         	call	__i2c_stop	;wreg free
  9559  006A26  0012               	return		;funcret
  9560  006A28                     __end_of_i2c_display_write_fixed:
  9561                           	opt stack 0
  9562                           tblptru	equ	0xFF8
  9563                           tblptrh	equ	0xFF7
  9564                           tblptrl	equ	0xFF6
  9565                           tablat	equ	0xFF5
  9566                           prodh	equ	0xFF4
  9567                           prodl	equ	0xFF3
  9568                           intcon	equ	0xFF2
  9569                           intcon2	equ	0xFF1
  9570                           intcon3	equ	0xFF0
  9571                           postinc0	equ	0xFEE
  9572                           wreg	equ	0xFE8
  9573                           indf1	equ	0xFE7
  9574                           postdec1	equ	0xFE5
  9575                           plusw1	equ	0xFE3
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           plusw2	equ	0xFDB
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8
  9585                           
  9586 ;; *************** function _i2c_display_cursor *****************
  9587 ;; Defined at:
  9588 ;;		line 301 in file "i2c.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  line            1    wreg     unsigned char 
  9591 ;;  position        1   13[COMRAM] unsigned char 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;  line            1   14[COMRAM] unsigned char 
  9594 ;;  address         1   15[COMRAM] unsigned char 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9604 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;Total ram usage:        3 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    3
  9611 ;; This function calls:
  9612 ;;		__ic2_display_set_address
  9613 ;;		_i2c_set_frequency
  9614 ;; This function is called by:
  9615 ;;		_display_update
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text39
  9620  007576                     __ptext39:
  9621                           	opt stack 0
  9622  007576                     _i2c_display_cursor:
  9623                           	opt stack 26
  9624                           
  9625                           ;incstack = 0
  9626                           ;i2c_display_cursor@line stored from wreg
  9627  007576  6E0F               	movwf	i2c_display_cursor@line,c
  9628                           
  9629                           ;i2c.c: 303: uint8_t address;
  9630                           ;i2c.c: 306: line &= 0b11;
  9631  007578  0E03               	movlw	3
  9632  00757A  160F               	andwf	i2c_display_cursor@line,f,c
  9633                           
  9634                           ;i2c.c: 307: address = line<<5;
  9635  00757C  380F               	swapf	i2c_display_cursor@line,w,c
  9636  00757E  46E8               	rlncf	wreg,f,c
  9637  007580  0BE0               	andlw	224
  9638  007582  6E10               	movwf	i2c_display_cursor@address,c
  9639                           
  9640                           ;i2c.c: 308: position &= 0b11111;
  9641  007584  0E1F               	movlw	31
  9642  007586  160E               	andwf	i2c_display_cursor@position,f,c
  9643                           
  9644                           ;i2c.c: 309: address |= position;
  9645  007588  500E               	movf	i2c_display_cursor@position,w,c
  9646  00758A  1210               	iorwf	i2c_display_cursor@address,f,c
  9647                           
  9648                           ;i2c.c: 312: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9649  00758C  0E00               	movlw	0
  9650  00758E  EC06  F03A         	call	_i2c_set_frequency
  9651                           
  9652                           ;i2c.c: 315: _ic2_display_set_address(address);
  9653  007592  5010               	movf	i2c_display_cursor@address,w,c
  9654  007594  EC95  F03A         	call	__ic2_display_set_address
  9655  007598  0012               	return		;funcret
  9656  00759A                     __end_of_i2c_display_cursor:
  9657                           	opt stack 0
  9658                           tblptru	equ	0xFF8
  9659                           tblptrh	equ	0xFF7
  9660                           tblptrl	equ	0xFF6
  9661                           tablat	equ	0xFF5
  9662                           prodh	equ	0xFF4
  9663                           prodl	equ	0xFF3
  9664                           intcon	equ	0xFF2
  9665                           intcon2	equ	0xFF1
  9666                           intcon3	equ	0xFF0
  9667                           postinc0	equ	0xFEE
  9668                           wreg	equ	0xFE8
  9669                           indf1	equ	0xFE7
  9670                           postdec1	equ	0xFE5
  9671                           plusw1	equ	0xFE3
  9672                           fsr1h	equ	0xFE2
  9673                           fsr1l	equ	0xFE1
  9674                           indf2	equ	0xFDF
  9675                           postinc2	equ	0xFDE
  9676                           postdec2	equ	0xFDD
  9677                           plusw2	equ	0xFDB
  9678                           fsr2h	equ	0xFDA
  9679                           fsr2l	equ	0xFD9
  9680                           status	equ	0xFD8
  9681                           
  9682 ;; *************** function __ic2_display_set_address *****************
  9683 ;; Defined at:
  9684 ;;		line 288 in file "i2c.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  address         1    wreg     unsigned char 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  address         1   10[COMRAM] unsigned char 
  9689 ;;  data_array      2   11[COMRAM] unsigned char [2]
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  1    wreg      void 
  9692 ;; Registers used:
  9693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9700 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;Total ram usage:        3 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; Hardware stack levels required when called:    2
  9706 ;; This function calls:
  9707 ;;		__i2c_write
  9708 ;;		_i2c_set_frequency
  9709 ;; This function is called by:
  9710 ;;		_i2c_display_cursor
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text40
  9715  00752A                     __ptext40:
  9716                           	opt stack 0
  9717  00752A                     __ic2_display_set_address:
  9718                           	opt stack 26
  9719                           
  9720                           ;incstack = 0
  9721                           ;__ic2_display_set_address@address stored from wreg
  9722  00752A  6E0B               	movwf	__ic2_display_set_address@address,c
  9723                           
  9724                           ;i2c.c: 290: uint8_t data_array[2];
  9725                           ;i2c.c: 291: data_array[0] = 0b00000000;
  9726  00752C  0E00               	movlw	0
  9727  00752E  6E0C               	movwf	__ic2_display_set_address@data_array,c
  9728                           
  9729                           ;i2c.c: 292: data_array[1] = 0b10000000 | address;
  9730  007530  500B               	movf	__ic2_display_set_address@address,w,c
  9731  007532  0980               	iorlw	128
  9732  007534  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  9733                           
  9734                           ;i2c.c: 295: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9735  007536  0E00               	movlw	0
  9736  007538  EC06  F03A         	call	_i2c_set_frequency
  9737                           
  9738                           ;i2c.c: 298: _i2c_write(0b01111000, &data_array[0], 2);
  9739  00753C  0E0C               	movlw	low __ic2_display_set_address@data_array
  9740  00753E  6E06               	movwf	__i2c_write@data,c
  9741  007540  0E00               	movlw	high __ic2_display_set_address@data_array
  9742  007542  6E07               	movwf	__i2c_write@data+1,c
  9743  007544  0E02               	movlw	2
  9744  007546  6E08               	movwf	__i2c_write@length,c
  9745  007548  0E78               	movlw	120
  9746  00754A  EC14  F037         	call	__i2c_write
  9747  00754E  0012               	return		;funcret
  9748  007550                     __end_of__ic2_display_set_address:
  9749                           	opt stack 0
  9750                           tblptru	equ	0xFF8
  9751                           tblptrh	equ	0xFF7
  9752                           tblptrl	equ	0xFF6
  9753                           tablat	equ	0xFF5
  9754                           prodh	equ	0xFF4
  9755                           prodl	equ	0xFF3
  9756                           intcon	equ	0xFF2
  9757                           intcon2	equ	0xFF1
  9758                           intcon3	equ	0xFF0
  9759                           postinc0	equ	0xFEE
  9760                           wreg	equ	0xFE8
  9761                           indf1	equ	0xFE7
  9762                           postdec1	equ	0xFE5
  9763                           plusw1	equ	0xFE3
  9764                           fsr1h	equ	0xFE2
  9765                           fsr1l	equ	0xFE1
  9766                           indf2	equ	0xFDF
  9767                           postinc2	equ	0xFDE
  9768                           postdec2	equ	0xFDD
  9769                           plusw2	equ	0xFDB
  9770                           fsr2h	equ	0xFDA
  9771                           fsr2l	equ	0xFD9
  9772                           status	equ	0xFD8
  9773                           
  9774 ;; *************** function _display_prepare *****************
  9775 ;; Defined at:
  9776 ;;		line 220 in file "display.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  mode            1    wreg     unsigned char 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;  mode            1   42[COMRAM] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;Total ram usage:        3 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:    6
  9797 ;; This function calls:
  9798 ;;		__display_checked
  9799 ;;		__display_clear
  9800 ;;		__display_done
  9801 ;;		__display_failed
  9802 ;;		__display_found
  9803 ;;		__display_programming
  9804 ;;		__display_start
  9805 ;;		__display_verify
  9806 ;; This function is called by:
  9807 ;;		_main
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text41
  9812  005192                     __ptext41:
  9813                           	opt stack 0
  9814  005192                     _display_prepare:
  9815                           	opt stack 24
  9816                           
  9817                           ;incstack = 0
  9818                           ;display_prepare@mode stored from wreg
  9819  005192  6E2B               	movwf	display_prepare@mode,c
  9820                           
  9821                           ;display.c: 222: _display_clear();
  9822  005194  ECCC  F036         	call	__display_clear	;wreg free
  9823                           
  9824                           ;display.c: 224: switch(mode&0xF0)
  9825  005198  D015               	goto	l14381
  9826  00519A                     l14365:
  9827                           
  9828                           ;display.c: 227: _display_start();
  9829  00519A  EC98  F01C         	call	__display_start	;wreg free
  9830                           
  9831                           ;display.c: 228: break;
  9832  00519E  D03B               	goto	l14385
  9833  0051A0                     l14367:
  9834                           
  9835                           ;display.c: 231: _display_found();
  9836  0051A0  ECD1  F016         	call	__display_found	;wreg free
  9837                           
  9838                           ;display.c: 232: break;
  9839  0051A4  D038               	goto	l14385
  9840  0051A6                     l14369:
  9841                           
  9842                           ;display.c: 235: _display_verify();
  9843  0051A6  ECE5  F01D         	call	__display_verify	;wreg free
  9844                           
  9845                           ;display.c: 236: break;
  9846  0051AA  D035               	goto	l14385
  9847  0051AC                     l14371:
  9848                           
  9849                           ;display.c: 239: _display_checked();
  9850  0051AC  EC28  F01B         	call	__display_checked	;wreg free
  9851                           
  9852                           ;display.c: 240: break;
  9853  0051B0  D032               	goto	l14385
  9854  0051B2                     l14373:
  9855                           
  9856                           ;display.c: 243: _display_failed();
  9857  0051B2  ECE7  F00C         	call	__display_failed	;wreg free
  9858                           
  9859                           ;display.c: 244: break;
  9860  0051B6  D02F               	goto	l14385
  9861  0051B8                     l14375:
  9862                           
  9863                           ;display.c: 247: _display_programming();
  9864  0051B8  ECC0  F017         	call	__display_programming	;wreg free
  9865                           
  9866                           ;display.c: 248: break;
  9867  0051BC  D02C               	goto	l14385
  9868  0051BE                     l14377:
  9869                           
  9870                           ;display.c: 251: _display_done();
  9871  0051BE  ECAB  F018         	call	__display_done	;wreg free
  9872                           
  9873                           ;display.c: 253: }
  9874                           
  9875                           ;display.c: 252: break;
  9876  0051C2  D029               	goto	l14385
  9877  0051C4                     l14381:
  9878  0051C4  502B               	movf	display_prepare@mode,w,c
  9879  0051C6  0BF0               	andlw	240
  9880  0051C8  6E29               	movwf	??_display_prepare& (0+255),c
  9881  0051CA  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  9882                           
  9883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9884                           ; Switch size 1, requested type "space"
  9885                           ; Number of cases is 1, Range of values is 0 to 0
  9886                           ; switch strategies available:
  9887                           ; Name         Instructions Cycles
  9888                           ; simple_byte            4     3 (average)
  9889                           ;	Chosen strategy is simple_byte
  9890  0051CC  502A               	movf	??_display_prepare+1,w,c
  9891  0051CE  0A00               	xorlw	0	; case 0
  9892  0051D0  A4D8               	btfss	status,2,c
  9893  0051D2  D021               	goto	l14385
  9894                           
  9895                           ; Switch size 1, requested type "space"
  9896                           ; Number of cases is 7, Range of values is 0 to 96
  9897                           ; switch strategies available:
  9898                           ; Name         Instructions Cycles
  9899                           ; simple_byte           22    12 (average)
  9900                           ;	Chosen strategy is simple_byte
  9901  0051D4  5029               	movf	??_display_prepare,w,c
  9902  0051D6  0A00               	xorlw	0	; case 0
  9903  0051D8  B4D8               	btfsc	status,2,c
  9904  0051DA  D7DF               	goto	l14365
  9905  0051DC  0A10               	xorlw	16	; case 16
  9906  0051DE  B4D8               	btfsc	status,2,c
  9907  0051E0  D7DF               	goto	l14367
  9908  0051E2  0A30               	xorlw	48	; case 32
  9909  0051E4  B4D8               	btfsc	status,2,c
  9910  0051E6  D7DF               	goto	l14369
  9911  0051E8  0A10               	xorlw	16	; case 48
  9912  0051EA  B4D8               	btfsc	status,2,c
  9913  0051EC  D7DF               	goto	l14371
  9914  0051EE  0A70               	xorlw	112	; case 64
  9915  0051F0  B4D8               	btfsc	status,2,c
  9916  0051F2  D7DF               	goto	l14373
  9917  0051F4  0A10               	xorlw	16	; case 80
  9918  0051F6  B4D8               	btfsc	status,2,c
  9919  0051F8  D7DF               	goto	l14375
  9920  0051FA  0A30               	xorlw	48	; case 96
  9921  0051FC  B4D8               	btfsc	status,2,c
  9922  0051FE  D7DF               	goto	l14377
  9923                           
  9924                           ;display.c: 256: switch((os.timeSlot>>5)&0b11)
  9925  005200  D00A               	goto	l14385
  9926  005202                     l14383:
  9927                           
  9928                           ;display.c: 259: display_content[0][17] = '.';
  9929  005202  0E2E               	movlw	46
  9930  005204  0102               	movlb	2	; () banked
  9931  005206  6F75               	movwf	(_display_content+17)& (0+255),b
  9932  005208                     l1683:
  9933                           
  9934                           ;display.c: 262: display_content[0][16] = '.';
  9935  005208  0E2E               	movlw	46
  9936  00520A  0102               	movlb	2	; () banked
  9937  00520C  6F74               	movwf	(_display_content+16)& (0+255),b
  9938  00520E                     l1684:
  9939                           
  9940                           ;display.c: 265: display_content[0][15] = '.';
  9941  00520E  0E2E               	movlw	46
  9942  005210  0102               	movlb	2	; () banked
  9943  005212  6F73               	movwf	(_display_content+15)& (0+255),b
  9944                           
  9945                           ;display.c: 267: }
  9946  005214  D015               	goto	l1685
  9947  005216                     l14385:
  9948  005216  0100               	movlb	0	; () banked
  9949  005218  39E4               	swapf	(_os+2)& (0+255),w,b	;volatile
  9950  00521A  42E8               	rrncf	wreg,f,c
  9951  00521C  0B07               	andlw	7
  9952  00521E  0B03               	andlw	3
  9953  005220  6E29               	movwf	??_display_prepare& (0+255),c
  9954  005222  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  9955                           
  9956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9957                           ; Switch size 1, requested type "space"
  9958                           ; Number of cases is 1, Range of values is 0 to 0
  9959                           ; switch strategies available:
  9960                           ; Name         Instructions Cycles
  9961                           ; simple_byte            4     3 (average)
  9962                           ;	Chosen strategy is simple_byte
  9963  005224  502A               	movf	??_display_prepare+1,w,c
  9964  005226  0A00               	xorlw	0	; case 0
  9965  005228  A4D8               	btfss	status,2,c
  9966  00522A  D00A               	goto	l1685
  9967                           
  9968                           ; BSR set to: 0
  9969                           ; Switch size 1, requested type "space"
  9970                           ; Number of cases is 3, Range of values is 1 to 3
  9971                           ; switch strategies available:
  9972                           ; Name         Instructions Cycles
  9973                           ; simple_byte           10     6 (average)
  9974                           ;	Chosen strategy is simple_byte
  9975  00522C  5029               	movf	??_display_prepare,w,c
  9976  00522E  0A01               	xorlw	1	; case 1
  9977  005230  B4D8               	btfsc	status,2,c
  9978  005232  D7ED               	goto	l1684
  9979  005234  0A03               	xorlw	3	; case 2
  9980  005236  B4D8               	btfsc	status,2,c
  9981  005238  D7E7               	goto	l1683
  9982  00523A  0A01               	xorlw	1	; case 3
  9983  00523C  B4D8               	btfsc	status,2,c
  9984  00523E  D7E1               	goto	l14383
  9985  005240                     l1685:
  9986                           
  9987                           ;display.c: 272: if(INTCONbits.GIE)
  9988  005240  AEF2               	btfss	intcon,7,c	;volatile
  9989  005242  D003               	goto	l14389
  9990                           
  9991                           ;display.c: 273: {
  9992                           ;display.c: 274: display_content[0][18] = 'I';
  9993  005244  0E49               	movlw	73
  9994  005246  0102               	movlb	2	; () banked
  9995  005248  6F76               	movwf	(_display_content+18)& (0+255),b
  9996  00524A                     l14389:
  9997                           
  9998                           ;display.c: 275: }
  9999                           ;display.c: 277: if(os.buttonCount>0)
 10000  00524A  0100               	movlb	0	; () banked
 10001  00524C  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
 10002  00524E  0A80               	xorlw	128
 10003  005250  0F7F               	addlw	-129
 10004  005252  A0D8               	btfss	status,0,c
 10005  005254  0012               	return	
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;display.c: 278: {
 10009                           ;display.c: 279: display_content[3][19] = 'X';
 10010  005256  0E58               	movlw	88
 10011  005258  0102               	movlb	2	; () banked
 10012  00525A  6FB3               	movwf	(_display_content+79)& (0+255),b
 10013  00525C  0012               	return	
 10014  00525E                     __end_of_display_prepare:
 10015                           	opt stack 0
 10016                           tblptru	equ	0xFF8
 10017                           tblptrh	equ	0xFF7
 10018                           tblptrl	equ	0xFF6
 10019                           tablat	equ	0xFF5
 10020                           prodh	equ	0xFF4
 10021                           prodl	equ	0xFF3
 10022                           intcon	equ	0xFF2
 10023                           intcon2	equ	0xFF1
 10024                           intcon3	equ	0xFF0
 10025                           postinc0	equ	0xFEE
 10026                           wreg	equ	0xFE8
 10027                           indf1	equ	0xFE7
 10028                           postdec1	equ	0xFE5
 10029                           plusw1	equ	0xFE3
 10030                           fsr1h	equ	0xFE2
 10031                           fsr1l	equ	0xFE1
 10032                           indf2	equ	0xFDF
 10033                           postinc2	equ	0xFDE
 10034                           postdec2	equ	0xFDD
 10035                           plusw2	equ	0xFDB
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function __display_verify *****************
 10041 ;; Defined at:
 10042 ;;		line 327 in file "display.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;		None
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  cntr            1   32[COMRAM] unsigned char 
 10047 ;;  start           1    0        unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10061 ;;Total ram usage:        3 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    4
 10064 ;; This function calls:
 10065 ;;		__display_itoa_u16
 10066 ;;		_bootloader_get_entries
 10067 ;; This function is called by:
 10068 ;;		_display_prepare
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text42
 10073  003BCA                     __ptext42:
 10074                           	opt stack 0
 10075  003BCA                     __display_verify:
 10076                           	opt stack 25
 10077                           
 10078                           ;display.c: 329: uint8_t cntr;
 10079                           ;display.c: 330: uint8_t start;
 10080                           ;display.c: 331: cntr = 0;
 10081                           
 10082                           ;incstack = 0
 10083  003BCA  0E00               	movlw	0
 10084  003BCC  6E21               	movwf	__display_verify@cntr,c
 10085                           
 10086                           ;display.c: 332: while(verify_line1[cntr])
 10087  003BCE  D017               	goto	l13475
 10088  003BD0                     l13471:
 10089                           
 10090                           ;display.c: 333: display_content[0][cntr] = verify_line1[cntr++];
 10091  003BD0  5021               	movf	__display_verify@cntr,w,c
 10092  003BD2  0D01               	mullw	1
 10093  003BD4  0E09               	movlw	low _verify_line1
 10094  003BD6  24F3               	addwf	prodl,w,c
 10095  003BD8  6EF6               	movwf	tblptrl,c
 10096  003BDA  0E8E               	movlw	high _verify_line1
 10097  003BDC  20F4               	addwfc	prodh,w,c
 10098  003BDE  6EF7               	movwf	tblptrh,c
 10099  003BE0                     	if	1	;There are 3 active tblptr bytes
 10100  003BE0  6AF8               	clrf	tblptru,c
 10101  003BE2  0E00               	movlw	low (__mediumconst shr (0+16))
 10102  003BE4  22F8               	addwfc	tblptru,f,c
 10103  003BE6                     	endif
 10104  003BE6  5021               	movf	__display_verify@cntr,w,c
 10105  003BE8  0D01               	mullw	1
 10106  003BEA  0E64               	movlw	low _display_content
 10107  003BEC  24F3               	addwf	prodl,w,c
 10108  003BEE  6ED9               	movwf	fsr2l,c
 10109  003BF0  0E02               	movlw	high _display_content
 10110  003BF2  20F4               	addwfc	prodh,w,c
 10111  003BF4  6EDA               	movwf	fsr2h,c
 10112  003BF6  0008               	tblrd		*
 10113  003BF8  CFF5 FFDF          	movff	tablat,indf2
 10114  003BFC  2A21               	incf	__display_verify@cntr,f,c
 10115  003BFE                     l13475:
 10116  003BFE  5021               	movf	__display_verify@cntr,w,c
 10117  003C00  0D01               	mullw	1
 10118  003C02  0E09               	movlw	low _verify_line1
 10119  003C04  24F3               	addwf	prodl,w,c
 10120  003C06  6EF6               	movwf	tblptrl,c
 10121  003C08  0E8E               	movlw	high _verify_line1
 10122  003C0A  20F4               	addwfc	prodh,w,c
 10123  003C0C  6EF7               	movwf	tblptrh,c
 10124  003C0E                     	if	1	;There are 3 active tblptr bytes
 10125  003C0E  6AF8               	clrf	tblptru,c
 10126  003C10  0E00               	movlw	low (__mediumconst shr (0+16))
 10127  003C12  22F8               	addwfc	tblptru,f,c
 10128  003C14                     	endif
 10129  003C14  0008               	tblrd		*
 10130  003C16  50F5               	movf	tablat,w,c
 10131  003C18  0900               	iorlw	0
 10132  003C1A  A4D8               	btfss	status,2,c
 10133  003C1C  D7D9               	goto	l13471
 10134                           
 10135                           ;display.c: 334: cntr = 0;
 10136  003C1E  0E00               	movlw	0
 10137  003C20  6E21               	movwf	__display_verify@cntr,c
 10138                           
 10139                           ;display.c: 335: while(verify_line2[cntr])
 10140  003C22  D017               	goto	l13483
 10141  003C24                     l13479:
 10142                           
 10143                           ;display.c: 336: display_content[1][cntr] = verify_line2[cntr++];
 10144  003C24  5021               	movf	__display_verify@cntr,w,c
 10145  003C26  0D01               	mullw	1
 10146  003C28  0E55               	movlw	low _verify_line2
 10147  003C2A  24F3               	addwf	prodl,w,c
 10148  003C2C  6EF6               	movwf	tblptrl,c
 10149  003C2E  0E8E               	movlw	high _verify_line2
 10150  003C30  20F4               	addwfc	prodh,w,c
 10151  003C32  6EF7               	movwf	tblptrh,c
 10152  003C34                     	if	1	;There are 3 active tblptr bytes
 10153  003C34  6AF8               	clrf	tblptru,c
 10154  003C36  0E00               	movlw	low (__mediumconst shr (0+16))
 10155  003C38  22F8               	addwfc	tblptru,f,c
 10156  003C3A                     	endif
 10157  003C3A  5021               	movf	__display_verify@cntr,w,c
 10158  003C3C  0D01               	mullw	1
 10159  003C3E  0E78               	movlw	low (_display_content+20)
 10160  003C40  24F3               	addwf	prodl,w,c
 10161  003C42  6ED9               	movwf	fsr2l,c
 10162  003C44  0E02               	movlw	high (_display_content+20)
 10163  003C46  20F4               	addwfc	prodh,w,c
 10164  003C48  6EDA               	movwf	fsr2h,c
 10165  003C4A  0008               	tblrd		*
 10166  003C4C  CFF5 FFDF          	movff	tablat,indf2
 10167  003C50  2A21               	incf	__display_verify@cntr,f,c
 10168  003C52                     l13483:
 10169  003C52  5021               	movf	__display_verify@cntr,w,c
 10170  003C54  0D01               	mullw	1
 10171  003C56  0E55               	movlw	low _verify_line2
 10172  003C58  24F3               	addwf	prodl,w,c
 10173  003C5A  6EF6               	movwf	tblptrl,c
 10174  003C5C  0E8E               	movlw	high _verify_line2
 10175  003C5E  20F4               	addwfc	prodh,w,c
 10176  003C60  6EF7               	movwf	tblptrh,c
 10177  003C62                     	if	1	;There are 3 active tblptr bytes
 10178  003C62  6AF8               	clrf	tblptru,c
 10179  003C64  0E00               	movlw	low (__mediumconst shr (0+16))
 10180  003C66  22F8               	addwfc	tblptru,f,c
 10181  003C68                     	endif
 10182  003C68  0008               	tblrd		*
 10183  003C6A  50F5               	movf	tablat,w,c
 10184  003C6C  0900               	iorlw	0
 10185  003C6E  A4D8               	btfss	status,2,c
 10186  003C70  D7D9               	goto	l13479
 10187                           
 10188                           ;display.c: 337: cntr = 0;
 10189  003C72  0E00               	movlw	0
 10190  003C74  6E21               	movwf	__display_verify@cntr,c
 10191                           
 10192                           ;display.c: 338: while(verify_line3[cntr])
 10193  003C76  D017               	goto	l13491
 10194  003C78                     l13487:
 10195                           
 10196                           ;display.c: 339: display_content[2][cntr] = verify_line3[cntr++];
 10197  003C78  5021               	movf	__display_verify@cntr,w,c
 10198  003C7A  0D01               	mullw	1
 10199  003C7C  0E8A               	movlw	low _verify_line3
 10200  003C7E  24F3               	addwf	prodl,w,c
 10201  003C80  6EF6               	movwf	tblptrl,c
 10202  003C82  0E8E               	movlw	high _verify_line3
 10203  003C84  20F4               	addwfc	prodh,w,c
 10204  003C86  6EF7               	movwf	tblptrh,c
 10205  003C88                     	if	1	;There are 3 active tblptr bytes
 10206  003C88  6AF8               	clrf	tblptru,c
 10207  003C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 10208  003C8C  22F8               	addwfc	tblptru,f,c
 10209  003C8E                     	endif
 10210  003C8E  5021               	movf	__display_verify@cntr,w,c
 10211  003C90  0D01               	mullw	1
 10212  003C92  0E8C               	movlw	low (_display_content+40)
 10213  003C94  24F3               	addwf	prodl,w,c
 10214  003C96  6ED9               	movwf	fsr2l,c
 10215  003C98  0E02               	movlw	high (_display_content+40)
 10216  003C9A  20F4               	addwfc	prodh,w,c
 10217  003C9C  6EDA               	movwf	fsr2h,c
 10218  003C9E  0008               	tblrd		*
 10219  003CA0  CFF5 FFDF          	movff	tablat,indf2
 10220  003CA4  2A21               	incf	__display_verify@cntr,f,c
 10221  003CA6                     l13491:
 10222  003CA6  5021               	movf	__display_verify@cntr,w,c
 10223  003CA8  0D01               	mullw	1
 10224  003CAA  0E8A               	movlw	low _verify_line3
 10225  003CAC  24F3               	addwf	prodl,w,c
 10226  003CAE  6EF6               	movwf	tblptrl,c
 10227  003CB0  0E8E               	movlw	high _verify_line3
 10228  003CB2  20F4               	addwfc	prodh,w,c
 10229  003CB4  6EF7               	movwf	tblptrh,c
 10230  003CB6                     	if	1	;There are 3 active tblptr bytes
 10231  003CB6  6AF8               	clrf	tblptru,c
 10232  003CB8  0E00               	movlw	low (__mediumconst shr (0+16))
 10233  003CBA  22F8               	addwfc	tblptru,f,c
 10234  003CBC                     	endif
 10235  003CBC  0008               	tblrd		*
 10236  003CBE  50F5               	movf	tablat,w,c
 10237  003CC0  0900               	iorlw	0
 10238  003CC2  A4D8               	btfss	status,2,c
 10239  003CC4  D7D9               	goto	l13487
 10240                           
 10241                           ;display.c: 340: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 10242  003CC6  EC54  F03C         	call	_bootloader_get_entries	;wreg free
 10243  003CCA  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 10244  003CCE  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 10245  003CD2  6A1B               	clrf	__display_itoa_u16@value+2,c
 10246  003CD4  6A1C               	clrf	__display_itoa_u16@value+3,c
 10247  003CD6  5021               	movf	__display_verify@cntr,w,c
 10248  003CD8  6E1F               	movwf	??__display_verify& (0+255),c
 10249  003CDA  6A20               	clrf	(??__display_verify+1)& (0+255),c
 10250  003CDC  0E01               	movlw	1
 10251  003CDE  261F               	addwf	??__display_verify,f,c
 10252  003CE0  0E00               	movlw	0
 10253  003CE2  2220               	addwfc	??__display_verify+1,f,c
 10254  003CE4  0E8C               	movlw	low (_display_content+40)
 10255  003CE6  241F               	addwf	??__display_verify,w,c
 10256  003CE8  6E1D               	movwf	__display_itoa_u16@text,c
 10257  003CEA  0E02               	movlw	high (_display_content+40)
 10258  003CEC  2020               	addwfc	??__display_verify+1,w,c
 10259  003CEE  6E1E               	movwf	__display_itoa_u16@text+1,c
 10260  003CF0  EC91  F029         	call	__display_itoa_u16	;wreg free
 10261  003CF4  0012               	return		;funcret
 10262  003CF6                     __end_of__display_verify:
 10263                           	opt stack 0
 10264                           tblptru	equ	0xFF8
 10265                           tblptrh	equ	0xFF7
 10266                           tblptrl	equ	0xFF6
 10267                           tablat	equ	0xFF5
 10268                           prodh	equ	0xFF4
 10269                           prodl	equ	0xFF3
 10270                           intcon	equ	0xFF2
 10271                           intcon2	equ	0xFF1
 10272                           intcon3	equ	0xFF0
 10273                           postinc0	equ	0xFEE
 10274                           wreg	equ	0xFE8
 10275                           indf1	equ	0xFE7
 10276                           postdec1	equ	0xFE5
 10277                           plusw1	equ	0xFE3
 10278                           fsr1h	equ	0xFE2
 10279                           fsr1l	equ	0xFE1
 10280                           indf2	equ	0xFDF
 10281                           postinc2	equ	0xFDE
 10282                           postdec2	equ	0xFDD
 10283                           plusw2	equ	0xFDB
 10284                           fsr2h	equ	0xFDA
 10285                           fsr2l	equ	0xFD9
 10286                           status	equ	0xFD8
 10287                           
 10288 ;; *************** function __display_start *****************
 10289 ;; Defined at:
 10290 ;;		line 283 in file "display.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;		None
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  cntr            1    0[COMRAM] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10308 ;;Total ram usage:        1 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_display_prepare
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text43
 10318  003930                     __ptext43:
 10319                           	opt stack 0
 10320  003930                     __display_start:
 10321                           	opt stack 29
 10322                           
 10323                           ;display.c: 285: uint8_t cntr;
 10324                           ;display.c: 286: cntr = 0;
 10325                           
 10326                           ;incstack = 0
 10327  003930  0E00               	movlw	0
 10328  003932  6E01               	movwf	__display_start@cntr,c
 10329                           
 10330                           ;display.c: 287: while(start_line1[cntr])
 10331  003934  D017               	goto	l13401
 10332  003936                     l13397:
 10333                           
 10334                           ;display.c: 288: display_content[0][cntr] = start_line1[cntr++];
 10335  003936  5001               	movf	__display_start@cntr,w,c
 10336  003938  0D01               	mullw	1
 10337  00393A  0EA8               	movlw	low _start_line1
 10338  00393C  24F3               	addwf	prodl,w,c
 10339  00393E  6EF6               	movwf	tblptrl,c
 10340  003940  0E8D               	movlw	high _start_line1
 10341  003942  20F4               	addwfc	prodh,w,c
 10342  003944  6EF7               	movwf	tblptrh,c
 10343  003946                     	if	1	;There are 3 active tblptr bytes
 10344  003946  6AF8               	clrf	tblptru,c
 10345  003948  0E00               	movlw	low (__mediumconst shr (0+16))
 10346  00394A  22F8               	addwfc	tblptru,f,c
 10347  00394C                     	endif
 10348  00394C  5001               	movf	__display_start@cntr,w,c
 10349  00394E  0D01               	mullw	1
 10350  003950  0E64               	movlw	low _display_content
 10351  003952  24F3               	addwf	prodl,w,c
 10352  003954  6ED9               	movwf	fsr2l,c
 10353  003956  0E02               	movlw	high _display_content
 10354  003958  20F4               	addwfc	prodh,w,c
 10355  00395A  6EDA               	movwf	fsr2h,c
 10356  00395C  0008               	tblrd		*
 10357  00395E  CFF5 FFDF          	movff	tablat,indf2
 10358  003962  2A01               	incf	__display_start@cntr,f,c
 10359  003964                     l13401:
 10360  003964  5001               	movf	__display_start@cntr,w,c
 10361  003966  0D01               	mullw	1
 10362  003968  0EA8               	movlw	low _start_line1
 10363  00396A  24F3               	addwf	prodl,w,c
 10364  00396C  6EF6               	movwf	tblptrl,c
 10365  00396E  0E8D               	movlw	high _start_line1
 10366  003970  20F4               	addwfc	prodh,w,c
 10367  003972  6EF7               	movwf	tblptrh,c
 10368  003974                     	if	1	;There are 3 active tblptr bytes
 10369  003974  6AF8               	clrf	tblptru,c
 10370  003976  0E00               	movlw	low (__mediumconst shr (0+16))
 10371  003978  22F8               	addwfc	tblptru,f,c
 10372  00397A                     	endif
 10373  00397A  0008               	tblrd		*
 10374  00397C  50F5               	movf	tablat,w,c
 10375  00397E  0900               	iorlw	0
 10376  003980  A4D8               	btfss	status,2,c
 10377  003982  D7D9               	goto	l13397
 10378                           
 10379                           ;display.c: 289: cntr = 0;
 10380  003984  0E00               	movlw	0
 10381  003986  6E01               	movwf	__display_start@cntr,c
 10382                           
 10383                           ;display.c: 290: while(start_line2[cntr])
 10384  003988  D017               	goto	l13409
 10385  00398A                     l13405:
 10386                           
 10387                           ;display.c: 291: display_content[1][cntr] = start_line2[cntr++];
 10388  00398A  5001               	movf	__display_start@cntr,w,c
 10389  00398C  0D01               	mullw	1
 10390  00398E  0E97               	movlw	low _start_line2
 10391  003990  24F3               	addwf	prodl,w,c
 10392  003992  6EF6               	movwf	tblptrl,c
 10393  003994  0E8D               	movlw	high _start_line2
 10394  003996  20F4               	addwfc	prodh,w,c
 10395  003998  6EF7               	movwf	tblptrh,c
 10396  00399A                     	if	1	;There are 3 active tblptr bytes
 10397  00399A  6AF8               	clrf	tblptru,c
 10398  00399C  0E00               	movlw	low (__mediumconst shr (0+16))
 10399  00399E  22F8               	addwfc	tblptru,f,c
 10400  0039A0                     	endif
 10401  0039A0  5001               	movf	__display_start@cntr,w,c
 10402  0039A2  0D01               	mullw	1
 10403  0039A4  0E78               	movlw	low (_display_content+20)
 10404  0039A6  24F3               	addwf	prodl,w,c
 10405  0039A8  6ED9               	movwf	fsr2l,c
 10406  0039AA  0E02               	movlw	high (_display_content+20)
 10407  0039AC  20F4               	addwfc	prodh,w,c
 10408  0039AE  6EDA               	movwf	fsr2h,c
 10409  0039B0  0008               	tblrd		*
 10410  0039B2  CFF5 FFDF          	movff	tablat,indf2
 10411  0039B6  2A01               	incf	__display_start@cntr,f,c
 10412  0039B8                     l13409:
 10413  0039B8  5001               	movf	__display_start@cntr,w,c
 10414  0039BA  0D01               	mullw	1
 10415  0039BC  0E97               	movlw	low _start_line2
 10416  0039BE  24F3               	addwf	prodl,w,c
 10417  0039C0  6EF6               	movwf	tblptrl,c
 10418  0039C2  0E8D               	movlw	high _start_line2
 10419  0039C4  20F4               	addwfc	prodh,w,c
 10420  0039C6  6EF7               	movwf	tblptrh,c
 10421  0039C8                     	if	1	;There are 3 active tblptr bytes
 10422  0039C8  6AF8               	clrf	tblptru,c
 10423  0039CA  0E00               	movlw	low (__mediumconst shr (0+16))
 10424  0039CC  22F8               	addwfc	tblptru,f,c
 10425  0039CE                     	endif
 10426  0039CE  0008               	tblrd		*
 10427  0039D0  50F5               	movf	tablat,w,c
 10428  0039D2  0900               	iorlw	0
 10429  0039D4  A4D8               	btfss	status,2,c
 10430  0039D6  D7D9               	goto	l13405
 10431                           
 10432                           ;display.c: 292: cntr = 0;
 10433  0039D8  0E00               	movlw	0
 10434  0039DA  6E01               	movwf	__display_start@cntr,c
 10435                           
 10436                           ;display.c: 293: while(start_line3[cntr])
 10437  0039DC  D017               	goto	l13417
 10438  0039DE                     l13413:
 10439                           
 10440                           ;display.c: 294: display_content[2][cntr] = start_line3[cntr++];
 10441  0039DE  5001               	movf	__display_start@cntr,w,c
 10442  0039E0  0D01               	mullw	1
 10443  0039E2  0E16               	movlw	low _start_line3
 10444  0039E4  24F3               	addwf	prodl,w,c
 10445  0039E6  6EF6               	movwf	tblptrl,c
 10446  0039E8  0E8D               	movlw	high _start_line3
 10447  0039EA  20F4               	addwfc	prodh,w,c
 10448  0039EC  6EF7               	movwf	tblptrh,c
 10449  0039EE                     	if	1	;There are 3 active tblptr bytes
 10450  0039EE  6AF8               	clrf	tblptru,c
 10451  0039F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10452  0039F2  22F8               	addwfc	tblptru,f,c
 10453  0039F4                     	endif
 10454  0039F4  5001               	movf	__display_start@cntr,w,c
 10455  0039F6  0D01               	mullw	1
 10456  0039F8  0E8C               	movlw	low (_display_content+40)
 10457  0039FA  24F3               	addwf	prodl,w,c
 10458  0039FC  6ED9               	movwf	fsr2l,c
 10459  0039FE  0E02               	movlw	high (_display_content+40)
 10460  003A00  20F4               	addwfc	prodh,w,c
 10461  003A02  6EDA               	movwf	fsr2h,c
 10462  003A04  0008               	tblrd		*
 10463  003A06  CFF5 FFDF          	movff	tablat,indf2
 10464  003A0A  2A01               	incf	__display_start@cntr,f,c
 10465  003A0C                     l13417:
 10466  003A0C  5001               	movf	__display_start@cntr,w,c
 10467  003A0E  0D01               	mullw	1
 10468  003A10  0E16               	movlw	low _start_line3
 10469  003A12  24F3               	addwf	prodl,w,c
 10470  003A14  6EF6               	movwf	tblptrl,c
 10471  003A16  0E8D               	movlw	high _start_line3
 10472  003A18  20F4               	addwfc	prodh,w,c
 10473  003A1A  6EF7               	movwf	tblptrh,c
 10474  003A1C                     	if	1	;There are 3 active tblptr bytes
 10475  003A1C  6AF8               	clrf	tblptru,c
 10476  003A1E  0E00               	movlw	low (__mediumconst shr (0+16))
 10477  003A20  22F8               	addwfc	tblptru,f,c
 10478  003A22                     	endif
 10479  003A22  0008               	tblrd		*
 10480  003A24  50F5               	movf	tablat,w,c
 10481  003A26  0900               	iorlw	0
 10482  003A28  A4D8               	btfss	status,2,c
 10483  003A2A  D7D9               	goto	l13413
 10484                           
 10485                           ;display.c: 295: cntr = 0;
 10486  003A2C  0E00               	movlw	0
 10487  003A2E  6E01               	movwf	__display_start@cntr,c
 10488                           
 10489                           ;display.c: 296: while(start_line4[cntr])
 10490  003A30  D017               	goto	l13425
 10491  003A32                     l13421:
 10492                           
 10493                           ;display.c: 297: display_content[3][cntr] = start_line4[cntr++];
 10494  003A32  5001               	movf	__display_start@cntr,w,c
 10495  003A34  0D01               	mullw	1
 10496  003A36  0E62               	movlw	low _start_line4
 10497  003A38  24F3               	addwf	prodl,w,c
 10498  003A3A  6EF6               	movwf	tblptrl,c
 10499  003A3C  0E8E               	movlw	high _start_line4
 10500  003A3E  20F4               	addwfc	prodh,w,c
 10501  003A40  6EF7               	movwf	tblptrh,c
 10502  003A42                     	if	1	;There are 3 active tblptr bytes
 10503  003A42  6AF8               	clrf	tblptru,c
 10504  003A44  0E00               	movlw	low (__mediumconst shr (0+16))
 10505  003A46  22F8               	addwfc	tblptru,f,c
 10506  003A48                     	endif
 10507  003A48  5001               	movf	__display_start@cntr,w,c
 10508  003A4A  0D01               	mullw	1
 10509  003A4C  0EA0               	movlw	low (_display_content+60)
 10510  003A4E  24F3               	addwf	prodl,w,c
 10511  003A50  6ED9               	movwf	fsr2l,c
 10512  003A52  0E02               	movlw	high (_display_content+60)
 10513  003A54  20F4               	addwfc	prodh,w,c
 10514  003A56  6EDA               	movwf	fsr2h,c
 10515  003A58  0008               	tblrd		*
 10516  003A5A  CFF5 FFDF          	movff	tablat,indf2
 10517  003A5E  2A01               	incf	__display_start@cntr,f,c
 10518  003A60                     l13425:
 10519  003A60  5001               	movf	__display_start@cntr,w,c
 10520  003A62  0D01               	mullw	1
 10521  003A64  0E62               	movlw	low _start_line4
 10522  003A66  24F3               	addwf	prodl,w,c
 10523  003A68  6EF6               	movwf	tblptrl,c
 10524  003A6A  0E8E               	movlw	high _start_line4
 10525  003A6C  20F4               	addwfc	prodh,w,c
 10526  003A6E  6EF7               	movwf	tblptrh,c
 10527  003A70                     	if	1	;There are 3 active tblptr bytes
 10528  003A70  6AF8               	clrf	tblptru,c
 10529  003A72  0E00               	movlw	low (__mediumconst shr (0+16))
 10530  003A74  22F8               	addwfc	tblptru,f,c
 10531  003A76                     	endif
 10532  003A76  0008               	tblrd		*
 10533  003A78  50F5               	movf	tablat,w,c
 10534  003A7A  0900               	iorlw	0
 10535  003A7C  B4D8               	btfsc	status,2,c
 10536  003A7E  0012               	return	
 10537  003A80  D7D8               	goto	l13421
 10538  003A82                     __end_of__display_start:
 10539                           	opt stack 0
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           intcon	equ	0xFF2
 10547                           intcon2	equ	0xFF1
 10548                           intcon3	equ	0xFF0
 10549                           postinc0	equ	0xFEE
 10550                           wreg	equ	0xFE8
 10551                           indf1	equ	0xFE7
 10552                           postdec1	equ	0xFE5
 10553                           plusw1	equ	0xFE3
 10554                           fsr1h	equ	0xFE2
 10555                           fsr1l	equ	0xFE1
 10556                           indf2	equ	0xFDF
 10557                           postinc2	equ	0xFDE
 10558                           postdec2	equ	0xFDD
 10559                           plusw2	equ	0xFDB
 10560                           fsr2h	equ	0xFDA
 10561                           fsr2l	equ	0xFD9
 10562                           status	equ	0xFD8
 10563                           
 10564 ;; *************** function __display_programming *****************
 10565 ;; Defined at:
 10566 ;;		line 415 in file "display.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  cntr            1   30[COMRAM] unsigned char 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;Total ram usage:        1 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:    4
 10587 ;; This function calls:
 10588 ;;		__display_itoa_u16
 10589 ;;		_bootloader_get_entries
 10590 ;;		_bootloader_get_flashPagesWritten
 10591 ;;		_bootloader_get_total_entries
 10592 ;; This function is called by:
 10593 ;;		_display_prepare
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           	psect	text44
 10598  002F80                     __ptext44:
 10599                           	opt stack 0
 10600  002F80                     __display_programming:
 10601                           	opt stack 25
 10602                           
 10603                           ;display.c: 417: uint8_t cntr;
 10604                           ;display.c: 418: cntr = 0;
 10605                           
 10606                           ;incstack = 0
 10607  002F80  0E00               	movlw	0
 10608  002F82  6E1F               	movwf	__display_programming@cntr,c
 10609                           
 10610                           ;display.c: 419: while(programming_line1[cntr])
 10611  002F84  D017               	goto	l13601
 10612  002F86                     l13597:
 10613                           
 10614                           ;display.c: 420: display_content[0][cntr] = programming_line1[cntr++];
 10615  002F86  501F               	movf	__display_programming@cntr,w,c
 10616  002F88  0D01               	mullw	1
 10617  002F8A  0ED9               	movlw	low _programming_line1
 10618  002F8C  24F3               	addwf	prodl,w,c
 10619  002F8E  6EF6               	movwf	tblptrl,c
 10620  002F90  0E8D               	movlw	high _programming_line1
 10621  002F92  20F4               	addwfc	prodh,w,c
 10622  002F94  6EF7               	movwf	tblptrh,c
 10623  002F96                     	if	1	;There are 3 active tblptr bytes
 10624  002F96  6AF8               	clrf	tblptru,c
 10625  002F98  0E00               	movlw	low (__mediumconst shr (0+16))
 10626  002F9A  22F8               	addwfc	tblptru,f,c
 10627  002F9C                     	endif
 10628  002F9C  501F               	movf	__display_programming@cntr,w,c
 10629  002F9E  0D01               	mullw	1
 10630  002FA0  0E64               	movlw	low _display_content
 10631  002FA2  24F3               	addwf	prodl,w,c
 10632  002FA4  6ED9               	movwf	fsr2l,c
 10633  002FA6  0E02               	movlw	high _display_content
 10634  002FA8  20F4               	addwfc	prodh,w,c
 10635  002FAA  6EDA               	movwf	fsr2h,c
 10636  002FAC  0008               	tblrd		*
 10637  002FAE  CFF5 FFDF          	movff	tablat,indf2
 10638  002FB2  2A1F               	incf	__display_programming@cntr,f,c
 10639  002FB4                     l13601:
 10640  002FB4  501F               	movf	__display_programming@cntr,w,c
 10641  002FB6  0D01               	mullw	1
 10642  002FB8  0ED9               	movlw	low _programming_line1
 10643  002FBA  24F3               	addwf	prodl,w,c
 10644  002FBC  6EF6               	movwf	tblptrl,c
 10645  002FBE  0E8D               	movlw	high _programming_line1
 10646  002FC0  20F4               	addwfc	prodh,w,c
 10647  002FC2  6EF7               	movwf	tblptrh,c
 10648  002FC4                     	if	1	;There are 3 active tblptr bytes
 10649  002FC4  6AF8               	clrf	tblptru,c
 10650  002FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 10651  002FC8  22F8               	addwfc	tblptru,f,c
 10652  002FCA                     	endif
 10653  002FCA  0008               	tblrd		*
 10654  002FCC  50F5               	movf	tablat,w,c
 10655  002FCE  0900               	iorlw	0
 10656  002FD0  A4D8               	btfss	status,2,c
 10657  002FD2  D7D9               	goto	l13597
 10658                           
 10659                           ;display.c: 422: cntr = 0;
 10660  002FD4  0E00               	movlw	0
 10661  002FD6  6E1F               	movwf	__display_programming@cntr,c
 10662                           
 10663                           ;display.c: 423: while(programming_line2[cntr])
 10664  002FD8  D017               	goto	l13609
 10665  002FDA                     l13605:
 10666                           
 10667                           ;display.c: 424: display_content[1][cntr] = programming_line2[cntr++];
 10668  002FDA  501F               	movf	__display_programming@cntr,w,c
 10669  002FDC  0D01               	mullw	1
 10670  002FDE  0E50               	movlw	low _programming_line2
 10671  002FE0  24F3               	addwf	prodl,w,c
 10672  002FE2  6EF6               	movwf	tblptrl,c
 10673  002FE4  0E8D               	movlw	high _programming_line2
 10674  002FE6  20F4               	addwfc	prodh,w,c
 10675  002FE8  6EF7               	movwf	tblptrh,c
 10676  002FEA                     	if	1	;There are 3 active tblptr bytes
 10677  002FEA  6AF8               	clrf	tblptru,c
 10678  002FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 10679  002FEE  22F8               	addwfc	tblptru,f,c
 10680  002FF0                     	endif
 10681  002FF0  501F               	movf	__display_programming@cntr,w,c
 10682  002FF2  0D01               	mullw	1
 10683  002FF4  0E78               	movlw	low (_display_content+20)
 10684  002FF6  24F3               	addwf	prodl,w,c
 10685  002FF8  6ED9               	movwf	fsr2l,c
 10686  002FFA  0E02               	movlw	high (_display_content+20)
 10687  002FFC  20F4               	addwfc	prodh,w,c
 10688  002FFE  6EDA               	movwf	fsr2h,c
 10689  003000  0008               	tblrd		*
 10690  003002  CFF5 FFDF          	movff	tablat,indf2
 10691  003006  2A1F               	incf	__display_programming@cntr,f,c
 10692  003008                     l13609:
 10693  003008  501F               	movf	__display_programming@cntr,w,c
 10694  00300A  0D01               	mullw	1
 10695  00300C  0E50               	movlw	low _programming_line2
 10696  00300E  24F3               	addwf	prodl,w,c
 10697  003010  6EF6               	movwf	tblptrl,c
 10698  003012  0E8D               	movlw	high _programming_line2
 10699  003014  20F4               	addwfc	prodh,w,c
 10700  003016  6EF7               	movwf	tblptrh,c
 10701  003018                     	if	1	;There are 3 active tblptr bytes
 10702  003018  6AF8               	clrf	tblptru,c
 10703  00301A  0E00               	movlw	low (__mediumconst shr (0+16))
 10704  00301C  22F8               	addwfc	tblptru,f,c
 10705  00301E                     	endif
 10706  00301E  0008               	tblrd		*
 10707  003020  50F5               	movf	tablat,w,c
 10708  003022  0900               	iorlw	0
 10709  003024  A4D8               	btfss	status,2,c
 10710  003026  D7D9               	goto	l13605
 10711                           
 10712                           ;display.c: 426: cntr = 0;
 10713  003028  0E00               	movlw	0
 10714  00302A  6E1F               	movwf	__display_programming@cntr,c
 10715                           
 10716                           ;display.c: 427: while(programming_line3[cntr])
 10717  00302C  D017               	goto	l13617
 10718  00302E                     l13613:
 10719                           
 10720                           ;display.c: 428: display_content[2][cntr] = programming_line3[cntr++];
 10721  00302E  501F               	movf	__display_programming@cntr,w,c
 10722  003030  0D01               	mullw	1
 10723  003032  0E83               	movlw	low _programming_line3
 10724  003034  24F3               	addwf	prodl,w,c
 10725  003036  6EF6               	movwf	tblptrl,c
 10726  003038  0E8E               	movlw	high _programming_line3
 10727  00303A  20F4               	addwfc	prodh,w,c
 10728  00303C  6EF7               	movwf	tblptrh,c
 10729  00303E                     	if	1	;There are 3 active tblptr bytes
 10730  00303E  6AF8               	clrf	tblptru,c
 10731  003040  0E00               	movlw	low (__mediumconst shr (0+16))
 10732  003042  22F8               	addwfc	tblptru,f,c
 10733  003044                     	endif
 10734  003044  501F               	movf	__display_programming@cntr,w,c
 10735  003046  0D01               	mullw	1
 10736  003048  0E8C               	movlw	low (_display_content+40)
 10737  00304A  24F3               	addwf	prodl,w,c
 10738  00304C  6ED9               	movwf	fsr2l,c
 10739  00304E  0E02               	movlw	high (_display_content+40)
 10740  003050  20F4               	addwfc	prodh,w,c
 10741  003052  6EDA               	movwf	fsr2h,c
 10742  003054  0008               	tblrd		*
 10743  003056  CFF5 FFDF          	movff	tablat,indf2
 10744  00305A  2A1F               	incf	__display_programming@cntr,f,c
 10745  00305C                     l13617:
 10746  00305C  501F               	movf	__display_programming@cntr,w,c
 10747  00305E  0D01               	mullw	1
 10748  003060  0E83               	movlw	low _programming_line3
 10749  003062  24F3               	addwf	prodl,w,c
 10750  003064  6EF6               	movwf	tblptrl,c
 10751  003066  0E8E               	movlw	high _programming_line3
 10752  003068  20F4               	addwfc	prodh,w,c
 10753  00306A  6EF7               	movwf	tblptrh,c
 10754  00306C                     	if	1	;There are 3 active tblptr bytes
 10755  00306C  6AF8               	clrf	tblptru,c
 10756  00306E  0E00               	movlw	low (__mediumconst shr (0+16))
 10757  003070  22F8               	addwfc	tblptru,f,c
 10758  003072                     	endif
 10759  003072  0008               	tblrd		*
 10760  003074  50F5               	movf	tablat,w,c
 10761  003076  0900               	iorlw	0
 10762  003078  A4D8               	btfss	status,2,c
 10763  00307A  D7D9               	goto	l13613
 10764                           
 10765                           ;display.c: 429: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 10766  00307C  EC54  F03C         	call	_bootloader_get_entries	;wreg free
 10767  003080  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 10768  003084  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 10769  003088  6A1B               	clrf	__display_itoa_u16@value+2,c
 10770  00308A  6A1C               	clrf	__display_itoa_u16@value+3,c
 10771  00308C  501F               	movf	__display_programming@cntr,w,c
 10772  00308E  0D01               	mullw	1
 10773  003090  0E8C               	movlw	low (_display_content+40)
 10774  003092  24F3               	addwf	prodl,w,c
 10775  003094  6E1D               	movwf	__display_itoa_u16@text,c
 10776  003096  0E02               	movlw	high (_display_content+40)
 10777  003098  20F4               	addwfc	prodh,w,c
 10778  00309A  6E1E               	movwf	__display_itoa_u16@text+1,c
 10779  00309C  EC91  F029         	call	__display_itoa_u16	;wreg free
 10780  0030A0  261F               	addwf	__display_programming@cntr,f,c
 10781                           
 10782                           ;display.c: 430: display_content[2][cntr++] = '/';
 10783  0030A2  501F               	movf	__display_programming@cntr,w,c
 10784  0030A4  0D01               	mullw	1
 10785  0030A6  0E8C               	movlw	low (_display_content+40)
 10786  0030A8  24F3               	addwf	prodl,w,c
 10787  0030AA  6ED9               	movwf	fsr2l,c
 10788  0030AC  0E02               	movlw	high (_display_content+40)
 10789  0030AE  20F4               	addwfc	prodh,w,c
 10790  0030B0  6EDA               	movwf	fsr2h,c
 10791  0030B2  0E2F               	movlw	47
 10792  0030B4  6EDF               	movwf	indf2,c
 10793  0030B6  2A1F               	incf	__display_programming@cntr,f,c
 10794                           
 10795                           ;display.c: 431: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 10796  0030B8  EC59  F03C         	call	_bootloader_get_total_entries	;wreg free
 10797  0030BC  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 10798  0030C0  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 10799  0030C4  6A1B               	clrf	__display_itoa_u16@value+2,c
 10800  0030C6  6A1C               	clrf	__display_itoa_u16@value+3,c
 10801  0030C8  501F               	movf	__display_programming@cntr,w,c
 10802  0030CA  0D01               	mullw	1
 10803  0030CC  0E8C               	movlw	low (_display_content+40)
 10804  0030CE  24F3               	addwf	prodl,w,c
 10805  0030D0  6E1D               	movwf	__display_itoa_u16@text,c
 10806  0030D2  0E02               	movlw	high (_display_content+40)
 10807  0030D4  20F4               	addwfc	prodh,w,c
 10808  0030D6  6E1E               	movwf	__display_itoa_u16@text+1,c
 10809  0030D8  EC91  F029         	call	__display_itoa_u16	;wreg free
 10810                           
 10811                           ;display.c: 433: cntr = 0;
 10812  0030DC  0E00               	movlw	0
 10813  0030DE  6E1F               	movwf	__display_programming@cntr,c
 10814                           
 10815                           ;display.c: 434: while(programming_line4[cntr])
 10816  0030E0  D017               	goto	l13633
 10817  0030E2                     l13629:
 10818                           
 10819                           ;display.c: 435: display_content[3][cntr] = programming_line4[cntr++];
 10820  0030E2  501F               	movf	__display_programming@cntr,w,c
 10821  0030E4  0D01               	mullw	1
 10822  0030E6  0EC9               	movlw	low _programming_line4
 10823  0030E8  24F3               	addwf	prodl,w,c
 10824  0030EA  6EF6               	movwf	tblptrl,c
 10825  0030EC  0E8D               	movlw	high _programming_line4
 10826  0030EE  20F4               	addwfc	prodh,w,c
 10827  0030F0  6EF7               	movwf	tblptrh,c
 10828  0030F2                     	if	1	;There are 3 active tblptr bytes
 10829  0030F2  6AF8               	clrf	tblptru,c
 10830  0030F4  0E00               	movlw	low (__mediumconst shr (0+16))
 10831  0030F6  22F8               	addwfc	tblptru,f,c
 10832  0030F8                     	endif
 10833  0030F8  501F               	movf	__display_programming@cntr,w,c
 10834  0030FA  0D01               	mullw	1
 10835  0030FC  0EA0               	movlw	low (_display_content+60)
 10836  0030FE  24F3               	addwf	prodl,w,c
 10837  003100  6ED9               	movwf	fsr2l,c
 10838  003102  0E02               	movlw	high (_display_content+60)
 10839  003104  20F4               	addwfc	prodh,w,c
 10840  003106  6EDA               	movwf	fsr2h,c
 10841  003108  0008               	tblrd		*
 10842  00310A  CFF5 FFDF          	movff	tablat,indf2
 10843  00310E  2A1F               	incf	__display_programming@cntr,f,c
 10844  003110                     l13633:
 10845  003110  501F               	movf	__display_programming@cntr,w,c
 10846  003112  0D01               	mullw	1
 10847  003114  0EC9               	movlw	low _programming_line4
 10848  003116  24F3               	addwf	prodl,w,c
 10849  003118  6EF6               	movwf	tblptrl,c
 10850  00311A  0E8D               	movlw	high _programming_line4
 10851  00311C  20F4               	addwfc	prodh,w,c
 10852  00311E  6EF7               	movwf	tblptrh,c
 10853  003120                     	if	1	;There are 3 active tblptr bytes
 10854  003120  6AF8               	clrf	tblptru,c
 10855  003122  0E00               	movlw	low (__mediumconst shr (0+16))
 10856  003124  22F8               	addwfc	tblptru,f,c
 10857  003126                     	endif
 10858  003126  0008               	tblrd		*
 10859  003128  50F5               	movf	tablat,w,c
 10860  00312A  0900               	iorlw	0
 10861  00312C  A4D8               	btfss	status,2,c
 10862  00312E  D7D9               	goto	l13629
 10863                           
 10864                           ;display.c: 436: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 10865  003130  EC4F  F03C         	call	_bootloader_get_flashPagesWritten	;wreg free
 10866  003134  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 10867  003138  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 10868  00313C  6A1B               	clrf	__display_itoa_u16@value+2,c
 10869  00313E  6A1C               	clrf	__display_itoa_u16@value+3,c
 10870  003140  501F               	movf	__display_programming@cntr,w,c
 10871  003142  0D01               	mullw	1
 10872  003144  0EA0               	movlw	low (_display_content+60)
 10873  003146  24F3               	addwf	prodl,w,c
 10874  003148  6E1D               	movwf	__display_itoa_u16@text,c
 10875  00314A  0E02               	movlw	high (_display_content+60)
 10876  00314C  20F4               	addwfc	prodh,w,c
 10877  00314E  6E1E               	movwf	__display_itoa_u16@text+1,c
 10878  003150  EC91  F029         	call	__display_itoa_u16	;wreg free
 10879  003154  0012               	return		;funcret
 10880  003156                     __end_of__display_programming:
 10881                           	opt stack 0
 10882                           tblptru	equ	0xFF8
 10883                           tblptrh	equ	0xFF7
 10884                           tblptrl	equ	0xFF6
 10885                           tablat	equ	0xFF5
 10886                           prodh	equ	0xFF4
 10887                           prodl	equ	0xFF3
 10888                           intcon	equ	0xFF2
 10889                           intcon2	equ	0xFF1
 10890                           intcon3	equ	0xFF0
 10891                           postinc0	equ	0xFEE
 10892                           wreg	equ	0xFE8
 10893                           indf1	equ	0xFE7
 10894                           postdec1	equ	0xFE5
 10895                           plusw1	equ	0xFE3
 10896                           fsr1h	equ	0xFE2
 10897                           fsr1l	equ	0xFE1
 10898                           indf2	equ	0xFDF
 10899                           postinc2	equ	0xFDE
 10900                           postdec2	equ	0xFDD
 10901                           plusw2	equ	0xFDB
 10902                           fsr2h	equ	0xFDA
 10903                           fsr2l	equ	0xFD9
 10904                           status	equ	0xFD8
 10905                           
 10906 ;; *************** function __display_found *****************
 10907 ;; Defined at:
 10908 ;;		line 300 in file "display.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  cntr            1   39[COMRAM] unsigned char 
 10913 ;;  start           1   38[COMRAM] unsigned char 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;Total ram usage:        4 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    5
 10930 ;; This function calls:
 10931 ;;		__display_itoa_u32
 10932 ;;		_bootloader_get_file_size
 10933 ;; This function is called by:
 10934 ;;		_display_prepare
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text45
 10939  002DA2                     __ptext45:
 10940                           	opt stack 0
 10941  002DA2                     __display_found:
 10942                           	opt stack 24
 10943                           
 10944                           ;display.c: 302: uint8_t cntr;
 10945                           ;display.c: 303: uint8_t start;
 10946                           ;display.c: 305: cntr = 0;
 10947                           
 10948                           ;incstack = 0
 10949  002DA2  0E00               	movlw	0
 10950  002DA4  6E28               	movwf	__display_found@cntr,c
 10951                           
 10952                           ;display.c: 306: while(found_line1[cntr])
 10953  002DA6  D017               	goto	l13433
 10954  002DA8                     l13429:
 10955                           
 10956                           ;display.c: 307: display_content[0][cntr] = found_line1[cntr++];
 10957  002DA8  5028               	movf	__display_found@cntr,w,c
 10958  002DAA  0D01               	mullw	1
 10959  002DAC  0E19               	movlw	low _found_line1
 10960  002DAE  24F3               	addwf	prodl,w,c
 10961  002DB0  6EF6               	movwf	tblptrl,c
 10962  002DB2  0E8E               	movlw	high _found_line1
 10963  002DB4  20F4               	addwfc	prodh,w,c
 10964  002DB6  6EF7               	movwf	tblptrh,c
 10965  002DB8                     	if	1	;There are 3 active tblptr bytes
 10966  002DB8  6AF8               	clrf	tblptru,c
 10967  002DBA  0E00               	movlw	low (__mediumconst shr (0+16))
 10968  002DBC  22F8               	addwfc	tblptru,f,c
 10969  002DBE                     	endif
 10970  002DBE  5028               	movf	__display_found@cntr,w,c
 10971  002DC0  0D01               	mullw	1
 10972  002DC2  0E64               	movlw	low _display_content
 10973  002DC4  24F3               	addwf	prodl,w,c
 10974  002DC6  6ED9               	movwf	fsr2l,c
 10975  002DC8  0E02               	movlw	high _display_content
 10976  002DCA  20F4               	addwfc	prodh,w,c
 10977  002DCC  6EDA               	movwf	fsr2h,c
 10978  002DCE  0008               	tblrd		*
 10979  002DD0  CFF5 FFDF          	movff	tablat,indf2
 10980  002DD4  2A28               	incf	__display_found@cntr,f,c
 10981  002DD6                     l13433:
 10982  002DD6  5028               	movf	__display_found@cntr,w,c
 10983  002DD8  0D01               	mullw	1
 10984  002DDA  0E19               	movlw	low _found_line1
 10985  002DDC  24F3               	addwf	prodl,w,c
 10986  002DDE  6EF6               	movwf	tblptrl,c
 10987  002DE0  0E8E               	movlw	high _found_line1
 10988  002DE2  20F4               	addwfc	prodh,w,c
 10989  002DE4  6EF7               	movwf	tblptrh,c
 10990  002DE6                     	if	1	;There are 3 active tblptr bytes
 10991  002DE6  6AF8               	clrf	tblptru,c
 10992  002DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 10993  002DEA  22F8               	addwfc	tblptru,f,c
 10994  002DEC                     	endif
 10995  002DEC  0008               	tblrd		*
 10996  002DEE  50F5               	movf	tablat,w,c
 10997  002DF0  0900               	iorlw	0
 10998  002DF2  A4D8               	btfss	status,2,c
 10999  002DF4  D7D9               	goto	l13429
 11000                           
 11001                           ;display.c: 309: cntr = 0;
 11002  002DF6  0E00               	movlw	0
 11003  002DF8  6E28               	movwf	__display_found@cntr,c
 11004                           
 11005                           ;display.c: 310: while(found_line2[cntr])
 11006  002DFA  D017               	goto	l13441
 11007  002DFC                     l13437:
 11008                           
 11009                           ;display.c: 311: display_content[1][cntr] = found_line2[cntr++];
 11010  002DFC  5028               	movf	__display_found@cntr,w,c
 11011  002DFE  0D01               	mullw	1
 11012  002E00  0E3D               	movlw	low _found_line2
 11013  002E02  24F3               	addwf	prodl,w,c
 11014  002E04  6EF6               	movwf	tblptrl,c
 11015  002E06  0E8D               	movlw	high _found_line2
 11016  002E08  20F4               	addwfc	prodh,w,c
 11017  002E0A  6EF7               	movwf	tblptrh,c
 11018  002E0C                     	if	1	;There are 3 active tblptr bytes
 11019  002E0C  6AF8               	clrf	tblptru,c
 11020  002E0E  0E00               	movlw	low (__mediumconst shr (0+16))
 11021  002E10  22F8               	addwfc	tblptru,f,c
 11022  002E12                     	endif
 11023  002E12  5028               	movf	__display_found@cntr,w,c
 11024  002E14  0D01               	mullw	1
 11025  002E16  0E78               	movlw	low (_display_content+20)
 11026  002E18  24F3               	addwf	prodl,w,c
 11027  002E1A  6ED9               	movwf	fsr2l,c
 11028  002E1C  0E02               	movlw	high (_display_content+20)
 11029  002E1E  20F4               	addwfc	prodh,w,c
 11030  002E20  6EDA               	movwf	fsr2h,c
 11031  002E22  0008               	tblrd		*
 11032  002E24  CFF5 FFDF          	movff	tablat,indf2
 11033  002E28  2A28               	incf	__display_found@cntr,f,c
 11034  002E2A                     l13441:
 11035  002E2A  5028               	movf	__display_found@cntr,w,c
 11036  002E2C  0D01               	mullw	1
 11037  002E2E  0E3D               	movlw	low _found_line2
 11038  002E30  24F3               	addwf	prodl,w,c
 11039  002E32  6EF6               	movwf	tblptrl,c
 11040  002E34  0E8D               	movlw	high _found_line2
 11041  002E36  20F4               	addwfc	prodh,w,c
 11042  002E38  6EF7               	movwf	tblptrh,c
 11043  002E3A                     	if	1	;There are 3 active tblptr bytes
 11044  002E3A  6AF8               	clrf	tblptru,c
 11045  002E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 11046  002E3E  22F8               	addwfc	tblptru,f,c
 11047  002E40                     	endif
 11048  002E40  0008               	tblrd		*
 11049  002E42  50F5               	movf	tablat,w,c
 11050  002E44  0900               	iorlw	0
 11051  002E46  A4D8               	btfss	status,2,c
 11052  002E48  D7D9               	goto	l13437
 11053                           
 11054                           ;display.c: 313: cntr = 0;
 11055  002E4A  0E00               	movlw	0
 11056  002E4C  6E28               	movwf	__display_found@cntr,c
 11057                           
 11058                           ;display.c: 314: while(found_line3[cntr])
 11059  002E4E  D017               	goto	l13449
 11060  002E50                     l13445:
 11061                           
 11062                           ;display.c: 315: display_content[2][cntr] = found_line3[cntr++];
 11063  002E50  5028               	movf	__display_found@cntr,w,c
 11064  002E52  0D01               	mullw	1
 11065  002E54  0E98               	movlw	low _found_line3
 11066  002E56  24F3               	addwf	prodl,w,c
 11067  002E58  6EF6               	movwf	tblptrl,c
 11068  002E5A  0E8E               	movlw	high _found_line3
 11069  002E5C  20F4               	addwfc	prodh,w,c
 11070  002E5E  6EF7               	movwf	tblptrh,c
 11071  002E60                     	if	1	;There are 3 active tblptr bytes
 11072  002E60  6AF8               	clrf	tblptru,c
 11073  002E62  0E00               	movlw	low (__mediumconst shr (0+16))
 11074  002E64  22F8               	addwfc	tblptru,f,c
 11075  002E66                     	endif
 11076  002E66  5028               	movf	__display_found@cntr,w,c
 11077  002E68  0D01               	mullw	1
 11078  002E6A  0E8C               	movlw	low (_display_content+40)
 11079  002E6C  24F3               	addwf	prodl,w,c
 11080  002E6E  6ED9               	movwf	fsr2l,c
 11081  002E70  0E02               	movlw	high (_display_content+40)
 11082  002E72  20F4               	addwfc	prodh,w,c
 11083  002E74  6EDA               	movwf	fsr2h,c
 11084  002E76  0008               	tblrd		*
 11085  002E78  CFF5 FFDF          	movff	tablat,indf2
 11086  002E7C  2A28               	incf	__display_found@cntr,f,c
 11087  002E7E                     l13449:
 11088  002E7E  5028               	movf	__display_found@cntr,w,c
 11089  002E80  0D01               	mullw	1
 11090  002E82  0E98               	movlw	low _found_line3
 11091  002E84  24F3               	addwf	prodl,w,c
 11092  002E86  6EF6               	movwf	tblptrl,c
 11093  002E88  0E8E               	movlw	high _found_line3
 11094  002E8A  20F4               	addwfc	prodh,w,c
 11095  002E8C  6EF7               	movwf	tblptrh,c
 11096  002E8E                     	if	1	;There are 3 active tblptr bytes
 11097  002E8E  6AF8               	clrf	tblptru,c
 11098  002E90  0E00               	movlw	low (__mediumconst shr (0+16))
 11099  002E92  22F8               	addwfc	tblptru,f,c
 11100  002E94                     	endif
 11101  002E94  0008               	tblrd		*
 11102  002E96  50F5               	movf	tablat,w,c
 11103  002E98  0900               	iorlw	0
 11104  002E9A  A4D8               	btfss	status,2,c
 11105  002E9C  D7D9               	goto	l13445
 11106                           
 11107                           ;display.c: 316: start = cntr;
 11108  002E9E  C028  F027         	movff	__display_found@cntr,__display_found@start
 11109                           
 11110                           ;display.c: 317: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 11111  002EA2  ECFB  F03B         	call	_bootloader_get_file_size	;wreg free
 11112  002EA6  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 11113  002EAA  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 11114  002EAE  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 11115  002EB2  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 11116  002EB6  5028               	movf	__display_found@cntr,w,c
 11117  002EB8  0D01               	mullw	1
 11118  002EBA  0E8C               	movlw	low (_display_content+40)
 11119  002EBC  24F3               	addwf	prodl,w,c
 11120  002EBE  6E23               	movwf	__display_itoa_u32@text,c
 11121  002EC0  0E02               	movlw	high (_display_content+40)
 11122  002EC2  20F4               	addwfc	prodh,w,c
 11123  002EC4  6E24               	movwf	__display_itoa_u32@text+1,c
 11124  002EC6  EC1F  F008         	call	__display_itoa_u32	;wreg free
 11125  002ECA  2627               	addwf	__display_found@start,f,c
 11126                           
 11127                           ;display.c: 318: cntr = 0;
 11128  002ECC  0E00               	movlw	0
 11129  002ECE  6E28               	movwf	__display_found@cntr,c
 11130                           
 11131                           ;display.c: 319: while(found_line3b[cntr])
 11132  002ED0  D01C               	goto	l13459
 11133  002ED2                     l13455:
 11134                           
 11135                           ;display.c: 320: display_content[2][start+cntr] = found_line3b[cntr++];
 11136  002ED2  5028               	movf	__display_found@cntr,w,c
 11137  002ED4  0D01               	mullw	1
 11138  002ED6  0E91               	movlw	low _found_line3b
 11139  002ED8  24F3               	addwf	prodl,w,c
 11140  002EDA  6EF6               	movwf	tblptrl,c
 11141  002EDC  0E8E               	movlw	high _found_line3b
 11142  002EDE  20F4               	addwfc	prodh,w,c
 11143  002EE0  6EF7               	movwf	tblptrh,c
 11144  002EE2                     	if	1	;There are 3 active tblptr bytes
 11145  002EE2  6AF8               	clrf	tblptru,c
 11146  002EE4  0E00               	movlw	low (__mediumconst shr (0+16))
 11147  002EE6  22F8               	addwfc	tblptru,f,c
 11148  002EE8                     	endif
 11149  002EE8  5028               	movf	__display_found@cntr,w,c
 11150  002EEA  C027  F025         	movff	__display_found@start,??__display_found
 11151  002EEE  6A26               	clrf	(??__display_found+1)& (0+255),c
 11152  002EF0  2625               	addwf	??__display_found,f,c
 11153  002EF2  0E00               	movlw	0
 11154  002EF4  2226               	addwfc	??__display_found+1,f,c
 11155  002EF6  0E8C               	movlw	low (_display_content+40)
 11156  002EF8  2425               	addwf	??__display_found,w,c
 11157  002EFA  6ED9               	movwf	fsr2l,c
 11158  002EFC  0E02               	movlw	high (_display_content+40)
 11159  002EFE  2026               	addwfc	??__display_found+1,w,c
 11160  002F00  6EDA               	movwf	fsr2h,c
 11161  002F02  0008               	tblrd		*
 11162  002F04  CFF5 FFDF          	movff	tablat,indf2
 11163  002F08  2A28               	incf	__display_found@cntr,f,c
 11164  002F0A                     l13459:
 11165  002F0A  5028               	movf	__display_found@cntr,w,c
 11166  002F0C  0D01               	mullw	1
 11167  002F0E  0E91               	movlw	low _found_line3b
 11168  002F10  24F3               	addwf	prodl,w,c
 11169  002F12  6EF6               	movwf	tblptrl,c
 11170  002F14  0E8E               	movlw	high _found_line3b
 11171  002F16  20F4               	addwfc	prodh,w,c
 11172  002F18  6EF7               	movwf	tblptrh,c
 11173  002F1A                     	if	1	;There are 3 active tblptr bytes
 11174  002F1A  6AF8               	clrf	tblptru,c
 11175  002F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 11176  002F1E  22F8               	addwfc	tblptru,f,c
 11177  002F20                     	endif
 11178  002F20  0008               	tblrd		*
 11179  002F22  50F5               	movf	tablat,w,c
 11180  002F24  0900               	iorlw	0
 11181  002F26  A4D8               	btfss	status,2,c
 11182  002F28  D7D4               	goto	l13455
 11183                           
 11184                           ;display.c: 322: cntr = 0;
 11185  002F2A  0E00               	movlw	0
 11186  002F2C  6E28               	movwf	__display_found@cntr,c
 11187                           
 11188                           ;display.c: 323: while(found_line4[cntr])
 11189  002F2E  D017               	goto	l13467
 11190  002F30                     l13463:
 11191                           
 11192                           ;display.c: 324: display_content[3][cntr] = found_line4[cntr++];
 11193  002F30  5028               	movf	__display_found@cntr,w,c
 11194  002F32  0D01               	mullw	1
 11195  002F34  0E74               	movlw	low _found_line4
 11196  002F36  24F3               	addwf	prodl,w,c
 11197  002F38  6EF6               	movwf	tblptrl,c
 11198  002F3A  0E8D               	movlw	high _found_line4
 11199  002F3C  20F4               	addwfc	prodh,w,c
 11200  002F3E  6EF7               	movwf	tblptrh,c
 11201  002F40                     	if	1	;There are 3 active tblptr bytes
 11202  002F40  6AF8               	clrf	tblptru,c
 11203  002F42  0E00               	movlw	low (__mediumconst shr (0+16))
 11204  002F44  22F8               	addwfc	tblptru,f,c
 11205  002F46                     	endif
 11206  002F46  5028               	movf	__display_found@cntr,w,c
 11207  002F48  0D01               	mullw	1
 11208  002F4A  0EA0               	movlw	low (_display_content+60)
 11209  002F4C  24F3               	addwf	prodl,w,c
 11210  002F4E  6ED9               	movwf	fsr2l,c
 11211  002F50  0E02               	movlw	high (_display_content+60)
 11212  002F52  20F4               	addwfc	prodh,w,c
 11213  002F54  6EDA               	movwf	fsr2h,c
 11214  002F56  0008               	tblrd		*
 11215  002F58  CFF5 FFDF          	movff	tablat,indf2
 11216  002F5C  2A28               	incf	__display_found@cntr,f,c
 11217  002F5E                     l13467:
 11218  002F5E  5028               	movf	__display_found@cntr,w,c
 11219  002F60  0D01               	mullw	1
 11220  002F62  0E74               	movlw	low _found_line4
 11221  002F64  24F3               	addwf	prodl,w,c
 11222  002F66  6EF6               	movwf	tblptrl,c
 11223  002F68  0E8D               	movlw	high _found_line4
 11224  002F6A  20F4               	addwfc	prodh,w,c
 11225  002F6C  6EF7               	movwf	tblptrh,c
 11226  002F6E                     	if	1	;There are 3 active tblptr bytes
 11227  002F6E  6AF8               	clrf	tblptru,c
 11228  002F70  0E00               	movlw	low (__mediumconst shr (0+16))
 11229  002F72  22F8               	addwfc	tblptru,f,c
 11230  002F74                     	endif
 11231  002F74  0008               	tblrd		*
 11232  002F76  50F5               	movf	tablat,w,c
 11233  002F78  0900               	iorlw	0
 11234  002F7A  B4D8               	btfsc	status,2,c
 11235  002F7C  0012               	return	
 11236  002F7E  D7D8               	goto	l13463
 11237  002F80                     __end_of__display_found:
 11238                           	opt stack 0
 11239                           tblptru	equ	0xFF8
 11240                           tblptrh	equ	0xFF7
 11241                           tblptrl	equ	0xFF6
 11242                           tablat	equ	0xFF5
 11243                           prodh	equ	0xFF4
 11244                           prodl	equ	0xFF3
 11245                           intcon	equ	0xFF2
 11246                           intcon2	equ	0xFF1
 11247                           intcon3	equ	0xFF0
 11248                           postinc0	equ	0xFEE
 11249                           wreg	equ	0xFE8
 11250                           indf1	equ	0xFE7
 11251                           postdec1	equ	0xFE5
 11252                           plusw1	equ	0xFE3
 11253                           fsr1h	equ	0xFE2
 11254                           fsr1l	equ	0xFE1
 11255                           indf2	equ	0xFDF
 11256                           postinc2	equ	0xFDE
 11257                           postdec2	equ	0xFDD
 11258                           plusw2	equ	0xFDB
 11259                           fsr2h	equ	0xFDA
 11260                           fsr2l	equ	0xFD9
 11261                           status	equ	0xFD8
 11262                           
 11263 ;; *************** function _bootloader_get_file_size *****************
 11264 ;; Defined at:
 11265 ;;		line 442 in file "bootloader.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  4    0[COMRAM] unsigned long 
 11272 ;; Registers used:
 11273 ;;		None
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11283 ;;Total ram usage:        4 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		__display_found
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text46
 11293  0077F6                     __ptext46:
 11294                           	opt stack 0
 11295  0077F6                     _bootloader_get_file_size:
 11296                           	opt stack 28
 11297                           
 11298                           ;bootloader.c: 444: return hex_file_size;
 11299                           
 11300                           ;incstack = 0
 11301  0077F6  C143  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 11302  0077FA  C144  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 11303  0077FE  C145  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 11304  007802  C146  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 11305  007806  0012               	return		;funcret
 11306  007808                     __end_of_bootloader_get_file_size:
 11307                           	opt stack 0
 11308                           tblptru	equ	0xFF8
 11309                           tblptrh	equ	0xFF7
 11310                           tblptrl	equ	0xFF6
 11311                           tablat	equ	0xFF5
 11312                           prodh	equ	0xFF4
 11313                           prodl	equ	0xFF3
 11314                           intcon	equ	0xFF2
 11315                           intcon2	equ	0xFF1
 11316                           intcon3	equ	0xFF0
 11317                           postinc0	equ	0xFEE
 11318                           wreg	equ	0xFE8
 11319                           indf1	equ	0xFE7
 11320                           postdec1	equ	0xFE5
 11321                           plusw1	equ	0xFE3
 11322                           fsr1h	equ	0xFE2
 11323                           fsr1l	equ	0xFE1
 11324                           indf2	equ	0xFDF
 11325                           postinc2	equ	0xFDE
 11326                           postdec2	equ	0xFDD
 11327                           plusw2	equ	0xFDB
 11328                           fsr2h	equ	0xFDA
 11329                           fsr2l	equ	0xFD9
 11330                           status	equ	0xFD8
 11331                           
 11332 ;; *************** function __display_failed *****************
 11333 ;; Defined at:
 11334 ;;		line 365 in file "display.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;		None
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;  cntr            1   36[COMRAM] unsigned char 
 11339 ;;  start           1    0        unsigned char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  1    wreg      void 
 11342 ;; Registers used:
 11343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11353 ;;Total ram usage:        1 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    5
 11356 ;; This function calls:
 11357 ;;		__display_itoa_u16
 11358 ;;		__display_itoa_u32
 11359 ;;		_bootloader_get_entries
 11360 ;;		_bootloader_get_error
 11361 ;;		_bootloader_get_rec_address
 11362 ;; This function is called by:
 11363 ;;		_display_prepare
 11364 ;; This function uses a non-reentrant model
 11365 ;;
 11366                           
 11367                           	psect	text47
 11368  0019CE                     __ptext47:
 11369                           	opt stack 0
 11370  0019CE                     __display_failed:
 11371                           	opt stack 24
 11372                           
 11373                           ;display.c: 367: uint8_t cntr;
 11374                           ;display.c: 368: uint8_t start;
 11375                           ;display.c: 369: cntr = 0;
 11376                           
 11377                           ;incstack = 0
 11378  0019CE  0E00               	movlw	0
 11379  0019D0  6E25               	movwf	__display_failed@cntr,c
 11380                           
 11381                           ;display.c: 370: while(failed_line1[cntr])
 11382  0019D2  D017               	goto	l13537
 11383  0019D4                     l13533:
 11384                           
 11385                           ;display.c: 371: display_content[0][cntr] = failed_line1[cntr++];
 11386  0019D4  5025               	movf	__display_failed@cntr,w,c
 11387  0019D6  0D01               	mullw	1
 11388  0019D8  0EE9               	movlw	low _failed_line1
 11389  0019DA  24F3               	addwf	prodl,w,c
 11390  0019DC  6EF6               	movwf	tblptrl,c
 11391  0019DE  0E8D               	movlw	high _failed_line1
 11392  0019E0  20F4               	addwfc	prodh,w,c
 11393  0019E2  6EF7               	movwf	tblptrh,c
 11394  0019E4                     	if	1	;There are 3 active tblptr bytes
 11395  0019E4  6AF8               	clrf	tblptru,c
 11396  0019E6  0E00               	movlw	low (__mediumconst shr (0+16))
 11397  0019E8  22F8               	addwfc	tblptru,f,c
 11398  0019EA                     	endif
 11399  0019EA  5025               	movf	__display_failed@cntr,w,c
 11400  0019EC  0D01               	mullw	1
 11401  0019EE  0E64               	movlw	low _display_content
 11402  0019F0  24F3               	addwf	prodl,w,c
 11403  0019F2  6ED9               	movwf	fsr2l,c
 11404  0019F4  0E02               	movlw	high _display_content
 11405  0019F6  20F4               	addwfc	prodh,w,c
 11406  0019F8  6EDA               	movwf	fsr2h,c
 11407  0019FA  0008               	tblrd		*
 11408  0019FC  CFF5 FFDF          	movff	tablat,indf2
 11409  001A00  2A25               	incf	__display_failed@cntr,f,c
 11410  001A02                     l13537:
 11411  001A02  5025               	movf	__display_failed@cntr,w,c
 11412  001A04  0D01               	mullw	1
 11413  001A06  0EE9               	movlw	low _failed_line1
 11414  001A08  24F3               	addwf	prodl,w,c
 11415  001A0A  6EF6               	movwf	tblptrl,c
 11416  001A0C  0E8D               	movlw	high _failed_line1
 11417  001A0E  20F4               	addwfc	prodh,w,c
 11418  001A10  6EF7               	movwf	tblptrh,c
 11419  001A12                     	if	1	;There are 3 active tblptr bytes
 11420  001A12  6AF8               	clrf	tblptru,c
 11421  001A14  0E00               	movlw	low (__mediumconst shr (0+16))
 11422  001A16  22F8               	addwfc	tblptru,f,c
 11423  001A18                     	endif
 11424  001A18  0008               	tblrd		*
 11425  001A1A  50F5               	movf	tablat,w,c
 11426  001A1C  0900               	iorlw	0
 11427  001A1E  A4D8               	btfss	status,2,c
 11428  001A20  D7D9               	goto	l13533
 11429                           
 11430                           ;display.c: 372: cntr = 0;
 11431  001A22  0E00               	movlw	0
 11432  001A24  6E25               	movwf	__display_failed@cntr,c
 11433                           
 11434                           ;display.c: 373: while(failed_line2[cntr])
 11435  001A26  D017               	goto	l13545
 11436  001A28                     l13541:
 11437                           
 11438                           ;display.c: 374: display_content[1][cntr] = failed_line2[cntr++];
 11439  001A28  5025               	movf	__display_failed@cntr,w,c
 11440  001A2A  0D01               	mullw	1
 11441  001A2C  0E62               	movlw	low _failed_line2
 11442  001A2E  24F3               	addwf	prodl,w,c
 11443  001A30  6EF6               	movwf	tblptrl,c
 11444  001A32  0E8D               	movlw	high _failed_line2
 11445  001A34  20F4               	addwfc	prodh,w,c
 11446  001A36  6EF7               	movwf	tblptrh,c
 11447  001A38                     	if	1	;There are 3 active tblptr bytes
 11448  001A38  6AF8               	clrf	tblptru,c
 11449  001A3A  0E00               	movlw	low (__mediumconst shr (0+16))
 11450  001A3C  22F8               	addwfc	tblptru,f,c
 11451  001A3E                     	endif
 11452  001A3E  5025               	movf	__display_failed@cntr,w,c
 11453  001A40  0D01               	mullw	1
 11454  001A42  0E78               	movlw	low (_display_content+20)
 11455  001A44  24F3               	addwf	prodl,w,c
 11456  001A46  6ED9               	movwf	fsr2l,c
 11457  001A48  0E02               	movlw	high (_display_content+20)
 11458  001A4A  20F4               	addwfc	prodh,w,c
 11459  001A4C  6EDA               	movwf	fsr2h,c
 11460  001A4E  0008               	tblrd		*
 11461  001A50  CFF5 FFDF          	movff	tablat,indf2
 11462  001A54  2A25               	incf	__display_failed@cntr,f,c
 11463  001A56                     l13545:
 11464  001A56  5025               	movf	__display_failed@cntr,w,c
 11465  001A58  0D01               	mullw	1
 11466  001A5A  0E62               	movlw	low _failed_line2
 11467  001A5C  24F3               	addwf	prodl,w,c
 11468  001A5E  6EF6               	movwf	tblptrl,c
 11469  001A60  0E8D               	movlw	high _failed_line2
 11470  001A62  20F4               	addwfc	prodh,w,c
 11471  001A64  6EF7               	movwf	tblptrh,c
 11472  001A66                     	if	1	;There are 3 active tblptr bytes
 11473  001A66  6AF8               	clrf	tblptru,c
 11474  001A68  0E00               	movlw	low (__mediumconst shr (0+16))
 11475  001A6A  22F8               	addwfc	tblptru,f,c
 11476  001A6C                     	endif
 11477  001A6C  0008               	tblrd		*
 11478  001A6E  50F5               	movf	tablat,w,c
 11479  001A70  0900               	iorlw	0
 11480  001A72  A4D8               	btfss	status,2,c
 11481  001A74  D7D9               	goto	l13541
 11482                           
 11483                           ;display.c: 376: cntr = 0;
 11484  001A76  0E00               	movlw	0
 11485  001A78  6E25               	movwf	__display_failed@cntr,c
 11486                           
 11487                           ;display.c: 377: switch(bootloader_get_error())
 11488  001A7A  D0D6               	goto	l13583
 11489  001A7C                     l13549:
 11490                           
 11491                           ;display.c: 381: display_content[2][cntr] = failed_line3_startCode[cntr++];
 11492  001A7C  5025               	movf	__display_failed@cntr,w,c
 11493  001A7E  0D01               	mullw	1
 11494  001A80  0E2A               	movlw	low _failed_line3_startCode
 11495  001A82  24F3               	addwf	prodl,w,c
 11496  001A84  6EF6               	movwf	tblptrl,c
 11497  001A86  0E8D               	movlw	high _failed_line3_startCode
 11498  001A88  20F4               	addwfc	prodh,w,c
 11499  001A8A  6EF7               	movwf	tblptrh,c
 11500  001A8C                     	if	1	;There are 3 active tblptr bytes
 11501  001A8C  6AF8               	clrf	tblptru,c
 11502  001A8E  0E00               	movlw	low (__mediumconst shr (0+16))
 11503  001A90  22F8               	addwfc	tblptru,f,c
 11504  001A92                     	endif
 11505  001A92  5025               	movf	__display_failed@cntr,w,c
 11506  001A94  0D01               	mullw	1
 11507  001A96  0E8C               	movlw	low (_display_content+40)
 11508  001A98  24F3               	addwf	prodl,w,c
 11509  001A9A  6ED9               	movwf	fsr2l,c
 11510  001A9C  0E02               	movlw	high (_display_content+40)
 11511  001A9E  20F4               	addwfc	prodh,w,c
 11512  001AA0  6EDA               	movwf	fsr2h,c
 11513  001AA2  0008               	tblrd		*
 11514  001AA4  CFF5 FFDF          	movff	tablat,indf2
 11515  001AA8  2A25               	incf	__display_failed@cntr,f,c
 11516  001AAA                     l13553:
 11517  001AAA  5025               	movf	__display_failed@cntr,w,c
 11518  001AAC  0D01               	mullw	1
 11519  001AAE  0E2A               	movlw	low _failed_line3_startCode
 11520  001AB0  24F3               	addwf	prodl,w,c
 11521  001AB2  6EF6               	movwf	tblptrl,c
 11522  001AB4  0E8D               	movlw	high _failed_line3_startCode
 11523  001AB6  20F4               	addwfc	prodh,w,c
 11524  001AB8  6EF7               	movwf	tblptrh,c
 11525  001ABA                     	if	1	;There are 3 active tblptr bytes
 11526  001ABA  6AF8               	clrf	tblptru,c
 11527  001ABC  0E00               	movlw	low (__mediumconst shr (0+16))
 11528  001ABE  22F8               	addwfc	tblptru,f,c
 11529  001AC0                     	endif
 11530  001AC0  0008               	tblrd		*
 11531  001AC2  50F5               	movf	tablat,w,c
 11532  001AC4  0900               	iorlw	0
 11533  001AC6  B4D8               	btfsc	status,2,c
 11534  001AC8  D0C0               	goto	l13585
 11535  001ACA  D7D8               	goto	l13549
 11536  001ACC                     l13555:
 11537                           
 11538                           ;display.c: 386: display_content[2][cntr] = failed_line3_checksum[cntr++];
 11539  001ACC  5025               	movf	__display_failed@cntr,w,c
 11540  001ACE  0D01               	mullw	1
 11541  001AD0  0E29               	movlw	low _failed_line3_checksum
 11542  001AD2  24F3               	addwf	prodl,w,c
 11543  001AD4  6EF6               	movwf	tblptrl,c
 11544  001AD6  0E8E               	movlw	high _failed_line3_checksum
 11545  001AD8  20F4               	addwfc	prodh,w,c
 11546  001ADA  6EF7               	movwf	tblptrh,c
 11547  001ADC                     	if	1	;There are 3 active tblptr bytes
 11548  001ADC  6AF8               	clrf	tblptru,c
 11549  001ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 11550  001AE0  22F8               	addwfc	tblptru,f,c
 11551  001AE2                     	endif
 11552  001AE2  5025               	movf	__display_failed@cntr,w,c
 11553  001AE4  0D01               	mullw	1
 11554  001AE6  0E8C               	movlw	low (_display_content+40)
 11555  001AE8  24F3               	addwf	prodl,w,c
 11556  001AEA  6ED9               	movwf	fsr2l,c
 11557  001AEC  0E02               	movlw	high (_display_content+40)
 11558  001AEE  20F4               	addwfc	prodh,w,c
 11559  001AF0  6EDA               	movwf	fsr2h,c
 11560  001AF2  0008               	tblrd		*
 11561  001AF4  CFF5 FFDF          	movff	tablat,indf2
 11562  001AF8  2A25               	incf	__display_failed@cntr,f,c
 11563  001AFA                     l13559:
 11564  001AFA  5025               	movf	__display_failed@cntr,w,c
 11565  001AFC  0D01               	mullw	1
 11566  001AFE  0E29               	movlw	low _failed_line3_checksum
 11567  001B00  24F3               	addwf	prodl,w,c
 11568  001B02  6EF6               	movwf	tblptrl,c
 11569  001B04  0E8E               	movlw	high _failed_line3_checksum
 11570  001B06  20F4               	addwfc	prodh,w,c
 11571  001B08  6EF7               	movwf	tblptrh,c
 11572  001B0A                     	if	1	;There are 3 active tblptr bytes
 11573  001B0A  6AF8               	clrf	tblptru,c
 11574  001B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11575  001B0E  22F8               	addwfc	tblptru,f,c
 11576  001B10                     	endif
 11577  001B10  0008               	tblrd		*
 11578  001B12  50F5               	movf	tablat,w,c
 11579  001B14  0900               	iorlw	0
 11580  001B16  B4D8               	btfsc	status,2,c
 11581  001B18  D098               	goto	l13585
 11582  001B1A  D7D8               	goto	l13555
 11583  001B1C                     l13561:
 11584                           
 11585                           ;display.c: 393: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 11586  001B1C  5025               	movf	__display_failed@cntr,w,c
 11587  001B1E  0D01               	mullw	1
 11588  001B20  0E38               	movlw	low _failed_line3_noNextRecord
 11589  001B22  24F3               	addwf	prodl,w,c
 11590  001B24  6EF6               	movwf	tblptrl,c
 11591  001B26  0E8E               	movlw	high _failed_line3_noNextRecord
 11592  001B28  20F4               	addwfc	prodh,w,c
 11593  001B2A  6EF7               	movwf	tblptrh,c
 11594  001B2C                     	if	1	;There are 3 active tblptr bytes
 11595  001B2C  6AF8               	clrf	tblptru,c
 11596  001B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 11597  001B30  22F8               	addwfc	tblptru,f,c
 11598  001B32                     	endif
 11599  001B32  5025               	movf	__display_failed@cntr,w,c
 11600  001B34  0D01               	mullw	1
 11601  001B36  0E8C               	movlw	low (_display_content+40)
 11602  001B38  24F3               	addwf	prodl,w,c
 11603  001B3A  6ED9               	movwf	fsr2l,c
 11604  001B3C  0E02               	movlw	high (_display_content+40)
 11605  001B3E  20F4               	addwfc	prodh,w,c
 11606  001B40  6EDA               	movwf	fsr2h,c
 11607  001B42  0008               	tblrd		*
 11608  001B44  CFF5 FFDF          	movff	tablat,indf2
 11609  001B48  2A25               	incf	__display_failed@cntr,f,c
 11610  001B4A                     l13565:
 11611  001B4A  5025               	movf	__display_failed@cntr,w,c
 11612  001B4C  0D01               	mullw	1
 11613  001B4E  0E38               	movlw	low _failed_line3_noNextRecord
 11614  001B50  24F3               	addwf	prodl,w,c
 11615  001B52  6EF6               	movwf	tblptrl,c
 11616  001B54  0E8E               	movlw	high _failed_line3_noNextRecord
 11617  001B56  20F4               	addwfc	prodh,w,c
 11618  001B58  6EF7               	movwf	tblptrh,c
 11619  001B5A                     	if	1	;There are 3 active tblptr bytes
 11620  001B5A  6AF8               	clrf	tblptru,c
 11621  001B5C  0E00               	movlw	low (__mediumconst shr (0+16))
 11622  001B5E  22F8               	addwfc	tblptru,f,c
 11623  001B60                     	endif
 11624  001B60  0008               	tblrd		*
 11625  001B62  50F5               	movf	tablat,w,c
 11626  001B64  0900               	iorlw	0
 11627  001B66  B4D8               	btfsc	status,2,c
 11628  001B68  D070               	goto	l13585
 11629  001B6A  D7D8               	goto	l13561
 11630  001B6C                     l13567:
 11631                           
 11632                           ;display.c: 398: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 11633  001B6C  5025               	movf	__display_failed@cntr,w,c
 11634  001B6E  0D01               	mullw	1
 11635  001B70  0E47               	movlw	low _failed_line3_dataTooLong
 11636  001B72  24F3               	addwf	prodl,w,c
 11637  001B74  6EF6               	movwf	tblptrl,c
 11638  001B76  0E8E               	movlw	high _failed_line3_dataTooLong
 11639  001B78  20F4               	addwfc	prodh,w,c
 11640  001B7A  6EF7               	movwf	tblptrh,c
 11641  001B7C                     	if	1	;There are 3 active tblptr bytes
 11642  001B7C  6AF8               	clrf	tblptru,c
 11643  001B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 11644  001B80  22F8               	addwfc	tblptru,f,c
 11645  001B82                     	endif
 11646  001B82  5025               	movf	__display_failed@cntr,w,c
 11647  001B84  0D01               	mullw	1
 11648  001B86  0E8C               	movlw	low (_display_content+40)
 11649  001B88  24F3               	addwf	prodl,w,c
 11650  001B8A  6ED9               	movwf	fsr2l,c
 11651  001B8C  0E02               	movlw	high (_display_content+40)
 11652  001B8E  20F4               	addwfc	prodh,w,c
 11653  001B90  6EDA               	movwf	fsr2h,c
 11654  001B92  0008               	tblrd		*
 11655  001B94  CFF5 FFDF          	movff	tablat,indf2
 11656  001B98  2A25               	incf	__display_failed@cntr,f,c
 11657  001B9A                     l13571:
 11658  001B9A  5025               	movf	__display_failed@cntr,w,c
 11659  001B9C  0D01               	mullw	1
 11660  001B9E  0E47               	movlw	low _failed_line3_dataTooLong
 11661  001BA0  24F3               	addwf	prodl,w,c
 11662  001BA2  6EF6               	movwf	tblptrl,c
 11663  001BA4  0E8E               	movlw	high _failed_line3_dataTooLong
 11664  001BA6  20F4               	addwfc	prodh,w,c
 11665  001BA8  6EF7               	movwf	tblptrh,c
 11666  001BAA                     	if	1	;There are 3 active tblptr bytes
 11667  001BAA  6AF8               	clrf	tblptru,c
 11668  001BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 11669  001BAE  22F8               	addwfc	tblptru,f,c
 11670  001BB0                     	endif
 11671  001BB0  0008               	tblrd		*
 11672  001BB2  50F5               	movf	tablat,w,c
 11673  001BB4  0900               	iorlw	0
 11674  001BB6  B4D8               	btfsc	status,2,c
 11675  001BB8  D048               	goto	l13585
 11676  001BBA  D7D8               	goto	l13567
 11677  001BBC                     l13573:
 11678                           
 11679                           ;display.c: 403: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 11680  001BBC  5025               	movf	__display_failed@cntr,w,c
 11681  001BBE  0D01               	mullw	1
 11682  001BC0  0E02               	movlw	low _failed_line3_addressRange
 11683  001BC2  24F3               	addwf	prodl,w,c
 11684  001BC4  6EF6               	movwf	tblptrl,c
 11685  001BC6  0E8D               	movlw	high _failed_line3_addressRange
 11686  001BC8  20F4               	addwfc	prodh,w,c
 11687  001BCA  6EF7               	movwf	tblptrh,c
 11688  001BCC                     	if	1	;There are 3 active tblptr bytes
 11689  001BCC  6AF8               	clrf	tblptru,c
 11690  001BCE  0E00               	movlw	low (__mediumconst shr (0+16))
 11691  001BD0  22F8               	addwfc	tblptru,f,c
 11692  001BD2                     	endif
 11693  001BD2  5025               	movf	__display_failed@cntr,w,c
 11694  001BD4  0D01               	mullw	1
 11695  001BD6  0E8C               	movlw	low (_display_content+40)
 11696  001BD8  24F3               	addwf	prodl,w,c
 11697  001BDA  6ED9               	movwf	fsr2l,c
 11698  001BDC  0E02               	movlw	high (_display_content+40)
 11699  001BDE  20F4               	addwfc	prodh,w,c
 11700  001BE0  6EDA               	movwf	fsr2h,c
 11701  001BE2  0008               	tblrd		*
 11702  001BE4  CFF5 FFDF          	movff	tablat,indf2
 11703  001BE8  2A25               	incf	__display_failed@cntr,f,c
 11704  001BEA                     l13577:
 11705  001BEA  5025               	movf	__display_failed@cntr,w,c
 11706  001BEC  0D01               	mullw	1
 11707  001BEE  0E02               	movlw	low _failed_line3_addressRange
 11708  001BF0  24F3               	addwf	prodl,w,c
 11709  001BF2  6EF6               	movwf	tblptrl,c
 11710  001BF4  0E8D               	movlw	high _failed_line3_addressRange
 11711  001BF6  20F4               	addwfc	prodh,w,c
 11712  001BF8  6EF7               	movwf	tblptrh,c
 11713  001BFA                     	if	1	;There are 3 active tblptr bytes
 11714  001BFA  6AF8               	clrf	tblptru,c
 11715  001BFC  0E00               	movlw	low (__mediumconst shr (0+16))
 11716  001BFE  22F8               	addwfc	tblptru,f,c
 11717  001C00                     	endif
 11718  001C00  0008               	tblrd		*
 11719  001C02  50F5               	movf	tablat,w,c
 11720  001C04  0900               	iorlw	0
 11721  001C06  A4D8               	btfss	status,2,c
 11722  001C08  D7D9               	goto	l13573
 11723                           
 11724                           ;display.c: 404: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 11725  001C0A  EC4A  F03C         	call	_bootloader_get_rec_address	;wreg free
 11726  001C0E  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 11727  001C12  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 11728  001C16  6A21               	clrf	__display_itoa_u32@value+2,c
 11729  001C18  6A22               	clrf	__display_itoa_u32@value+3,c
 11730  001C1A  0EAE               	movlw	low (_display_content+74)
 11731  001C1C  6E23               	movwf	__display_itoa_u32@text,c
 11732  001C1E  0E02               	movlw	high (_display_content+74)
 11733  001C20  6E24               	movwf	__display_itoa_u32@text+1,c
 11734  001C22  EC1F  F008         	call	__display_itoa_u32	;wreg free
 11735                           
 11736                           ;display.c: 407: }
 11737                           
 11738                           ;display.c: 405: break;
 11739  001C26  D011               	goto	l13585
 11740  001C28                     l13583:
 11741  001C28  EC74  F03C         	call	_bootloader_get_error	;wreg free
 11742                           
 11743                           ; Switch size 1, requested type "space"
 11744                           ; Number of cases is 5, Range of values is 11 to 15
 11745                           ; switch strategies available:
 11746                           ; Name         Instructions Cycles
 11747                           ; simple_byte           16     9 (average)
 11748                           ;	Chosen strategy is simple_byte
 11749  001C2C  0A0B               	xorlw	11	; case 11
 11750  001C2E  B4D8               	btfsc	status,2,c
 11751  001C30  D7DC               	goto	l13577
 11752  001C32  0A07               	xorlw	7	; case 12
 11753  001C34  B4D8               	btfsc	status,2,c
 11754  001C36  D7B1               	goto	l13571
 11755  001C38  0A01               	xorlw	1	; case 13
 11756  001C3A  B4D8               	btfsc	status,2,c
 11757  001C3C  D786               	goto	l13565
 11758  001C3E  0A03               	xorlw	3	; case 14
 11759  001C40  B4D8               	btfsc	status,2,c
 11760  001C42  D75B               	goto	l13559
 11761  001C44  0A01               	xorlw	1	; case 15
 11762  001C46  B4D8               	btfsc	status,2,c
 11763  001C48  D730               	goto	l13553
 11764  001C4A                     l13585:
 11765                           
 11766                           ;display.c: 409: cntr = 0;
 11767  001C4A  0E00               	movlw	0
 11768  001C4C  6E25               	movwf	__display_failed@cntr,c
 11769                           
 11770                           ;display.c: 410: while(failed_line4[cntr])
 11771  001C4E  D017               	goto	l13591
 11772  001C50                     l13587:
 11773                           
 11774                           ;display.c: 411: display_content[3][cntr] = failed_line4[cntr++];
 11775  001C50  5025               	movf	__display_failed@cntr,w,c
 11776  001C52  0D01               	mullw	1
 11777  001C54  0E6B               	movlw	low _failed_line4
 11778  001C56  24F3               	addwf	prodl,w,c
 11779  001C58  6EF6               	movwf	tblptrl,c
 11780  001C5A  0E8E               	movlw	high _failed_line4
 11781  001C5C  20F4               	addwfc	prodh,w,c
 11782  001C5E  6EF7               	movwf	tblptrh,c
 11783  001C60                     	if	1	;There are 3 active tblptr bytes
 11784  001C60  6AF8               	clrf	tblptru,c
 11785  001C62  0E00               	movlw	low (__mediumconst shr (0+16))
 11786  001C64  22F8               	addwfc	tblptru,f,c
 11787  001C66                     	endif
 11788  001C66  5025               	movf	__display_failed@cntr,w,c
 11789  001C68  0D01               	mullw	1
 11790  001C6A  0EA0               	movlw	low (_display_content+60)
 11791  001C6C  24F3               	addwf	prodl,w,c
 11792  001C6E  6ED9               	movwf	fsr2l,c
 11793  001C70  0E02               	movlw	high (_display_content+60)
 11794  001C72  20F4               	addwfc	prodh,w,c
 11795  001C74  6EDA               	movwf	fsr2h,c
 11796  001C76  0008               	tblrd		*
 11797  001C78  CFF5 FFDF          	movff	tablat,indf2
 11798  001C7C  2A25               	incf	__display_failed@cntr,f,c
 11799  001C7E                     l13591:
 11800  001C7E  5025               	movf	__display_failed@cntr,w,c
 11801  001C80  0D01               	mullw	1
 11802  001C82  0E6B               	movlw	low _failed_line4
 11803  001C84  24F3               	addwf	prodl,w,c
 11804  001C86  6EF6               	movwf	tblptrl,c
 11805  001C88  0E8E               	movlw	high _failed_line4
 11806  001C8A  20F4               	addwfc	prodh,w,c
 11807  001C8C  6EF7               	movwf	tblptrh,c
 11808  001C8E                     	if	1	;There are 3 active tblptr bytes
 11809  001C8E  6AF8               	clrf	tblptru,c
 11810  001C90  0E00               	movlw	low (__mediumconst shr (0+16))
 11811  001C92  22F8               	addwfc	tblptru,f,c
 11812  001C94                     	endif
 11813  001C94  0008               	tblrd		*
 11814  001C96  50F5               	movf	tablat,w,c
 11815  001C98  0900               	iorlw	0
 11816  001C9A  A4D8               	btfss	status,2,c
 11817  001C9C  D7D9               	goto	l13587
 11818                           
 11819                           ;display.c: 412: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 11820  001C9E  EC54  F03C         	call	_bootloader_get_entries	;wreg free
 11821  001CA2  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 11822  001CA6  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 11823  001CAA  6A1B               	clrf	__display_itoa_u16@value+2,c
 11824  001CAC  6A1C               	clrf	__display_itoa_u16@value+3,c
 11825  001CAE  5025               	movf	__display_failed@cntr,w,c
 11826  001CB0  0D01               	mullw	1
 11827  001CB2  0EA0               	movlw	low (_display_content+60)
 11828  001CB4  24F3               	addwf	prodl,w,c
 11829  001CB6  6E1D               	movwf	__display_itoa_u16@text,c
 11830  001CB8  0E02               	movlw	high (_display_content+60)
 11831  001CBA  20F4               	addwfc	prodh,w,c
 11832  001CBC  6E1E               	movwf	__display_itoa_u16@text+1,c
 11833  001CBE  EC91  F029         	call	__display_itoa_u16	;wreg free
 11834  001CC2  0012               	return		;funcret
 11835  001CC4                     __end_of__display_failed:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           intcon2	equ	0xFF1
 11845                           intcon3	equ	0xFF0
 11846                           postinc0	equ	0xFEE
 11847                           wreg	equ	0xFE8
 11848                           indf1	equ	0xFE7
 11849                           postdec1	equ	0xFE5
 11850                           plusw1	equ	0xFE3
 11851                           fsr1h	equ	0xFE2
 11852                           fsr1l	equ	0xFE1
 11853                           indf2	equ	0xFDF
 11854                           postinc2	equ	0xFDE
 11855                           postdec2	equ	0xFDD
 11856                           plusw2	equ	0xFDB
 11857                           fsr2h	equ	0xFDA
 11858                           fsr2l	equ	0xFD9
 11859                           status	equ	0xFD8
 11860                           
 11861 ;; *************** function _bootloader_get_rec_address *****************
 11862 ;; Defined at:
 11863 ;;		line 467 in file "bootloader.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;		None
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;		None
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  2    0[COMRAM] unsigned int 
 11870 ;; Registers used:
 11871 ;;		None
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11881 ;;Total ram usage:        2 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		__display_failed
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text48
 11891  007894                     __ptext48:
 11892                           	opt stack 0
 11893  007894                     _bootloader_get_rec_address:
 11894                           	opt stack 28
 11895                           
 11896                           ;bootloader.c: 470: return hex_file_entry.address;
 11897                           
 11898                           ;incstack = 0
 11899  007894  C19A  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 11900  007898  C19B  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 11901  00789C  0012               	return		;funcret
 11902  00789E                     __end_of_bootloader_get_rec_address:
 11903                           	opt stack 0
 11904                           tblptru	equ	0xFF8
 11905                           tblptrh	equ	0xFF7
 11906                           tblptrl	equ	0xFF6
 11907                           tablat	equ	0xFF5
 11908                           prodh	equ	0xFF4
 11909                           prodl	equ	0xFF3
 11910                           intcon	equ	0xFF2
 11911                           intcon2	equ	0xFF1
 11912                           intcon3	equ	0xFF0
 11913                           postinc0	equ	0xFEE
 11914                           wreg	equ	0xFE8
 11915                           indf1	equ	0xFE7
 11916                           postdec1	equ	0xFE5
 11917                           plusw1	equ	0xFE3
 11918                           fsr1h	equ	0xFE2
 11919                           fsr1l	equ	0xFE1
 11920                           indf2	equ	0xFDF
 11921                           postinc2	equ	0xFDE
 11922                           postdec2	equ	0xFDD
 11923                           plusw2	equ	0xFDB
 11924                           fsr2h	equ	0xFDA
 11925                           fsr2l	equ	0xFD9
 11926                           status	equ	0xFD8
 11927                           
 11928 ;; *************** function _bootloader_get_error *****************
 11929 ;; Defined at:
 11930 ;;		line 457 in file "bootloader.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      enum E8594
 11937 ;; Registers used:
 11938 ;;		wreg, status,2
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; This function calls:
 11951 ;;		Nothing
 11952 ;; This function is called by:
 11953 ;;		__display_failed
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text49
 11958  0078E8                     __ptext49:
 11959                           	opt stack 0
 11960  0078E8                     _bootloader_get_error:
 11961                           	opt stack 28
 11962                           
 11963                           ;bootloader.c: 459: return last_error;
 11964                           
 11965                           ;incstack = 0
 11966  0078E8  0101               	movlb	1	; () banked
 11967  0078EA  5181               	movf	_last_error& (0+255),w,b
 11968  0078EC  0012               	return	
 11969  0078EE                     __end_of_bootloader_get_error:
 11970                           	opt stack 0
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodh	equ	0xFF4
 11976                           prodl	equ	0xFF3
 11977                           intcon	equ	0xFF2
 11978                           intcon2	equ	0xFF1
 11979                           intcon3	equ	0xFF0
 11980                           postinc0	equ	0xFEE
 11981                           wreg	equ	0xFE8
 11982                           indf1	equ	0xFE7
 11983                           postdec1	equ	0xFE5
 11984                           plusw1	equ	0xFE3
 11985                           fsr1h	equ	0xFE2
 11986                           fsr1l	equ	0xFE1
 11987                           indf2	equ	0xFDF
 11988                           postinc2	equ	0xFDE
 11989                           postdec2	equ	0xFDD
 11990                           plusw2	equ	0xFDB
 11991                           fsr2h	equ	0xFDA
 11992                           fsr2l	equ	0xFD9
 11993                           status	equ	0xFD8
 11994                           
 11995 ;; *************** function __display_itoa_u32 *****************
 11996 ;; Defined at:
 11997 ;;		line 107 in file "display.c"
 11998 ;; Parameters:    Size  Location     Type
 11999 ;;  value           4   30[COMRAM] unsigned long 
 12000 ;;  text            2   34[COMRAM] PTR unsigned char 
 12001 ;;		 -> display_content(80), 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;		None
 12004 ;; Return value:  Size  Location     Type
 12005 ;;                  1    wreg      unsigned char 
 12006 ;; Registers used:
 12007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12008 ;; Tracked objects:
 12009 ;;		On entry : 0/0
 12010 ;;		On exit  : 0/0
 12011 ;;		Unchanged: 0/0
 12012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12013 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;Total ram usage:        6 bytes
 12018 ;; Hardware stack levels used:    1
 12019 ;; Hardware stack levels required when called:    4
 12020 ;; This function calls:
 12021 ;;		___lldiv
 12022 ;;		___llmod
 12023 ;;		__display_itoa_u16
 12024 ;;		_itoa
 12025 ;; This function is called by:
 12026 ;;		__display_found
 12027 ;;		__display_failed
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text50
 12032  00103E                     __ptext50:
 12033                           	opt stack 0
 12034  00103E                     __display_itoa_u32:
 12035                           	opt stack 24
 12036                           
 12037                           ;display.c: 110: if(value<=0x7FFF)
 12038                           
 12039                           ; BSR set to: 1
 12040                           ;incstack = 0
 12041  00103E  5022               	movf	__display_itoa_u32@value+3,w,c
 12042  001040  1021               	iorwf	__display_itoa_u32@value+2,w,c
 12043  001042  E111               	bnz	l12137
 12044  001044  0E80               	movlw	128
 12045  001046  5C20               	subwf	__display_itoa_u32@value+1,w,c
 12046  001048  B0D8               	btfsc	status,0,c
 12047  00104A  D00D               	goto	l12137
 12048                           
 12049                           ;display.c: 111: {
 12050                           ;display.c: 112: return _display_itoa_u16((uint16_t) value, text);
 12051  00104C  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 12052  001050  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 12053  001054  6A1B               	clrf	__display_itoa_u16@value+2,c
 12054  001056  6A1C               	clrf	__display_itoa_u16@value+3,c
 12055  001058  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 12056  00105C  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 12057  001060  EC91  F029         	call	__display_itoa_u16	;wreg free
 12058  001064  0012               	return	
 12059  001066                     l12137:
 12060                           
 12061                           ;display.c: 113: }
 12062                           ;display.c: 116: if(value>100000000)
 12063  001066  041F               	decf	__display_itoa_u32@value,w,c
 12064  001068  0EE1               	movlw	225
 12065  00106A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12066  00106C  0EF5               	movlw	245
 12067  00106E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12068  001070  0E05               	movlw	5
 12069  001072  5822               	subwfb	__display_itoa_u32@value+3,w,c
 12070  001074  A0D8               	btfss	status,0,c
 12071  001076  D04C               	goto	l12149
 12072                           
 12073                           ;display.c: 117: {
 12074                           ;display.c: 118: itoa(text, (uint16_t)(value/10000), 10);
 12075  001078  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12076  00107C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12077  001080  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12078  001084  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12079  001088  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12080  00108C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12081  001090  0E10               	movlw	16
 12082  001092  6E05               	movwf	___lldiv@divisor,c
 12083  001094  0E27               	movlw	39
 12084  001096  6E06               	movwf	___lldiv@divisor+1,c
 12085  001098  0E00               	movlw	0
 12086  00109A  6E07               	movwf	___lldiv@divisor+2,c
 12087  00109C  0E00               	movlw	0
 12088  00109E  6E08               	movwf	___lldiv@divisor+3,c
 12089  0010A0  EC22  F030         	call	___lldiv	;wreg free
 12090  0010A4  C001  F013         	movff	?___lldiv,itoa@val
 12091  0010A8  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12092  0010AC  0E00               	movlw	0
 12093  0010AE  6E16               	movwf	itoa@base+1,c
 12094  0010B0  0E0A               	movlw	10
 12095  0010B2  6E15               	movwf	itoa@base,c
 12096  0010B4  ECC4  F037         	call	_itoa	;wreg free
 12097                           
 12098                           ;display.c: 119: itoa(text+5, (uint16_t)(value%10000), 10);
 12099  0010B8  0E05               	movlw	5
 12100  0010BA  2423               	addwf	__display_itoa_u32@text,w,c
 12101  0010BC  6E11               	movwf	itoa@buf,c
 12102  0010BE  0E00               	movlw	0
 12103  0010C0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12104  0010C2  6E12               	movwf	itoa@buf+1,c
 12105  0010C4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12106  0010C8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12107  0010CC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12108  0010D0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12109  0010D4  0E10               	movlw	16
 12110  0010D6  6E05               	movwf	___llmod@divisor,c
 12111  0010D8  0E27               	movlw	39
 12112  0010DA  6E06               	movwf	___llmod@divisor+1,c
 12113  0010DC  0E00               	movlw	0
 12114  0010DE  6E07               	movwf	___llmod@divisor+2,c
 12115  0010E0  0E00               	movlw	0
 12116  0010E2  6E08               	movwf	___llmod@divisor+3,c
 12117  0010E4  ECE5  F032         	call	___llmod	;wreg free
 12118  0010E8  C001  F013         	movff	?___llmod,itoa@val
 12119  0010EC  C002  F014         	movff	?___llmod+1,itoa@val+1
 12120  0010F0  0E00               	movlw	0
 12121  0010F2  6E16               	movwf	itoa@base+1,c
 12122  0010F4  0E0A               	movlw	10
 12123  0010F6  6E15               	movwf	itoa@base,c
 12124  0010F8  ECC4  F037         	call	_itoa	;wreg free
 12125                           
 12126                           ;display.c: 120: *(text+9) = ' ';
 12127  0010FC  EE20 F009          	lfsr	2,9
 12128  001100  5023               	movf	__display_itoa_u32@text,w,c
 12129  001102  26D9               	addwf	fsr2l,f,c
 12130  001104  5024               	movf	__display_itoa_u32@text+1,w,c
 12131  001106  22DA               	addwfc	fsr2h,f,c
 12132  001108  0E20               	movlw	32
 12133  00110A  6EDF               	movwf	indf2,c
 12134                           
 12135                           ;display.c: 121: return 9;
 12136  00110C  0E09               	movlw	9
 12137                           
 12138                           ;display.c: 122: }
 12139  00110E  0012               	return	
 12140  001110                     l12149:
 12141                           
 12142                           ;display.c: 123: else if(value>10000000)
 12143  001110  5022               	movf	__display_itoa_u32@value+3,w,c
 12144  001112  E108               	bnz	u8910
 12145  001114  0E81               	movlw	129
 12146  001116  5C1F               	subwf	__display_itoa_u32@value,w,c
 12147  001118  0E96               	movlw	150
 12148  00111A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12149  00111C  0E98               	movlw	152
 12150  00111E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12151  001120  A0D8               	btfss	status,0,c
 12152  001122  D04C               	goto	l12161
 12153  001124                     u8910:
 12154                           
 12155                           ;display.c: 124: {
 12156                           ;display.c: 125: itoa(text, (uint16_t)(value/10000), 10);
 12157  001124  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12158  001128  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12159  00112C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12160  001130  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12161  001134  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12162  001138  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12163  00113C  0E10               	movlw	16
 12164  00113E  6E05               	movwf	___lldiv@divisor,c
 12165  001140  0E27               	movlw	39
 12166  001142  6E06               	movwf	___lldiv@divisor+1,c
 12167  001144  0E00               	movlw	0
 12168  001146  6E07               	movwf	___lldiv@divisor+2,c
 12169  001148  0E00               	movlw	0
 12170  00114A  6E08               	movwf	___lldiv@divisor+3,c
 12171  00114C  EC22  F030         	call	___lldiv	;wreg free
 12172  001150  C001  F013         	movff	?___lldiv,itoa@val
 12173  001154  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12174  001158  0E00               	movlw	0
 12175  00115A  6E16               	movwf	itoa@base+1,c
 12176  00115C  0E0A               	movlw	10
 12177  00115E  6E15               	movwf	itoa@base,c
 12178  001160  ECC4  F037         	call	_itoa	;wreg free
 12179                           
 12180                           ;display.c: 126: itoa(text+4, (uint16_t)(value%10000), 10);
 12181  001164  0E04               	movlw	4
 12182  001166  2423               	addwf	__display_itoa_u32@text,w,c
 12183  001168  6E11               	movwf	itoa@buf,c
 12184  00116A  0E00               	movlw	0
 12185  00116C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12186  00116E  6E12               	movwf	itoa@buf+1,c
 12187  001170  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12188  001174  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12189  001178  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12190  00117C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12191  001180  0E10               	movlw	16
 12192  001182  6E05               	movwf	___llmod@divisor,c
 12193  001184  0E27               	movlw	39
 12194  001186  6E06               	movwf	___llmod@divisor+1,c
 12195  001188  0E00               	movlw	0
 12196  00118A  6E07               	movwf	___llmod@divisor+2,c
 12197  00118C  0E00               	movlw	0
 12198  00118E  6E08               	movwf	___llmod@divisor+3,c
 12199  001190  ECE5  F032         	call	___llmod	;wreg free
 12200  001194  C001  F013         	movff	?___llmod,itoa@val
 12201  001198  C002  F014         	movff	?___llmod+1,itoa@val+1
 12202  00119C  0E00               	movlw	0
 12203  00119E  6E16               	movwf	itoa@base+1,c
 12204  0011A0  0E0A               	movlw	10
 12205  0011A2  6E15               	movwf	itoa@base,c
 12206  0011A4  ECC4  F037         	call	_itoa	;wreg free
 12207                           
 12208                           ;display.c: 127: *(text+8) = ' ';
 12209  0011A8  EE20 F008          	lfsr	2,8
 12210  0011AC  5023               	movf	__display_itoa_u32@text,w,c
 12211  0011AE  26D9               	addwf	fsr2l,f,c
 12212  0011B0  5024               	movf	__display_itoa_u32@text+1,w,c
 12213  0011B2  22DA               	addwfc	fsr2h,f,c
 12214  0011B4  0E20               	movlw	32
 12215  0011B6  6EDF               	movwf	indf2,c
 12216                           
 12217                           ;display.c: 128: return 8;
 12218  0011B8  0E08               	movlw	8
 12219                           
 12220                           ;display.c: 129: }
 12221  0011BA  0012               	return	
 12222  0011BC                     l12161:
 12223                           
 12224                           ;display.c: 130: else if(value>1000000)
 12225  0011BC  5022               	movf	__display_itoa_u32@value+3,w,c
 12226  0011BE  E108               	bnz	u8920
 12227  0011C0  0E41               	movlw	65
 12228  0011C2  5C1F               	subwf	__display_itoa_u32@value,w,c
 12229  0011C4  0E42               	movlw	66
 12230  0011C6  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12231  0011C8  0E0F               	movlw	15
 12232  0011CA  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12233  0011CC  A0D8               	btfss	status,0,c
 12234  0011CE  D04C               	goto	l12173
 12235  0011D0                     u8920:
 12236                           
 12237                           ;display.c: 131: {
 12238                           ;display.c: 132: itoa(text, (uint16_t)(value/10000), 10);
 12239  0011D0  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12240  0011D4  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12241  0011D8  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12242  0011DC  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12243  0011E0  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12244  0011E4  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12245  0011E8  0E10               	movlw	16
 12246  0011EA  6E05               	movwf	___lldiv@divisor,c
 12247  0011EC  0E27               	movlw	39
 12248  0011EE  6E06               	movwf	___lldiv@divisor+1,c
 12249  0011F0  0E00               	movlw	0
 12250  0011F2  6E07               	movwf	___lldiv@divisor+2,c
 12251  0011F4  0E00               	movlw	0
 12252  0011F6  6E08               	movwf	___lldiv@divisor+3,c
 12253  0011F8  EC22  F030         	call	___lldiv	;wreg free
 12254  0011FC  C001  F013         	movff	?___lldiv,itoa@val
 12255  001200  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12256  001204  0E00               	movlw	0
 12257  001206  6E16               	movwf	itoa@base+1,c
 12258  001208  0E0A               	movlw	10
 12259  00120A  6E15               	movwf	itoa@base,c
 12260  00120C  ECC4  F037         	call	_itoa	;wreg free
 12261                           
 12262                           ;display.c: 133: itoa(text+3, (uint16_t)(value%10000), 10);
 12263  001210  0E03               	movlw	3
 12264  001212  2423               	addwf	__display_itoa_u32@text,w,c
 12265  001214  6E11               	movwf	itoa@buf,c
 12266  001216  0E00               	movlw	0
 12267  001218  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12268  00121A  6E12               	movwf	itoa@buf+1,c
 12269  00121C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12270  001220  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12271  001224  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12272  001228  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12273  00122C  0E10               	movlw	16
 12274  00122E  6E05               	movwf	___llmod@divisor,c
 12275  001230  0E27               	movlw	39
 12276  001232  6E06               	movwf	___llmod@divisor+1,c
 12277  001234  0E00               	movlw	0
 12278  001236  6E07               	movwf	___llmod@divisor+2,c
 12279  001238  0E00               	movlw	0
 12280  00123A  6E08               	movwf	___llmod@divisor+3,c
 12281  00123C  ECE5  F032         	call	___llmod	;wreg free
 12282  001240  C001  F013         	movff	?___llmod,itoa@val
 12283  001244  C002  F014         	movff	?___llmod+1,itoa@val+1
 12284  001248  0E00               	movlw	0
 12285  00124A  6E16               	movwf	itoa@base+1,c
 12286  00124C  0E0A               	movlw	10
 12287  00124E  6E15               	movwf	itoa@base,c
 12288  001250  ECC4  F037         	call	_itoa	;wreg free
 12289                           
 12290                           ;display.c: 134: *(text+7) = ' ';
 12291  001254  EE20 F007          	lfsr	2,7
 12292  001258  5023               	movf	__display_itoa_u32@text,w,c
 12293  00125A  26D9               	addwf	fsr2l,f,c
 12294  00125C  5024               	movf	__display_itoa_u32@text+1,w,c
 12295  00125E  22DA               	addwfc	fsr2h,f,c
 12296  001260  0E20               	movlw	32
 12297  001262  6EDF               	movwf	indf2,c
 12298                           
 12299                           ;display.c: 135: return 7;
 12300  001264  0E07               	movlw	7
 12301                           
 12302                           ;display.c: 136: }
 12303  001266  0012               	return	
 12304  001268                     l12173:
 12305                           
 12306                           ;display.c: 137: else if(value>100000)
 12307  001268  5022               	movf	__display_itoa_u32@value+3,w,c
 12308  00126A  E108               	bnz	u8930
 12309  00126C  0EA1               	movlw	161
 12310  00126E  5C1F               	subwf	__display_itoa_u32@value,w,c
 12311  001270  0E86               	movlw	134
 12312  001272  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12313  001274  0E01               	movlw	1
 12314  001276  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12315  001278  A0D8               	btfss	status,0,c
 12316  00127A  D04C               	goto	l12185
 12317  00127C                     u8930:
 12318                           
 12319                           ;display.c: 138: {
 12320                           ;display.c: 139: itoa(text, (uint16_t)(value/10000), 10);
 12321  00127C  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12322  001280  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12323  001284  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12324  001288  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12325  00128C  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12326  001290  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12327  001294  0E10               	movlw	16
 12328  001296  6E05               	movwf	___lldiv@divisor,c
 12329  001298  0E27               	movlw	39
 12330  00129A  6E06               	movwf	___lldiv@divisor+1,c
 12331  00129C  0E00               	movlw	0
 12332  00129E  6E07               	movwf	___lldiv@divisor+2,c
 12333  0012A0  0E00               	movlw	0
 12334  0012A2  6E08               	movwf	___lldiv@divisor+3,c
 12335  0012A4  EC22  F030         	call	___lldiv	;wreg free
 12336  0012A8  C001  F013         	movff	?___lldiv,itoa@val
 12337  0012AC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12338  0012B0  0E00               	movlw	0
 12339  0012B2  6E16               	movwf	itoa@base+1,c
 12340  0012B4  0E0A               	movlw	10
 12341  0012B6  6E15               	movwf	itoa@base,c
 12342  0012B8  ECC4  F037         	call	_itoa	;wreg free
 12343                           
 12344                           ;display.c: 140: itoa(text+2, (uint16_t)(value%10000), 10);
 12345  0012BC  0E02               	movlw	2
 12346  0012BE  2423               	addwf	__display_itoa_u32@text,w,c
 12347  0012C0  6E11               	movwf	itoa@buf,c
 12348  0012C2  0E00               	movlw	0
 12349  0012C4  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12350  0012C6  6E12               	movwf	itoa@buf+1,c
 12351  0012C8  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12352  0012CC  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12353  0012D0  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12354  0012D4  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12355  0012D8  0E10               	movlw	16
 12356  0012DA  6E05               	movwf	___llmod@divisor,c
 12357  0012DC  0E27               	movlw	39
 12358  0012DE  6E06               	movwf	___llmod@divisor+1,c
 12359  0012E0  0E00               	movlw	0
 12360  0012E2  6E07               	movwf	___llmod@divisor+2,c
 12361  0012E4  0E00               	movlw	0
 12362  0012E6  6E08               	movwf	___llmod@divisor+3,c
 12363  0012E8  ECE5  F032         	call	___llmod	;wreg free
 12364  0012EC  C001  F013         	movff	?___llmod,itoa@val
 12365  0012F0  C002  F014         	movff	?___llmod+1,itoa@val+1
 12366  0012F4  0E00               	movlw	0
 12367  0012F6  6E16               	movwf	itoa@base+1,c
 12368  0012F8  0E0A               	movlw	10
 12369  0012FA  6E15               	movwf	itoa@base,c
 12370  0012FC  ECC4  F037         	call	_itoa	;wreg free
 12371                           
 12372                           ;display.c: 141: *(text+6) = ' ';
 12373  001300  EE20 F006          	lfsr	2,6
 12374  001304  5023               	movf	__display_itoa_u32@text,w,c
 12375  001306  26D9               	addwf	fsr2l,f,c
 12376  001308  5024               	movf	__display_itoa_u32@text+1,w,c
 12377  00130A  22DA               	addwfc	fsr2h,f,c
 12378  00130C  0E20               	movlw	32
 12379  00130E  6EDF               	movwf	indf2,c
 12380                           
 12381                           ;display.c: 142: return 6;
 12382  001310  0E06               	movlw	6
 12383                           
 12384                           ;display.c: 143: }
 12385  001312  0012               	return	
 12386  001314                     l12185:
 12387                           
 12388                           ;display.c: 144: else
 12389                           ;display.c: 145: {
 12390                           ;display.c: 146: itoa(text, (uint16_t)(value/10000), 10);
 12391  001314  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12392  001318  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12393  00131C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12394  001320  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12395  001324  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12396  001328  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12397  00132C  0E10               	movlw	16
 12398  00132E  6E05               	movwf	___lldiv@divisor,c
 12399  001330  0E27               	movlw	39
 12400  001332  6E06               	movwf	___lldiv@divisor+1,c
 12401  001334  0E00               	movlw	0
 12402  001336  6E07               	movwf	___lldiv@divisor+2,c
 12403  001338  0E00               	movlw	0
 12404  00133A  6E08               	movwf	___lldiv@divisor+3,c
 12405  00133C  EC22  F030         	call	___lldiv	;wreg free
 12406  001340  C001  F013         	movff	?___lldiv,itoa@val
 12407  001344  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12408  001348  0E00               	movlw	0
 12409  00134A  6E16               	movwf	itoa@base+1,c
 12410  00134C  0E0A               	movlw	10
 12411  00134E  6E15               	movwf	itoa@base,c
 12412  001350  ECC4  F037         	call	_itoa	;wreg free
 12413                           
 12414                           ;display.c: 147: itoa(text+1, (uint16_t)(value%10000), 10);
 12415  001354  0E01               	movlw	1
 12416  001356  2423               	addwf	__display_itoa_u32@text,w,c
 12417  001358  6E11               	movwf	itoa@buf,c
 12418  00135A  0E00               	movlw	0
 12419  00135C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12420  00135E  6E12               	movwf	itoa@buf+1,c
 12421  001360  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12422  001364  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12423  001368  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12424  00136C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12425  001370  0E10               	movlw	16
 12426  001372  6E05               	movwf	___llmod@divisor,c
 12427  001374  0E27               	movlw	39
 12428  001376  6E06               	movwf	___llmod@divisor+1,c
 12429  001378  0E00               	movlw	0
 12430  00137A  6E07               	movwf	___llmod@divisor+2,c
 12431  00137C  0E00               	movlw	0
 12432  00137E  6E08               	movwf	___llmod@divisor+3,c
 12433  001380  ECE5  F032         	call	___llmod	;wreg free
 12434  001384  C001  F013         	movff	?___llmod,itoa@val
 12435  001388  C002  F014         	movff	?___llmod+1,itoa@val+1
 12436  00138C  0E00               	movlw	0
 12437  00138E  6E16               	movwf	itoa@base+1,c
 12438  001390  0E0A               	movlw	10
 12439  001392  6E15               	movwf	itoa@base,c
 12440  001394  ECC4  F037         	call	_itoa	;wreg free
 12441                           
 12442                           ;display.c: 148: *(text+5) = ' ';
 12443  001398  EE20 F005          	lfsr	2,5
 12444  00139C  5023               	movf	__display_itoa_u32@text,w,c
 12445  00139E  26D9               	addwf	fsr2l,f,c
 12446  0013A0  5024               	movf	__display_itoa_u32@text+1,w,c
 12447  0013A2  22DA               	addwfc	fsr2h,f,c
 12448  0013A4  0E20               	movlw	32
 12449  0013A6  6EDF               	movwf	indf2,c
 12450                           
 12451                           ;display.c: 149: return 5;
 12452  0013A8  0E05               	movlw	5
 12453  0013AA  0012               	return	
 12454  0013AC                     __end_of__display_itoa_u32:
 12455                           	opt stack 0
 12456                           tblptru	equ	0xFF8
 12457                           tblptrh	equ	0xFF7
 12458                           tblptrl	equ	0xFF6
 12459                           tablat	equ	0xFF5
 12460                           prodh	equ	0xFF4
 12461                           prodl	equ	0xFF3
 12462                           intcon	equ	0xFF2
 12463                           intcon2	equ	0xFF1
 12464                           intcon3	equ	0xFF0
 12465                           postinc0	equ	0xFEE
 12466                           wreg	equ	0xFE8
 12467                           indf1	equ	0xFE7
 12468                           postdec1	equ	0xFE5
 12469                           plusw1	equ	0xFE3
 12470                           fsr1h	equ	0xFE2
 12471                           fsr1l	equ	0xFE1
 12472                           indf2	equ	0xFDF
 12473                           postinc2	equ	0xFDE
 12474                           postdec2	equ	0xFDD
 12475                           plusw2	equ	0xFDB
 12476                           fsr2h	equ	0xFDA
 12477                           fsr2l	equ	0xFD9
 12478                           status	equ	0xFD8
 12479                           
 12480 ;; *************** function ___llmod *****************
 12481 ;; Defined at:
 12482 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  dividend        4    0[COMRAM] unsigned long 
 12485 ;;  divisor         4    4[COMRAM] unsigned long 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;  counter         1    8[COMRAM] unsigned char 
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  4    0[COMRAM] unsigned long 
 12490 ;; Registers used:
 12491 ;;		wreg, status,2, status,0
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12497 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12500 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12501 ;;Total ram usage:        9 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; This function calls:
 12504 ;;		Nothing
 12505 ;; This function is called by:
 12506 ;;		__display_itoa_u32
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           	psect	text51
 12511  0065CA                     __ptext51:
 12512                           	opt stack 0
 12513  0065CA                     ___llmod:
 12514                           	opt stack 27
 12515                           
 12516                           ;incstack = 0
 12517  0065CA  5005               	movf	___llmod@divisor,w,c
 12518  0065CC  1006               	iorwf	___llmod@divisor+1,w,c
 12519  0065CE  1007               	iorwf	___llmod@divisor+2,w,c
 12520  0065D0  1008               	iorwf	___llmod@divisor+3,w,c
 12521  0065D2  B4D8               	btfsc	status,2,c
 12522  0065D4  D024               	goto	l3172
 12523  0065D6  0E01               	movlw	1
 12524  0065D8  6E09               	movwf	___llmod@counter,c
 12525  0065DA  D006               	goto	l11861
 12526  0065DC                     l11859:
 12527  0065DC  90D8               	bcf	status,0,c
 12528  0065DE  3605               	rlcf	___llmod@divisor,f,c
 12529  0065E0  3606               	rlcf	___llmod@divisor+1,f,c
 12530  0065E2  3607               	rlcf	___llmod@divisor+2,f,c
 12531  0065E4  3608               	rlcf	___llmod@divisor+3,f,c
 12532  0065E6  2A09               	incf	___llmod@counter,f,c
 12533  0065E8                     l11861:
 12534  0065E8  AE08               	btfss	___llmod@divisor+3,7,c
 12535  0065EA  D7F8               	goto	l11859
 12536  0065EC                     l11863:
 12537  0065EC  5005               	movf	___llmod@divisor,w,c
 12538  0065EE  5C01               	subwf	___llmod@dividend,w,c
 12539  0065F0  5006               	movf	___llmod@divisor+1,w,c
 12540  0065F2  5802               	subwfb	___llmod@dividend+1,w,c
 12541  0065F4  5007               	movf	___llmod@divisor+2,w,c
 12542  0065F6  5803               	subwfb	___llmod@dividend+2,w,c
 12543  0065F8  5008               	movf	___llmod@divisor+3,w,c
 12544  0065FA  5804               	subwfb	___llmod@dividend+3,w,c
 12545  0065FC  A0D8               	btfss	status,0,c
 12546  0065FE  D008               	goto	l11867
 12547  006600  5005               	movf	___llmod@divisor,w,c
 12548  006602  5E01               	subwf	___llmod@dividend,f,c
 12549  006604  5006               	movf	___llmod@divisor+1,w,c
 12550  006606  5A02               	subwfb	___llmod@dividend+1,f,c
 12551  006608  5007               	movf	___llmod@divisor+2,w,c
 12552  00660A  5A03               	subwfb	___llmod@dividend+2,f,c
 12553  00660C  5008               	movf	___llmod@divisor+3,w,c
 12554  00660E  5A04               	subwfb	___llmod@dividend+3,f,c
 12555  006610                     l11867:
 12556  006610  90D8               	bcf	status,0,c
 12557  006612  3208               	rrcf	___llmod@divisor+3,f,c
 12558  006614  3207               	rrcf	___llmod@divisor+2,f,c
 12559  006616  3206               	rrcf	___llmod@divisor+1,f,c
 12560  006618  3205               	rrcf	___llmod@divisor,f,c
 12561  00661A  2E09               	decfsz	___llmod@counter,f,c
 12562  00661C  D7E7               	goto	l11863
 12563  00661E                     l3172:
 12564  00661E  C001  F001         	movff	___llmod@dividend,?___llmod
 12565  006622  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 12566  006626  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 12567  00662A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 12568  00662E  0012               	return		;funcret
 12569  006630                     __end_of___llmod:
 12570                           	opt stack 0
 12571                           tblptru	equ	0xFF8
 12572                           tblptrh	equ	0xFF7
 12573                           tblptrl	equ	0xFF6
 12574                           tablat	equ	0xFF5
 12575                           prodh	equ	0xFF4
 12576                           prodl	equ	0xFF3
 12577                           intcon	equ	0xFF2
 12578                           intcon2	equ	0xFF1
 12579                           intcon3	equ	0xFF0
 12580                           postinc0	equ	0xFEE
 12581                           wreg	equ	0xFE8
 12582                           indf1	equ	0xFE7
 12583                           postdec1	equ	0xFE5
 12584                           plusw1	equ	0xFE3
 12585                           fsr1h	equ	0xFE2
 12586                           fsr1l	equ	0xFE1
 12587                           indf2	equ	0xFDF
 12588                           postinc2	equ	0xFDE
 12589                           postdec2	equ	0xFDD
 12590                           plusw2	equ	0xFDB
 12591                           fsr2h	equ	0xFDA
 12592                           fsr2l	equ	0xFD9
 12593                           status	equ	0xFD8
 12594                           
 12595 ;; *************** function ___lldiv *****************
 12596 ;; Defined at:
 12597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  dividend        4    0[COMRAM] unsigned long 
 12600 ;;  divisor         4    4[COMRAM] unsigned long 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;  quotient        4    8[COMRAM] unsigned long 
 12603 ;;  counter         1   12[COMRAM] unsigned char 
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  4    0[COMRAM] unsigned long 
 12606 ;; Registers used:
 12607 ;;		wreg, status,2, status,0
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12613 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12614 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12616 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12617 ;;Total ram usage:       13 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		__display_itoa_u32
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           	psect	text52
 12627  006044                     __ptext52:
 12628                           	opt stack 0
 12629  006044                     ___lldiv:
 12630                           	opt stack 27
 12631                           
 12632                           ;incstack = 0
 12633  006044  0E00               	movlw	0
 12634  006046  6E09               	movwf	___lldiv@quotient,c
 12635  006048  0E00               	movlw	0
 12636  00604A  6E0A               	movwf	___lldiv@quotient+1,c
 12637  00604C  0E00               	movlw	0
 12638  00604E  6E0B               	movwf	___lldiv@quotient+2,c
 12639  006050  0E00               	movlw	0
 12640  006052  6E0C               	movwf	___lldiv@quotient+3,c
 12641  006054  5005               	movf	___lldiv@divisor,w,c
 12642  006056  1006               	iorwf	___lldiv@divisor+1,w,c
 12643  006058  1007               	iorwf	___lldiv@divisor+2,w,c
 12644  00605A  1008               	iorwf	___lldiv@divisor+3,w,c
 12645  00605C  B4D8               	btfsc	status,2,c
 12646  00605E  D02A               	goto	l3162
 12647  006060  0E01               	movlw	1
 12648  006062  6E0D               	movwf	___lldiv@counter,c
 12649  006064  D006               	goto	l11841
 12650  006066                     l11839:
 12651  006066  90D8               	bcf	status,0,c
 12652  006068  3605               	rlcf	___lldiv@divisor,f,c
 12653  00606A  3606               	rlcf	___lldiv@divisor+1,f,c
 12654  00606C  3607               	rlcf	___lldiv@divisor+2,f,c
 12655  00606E  3608               	rlcf	___lldiv@divisor+3,f,c
 12656  006070  2A0D               	incf	___lldiv@counter,f,c
 12657  006072                     l11841:
 12658  006072  AE08               	btfss	___lldiv@divisor+3,7,c
 12659  006074  D7F8               	goto	l11839
 12660  006076                     l11843:
 12661  006076  90D8               	bcf	status,0,c
 12662  006078  3609               	rlcf	___lldiv@quotient,f,c
 12663  00607A  360A               	rlcf	___lldiv@quotient+1,f,c
 12664  00607C  360B               	rlcf	___lldiv@quotient+2,f,c
 12665  00607E  360C               	rlcf	___lldiv@quotient+3,f,c
 12666  006080  5005               	movf	___lldiv@divisor,w,c
 12667  006082  5C01               	subwf	___lldiv@dividend,w,c
 12668  006084  5006               	movf	___lldiv@divisor+1,w,c
 12669  006086  5802               	subwfb	___lldiv@dividend+1,w,c
 12670  006088  5007               	movf	___lldiv@divisor+2,w,c
 12671  00608A  5803               	subwfb	___lldiv@dividend+2,w,c
 12672  00608C  5008               	movf	___lldiv@divisor+3,w,c
 12673  00608E  5804               	subwfb	___lldiv@dividend+3,w,c
 12674  006090  A0D8               	btfss	status,0,c
 12675  006092  D009               	goto	l11851
 12676  006094  5005               	movf	___lldiv@divisor,w,c
 12677  006096  5E01               	subwf	___lldiv@dividend,f,c
 12678  006098  5006               	movf	___lldiv@divisor+1,w,c
 12679  00609A  5A02               	subwfb	___lldiv@dividend+1,f,c
 12680  00609C  5007               	movf	___lldiv@divisor+2,w,c
 12681  00609E  5A03               	subwfb	___lldiv@dividend+2,f,c
 12682  0060A0  5008               	movf	___lldiv@divisor+3,w,c
 12683  0060A2  5A04               	subwfb	___lldiv@dividend+3,f,c
 12684  0060A4  8009               	bsf	___lldiv@quotient,0,c
 12685  0060A6                     l11851:
 12686  0060A6  90D8               	bcf	status,0,c
 12687  0060A8  3208               	rrcf	___lldiv@divisor+3,f,c
 12688  0060AA  3207               	rrcf	___lldiv@divisor+2,f,c
 12689  0060AC  3206               	rrcf	___lldiv@divisor+1,f,c
 12690  0060AE  3205               	rrcf	___lldiv@divisor,f,c
 12691  0060B0  2E0D               	decfsz	___lldiv@counter,f,c
 12692  0060B2  D7E1               	goto	l11843
 12693  0060B4                     l3162:
 12694  0060B4  C009  F001         	movff	___lldiv@quotient,?___lldiv
 12695  0060B8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 12696  0060BC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 12697  0060C0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 12698  0060C4  0012               	return		;funcret
 12699  0060C6                     __end_of___lldiv:
 12700                           	opt stack 0
 12701                           tblptru	equ	0xFF8
 12702                           tblptrh	equ	0xFF7
 12703                           tblptrl	equ	0xFF6
 12704                           tablat	equ	0xFF5
 12705                           prodh	equ	0xFF4
 12706                           prodl	equ	0xFF3
 12707                           intcon	equ	0xFF2
 12708                           intcon2	equ	0xFF1
 12709                           intcon3	equ	0xFF0
 12710                           postinc0	equ	0xFEE
 12711                           wreg	equ	0xFE8
 12712                           indf1	equ	0xFE7
 12713                           postdec1	equ	0xFE5
 12714                           plusw1	equ	0xFE3
 12715                           fsr1h	equ	0xFE2
 12716                           fsr1l	equ	0xFE1
 12717                           indf2	equ	0xFDF
 12718                           postinc2	equ	0xFDE
 12719                           postdec2	equ	0xFDD
 12720                           plusw2	equ	0xFDB
 12721                           fsr2h	equ	0xFDA
 12722                           fsr2l	equ	0xFD9
 12723                           status	equ	0xFD8
 12724                           
 12725 ;; *************** function __display_done *****************
 12726 ;; Defined at:
 12727 ;;		line 439 in file "display.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;		None
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  cntr            1   30[COMRAM] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  1    wreg      void 
 12734 ;; Registers used:
 12735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;Total ram usage:        1 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    4
 12748 ;; This function calls:
 12749 ;;		__display_itoa_u16
 12750 ;;		_bootloader_get_entries
 12751 ;;		_bootloader_get_flashPagesWritten
 12752 ;;		_bootloader_get_total_entries
 12753 ;; This function is called by:
 12754 ;;		_display_prepare
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758                           	psect	text53
 12759  003156                     __ptext53:
 12760                           	opt stack 0
 12761  003156                     __display_done:
 12762                           	opt stack 25
 12763                           
 12764                           ;display.c: 441: uint8_t cntr;
 12765                           ;display.c: 442: cntr = 0;
 12766                           
 12767                           ;incstack = 0
 12768  003156  0E00               	movlw	0
 12769  003158  6E1F               	movwf	__display_done@cntr,c
 12770                           
 12771                           ;display.c: 443: while(done_line1[cntr])
 12772  00315A  D017               	goto	l13643
 12773  00315C                     l13639:
 12774                           
 12775                           ;display.c: 444: display_content[0][cntr] = done_line1[cntr++];
 12776  00315C  501F               	movf	__display_done@cntr,w,c
 12777  00315E  0D01               	mullw	1
 12778  003160  0EB9               	movlw	low _done_line1
 12779  003162  24F3               	addwf	prodl,w,c
 12780  003164  6EF6               	movwf	tblptrl,c
 12781  003166  0E8D               	movlw	high _done_line1
 12782  003168  20F4               	addwfc	prodh,w,c
 12783  00316A  6EF7               	movwf	tblptrh,c
 12784  00316C                     	if	1	;There are 3 active tblptr bytes
 12785  00316C  6AF8               	clrf	tblptru,c
 12786  00316E  0E00               	movlw	low (__mediumconst shr (0+16))
 12787  003170  22F8               	addwfc	tblptru,f,c
 12788  003172                     	endif
 12789  003172  501F               	movf	__display_done@cntr,w,c
 12790  003174  0D01               	mullw	1
 12791  003176  0E64               	movlw	low _display_content
 12792  003178  24F3               	addwf	prodl,w,c
 12793  00317A  6ED9               	movwf	fsr2l,c
 12794  00317C  0E02               	movlw	high _display_content
 12795  00317E  20F4               	addwfc	prodh,w,c
 12796  003180  6EDA               	movwf	fsr2h,c
 12797  003182  0008               	tblrd		*
 12798  003184  CFF5 FFDF          	movff	tablat,indf2
 12799  003188  2A1F               	incf	__display_done@cntr,f,c
 12800  00318A                     l13643:
 12801  00318A  501F               	movf	__display_done@cntr,w,c
 12802  00318C  0D01               	mullw	1
 12803  00318E  0EB9               	movlw	low _done_line1
 12804  003190  24F3               	addwf	prodl,w,c
 12805  003192  6EF6               	movwf	tblptrl,c
 12806  003194  0E8D               	movlw	high _done_line1
 12807  003196  20F4               	addwfc	prodh,w,c
 12808  003198  6EF7               	movwf	tblptrh,c
 12809  00319A                     	if	1	;There are 3 active tblptr bytes
 12810  00319A  6AF8               	clrf	tblptru,c
 12811  00319C  0E00               	movlw	low (__mediumconst shr (0+16))
 12812  00319E  22F8               	addwfc	tblptru,f,c
 12813  0031A0                     	endif
 12814  0031A0  0008               	tblrd		*
 12815  0031A2  50F5               	movf	tablat,w,c
 12816  0031A4  0900               	iorlw	0
 12817  0031A6  A4D8               	btfss	status,2,c
 12818  0031A8  D7D9               	goto	l13639
 12819                           
 12820                           ;display.c: 445: cntr = 0;
 12821  0031AA  0E00               	movlw	0
 12822  0031AC  6E1F               	movwf	__display_done@cntr,c
 12823                           
 12824                           ;display.c: 446: while(done_line2[cntr])
 12825  0031AE  D017               	goto	l13651
 12826  0031B0                     l13647:
 12827                           
 12828                           ;display.c: 447: display_content[1][cntr] = done_line2[cntr++];
 12829  0031B0  501F               	movf	__display_done@cntr,w,c
 12830  0031B2  0D01               	mullw	1
 12831  0031B4  0E9F               	movlw	low _done_line2
 12832  0031B6  24F3               	addwf	prodl,w,c
 12833  0031B8  6EF6               	movwf	tblptrl,c
 12834  0031BA  0E8E               	movlw	high _done_line2
 12835  0031BC  20F4               	addwfc	prodh,w,c
 12836  0031BE  6EF7               	movwf	tblptrh,c
 12837  0031C0                     	if	1	;There are 3 active tblptr bytes
 12838  0031C0  6AF8               	clrf	tblptru,c
 12839  0031C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12840  0031C4  22F8               	addwfc	tblptru,f,c
 12841  0031C6                     	endif
 12842  0031C6  501F               	movf	__display_done@cntr,w,c
 12843  0031C8  0D01               	mullw	1
 12844  0031CA  0E78               	movlw	low (_display_content+20)
 12845  0031CC  24F3               	addwf	prodl,w,c
 12846  0031CE  6ED9               	movwf	fsr2l,c
 12847  0031D0  0E02               	movlw	high (_display_content+20)
 12848  0031D2  20F4               	addwfc	prodh,w,c
 12849  0031D4  6EDA               	movwf	fsr2h,c
 12850  0031D6  0008               	tblrd		*
 12851  0031D8  CFF5 FFDF          	movff	tablat,indf2
 12852  0031DC  2A1F               	incf	__display_done@cntr,f,c
 12853  0031DE                     l13651:
 12854  0031DE  501F               	movf	__display_done@cntr,w,c
 12855  0031E0  0D01               	mullw	1
 12856  0031E2  0E9F               	movlw	low _done_line2
 12857  0031E4  24F3               	addwf	prodl,w,c
 12858  0031E6  6EF6               	movwf	tblptrl,c
 12859  0031E8  0E8E               	movlw	high _done_line2
 12860  0031EA  20F4               	addwfc	prodh,w,c
 12861  0031EC  6EF7               	movwf	tblptrh,c
 12862  0031EE                     	if	1	;There are 3 active tblptr bytes
 12863  0031EE  6AF8               	clrf	tblptru,c
 12864  0031F0  0E00               	movlw	low (__mediumconst shr (0+16))
 12865  0031F2  22F8               	addwfc	tblptru,f,c
 12866  0031F4                     	endif
 12867  0031F4  0008               	tblrd		*
 12868  0031F6  50F5               	movf	tablat,w,c
 12869  0031F8  0900               	iorlw	0
 12870  0031FA  A4D8               	btfss	status,2,c
 12871  0031FC  D7D9               	goto	l13647
 12872                           
 12873                           ;display.c: 449: cntr = 0;
 12874  0031FE  0E00               	movlw	0
 12875  003200  6E1F               	movwf	__display_done@cntr,c
 12876                           
 12877                           ;display.c: 450: while(programming_line3[cntr])
 12878  003202  D017               	goto	l13659
 12879  003204                     l13655:
 12880                           
 12881                           ;display.c: 451: display_content[2][cntr] = programming_line3[cntr++];
 12882  003204  501F               	movf	__display_done@cntr,w,c
 12883  003206  0D01               	mullw	1
 12884  003208  0E83               	movlw	low _programming_line3
 12885  00320A  24F3               	addwf	prodl,w,c
 12886  00320C  6EF6               	movwf	tblptrl,c
 12887  00320E  0E8E               	movlw	high _programming_line3
 12888  003210  20F4               	addwfc	prodh,w,c
 12889  003212  6EF7               	movwf	tblptrh,c
 12890  003214                     	if	1	;There are 3 active tblptr bytes
 12891  003214  6AF8               	clrf	tblptru,c
 12892  003216  0E00               	movlw	low (__mediumconst shr (0+16))
 12893  003218  22F8               	addwfc	tblptru,f,c
 12894  00321A                     	endif
 12895  00321A  501F               	movf	__display_done@cntr,w,c
 12896  00321C  0D01               	mullw	1
 12897  00321E  0E8C               	movlw	low (_display_content+40)
 12898  003220  24F3               	addwf	prodl,w,c
 12899  003222  6ED9               	movwf	fsr2l,c
 12900  003224  0E02               	movlw	high (_display_content+40)
 12901  003226  20F4               	addwfc	prodh,w,c
 12902  003228  6EDA               	movwf	fsr2h,c
 12903  00322A  0008               	tblrd		*
 12904  00322C  CFF5 FFDF          	movff	tablat,indf2
 12905  003230  2A1F               	incf	__display_done@cntr,f,c
 12906  003232                     l13659:
 12907  003232  501F               	movf	__display_done@cntr,w,c
 12908  003234  0D01               	mullw	1
 12909  003236  0E83               	movlw	low _programming_line3
 12910  003238  24F3               	addwf	prodl,w,c
 12911  00323A  6EF6               	movwf	tblptrl,c
 12912  00323C  0E8E               	movlw	high _programming_line3
 12913  00323E  20F4               	addwfc	prodh,w,c
 12914  003240  6EF7               	movwf	tblptrh,c
 12915  003242                     	if	1	;There are 3 active tblptr bytes
 12916  003242  6AF8               	clrf	tblptru,c
 12917  003244  0E00               	movlw	low (__mediumconst shr (0+16))
 12918  003246  22F8               	addwfc	tblptru,f,c
 12919  003248                     	endif
 12920  003248  0008               	tblrd		*
 12921  00324A  50F5               	movf	tablat,w,c
 12922  00324C  0900               	iorlw	0
 12923  00324E  A4D8               	btfss	status,2,c
 12924  003250  D7D9               	goto	l13655
 12925                           
 12926                           ;display.c: 452: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 12927  003252  EC54  F03C         	call	_bootloader_get_entries	;wreg free
 12928  003256  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 12929  00325A  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 12930  00325E  6A1B               	clrf	__display_itoa_u16@value+2,c
 12931  003260  6A1C               	clrf	__display_itoa_u16@value+3,c
 12932  003262  501F               	movf	__display_done@cntr,w,c
 12933  003264  0D01               	mullw	1
 12934  003266  0E8C               	movlw	low (_display_content+40)
 12935  003268  24F3               	addwf	prodl,w,c
 12936  00326A  6E1D               	movwf	__display_itoa_u16@text,c
 12937  00326C  0E02               	movlw	high (_display_content+40)
 12938  00326E  20F4               	addwfc	prodh,w,c
 12939  003270  6E1E               	movwf	__display_itoa_u16@text+1,c
 12940  003272  EC91  F029         	call	__display_itoa_u16	;wreg free
 12941  003276  261F               	addwf	__display_done@cntr,f,c
 12942                           
 12943                           ;display.c: 453: display_content[2][cntr++] = '/';
 12944  003278  501F               	movf	__display_done@cntr,w,c
 12945  00327A  0D01               	mullw	1
 12946  00327C  0E8C               	movlw	low (_display_content+40)
 12947  00327E  24F3               	addwf	prodl,w,c
 12948  003280  6ED9               	movwf	fsr2l,c
 12949  003282  0E02               	movlw	high (_display_content+40)
 12950  003284  20F4               	addwfc	prodh,w,c
 12951  003286  6EDA               	movwf	fsr2h,c
 12952  003288  0E2F               	movlw	47
 12953  00328A  6EDF               	movwf	indf2,c
 12954  00328C  2A1F               	incf	__display_done@cntr,f,c
 12955                           
 12956                           ;display.c: 454: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 12957  00328E  EC59  F03C         	call	_bootloader_get_total_entries	;wreg free
 12958  003292  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 12959  003296  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 12960  00329A  6A1B               	clrf	__display_itoa_u16@value+2,c
 12961  00329C  6A1C               	clrf	__display_itoa_u16@value+3,c
 12962  00329E  501F               	movf	__display_done@cntr,w,c
 12963  0032A0  0D01               	mullw	1
 12964  0032A2  0E8C               	movlw	low (_display_content+40)
 12965  0032A4  24F3               	addwf	prodl,w,c
 12966  0032A6  6E1D               	movwf	__display_itoa_u16@text,c
 12967  0032A8  0E02               	movlw	high (_display_content+40)
 12968  0032AA  20F4               	addwfc	prodh,w,c
 12969  0032AC  6E1E               	movwf	__display_itoa_u16@text+1,c
 12970  0032AE  EC91  F029         	call	__display_itoa_u16	;wreg free
 12971                           
 12972                           ;display.c: 456: cntr = 0;
 12973  0032B2  0E00               	movlw	0
 12974  0032B4  6E1F               	movwf	__display_done@cntr,c
 12975                           
 12976                           ;display.c: 457: while(programming_line4[cntr])
 12977  0032B6  D017               	goto	l13675
 12978  0032B8                     l13671:
 12979                           
 12980                           ;display.c: 458: display_content[3][cntr] = programming_line4[cntr++];
 12981  0032B8  501F               	movf	__display_done@cntr,w,c
 12982  0032BA  0D01               	mullw	1
 12983  0032BC  0EC9               	movlw	low _programming_line4
 12984  0032BE  24F3               	addwf	prodl,w,c
 12985  0032C0  6EF6               	movwf	tblptrl,c
 12986  0032C2  0E8D               	movlw	high _programming_line4
 12987  0032C4  20F4               	addwfc	prodh,w,c
 12988  0032C6  6EF7               	movwf	tblptrh,c
 12989  0032C8                     	if	1	;There are 3 active tblptr bytes
 12990  0032C8  6AF8               	clrf	tblptru,c
 12991  0032CA  0E00               	movlw	low (__mediumconst shr (0+16))
 12992  0032CC  22F8               	addwfc	tblptru,f,c
 12993  0032CE                     	endif
 12994  0032CE  501F               	movf	__display_done@cntr,w,c
 12995  0032D0  0D01               	mullw	1
 12996  0032D2  0EA0               	movlw	low (_display_content+60)
 12997  0032D4  24F3               	addwf	prodl,w,c
 12998  0032D6  6ED9               	movwf	fsr2l,c
 12999  0032D8  0E02               	movlw	high (_display_content+60)
 13000  0032DA  20F4               	addwfc	prodh,w,c
 13001  0032DC  6EDA               	movwf	fsr2h,c
 13002  0032DE  0008               	tblrd		*
 13003  0032E0  CFF5 FFDF          	movff	tablat,indf2
 13004  0032E4  2A1F               	incf	__display_done@cntr,f,c
 13005  0032E6                     l13675:
 13006  0032E6  501F               	movf	__display_done@cntr,w,c
 13007  0032E8  0D01               	mullw	1
 13008  0032EA  0EC9               	movlw	low _programming_line4
 13009  0032EC  24F3               	addwf	prodl,w,c
 13010  0032EE  6EF6               	movwf	tblptrl,c
 13011  0032F0  0E8D               	movlw	high _programming_line4
 13012  0032F2  20F4               	addwfc	prodh,w,c
 13013  0032F4  6EF7               	movwf	tblptrh,c
 13014  0032F6                     	if	1	;There are 3 active tblptr bytes
 13015  0032F6  6AF8               	clrf	tblptru,c
 13016  0032F8  0E00               	movlw	low (__mediumconst shr (0+16))
 13017  0032FA  22F8               	addwfc	tblptru,f,c
 13018  0032FC                     	endif
 13019  0032FC  0008               	tblrd		*
 13020  0032FE  50F5               	movf	tablat,w,c
 13021  003300  0900               	iorlw	0
 13022  003302  A4D8               	btfss	status,2,c
 13023  003304  D7D9               	goto	l13671
 13024                           
 13025                           ;display.c: 459: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 13026  003306  EC4F  F03C         	call	_bootloader_get_flashPagesWritten	;wreg free
 13027  00330A  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 13028  00330E  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 13029  003312  6A1B               	clrf	__display_itoa_u16@value+2,c
 13030  003314  6A1C               	clrf	__display_itoa_u16@value+3,c
 13031  003316  501F               	movf	__display_done@cntr,w,c
 13032  003318  0D01               	mullw	1
 13033  00331A  0EA0               	movlw	low (_display_content+60)
 13034  00331C  24F3               	addwf	prodl,w,c
 13035  00331E  6E1D               	movwf	__display_itoa_u16@text,c
 13036  003320  0E02               	movlw	high (_display_content+60)
 13037  003322  20F4               	addwfc	prodh,w,c
 13038  003324  6E1E               	movwf	__display_itoa_u16@text+1,c
 13039  003326  EC91  F029         	call	__display_itoa_u16	;wreg free
 13040  00332A  0012               	return		;funcret
 13041  00332C                     __end_of__display_done:
 13042                           	opt stack 0
 13043                           tblptru	equ	0xFF8
 13044                           tblptrh	equ	0xFF7
 13045                           tblptrl	equ	0xFF6
 13046                           tablat	equ	0xFF5
 13047                           prodh	equ	0xFF4
 13048                           prodl	equ	0xFF3
 13049                           intcon	equ	0xFF2
 13050                           intcon2	equ	0xFF1
 13051                           intcon3	equ	0xFF0
 13052                           postinc0	equ	0xFEE
 13053                           wreg	equ	0xFE8
 13054                           indf1	equ	0xFE7
 13055                           postdec1	equ	0xFE5
 13056                           plusw1	equ	0xFE3
 13057                           fsr1h	equ	0xFE2
 13058                           fsr1l	equ	0xFE1
 13059                           indf2	equ	0xFDF
 13060                           postinc2	equ	0xFDE
 13061                           postdec2	equ	0xFDD
 13062                           plusw2	equ	0xFDB
 13063                           fsr2h	equ	0xFDA
 13064                           fsr2l	equ	0xFD9
 13065                           status	equ	0xFD8
 13066                           
 13067 ;; *************** function _bootloader_get_flashPagesWritten *****************
 13068 ;; Defined at:
 13069 ;;		line 493 in file "bootloader.c"
 13070 ;; Parameters:    Size  Location     Type
 13071 ;;		None
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  2    0[COMRAM] unsigned int 
 13076 ;; Registers used:
 13077 ;;		None
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13087 ;;Total ram usage:        2 bytes
 13088 ;; Hardware stack levels used:    1
 13089 ;; This function calls:
 13090 ;;		Nothing
 13091 ;; This function is called by:
 13092 ;;		__display_programming
 13093 ;;		__display_done
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text54
 13098  00789E                     __ptext54:
 13099                           	opt stack 0
 13100  00789E                     _bootloader_get_flashPagesWritten:
 13101                           	opt stack 28
 13102                           
 13103                           ;bootloader.c: 495: return flash_pages_written;
 13104                           
 13105                           ;incstack = 0
 13106  00789E  C16C  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 13107  0078A2  C16D  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 13108  0078A6  0012               	return		;funcret
 13109  0078A8                     __end_of_bootloader_get_flashPagesWritten:
 13110                           	opt stack 0
 13111                           tblptru	equ	0xFF8
 13112                           tblptrh	equ	0xFF7
 13113                           tblptrl	equ	0xFF6
 13114                           tablat	equ	0xFF5
 13115                           prodh	equ	0xFF4
 13116                           prodl	equ	0xFF3
 13117                           intcon	equ	0xFF2
 13118                           intcon2	equ	0xFF1
 13119                           intcon3	equ	0xFF0
 13120                           postinc0	equ	0xFEE
 13121                           wreg	equ	0xFE8
 13122                           indf1	equ	0xFE7
 13123                           postdec1	equ	0xFE5
 13124                           plusw1	equ	0xFE3
 13125                           fsr1h	equ	0xFE2
 13126                           fsr1l	equ	0xFE1
 13127                           indf2	equ	0xFDF
 13128                           postinc2	equ	0xFDE
 13129                           postdec2	equ	0xFDD
 13130                           plusw2	equ	0xFDB
 13131                           fsr2h	equ	0xFDA
 13132                           fsr2l	equ	0xFD9
 13133                           status	equ	0xFD8
 13134                           
 13135 ;; *************** function _bootloader_get_entries *****************
 13136 ;; Defined at:
 13137 ;;		line 447 in file "bootloader.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;		None
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;		None
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  2    0[COMRAM] unsigned int 
 13144 ;; Registers used:
 13145 ;;		None
 13146 ;; Tracked objects:
 13147 ;;		On entry : 0/0
 13148 ;;		On exit  : 0/0
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;Total ram usage:        2 bytes
 13156 ;; Hardware stack levels used:    1
 13157 ;; This function calls:
 13158 ;;		Nothing
 13159 ;; This function is called by:
 13160 ;;		__display_verify
 13161 ;;		__display_failed
 13162 ;;		__display_programming
 13163 ;;		__display_done
 13164 ;; This function uses a non-reentrant model
 13165 ;;
 13166                           
 13167                           	psect	text55
 13168  0078A8                     __ptext55:
 13169                           	opt stack 0
 13170  0078A8                     _bootloader_get_entries:
 13171                           	opt stack 28
 13172                           
 13173                           ;bootloader.c: 449: return hex_file_entries;
 13174                           
 13175                           ;incstack = 0
 13176  0078A8  C170  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 13177  0078AC  C171  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 13178  0078B0  0012               	return		;funcret
 13179  0078B2                     __end_of_bootloader_get_entries:
 13180                           	opt stack 0
 13181                           tblptru	equ	0xFF8
 13182                           tblptrh	equ	0xFF7
 13183                           tblptrl	equ	0xFF6
 13184                           tablat	equ	0xFF5
 13185                           prodh	equ	0xFF4
 13186                           prodl	equ	0xFF3
 13187                           intcon	equ	0xFF2
 13188                           intcon2	equ	0xFF1
 13189                           intcon3	equ	0xFF0
 13190                           postinc0	equ	0xFEE
 13191                           wreg	equ	0xFE8
 13192                           indf1	equ	0xFE7
 13193                           postdec1	equ	0xFE5
 13194                           plusw1	equ	0xFE3
 13195                           fsr1h	equ	0xFE2
 13196                           fsr1l	equ	0xFE1
 13197                           indf2	equ	0xFDF
 13198                           postinc2	equ	0xFDE
 13199                           postdec2	equ	0xFDD
 13200                           plusw2	equ	0xFDB
 13201                           fsr2h	equ	0xFDA
 13202                           fsr2l	equ	0xFD9
 13203                           status	equ	0xFD8
 13204                           
 13205 ;; *************** function __display_clear *****************
 13206 ;; Defined at:
 13207 ;;		line 64 in file "display.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;		None
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  col             1    3[COMRAM] unsigned char 
 13212 ;;  row             1    2[COMRAM] unsigned char 
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      void 
 13215 ;; Registers used:
 13216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 0/0
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13225 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13226 ;;Total ram usage:        4 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; This function calls:
 13229 ;;		Nothing
 13230 ;; This function is called by:
 13231 ;;		_display_prepare
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text56
 13236  006D98                     __ptext56:
 13237                           	opt stack 0
 13238  006D98                     __display_clear:
 13239                           	opt stack 29
 13240                           
 13241                           ;display.c: 66: uint8_t row;
 13242                           ;display.c: 67: uint8_t col;
 13243                           ;display.c: 68: for(row=0;row<4;++row)
 13244                           
 13245                           ;incstack = 0
 13246  006D98  0E00               	movlw	0
 13247  006D9A  6E03               	movwf	__display_clear@row,c
 13248  006D9C                     l13375:
 13249  006D9C  0E03               	movlw	3
 13250  006D9E  6403               	cpfsgt	__display_clear@row,c
 13251  006DA0  D001               	goto	l13379
 13252  006DA2  0012               	return	
 13253  006DA4                     l13379:
 13254                           
 13255                           ;display.c: 69: {
 13256                           ;display.c: 70: for(col=0;col<20;++col)
 13257  006DA4  0E00               	movlw	0
 13258  006DA6  6E04               	movwf	__display_clear@col,c
 13259  006DA8                     l13381:
 13260  006DA8  0E13               	movlw	19
 13261  006DAA  6404               	cpfsgt	__display_clear@col,c
 13262  006DAC  D001               	goto	l13385
 13263  006DAE  D016               	goto	l13391
 13264  006DB0                     l13385:
 13265                           
 13266                           ;display.c: 71: {
 13267                           ;display.c: 72: display_content[row][col] = ' ';
 13268  006DB0  5003               	movf	__display_clear@row,w,c
 13269  006DB2  0D14               	mullw	20
 13270  006DB4  0E64               	movlw	low _display_content
 13271  006DB6  6E01               	movwf	??__display_clear& (0+255),c
 13272  006DB8  0E02               	movlw	high _display_content
 13273  006DBA  6E02               	movwf	(??__display_clear+1)& (0+255),c
 13274  006DBC  50F3               	movf	prodl,w,c
 13275  006DBE  2601               	addwf	??__display_clear,f,c
 13276  006DC0  50F4               	movf	prodh,w,c
 13277  006DC2  2202               	addwfc	??__display_clear+1,f,c
 13278  006DC4  5004               	movf	__display_clear@col,w,c
 13279  006DC6  0D01               	mullw	1
 13280  006DC8  50F3               	movf	prodl,w,c
 13281  006DCA  2401               	addwf	??__display_clear,w,c
 13282  006DCC  6ED9               	movwf	fsr2l,c
 13283  006DCE  50F4               	movf	prodh,w,c
 13284  006DD0  2002               	addwfc	??__display_clear+1,w,c
 13285  006DD2  6EDA               	movwf	fsr2h,c
 13286  006DD4  0E20               	movlw	32
 13287  006DD6  6EDF               	movwf	indf2,c
 13288  006DD8  2A04               	incf	__display_clear@col,f,c
 13289  006DDA  D7E6               	goto	l13381
 13290  006DDC                     l13391:
 13291  006DDC  2A03               	incf	__display_clear@row,f,c
 13292  006DDE  D7DE               	goto	l13375
 13293  006DE0                     __end_of__display_clear:
 13294                           	opt stack 0
 13295                           tblptru	equ	0xFF8
 13296                           tblptrh	equ	0xFF7
 13297                           tblptrl	equ	0xFF6
 13298                           tablat	equ	0xFF5
 13299                           prodh	equ	0xFF4
 13300                           prodl	equ	0xFF3
 13301                           intcon	equ	0xFF2
 13302                           intcon2	equ	0xFF1
 13303                           intcon3	equ	0xFF0
 13304                           postinc0	equ	0xFEE
 13305                           wreg	equ	0xFE8
 13306                           indf1	equ	0xFE7
 13307                           postdec1	equ	0xFE5
 13308                           plusw1	equ	0xFE3
 13309                           fsr1h	equ	0xFE2
 13310                           fsr1l	equ	0xFE1
 13311                           indf2	equ	0xFDF
 13312                           postinc2	equ	0xFDE
 13313                           postdec2	equ	0xFDD
 13314                           plusw2	equ	0xFDB
 13315                           fsr2h	equ	0xFDA
 13316                           fsr2l	equ	0xFD9
 13317                           status	equ	0xFD8
 13318                           
 13319 ;; *************** function __display_checked *****************
 13320 ;; Defined at:
 13321 ;;		line 343 in file "display.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;		None
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;  cntr            1   33[COMRAM] unsigned char 
 13326 ;;  start           1   32[COMRAM] unsigned char 
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  1    wreg      void 
 13329 ;; Registers used:
 13330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13340 ;;Total ram usage:        4 bytes
 13341 ;; Hardware stack levels used:    1
 13342 ;; Hardware stack levels required when called:    4
 13343 ;; This function calls:
 13344 ;;		__display_itoa_u16
 13345 ;;		_bootloader_get_total_entries
 13346 ;; This function is called by:
 13347 ;;		_display_prepare
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           	psect	text57
 13352  003650                     __ptext57:
 13353                           	opt stack 0
 13354  003650                     __display_checked:
 13355                           	opt stack 25
 13356                           
 13357                           ;display.c: 345: uint8_t cntr;
 13358                           ;display.c: 346: uint8_t start;
 13359                           ;display.c: 347: cntr = 0;
 13360                           
 13361                           ;incstack = 0
 13362  003650  0E00               	movlw	0
 13363  003652  6E22               	movwf	__display_checked@cntr,c
 13364                           
 13365                           ;display.c: 348: while(checked_line1[cntr])
 13366  003654  D017               	goto	l13501
 13367  003656                     l13497:
 13368                           
 13369                           ;display.c: 349: display_content[0][cntr] = checked_line1[cntr++];
 13370  003656  5022               	movf	__display_checked@cntr,w,c
 13371  003658  0D01               	mullw	1
 13372  00365A  0EF9               	movlw	low _checked_line1
 13373  00365C  24F3               	addwf	prodl,w,c
 13374  00365E  6EF6               	movwf	tblptrl,c
 13375  003660  0E8D               	movlw	high _checked_line1
 13376  003662  20F4               	addwfc	prodh,w,c
 13377  003664  6EF7               	movwf	tblptrh,c
 13378  003666                     	if	1	;There are 3 active tblptr bytes
 13379  003666  6AF8               	clrf	tblptru,c
 13380  003668  0E00               	movlw	low (__mediumconst shr (0+16))
 13381  00366A  22F8               	addwfc	tblptru,f,c
 13382  00366C                     	endif
 13383  00366C  5022               	movf	__display_checked@cntr,w,c
 13384  00366E  0D01               	mullw	1
 13385  003670  0E64               	movlw	low _display_content
 13386  003672  24F3               	addwf	prodl,w,c
 13387  003674  6ED9               	movwf	fsr2l,c
 13388  003676  0E02               	movlw	high _display_content
 13389  003678  20F4               	addwfc	prodh,w,c
 13390  00367A  6EDA               	movwf	fsr2h,c
 13391  00367C  0008               	tblrd		*
 13392  00367E  CFF5 FFDF          	movff	tablat,indf2
 13393  003682  2A22               	incf	__display_checked@cntr,f,c
 13394  003684                     l13501:
 13395  003684  5022               	movf	__display_checked@cntr,w,c
 13396  003686  0D01               	mullw	1
 13397  003688  0EF9               	movlw	low _checked_line1
 13398  00368A  24F3               	addwf	prodl,w,c
 13399  00368C  6EF6               	movwf	tblptrl,c
 13400  00368E  0E8D               	movlw	high _checked_line1
 13401  003690  20F4               	addwfc	prodh,w,c
 13402  003692  6EF7               	movwf	tblptrh,c
 13403  003694                     	if	1	;There are 3 active tblptr bytes
 13404  003694  6AF8               	clrf	tblptru,c
 13405  003696  0E00               	movlw	low (__mediumconst shr (0+16))
 13406  003698  22F8               	addwfc	tblptru,f,c
 13407  00369A                     	endif
 13408  00369A  0008               	tblrd		*
 13409  00369C  50F5               	movf	tablat,w,c
 13410  00369E  0900               	iorlw	0
 13411  0036A0  A4D8               	btfss	status,2,c
 13412  0036A2  D7D9               	goto	l13497
 13413                           
 13414                           ;display.c: 350: cntr = 0;
 13415  0036A4  0E00               	movlw	0
 13416  0036A6  6E22               	movwf	__display_checked@cntr,c
 13417                           
 13418                           ;display.c: 351: while(checked_line2[cntr])
 13419  0036A8  D017               	goto	l13509
 13420  0036AA                     l13505:
 13421                           
 13422                           ;display.c: 352: display_content[1][cntr] = checked_line2[cntr++];
 13423  0036AA  5022               	movf	__display_checked@cntr,w,c
 13424  0036AC  0D01               	mullw	1
 13425  0036AE  0EED               	movlw	low _checked_line2
 13426  0036B0  24F3               	addwf	prodl,w,c
 13427  0036B2  6EF6               	movwf	tblptrl,c
 13428  0036B4  0E8C               	movlw	high _checked_line2
 13429  0036B6  20F4               	addwfc	prodh,w,c
 13430  0036B8  6EF7               	movwf	tblptrh,c
 13431  0036BA                     	if	1	;There are 3 active tblptr bytes
 13432  0036BA  6AF8               	clrf	tblptru,c
 13433  0036BC  0E00               	movlw	low (__mediumconst shr (0+16))
 13434  0036BE  22F8               	addwfc	tblptru,f,c
 13435  0036C0                     	endif
 13436  0036C0  5022               	movf	__display_checked@cntr,w,c
 13437  0036C2  0D01               	mullw	1
 13438  0036C4  0E78               	movlw	low (_display_content+20)
 13439  0036C6  24F3               	addwf	prodl,w,c
 13440  0036C8  6ED9               	movwf	fsr2l,c
 13441  0036CA  0E02               	movlw	high (_display_content+20)
 13442  0036CC  20F4               	addwfc	prodh,w,c
 13443  0036CE  6EDA               	movwf	fsr2h,c
 13444  0036D0  0008               	tblrd		*
 13445  0036D2  CFF5 FFDF          	movff	tablat,indf2
 13446  0036D6  2A22               	incf	__display_checked@cntr,f,c
 13447  0036D8                     l13509:
 13448  0036D8  5022               	movf	__display_checked@cntr,w,c
 13449  0036DA  0D01               	mullw	1
 13450  0036DC  0EED               	movlw	low _checked_line2
 13451  0036DE  24F3               	addwf	prodl,w,c
 13452  0036E0  6EF6               	movwf	tblptrl,c
 13453  0036E2  0E8C               	movlw	high _checked_line2
 13454  0036E4  20F4               	addwfc	prodh,w,c
 13455  0036E6  6EF7               	movwf	tblptrh,c
 13456  0036E8                     	if	1	;There are 3 active tblptr bytes
 13457  0036E8  6AF8               	clrf	tblptru,c
 13458  0036EA  0E00               	movlw	low (__mediumconst shr (0+16))
 13459  0036EC  22F8               	addwfc	tblptru,f,c
 13460  0036EE                     	endif
 13461  0036EE  0008               	tblrd		*
 13462  0036F0  50F5               	movf	tablat,w,c
 13463  0036F2  0900               	iorlw	0
 13464  0036F4  A4D8               	btfss	status,2,c
 13465  0036F6  D7D9               	goto	l13505
 13466                           
 13467                           ;display.c: 354: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 13468  0036F8  EC59  F03C         	call	_bootloader_get_total_entries	;wreg free
 13469  0036FC  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 13470  003700  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 13471  003704  6A1B               	clrf	__display_itoa_u16@value+2,c
 13472  003706  6A1C               	clrf	__display_itoa_u16@value+3,c
 13473  003708  0E8C               	movlw	low (_display_content+40)
 13474  00370A  6E1D               	movwf	__display_itoa_u16@text,c
 13475  00370C  0E02               	movlw	high (_display_content+40)
 13476  00370E  6E1E               	movwf	__display_itoa_u16@text+1,c
 13477  003710  EC91  F029         	call	__display_itoa_u16	;wreg free
 13478  003714  6E21               	movwf	__display_checked@start,c
 13479                           
 13480                           ;display.c: 355: start++;
 13481  003716  2A21               	incf	__display_checked@start,f,c
 13482                           
 13483                           ;display.c: 356: cntr = 0;
 13484  003718  0E00               	movlw	0
 13485  00371A  6E22               	movwf	__display_checked@cntr,c
 13486                           
 13487                           ;display.c: 357: while(checked_line3[cntr])
 13488  00371C  D01C               	goto	l13521
 13489  00371E                     l13517:
 13490                           
 13491                           ;display.c: 358: display_content[2][start+cntr] = checked_line3[cntr++];
 13492  00371E  5022               	movf	__display_checked@cntr,w,c
 13493  003720  0D01               	mullw	1
 13494  003722  0E73               	movlw	low _checked_line3
 13495  003724  24F3               	addwf	prodl,w,c
 13496  003726  6EF6               	movwf	tblptrl,c
 13497  003728  0E8E               	movlw	high _checked_line3
 13498  00372A  20F4               	addwfc	prodh,w,c
 13499  00372C  6EF7               	movwf	tblptrh,c
 13500  00372E                     	if	1	;There are 3 active tblptr bytes
 13501  00372E  6AF8               	clrf	tblptru,c
 13502  003730  0E00               	movlw	low (__mediumconst shr (0+16))
 13503  003732  22F8               	addwfc	tblptru,f,c
 13504  003734                     	endif
 13505  003734  5022               	movf	__display_checked@cntr,w,c
 13506  003736  C021  F01F         	movff	__display_checked@start,??__display_checked
 13507  00373A  6A20               	clrf	(??__display_checked+1)& (0+255),c
 13508  00373C  261F               	addwf	??__display_checked,f,c
 13509  00373E  0E00               	movlw	0
 13510  003740  2220               	addwfc	??__display_checked+1,f,c
 13511  003742  0E8C               	movlw	low (_display_content+40)
 13512  003744  241F               	addwf	??__display_checked,w,c
 13513  003746  6ED9               	movwf	fsr2l,c
 13514  003748  0E02               	movlw	high (_display_content+40)
 13515  00374A  2020               	addwfc	??__display_checked+1,w,c
 13516  00374C  6EDA               	movwf	fsr2h,c
 13517  00374E  0008               	tblrd		*
 13518  003750  CFF5 FFDF          	movff	tablat,indf2
 13519  003754  2A22               	incf	__display_checked@cntr,f,c
 13520  003756                     l13521:
 13521  003756  5022               	movf	__display_checked@cntr,w,c
 13522  003758  0D01               	mullw	1
 13523  00375A  0E73               	movlw	low _checked_line3
 13524  00375C  24F3               	addwf	prodl,w,c
 13525  00375E  6EF6               	movwf	tblptrl,c
 13526  003760  0E8E               	movlw	high _checked_line3
 13527  003762  20F4               	addwfc	prodh,w,c
 13528  003764  6EF7               	movwf	tblptrh,c
 13529  003766                     	if	1	;There are 3 active tblptr bytes
 13530  003766  6AF8               	clrf	tblptru,c
 13531  003768  0E00               	movlw	low (__mediumconst shr (0+16))
 13532  00376A  22F8               	addwfc	tblptru,f,c
 13533  00376C                     	endif
 13534  00376C  0008               	tblrd		*
 13535  00376E  50F5               	movf	tablat,w,c
 13536  003770  0900               	iorlw	0
 13537  003772  A4D8               	btfss	status,2,c
 13538  003774  D7D4               	goto	l13517
 13539                           
 13540                           ;display.c: 360: cntr = 0;
 13541  003776  0E00               	movlw	0
 13542  003778  6E22               	movwf	__display_checked@cntr,c
 13543                           
 13544                           ;display.c: 361: while(checked_line4[cntr])
 13545  00377A  D017               	goto	l13529
 13546  00377C                     l13525:
 13547                           
 13548                           ;display.c: 362: display_content[3][cntr] = checked_line4[cntr++];
 13549  00377C  5022               	movf	__display_checked@cntr,w,c
 13550  00377E  0D01               	mullw	1
 13551  003780  0E86               	movlw	low _checked_line4
 13552  003782  24F3               	addwf	prodl,w,c
 13553  003784  6EF6               	movwf	tblptrl,c
 13554  003786  0E8D               	movlw	high _checked_line4
 13555  003788  20F4               	addwfc	prodh,w,c
 13556  00378A  6EF7               	movwf	tblptrh,c
 13557  00378C                     	if	1	;There are 3 active tblptr bytes
 13558  00378C  6AF8               	clrf	tblptru,c
 13559  00378E  0E00               	movlw	low (__mediumconst shr (0+16))
 13560  003790  22F8               	addwfc	tblptru,f,c
 13561  003792                     	endif
 13562  003792  5022               	movf	__display_checked@cntr,w,c
 13563  003794  0D01               	mullw	1
 13564  003796  0EA0               	movlw	low (_display_content+60)
 13565  003798  24F3               	addwf	prodl,w,c
 13566  00379A  6ED9               	movwf	fsr2l,c
 13567  00379C  0E02               	movlw	high (_display_content+60)
 13568  00379E  20F4               	addwfc	prodh,w,c
 13569  0037A0  6EDA               	movwf	fsr2h,c
 13570  0037A2  0008               	tblrd		*
 13571  0037A4  CFF5 FFDF          	movff	tablat,indf2
 13572  0037A8  2A22               	incf	__display_checked@cntr,f,c
 13573  0037AA                     l13529:
 13574  0037AA  5022               	movf	__display_checked@cntr,w,c
 13575  0037AC  0D01               	mullw	1
 13576  0037AE  0E86               	movlw	low _checked_line4
 13577  0037B0  24F3               	addwf	prodl,w,c
 13578  0037B2  6EF6               	movwf	tblptrl,c
 13579  0037B4  0E8D               	movlw	high _checked_line4
 13580  0037B6  20F4               	addwfc	prodh,w,c
 13581  0037B8  6EF7               	movwf	tblptrh,c
 13582  0037BA                     	if	1	;There are 3 active tblptr bytes
 13583  0037BA  6AF8               	clrf	tblptru,c
 13584  0037BC  0E00               	movlw	low (__mediumconst shr (0+16))
 13585  0037BE  22F8               	addwfc	tblptru,f,c
 13586  0037C0                     	endif
 13587  0037C0  0008               	tblrd		*
 13588  0037C2  50F5               	movf	tablat,w,c
 13589  0037C4  0900               	iorlw	0
 13590  0037C6  B4D8               	btfsc	status,2,c
 13591  0037C8  0012               	return	
 13592  0037CA  D7D8               	goto	l13525
 13593  0037CC                     __end_of__display_checked:
 13594                           	opt stack 0
 13595                           tblptru	equ	0xFF8
 13596                           tblptrh	equ	0xFF7
 13597                           tblptrl	equ	0xFF6
 13598                           tablat	equ	0xFF5
 13599                           prodh	equ	0xFF4
 13600                           prodl	equ	0xFF3
 13601                           intcon	equ	0xFF2
 13602                           intcon2	equ	0xFF1
 13603                           intcon3	equ	0xFF0
 13604                           postinc0	equ	0xFEE
 13605                           wreg	equ	0xFE8
 13606                           indf1	equ	0xFE7
 13607                           postdec1	equ	0xFE5
 13608                           plusw1	equ	0xFE3
 13609                           fsr1h	equ	0xFE2
 13610                           fsr1l	equ	0xFE1
 13611                           indf2	equ	0xFDF
 13612                           postinc2	equ	0xFDE
 13613                           postdec2	equ	0xFDD
 13614                           plusw2	equ	0xFDB
 13615                           fsr2h	equ	0xFDA
 13616                           fsr2l	equ	0xFD9
 13617                           status	equ	0xFD8
 13618                           
 13619 ;; *************** function _bootloader_get_total_entries *****************
 13620 ;; Defined at:
 13621 ;;		line 452 in file "bootloader.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;		None
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;		None
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  2    0[COMRAM] unsigned int 
 13628 ;; Registers used:
 13629 ;;		None
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13639 ;;Total ram usage:        2 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		__display_checked
 13645 ;;		__display_programming
 13646 ;;		__display_done
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           	psect	text58
 13651  0078B2                     __ptext58:
 13652                           	opt stack 0
 13653  0078B2                     _bootloader_get_total_entries:
 13654                           	opt stack 28
 13655                           
 13656                           ;bootloader.c: 454: return total_hex_file_entries;
 13657                           
 13658                           ;incstack = 0
 13659  0078B2  C16E  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 13660  0078B6  C16F  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 13661  0078BA  0012               	return		;funcret
 13662  0078BC                     __end_of_bootloader_get_total_entries:
 13663                           	opt stack 0
 13664                           tblptru	equ	0xFF8
 13665                           tblptrh	equ	0xFF7
 13666                           tblptrl	equ	0xFF6
 13667                           tablat	equ	0xFF5
 13668                           prodh	equ	0xFF4
 13669                           prodl	equ	0xFF3
 13670                           intcon	equ	0xFF2
 13671                           intcon2	equ	0xFF1
 13672                           intcon3	equ	0xFF0
 13673                           postinc0	equ	0xFEE
 13674                           wreg	equ	0xFE8
 13675                           indf1	equ	0xFE7
 13676                           postdec1	equ	0xFE5
 13677                           plusw1	equ	0xFE3
 13678                           fsr1h	equ	0xFE2
 13679                           fsr1l	equ	0xFE1
 13680                           indf2	equ	0xFDF
 13681                           postinc2	equ	0xFDE
 13682                           postdec2	equ	0xFDD
 13683                           plusw2	equ	0xFDB
 13684                           fsr2h	equ	0xFDA
 13685                           fsr2l	equ	0xFD9
 13686                           status	equ	0xFD8
 13687                           
 13688 ;; *************** function __display_itoa_u16 *****************
 13689 ;; Defined at:
 13690 ;;		line 77 in file "display.c"
 13691 ;; Parameters:    Size  Location     Type
 13692 ;;  value           4   24[COMRAM] unsigned long 
 13693 ;;  text            2   28[COMRAM] PTR unsigned char 
 13694 ;;		 -> display_content(80), 
 13695 ;; Auto vars:     Size  Location     Type
 13696 ;;		None
 13697 ;; Return value:  Size  Location     Type
 13698 ;;                  1    wreg      unsigned char 
 13699 ;; Registers used:
 13700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13701 ;; Tracked objects:
 13702 ;;		On entry : 0/0
 13703 ;;		On exit  : 0/0
 13704 ;;		Unchanged: 0/0
 13705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13706 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13710 ;;Total ram usage:        6 bytes
 13711 ;; Hardware stack levels used:    1
 13712 ;; Hardware stack levels required when called:    3
 13713 ;; This function calls:
 13714 ;;		_itoa
 13715 ;; This function is called by:
 13716 ;;		__display_itoa_u32
 13717 ;;		__display_verify
 13718 ;;		__display_checked
 13719 ;;		__display_failed
 13720 ;;		__display_programming
 13721 ;;		__display_done
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           	psect	text59
 13726  005322                     __ptext59:
 13727                           	opt stack 0
 13728  005322                     __display_itoa_u16:
 13729                           	opt stack 25
 13730                           
 13731                           ;display.c: 79: itoa(text, value, 10);
 13732                           
 13733                           ;incstack = 0
 13734  005322  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 13735  005326  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 13736  00532A  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 13737  00532E  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 13738  005332  0E00               	movlw	0
 13739  005334  6E16               	movwf	itoa@base+1,c
 13740  005336  0E0A               	movlw	10
 13741  005338  6E15               	movwf	itoa@base,c
 13742  00533A  ECC4  F037         	call	_itoa	;wreg free
 13743                           
 13744                           ;display.c: 80: if(value>9999)
 13745  00533E  501C               	movf	__display_itoa_u16@value+3,w,c
 13746  005340  101B               	iorwf	__display_itoa_u16@value+2,w,c
 13747  005342  E106               	bnz	u8440
 13748  005344  0E10               	movlw	16
 13749  005346  5C19               	subwf	__display_itoa_u16@value,w,c
 13750  005348  0E27               	movlw	39
 13751  00534A  581A               	subwfb	__display_itoa_u16@value+1,w,c
 13752  00534C  A0D8               	btfss	status,0,c
 13753  00534E  D00A               	goto	l11247
 13754  005350                     u8440:
 13755                           
 13756                           ;display.c: 81: {
 13757                           ;display.c: 82: *(text+5) = ' ';
 13758  005350  EE20 F005          	lfsr	2,5
 13759  005354  501D               	movf	__display_itoa_u16@text,w,c
 13760  005356  26D9               	addwf	fsr2l,f,c
 13761  005358  501E               	movf	__display_itoa_u16@text+1,w,c
 13762  00535A  22DA               	addwfc	fsr2h,f,c
 13763  00535C  0E20               	movlw	32
 13764  00535E  6EDF               	movwf	indf2,c
 13765                           
 13766                           ;display.c: 83: return 5;
 13767  005360  0E05               	movlw	5
 13768                           
 13769                           ;display.c: 84: }
 13770  005362  0012               	return	
 13771  005364                     l11247:
 13772                           
 13773                           ;display.c: 85: else if (value>999)
 13774  005364  501C               	movf	__display_itoa_u16@value+3,w,c
 13775  005366  101B               	iorwf	__display_itoa_u16@value+2,w,c
 13776  005368  E106               	bnz	u8450
 13777  00536A  0EE8               	movlw	232
 13778  00536C  5C19               	subwf	__display_itoa_u16@value,w,c
 13779  00536E  0E03               	movlw	3
 13780  005370  581A               	subwfb	__display_itoa_u16@value+1,w,c
 13781  005372  A0D8               	btfss	status,0,c
 13782  005374  D00A               	goto	l11257
 13783  005376                     u8450:
 13784                           
 13785                           ;display.c: 86: {
 13786                           ;display.c: 87: *(text+4) = ' ';
 13787  005376  EE20 F004          	lfsr	2,4
 13788  00537A  501D               	movf	__display_itoa_u16@text,w,c
 13789  00537C  26D9               	addwf	fsr2l,f,c
 13790  00537E  501E               	movf	__display_itoa_u16@text+1,w,c
 13791  005380  22DA               	addwfc	fsr2h,f,c
 13792  005382  0E20               	movlw	32
 13793  005384  6EDF               	movwf	indf2,c
 13794                           
 13795                           ;display.c: 88: return 4;
 13796  005386  0E04               	movlw	4
 13797                           
 13798                           ;display.c: 89: }
 13799  005388  0012               	return	
 13800  00538A                     l11257:
 13801                           
 13802                           ;display.c: 90: else if (value>99)
 13803  00538A  501C               	movf	__display_itoa_u16@value+3,w,c
 13804  00538C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 13805  00538E  101A               	iorwf	__display_itoa_u16@value+1,w,c
 13806  005390  E104               	bnz	u8460
 13807  005392  0E64               	movlw	100
 13808  005394  5C19               	subwf	__display_itoa_u16@value,w,c
 13809  005396  A0D8               	btfss	status,0,c
 13810  005398  D00A               	goto	l11267
 13811  00539A                     u8460:
 13812                           
 13813                           ;display.c: 91: {
 13814                           ;display.c: 92: *(text+3) = ' ';
 13815  00539A  EE20 F003          	lfsr	2,3
 13816  00539E  501D               	movf	__display_itoa_u16@text,w,c
 13817  0053A0  26D9               	addwf	fsr2l,f,c
 13818  0053A2  501E               	movf	__display_itoa_u16@text+1,w,c
 13819  0053A4  22DA               	addwfc	fsr2h,f,c
 13820  0053A6  0E20               	movlw	32
 13821  0053A8  6EDF               	movwf	indf2,c
 13822                           
 13823                           ;display.c: 93: return 3;
 13824  0053AA  0E03               	movlw	3
 13825                           
 13826                           ;display.c: 94: }
 13827  0053AC  0012               	return	
 13828  0053AE                     l11267:
 13829                           
 13830                           ;display.c: 95: else if (value>9)
 13831  0053AE  501C               	movf	__display_itoa_u16@value+3,w,c
 13832  0053B0  101B               	iorwf	__display_itoa_u16@value+2,w,c
 13833  0053B2  101A               	iorwf	__display_itoa_u16@value+1,w,c
 13834  0053B4  E104               	bnz	u8470
 13835  0053B6  0E0A               	movlw	10
 13836  0053B8  5C19               	subwf	__display_itoa_u16@value,w,c
 13837  0053BA  A0D8               	btfss	status,0,c
 13838  0053BC  D00A               	goto	l11277
 13839  0053BE                     u8470:
 13840                           
 13841                           ;display.c: 96: {
 13842                           ;display.c: 97: *(text+2) = ' ';
 13843  0053BE  EE20 F002          	lfsr	2,2
 13844  0053C2  501D               	movf	__display_itoa_u16@text,w,c
 13845  0053C4  26D9               	addwf	fsr2l,f,c
 13846  0053C6  501E               	movf	__display_itoa_u16@text+1,w,c
 13847  0053C8  22DA               	addwfc	fsr2h,f,c
 13848  0053CA  0E20               	movlw	32
 13849  0053CC  6EDF               	movwf	indf2,c
 13850                           
 13851                           ;display.c: 98: return 2;
 13852  0053CE  0E02               	movlw	2
 13853                           
 13854                           ;display.c: 99: }
 13855  0053D0  0012               	return	
 13856  0053D2                     l11277:
 13857                           
 13858                           ;display.c: 100: else
 13859                           ;display.c: 101: {
 13860                           ;display.c: 102: *(text+1) = ' ';
 13861  0053D2  EE20 F001          	lfsr	2,1
 13862  0053D6  501D               	movf	__display_itoa_u16@text,w,c
 13863  0053D8  26D9               	addwf	fsr2l,f,c
 13864  0053DA  501E               	movf	__display_itoa_u16@text+1,w,c
 13865  0053DC  22DA               	addwfc	fsr2h,f,c
 13866  0053DE  0E20               	movlw	32
 13867  0053E0  6EDF               	movwf	indf2,c
 13868                           
 13869                           ;display.c: 103: return 1;
 13870  0053E2  0E01               	movlw	1
 13871  0053E4  0012               	return	
 13872  0053E6                     __end_of__display_itoa_u16:
 13873                           	opt stack 0
 13874                           tblptru	equ	0xFF8
 13875                           tblptrh	equ	0xFF7
 13876                           tblptrl	equ	0xFF6
 13877                           tablat	equ	0xFF5
 13878                           prodh	equ	0xFF4
 13879                           prodl	equ	0xFF3
 13880                           intcon	equ	0xFF2
 13881                           intcon2	equ	0xFF1
 13882                           intcon3	equ	0xFF0
 13883                           postinc0	equ	0xFEE
 13884                           wreg	equ	0xFE8
 13885                           indf1	equ	0xFE7
 13886                           postdec1	equ	0xFE5
 13887                           plusw1	equ	0xFE3
 13888                           fsr1h	equ	0xFE2
 13889                           fsr1l	equ	0xFE1
 13890                           indf2	equ	0xFDF
 13891                           postinc2	equ	0xFDE
 13892                           postdec2	equ	0xFDD
 13893                           plusw2	equ	0xFDB
 13894                           fsr2h	equ	0xFDA
 13895                           fsr2l	equ	0xFD9
 13896                           status	equ	0xFD8
 13897                           
 13898 ;; *************** function _itoa *****************
 13899 ;; Defined at:
 13900 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  buf             2   16[COMRAM] PTR unsigned char 
 13903 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 13904 ;;  val             2   18[COMRAM] int 
 13905 ;;  base            2   20[COMRAM] int 
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;  cp              2   22[COMRAM] PTR unsigned char 
 13908 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 13909 ;; Return value:  Size  Location     Type
 13910 ;;                  2   16[COMRAM] PTR unsigned char 
 13911 ;; Registers used:
 13912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13913 ;; Tracked objects:
 13914 ;;		On entry : 0/0
 13915 ;;		On exit  : 0/0
 13916 ;;		Unchanged: 0/0
 13917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13918 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13921 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13922 ;;Total ram usage:        8 bytes
 13923 ;; Hardware stack levels used:    1
 13924 ;; Hardware stack levels required when called:    2
 13925 ;; This function calls:
 13926 ;;		_utoa
 13927 ;; This function is called by:
 13928 ;;		__display_itoa_u16
 13929 ;;		__display_itoa_u32
 13930 ;;		__display_itoa
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text60
 13935  006F88                     __ptext60:
 13936                           	opt stack 0
 13937  006F88                     _itoa:
 13938                           	opt stack 25
 13939                           
 13940                           ;incstack = 0
 13941  006F88  C011  F017         	movff	itoa@buf,itoa@cp
 13942  006F8C  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 13943  006F90  AE14               	btfss	itoa@val+1,7,c
 13944  006F92  D00C               	goto	l10925
 13945  006F94  C011  FFD9         	movff	itoa@buf,fsr2l
 13946  006F98  C012  FFDA         	movff	itoa@buf+1,fsr2h
 13947  006F9C  0E2D               	movlw	45
 13948  006F9E  6EDF               	movwf	indf2,c
 13949  006FA0  4A11               	infsnz	itoa@buf,f,c
 13950  006FA2  2A12               	incf	itoa@buf+1,f,c
 13951  006FA4  6C13               	negf	itoa@val,c
 13952  006FA6  1E14               	comf	itoa@val+1,f,c
 13953  006FA8  B0D8               	btfsc	status,0,c
 13954  006FAA  2A14               	incf	itoa@val+1,f,c
 13955  006FAC                     l10925:
 13956  006FAC  C011  F008         	movff	itoa@buf,utoa@buf
 13957  006FB0  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 13958  006FB4  C013  F00A         	movff	itoa@val,utoa@val
 13959  006FB8  C014  F00B         	movff	itoa@val+1,utoa@val+1
 13960  006FBC  C015  F00C         	movff	itoa@base,utoa@base
 13961  006FC0  C016  F00D         	movff	itoa@base+1,utoa@base+1
 13962  006FC4  ECBC  F02C         	call	_utoa	;wreg free
 13963  006FC8  0012               	return	
 13964  006FCA                     __end_of_itoa:
 13965                           	opt stack 0
 13966                           tblptru	equ	0xFF8
 13967                           tblptrh	equ	0xFF7
 13968                           tblptrl	equ	0xFF6
 13969                           tablat	equ	0xFF5
 13970                           prodh	equ	0xFF4
 13971                           prodl	equ	0xFF3
 13972                           intcon	equ	0xFF2
 13973                           intcon2	equ	0xFF1
 13974                           intcon3	equ	0xFF0
 13975                           postinc0	equ	0xFEE
 13976                           wreg	equ	0xFE8
 13977                           indf1	equ	0xFE7
 13978                           postdec1	equ	0xFE5
 13979                           plusw1	equ	0xFE3
 13980                           fsr1h	equ	0xFE2
 13981                           fsr1l	equ	0xFE1
 13982                           indf2	equ	0xFDF
 13983                           postinc2	equ	0xFDE
 13984                           postdec2	equ	0xFDD
 13985                           plusw2	equ	0xFDB
 13986                           fsr2h	equ	0xFDA
 13987                           fsr2l	equ	0xFD9
 13988                           status	equ	0xFD8
 13989                           
 13990 ;; *************** function _utoa *****************
 13991 ;; Defined at:
 13992 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  buf             2    7[COMRAM] PTR unsigned char 
 13995 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 13996 ;;  val             2    9[COMRAM] unsigned int 
 13997 ;;  base            2   11[COMRAM] int 
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;  v               2   13[COMRAM] unsigned int 
 14000 ;;  c               1   15[COMRAM] unsigned char 
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  2    7[COMRAM] PTR unsigned char 
 14003 ;; Registers used:
 14004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 0/0
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14010 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14011 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14013 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14014 ;;Total ram usage:        9 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; Hardware stack levels required when called:    1
 14017 ;; This function calls:
 14018 ;;		___lwdiv
 14019 ;;		___lwmod
 14020 ;; This function is called by:
 14021 ;;		_itoa
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           	psect	text61
 14026  005978                     __ptext61:
 14027                           	opt stack 0
 14028  005978                     _utoa:
 14029                           	opt stack 25
 14030                           
 14031                           ;incstack = 0
 14032  005978  C00A  F00E         	movff	utoa@val,utoa@v
 14033  00597C  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 14034  005980                     l10439:
 14035  005980  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 14036  005984  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 14037  005988  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 14038  00598C  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 14039  005990  EC94  F035         	call	___lwdiv	;wreg free
 14040  005994  C001  F00E         	movff	?___lwdiv,utoa@v
 14041  005998  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 14042  00599C  4A08               	infsnz	utoa@buf,f,c
 14043  00599E  2A09               	incf	utoa@buf+1,f,c
 14044  0059A0  500E               	movf	utoa@v,w,c
 14045  0059A2  100F               	iorwf	utoa@v+1,w,c
 14046  0059A4  A4D8               	btfss	status,2,c
 14047  0059A6  D7EC               	goto	l10439
 14048  0059A8  C008  FFD9         	movff	utoa@buf,fsr2l
 14049  0059AC  C009  FFDA         	movff	utoa@buf+1,fsr2h
 14050  0059B0  0E00               	movlw	0
 14051  0059B2  6EDF               	movwf	indf2,c
 14052  0059B4  0608               	decf	utoa@buf,f,c
 14053  0059B6  A0D8               	btfss	status,0,c
 14054  0059B8  0609               	decf	utoa@buf+1,f,c
 14055  0059BA                     l10449:
 14056  0059BA  C00A  F001         	movff	utoa@val,___lwmod@dividend
 14057  0059BE  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 14058  0059C2  C00C  F003         	movff	utoa@base,___lwmod@divisor
 14059  0059C6  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 14060  0059CA  ECE5  F037         	call	___lwmod	;wreg free
 14061  0059CE  5001               	movf	?___lwmod,w,c
 14062  0059D0  6E10               	movwf	utoa@c,c
 14063  0059D2  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 14064  0059D6  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 14065  0059DA  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 14066  0059DE  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 14067  0059E2  EC94  F035         	call	___lwdiv	;wreg free
 14068  0059E6  C001  F00A         	movff	?___lwdiv,utoa@val
 14069  0059EA  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 14070  0059EE  0E09               	movlw	9
 14071  0059F0  6410               	cpfsgt	utoa@c,c
 14072  0059F2  D002               	goto	l3136
 14073  0059F4  0E07               	movlw	7
 14074  0059F6  2610               	addwf	utoa@c,f,c
 14075  0059F8                     l3136:
 14076  0059F8  0E30               	movlw	48
 14077  0059FA  2610               	addwf	utoa@c,f,c
 14078  0059FC  C008  FFD9         	movff	utoa@buf,fsr2l
 14079  005A00  C009  FFDA         	movff	utoa@buf+1,fsr2h
 14080  005A04  C010  FFDF         	movff	utoa@c,indf2
 14081  005A08  0608               	decf	utoa@buf,f,c
 14082  005A0A  A0D8               	btfss	status,0,c
 14083  005A0C  0609               	decf	utoa@buf+1,f,c
 14084  005A0E  500A               	movf	utoa@val,w,c
 14085  005A10  100B               	iorwf	utoa@val+1,w,c
 14086  005A12  A4D8               	btfss	status,2,c
 14087  005A14  D7D2               	goto	l10449
 14088                           
 14089                           ;	Return value of _utoa is never used
 14090  005A16  4A08               	infsnz	utoa@buf,f,c
 14091  005A18  2A09               	incf	utoa@buf+1,f,c
 14092  005A1A  0012               	return	
 14093  005A1C                     __end_of_utoa:
 14094                           	opt stack 0
 14095                           tblptru	equ	0xFF8
 14096                           tblptrh	equ	0xFF7
 14097                           tblptrl	equ	0xFF6
 14098                           tablat	equ	0xFF5
 14099                           prodh	equ	0xFF4
 14100                           prodl	equ	0xFF3
 14101                           intcon	equ	0xFF2
 14102                           intcon2	equ	0xFF1
 14103                           intcon3	equ	0xFF0
 14104                           postinc0	equ	0xFEE
 14105                           wreg	equ	0xFE8
 14106                           indf1	equ	0xFE7
 14107                           postdec1	equ	0xFE5
 14108                           plusw1	equ	0xFE3
 14109                           fsr1h	equ	0xFE2
 14110                           fsr1l	equ	0xFE1
 14111                           indf2	equ	0xFDF
 14112                           postinc2	equ	0xFDE
 14113                           postdec2	equ	0xFDD
 14114                           plusw2	equ	0xFDB
 14115                           fsr2h	equ	0xFDA
 14116                           fsr2l	equ	0xFD9
 14117                           status	equ	0xFD8
 14118                           
 14119 ;; *************** function ___lwmod *****************
 14120 ;; Defined at:
 14121 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
 14122 ;; Parameters:    Size  Location     Type
 14123 ;;  dividend        2    0[COMRAM] unsigned int 
 14124 ;;  divisor         2    2[COMRAM] unsigned int 
 14125 ;; Auto vars:     Size  Location     Type
 14126 ;;  counter         1    4[COMRAM] unsigned char 
 14127 ;; Return value:  Size  Location     Type
 14128 ;;                  2    0[COMRAM] unsigned int 
 14129 ;; Registers used:
 14130 ;;		wreg, status,2, status,0
 14131 ;; Tracked objects:
 14132 ;;		On entry : 0/0
 14133 ;;		On exit  : 0/0
 14134 ;;		Unchanged: 0/0
 14135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14140 ;;Total ram usage:        5 bytes
 14141 ;; Hardware stack levels used:    1
 14142 ;; This function calls:
 14143 ;;		Nothing
 14144 ;; This function is called by:
 14145 ;;		_utoa
 14146 ;; This function uses a non-reentrant model
 14147 ;;
 14148                           
 14149                           	psect	text62
 14150  006FCA                     __ptext62:
 14151                           	opt stack 0
 14152  006FCA                     ___lwmod:
 14153                           	opt stack 25
 14154                           
 14155                           ;incstack = 0
 14156  006FCA  5003               	movf	___lwmod@divisor,w,c
 14157  006FCC  1004               	iorwf	___lwmod@divisor+1,w,c
 14158  006FCE  B4D8               	btfsc	status,2,c
 14159  006FD0  D018               	goto	l3225
 14160  006FD2  0E01               	movlw	1
 14161  006FD4  6E05               	movwf	___lwmod@counter,c
 14162  006FD6  D004               	goto	l10129
 14163  006FD8                     l10127:
 14164  006FD8  90D8               	bcf	status,0,c
 14165  006FDA  3603               	rlcf	___lwmod@divisor,f,c
 14166  006FDC  3604               	rlcf	___lwmod@divisor+1,f,c
 14167  006FDE  2A05               	incf	___lwmod@counter,f,c
 14168  006FE0                     l10129:
 14169  006FE0  AE04               	btfss	___lwmod@divisor+1,7,c
 14170  006FE2  D7FA               	goto	l10127
 14171  006FE4                     l10131:
 14172  006FE4  5003               	movf	___lwmod@divisor,w,c
 14173  006FE6  5C01               	subwf	___lwmod@dividend,w,c
 14174  006FE8  5004               	movf	___lwmod@divisor+1,w,c
 14175  006FEA  5802               	subwfb	___lwmod@dividend+1,w,c
 14176  006FEC  A0D8               	btfss	status,0,c
 14177  006FEE  D004               	goto	l10135
 14178  006FF0  5003               	movf	___lwmod@divisor,w,c
 14179  006FF2  5E01               	subwf	___lwmod@dividend,f,c
 14180  006FF4  5004               	movf	___lwmod@divisor+1,w,c
 14181  006FF6  5A02               	subwfb	___lwmod@dividend+1,f,c
 14182  006FF8                     l10135:
 14183  006FF8  90D8               	bcf	status,0,c
 14184  006FFA  3204               	rrcf	___lwmod@divisor+1,f,c
 14185  006FFC  3203               	rrcf	___lwmod@divisor,f,c
 14186  006FFE  2E05               	decfsz	___lwmod@counter,f,c
 14187  007000  D7F1               	goto	l10131
 14188  007002                     l3225:
 14189  007002  C001  F001         	movff	___lwmod@dividend,?___lwmod
 14190  007006  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 14191  00700A  0012               	return		;funcret
 14192  00700C                     __end_of___lwmod:
 14193                           	opt stack 0
 14194                           tblptru	equ	0xFF8
 14195                           tblptrh	equ	0xFF7
 14196                           tblptrl	equ	0xFF6
 14197                           tablat	equ	0xFF5
 14198                           prodh	equ	0xFF4
 14199                           prodl	equ	0xFF3
 14200                           intcon	equ	0xFF2
 14201                           intcon2	equ	0xFF1
 14202                           intcon3	equ	0xFF0
 14203                           postinc0	equ	0xFEE
 14204                           wreg	equ	0xFE8
 14205                           indf1	equ	0xFE7
 14206                           postdec1	equ	0xFE5
 14207                           plusw1	equ	0xFE3
 14208                           fsr1h	equ	0xFE2
 14209                           fsr1l	equ	0xFE1
 14210                           indf2	equ	0xFDF
 14211                           postinc2	equ	0xFDE
 14212                           postdec2	equ	0xFDD
 14213                           plusw2	equ	0xFDB
 14214                           fsr2h	equ	0xFDA
 14215                           fsr2l	equ	0xFD9
 14216                           status	equ	0xFD8
 14217                           
 14218 ;; *************** function ___lwdiv *****************
 14219 ;; Defined at:
 14220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 14221 ;; Parameters:    Size  Location     Type
 14222 ;;  dividend        2    0[COMRAM] unsigned int 
 14223 ;;  divisor         2    2[COMRAM] unsigned int 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  quotient        2    4[COMRAM] unsigned int 
 14226 ;;  counter         1    6[COMRAM] unsigned char 
 14227 ;; Return value:  Size  Location     Type
 14228 ;;                  2    0[COMRAM] unsigned int 
 14229 ;; Registers used:
 14230 ;;		wreg, status,2, status,0
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14237 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14239 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14240 ;;Total ram usage:        7 bytes
 14241 ;; Hardware stack levels used:    1
 14242 ;; This function calls:
 14243 ;;		Nothing
 14244 ;; This function is called by:
 14245 ;;		_utoa
 14246 ;; This function uses a non-reentrant model
 14247 ;;
 14248                           
 14249                           	psect	text63
 14250  006B28                     __ptext63:
 14251                           	opt stack 0
 14252  006B28                     ___lwdiv:
 14253                           	opt stack 25
 14254                           
 14255                           ;incstack = 0
 14256  006B28  0E00               	movlw	0
 14257  006B2A  6E06               	movwf	___lwdiv@quotient+1,c
 14258  006B2C  0E00               	movlw	0
 14259  006B2E  6E05               	movwf	___lwdiv@quotient,c
 14260  006B30  5003               	movf	___lwdiv@divisor,w,c
 14261  006B32  1004               	iorwf	___lwdiv@divisor+1,w,c
 14262  006B34  B4D8               	btfsc	status,2,c
 14263  006B36  D01C               	goto	l3215
 14264  006B38  0E01               	movlw	1
 14265  006B3A  6E07               	movwf	___lwdiv@counter,c
 14266  006B3C  D004               	goto	l10109
 14267  006B3E                     l10107:
 14268  006B3E  90D8               	bcf	status,0,c
 14269  006B40  3603               	rlcf	___lwdiv@divisor,f,c
 14270  006B42  3604               	rlcf	___lwdiv@divisor+1,f,c
 14271  006B44  2A07               	incf	___lwdiv@counter,f,c
 14272  006B46                     l10109:
 14273  006B46  AE04               	btfss	___lwdiv@divisor+1,7,c
 14274  006B48  D7FA               	goto	l10107
 14275  006B4A                     l10111:
 14276  006B4A  90D8               	bcf	status,0,c
 14277  006B4C  3605               	rlcf	___lwdiv@quotient,f,c
 14278  006B4E  3606               	rlcf	___lwdiv@quotient+1,f,c
 14279  006B50  5003               	movf	___lwdiv@divisor,w,c
 14280  006B52  5C01               	subwf	___lwdiv@dividend,w,c
 14281  006B54  5004               	movf	___lwdiv@divisor+1,w,c
 14282  006B56  5802               	subwfb	___lwdiv@dividend+1,w,c
 14283  006B58  A0D8               	btfss	status,0,c
 14284  006B5A  D005               	goto	l10119
 14285  006B5C  5003               	movf	___lwdiv@divisor,w,c
 14286  006B5E  5E01               	subwf	___lwdiv@dividend,f,c
 14287  006B60  5004               	movf	___lwdiv@divisor+1,w,c
 14288  006B62  5A02               	subwfb	___lwdiv@dividend+1,f,c
 14289  006B64  8005               	bsf	___lwdiv@quotient,0,c
 14290  006B66                     l10119:
 14291  006B66  90D8               	bcf	status,0,c
 14292  006B68  3204               	rrcf	___lwdiv@divisor+1,f,c
 14293  006B6A  3203               	rrcf	___lwdiv@divisor,f,c
 14294  006B6C  2E07               	decfsz	___lwdiv@counter,f,c
 14295  006B6E  D7ED               	goto	l10111
 14296  006B70                     l3215:
 14297  006B70  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 14298  006B74  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14299  006B78  0012               	return		;funcret
 14300  006B7A                     __end_of___lwdiv:
 14301                           	opt stack 0
 14302                           tblptru	equ	0xFF8
 14303                           tblptrh	equ	0xFF7
 14304                           tblptrl	equ	0xFF6
 14305                           tablat	equ	0xFF5
 14306                           prodh	equ	0xFF4
 14307                           prodl	equ	0xFF3
 14308                           intcon	equ	0xFF2
 14309                           intcon2	equ	0xFF1
 14310                           intcon3	equ	0xFF0
 14311                           postinc0	equ	0xFEE
 14312                           wreg	equ	0xFE8
 14313                           indf1	equ	0xFE7
 14314                           postdec1	equ	0xFE5
 14315                           plusw1	equ	0xFE3
 14316                           fsr1h	equ	0xFE2
 14317                           fsr1l	equ	0xFE1
 14318                           indf2	equ	0xFDF
 14319                           postinc2	equ	0xFDE
 14320                           postdec2	equ	0xFDD
 14321                           plusw2	equ	0xFDB
 14322                           fsr2h	equ	0xFDA
 14323                           fsr2l	equ	0xFD9
 14324                           status	equ	0xFD8
 14325                           
 14326 ;; *************** function _bootloader_run *****************
 14327 ;; Defined at:
 14328 ;;		line 60 in file "bootloader.c"
 14329 ;; Parameters:    Size  Location     Type
 14330 ;;		None
 14331 ;; Auto vars:     Size  Location     Type
 14332 ;;		None
 14333 ;; Return value:  Size  Location     Type
 14334 ;;                  1    wreg      void 
 14335 ;; Registers used:
 14336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14337 ;; Tracked objects:
 14338 ;;		On entry : 0/0
 14339 ;;		On exit  : 0/0
 14340 ;;		Unchanged: 0/0
 14341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14346 ;;Total ram usage:        0 bytes
 14347 ;; Hardware stack levels used:    1
 14348 ;; Hardware stack levels required when called:    7
 14349 ;; This function calls:
 14350 ;;		__bootloader_find_file
 14351 ;;		__bootloader_program
 14352 ;;		__bootloader_verify_file
 14353 ;; This function is called by:
 14354 ;;		_main
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           
 14358                           	psect	text64
 14359  006EB8                     __ptext64:
 14360                           	opt stack 0
 14361  006EB8                     _bootloader_run:
 14362                           	opt stack 23
 14363                           
 14364                           ;bootloader.c: 62: switch(os.bootloader_mode)
 14365                           
 14366                           ;incstack = 0
 14367  006EB8  D00C               	goto	l14361
 14368  006EBA                     l14351:
 14369                           
 14370                           ;bootloader.c: 65: _bootloader_find_file();
 14371  006EBA  EC68  F02B         	call	__bootloader_find_file	;wreg free
 14372                           
 14373                           ;bootloader.c: 66: break;
 14374  006EBE  0012               	return	
 14375  006EC0                     l14353:
 14376                           
 14377                           ;bootloader.c: 69: _bootloader_find_file();
 14378  006EC0  EC68  F02B         	call	__bootloader_find_file	;wreg free
 14379                           
 14380                           ;bootloader.c: 70: break;
 14381  006EC4  0012               	return	
 14382  006EC6                     l14355:
 14383                           
 14384                           ;bootloader.c: 73: _bootloader_verify_file();
 14385  006EC6  EC6A  F00B         	call	__bootloader_verify_file	;wreg free
 14386                           
 14387                           ;bootloader.c: 80: break;
 14388                           
 14389                           ;bootloader.c: 79: case BOOTLOADER_MODE_CHECK_FAILED:
 14390                           
 14391                           ;bootloader.c: 77: break;
 14392                           
 14393                           ;bootloader.c: 76: case BOOTLOADER_MODE_CHECK_COMPLETE:
 14394                           
 14395                           ;bootloader.c: 74: break;
 14396  006ECA  0012               	return	
 14397  006ECC                     l14357:
 14398                           
 14399                           ;bootloader.c: 83: _bootloader_program();
 14400  006ECC  EC4E  F002         	call	__bootloader_program	;wreg free
 14401                           
 14402                           ;bootloader.c: 88: }
 14403                           
 14404                           ;bootloader.c: 87: break;
 14405                           
 14406                           ;bootloader.c: 86: case BOOTLOADER_MODE_DONE:
 14407                           
 14408                           ;bootloader.c: 84: break;
 14409  006ED0  0012               	return	
 14410  006ED2                     l14361:
 14411  006ED2  0100               	movlb	0	; () banked
 14412  006ED4  51E6               	movf	(_os+4)& (0+255),w,b	;volatile
 14413                           
 14414                           ; Switch size 1, requested type "space"
 14415                           ; Number of cases is 7, Range of values is 0 to 96
 14416                           ; switch strategies available:
 14417                           ; Name         Instructions Cycles
 14418                           ; simple_byte           22    12 (average)
 14419                           ;	Chosen strategy is simple_byte
 14420  006ED6  0A00               	xorlw	0	; case 0
 14421  006ED8  B4D8               	btfsc	status,2,c
 14422  006EDA  D7EF               	goto	l14351
 14423  006EDC  0A10               	xorlw	16	; case 16
 14424  006EDE  B4D8               	btfsc	status,2,c
 14425  006EE0  D7EF               	goto	l14353
 14426  006EE2  0A30               	xorlw	48	; case 32
 14427  006EE4  B4D8               	btfsc	status,2,c
 14428  006EE6  D7EF               	goto	l14355
 14429  006EE8  0A10               	xorlw	16	; case 48
 14430  006EEA  B4D8               	btfsc	status,2,c
 14431  006EEC  0012               	return	
 14432  006EEE  0A70               	xorlw	112	; case 64
 14433  006EF0  B4D8               	btfsc	status,2,c
 14434  006EF2  0012               	return	
 14435  006EF4  0A10               	xorlw	16	; case 80
 14436  006EF6  B4D8               	btfsc	status,2,c
 14437  006EF8  D7E9               	goto	l14357
 14438  006EFA  0A30               	xorlw	48	; case 96
 14439  006EFC  0012               	return	
 14440  006EFE                     __end_of_bootloader_run:
 14441                           	opt stack 0
 14442                           tblptru	equ	0xFF8
 14443                           tblptrh	equ	0xFF7
 14444                           tblptrl	equ	0xFF6
 14445                           tablat	equ	0xFF5
 14446                           prodh	equ	0xFF4
 14447                           prodl	equ	0xFF3
 14448                           intcon	equ	0xFF2
 14449                           intcon2	equ	0xFF1
 14450                           intcon3	equ	0xFF0
 14451                           postinc0	equ	0xFEE
 14452                           wreg	equ	0xFE8
 14453                           indf1	equ	0xFE7
 14454                           postdec1	equ	0xFE5
 14455                           plusw1	equ	0xFE3
 14456                           fsr1h	equ	0xFE2
 14457                           fsr1l	equ	0xFE1
 14458                           indf2	equ	0xFDF
 14459                           postinc2	equ	0xFDE
 14460                           postdec2	equ	0xFDD
 14461                           plusw2	equ	0xFDB
 14462                           fsr2h	equ	0xFDA
 14463                           fsr2l	equ	0xFD9
 14464                           status	equ	0xFD8
 14465                           
 14466 ;; *************** function __bootloader_verify_file *****************
 14467 ;; Defined at:
 14468 ;;		line 164 in file "bootloader.c"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;		None
 14471 ;; Auto vars:     Size  Location     Type
 14472 ;;  address32       4   82[COMRAM] unsigned long 
 14473 ;;  return_value    4   78[COMRAM] unsigned long 
 14474 ;;  rec_counter     1   77[COMRAM] unsigned char 
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  1    wreg      void 
 14477 ;; Registers used:
 14478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14485 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14486 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14487 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14488 ;;Total ram usage:       17 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:    6
 14491 ;; This function calls:
 14492 ;;		__bootloader_check_address
 14493 ;;		_fat_get_file_size
 14494 ;;		_fat_read_from_file
 14495 ;;		_parseHexFileEntry
 14496 ;; This function is called by:
 14497 ;;		_bootloader_run
 14498 ;; This function uses a non-reentrant model
 14499 ;;
 14500                           
 14501                           	psect	text65
 14502  0016D4                     __ptext65:
 14503                           	opt stack 0
 14504  0016D4                     __bootloader_verify_file:
 14505                           	opt stack 23
 14506                           
 14507                           ;bootloader.c: 166: uint8_t rec_counter;
 14508                           ;bootloader.c: 167: uint32_t return_value = 0;
 14509                           
 14510                           ;incstack = 0
 14511  0016D4  0E00               	movlw	0
 14512  0016D6  6E4F               	movwf	__bootloader_verify_file@return_value,c
 14513  0016D8  0E00               	movlw	0
 14514  0016DA  6E50               	movwf	__bootloader_verify_file@return_value+1,c
 14515  0016DC  0E00               	movlw	0
 14516  0016DE  6E51               	movwf	__bootloader_verify_file@return_value+2,c
 14517  0016E0  0E00               	movlw	0
 14518  0016E2  6E52               	movwf	__bootloader_verify_file@return_value+3,c
 14519                           
 14520                           ;bootloader.c: 168: uint32_t address32;
 14521                           ;bootloader.c: 171: hex_file_size = fat_get_file_size(file_number);
 14522  0016E4  0100               	movlb	0	; () banked
 14523  0016E6  51FF               	movf	_file_number& (0+255),w,b
 14524  0016E8  ECD3  F031         	call	_fat_get_file_size
 14525  0016EC  C028  F143         	movff	?_fat_get_file_size,_hex_file_size
 14526  0016F0  C029  F144         	movff	?_fat_get_file_size+1,_hex_file_size+1
 14527  0016F4  C02A  F145         	movff	?_fat_get_file_size+2,_hex_file_size+2
 14528  0016F8  C02B  F146         	movff	?_fat_get_file_size+3,_hex_file_size+3
 14529                           
 14530                           ;bootloader.c: 174: for(rec_counter=0; rec_counter<1; ++rec_counter)
 14531  0016FC  0E00               	movlw	0
 14532  0016FE  6E4E               	movwf	__bootloader_verify_file@rec_counter,c
 14533  001700                     l13741:
 14534  001700  504E               	movf	__bootloader_verify_file@rec_counter,w,c
 14535  001702  A4D8               	btfss	status,2,c
 14536  001704  0012               	return	
 14537                           
 14538                           ;bootloader.c: 175: {
 14539                           ;bootloader.c: 177: if((hex_file_size-hex_file_offset)>=50)
 14540  001706  C147  F046         	movff	_hex_file_offset,??__bootloader_verify_file
 14541  00170A  C148  F047         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 14542  00170E  C149  F048         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 14543  001712  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 14544  001716  1E46               	comf	??__bootloader_verify_file,f,c
 14545  001718  1E47               	comf	??__bootloader_verify_file+1,f,c
 14546  00171A  1E48               	comf	??__bootloader_verify_file+2,f,c
 14547  00171C  1E49               	comf	??__bootloader_verify_file+3,f,c
 14548  00171E  2A46               	incf	??__bootloader_verify_file,f,c
 14549  001720  0E00               	movlw	0
 14550  001722  2247               	addwfc	??__bootloader_verify_file+1,f,c
 14551  001724  2248               	addwfc	??__bootloader_verify_file+2,f,c
 14552  001726  2249               	addwfc	??__bootloader_verify_file+3,f,c
 14553  001728  0101               	movlb	1	; () banked
 14554  00172A  5143               	movf	_hex_file_size& (0+255),w,b
 14555  00172C  2446               	addwf	??__bootloader_verify_file,w,c
 14556  00172E  6E4A               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 14557  001730  0101               	movlb	1	; () banked
 14558  001732  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 14559  001734  2047               	addwfc	??__bootloader_verify_file+1,w,c
 14560  001736  6E4B               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 14561  001738  0101               	movlb	1	; () banked
 14562  00173A  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 14563  00173C  2048               	addwfc	??__bootloader_verify_file+2,w,c
 14564  00173E  6E4C               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 14565  001740  0101               	movlb	1	; () banked
 14566  001742  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 14567  001744  2049               	addwfc	??__bootloader_verify_file+3,w,c
 14568  001746  6E4D               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 14569  001748  504D               	movf	??__bootloader_verify_file+7,w,c
 14570  00174A  104C               	iorwf	??__bootloader_verify_file+6,w,c
 14571  00174C  104B               	iorwf	??__bootloader_verify_file+5,w,c
 14572  00174E  E104               	bnz	u10650
 14573  001750  0E32               	movlw	50
 14574  001752  5C4A               	subwf	??__bootloader_verify_file+4,w,c
 14575  001754  A0D8               	btfss	status,0,c
 14576  001756  D019               	goto	l13749
 14577  001758                     u10650:
 14578                           
 14579                           ; BSR set to: 1
 14580                           ;bootloader.c: 178: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 14581  001758  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 14582  00175C  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 14583  001760  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 14584  001764  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 14585  001768  0E32               	movlw	50
 14586  00176A  6E34               	movwf	fat_read_from_file@length,c
 14587  00176C  0E00               	movlw	0
 14588  00176E  6E35               	movwf	fat_read_from_file@length+1,c
 14589  001770  0E00               	movlw	0
 14590  001772  6E36               	movwf	fat_read_from_file@length+2,c
 14591  001774  0E00               	movlw	0
 14592  001776  6E37               	movwf	fat_read_from_file@length+3,c
 14593  001778  0E40               	movlw	low _file_buffer
 14594  00177A  6E38               	movwf	fat_read_from_file@data,c
 14595  00177C  0E03               	movlw	high _file_buffer
 14596  00177E  6E39               	movwf	fat_read_from_file@data+1,c
 14597  001780  0100               	movlb	0	; () banked
 14598  001782  51FF               	movf	_file_number& (0+255),w,b
 14599  001784  ECA8  F013         	call	_fat_read_from_file
 14600  001788  D031               	goto	l13751
 14601  00178A                     l13749:
 14602                           
 14603                           ;bootloader.c: 179: else
 14604                           ;bootloader.c: 180: fat_read_from_file(file_number, hex_file_offset, (hex_file_size-hex_
      +                          file_offset), file_buffer);
 14605  00178A  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 14606  00178E  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 14607  001792  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 14608  001796  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 14609  00179A  C147  F046         	movff	_hex_file_offset,??__bootloader_verify_file
 14610  00179E  C148  F047         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 14611  0017A2  C149  F048         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 14612  0017A6  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 14613  0017AA  1E46               	comf	??__bootloader_verify_file,f,c
 14614  0017AC  1E47               	comf	??__bootloader_verify_file+1,f,c
 14615  0017AE  1E48               	comf	??__bootloader_verify_file+2,f,c
 14616  0017B0  1E49               	comf	??__bootloader_verify_file+3,f,c
 14617  0017B2  2A46               	incf	??__bootloader_verify_file,f,c
 14618  0017B4  0E00               	movlw	0
 14619  0017B6  2247               	addwfc	??__bootloader_verify_file+1,f,c
 14620  0017B8  2248               	addwfc	??__bootloader_verify_file+2,f,c
 14621  0017BA  2249               	addwfc	??__bootloader_verify_file+3,f,c
 14622  0017BC  0101               	movlb	1	; () banked
 14623  0017BE  5143               	movf	_hex_file_size& (0+255),w,b
 14624  0017C0  2446               	addwf	??__bootloader_verify_file,w,c
 14625  0017C2  6E34               	movwf	fat_read_from_file@length,c
 14626  0017C4  0101               	movlb	1	; () banked
 14627  0017C6  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 14628  0017C8  2047               	addwfc	??__bootloader_verify_file+1,w,c
 14629  0017CA  6E35               	movwf	fat_read_from_file@length+1,c
 14630  0017CC  0101               	movlb	1	; () banked
 14631  0017CE  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 14632  0017D0  2048               	addwfc	??__bootloader_verify_file+2,w,c
 14633  0017D2  6E36               	movwf	fat_read_from_file@length+2,c
 14634  0017D4  0101               	movlb	1	; () banked
 14635  0017D6  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 14636  0017D8  2049               	addwfc	??__bootloader_verify_file+3,w,c
 14637  0017DA  6E37               	movwf	fat_read_from_file@length+3,c
 14638  0017DC  0E40               	movlw	low _file_buffer
 14639  0017DE  6E38               	movwf	fat_read_from_file@data,c
 14640  0017E0  0E03               	movlw	high _file_buffer
 14641  0017E2  6E39               	movwf	fat_read_from_file@data+1,c
 14642  0017E4  0100               	movlb	0	; () banked
 14643  0017E6  51FF               	movf	_file_number& (0+255),w,b
 14644  0017E8  ECA8  F013         	call	_fat_read_from_file
 14645  0017EC                     l13751:
 14646                           
 14647                           ;bootloader.c: 182: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 14648  0017EC  0E40               	movlw	low _file_buffer
 14649  0017EE  6E0C               	movwf	parseHexFileEntry@data,c
 14650  0017F0  0E03               	movlw	high _file_buffer
 14651  0017F2  6E0D               	movwf	parseHexFileEntry@data+1,c
 14652  0017F4  0E00               	movlw	0
 14653  0017F6  6E0E               	movwf	parseHexFileEntry@offset,c
 14654  0017F8  0E00               	movlw	0
 14655  0017FA  6E0F               	movwf	parseHexFileEntry@offset+1,c
 14656  0017FC  0E00               	movlw	0
 14657  0017FE  6E10               	movwf	parseHexFileEntry@offset+2,c
 14658  001800  0E00               	movlw	0
 14659  001802  6E11               	movwf	parseHexFileEntry@offset+3,c
 14660  001804  0E98               	movlw	low _hex_file_entry
 14661  001806  6E12               	movwf	parseHexFileEntry@hexEntry,c
 14662  001808  0E01               	movlw	high _hex_file_entry
 14663  00180A  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 14664  00180C  EC10  F000         	call	_parseHexFileEntry	;wreg free
 14665  001810  C00C  F04F         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 14666  001814  C00D  F050         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 14667  001818  C00E  F051         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 14668  00181C  C00F  F052         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 14669                           
 14670                           ;bootloader.c: 185: ++hex_file_entries;
 14671  001820  0101               	movlb	1	; () banked
 14672  001822  4B70               	infsnz	_hex_file_entries& (0+255),f,b
 14673  001824  2B71               	incf	(_hex_file_entries+1)& (0+255),f,b
 14674                           
 14675                           ; BSR set to: 1
 14676                           ;bootloader.c: 188: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 14677  001826  0E04               	movlw	4
 14678  001828  0101               	movlb	1	; () banked
 14679  00182A  199C               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 14680  00182C  A4D8               	btfss	status,2,c
 14681  00182E  D023               	goto	l13767
 14682                           
 14683                           ; BSR set to: 1
 14684                           ;bootloader.c: 189: {
 14685                           ;bootloader.c: 190: extended_linear_address = hex_file_entry.data[0];
 14686  001830  0101               	movlb	1	; () banked
 14687  001832  519D               	movf	(_hex_file_entry+5)& (0+255),w,b
 14688  001834  0101               	movlb	1	; () banked
 14689  001836  6F3F               	movwf	_extended_linear_address& (0+255),b
 14690  001838  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
 14691  00183A  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
 14692  00183C  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
 14693                           
 14694                           ; BSR set to: 1
 14695                           ;bootloader.c: 191: extended_linear_address <<= 8;
 14696  00183E  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 14697  001842  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 14698  001846  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 14699  00184A  0101               	movlb	1	; () banked
 14700  00184C  6B3F               	clrf	_extended_linear_address& (0+255),b
 14701                           
 14702                           ; BSR set to: 1
 14703                           ;bootloader.c: 192: extended_linear_address |= hex_file_entry.data[1];
 14704  00184E  0101               	movlb	1	; () banked
 14705  001850  519E               	movf	(_hex_file_entry+6)& (0+255),w,b
 14706  001852  0101               	movlb	1	; () banked
 14707  001854  133F               	iorwf	_extended_linear_address& (0+255),f,b
 14708                           
 14709                           ; BSR set to: 1
 14710                           ;bootloader.c: 193: extended_linear_address <<= 8;
 14711  001856  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 14712  00185A  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 14713  00185E  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 14714  001862  0101               	movlb	1	; () banked
 14715  001864  6B3F               	clrf	_extended_linear_address& (0+255),b
 14716                           
 14717                           ; BSR set to: 1
 14718                           ;bootloader.c: 194: extended_linear_address <<= 8;
 14719  001866  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 14720  00186A  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 14721  00186E  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 14722  001872  0101               	movlb	1	; () banked
 14723  001874  6B3F               	clrf	_extended_linear_address& (0+255),b
 14724  001876                     l13767:
 14725                           
 14726                           ; BSR set to: 1
 14727                           ;bootloader.c: 195: }
 14728                           ;bootloader.c: 198: if(hex_file_entry.recordType==RecordTypeData)
 14729  001876  0101               	movlb	1	; () banked
 14730  001878  519C               	movf	(_hex_file_entry+4)& (0+255),w,b
 14731  00187A  A4D8               	btfss	status,2,c
 14732  00187C  D057               	goto	l13781
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;bootloader.c: 199: {
 14736                           ;bootloader.c: 201: address32 = extended_linear_address + hex_file_entry.address;
 14737  00187E  0101               	movlb	1	; () banked
 14738  001880  519A               	movf	(_hex_file_entry+2)& (0+255),w,b
 14739  001882  0101               	movlb	1	; () banked
 14740  001884  253F               	addwf	_extended_linear_address& (0+255),w,b
 14741  001886  6E53               	movwf	__bootloader_verify_file@address32,c
 14742  001888  0101               	movlb	1	; () banked
 14743  00188A  519B               	movf	(_hex_file_entry+3)& (0+255),w,b
 14744  00188C  0101               	movlb	1	; () banked
 14745  00188E  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 14746  001890  6E54               	movwf	__bootloader_verify_file@address32+1,c
 14747  001892  0E00               	movlw	0
 14748  001894  0101               	movlb	1	; () banked
 14749  001896  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 14750  001898  6E55               	movwf	__bootloader_verify_file@address32+2,c
 14751  00189A  0E00               	movlw	0
 14752  00189C  0101               	movlb	1	; () banked
 14753  00189E  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 14754  0018A0  6E56               	movwf	__bootloader_verify_file@address32+3,c
 14755                           
 14756                           ;bootloader.c: 204: if(address32<file_minimum_address)
 14757  0018A2  0101               	movlb	1	; () banked
 14758  0018A4  514F               	movf	_file_minimum_address& (0+255),w,b
 14759  0018A6  5C53               	subwf	__bootloader_verify_file@address32,w,c
 14760  0018A8  0101               	movlb	1	; () banked
 14761  0018AA  5150               	movf	(_file_minimum_address+1)& (0+255),w,b
 14762  0018AC  5854               	subwfb	__bootloader_verify_file@address32+1,w,c
 14763  0018AE  0101               	movlb	1	; () banked
 14764  0018B0  5151               	movf	(_file_minimum_address+2)& (0+255),w,b
 14765  0018B2  5855               	subwfb	__bootloader_verify_file@address32+2,w,c
 14766  0018B4  0101               	movlb	1	; () banked
 14767  0018B6  5152               	movf	(_file_minimum_address+3)& (0+255),w,b
 14768  0018B8  5856               	subwfb	__bootloader_verify_file@address32+3,w,c
 14769  0018BA  B0D8               	btfsc	status,0,c
 14770  0018BC  D008               	goto	l13773
 14771                           
 14772                           ; BSR set to: 1
 14773                           ;bootloader.c: 205: {
 14774                           ;bootloader.c: 206: file_minimum_address = address32;
 14775  0018BE  C053  F14F         	movff	__bootloader_verify_file@address32,_file_minimum_address
 14776  0018C2  C054  F150         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 14777  0018C6  C055  F151         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 14778  0018CA  C056  F152         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 14779  0018CE                     l13773:
 14780                           
 14781                           ; BSR set to: 1
 14782                           ;bootloader.c: 207: }
 14783                           ;bootloader.c: 208: if(address32>file_maximum_address)
 14784  0018CE  5053               	movf	__bootloader_verify_file@address32,w,c
 14785  0018D0  0101               	movlb	1	; () banked
 14786  0018D2  5D4B               	subwf	_file_maximum_address& (0+255),w,b
 14787  0018D4  5054               	movf	__bootloader_verify_file@address32+1,w,c
 14788  0018D6  0101               	movlb	1	; () banked
 14789  0018D8  594C               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 14790  0018DA  5055               	movf	__bootloader_verify_file@address32+2,w,c
 14791  0018DC  0101               	movlb	1	; () banked
 14792  0018DE  594D               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 14793  0018E0  5056               	movf	__bootloader_verify_file@address32+3,w,c
 14794  0018E2  0101               	movlb	1	; () banked
 14795  0018E4  594E               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 14796  0018E6  B0D8               	btfsc	status,0,c
 14797  0018E8  D008               	goto	l13777
 14798                           
 14799                           ; BSR set to: 1
 14800                           ;bootloader.c: 209: {
 14801                           ;bootloader.c: 210: file_maximum_address = address32;
 14802  0018EA  C053  F14B         	movff	__bootloader_verify_file@address32,_file_maximum_address
 14803  0018EE  C054  F14C         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 14804  0018F2  C055  F14D         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 14805  0018F6  C056  F14E         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 14806  0018FA                     l13777:
 14807                           
 14808                           ; BSR set to: 1
 14809                           ;bootloader.c: 211: }
 14810                           ;bootloader.c: 214: if(_bootloader_check_address(address32, hex_file_entry.dataLength) =
      +                          = ADDRESS_CHECK_RESULT_ERROR)
 14811  0018FA  C053  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 14812  0018FE  C054  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 14813  001902  C055  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 14814  001906  C056  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 14815  00190A  C198  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 14816  00190E  EC1F  F027         	call	__bootloader_check_address	;wreg free
 14817  001912  0AFF               	xorlw	255
 14818  001914  A4D8               	btfss	status,2,c
 14819  001916  D00A               	goto	l13781
 14820                           
 14821                           ;bootloader.c: 215: {
 14822                           ;bootloader.c: 217: last_error = ShortRecordErrorAddressRange;
 14823  001918  0E0B               	movlw	11
 14824  00191A  0101               	movlb	1	; () banked
 14825  00191C  6F81               	movwf	_last_error& (0+255),b
 14826                           
 14827                           ;bootloader.c: 219: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 14828  00191E  0E40               	movlw	64
 14829  001920  0100               	movlb	0	; () banked
 14830  001922  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 14831                           
 14832                           ;bootloader.c: 220: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 14833  001924  0E40               	movlw	64
 14834  001926  0100               	movlb	0	; () banked
 14835  001928  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 14836                           
 14837                           ;bootloader.c: 221: break;
 14838  00192A  0012               	return	
 14839  00192C                     l13781:
 14840                           
 14841                           ;bootloader.c: 222: }
 14842                           ;bootloader.c: 223: }
 14843                           ;bootloader.c: 225: if(return_value==0)
 14844  00192C  504F               	movf	__bootloader_verify_file@return_value,w,c
 14845  00192E  1050               	iorwf	__bootloader_verify_file@return_value+1,w,c
 14846  001930  1051               	iorwf	__bootloader_verify_file@return_value+2,w,c
 14847  001932  1052               	iorwf	__bootloader_verify_file@return_value+3,w,c
 14848  001934  A4D8               	btfss	status,2,c
 14849  001936  D02A               	goto	l13789
 14850                           
 14851                           ;bootloader.c: 226: {
 14852                           ;bootloader.c: 229: total_hex_file_entries = hex_file_entries;
 14853  001938  C170  F16E         	movff	_hex_file_entries,_total_hex_file_entries
 14854  00193C  C171  F16F         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 14855                           
 14856                           ;bootloader.c: 230: hex_file_entries = 0;
 14857  001940  0E00               	movlw	0
 14858  001942  0101               	movlb	1	; () banked
 14859  001944  6F71               	movwf	(_hex_file_entries+1)& (0+255),b
 14860  001946  0E00               	movlw	0
 14861  001948  6F70               	movwf	_hex_file_entries& (0+255),b
 14862                           
 14863                           ;bootloader.c: 231: hex_file_offset = 0;
 14864  00194A  0E00               	movlw	0
 14865  00194C  0101               	movlb	1	; () banked
 14866  00194E  6F47               	movwf	_hex_file_offset& (0+255),b
 14867  001950  0E00               	movlw	0
 14868  001952  6F48               	movwf	(_hex_file_offset+1)& (0+255),b
 14869  001954  0E00               	movlw	0
 14870  001956  6F49               	movwf	(_hex_file_offset+2)& (0+255),b
 14871  001958  0E00               	movlw	0
 14872  00195A  6F4A               	movwf	(_hex_file_offset+3)& (0+255),b
 14873                           
 14874                           ;bootloader.c: 232: extended_linear_address = 0;
 14875  00195C  0E00               	movlw	0
 14876  00195E  0101               	movlb	1	; () banked
 14877  001960  6F3F               	movwf	_extended_linear_address& (0+255),b
 14878  001962  0E00               	movlw	0
 14879  001964  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 14880  001966  0E00               	movlw	0
 14881  001968  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 14882  00196A  0E00               	movlw	0
 14883  00196C  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 14884                           
 14885                           ;bootloader.c: 233: flash_pages_written = 0;
 14886  00196E  0E00               	movlw	0
 14887  001970  0101               	movlb	1	; () banked
 14888  001972  6F6D               	movwf	(_flash_pages_written+1)& (0+255),b
 14889  001974  0E00               	movlw	0
 14890  001976  6F6C               	movwf	_flash_pages_written& (0+255),b
 14891                           
 14892                           ;bootloader.c: 234: start_from_byte_next = 0;
 14893  001978  0E00               	movlw	0
 14894  00197A  0101               	movlb	1	; () banked
 14895  00197C  6F80               	movwf	_start_from_byte_next& (0+255),b
 14896                           
 14897                           ;bootloader.c: 236: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 14898  00197E  0E30               	movlw	48
 14899  001980  0100               	movlb	0	; () banked
 14900  001982  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 14901                           
 14902                           ;bootloader.c: 237: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 14903  001984  0E30               	movlw	48
 14904  001986  0100               	movlb	0	; () banked
 14905  001988  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 14906                           
 14907                           ;bootloader.c: 238: break;
 14908  00198A  0012               	return	
 14909  00198C                     l13789:
 14910                           
 14911                           ;bootloader.c: 240: else if(return_value>0xFFFFFFF0)
 14912  00198C  0EF1               	movlw	241
 14913  00198E  5C4F               	subwf	__bootloader_verify_file@return_value,w,c
 14914  001990  0EFF               	movlw	255
 14915  001992  5850               	subwfb	__bootloader_verify_file@return_value+1,w,c
 14916  001994  0EFF               	movlw	255
 14917  001996  5851               	subwfb	__bootloader_verify_file@return_value+2,w,c
 14918  001998  0EFF               	movlw	255
 14919  00199A  5852               	subwfb	__bootloader_verify_file@return_value+3,w,c
 14920  00199C  A0D8               	btfss	status,0,c
 14921  00199E  D009               	goto	l13799
 14922                           
 14923                           ;bootloader.c: 241: {
 14924                           ;bootloader.c: 243: last_error = return_value & 0xF;
 14925  0019A0  504F               	movf	__bootloader_verify_file@return_value,w,c
 14926  0019A2  0B0F               	andlw	15
 14927  0019A4  0101               	movlb	1	; () banked
 14928  0019A6  6F81               	movwf	_last_error& (0+255),b
 14929                           
 14930                           ; BSR set to: 1
 14931                           ;bootloader.c: 245: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 14932  0019A8  0E40               	movlw	64
 14933  0019AA  0100               	movlb	0	; () banked
 14934  0019AC  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 14935                           
 14936                           ; BSR set to: 0
 14937                           ;bootloader.c: 246: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 14938  0019AE  0E40               	movlw	64
 14939  0019B0  D7EA               	goto	L1
 14940  0019B2                     l13799:
 14941                           
 14942                           ;bootloader.c: 249: else
 14943                           ;bootloader.c: 250: {
 14944                           ;bootloader.c: 252: hex_file_offset += return_value;
 14945  0019B2  504F               	movf	__bootloader_verify_file@return_value,w,c
 14946  0019B4  0101               	movlb	1	; () banked
 14947  0019B6  2747               	addwf	_hex_file_offset& (0+255),f,b
 14948  0019B8  5050               	movf	__bootloader_verify_file@return_value+1,w,c
 14949  0019BA  0101               	movlb	1	; () banked
 14950  0019BC  2348               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 14951  0019BE  5051               	movf	__bootloader_verify_file@return_value+2,w,c
 14952  0019C0  0101               	movlb	1	; () banked
 14953  0019C2  2349               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 14954  0019C4  5052               	movf	__bootloader_verify_file@return_value+3,w,c
 14955  0019C6  0101               	movlb	1	; () banked
 14956  0019C8  234A               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 14957                           
 14958                           ; BSR set to: 1
 14959                           
 14960                           ; BSR set to: 1
 14961  0019CA  2A4E               	incf	__bootloader_verify_file@rec_counter,f,c
 14962  0019CC  D699               	goto	l13741
 14963  0019CE                     __end_of__bootloader_verify_file:
 14964                           	opt stack 0
 14965                           tblptru	equ	0xFF8
 14966                           tblptrh	equ	0xFF7
 14967                           tblptrl	equ	0xFF6
 14968                           tablat	equ	0xFF5
 14969                           prodh	equ	0xFF4
 14970                           prodl	equ	0xFF3
 14971                           intcon	equ	0xFF2
 14972                           intcon2	equ	0xFF1
 14973                           intcon3	equ	0xFF0
 14974                           postinc0	equ	0xFEE
 14975                           wreg	equ	0xFE8
 14976                           indf1	equ	0xFE7
 14977                           postdec1	equ	0xFE5
 14978                           plusw1	equ	0xFE3
 14979                           fsr1h	equ	0xFE2
 14980                           fsr1l	equ	0xFE1
 14981                           indf2	equ	0xFDF
 14982                           postinc2	equ	0xFDE
 14983                           postdec2	equ	0xFDD
 14984                           plusw2	equ	0xFDB
 14985                           fsr2h	equ	0xFDA
 14986                           fsr2l	equ	0xFD9
 14987                           status	equ	0xFD8
 14988                           
 14989 ;; *************** function __bootloader_program *****************
 14990 ;; Defined at:
 14991 ;;		line 257 in file "bootloader.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;		None
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  address32       4   55[BANK0 ] unsigned long 
 14996 ;;  return_value    4   51[BANK0 ] unsigned long 
 14997 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 14998 ;;  cntr            2   60[BANK0 ] unsigned int 
 14999 ;;  address_with    2   49[BANK0 ] unsigned int 
 15000 ;;  entry_page      2   47[BANK0 ] unsigned int 
 15001 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 15002 ;;		 -> pageBuffer(1024), 
 15003 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 15004 ;; Return value:  Size  Location     Type
 15005 ;;                  1    wreg      void 
 15006 ;; Registers used:
 15007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15008 ;; Tracked objects:
 15009 ;;		On entry : 0/0
 15010 ;;		On exit  : 0/0
 15011 ;;		Unchanged: 0/0
 15012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15014 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15015 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15016 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15017 ;;Total ram usage:       27 bytes
 15018 ;; Hardware stack levels used:    1
 15019 ;; Hardware stack levels required when called:    6
 15020 ;; This function calls:
 15021 ;;		__bootloader_check_address
 15022 ;;		_fat_read_from_file
 15023 ;;		_internalFlash_addressWithinPage
 15024 ;;		_internalFlash_erasePage
 15025 ;;		_internalFlash_getBuffer
 15026 ;;		_internalFlash_pageFromAddress
 15027 ;;		_internalFlash_readPage
 15028 ;;		_internalFlash_writePage
 15029 ;;		_parseHexFileEntry
 15030 ;; This function is called by:
 15031 ;;		_bootloader_run
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           
 15035                           	psect	text66
 15036  00049C                     __ptext66:
 15037                           	opt stack 0
 15038  00049C                     __bootloader_program:
 15039                           	opt stack 23
 15040                           
 15041                           ;bootloader.c: 259: uint16_t cntr;
 15042                           ;bootloader.c: 260: uint8_t* buffer;
 15043                           ;bootloader.c: 261: uint16_t entry_page;
 15044                           ;bootloader.c: 262: uint16_t page_to_write = 0;
 15045                           
 15046                           ;incstack = 0
 15047  00049C  0E00               	movlw	0
 15048  00049E  0100               	movlb	0	; () banked
 15049  0004A0  6F9F               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 15050  0004A2  0E00               	movlw	0
 15051  0004A4  6F9E               	movwf	__bootloader_program@page_to_write& (0+255),b
 15052                           
 15053                           ;bootloader.c: 263: uint8_t start_from_byte;
 15054                           ;bootloader.c: 264: uint32_t address32;
 15055                           ;bootloader.c: 265: uint32_t return_value = 0;
 15056  0004A6  0E00               	movlw	0
 15057  0004A8  0100               	movlb	0	; () banked
 15058  0004AA  6F93               	movwf	__bootloader_program@return_value& (0+255),b
 15059  0004AC  0E00               	movlw	0
 15060  0004AE  6F94               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 15061  0004B0  0E00               	movlw	0
 15062  0004B2  6F95               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 15063  0004B4  0E00               	movlw	0
 15064  0004B6  6F96               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 15065  0004B8                     l13807:
 15066                           
 15067                           ;bootloader.c: 271: {
 15068                           ;bootloader.c: 273: if((hex_file_size-hex_file_offset)>=50)
 15069  0004B8  C147  F046         	movff	_hex_file_offset,??__bootloader_program
 15070  0004BC  C148  F047         	movff	_hex_file_offset+1,??__bootloader_program+1
 15071  0004C0  C149  F048         	movff	_hex_file_offset+2,??__bootloader_program+2
 15072  0004C4  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_program+3
 15073  0004C8  1E46               	comf	??__bootloader_program,f,c
 15074  0004CA  1E47               	comf	??__bootloader_program+1,f,c
 15075  0004CC  1E48               	comf	??__bootloader_program+2,f,c
 15076  0004CE  1E49               	comf	??__bootloader_program+3,f,c
 15077  0004D0  2A46               	incf	??__bootloader_program,f,c
 15078  0004D2  0E00               	movlw	0
 15079  0004D4  2247               	addwfc	??__bootloader_program+1,f,c
 15080  0004D6  2248               	addwfc	??__bootloader_program+2,f,c
 15081  0004D8  2249               	addwfc	??__bootloader_program+3,f,c
 15082  0004DA  0101               	movlb	1	; () banked
 15083  0004DC  5143               	movf	_hex_file_size& (0+255),w,b
 15084  0004DE  2446               	addwf	??__bootloader_program,w,c
 15085  0004E0  6E4A               	movwf	(??__bootloader_program+4)& (0+255),c
 15086  0004E2  0101               	movlb	1	; () banked
 15087  0004E4  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 15088  0004E6  2047               	addwfc	??__bootloader_program+1,w,c
 15089  0004E8  6E4B               	movwf	(??__bootloader_program+5)& (0+255),c
 15090  0004EA  0101               	movlb	1	; () banked
 15091  0004EC  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 15092  0004EE  2048               	addwfc	??__bootloader_program+2,w,c
 15093  0004F0  6E4C               	movwf	(??__bootloader_program+6)& (0+255),c
 15094  0004F2  0101               	movlb	1	; () banked
 15095  0004F4  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 15096  0004F6  2049               	addwfc	??__bootloader_program+3,w,c
 15097  0004F8  6E4D               	movwf	(??__bootloader_program+7)& (0+255),c
 15098  0004FA  504D               	movf	??__bootloader_program+7,w,c
 15099  0004FC  104C               	iorwf	??__bootloader_program+6,w,c
 15100  0004FE  104B               	iorwf	??__bootloader_program+5,w,c
 15101  000500  E104               	bnz	u10740
 15102  000502  0E32               	movlw	50
 15103  000504  5C4A               	subwf	??__bootloader_program+4,w,c
 15104  000506  A0D8               	btfss	status,0,c
 15105  000508  D019               	goto	l13811
 15106  00050A                     u10740:
 15107                           
 15108                           ; BSR set to: 1
 15109                           ;bootloader.c: 274: {
 15110                           ;bootloader.c: 275: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 15111  00050A  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 15112  00050E  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 15113  000512  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 15114  000516  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 15115  00051A  0E32               	movlw	50
 15116  00051C  6E34               	movwf	fat_read_from_file@length,c
 15117  00051E  0E00               	movlw	0
 15118  000520  6E35               	movwf	fat_read_from_file@length+1,c
 15119  000522  0E00               	movlw	0
 15120  000524  6E36               	movwf	fat_read_from_file@length+2,c
 15121  000526  0E00               	movlw	0
 15122  000528  6E37               	movwf	fat_read_from_file@length+3,c
 15123  00052A  0E40               	movlw	low _file_buffer
 15124  00052C  6E38               	movwf	fat_read_from_file@data,c
 15125  00052E  0E03               	movlw	high _file_buffer
 15126  000530  6E39               	movwf	fat_read_from_file@data+1,c
 15127  000532  0100               	movlb	0	; () banked
 15128  000534  51FF               	movf	_file_number& (0+255),w,b
 15129  000536  ECA8  F013         	call	_fat_read_from_file
 15130                           
 15131                           ;bootloader.c: 276: }
 15132  00053A  D031               	goto	l13813
 15133  00053C                     l13811:
 15134                           
 15135                           ;bootloader.c: 277: else
 15136                           ;bootloader.c: 278: {
 15137                           ;bootloader.c: 279: fat_read_from_file(file_number, hex_file_offset, (hex_file_size-hex_
      +                          file_offset), file_buffer);
 15138  00053C  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 15139  000540  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 15140  000544  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 15141  000548  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 15142  00054C  C147  F046         	movff	_hex_file_offset,??__bootloader_program
 15143  000550  C148  F047         	movff	_hex_file_offset+1,??__bootloader_program+1
 15144  000554  C149  F048         	movff	_hex_file_offset+2,??__bootloader_program+2
 15145  000558  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_program+3
 15146  00055C  1E46               	comf	??__bootloader_program,f,c
 15147  00055E  1E47               	comf	??__bootloader_program+1,f,c
 15148  000560  1E48               	comf	??__bootloader_program+2,f,c
 15149  000562  1E49               	comf	??__bootloader_program+3,f,c
 15150  000564  2A46               	incf	??__bootloader_program,f,c
 15151  000566  0E00               	movlw	0
 15152  000568  2247               	addwfc	??__bootloader_program+1,f,c
 15153  00056A  2248               	addwfc	??__bootloader_program+2,f,c
 15154  00056C  2249               	addwfc	??__bootloader_program+3,f,c
 15155  00056E  0101               	movlb	1	; () banked
 15156  000570  5143               	movf	_hex_file_size& (0+255),w,b
 15157  000572  2446               	addwf	??__bootloader_program,w,c
 15158  000574  6E34               	movwf	fat_read_from_file@length,c
 15159  000576  0101               	movlb	1	; () banked
 15160  000578  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 15161  00057A  2047               	addwfc	??__bootloader_program+1,w,c
 15162  00057C  6E35               	movwf	fat_read_from_file@length+1,c
 15163  00057E  0101               	movlb	1	; () banked
 15164  000580  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 15165  000582  2048               	addwfc	??__bootloader_program+2,w,c
 15166  000584  6E36               	movwf	fat_read_from_file@length+2,c
 15167  000586  0101               	movlb	1	; () banked
 15168  000588  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 15169  00058A  2049               	addwfc	??__bootloader_program+3,w,c
 15170  00058C  6E37               	movwf	fat_read_from_file@length+3,c
 15171  00058E  0E40               	movlw	low _file_buffer
 15172  000590  6E38               	movwf	fat_read_from_file@data,c
 15173  000592  0E03               	movlw	high _file_buffer
 15174  000594  6E39               	movwf	fat_read_from_file@data+1,c
 15175  000596  0100               	movlb	0	; () banked
 15176  000598  51FF               	movf	_file_number& (0+255),w,b
 15177  00059A  ECA8  F013         	call	_fat_read_from_file
 15178  00059E                     l13813:
 15179                           
 15180                           ;bootloader.c: 280: }
 15181                           ;bootloader.c: 283: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 15182  00059E  0E40               	movlw	low _file_buffer
 15183  0005A0  6E0C               	movwf	parseHexFileEntry@data,c
 15184  0005A2  0E03               	movlw	high _file_buffer
 15185  0005A4  6E0D               	movwf	parseHexFileEntry@data+1,c
 15186  0005A6  0E00               	movlw	0
 15187  0005A8  6E0E               	movwf	parseHexFileEntry@offset,c
 15188  0005AA  0E00               	movlw	0
 15189  0005AC  6E0F               	movwf	parseHexFileEntry@offset+1,c
 15190  0005AE  0E00               	movlw	0
 15191  0005B0  6E10               	movwf	parseHexFileEntry@offset+2,c
 15192  0005B2  0E00               	movlw	0
 15193  0005B4  6E11               	movwf	parseHexFileEntry@offset+3,c
 15194  0005B6  0E98               	movlw	low _hex_file_entry
 15195  0005B8  6E12               	movwf	parseHexFileEntry@hexEntry,c
 15196  0005BA  0E01               	movlw	high _hex_file_entry
 15197  0005BC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 15198  0005BE  EC10  F000         	call	_parseHexFileEntry	;wreg free
 15199  0005C2  C00C  F093         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 15200  0005C6  C00D  F094         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 15201  0005CA  C00E  F095         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 15202  0005CE  C00F  F096         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 15203                           
 15204                           ;bootloader.c: 286: ++hex_file_entries;
 15205  0005D2  0101               	movlb	1	; () banked
 15206  0005D4  4B70               	infsnz	_hex_file_entries& (0+255),f,b
 15207  0005D6  2B71               	incf	(_hex_file_entries+1)& (0+255),f,b
 15208                           
 15209                           ; BSR set to: 1
 15210                           ;bootloader.c: 289: if(return_value>RecordErrorNoError)
 15211  0005D8  0EF1               	movlw	241
 15212  0005DA  0100               	movlb	0	; () banked
 15213  0005DC  5D93               	subwf	__bootloader_program@return_value& (0+255),w,b
 15214  0005DE  0EFF               	movlw	255
 15215  0005E0  0100               	movlb	0	; () banked
 15216  0005E2  5994               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 15217  0005E4  0EFF               	movlw	255
 15218  0005E6  0100               	movlb	0	; () banked
 15219  0005E8  5995               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 15220  0005EA  0EFF               	movlw	255
 15221  0005EC  0100               	movlb	0	; () banked
 15222  0005EE  5996               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 15223  0005F0  A0D8               	btfss	status,0,c
 15224  0005F2  D007               	goto	l13825
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;bootloader.c: 290: {
 15228                           ;bootloader.c: 292: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 15229  0005F4  0E40               	movlw	64
 15230  0005F6  0100               	movlb	0	; () banked
 15231  0005F8  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 15232                           
 15233                           ;bootloader.c: 293: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 15234  0005FA  0E40               	movlw	64
 15235  0005FC  0100               	movlb	0	; () banked
 15236  0005FE  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;bootloader.c: 294: return;
 15240  000600  0012               	return	
 15241  000602                     l13825:
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;bootloader.c: 302: else
 15245                           ;bootloader.c: 303: {
 15246                           ;bootloader.c: 305: hex_file_offset += return_value;
 15247  000602  0100               	movlb	0	; () banked
 15248  000604  5193               	movf	__bootloader_program@return_value& (0+255),w,b
 15249  000606  0101               	movlb	1	; () banked
 15250  000608  2747               	addwf	_hex_file_offset& (0+255),f,b
 15251  00060A  0100               	movlb	0	; () banked
 15252  00060C  5194               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 15253  00060E  0101               	movlb	1	; () banked
 15254  000610  2348               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 15255  000612  0100               	movlb	0	; () banked
 15256  000614  5195               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 15257  000616  0101               	movlb	1	; () banked
 15258  000618  2349               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 15259  00061A  0100               	movlb	0	; () banked
 15260  00061C  5196               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 15261  00061E  0101               	movlb	1	; () banked
 15262  000620  234A               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 15263                           
 15264                           ; BSR set to: 1
 15265                           ;bootloader.c: 306: }
 15266                           ;bootloader.c: 308: switch(hex_file_entry.recordType)
 15267  000622  D12B               	goto	l13901
 15268  000624                     l13827:
 15269                           
 15270                           ; BSR set to: 1
 15271                           ;bootloader.c: 314: extended_linear_address = hex_file_entry.data[0];
 15272  000624  0101               	movlb	1	; () banked
 15273  000626  519D               	movf	(_hex_file_entry+5)& (0+255),w,b
 15274  000628  0101               	movlb	1	; () banked
 15275  00062A  6F3F               	movwf	_extended_linear_address& (0+255),b
 15276  00062C  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
 15277  00062E  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
 15278  000630  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
 15279                           
 15280                           ; BSR set to: 1
 15281                           ;bootloader.c: 315: extended_linear_address <<= 8;
 15282  000632  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15283  000636  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15284  00063A  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15285  00063E  0101               	movlb	1	; () banked
 15286  000640  6B3F               	clrf	_extended_linear_address& (0+255),b
 15287                           
 15288                           ; BSR set to: 1
 15289                           ;bootloader.c: 316: extended_linear_address |= hex_file_entry.data[1];
 15290  000642  0101               	movlb	1	; () banked
 15291  000644  519E               	movf	(_hex_file_entry+6)& (0+255),w,b
 15292  000646  0101               	movlb	1	; () banked
 15293  000648  133F               	iorwf	_extended_linear_address& (0+255),f,b
 15294                           
 15295                           ; BSR set to: 1
 15296                           ;bootloader.c: 317: extended_linear_address <<= 8;
 15297  00064A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15298  00064E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15299  000652  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15300  000656  0101               	movlb	1	; () banked
 15301  000658  6B3F               	clrf	_extended_linear_address& (0+255),b
 15302                           
 15303                           ; BSR set to: 1
 15304                           ;bootloader.c: 318: extended_linear_address <<= 8;
 15305  00065A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15306  00065E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15307  000662  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15308  000666  0101               	movlb	1	; () banked
 15309  000668  6B3F               	clrf	_extended_linear_address& (0+255),b
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;bootloader.c: 320: break;
 15313                           
 15314                           ;bootloader.c: 319: continue;
 15315  00066A  D726               	goto	l13807
 15316  00066C                     l2681:
 15317                           
 15318                           ; BSR set to: 1
 15319                           ;bootloader.c: 325: start_from_byte = start_from_byte_next;
 15320  00066C  C180  F09B         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 15321                           
 15322                           ; BSR set to: 1
 15323                           ;bootloader.c: 327: start_from_byte_next = 0;
 15324  000670  0E00               	movlw	0
 15325  000672  0101               	movlb	1	; () banked
 15326  000674  6F80               	movwf	_start_from_byte_next& (0+255),b
 15327                           
 15328                           ; BSR set to: 1
 15329                           ;bootloader.c: 330: address32 = extended_linear_address + hex_file_entry.address;
 15330  000676  0101               	movlb	1	; () banked
 15331  000678  519A               	movf	(_hex_file_entry+2)& (0+255),w,b
 15332  00067A  0101               	movlb	1	; () banked
 15333  00067C  253F               	addwf	_extended_linear_address& (0+255),w,b
 15334  00067E  0100               	movlb	0	; () banked
 15335  000680  6F97               	movwf	__bootloader_program@address32& (0+255),b
 15336  000682  0101               	movlb	1	; () banked
 15337  000684  519B               	movf	(_hex_file_entry+3)& (0+255),w,b
 15338  000686  0101               	movlb	1	; () banked
 15339  000688  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 15340  00068A  0100               	movlb	0	; () banked
 15341  00068C  6F98               	movwf	(__bootloader_program@address32+1)& (0+255),b
 15342  00068E  0E00               	movlw	0
 15343  000690  0101               	movlb	1	; () banked
 15344  000692  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 15345  000694  0100               	movlb	0	; () banked
 15346  000696  6F99               	movwf	(__bootloader_program@address32+2)& (0+255),b
 15347  000698  0E00               	movlw	0
 15348  00069A  0101               	movlb	1	; () banked
 15349  00069C  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 15350  00069E  0100               	movlb	0	; () banked
 15351  0006A0  6F9A               	movwf	(__bootloader_program@address32+3)& (0+255),b
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;bootloader.c: 331: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 15355  0006A2  0100               	movlb	0	; () banked
 15356  0006A4  519B               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 15357  0006A6  0100               	movlb	0	; () banked
 15358  0006A8  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15359  0006AA  6E01               	movwf	internalFlash_pageFromAddress@address,c
 15360  0006AC  0E00               	movlw	0
 15361  0006AE  0100               	movlb	0	; () banked
 15362  0006B0  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15363  0006B2  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 15364  0006B4  0E00               	movlw	0
 15365  0006B6  0100               	movlb	0	; () banked
 15366  0006B8  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15367  0006BA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 15368  0006BC  0E00               	movlw	0
 15369  0006BE  0100               	movlb	0	; () banked
 15370  0006C0  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15371  0006C2  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 15372  0006C4  EC3D  F03B         	call	_internalFlash_pageFromAddress	;wreg free
 15373  0006C8  C001  F08F         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 15374  0006CC  C002  F090         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 15375                           
 15376                           ;bootloader.c: 334: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 15377  0006D0  0100               	movlb	0	; () banked
 15378  0006D2  519B               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 15379  0006D4  0100               	movlb	0	; () banked
 15380  0006D6  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15381  0006D8  6E01               	movwf	__bootloader_check_address@address,c
 15382  0006DA  0E00               	movlw	0
 15383  0006DC  0100               	movlb	0	; () banked
 15384  0006DE  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15385  0006E0  6E02               	movwf	__bootloader_check_address@address+1,c
 15386  0006E2  0E00               	movlw	0
 15387  0006E4  0100               	movlb	0	; () banked
 15388  0006E6  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15389  0006E8  6E03               	movwf	__bootloader_check_address@address+2,c
 15390  0006EA  0E00               	movlw	0
 15391  0006EC  0100               	movlb	0	; () banked
 15392  0006EE  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15393  0006F0  6E04               	movwf	__bootloader_check_address@address+3,c
 15394  0006F2  0100               	movlb	0	; () banked
 15395  0006F4  519B               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 15396  0006F6  0800               	sublw	0
 15397  0006F8  0101               	movlb	1	; () banked
 15398  0006FA  2598               	addwf	_hex_file_entry& (0+255),w,b
 15399  0006FC  6E05               	movwf	__bootloader_check_address@dataLength,c
 15400  0006FE  EC1F  F027         	call	__bootloader_check_address	;wreg free
 15401  000702  0900               	iorlw	0
 15402  000704  A4D8               	btfss	status,2,c
 15403  000706  D6D8               	goto	l13807
 15404                           
 15405                           ;bootloader.c: 337: }
 15406                           ;bootloader.c: 339: if(page_to_write==0)
 15407                           
 15408                           ;bootloader.c: 335: {
 15409                           ;bootloader.c: 336: break;
 15410  000708  0100               	movlb	0	; () banked
 15411  00070A  519E               	movf	__bootloader_program@page_to_write& (0+255),w,b
 15412  00070C  0100               	movlb	0	; () banked
 15413  00070E  119F               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 15414  000710  A4D8               	btfss	status,2,c
 15415  000712  D010               	goto	l13857
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;bootloader.c: 340: {
 15419                           ;bootloader.c: 344: page_to_write = entry_page;
 15420  000714  C08F  F09E         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 15421  000718  C090  F09F         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 15422                           
 15423                           ; BSR set to: 0
 15424                           ;bootloader.c: 345: internalFlash_readPage(page_to_write);
 15425  00071C  C09E  F015         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 15426  000720  C09F  F016         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 15427  000724  EC65  F038         	call	_internalFlash_readPage	;wreg free
 15428                           
 15429                           ;bootloader.c: 346: buffer = internalFlash_getBuffer();
 15430  000728  EC5E  F03C         	call	_internalFlash_getBuffer	;wreg free
 15431  00072C  C001  F08D         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 15432  000730  C002  F08E         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 15433  000734                     l13857:
 15434                           
 15435                           ;bootloader.c: 347: }
 15436                           ;bootloader.c: 353: for(cntr=start_from_byte; cntr<hex_file_entry.dataLength; ++cntr)
 15437  000734  C09B  F09C         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 15438  000738  0100               	movlb	0	; () banked
 15439  00073A  6B9D               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 15440  00073C  D077               	goto	l13881
 15441  00073E                     l13859:
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;bootloader.c: 354: {
 15445                           ;bootloader.c: 357: if(internalFlash_pageFromAddress(address32+cntr) == page_to_write)
 15446  00073E  0100               	movlb	0	; () banked
 15447  000740  519C               	movf	__bootloader_program@cntr& (0+255),w,b
 15448  000742  0100               	movlb	0	; () banked
 15449  000744  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15450  000746  6E01               	movwf	internalFlash_pageFromAddress@address,c
 15451  000748  0100               	movlb	0	; () banked
 15452  00074A  519D               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 15453  00074C  0100               	movlb	0	; () banked
 15454  00074E  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15455  000750  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 15456  000752  0E00               	movlw	0
 15457  000754  0100               	movlb	0	; () banked
 15458  000756  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15459  000758  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 15460  00075A  0E00               	movlw	0
 15461  00075C  0100               	movlb	0	; () banked
 15462  00075E  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15463  000760  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 15464  000762  EC3D  F03B         	call	_internalFlash_pageFromAddress	;wreg free
 15465  000766  0100               	movlb	0	; () banked
 15466  000768  519E               	movf	__bootloader_program@page_to_write& (0+255),w,b
 15467  00076A  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 15468  00076C  E136               	bnz	l13865
 15469  00076E  0100               	movlb	0	; () banked
 15470  000770  519F               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 15471  000772  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 15472  000774  A4D8               	btfss	status,2,c
 15473  000776  D031               	goto	l13865
 15474                           
 15475                           ; BSR set to: 0
 15476                           ;bootloader.c: 358: {
 15477                           ;bootloader.c: 359: address_within_page = internalFlash_addressWithinPage(address32+cntr
      +                          , page_to_write);
 15478  000778  0100               	movlb	0	; () banked
 15479  00077A  519C               	movf	__bootloader_program@cntr& (0+255),w,b
 15480  00077C  0100               	movlb	0	; () banked
 15481  00077E  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15482  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
 15483  000782  0100               	movlb	0	; () banked
 15484  000784  519D               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 15485  000786  0100               	movlb	0	; () banked
 15486  000788  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15487  00078A  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 15488  00078C  0E00               	movlw	0
 15489  00078E  0100               	movlb	0	; () banked
 15490  000790  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15491  000792  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 15492  000794  0E00               	movlw	0
 15493  000796  0100               	movlb	0	; () banked
 15494  000798  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15495  00079A  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 15496  00079C  C09E  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 15497  0007A0  C09F  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 15498  0007A4  ECB0  F033         	call	_internalFlash_addressWithinPage	;wreg free
 15499  0007A8  C009  F091         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 15500  0007AC  C00A  F092         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 15501                           
 15502                           ;bootloader.c: 360: buffer[address_within_page] = hex_file_entry.data[cntr];
 15503  0007B0  0E9D               	movlw	low (_hex_file_entry+5)
 15504  0007B2  0100               	movlb	0	; () banked
 15505  0007B4  259C               	addwf	__bootloader_program@cntr& (0+255),w,b
 15506  0007B6  6ED9               	movwf	fsr2l,c
 15507  0007B8  0E01               	movlw	high (_hex_file_entry+5)
 15508  0007BA  0100               	movlb	0	; () banked
 15509  0007BC  219D               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 15510  0007BE  6EDA               	movwf	fsr2h,c
 15511  0007C0  0100               	movlb	0	; () banked
 15512  0007C2  5191               	movf	__bootloader_program@address_within_page& (0+255),w,b
 15513  0007C4  0100               	movlb	0	; () banked
 15514  0007C6  258D               	addwf	__bootloader_program@buffer& (0+255),w,b
 15515  0007C8  6EE1               	movwf	fsr1l,c
 15516  0007CA  0100               	movlb	0	; () banked
 15517  0007CC  5192               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 15518  0007CE  0100               	movlb	0	; () banked
 15519  0007D0  218E               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 15520  0007D2  6EE2               	movwf	fsr1h,c
 15521  0007D4  CFDF FFE7          	movff	indf2,indf1
 15522                           
 15523                           ;bootloader.c: 361: }
 15524  0007D8  D026               	goto	l13879
 15525  0007DA                     l13865:
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;bootloader.c: 362: else
 15529                           ;bootloader.c: 363: {
 15530                           ;bootloader.c: 365: hex_file_offset -= return_value;
 15531  0007DA  0100               	movlb	0	; () banked
 15532  0007DC  5193               	movf	__bootloader_program@return_value& (0+255),w,b
 15533  0007DE  0101               	movlb	1	; () banked
 15534  0007E0  5F47               	subwf	_hex_file_offset& (0+255),f,b
 15535  0007E2  0100               	movlb	0	; () banked
 15536  0007E4  5194               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 15537  0007E6  0101               	movlb	1	; () banked
 15538  0007E8  5B48               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 15539  0007EA  0100               	movlb	0	; () banked
 15540  0007EC  5195               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 15541  0007EE  0101               	movlb	1	; () banked
 15542  0007F0  5B49               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 15543  0007F2  0100               	movlb	0	; () banked
 15544  0007F4  5196               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 15545  0007F6  0101               	movlb	1	; () banked
 15546  0007F8  5B4A               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 15547                           
 15548                           ; BSR set to: 1
 15549                           ;bootloader.c: 366: --hex_file_entries;
 15550  0007FA  0101               	movlb	1	; () banked
 15551  0007FC  0770               	decf	_hex_file_entries& (0+255),f,b
 15552  0007FE  A0D8               	btfss	status,0,c
 15553  000800  0771               	decf	(_hex_file_entries+1)& (0+255),f,b
 15554                           
 15555                           ; BSR set to: 1
 15556                           ;bootloader.c: 368: start_from_byte_next = cntr;
 15557  000802  C09C  F180         	movff	__bootloader_program@cntr,_start_from_byte_next
 15558                           
 15559                           ; BSR set to: 1
 15560                           ;bootloader.c: 370: internalFlash_erasePage(page_to_write);
 15561  000806  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 15562  00080A  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 15563  00080E  EC2D  F039         	call	_internalFlash_erasePage	;wreg free
 15564                           
 15565                           ;bootloader.c: 371: internalFlash_writePage(page_to_write);
 15566  000812  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 15567  000816  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 15568  00081A  EC63  F030         	call	_internalFlash_writePage	;wreg free
 15569                           
 15570                           ;bootloader.c: 372: ++flash_pages_written;
 15571  00081E  0101               	movlb	1	; () banked
 15572  000820  4B6C               	infsnz	_flash_pages_written& (0+255),f,b
 15573  000822  2B6D               	incf	(_flash_pages_written+1)& (0+255),f,b
 15574                           
 15575                           ; BSR set to: 1
 15576                           ;bootloader.c: 374: return;
 15577  000824  0012               	return	
 15578  000826                     l13879:
 15579  000826  0100               	movlb	0	; () banked
 15580  000828  4B9C               	infsnz	__bootloader_program@cntr& (0+255),f,b
 15581  00082A  2B9D               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 15582  00082C                     l13881:
 15583                           
 15584                           ; BSR set to: 0
 15585  00082C  0101               	movlb	1	; () banked
 15586  00082E  5198               	movf	_hex_file_entry& (0+255),w,b
 15587  000830  0100               	movlb	0	; () banked
 15588  000832  5D9C               	subwf	__bootloader_program@cntr& (0+255),w,b
 15589  000834  0101               	movlb	1	; () banked
 15590  000836  5199               	movf	(_hex_file_entry+1)& (0+255),w,b
 15591  000838  0100               	movlb	0	; () banked
 15592  00083A  599D               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 15593  00083C  B0D8               	btfsc	status,0,c
 15594  00083E  D63C               	goto	l13807
 15595  000840  D77E               	goto	l13859
 15596  000842                     l13883:
 15597                           
 15598                           ;bootloader.c: 395: if(page_to_write!=0)
 15599  000842  0100               	movlb	0	; () banked
 15600  000844  519E               	movf	__bootloader_program@page_to_write& (0+255),w,b
 15601  000846  0100               	movlb	0	; () banked
 15602  000848  119F               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 15603  00084A  B4D8               	btfsc	status,2,c
 15604  00084C  0012               	return	
 15605                           
 15606                           ; BSR set to: 0
 15607                           ;bootloader.c: 396: {
 15608                           ;bootloader.c: 398: internalFlash_erasePage(page_to_write);
 15609  00084E  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 15610  000852  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 15611  000856  EC2D  F039         	call	_internalFlash_erasePage	;wreg free
 15612                           
 15613                           ;bootloader.c: 399: internalFlash_writePage(page_to_write);
 15614  00085A  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 15615  00085E  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 15616  000862  EC63  F030         	call	_internalFlash_writePage	;wreg free
 15617                           
 15618                           ;bootloader.c: 400: ++flash_pages_written;
 15619  000866  0101               	movlb	1	; () banked
 15620  000868  4B6C               	infsnz	_flash_pages_written& (0+255),f,b
 15621  00086A  2B6D               	incf	(_flash_pages_written+1)& (0+255),f,b
 15622                           
 15623                           ; BSR set to: 1
 15624                           ;bootloader.c: 402: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 15625  00086C  0E60               	movlw	96
 15626  00086E  0100               	movlb	0	; () banked
 15627  000870  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;bootloader.c: 403: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 15631  000872  0E60               	movlw	96
 15632  000874  0100               	movlb	0	; () banked
 15633  000876  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 15634                           
 15635                           ; BSR set to: 0
 15636                           ;bootloader.c: 404: }
 15637                           ;bootloader.c: 406: return;
 15638                           
 15639                           ; BSR set to: 0
 15640  000878  0012               	return	
 15641  00087A                     l13901:
 15642  00087A  0101               	movlb	1	; () banked
 15643  00087C  519C               	movf	(_hex_file_entry+4)& (0+255),w,b
 15644                           
 15645                           ; Switch size 1, requested type "space"
 15646                           ; Number of cases is 3, Range of values is 0 to 4
 15647                           ; switch strategies available:
 15648                           ; Name         Instructions Cycles
 15649                           ; simple_byte           10     6 (average)
 15650                           ;	Chosen strategy is simple_byte
 15651  00087E  0A00               	xorlw	0	; case 0
 15652  000880  B4D8               	btfsc	status,2,c
 15653  000882  D6F4               	goto	l2681
 15654  000884  0A01               	xorlw	1	; case 1
 15655  000886  B4D8               	btfsc	status,2,c
 15656  000888  D7DC               	goto	l13883
 15657  00088A  0A05               	xorlw	5	; case 4
 15658  00088C  B4D8               	btfsc	status,2,c
 15659  00088E  D6CA               	goto	l13827
 15660                           
 15661                           ; BSR set to: 1
 15662                           
 15663                           ; BSR set to: 1
 15664  000890  D613               	goto	l13807
 15665  000892                     __end_of__bootloader_program:
 15666                           	opt stack 0
 15667                           tblptru	equ	0xFF8
 15668                           tblptrh	equ	0xFF7
 15669                           tblptrl	equ	0xFF6
 15670                           tablat	equ	0xFF5
 15671                           prodh	equ	0xFF4
 15672                           prodl	equ	0xFF3
 15673                           intcon	equ	0xFF2
 15674                           intcon2	equ	0xFF1
 15675                           intcon3	equ	0xFF0
 15676                           postinc0	equ	0xFEE
 15677                           wreg	equ	0xFE8
 15678                           indf1	equ	0xFE7
 15679                           postdec1	equ	0xFE5
 15680                           plusw1	equ	0xFE3
 15681                           fsr1h	equ	0xFE2
 15682                           fsr1l	equ	0xFE1
 15683                           indf2	equ	0xFDF
 15684                           postinc2	equ	0xFDE
 15685                           postdec2	equ	0xFDD
 15686                           plusw2	equ	0xFDB
 15687                           fsr2h	equ	0xFDA
 15688                           fsr2l	equ	0xFD9
 15689                           status	equ	0xFD8
 15690                           
 15691 ;; *************** function _parseHexFileEntry *****************
 15692 ;; Defined at:
 15693 ;;		line 59 in file "hex.c"
 15694 ;; Parameters:    Size  Location     Type
 15695 ;;  data            2   11[COMRAM] PTR unsigned char 
 15696 ;;		 -> file_buffer(50), 
 15697 ;;  offset          4   13[COMRAM] unsigned long 
 15698 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 15699 ;;		 -> hex_file_entry(23), 
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;  i               1   27[COMRAM] unsigned char 
 15702 ;; Return value:  Size  Location     Type
 15703 ;;                  4   11[COMRAM] unsigned long 
 15704 ;; Registers used:
 15705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15706 ;; Tracked objects:
 15707 ;;		On entry : 0/0
 15708 ;;		On exit  : 0/0
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15713 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15714 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15715 ;;Total ram usage:       17 bytes
 15716 ;; Hardware stack levels used:    1
 15717 ;; Hardware stack levels required when called:    2
 15718 ;; This function calls:
 15719 ;;		_hexCharsToUint16
 15720 ;;		_hexCharsToUint8
 15721 ;; This function is called by:
 15722 ;;		__bootloader_verify_file
 15723 ;;		__bootloader_program
 15724 ;; This function uses a non-reentrant model
 15725 ;;
 15726                           
 15727                           	psect	text67
 15728  000020                     __ptext67:
 15729                           	opt stack 0
 15730  000020                     _parseHexFileEntry:
 15731                           	opt stack 26
 15732                           
 15733                           ;hex.c: 61: uint8_t i;
 15734                           ;hex.c: 64: if (data[offset] != ':')
 15735                           
 15736                           ;incstack = 0
 15737  000020  500E               	movf	parseHexFileEntry@offset,w,c
 15738  000022  240C               	addwf	parseHexFileEntry@data,w,c
 15739  000024  6ED9               	movwf	fsr2l,c
 15740  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 15741  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15742  00002A  6EDA               	movwf	fsr2h,c
 15743  00002C  0E3A               	movlw	58
 15744  00002E  18DE               	xorwf	postinc2,w,c
 15745  000030  B4D8               	btfsc	status,2,c
 15746  000032  D005               	goto	l12551
 15747                           
 15748                           ;hex.c: 65: {
 15749                           ;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 15750  000034  680C               	setf	?_parseHexFileEntry,c
 15751  000036  680D               	setf	?_parseHexFileEntry+1,c
 15752  000038  680E               	setf	?_parseHexFileEntry+2,c
 15753  00003A  680F               	setf	?_parseHexFileEntry+3,c
 15754  00003C  0012               	return	
 15755  00003E                     l12551:
 15756                           
 15757                           ;hex.c: 67: }
 15758                           ;hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[offset + 2]);
 15759  00003E  0E02               	movlw	2
 15760  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 15761  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 15762  000044  0E00               	movlw	0
 15763  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15764  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 15765  00004A  5014               	movf	??_parseHexFileEntry,w,c
 15766  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 15767  00004E  6ED9               	movwf	fsr2l,c
 15768  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 15769  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15770  000054  6EDA               	movwf	fsr2h,c
 15771  000056  50DF               	movf	indf2,w,c
 15772  000058  6E03               	movwf	hexCharsToUint8@c2,c
 15773  00005A  0E01               	movlw	1
 15774  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 15775  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 15776  000060  0E00               	movlw	0
 15777  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15778  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 15779  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 15780  000068  240C               	addwf	parseHexFileEntry@data,w,c
 15781  00006A  6ED9               	movwf	fsr2l,c
 15782  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 15783  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15784  000070  6EDA               	movwf	fsr2h,c
 15785  000072  50DF               	movf	indf2,w,c
 15786  000074  EC2F  F03B         	call	_hexCharsToUint8
 15787  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 15788  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 15789  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 15790  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 15791  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 15792  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 15793                           
 15794                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 15795  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 15796  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 15797  000094  0E01               	movlw	1
 15798  000096  50DB               	movf	plusw2,w,c
 15799  000098  E104               	bnz	u9400
 15800  00009A  0E11               	movlw	17
 15801  00009C  5CDE               	subwf	postinc2,w,c
 15802  00009E  A0D8               	btfss	status,0,c
 15803  0000A0  D009               	goto	l12559
 15804  0000A2                     u9400:
 15805                           
 15806                           ;hex.c: 72: {
 15807                           ;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 15808  0000A2  0EFC               	movlw	252
 15809  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 15810  0000A6  0EFF               	movlw	255
 15811  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 15812  0000AA  0EFF               	movlw	255
 15813  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 15814  0000AE  0EFF               	movlw	255
 15815  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 15816  0000B2  0012               	return	
 15817  0000B4                     l12559:
 15818                           
 15819                           ;hex.c: 74: }
 15820                           ;hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[offset + 4], dat
      +                          a[offset + 5], data[offset + 6]);
 15821  0000B4  0E04               	movlw	4
 15822  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 15823  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 15824  0000BA  0E00               	movlw	0
 15825  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15826  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 15827  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 15828  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 15829  0000C4  6ED9               	movwf	fsr2l,c
 15830  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 15831  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15832  0000CA  6EDA               	movwf	fsr2h,c
 15833  0000CC  50DF               	movf	indf2,w,c
 15834  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 15835  0000D0  0E05               	movlw	5
 15836  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 15837  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 15838  0000D6  0E00               	movlw	0
 15839  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15840  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 15841  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 15842  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 15843  0000E0  6ED9               	movwf	fsr2l,c
 15844  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 15845  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15846  0000E6  6EDA               	movwf	fsr2h,c
 15847  0000E8  50DF               	movf	indf2,w,c
 15848  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 15849  0000EC  0E06               	movlw	6
 15850  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 15851  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 15852  0000F2  0E00               	movlw	0
 15853  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15854  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 15855  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 15856  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 15857  0000FC  6ED9               	movwf	fsr2l,c
 15858  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 15859  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15860  000102  6EDA               	movwf	fsr2h,c
 15861  000104  50DF               	movf	indf2,w,c
 15862  000106  6E05               	movwf	hexCharsToUint16@c4,c
 15863  000108  0E03               	movlw	3
 15864  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 15865  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 15866  00010E  0E00               	movlw	0
 15867  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15868  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 15869  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 15870  000116  240C               	addwf	parseHexFileEntry@data,w,c
 15871  000118  6ED9               	movwf	fsr2l,c
 15872  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 15873  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15874  00011E  6EDA               	movwf	fsr2h,c
 15875  000120  50DF               	movf	indf2,w,c
 15876  000122  EC44  F032         	call	_hexCharsToUint16
 15877  000126  EE20 F002          	lfsr	2,2
 15878  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 15879  00012C  26D9               	addwf	fsr2l,f,c
 15880  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 15881  000130  22DA               	addwfc	fsr2h,f,c
 15882  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 15883  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 15884                           
 15885                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 15886  00013A  EE20 F004          	lfsr	2,4
 15887  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 15888  000140  26D9               	addwf	fsr2l,f,c
 15889  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 15890  000144  22DA               	addwfc	fsr2h,f,c
 15891  000146  0E08               	movlw	8
 15892  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 15893  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 15894  00014C  0E00               	movlw	0
 15895  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15896  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 15897  000152  5014               	movf	??_parseHexFileEntry,w,c
 15898  000154  240C               	addwf	parseHexFileEntry@data,w,c
 15899  000156  6EE1               	movwf	fsr1l,c
 15900  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 15901  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15902  00015C  6EE2               	movwf	fsr1h,c
 15903  00015E  50E7               	movf	indf1,w,c
 15904  000160  6E03               	movwf	hexCharsToUint8@c2,c
 15905  000162  0E07               	movlw	7
 15906  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 15907  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 15908  000168  0E00               	movlw	0
 15909  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 15910  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 15911  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 15912  000170  240C               	addwf	parseHexFileEntry@data,w,c
 15913  000172  6EE1               	movwf	fsr1l,c
 15914  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 15915  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15916  000178  6EE2               	movwf	fsr1h,c
 15917  00017A  50E7               	movf	indf1,w,c
 15918  00017C  EC2F  F03B         	call	_hexCharsToUint8
 15919  000180  6EDF               	movwf	indf2,c
 15920                           
 15921                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 15922  000182  0E00               	movlw	0
 15923  000184  6E1C               	movwf	parseHexFileEntry@i,c
 15924  000186  D03D               	goto	l12569
 15925  000188                     l12565:
 15926                           
 15927                           ;hex.c: 84: {
 15928                           ;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], data[offset + 
      +                          10 + i + i]);
 15929  000188  501C               	movf	parseHexFileEntry@i,w,c
 15930  00018A  0D01               	mullw	1
 15931  00018C  0E05               	movlw	5
 15932  00018E  26F3               	addwf	prodl,f,c
 15933  000190  0E00               	movlw	0
 15934  000192  22F4               	addwfc	prodh,f,c
 15935  000194  50F3               	movf	prodl,w,c
 15936  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 15937  000198  6ED9               	movwf	fsr2l,c
 15938  00019A  50F4               	movf	prodh,w,c
 15939  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 15940  00019E  6EDA               	movwf	fsr2h,c
 15941  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 15942  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 15943  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 15944  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 15945  0001AA  0E00               	movlw	0
 15946  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 15947  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 15948  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 15949  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 15950  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 15951  0001B6  0E0A               	movlw	10
 15952  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 15953  0001BA  0E00               	movlw	0
 15954  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 15955  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 15956  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 15957  0001C2  6EE1               	movwf	fsr1l,c
 15958  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 15959  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15960  0001C8  6EE2               	movwf	fsr1h,c
 15961  0001CA  50E7               	movf	indf1,w,c
 15962  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 15963  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 15964  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 15965  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 15966  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 15967  0001D8  0E00               	movlw	0
 15968  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 15969  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 15970  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 15971  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 15972  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 15973  0001E4  0E09               	movlw	9
 15974  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 15975  0001E8  0E00               	movlw	0
 15976  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 15977  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 15978  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 15979  0001F0  6EE1               	movwf	fsr1l,c
 15980  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 15981  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 15982  0001F6  6EE2               	movwf	fsr1h,c
 15983  0001F8  50E7               	movf	indf1,w,c
 15984  0001FA  EC2F  F03B         	call	_hexCharsToUint8
 15985  0001FE  6EDF               	movwf	indf2,c
 15986  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 15987  000202                     l12569:
 15988  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 15989  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 15990  00020A  501C               	movf	parseHexFileEntry@i,w,c
 15991  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 15992  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 15993  000210  50DE               	movf	postinc2,w,c
 15994  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 15995  000214  50DE               	movf	postinc2,w,c
 15996  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 15997  000218  A0D8               	btfss	status,0,c
 15998  00021A  D7B6               	goto	l12565
 15999                           
 16000                           ;hex.c: 86: }
 16001                           ;hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], data[offset +
      +                           10 + i + i]);
 16002  00021C  EE20 F015          	lfsr	2,21
 16003  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16004  000222  26D9               	addwf	fsr2l,f,c
 16005  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16006  000226  22DA               	addwfc	fsr2h,f,c
 16007  000228  501C               	movf	parseHexFileEntry@i,w,c
 16008  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 16009  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 16010  000230  2614               	addwf	??_parseHexFileEntry,f,c
 16011  000232  0E00               	movlw	0
 16012  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16013  000236  500E               	movf	parseHexFileEntry@offset,w,c
 16014  000238  2614               	addwf	??_parseHexFileEntry,f,c
 16015  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 16016  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16017  00023E  0E0A               	movlw	10
 16018  000240  2614               	addwf	??_parseHexFileEntry,f,c
 16019  000242  0E00               	movlw	0
 16020  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16021  000246  5014               	movf	??_parseHexFileEntry,w,c
 16022  000248  240C               	addwf	parseHexFileEntry@data,w,c
 16023  00024A  6EE1               	movwf	fsr1l,c
 16024  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 16025  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16026  000250  6EE2               	movwf	fsr1h,c
 16027  000252  50E7               	movf	indf1,w,c
 16028  000254  6E03               	movwf	hexCharsToUint8@c2,c
 16029  000256  501C               	movf	parseHexFileEntry@i,w,c
 16030  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 16031  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 16032  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 16033  000260  0E00               	movlw	0
 16034  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16035  000264  500E               	movf	parseHexFileEntry@offset,w,c
 16036  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 16037  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 16038  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16039  00026C  0E09               	movlw	9
 16040  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 16041  000270  0E00               	movlw	0
 16042  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16043  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 16044  000276  240C               	addwf	parseHexFileEntry@data,w,c
 16045  000278  6EE1               	movwf	fsr1l,c
 16046  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 16047  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16048  00027E  6EE2               	movwf	fsr1h,c
 16049  000280  50E7               	movf	indf1,w,c
 16050  000282  EC2F  F03B         	call	_hexCharsToUint8
 16051  000286  6EDF               	movwf	indf2,c
 16052                           
 16053                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 16054  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16055  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16056  000290  EE10 F016          	lfsr	1,22
 16057  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16058  000296  26E1               	addwf	fsr1l,f,c
 16059  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16060  00029A  22E2               	addwfc	fsr1h,f,c
 16061  00029C  CFDF FFE7          	movff	indf2,indf1
 16062                           
 16063                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 16064  0002A0  EE20 F002          	lfsr	2,2
 16065  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16066  0002A6  26D9               	addwf	fsr2l,f,c
 16067  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16068  0002AA  22DA               	addwfc	fsr2h,f,c
 16069  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 16070  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 16071  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 16072  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 16073  0002BA  EE20 F016          	lfsr	2,22
 16074  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16075  0002C0  26D9               	addwf	fsr2l,f,c
 16076  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16077  0002C4  22DA               	addwfc	fsr2h,f,c
 16078  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 16079  0002C8  26DF               	addwf	indf2,f,c
 16080                           
 16081                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 16082  0002CA  EE20 F002          	lfsr	2,2
 16083  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16084  0002D0  26D9               	addwf	fsr2l,f,c
 16085  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16086  0002D4  22DA               	addwfc	fsr2h,f,c
 16087  0002D6  50DF               	movf	indf2,w,c
 16088  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16089  0002DA  EE20 F016          	lfsr	2,22
 16090  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16091  0002E0  26D9               	addwf	fsr2l,f,c
 16092  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16093  0002E4  22DA               	addwfc	fsr2h,f,c
 16094  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 16095  0002E8  26DF               	addwf	indf2,f,c
 16096                           
 16097                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 16098  0002EA  EE20 F004          	lfsr	2,4
 16099  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16100  0002F0  26D9               	addwf	fsr2l,f,c
 16101  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16102  0002F4  22DA               	addwfc	fsr2h,f,c
 16103  0002F6  50DF               	movf	indf2,w,c
 16104  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16105  0002FA  EE20 F016          	lfsr	2,22
 16106  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16107  000300  26D9               	addwf	fsr2l,f,c
 16108  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16109  000304  22DA               	addwfc	fsr2h,f,c
 16110  000306  5014               	movf	??_parseHexFileEntry,w,c
 16111  000308  26DF               	addwf	indf2,f,c
 16112                           
 16113                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 16114  00030A  0E00               	movlw	0
 16115  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 16116  00030E  D017               	goto	l12587
 16117  000310                     l12583:
 16118                           
 16119                           ;hex.c: 97: {
 16120                           ;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 16121  000310  501C               	movf	parseHexFileEntry@i,w,c
 16122  000312  0D01               	mullw	1
 16123  000314  0E05               	movlw	5
 16124  000316  26F3               	addwf	prodl,f,c
 16125  000318  0E00               	movlw	0
 16126  00031A  22F4               	addwfc	prodh,f,c
 16127  00031C  50F3               	movf	prodl,w,c
 16128  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 16129  000320  6ED9               	movwf	fsr2l,c
 16130  000322  50F4               	movf	prodh,w,c
 16131  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 16132  000326  6EDA               	movwf	fsr2h,c
 16133  000328  50DF               	movf	indf2,w,c
 16134  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16135  00032C  EE20 F016          	lfsr	2,22
 16136  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16137  000332  26D9               	addwf	fsr2l,f,c
 16138  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16139  000336  22DA               	addwfc	fsr2h,f,c
 16140  000338  5014               	movf	??_parseHexFileEntry,w,c
 16141  00033A  26DF               	addwf	indf2,f,c
 16142  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 16143  00033E                     l12587:
 16144  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16145  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16146  000346  501C               	movf	parseHexFileEntry@i,w,c
 16147  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16148  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 16149  00034C  50DE               	movf	postinc2,w,c
 16150  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 16151  000350  50DE               	movf	postinc2,w,c
 16152  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 16153  000354  A0D8               	btfss	status,0,c
 16154  000356  D7DC               	goto	l12583
 16155                           
 16156                           ;hex.c: 99: }
 16157                           ;hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 16158  000358  EE20 F015          	lfsr	2,21
 16159  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16160  00035E  26D9               	addwf	fsr2l,f,c
 16161  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16162  000362  22DA               	addwfc	fsr2h,f,c
 16163  000364  50DF               	movf	indf2,w,c
 16164  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16165  000368  EE20 F016          	lfsr	2,22
 16166  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16167  00036E  26D9               	addwf	fsr2l,f,c
 16168  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16169  000372  22DA               	addwfc	fsr2h,f,c
 16170  000374  5014               	movf	??_parseHexFileEntry,w,c
 16171  000376  26DF               	addwf	indf2,f,c
 16172                           
 16173                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 16174  000378  EE20 F016          	lfsr	2,22
 16175  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16176  00037E  26D9               	addwf	fsr2l,f,c
 16177  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16178  000382  22DA               	addwfc	fsr2h,f,c
 16179  000384  50DF               	movf	indf2,w,c
 16180  000386  B4D8               	btfsc	status,2,c
 16181  000388  D009               	goto	l12595
 16182                           
 16183                           ;hex.c: 104: {
 16184                           ;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 16185  00038A  0EFE               	movlw	254
 16186  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 16187  00038E  0EFF               	movlw	255
 16188  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 16189  000392  0EFF               	movlw	255
 16190  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 16191  000396  0EFF               	movlw	255
 16192  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 16193  00039A  0012               	return	
 16194  00039C                     l12595:
 16195                           
 16196                           ;hex.c: 106: }
 16197                           ;hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 16198  00039C  EE20 F004          	lfsr	2,4
 16199  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16200  0003A2  26D9               	addwf	fsr2l,f,c
 16201  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16202  0003A6  22DA               	addwfc	fsr2h,f,c
 16203  0003A8  04DE               	decf	postinc2,w,c
 16204  0003AA  A4D8               	btfss	status,2,c
 16205  0003AC  D009               	goto	l12603
 16206                           
 16207                           ;hex.c: 110: {
 16208                           ;hex.c: 112: return 0;
 16209  0003AE  0E00               	movlw	0
 16210  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 16211  0003B2  0E00               	movlw	0
 16212  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 16213  0003B6  0E00               	movlw	0
 16214  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 16215  0003BA  0E00               	movlw	0
 16216  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 16217                           
 16218                           ;hex.c: 113: }
 16219  0003BE  0012               	return	
 16220  0003C0                     l12603:
 16221                           
 16222                           ;hex.c: 114: else
 16223                           ;hex.c: 115: {
 16224                           ;hex.c: 116: offset += 11 + i + i;
 16225  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 16226  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 16227  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 16228  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 16229  0003CA  0E00               	movlw	0
 16230  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16231  0003CE  0E0B               	movlw	11
 16232  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 16233  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16234  0003D4  0E00               	movlw	0
 16235  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 16236  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 16237  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 16238  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 16239  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 16240  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 16241  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 16242  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 16243  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 16244  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 16245  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16246  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 16247  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16248  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 16249  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16250                           
 16251                           ;hex.c: 117: if (data[++offset] == ':')
 16252  0003F4  0E01               	movlw	1
 16253  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 16254  0003F8  0E00               	movlw	0
 16255  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16256  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16257  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16258  000400  500E               	movf	parseHexFileEntry@offset,w,c
 16259  000402  240C               	addwf	parseHexFileEntry@data,w,c
 16260  000404  6ED9               	movwf	fsr2l,c
 16261  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 16262  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16263  00040A  6EDA               	movwf	fsr2h,c
 16264  00040C  0E3A               	movlw	58
 16265  00040E  18DE               	xorwf	postinc2,w,c
 16266  000410  A4D8               	btfss	status,2,c
 16267  000412  D009               	goto	l12611
 16268                           
 16269                           ;hex.c: 118: {
 16270                           ;hex.c: 119: return offset;
 16271  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 16272  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 16273  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 16274  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 16275                           
 16276                           ;hex.c: 120: }
 16277  000424  0012               	return	
 16278  000426                     l12611:
 16279                           
 16280                           ;hex.c: 121: else if (data[++offset] == ':')
 16281  000426  0E01               	movlw	1
 16282  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 16283  00042A  0E00               	movlw	0
 16284  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16285  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16286  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16287  000432  500E               	movf	parseHexFileEntry@offset,w,c
 16288  000434  240C               	addwf	parseHexFileEntry@data,w,c
 16289  000436  6ED9               	movwf	fsr2l,c
 16290  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 16291  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16292  00043C  6EDA               	movwf	fsr2h,c
 16293  00043E  0E3A               	movlw	58
 16294  000440  18DE               	xorwf	postinc2,w,c
 16295  000442  A4D8               	btfss	status,2,c
 16296  000444  D009               	goto	l12617
 16297                           
 16298                           ;hex.c: 122: {
 16299                           ;hex.c: 123: return offset;
 16300  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 16301  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 16302  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 16303  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 16304                           
 16305                           ;hex.c: 124: }
 16306  000456  0012               	return	
 16307  000458                     l12617:
 16308                           
 16309                           ;hex.c: 125: else if (data[++offset] == ':')
 16310  000458  0E01               	movlw	1
 16311  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 16312  00045C  0E00               	movlw	0
 16313  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16314  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16315  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16316  000464  500E               	movf	parseHexFileEntry@offset,w,c
 16317  000466  240C               	addwf	parseHexFileEntry@data,w,c
 16318  000468  6ED9               	movwf	fsr2l,c
 16319  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 16320  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16321  00046E  6EDA               	movwf	fsr2h,c
 16322  000470  0E3A               	movlw	58
 16323  000472  18DE               	xorwf	postinc2,w,c
 16324  000474  A4D8               	btfss	status,2,c
 16325  000476  D009               	goto	l12623
 16326                           
 16327                           ;hex.c: 126: {
 16328                           ;hex.c: 127: return offset;
 16329  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 16330  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 16331  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 16332  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 16333                           
 16334                           ;hex.c: 128: }
 16335  000488  0012               	return	
 16336  00048A                     l12623:
 16337                           
 16338                           ;hex.c: 129: else
 16339                           ;hex.c: 130: {
 16340                           ;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 16341  00048A  0EFD               	movlw	253
 16342  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 16343  00048E  0EFF               	movlw	255
 16344  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 16345  000492  0EFF               	movlw	255
 16346  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 16347  000496  0EFF               	movlw	255
 16348  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 16349  00049A  0012               	return	
 16350  00049C                     __end_of_parseHexFileEntry:
 16351                           	opt stack 0
 16352                           tblptru	equ	0xFF8
 16353                           tblptrh	equ	0xFF7
 16354                           tblptrl	equ	0xFF6
 16355                           tablat	equ	0xFF5
 16356                           prodh	equ	0xFF4
 16357                           prodl	equ	0xFF3
 16358                           intcon	equ	0xFF2
 16359                           intcon2	equ	0xFF1
 16360                           intcon3	equ	0xFF0
 16361                           postinc0	equ	0xFEE
 16362                           wreg	equ	0xFE8
 16363                           indf1	equ	0xFE7
 16364                           postdec1	equ	0xFE5
 16365                           plusw1	equ	0xFE3
 16366                           fsr1h	equ	0xFE2
 16367                           fsr1l	equ	0xFE1
 16368                           indf2	equ	0xFDF
 16369                           postinc2	equ	0xFDE
 16370                           postdec2	equ	0xFDD
 16371                           plusw2	equ	0xFDB
 16372                           fsr2h	equ	0xFDA
 16373                           fsr2l	equ	0xFD9
 16374                           status	equ	0xFD8
 16375                           
 16376 ;; *************** function _hexCharsToUint8 *****************
 16377 ;; Defined at:
 16378 ;;		line 42 in file "hex.c"
 16379 ;; Parameters:    Size  Location     Type
 16380 ;;  c1              1    wreg     unsigned char 
 16381 ;;  c2              1    2[COMRAM] unsigned char 
 16382 ;; Auto vars:     Size  Location     Type
 16383 ;;  c1              1    4[COMRAM] unsigned char 
 16384 ;;  retVal          1    5[COMRAM] unsigned char 
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      unsigned char 
 16387 ;; Registers used:
 16388 ;;		wreg, status,2, status,0, cstack
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16394 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16398 ;;Total ram usage:        4 bytes
 16399 ;; Hardware stack levels used:    1
 16400 ;; Hardware stack levels required when called:    1
 16401 ;; This function calls:
 16402 ;;		_hexCharToUint8
 16403 ;; This function is called by:
 16404 ;;		_parseHexFileEntry
 16405 ;; This function uses a non-reentrant model
 16406 ;;
 16407                           
 16408                           	psect	text68
 16409  00765E                     __ptext68:
 16410                           	opt stack 0
 16411  00765E                     _hexCharsToUint8:
 16412                           	opt stack 26
 16413                           
 16414                           ;incstack = 0
 16415                           ;hexCharsToUint8@c1 stored from wreg
 16416  00765E  6E05               	movwf	hexCharsToUint8@c1,c
 16417                           
 16418                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 16419  007660  5005               	movf	hexCharsToUint8@c1,w,c
 16420  007662  ECDA  F039         	call	_hexCharToUint8
 16421  007666  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 16422  007668  3804               	swapf	??_hexCharsToUint8,w,c
 16423  00766A  0BF0               	andlw	240
 16424  00766C  6E06               	movwf	hexCharsToUint8@retVal,c
 16425                           
 16426                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 16427  00766E  5003               	movf	hexCharsToUint8@c2,w,c
 16428  007670  ECDA  F039         	call	_hexCharToUint8
 16429  007674  1206               	iorwf	hexCharsToUint8@retVal,f,c
 16430                           
 16431                           ;hex.c: 46: return retVal;
 16432  007676  5006               	movf	hexCharsToUint8@retVal,w,c
 16433  007678  0012               	return	
 16434  00767A                     __end_of_hexCharsToUint8:
 16435                           	opt stack 0
 16436                           tblptru	equ	0xFF8
 16437                           tblptrh	equ	0xFF7
 16438                           tblptrl	equ	0xFF6
 16439                           tablat	equ	0xFF5
 16440                           prodh	equ	0xFF4
 16441                           prodl	equ	0xFF3
 16442                           intcon	equ	0xFF2
 16443                           intcon2	equ	0xFF1
 16444                           intcon3	equ	0xFF0
 16445                           postinc0	equ	0xFEE
 16446                           wreg	equ	0xFE8
 16447                           indf1	equ	0xFE7
 16448                           postdec1	equ	0xFE5
 16449                           plusw1	equ	0xFE3
 16450                           fsr1h	equ	0xFE2
 16451                           fsr1l	equ	0xFE1
 16452                           indf2	equ	0xFDF
 16453                           postinc2	equ	0xFDE
 16454                           postdec2	equ	0xFDD
 16455                           plusw2	equ	0xFDB
 16456                           fsr2h	equ	0xFDA
 16457                           fsr2l	equ	0xFD9
 16458                           status	equ	0xFD8
 16459                           
 16460 ;; *************** function _hexCharsToUint16 *****************
 16461 ;; Defined at:
 16462 ;;		line 49 in file "hex.c"
 16463 ;; Parameters:    Size  Location     Type
 16464 ;;  c1              1    wreg     unsigned char 
 16465 ;;  c2              1    2[COMRAM] unsigned char 
 16466 ;;  c3              1    3[COMRAM] unsigned char 
 16467 ;;  c4              1    4[COMRAM] unsigned char 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;  c1              1    8[COMRAM] unsigned char 
 16470 ;;  retVal          2    9[COMRAM] unsigned int 
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  2    2[COMRAM] unsigned int 
 16473 ;; Registers used:
 16474 ;;		wreg, status,2, status,0, cstack
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16480 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16481 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16482 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16483 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16484 ;;Total ram usage:        9 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; Hardware stack levels required when called:    1
 16487 ;; This function calls:
 16488 ;;		_hexCharToUint8
 16489 ;; This function is called by:
 16490 ;;		_parseHexFileEntry
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           	psect	text69
 16495  006488                     __ptext69:
 16496                           	opt stack 0
 16497  006488                     _hexCharsToUint16:
 16498                           	opt stack 26
 16499                           
 16500                           ;incstack = 0
 16501                           ;hexCharsToUint16@c1 stored from wreg
 16502  006488  6E09               	movwf	hexCharsToUint16@c1,c
 16503                           
 16504                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 16505  00648A  5009               	movf	hexCharsToUint16@c1,w,c
 16506  00648C  ECDA  F039         	call	_hexCharToUint8
 16507  006490  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16508  006492  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 16509  006494  0E0C               	movlw	12
 16510  006496                     u8595:
 16511  006496  90D8               	bcf	status,0,c
 16512  006498  3606               	rlcf	??_hexCharsToUint16,f,c
 16513  00649A  3607               	rlcf	??_hexCharsToUint16+1,f,c
 16514  00649C  2EE8               	decfsz	wreg,f,c
 16515  00649E  D7FB               	goto	u8595
 16516  0064A0  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 16517  0064A4  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 16518                           
 16519                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 16520  0064A8  5003               	movf	hexCharsToUint16@c2,w,c
 16521  0064AA  ECDA  F039         	call	_hexCharToUint8
 16522  0064AE  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16523  0064B0  5006               	movf	??_hexCharsToUint16,w,c
 16524  0064B2  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 16525  0064B4  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 16526  0064B6  5007               	movf	??_hexCharsToUint16+1,w,c
 16527  0064B8  120A               	iorwf	hexCharsToUint16@retVal,f,c
 16528  0064BA  5008               	movf	??_hexCharsToUint16+2,w,c
 16529  0064BC  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 16530                           
 16531                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 16532  0064BE  5004               	movf	hexCharsToUint16@c3,w,c
 16533  0064C0  ECDA  F039         	call	_hexCharToUint8
 16534  0064C4  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16535  0064C6  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 16536  0064C8  3A06               	swapf	??_hexCharsToUint16,f,c
 16537  0064CA  3A07               	swapf	??_hexCharsToUint16+1,f,c
 16538  0064CC  0EF0               	movlw	240
 16539  0064CE  1607               	andwf	??_hexCharsToUint16+1,f,c
 16540  0064D0  5006               	movf	??_hexCharsToUint16,w,c
 16541  0064D2  0B0F               	andlw	15
 16542  0064D4  1207               	iorwf	??_hexCharsToUint16+1,f,c
 16543  0064D6  0EF0               	movlw	240
 16544  0064D8  1606               	andwf	??_hexCharsToUint16,f,c
 16545  0064DA  5006               	movf	??_hexCharsToUint16,w,c
 16546  0064DC  120A               	iorwf	hexCharsToUint16@retVal,f,c
 16547  0064DE  5007               	movf	??_hexCharsToUint16+1,w,c
 16548  0064E0  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 16549                           
 16550                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 16551  0064E2  5005               	movf	hexCharsToUint16@c4,w,c
 16552  0064E4  ECDA  F039         	call	_hexCharToUint8
 16553  0064E8  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16554  0064EA  5006               	movf	??_hexCharsToUint16,w,c
 16555  0064EC  120A               	iorwf	hexCharsToUint16@retVal,f,c
 16556                           
 16557                           ;hex.c: 55: return retVal;
 16558  0064EE  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 16559  0064F2  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 16560  0064F6  0012               	return	
 16561  0064F8                     __end_of_hexCharsToUint16:
 16562                           	opt stack 0
 16563                           tblptru	equ	0xFF8
 16564                           tblptrh	equ	0xFF7
 16565                           tblptrl	equ	0xFF6
 16566                           tablat	equ	0xFF5
 16567                           prodh	equ	0xFF4
 16568                           prodl	equ	0xFF3
 16569                           intcon	equ	0xFF2
 16570                           intcon2	equ	0xFF1
 16571                           intcon3	equ	0xFF0
 16572                           postinc0	equ	0xFEE
 16573                           wreg	equ	0xFE8
 16574                           indf1	equ	0xFE7
 16575                           postdec1	equ	0xFE5
 16576                           plusw1	equ	0xFE3
 16577                           fsr1h	equ	0xFE2
 16578                           fsr1l	equ	0xFE1
 16579                           indf2	equ	0xFDF
 16580                           postinc2	equ	0xFDE
 16581                           postdec2	equ	0xFDD
 16582                           plusw2	equ	0xFDB
 16583                           fsr2h	equ	0xFDA
 16584                           fsr2l	equ	0xFD9
 16585                           status	equ	0xFD8
 16586                           
 16587 ;; *************** function _hexCharToUint8 *****************
 16588 ;; Defined at:
 16589 ;;		line 11 in file "hex.c"
 16590 ;; Parameters:    Size  Location     Type
 16591 ;;  c               1    wreg     unsigned char 
 16592 ;; Auto vars:     Size  Location     Type
 16593 ;;  c               1    0[COMRAM] unsigned char 
 16594 ;;  ascii           1    1[COMRAM] unsigned char 
 16595 ;; Return value:  Size  Location     Type
 16596 ;;                  1    wreg      unsigned char 
 16597 ;; Registers used:
 16598 ;;		wreg, status,2, status,0
 16599 ;; Tracked objects:
 16600 ;;		On entry : 0/0
 16601 ;;		On exit  : 0/0
 16602 ;;		Unchanged: 0/0
 16603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16608 ;;Total ram usage:        2 bytes
 16609 ;; Hardware stack levels used:    1
 16610 ;; This function calls:
 16611 ;;		Nothing
 16612 ;; This function is called by:
 16613 ;;		_hexCharsToUint8
 16614 ;;		_hexCharsToUint16
 16615 ;; This function uses a non-reentrant model
 16616 ;;
 16617                           
 16618                           	psect	text70
 16619  0073B4                     __ptext70:
 16620                           	opt stack 0
 16621  0073B4                     _hexCharToUint8:
 16622                           	opt stack 26
 16623                           
 16624                           ;incstack = 0
 16625                           ;hexCharToUint8@c stored from wreg
 16626  0073B4  6E01               	movwf	hexCharToUint8@c,c
 16627                           
 16628                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 16629  0073B6  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 16630                           
 16631                           ;hex.c: 16: if (ascii >= 97)
 16632  0073BA  0E60               	movlw	96
 16633  0073BC  6402               	cpfsgt	hexCharToUint8@ascii,c
 16634  0073BE  D002               	goto	l10951
 16635                           
 16636                           ;hex.c: 17: {
 16637                           ;hex.c: 18: ascii -= 87;
 16638  0073C0  0E57               	movlw	87
 16639  0073C2  D006               	goto	L3
 16640  0073C4                     l10951:
 16641                           
 16642                           ;hex.c: 21: else if (ascii >= 65)
 16643  0073C4  0E40               	movlw	64
 16644  0073C6  6402               	cpfsgt	hexCharToUint8@ascii,c
 16645  0073C8  D002               	goto	l10955
 16646                           
 16647                           ;hex.c: 22: {
 16648                           ;hex.c: 23: ascii -= 55;
 16649  0073CA  0E37               	movlw	55
 16650  0073CC  D001               	goto	L3
 16651  0073CE                     l10955:
 16652                           
 16653                           ;hex.c: 26: else
 16654                           ;hex.c: 27: {
 16655                           ;hex.c: 28: ascii -= 48;
 16656  0073CE  0E30               	movlw	48
 16657  0073D0                     L3:
 16658  0073D0  5E02               	subwf	hexCharToUint8@ascii,f,c
 16659                           
 16660                           ;hex.c: 29: }
 16661                           ;hex.c: 31: if (ascii > 15)
 16662  0073D2  0E0F               	movlw	15
 16663  0073D4  6402               	cpfsgt	hexCharToUint8@ascii,c
 16664  0073D6  D002               	goto	l10963
 16665                           
 16666                           ;hex.c: 32: {
 16667                           ;hex.c: 33: return 0;
 16668  0073D8  0E00               	movlw	0
 16669                           
 16670                           ;hex.c: 34: }
 16671  0073DA  0012               	return	
 16672  0073DC                     l10963:
 16673                           
 16674                           ;hex.c: 35: else
 16675                           ;hex.c: 36: {
 16676                           ;hex.c: 37: return ascii;
 16677  0073DC  5002               	movf	hexCharToUint8@ascii,w,c
 16678  0073DE  0012               	return	
 16679  0073E0                     __end_of_hexCharToUint8:
 16680                           	opt stack 0
 16681                           tblptru	equ	0xFF8
 16682                           tblptrh	equ	0xFF7
 16683                           tblptrl	equ	0xFF6
 16684                           tablat	equ	0xFF5
 16685                           prodh	equ	0xFF4
 16686                           prodl	equ	0xFF3
 16687                           intcon	equ	0xFF2
 16688                           intcon2	equ	0xFF1
 16689                           intcon3	equ	0xFF0
 16690                           postinc0	equ	0xFEE
 16691                           wreg	equ	0xFE8
 16692                           indf1	equ	0xFE7
 16693                           postdec1	equ	0xFE5
 16694                           plusw1	equ	0xFE3
 16695                           fsr1h	equ	0xFE2
 16696                           fsr1l	equ	0xFE1
 16697                           indf2	equ	0xFDF
 16698                           postinc2	equ	0xFDE
 16699                           postdec2	equ	0xFDD
 16700                           plusw2	equ	0xFDB
 16701                           fsr2h	equ	0xFDA
 16702                           fsr2l	equ	0xFD9
 16703                           status	equ	0xFD8
 16704                           
 16705 ;; *************** function _internalFlash_writePage *****************
 16706 ;; Defined at:
 16707 ;;		line 63 in file "internal_flash.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;  page            2    2[COMRAM] unsigned int 
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;  address         4    4[COMRAM] unsigned long 
 16712 ;;  cntr            2    8[COMRAM] unsigned int 
 16713 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 16714 ;;  block_cntr      1   10[COMRAM] unsigned char 
 16715 ;;  i               1    0        unsigned char 
 16716 ;;  gie             1    0        unsigned char 
 16717 ;; Return value:  Size  Location     Type
 16718 ;;                  1    wreg      void 
 16719 ;; Registers used:
 16720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16721 ;; Tracked objects:
 16722 ;;		On entry : 0/0
 16723 ;;		On exit  : 0/0
 16724 ;;		Unchanged: 0/0
 16725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16727 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16729 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16730 ;;Total ram usage:       10 bytes
 16731 ;; Hardware stack levels used:    1
 16732 ;; Hardware stack levels required when called:    1
 16733 ;; This function calls:
 16734 ;;		__internalFlash_unlockAndActivate
 16735 ;; This function is called by:
 16736 ;;		__bootloader_program
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           	psect	text71
 16741  0060C6                     __ptext71:
 16742                           	opt stack 0
 16743  0060C6                     _internalFlash_writePage:
 16744                           	opt stack 27
 16745                           
 16746                           ;internal_flash.c: 65: uint32_t address;
 16747                           ;internal_flash.c: 66: uint8_t gie;
 16748                           ;internal_flash.c: 67: uint16_t cntr;
 16749                           ;internal_flash.c: 68: uint8_t i;
 16750                           ;internal_flash.c: 69: uint8_t block_cntr;
 16751                           ;internal_flash.c: 70: uint8_t byte_cntr;
 16752                           ;internal_flash.c: 73: address = page;
 16753                           
 16754                           ;incstack = 0
 16755  0060C6  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 16756  0060CA  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 16757  0060CE  6A07               	clrf	internalFlash_writePage@address+2,c
 16758  0060D0  6A08               	clrf	internalFlash_writePage@address+3,c
 16759                           
 16760                           ;internal_flash.c: 74: address <<= 10;
 16761  0060D2  0E0A               	movlw	10
 16762  0060D4                     u9575:
 16763  0060D4  90D8               	bcf	status,0,c
 16764  0060D6  3605               	rlcf	internalFlash_writePage@address,f,c
 16765  0060D8  3606               	rlcf	internalFlash_writePage@address+1,f,c
 16766  0060DA  3607               	rlcf	internalFlash_writePage@address+2,f,c
 16767  0060DC  3608               	rlcf	internalFlash_writePage@address+3,f,c
 16768  0060DE  2EE8               	decfsz	wreg,f,c
 16769  0060E0  D7F9               	goto	u9575
 16770                           
 16771                           ;internal_flash.c: 76: TBLPTR = address;
 16772  0060E2  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 16773  0060E6  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 16774  0060EA  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 16775                           
 16776                           ;internal_flash.c: 79: cntr = 0;
 16777  0060EE  0E00               	movlw	0
 16778  0060F0  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 16779  0060F2  0E00               	movlw	0
 16780  0060F4  6E09               	movwf	internalFlash_writePage@cntr,c
 16781                           
 16782                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 16783  0060F6  0E00               	movlw	0
 16784  0060F8  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 16785  0060FA                     l12703:
 16786  0060FA  0E0F               	movlw	15
 16787  0060FC  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 16788  0060FE  D001               	goto	l12707
 16789  006100  0012               	return	
 16790  006102                     l12707:
 16791                           
 16792                           ;internal_flash.c: 81: {
 16793                           ;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cntr)
 16794  006102  0E00               	movlw	0
 16795  006104  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 16796  006106                     l12709:
 16797  006106  0E3F               	movlw	63
 16798  006108  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 16799  00610A  D001               	goto	l12713
 16800  00610C  D00D               	goto	l2772
 16801  00610E                     l12713:
 16802                           
 16803                           ;internal_flash.c: 85: {
 16804                           ;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 16805  00610E  0E00               	movlw	low _pageBuffer
 16806  006110  2409               	addwf	internalFlash_writePage@cntr,w,c
 16807  006112  6ED9               	movwf	fsr2l,c
 16808  006114  0E08               	movlw	high _pageBuffer
 16809  006116  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 16810  006118  6EDA               	movwf	fsr2h,c
 16811  00611A  50DF               	movf	indf2,w,c
 16812  00611C  6EF5               	movwf	tablat,c	;volatile
 16813  00611E  000D               	tblwt		*+	;# 
 16814                           
 16815                           ;internal_flash.c: 91: ++cntr;
 16816  006120  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 16817  006122  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 16818  006124  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 16819  006126  D7EF               	goto	l12709
 16820  006128                     l2772:
 16821  006128  000A               	tblrd		*-	;# 
 16822                           
 16823                           ;internal_flash.c: 98: EECON1 = 0x84;
 16824  00612A  0E84               	movlw	132
 16825  00612C  6EA6               	movwf	4006,c	;volatile
 16826                           
 16827                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 16828  00612E  0EB5               	movlw	181
 16829  006130  EC5A  F03A         	call	__internalFlash_unlockAndActivate
 16830                           
 16831                           ;internal_flash.c: 100: TBLPTR++;
 16832  006134  0E01               	movlw	1
 16833  006136  26F6               	addwf	tblptrl,f,c	;volatile
 16834  006138  0E00               	movlw	0
 16835  00613A  22F7               	addwfc	tblptrh,f,c	;volatile
 16836  00613C  0E00               	movlw	0
 16837  00613E  22F8               	addwfc	tblptru,f,c	;volatile
 16838  006140  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 16839  006142  D7DB               	goto	l12703
 16840  006144                     __end_of_internalFlash_writePage:
 16841                           	opt stack 0
 16842                           tblptru	equ	0xFF8
 16843                           tblptrh	equ	0xFF7
 16844                           tblptrl	equ	0xFF6
 16845                           tablat	equ	0xFF5
 16846                           prodh	equ	0xFF4
 16847                           prodl	equ	0xFF3
 16848                           intcon	equ	0xFF2
 16849                           intcon2	equ	0xFF1
 16850                           intcon3	equ	0xFF0
 16851                           postinc0	equ	0xFEE
 16852                           wreg	equ	0xFE8
 16853                           indf1	equ	0xFE7
 16854                           postdec1	equ	0xFE5
 16855                           plusw1	equ	0xFE3
 16856                           fsr1h	equ	0xFE2
 16857                           fsr1l	equ	0xFE1
 16858                           indf2	equ	0xFDF
 16859                           postinc2	equ	0xFDE
 16860                           postdec2	equ	0xFDD
 16861                           plusw2	equ	0xFDB
 16862                           fsr2h	equ	0xFDA
 16863                           fsr2l	equ	0xFD9
 16864                           status	equ	0xFD8
 16865                           
 16866 ;; *************** function _internalFlash_readPage *****************
 16867 ;; Defined at:
 16868 ;;		line 37 in file "internal_flash.c"
 16869 ;; Parameters:    Size  Location     Type
 16870 ;;  page            2   20[COMRAM] unsigned int 
 16871 ;; Auto vars:     Size  Location     Type
 16872 ;;  address         4   22[COMRAM] unsigned long 
 16873 ;; Return value:  Size  Location     Type
 16874 ;;                  1    wreg      void 
 16875 ;; Registers used:
 16876 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16877 ;; Tracked objects:
 16878 ;;		On entry : 0/0
 16879 ;;		On exit  : 0/0
 16880 ;;		Unchanged: 0/0
 16881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16886 ;;Total ram usage:        6 bytes
 16887 ;; Hardware stack levels used:    1
 16888 ;; Hardware stack levels required when called:    2
 16889 ;; This function calls:
 16890 ;;		_internalFlash_addressFromPage
 16891 ;;		_internalFlash_read
 16892 ;; This function is called by:
 16893 ;;		__bootloader_program
 16894 ;; This function uses a non-reentrant model
 16895 ;;
 16896                           
 16897                           	psect	text72
 16898  0070CA                     __ptext72:
 16899                           	opt stack 0
 16900  0070CA                     _internalFlash_readPage:
 16901                           	opt stack 26
 16902                           
 16903                           ;internal_flash.c: 39: uint32_t address;
 16904                           ;internal_flash.c: 40: address = internalFlash_addressFromPage(page);
 16905                           
 16906                           ;incstack = 0
 16907  0070CA  C015  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 16908  0070CE  C016  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 16909  0070D2  EC1C  F03A         	call	_internalFlash_addressFromPage	;wreg free
 16910  0070D6  C001  F017         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 16911  0070DA  C002  F018         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 16912  0070DE  C003  F019         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 16913  0070E2  C004  F01A         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 16914                           
 16915                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 16916  0070E6  C017  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 16917  0070EA  C018  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 16918  0070EE  C019  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 16919  0070F2  C01A  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 16920  0070F6  0E00               	movlw	0
 16921  0070F8  6E12               	movwf	internalFlash_read@data_length,c
 16922  0070FA  0E00               	movlw	low _pageBuffer
 16923  0070FC  6E13               	movwf	internalFlash_read@buffer,c
 16924  0070FE  0E08               	movlw	high _pageBuffer
 16925  007100  6E14               	movwf	internalFlash_read@buffer+1,c
 16926  007102  EC13  F039         	call	_internalFlash_read	;wreg free
 16927  007106  0012               	return		;funcret
 16928  007108                     __end_of_internalFlash_readPage:
 16929                           	opt stack 0
 16930                           tblptru	equ	0xFF8
 16931                           tblptrh	equ	0xFF7
 16932                           tblptrl	equ	0xFF6
 16933                           tablat	equ	0xFF5
 16934                           prodh	equ	0xFF4
 16935                           prodl	equ	0xFF3
 16936                           intcon	equ	0xFF2
 16937                           intcon2	equ	0xFF1
 16938                           intcon3	equ	0xFF0
 16939                           postinc0	equ	0xFEE
 16940                           wreg	equ	0xFE8
 16941                           indf1	equ	0xFE7
 16942                           postdec1	equ	0xFE5
 16943                           plusw1	equ	0xFE3
 16944                           fsr1h	equ	0xFE2
 16945                           fsr1l	equ	0xFE1
 16946                           indf2	equ	0xFDF
 16947                           postinc2	equ	0xFDE
 16948                           postdec2	equ	0xFDD
 16949                           plusw2	equ	0xFDB
 16950                           fsr2h	equ	0xFDA
 16951                           fsr2l	equ	0xFD9
 16952                           status	equ	0xFD8
 16953                           
 16954 ;; *************** function _internalFlash_read *****************
 16955 ;; Defined at:
 16956 ;;		line 144 in file "internal_flash.c"
 16957 ;; Parameters:    Size  Location     Type
 16958 ;;  address         4   13[COMRAM] unsigned long 
 16959 ;;  data_length     1   17[COMRAM] unsigned char 
 16960 ;;  buffer          2   18[COMRAM] PTR unsigned char 
 16961 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;		None
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      unsigned char 
 16966 ;; Registers used:
 16967 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16968 ;; Tracked objects:
 16969 ;;		On entry : 0/0
 16970 ;;		On exit  : 0/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16973 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16976 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16977 ;;Total ram usage:        7 bytes
 16978 ;; Hardware stack levels used:    1
 16979 ;; Hardware stack levels required when called:    1
 16980 ;; This function calls:
 16981 ;;		_memcpy
 16982 ;; This function is called by:
 16983 ;;		_internalFlash_readPage
 16984 ;;		__bootloader_verify_program_memory
 16985 ;; This function uses a non-reentrant model
 16986 ;;
 16987                           
 16988                           	psect	text73
 16989  007226                     __ptext73:
 16990                           	opt stack 0
 16991  007226                     _internalFlash_read:
 16992                           	opt stack 26
 16993                           
 16994                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 16995                           
 16996                           ;incstack = 0
 16997  007226  5011               	movf	internalFlash_read@address+3,w,c
 16998  007228  E117               	bnz	l2785
 16999  00722A  280E               	incf	internalFlash_read@address,w,c
 17000  00722C  0EFF               	movlw	255
 17001  00722E  580F               	subwfb	internalFlash_read@address+1,w,c
 17002  007230  0E01               	movlw	1
 17003  007232  5810               	subwfb	internalFlash_read@address+2,w,c
 17004  007234  B0D8               	btfsc	status,0,c
 17005  007236  0012               	return	
 17006                           
 17007                           ;internal_flash.c: 152: }
 17008                           ;internal_flash.c: 155: memcpy
 17009                           ;internal_flash.c: 156: (
 17010                           ;internal_flash.c: 157: (void*)buffer,
 17011                           ;internal_flash.c: 158: (const void*)(address),
 17012                           ;internal_flash.c: 159: data_length
 17013                           ;internal_flash.c: 160: );
 17014                           
 17015                           ;internal_flash.c: 150: {
 17016                           ;internal_flash.c: 151: return 0;
 17017                           ;	Return value of _internalFlash_read is never used
 17018  007238  C013  F001         	movff	internalFlash_read@buffer,memcpy@d1
 17019  00723C  C014  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 17020  007240  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 17021  007244  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 17022  007248  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 17023  00724C  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 17024  007250  6A07               	clrf	memcpy@n+1,c
 17025  007252  EC4B  F033         	call	_memcpy	;wreg free
 17026  007256  0012               	return	
 17027  007258                     l2785:
 17028  007258  0012               	return		;funcret
 17029  00725A                     __end_of_internalFlash_read:
 17030                           	opt stack 0
 17031                           tblptru	equ	0xFF8
 17032                           tblptrh	equ	0xFF7
 17033                           tblptrl	equ	0xFF6
 17034                           tablat	equ	0xFF5
 17035                           prodh	equ	0xFF4
 17036                           prodl	equ	0xFF3
 17037                           intcon	equ	0xFF2
 17038                           intcon2	equ	0xFF1
 17039                           intcon3	equ	0xFF0
 17040                           postinc0	equ	0xFEE
 17041                           wreg	equ	0xFE8
 17042                           indf1	equ	0xFE7
 17043                           postdec1	equ	0xFE5
 17044                           plusw1	equ	0xFE3
 17045                           fsr1h	equ	0xFE2
 17046                           fsr1l	equ	0xFE1
 17047                           indf2	equ	0xFDF
 17048                           postinc2	equ	0xFDE
 17049                           postdec2	equ	0xFDD
 17050                           plusw2	equ	0xFDB
 17051                           fsr2h	equ	0xFDA
 17052                           fsr2l	equ	0xFD9
 17053                           status	equ	0xFD8
 17054                           
 17055 ;; *************** function _internalFlash_pageFromAddress *****************
 17056 ;; Defined at:
 17057 ;;		line 308 in file "internal_flash.c"
 17058 ;; Parameters:    Size  Location     Type
 17059 ;;  address         4    0[COMRAM] unsigned long 
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;		None
 17062 ;; Return value:  Size  Location     Type
 17063 ;;                  2    0[COMRAM] unsigned int 
 17064 ;; Registers used:
 17065 ;;		wreg, status,2, status,0
 17066 ;; Tracked objects:
 17067 ;;		On entry : 0/0
 17068 ;;		On exit  : 0/0
 17069 ;;		Unchanged: 0/0
 17070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17074 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17075 ;;Total ram usage:        5 bytes
 17076 ;; Hardware stack levels used:    1
 17077 ;; This function calls:
 17078 ;;		Nothing
 17079 ;; This function is called by:
 17080 ;;		__bootloader_program
 17081 ;; This function uses a non-reentrant model
 17082 ;;
 17083                           
 17084                           	psect	text74
 17085  00767A                     __ptext74:
 17086                           	opt stack 0
 17087  00767A                     _internalFlash_pageFromAddress:
 17088                           	opt stack 28
 17089                           
 17090                           ;internal_flash.c: 310: address >>= 10;
 17091                           
 17092                           ;incstack = 0
 17093  00767A  0E0A               	movlw	10
 17094  00767C  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 17095  00767E                     u9555:
 17096  00767E  90D8               	bcf	status,0,c
 17097  007680  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 17098  007682  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 17099  007684  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 17100  007686  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 17101  007688  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 17102  00768A  D7F9               	goto	u9555
 17103                           
 17104                           ;internal_flash.c: 311: return (uint16_t) address;
 17105  00768C  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 17106  007690  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 17107  007694  0012               	return	
 17108  007696                     __end_of_internalFlash_pageFromAddress:
 17109                           	opt stack 0
 17110                           tblptru	equ	0xFF8
 17111                           tblptrh	equ	0xFF7
 17112                           tblptrl	equ	0xFF6
 17113                           tablat	equ	0xFF5
 17114                           prodh	equ	0xFF4
 17115                           prodl	equ	0xFF3
 17116                           intcon	equ	0xFF2
 17117                           intcon2	equ	0xFF1
 17118                           intcon3	equ	0xFF0
 17119                           postinc0	equ	0xFEE
 17120                           wreg	equ	0xFE8
 17121                           indf1	equ	0xFE7
 17122                           postdec1	equ	0xFE5
 17123                           plusw1	equ	0xFE3
 17124                           fsr1h	equ	0xFE2
 17125                           fsr1l	equ	0xFE1
 17126                           indf2	equ	0xFDF
 17127                           postinc2	equ	0xFDE
 17128                           postdec2	equ	0xFDD
 17129                           plusw2	equ	0xFDB
 17130                           fsr2h	equ	0xFDA
 17131                           fsr2l	equ	0xFD9
 17132                           status	equ	0xFD8
 17133                           
 17134 ;; *************** function _internalFlash_getBuffer *****************
 17135 ;; Defined at:
 17136 ;;		line 32 in file "internal_flash.c"
 17137 ;; Parameters:    Size  Location     Type
 17138 ;;		None
 17139 ;; Auto vars:     Size  Location     Type
 17140 ;;		None
 17141 ;; Return value:  Size  Location     Type
 17142 ;;                  2    0[COMRAM] PTR unsigned char 
 17143 ;; Registers used:
 17144 ;;		wreg, status,2, status,0
 17145 ;; Tracked objects:
 17146 ;;		On entry : 0/0
 17147 ;;		On exit  : 0/0
 17148 ;;		Unchanged: 0/0
 17149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17154 ;;Total ram usage:        2 bytes
 17155 ;; Hardware stack levels used:    1
 17156 ;; This function calls:
 17157 ;;		Nothing
 17158 ;; This function is called by:
 17159 ;;		__bootloader_program
 17160 ;; This function uses a non-reentrant model
 17161 ;;
 17162                           
 17163                           	psect	text75
 17164  0078BC                     __ptext75:
 17165                           	opt stack 0
 17166  0078BC                     _internalFlash_getBuffer:
 17167                           	opt stack 28
 17168                           
 17169                           ;internal_flash.c: 34: return pageBuffer;
 17170                           
 17171                           ;incstack = 0
 17172  0078BC  0E00               	movlw	low _pageBuffer
 17173  0078BE  6E01               	movwf	?_internalFlash_getBuffer,c
 17174  0078C0  0E08               	movlw	high _pageBuffer
 17175  0078C2  6E02               	movwf	?_internalFlash_getBuffer+1,c
 17176  0078C4  0012               	return	
 17177  0078C6                     __end_of_internalFlash_getBuffer:
 17178                           	opt stack 0
 17179                           tblptru	equ	0xFF8
 17180                           tblptrh	equ	0xFF7
 17181                           tblptrl	equ	0xFF6
 17182                           tablat	equ	0xFF5
 17183                           prodh	equ	0xFF4
 17184                           prodl	equ	0xFF3
 17185                           intcon	equ	0xFF2
 17186                           intcon2	equ	0xFF1
 17187                           intcon3	equ	0xFF0
 17188                           postinc0	equ	0xFEE
 17189                           wreg	equ	0xFE8
 17190                           indf1	equ	0xFE7
 17191                           postdec1	equ	0xFE5
 17192                           plusw1	equ	0xFE3
 17193                           fsr1h	equ	0xFE2
 17194                           fsr1l	equ	0xFE1
 17195                           indf2	equ	0xFDF
 17196                           postinc2	equ	0xFDE
 17197                           postdec2	equ	0xFDD
 17198                           plusw2	equ	0xFDB
 17199                           fsr2h	equ	0xFDA
 17200                           fsr2l	equ	0xFD9
 17201                           status	equ	0xFD8
 17202                           
 17203 ;; *************** function _internalFlash_erasePage *****************
 17204 ;; Defined at:
 17205 ;;		line 44 in file "internal_flash.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;  page            2    2[COMRAM] unsigned int 
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;  address         4    4[COMRAM] unsigned long 
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      void 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0, cstack
 17214 ;; Tracked objects:
 17215 ;;		On entry : 0/0
 17216 ;;		On exit  : 0/0
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17223 ;;Total ram usage:        6 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; Hardware stack levels required when called:    1
 17226 ;; This function calls:
 17227 ;;		__internalFlash_unlockAndActivate
 17228 ;; This function is called by:
 17229 ;;		__bootloader_program
 17230 ;; This function uses a non-reentrant model
 17231 ;;
 17232                           
 17233                           	psect	text76
 17234  00725A                     __ptext76:
 17235                           	opt stack 0
 17236  00725A                     _internalFlash_erasePage:
 17237                           	opt stack 27
 17238                           
 17239                           ;internal_flash.c: 46: uint32_t address;
 17240                           ;internal_flash.c: 49: address = page;
 17241                           
 17242                           ;incstack = 0
 17243  00725A  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 17244  00725E  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 17245  007262  6A07               	clrf	internalFlash_erasePage@address+2,c
 17246  007264  6A08               	clrf	internalFlash_erasePage@address+3,c
 17247                           
 17248                           ;internal_flash.c: 50: address <<= 10;
 17249  007266  0E0A               	movlw	10
 17250  007268                     u9565:
 17251  007268  90D8               	bcf	status,0,c
 17252  00726A  3605               	rlcf	internalFlash_erasePage@address,f,c
 17253  00726C  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 17254  00726E  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 17255  007270  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 17256  007272  2EE8               	decfsz	wreg,f,c
 17257  007274  D7F9               	goto	u9565
 17258                           
 17259                           ;internal_flash.c: 51: TBLPTR = address;
 17260  007276  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 17261  00727A  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 17262  00727E  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 17263                           
 17264                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 17265  007282  84A6               	bsf	4006,2,c	;volatile
 17266                           
 17267                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 17268  007284  88A6               	bsf	4006,4,c	;volatile
 17269                           
 17270                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 17271  007286  0EB5               	movlw	181
 17272  007288  EC5A  F03A         	call	__internalFlash_unlockAndActivate
 17273  00728C  0012               	return		;funcret
 17274  00728E                     __end_of_internalFlash_erasePage:
 17275                           	opt stack 0
 17276                           tblptru	equ	0xFF8
 17277                           tblptrh	equ	0xFF7
 17278                           tblptrl	equ	0xFF6
 17279                           tablat	equ	0xFF5
 17280                           prodh	equ	0xFF4
 17281                           prodl	equ	0xFF3
 17282                           intcon	equ	0xFF2
 17283                           intcon2	equ	0xFF1
 17284                           intcon3	equ	0xFF0
 17285                           postinc0	equ	0xFEE
 17286                           wreg	equ	0xFE8
 17287                           indf1	equ	0xFE7
 17288                           postdec1	equ	0xFE5
 17289                           plusw1	equ	0xFE3
 17290                           fsr1h	equ	0xFE2
 17291                           fsr1l	equ	0xFE1
 17292                           indf2	equ	0xFDF
 17293                           postinc2	equ	0xFDE
 17294                           postdec2	equ	0xFDD
 17295                           plusw2	equ	0xFDB
 17296                           fsr2h	equ	0xFDA
 17297                           fsr2l	equ	0xFD9
 17298                           status	equ	0xFD8
 17299                           
 17300 ;; *************** function __internalFlash_unlockAndActivate *****************
 17301 ;; Defined at:
 17302 ;;		line 106 in file "internal_flash.c"
 17303 ;; Parameters:    Size  Location     Type
 17304 ;;  UnlockKey       1    wreg     unsigned char 
 17305 ;; Auto vars:     Size  Location     Type
 17306 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 17307 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  1    wreg      void 
 17310 ;; Registers used:
 17311 ;;		wreg, status,2, status,0
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17321 ;;Total ram usage:        2 bytes
 17322 ;; Hardware stack levels used:    1
 17323 ;; This function calls:
 17324 ;;		Nothing
 17325 ;; This function is called by:
 17326 ;;		_internalFlash_erasePage
 17327 ;;		_internalFlash_writePage
 17328 ;;		_EraseBlock
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           	psect	text77
 17333  0074B4                     __ptext77:
 17334                           	opt stack 0
 17335  0074B4                     __internalFlash_unlockAndActivate:
 17336                           	opt stack 27
 17337                           
 17338                           ;incstack = 0
 17339                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 17340  0074B4  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 17341                           
 17342                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;
 17343                           ;internal_flash.c: 115: if(UnlockKey != (uint8_t)0xB5)
 17344  0074B6  0EB5               	movlw	181
 17345  0074B8  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 17346  0074BA  B4D8               	btfsc	status,2,c
 17347  0074BC  D002               	goto	l2776
 17348                           
 17349                           ;internal_flash.c: 116: {
 17350                           ;internal_flash.c: 117: EECON1bits.WREN = 0;
 17351  0074BE  94A6               	bcf	4006,2,c	;volatile
 17352                           
 17353                           ;internal_flash.c: 118: return;
 17354  0074C0  0012               	return	
 17355  0074C2                     l2776:
 17356                           
 17357                           ;internal_flash.c: 119: }
 17358                           ;internal_flash.c: 121: InterruptEnableSave = INTCON;
 17359  0074C2  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 17360                           
 17361                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 17362  0074C6  9EF2               	bcf	intcon,7,c	;volatile
 17363                           
 17364                           ;internal_flash.c: 123: EECON2 = 0x55;
 17365  0074C8  0E55               	movlw	85
 17366  0074CA  6EA7               	movwf	4007,c	;volatile
 17367                           
 17368                           ;internal_flash.c: 124: EECON2 = 0xAA;
 17369  0074CC  0EAA               	movlw	170
 17370  0074CE  6EA7               	movwf	4007,c	;volatile
 17371                           
 17372                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 17373  0074D0  82A6               	bsf	4006,1,c	;volatile
 17374                           
 17375                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 17376  0074D2  94A6               	bcf	4006,2,c	;volatile
 17377                           
 17378                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 17379  0074D4  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 17380  0074D6  0012               	return	
 17381                           
 17382                           ;internal_flash.c: 129: {
 17383                           ;internal_flash.c: 130: INTCONbits.GIEH = 1;
 17384  0074D8  8EF2               	bsf	intcon,7,c	;volatile
 17385  0074DA  0012               	return	
 17386  0074DC                     __end_of__internalFlash_unlockAndActivate:
 17387                           	opt stack 0
 17388                           tblptru	equ	0xFF8
 17389                           tblptrh	equ	0xFF7
 17390                           tblptrl	equ	0xFF6
 17391                           tablat	equ	0xFF5
 17392                           prodh	equ	0xFF4
 17393                           prodl	equ	0xFF3
 17394                           intcon	equ	0xFF2
 17395                           intcon2	equ	0xFF1
 17396                           intcon3	equ	0xFF0
 17397                           postinc0	equ	0xFEE
 17398                           wreg	equ	0xFE8
 17399                           indf1	equ	0xFE7
 17400                           postdec1	equ	0xFE5
 17401                           plusw1	equ	0xFE3
 17402                           fsr1h	equ	0xFE2
 17403                           fsr1l	equ	0xFE1
 17404                           indf2	equ	0xFDF
 17405                           postinc2	equ	0xFDE
 17406                           postdec2	equ	0xFDD
 17407                           plusw2	equ	0xFDB
 17408                           fsr2h	equ	0xFDA
 17409                           fsr2l	equ	0xFD9
 17410                           status	equ	0xFD8
 17411                           
 17412 ;; *************** function _internalFlash_addressWithinPage *****************
 17413 ;; Defined at:
 17414 ;;		line 322 in file "internal_flash.c"
 17415 ;; Parameters:    Size  Location     Type
 17416 ;;  address         4    8[COMRAM] unsigned long 
 17417 ;;  page            2   12[COMRAM] unsigned int 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;  page_start_a    4   18[COMRAM] unsigned long 
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  2    8[COMRAM] unsigned int 
 17422 ;; Registers used:
 17423 ;;		wreg, status,2, status,0, cstack
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17429 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17430 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17432 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17433 ;;Total ram usage:       14 bytes
 17434 ;; Hardware stack levels used:    1
 17435 ;; Hardware stack levels required when called:    1
 17436 ;; This function calls:
 17437 ;;		_internalFlash_addressFromPage
 17438 ;; This function is called by:
 17439 ;;		__bootloader_program
 17440 ;; This function uses a non-reentrant model
 17441 ;;
 17442                           
 17443                           	psect	text78
 17444  006760                     __ptext78:
 17445                           	opt stack 0
 17446  006760                     _internalFlash_addressWithinPage:
 17447                           	opt stack 27
 17448                           
 17449                           ;internal_flash.c: 324: uint32_t page_start_address;
 17450                           ;internal_flash.c: 325: page_start_address = internalFlash_addressFromPage(page);
 17451                           
 17452                           ;incstack = 0
 17453  006760  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 17454  006764  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 17455  006768  EC1C  F03A         	call	_internalFlash_addressFromPage	;wreg free
 17456  00676C  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 17457  006770  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 17458  006774  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 17459  006778  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 17460                           
 17461                           ;internal_flash.c: 326: address = address - page_start_address;
 17462  00677C  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 17463  006780  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 17464  006784  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 17465  006788  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 17466  00678C  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 17467  00678E  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 17468  006790  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 17469  006792  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 17470  006794  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 17471  006796  0E00               	movlw	0
 17472  006798  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 17473  00679A  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 17474  00679C  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 17475  00679E  5009               	movf	internalFlash_addressWithinPage@address,w,c
 17476  0067A0  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 17477  0067A2  6E09               	movwf	internalFlash_addressWithinPage@address,c
 17478  0067A4  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 17479  0067A6  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 17480  0067A8  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 17481  0067AA  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 17482  0067AC  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 17483  0067AE  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 17484  0067B0  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 17485  0067B2  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 17486  0067B4  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 17487                           
 17488                           ;internal_flash.c: 327: return (uint16_t) address;
 17489  0067B6  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 17490  0067BA  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 17491  0067BE  0012               	return	
 17492  0067C0                     __end_of_internalFlash_addressWithinPage:
 17493                           	opt stack 0
 17494                           tblptru	equ	0xFF8
 17495                           tblptrh	equ	0xFF7
 17496                           tblptrl	equ	0xFF6
 17497                           tablat	equ	0xFF5
 17498                           prodh	equ	0xFF4
 17499                           prodl	equ	0xFF3
 17500                           intcon	equ	0xFF2
 17501                           intcon2	equ	0xFF1
 17502                           intcon3	equ	0xFF0
 17503                           postinc0	equ	0xFEE
 17504                           wreg	equ	0xFE8
 17505                           indf1	equ	0xFE7
 17506                           postdec1	equ	0xFE5
 17507                           plusw1	equ	0xFE3
 17508                           fsr1h	equ	0xFE2
 17509                           fsr1l	equ	0xFE1
 17510                           indf2	equ	0xFDF
 17511                           postinc2	equ	0xFDE
 17512                           postdec2	equ	0xFDD
 17513                           plusw2	equ	0xFDB
 17514                           fsr2h	equ	0xFDA
 17515                           fsr2l	equ	0xFD9
 17516                           status	equ	0xFD8
 17517                           
 17518 ;; *************** function _internalFlash_addressFromPage *****************
 17519 ;; Defined at:
 17520 ;;		line 314 in file "internal_flash.c"
 17521 ;; Parameters:    Size  Location     Type
 17522 ;;  page            2    0[COMRAM] unsigned int 
 17523 ;; Auto vars:     Size  Location     Type
 17524 ;;  address         4    4[COMRAM] unsigned long 
 17525 ;; Return value:  Size  Location     Type
 17526 ;;                  4    0[COMRAM] unsigned long 
 17527 ;; Registers used:
 17528 ;;		wreg, status,2, status,0
 17529 ;; Tracked objects:
 17530 ;;		On entry : 0/0
 17531 ;;		On exit  : 0/0
 17532 ;;		Unchanged: 0/0
 17533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17535 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17537 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17538 ;;Total ram usage:        8 bytes
 17539 ;; Hardware stack levels used:    1
 17540 ;; This function calls:
 17541 ;;		Nothing
 17542 ;; This function is called by:
 17543 ;;		_internalFlash_readPage
 17544 ;;		_internalFlash_addressWithinPage
 17545 ;; This function uses a non-reentrant model
 17546 ;;
 17547                           
 17548                           	psect	text79
 17549  007438                     __ptext79:
 17550                           	opt stack 0
 17551  007438                     _internalFlash_addressFromPage:
 17552                           	opt stack 27
 17553                           
 17554                           ;internal_flash.c: 316: uint32_t address;
 17555                           ;internal_flash.c: 317: address = (uint32_t) page;
 17556                           
 17557                           ;incstack = 0
 17558  007438  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 17559  00743C  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 17560  007440  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 17561  007442  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 17562                           
 17563                           ;internal_flash.c: 318: address <<= 10;
 17564  007444  0E0A               	movlw	10
 17565  007446                     u8615:
 17566  007446  90D8               	bcf	status,0,c
 17567  007448  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 17568  00744A  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 17569  00744C  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 17570  00744E  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 17571  007450  2EE8               	decfsz	wreg,f,c
 17572  007452  D7F9               	goto	u8615
 17573                           
 17574                           ;internal_flash.c: 319: return (uint16_t) address;
 17575  007454  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 17576  007458  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 17577  00745C  6A03               	clrf	?_internalFlash_addressFromPage+2,c
 17578  00745E  6A04               	clrf	?_internalFlash_addressFromPage+3,c
 17579  007460  0012               	return	
 17580  007462                     __end_of_internalFlash_addressFromPage:
 17581                           	opt stack 0
 17582                           tblptru	equ	0xFF8
 17583                           tblptrh	equ	0xFF7
 17584                           tblptrl	equ	0xFF6
 17585                           tablat	equ	0xFF5
 17586                           prodh	equ	0xFF4
 17587                           prodl	equ	0xFF3
 17588                           intcon	equ	0xFF2
 17589                           intcon2	equ	0xFF1
 17590                           intcon3	equ	0xFF0
 17591                           postinc0	equ	0xFEE
 17592                           wreg	equ	0xFE8
 17593                           indf1	equ	0xFE7
 17594                           postdec1	equ	0xFE5
 17595                           plusw1	equ	0xFE3
 17596                           fsr1h	equ	0xFE2
 17597                           fsr1l	equ	0xFE1
 17598                           indf2	equ	0xFDF
 17599                           postinc2	equ	0xFDE
 17600                           postdec2	equ	0xFDD
 17601                           plusw2	equ	0xFDB
 17602                           fsr2h	equ	0xFDA
 17603                           fsr2l	equ	0xFD9
 17604                           status	equ	0xFD8
 17605                           
 17606 ;; *************** function _fat_read_from_file *****************
 17607 ;; Defined at:
 17608 ;;		line 571 in file "fat16.c"
 17609 ;; Parameters:    Size  Location     Type
 17610 ;;  file_number     1    wreg     unsigned char 
 17611 ;;  start_byte      4   47[COMRAM] unsigned long 
 17612 ;;  length          4   51[COMRAM] unsigned long 
 17613 ;;  data            2   55[COMRAM] PTR unsigned char 
 17614 ;;		 -> file_buffer(50), 
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  file_number     1    2[BANK0 ] unsigned char 
 17617 ;;  root           32    3[BANK0 ] struct .
 17618 ;;  position        4   41[BANK0 ] unsigned long 
 17619 ;;  read_length     2   39[BANK0 ] unsigned int 
 17620 ;;  offset          2   37[BANK0 ] unsigned int 
 17621 ;;  cluster         2   35[BANK0 ] unsigned int 
 17622 ;;  sector          2    0[BANK0 ] unsigned int 
 17623 ;; Return value:  Size  Location     Type
 17624 ;;                  1    wreg      unsigned char 
 17625 ;; Registers used:
 17626 ;;		wreg, status,2, status,0, cstack
 17627 ;; Tracked objects:
 17628 ;;		On entry : 0/0
 17629 ;;		On exit  : 0/0
 17630 ;;		Unchanged: 0/0
 17631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17632 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17633 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17634 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17635 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17636 ;;Total ram usage:       67 bytes
 17637 ;; Hardware stack levels used:    1
 17638 ;; Hardware stack levels required when called:    5
 17639 ;; This function calls:
 17640 ;;		__read_fat
 17641 ;;		__read_root
 17642 ;;		__sector_from_cluster
 17643 ;;		_flash_partial_read
 17644 ;; This function is called by:
 17645 ;;		__bootloader_verify_file
 17646 ;;		__bootloader_program
 17647 ;; This function uses a non-reentrant model
 17648 ;;
 17649                           
 17650                           	psect	text80
 17651  002750                     __ptext80:
 17652                           	opt stack 0
 17653  002750                     _fat_read_from_file:
 17654                           	opt stack 23
 17655                           
 17656                           ;incstack = 0
 17657                           ;fat_read_from_file@file_number stored from wreg
 17658  002750  0100               	movlb	0	; () banked
 17659  002752  6F62               	movwf	fat_read_from_file@file_number& (0+255),b
 17660                           
 17661                           ;fat16.c: 573: rootEntry_t root;
 17662                           ;fat16.c: 574: uint32_t position;
 17663                           ;fat16.c: 575: uint16_t cluster;
 17664                           ;fat16.c: 576: uint16_t offset;
 17665                           ;fat16.c: 577: uint16_t sector;
 17666                           ;fat16.c: 578: uint16_t read_length;
 17667                           ;fat16.c: 581: _read_root(file_number, &root);
 17668  002754  0E63               	movlw	low fat_read_from_file@root
 17669  002756  6E28               	movwf	__read_root@data,c
 17670  002758  0E00               	movlw	high fat_read_from_file@root
 17671  00275A  6E29               	movwf	__read_root@data+1,c
 17672  00275C  0100               	movlb	0	; () banked
 17673  00275E  5162               	movf	fat_read_from_file@file_number& (0+255),w,b
 17674  002760  EC0E  F034         	call	__read_root
 17675                           
 17676                           ;fat16.c: 582: cluster = root.firstCluster;
 17677  002764  C07D  F083         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 17678  002768  C07E  F084         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 17679                           
 17680                           ;fat16.c: 585: if(start_byte+length > root.fileSize)
 17681  00276C  5034               	movf	fat_read_from_file@length,w,c
 17682  00276E  2430               	addwf	fat_read_from_file@start_byte,w,c
 17683  002770  6E3A               	movwf	??_fat_read_from_file& (0+255),c
 17684  002772  5035               	movf	fat_read_from_file@length+1,w,c
 17685  002774  2031               	addwfc	fat_read_from_file@start_byte+1,w,c
 17686  002776  6E3B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 17687  002778  5036               	movf	fat_read_from_file@length+2,w,c
 17688  00277A  2032               	addwfc	fat_read_from_file@start_byte+2,w,c
 17689  00277C  6E3C               	movwf	(??_fat_read_from_file+2)& (0+255),c
 17690  00277E  5037               	movf	fat_read_from_file@length+3,w,c
 17691  002780  2033               	addwfc	fat_read_from_file@start_byte+3,w,c
 17692  002782  6E3D               	movwf	(??_fat_read_from_file+3)& (0+255),c
 17693  002784  503A               	movf	??_fat_read_from_file,w,c
 17694  002786  0100               	movlb	0	; () banked
 17695  002788  5D7F               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 17696  00278A  503B               	movf	??_fat_read_from_file+1,w,c
 17697  00278C  0100               	movlb	0	; () banked
 17698  00278E  5980               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 17699  002790  503C               	movf	??_fat_read_from_file+2,w,c
 17700  002792  0100               	movlb	0	; () banked
 17701  002794  5981               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 17702  002796  503D               	movf	??_fat_read_from_file+3,w,c
 17703  002798  0100               	movlb	0	; () banked
 17704  00279A  5982               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 17705  00279C  A0D8               	btfss	status,0,c
 17706  00279E  0012               	return	
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;fat16.c: 589: }
 17710                           ;fat16.c: 592: position = 0;
 17711                           
 17712                           ; BSR set to: 0
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;fat16.c: 586: {
 17716                           ;fat16.c: 588: return 0xFF;
 17717                           ;	Return value of _fat_read_from_file is never used
 17718  0027A0  0E00               	movlw	0
 17719  0027A2  0100               	movlb	0	; () banked
 17720  0027A4  6F89               	movwf	fat_read_from_file@position& (0+255),b
 17721  0027A6  0E00               	movlw	0
 17722  0027A8  6F8A               	movwf	(fat_read_from_file@position+1)& (0+255),b
 17723  0027AA  0E00               	movlw	0
 17724  0027AC  6F8B               	movwf	(fat_read_from_file@position+2)& (0+255),b
 17725  0027AE  0E00               	movlw	0
 17726  0027B0  6F8C               	movwf	(fat_read_from_file@position+3)& (0+255),b
 17727                           
 17728                           ;fat16.c: 593: while((start_byte-position) >= 512)
 17729  0027B2  D013               	goto	l12361
 17730  0027B4                     l12357:
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;fat16.c: 594: {
 17734                           ;fat16.c: 595: cluster = _read_fat(cluster);
 17735  0027B4  C083  F028         	movff	fat_read_from_file@cluster,__read_fat@cluster
 17736  0027B8  C084  F029         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 17737  0027BC  ECF0  F036         	call	__read_fat	;wreg free
 17738  0027C0  C028  F083         	movff	?__read_fat,fat_read_from_file@cluster
 17739  0027C4  C029  F084         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 17740                           
 17741                           ;fat16.c: 596: position += 512;
 17742  0027C8  0E00               	movlw	0
 17743  0027CA  0100               	movlb	0	; () banked
 17744  0027CC  2789               	addwf	fat_read_from_file@position& (0+255),f,b
 17745  0027CE  0E02               	movlw	2
 17746  0027D0  238A               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 17747  0027D2  0E00               	movlw	0
 17748  0027D4  238B               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 17749  0027D6  0E00               	movlw	0
 17750  0027D8  238C               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 17751  0027DA                     l12361:
 17752                           
 17753                           ; BSR set to: 0
 17754  0027DA  C089  F03A         	movff	fat_read_from_file@position,??_fat_read_from_file
 17755  0027DE  C08A  F03B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 17756  0027E2  C08B  F03C         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 17757  0027E6  C08C  F03D         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 17758  0027EA  1E3A               	comf	??_fat_read_from_file,f,c
 17759  0027EC  1E3B               	comf	??_fat_read_from_file+1,f,c
 17760  0027EE  1E3C               	comf	??_fat_read_from_file+2,f,c
 17761  0027F0  1E3D               	comf	??_fat_read_from_file+3,f,c
 17762  0027F2  2A3A               	incf	??_fat_read_from_file,f,c
 17763  0027F4  0E00               	movlw	0
 17764  0027F6  223B               	addwfc	??_fat_read_from_file+1,f,c
 17765  0027F8  223C               	addwfc	??_fat_read_from_file+2,f,c
 17766  0027FA  223D               	addwfc	??_fat_read_from_file+3,f,c
 17767  0027FC  5030               	movf	fat_read_from_file@start_byte,w,c
 17768  0027FE  243A               	addwf	??_fat_read_from_file,w,c
 17769  002800  6E3E               	movwf	(??_fat_read_from_file+4)& (0+255),c
 17770  002802  5031               	movf	fat_read_from_file@start_byte+1,w,c
 17771  002804  203B               	addwfc	??_fat_read_from_file+1,w,c
 17772  002806  6E3F               	movwf	(??_fat_read_from_file+5)& (0+255),c
 17773  002808  5032               	movf	fat_read_from_file@start_byte+2,w,c
 17774  00280A  203C               	addwfc	??_fat_read_from_file+2,w,c
 17775  00280C  6E40               	movwf	(??_fat_read_from_file+6)& (0+255),c
 17776  00280E  5033               	movf	fat_read_from_file@start_byte+3,w,c
 17777  002810  203D               	addwfc	??_fat_read_from_file+3,w,c
 17778  002812  6E41               	movwf	(??_fat_read_from_file+7)& (0+255),c
 17779  002814  5041               	movf	??_fat_read_from_file+7,w,c
 17780  002816  1040               	iorwf	??_fat_read_from_file+6,w,c
 17781  002818  E1CD               	bnz	l12357
 17782  00281A  0E02               	movlw	2
 17783  00281C  5C3F               	subwf	??_fat_read_from_file+5,w,c
 17784  00281E  B0D8               	btfsc	status,0,c
 17785  002820  D7C9               	goto	l12357
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;fat16.c: 597: }
 17789                           ;fat16.c: 600: offset = start_byte - position;
 17790                           
 17791                           ; BSR set to: 0
 17792  002822  C089  F03A         	movff	fat_read_from_file@position,??_fat_read_from_file
 17793  002826  C08A  F03B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 17794  00282A  1E3A               	comf	??_fat_read_from_file,f,c
 17795  00282C  1E3B               	comf	??_fat_read_from_file+1,f,c
 17796  00282E  4A3A               	infsnz	??_fat_read_from_file,f,c
 17797  002830  2A3B               	incf	??_fat_read_from_file+1,f,c
 17798  002832  5030               	movf	fat_read_from_file@start_byte,w,c
 17799  002834  243A               	addwf	??_fat_read_from_file,w,c
 17800  002836  0100               	movlb	0	; () banked
 17801  002838  6F85               	movwf	fat_read_from_file@offset& (0+255),b
 17802  00283A  5031               	movf	fat_read_from_file@start_byte+1,w,c
 17803  00283C  203B               	addwfc	??_fat_read_from_file+1,w,c
 17804  00283E  0100               	movlb	0	; () banked
 17805  002840  6F86               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 17806                           
 17807                           ; BSR set to: 0
 17808                           ;fat16.c: 603: position = 0;
 17809  002842  0E00               	movlw	0
 17810  002844  0100               	movlb	0	; () banked
 17811  002846  6F89               	movwf	fat_read_from_file@position& (0+255),b
 17812  002848  0E00               	movlw	0
 17813  00284A  6F8A               	movwf	(fat_read_from_file@position+1)& (0+255),b
 17814  00284C  0E00               	movlw	0
 17815  00284E  6F8B               	movwf	(fat_read_from_file@position+2)& (0+255),b
 17816  002850  0E00               	movlw	0
 17817  002852  6F8C               	movwf	(fat_read_from_file@position+3)& (0+255),b
 17818                           
 17819                           ;fat16.c: 604: while(position < length)
 17820  002854  D09B               	goto	l12387
 17821  002856                     l12367:
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;fat16.c: 605: {
 17825                           ;fat16.c: 607: if(offset==512)
 17826  002856  0E02               	movlw	2
 17827  002858  0100               	movlb	0	; () banked
 17828  00285A  1986               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 17829  00285C  0100               	movlb	0	; () banked
 17830  00285E  1185               	iorwf	fat_read_from_file@offset& (0+255),w,b
 17831  002860  A4D8               	btfss	status,2,c
 17832  002862  D00F               	goto	l12373
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;fat16.c: 608: {
 17836                           ;fat16.c: 610: cluster = _read_fat(cluster);
 17837  002864  C083  F028         	movff	fat_read_from_file@cluster,__read_fat@cluster
 17838  002868  C084  F029         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 17839  00286C  ECF0  F036         	call	__read_fat	;wreg free
 17840  002870  C028  F083         	movff	?__read_fat,fat_read_from_file@cluster
 17841  002874  C029  F084         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 17842                           
 17843                           ;fat16.c: 611: offset = 0;
 17844  002878  0E00               	movlw	0
 17845  00287A  0100               	movlb	0	; () banked
 17846  00287C  6F86               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 17847  00287E  0E00               	movlw	0
 17848  002880  6F85               	movwf	fat_read_from_file@offset& (0+255),b
 17849  002882                     l12373:
 17850                           
 17851                           ; BSR set to: 0
 17852                           ;fat16.c: 612: }
 17853                           ;fat16.c: 615: sector = _sector_from_cluster(cluster);
 17854  002882  C083  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 17855  002886  C084  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 17856  00288A  EC2E  F03C         	call	__sector_from_cluster	;wreg free
 17857  00288E  C001  F060         	movff	?__sector_from_cluster,fat_read_from_file@sector
 17858  002892  C002  F061         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 17859                           
 17860                           ;fat16.c: 618: read_length = 512 - offset;
 17861  002896  C085  F03A         	movff	fat_read_from_file@offset,??_fat_read_from_file
 17862  00289A  C086  F03B         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 17863  00289E  1E3A               	comf	??_fat_read_from_file,f,c
 17864  0028A0  1E3B               	comf	??_fat_read_from_file+1,f,c
 17865  0028A2  4A3A               	infsnz	??_fat_read_from_file,f,c
 17866  0028A4  2A3B               	incf	??_fat_read_from_file+1,f,c
 17867  0028A6  0E00               	movlw	0
 17868  0028A8  243A               	addwf	??_fat_read_from_file,w,c
 17869  0028AA  0100               	movlb	0	; () banked
 17870  0028AC  6F87               	movwf	fat_read_from_file@read_length& (0+255),b
 17871  0028AE  0E02               	movlw	2
 17872  0028B0  203B               	addwfc	??_fat_read_from_file+1,w,c
 17873  0028B2  0100               	movlb	0	; () banked
 17874  0028B4  6F88               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;fat16.c: 619: if(read_length > (length-position))
 17878  0028B6  0100               	movlb	0	; () banked
 17879  0028B8  5187               	movf	fat_read_from_file@read_length& (0+255),w,b
 17880  0028BA  6E3A               	movwf	??_fat_read_from_file& (0+255),c
 17881  0028BC  0100               	movlb	0	; () banked
 17882  0028BE  5188               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 17883  0028C0  6E3B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 17884  0028C2  6A3C               	clrf	(??_fat_read_from_file+2)& (0+255),c
 17885  0028C4  6A3D               	clrf	(??_fat_read_from_file+3)& (0+255),c
 17886  0028C6  C089  F03E         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 17887  0028CA  C08A  F03F         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 17888  0028CE  C08B  F040         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 17889  0028D2  C08C  F041         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 17890  0028D6  1E3E               	comf	??_fat_read_from_file+4,f,c
 17891  0028D8  1E3F               	comf	??_fat_read_from_file+5,f,c
 17892  0028DA  1E40               	comf	??_fat_read_from_file+6,f,c
 17893  0028DC  1E41               	comf	??_fat_read_from_file+7,f,c
 17894  0028DE  2A3E               	incf	??_fat_read_from_file+4,f,c
 17895  0028E0  0E00               	movlw	0
 17896  0028E2  223F               	addwfc	??_fat_read_from_file+5,f,c
 17897  0028E4  2240               	addwfc	??_fat_read_from_file+6,f,c
 17898  0028E6  2241               	addwfc	??_fat_read_from_file+7,f,c
 17899  0028E8  5034               	movf	fat_read_from_file@length,w,c
 17900  0028EA  243E               	addwf	??_fat_read_from_file+4,w,c
 17901  0028EC  6E42               	movwf	(??_fat_read_from_file+8)& (0+255),c
 17902  0028EE  5035               	movf	fat_read_from_file@length+1,w,c
 17903  0028F0  203F               	addwfc	??_fat_read_from_file+5,w,c
 17904  0028F2  6E43               	movwf	(??_fat_read_from_file+9)& (0+255),c
 17905  0028F4  5036               	movf	fat_read_from_file@length+2,w,c
 17906  0028F6  2040               	addwfc	??_fat_read_from_file+6,w,c
 17907  0028F8  6E44               	movwf	(??_fat_read_from_file+10)& (0+255),c
 17908  0028FA  5037               	movf	fat_read_from_file@length+3,w,c
 17909  0028FC  2041               	addwfc	??_fat_read_from_file+7,w,c
 17910  0028FE  6E45               	movwf	(??_fat_read_from_file+11)& (0+255),c
 17911  002900  503A               	movf	??_fat_read_from_file,w,c
 17912  002902  5C42               	subwf	??_fat_read_from_file+8,w,c
 17913  002904  503B               	movf	??_fat_read_from_file+1,w,c
 17914  002906  5843               	subwfb	??_fat_read_from_file+9,w,c
 17915  002908  503C               	movf	??_fat_read_from_file+2,w,c
 17916  00290A  5844               	subwfb	??_fat_read_from_file+10,w,c
 17917  00290C  503D               	movf	??_fat_read_from_file+3,w,c
 17918  00290E  5845               	subwfb	??_fat_read_from_file+11,w,c
 17919  002910  B0D8               	btfsc	status,0,c
 17920  002912  D010               	goto	l12381
 17921                           
 17922                           ; BSR set to: 0
 17923                           ;fat16.c: 620: {
 17924                           ;fat16.c: 622: read_length = length - position;
 17925  002914  C089  F03A         	movff	fat_read_from_file@position,??_fat_read_from_file
 17926  002918  C08A  F03B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 17927  00291C  1E3A               	comf	??_fat_read_from_file,f,c
 17928  00291E  1E3B               	comf	??_fat_read_from_file+1,f,c
 17929  002920  4A3A               	infsnz	??_fat_read_from_file,f,c
 17930  002922  2A3B               	incf	??_fat_read_from_file+1,f,c
 17931  002924  5034               	movf	fat_read_from_file@length,w,c
 17932  002926  243A               	addwf	??_fat_read_from_file,w,c
 17933  002928  0100               	movlb	0	; () banked
 17934  00292A  6F87               	movwf	fat_read_from_file@read_length& (0+255),b
 17935  00292C  5035               	movf	fat_read_from_file@length+1,w,c
 17936  00292E  203B               	addwfc	??_fat_read_from_file+1,w,c
 17937  002930  0100               	movlb	0	; () banked
 17938  002932  6F88               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 17939  002934                     l12381:
 17940                           
 17941                           ; BSR set to: 0
 17942                           ;fat16.c: 623: }
 17943                           ;fat16.c: 626: flash_partial_read(sector, offset, read_length, &data[position]);
 17944  002934  C060  F014         	movff	fat_read_from_file@sector,flash_partial_read@page
 17945  002938  C061  F015         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 17946  00293C  C085  F016         	movff	fat_read_from_file@offset,flash_partial_read@start
 17947  002940  C086  F017         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 17948  002944  C087  F018         	movff	fat_read_from_file@read_length,flash_partial_read@length
 17949  002948  C088  F019         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 17950  00294C  0100               	movlb	0	; () banked
 17951  00294E  5189               	movf	fat_read_from_file@position& (0+255),w,b
 17952  002950  2438               	addwf	fat_read_from_file@data,w,c
 17953  002952  6E1A               	movwf	flash_partial_read@data,c
 17954  002954  0100               	movlb	0	; () banked
 17955  002956  518A               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 17956  002958  2039               	addwfc	fat_read_from_file@data+1,w,c
 17957  00295A  6E1B               	movwf	flash_partial_read@data+1,c
 17958  00295C  EC97  F031         	call	_flash_partial_read	;wreg free
 17959                           
 17960                           ;fat16.c: 629: position += read_length;
 17961  002960  0100               	movlb	0	; () banked
 17962  002962  5187               	movf	fat_read_from_file@read_length& (0+255),w,b
 17963  002964  0100               	movlb	0	; () banked
 17964  002966  2789               	addwf	fat_read_from_file@position& (0+255),f,b
 17965  002968  0100               	movlb	0	; () banked
 17966  00296A  5188               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 17967  00296C  0100               	movlb	0	; () banked
 17968  00296E  238A               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 17969  002970  0E00               	movlw	0
 17970  002972  0100               	movlb	0	; () banked
 17971  002974  238B               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 17972  002976  0E00               	movlw	0
 17973  002978  0100               	movlb	0	; () banked
 17974  00297A  238C               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 17975                           
 17976                           ; BSR set to: 0
 17977                           ;fat16.c: 630: offset += read_length;
 17978  00297C  0100               	movlb	0	; () banked
 17979  00297E  5187               	movf	fat_read_from_file@read_length& (0+255),w,b
 17980  002980  0100               	movlb	0	; () banked
 17981  002982  2785               	addwf	fat_read_from_file@offset& (0+255),f,b
 17982  002984  0100               	movlb	0	; () banked
 17983  002986  5188               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 17984  002988  0100               	movlb	0	; () banked
 17985  00298A  2386               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 17986  00298C                     l12387:
 17987                           
 17988                           ; BSR set to: 0
 17989  00298C  5034               	movf	fat_read_from_file@length,w,c
 17990  00298E  0100               	movlb	0	; () banked
 17991  002990  5D89               	subwf	fat_read_from_file@position& (0+255),w,b
 17992  002992  5035               	movf	fat_read_from_file@length+1,w,c
 17993  002994  0100               	movlb	0	; () banked
 17994  002996  598A               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 17995  002998  5036               	movf	fat_read_from_file@length+2,w,c
 17996  00299A  0100               	movlb	0	; () banked
 17997  00299C  598B               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 17998  00299E  5037               	movf	fat_read_from_file@length+3,w,c
 17999  0029A0  0100               	movlb	0	; () banked
 18000  0029A2  598C               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 18001  0029A4  B0D8               	btfsc	status,0,c
 18002  0029A6  0012               	return	
 18003  0029A8  D756               	goto	l12367
 18004  0029AA                     __end_of_fat_read_from_file:
 18005                           	opt stack 0
 18006                           tblptru	equ	0xFF8
 18007                           tblptrh	equ	0xFF7
 18008                           tblptrl	equ	0xFF6
 18009                           tablat	equ	0xFF5
 18010                           prodh	equ	0xFF4
 18011                           prodl	equ	0xFF3
 18012                           intcon	equ	0xFF2
 18013                           intcon2	equ	0xFF1
 18014                           intcon3	equ	0xFF0
 18015                           postinc0	equ	0xFEE
 18016                           wreg	equ	0xFE8
 18017                           indf1	equ	0xFE7
 18018                           postdec1	equ	0xFE5
 18019                           plusw1	equ	0xFE3
 18020                           fsr1h	equ	0xFE2
 18021                           fsr1l	equ	0xFE1
 18022                           indf2	equ	0xFDF
 18023                           postinc2	equ	0xFDE
 18024                           postdec2	equ	0xFDD
 18025                           plusw2	equ	0xFDB
 18026                           fsr2h	equ	0xFDA
 18027                           fsr2l	equ	0xFD9
 18028                           status	equ	0xFD8
 18029                           
 18030 ;; *************** function __sector_from_cluster *****************
 18031 ;; Defined at:
 18032 ;;		line 455 in file "fat16.c"
 18033 ;; Parameters:    Size  Location     Type
 18034 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;		None
 18037 ;; Return value:  Size  Location     Type
 18038 ;;                  2    0[COMRAM] unsigned int 
 18039 ;; Registers used:
 18040 ;;		wreg, status,2, status,0
 18041 ;; Tracked objects:
 18042 ;;		On entry : 0/0
 18043 ;;		On exit  : 0/0
 18044 ;;		Unchanged: 0/0
 18045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18050 ;;Total ram usage:        2 bytes
 18051 ;; Hardware stack levels used:    1
 18052 ;; This function calls:
 18053 ;;		Nothing
 18054 ;; This function is called by:
 18055 ;;		_fat_read_from_file
 18056 ;;		_fat_append_to_file
 18057 ;; This function uses a non-reentrant model
 18058 ;;
 18059                           
 18060                           	psect	text81
 18061  00785C                     __ptext81:
 18062                           	opt stack 0
 18063  00785C                     __sector_from_cluster:
 18064                           	opt stack 27
 18065                           
 18066                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;incstack = 0
 18070  00785C  0E14               	movlw	20
 18071  00785E  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 18072  007860  6E01               	movwf	?__sector_from_cluster,c
 18073  007862  0E00               	movlw	0
 18074  007864  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 18075  007866  6E02               	movwf	?__sector_from_cluster+1,c
 18076  007868  0012               	return	
 18077  00786A                     __end_of__sector_from_cluster:
 18078                           	opt stack 0
 18079                           tblptru	equ	0xFF8
 18080                           tblptrh	equ	0xFF7
 18081                           tblptrl	equ	0xFF6
 18082                           tablat	equ	0xFF5
 18083                           prodh	equ	0xFF4
 18084                           prodl	equ	0xFF3
 18085                           intcon	equ	0xFF2
 18086                           intcon2	equ	0xFF1
 18087                           intcon3	equ	0xFF0
 18088                           postinc0	equ	0xFEE
 18089                           wreg	equ	0xFE8
 18090                           indf1	equ	0xFE7
 18091                           postdec1	equ	0xFE5
 18092                           plusw1	equ	0xFE3
 18093                           fsr1h	equ	0xFE2
 18094                           fsr1l	equ	0xFE1
 18095                           indf2	equ	0xFDF
 18096                           postinc2	equ	0xFDE
 18097                           postdec2	equ	0xFDD
 18098                           plusw2	equ	0xFDB
 18099                           fsr2h	equ	0xFDA
 18100                           fsr2l	equ	0xFD9
 18101                           status	equ	0xFD8
 18102                           
 18103 ;; *************** function __read_root *****************
 18104 ;; Defined at:
 18105 ;;		line 194 in file "fat16.c"
 18106 ;; Parameters:    Size  Location     Type
 18107 ;;  slot            1    wreg     unsigned char 
 18108 ;;  data            2   39[COMRAM] PTR struct .
 18109 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 18110 ;; Auto vars:     Size  Location     Type
 18111 ;;  slot            1   46[COMRAM] unsigned char 
 18112 ;;  offset          2   44[COMRAM] unsigned int 
 18113 ;;  root_sector     2   42[COMRAM] unsigned int 
 18114 ;; Return value:  Size  Location     Type
 18115 ;;                  1    wreg      void 
 18116 ;; Registers used:
 18117 ;;		wreg, status,2, status,0, cstack
 18118 ;; Tracked objects:
 18119 ;;		On entry : 0/0
 18120 ;;		On exit  : 0/0
 18121 ;;		Unchanged: 0/0
 18122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18124 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18127 ;;Total ram usage:        8 bytes
 18128 ;; Hardware stack levels used:    1
 18129 ;; Hardware stack levels required when called:    4
 18130 ;; This function calls:
 18131 ;;		_flash_partial_read
 18132 ;; This function is called by:
 18133 ;;		_fat_read_from_file
 18134 ;;		_fat_append_to_file
 18135 ;;		_fat_rename_file
 18136 ;; This function uses a non-reentrant model
 18137 ;;
 18138                           
 18139                           	psect	text82
 18140  00681C                     __ptext82:
 18141                           	opt stack 0
 18142  00681C                     __read_root:
 18143                           	opt stack 23
 18144                           
 18145                           ;incstack = 0
 18146                           ;__read_root@slot stored from wreg
 18147  00681C  6E2F               	movwf	__read_root@slot,c
 18148                           
 18149                           ;fat16.c: 196: uint16_t root_sector;
 18150                           ;fat16.c: 197: uint16_t offset;
 18151                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 18152  00681E  C02F  F02A         	movff	__read_root@slot,??__read_root
 18153  006822  3A2A               	swapf	??__read_root,f,c
 18154  006824  0E0F               	movlw	15
 18155  006826  162A               	andwf	??__read_root,f,c
 18156  006828  0E12               	movlw	18
 18157  00682A  242A               	addwf	??__read_root,w,c
 18158  00682C  6E2B               	movwf	__read_root@root_sector,c
 18159  00682E  6A2C               	clrf	__read_root@root_sector+1,c
 18160  006830  0E00               	movlw	0
 18161  006832  222C               	addwfc	__read_root@root_sector+1,f,c
 18162                           
 18163                           ;fat16.c: 199: offset = (slot & 0b1111);
 18164  006834  C02F  F02A         	movff	__read_root@slot,??__read_root
 18165  006838  0E0F               	movlw	15
 18166  00683A  162A               	andwf	??__read_root,f,c
 18167  00683C  502A               	movf	??__read_root,w,c
 18168  00683E  6E2D               	movwf	__read_root@offset,c
 18169  006840  6A2E               	clrf	__read_root@offset+1,c
 18170                           
 18171                           ;fat16.c: 200: offset <<= 5;
 18172  006842  0E05               	movlw	5
 18173  006844                     u8485:
 18174  006844  90D8               	bcf	status,0,c
 18175  006846  362D               	rlcf	__read_root@offset,f,c
 18176  006848  362E               	rlcf	__read_root@offset+1,f,c
 18177  00684A  2EE8               	decfsz	wreg,f,c
 18178  00684C  D7FB               	goto	u8485
 18179                           
 18180                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 18181  00684E  C02B  F014         	movff	__read_root@root_sector,flash_partial_read@page
 18182  006852  C02C  F015         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 18183  006856  C02D  F016         	movff	__read_root@offset,flash_partial_read@start
 18184  00685A  C02E  F017         	movff	__read_root@offset+1,flash_partial_read@start+1
 18185  00685E  0E00               	movlw	0
 18186  006860  6E19               	movwf	flash_partial_read@length+1,c
 18187  006862  0E20               	movlw	32
 18188  006864  6E18               	movwf	flash_partial_read@length,c
 18189  006866  C028  F01A         	movff	__read_root@data,flash_partial_read@data
 18190  00686A  C029  F01B         	movff	__read_root@data+1,flash_partial_read@data+1
 18191  00686E  EC97  F031         	call	_flash_partial_read	;wreg free
 18192  006872  0012               	return		;funcret
 18193  006874                     __end_of__read_root:
 18194                           	opt stack 0
 18195                           tblptru	equ	0xFF8
 18196                           tblptrh	equ	0xFF7
 18197                           tblptrl	equ	0xFF6
 18198                           tablat	equ	0xFF5
 18199                           prodh	equ	0xFF4
 18200                           prodl	equ	0xFF3
 18201                           intcon	equ	0xFF2
 18202                           intcon2	equ	0xFF1
 18203                           intcon3	equ	0xFF0
 18204                           postinc0	equ	0xFEE
 18205                           wreg	equ	0xFE8
 18206                           indf1	equ	0xFE7
 18207                           postdec1	equ	0xFE5
 18208                           plusw1	equ	0xFE3
 18209                           fsr1h	equ	0xFE2
 18210                           fsr1l	equ	0xFE1
 18211                           indf2	equ	0xFDF
 18212                           postinc2	equ	0xFDE
 18213                           postdec2	equ	0xFDD
 18214                           plusw2	equ	0xFDB
 18215                           fsr2h	equ	0xFDA
 18216                           fsr2l	equ	0xFD9
 18217                           status	equ	0xFD8
 18218                           
 18219 ;; *************** function __read_fat *****************
 18220 ;; Defined at:
 18221 ;;		line 171 in file "fat16.c"
 18222 ;; Parameters:    Size  Location     Type
 18223 ;;  cluster         2   39[COMRAM] unsigned int 
 18224 ;; Auto vars:     Size  Location     Type
 18225 ;;  value           2   45[COMRAM] unsigned int 
 18226 ;;  offset          2   43[COMRAM] unsigned int 
 18227 ;;  fat_sector      2   41[COMRAM] unsigned int 
 18228 ;; Return value:  Size  Location     Type
 18229 ;;                  2   39[COMRAM] unsigned int 
 18230 ;; Registers used:
 18231 ;;		wreg, status,2, status,0, cstack
 18232 ;; Tracked objects:
 18233 ;;		On entry : 0/0
 18234 ;;		On exit  : 0/0
 18235 ;;		Unchanged: 0/0
 18236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18238 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18240 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18241 ;;Total ram usage:        8 bytes
 18242 ;; Hardware stack levels used:    1
 18243 ;; Hardware stack levels required when called:    4
 18244 ;; This function calls:
 18245 ;;		_flash_partial_read
 18246 ;; This function is called by:
 18247 ;;		_fat_read_from_file
 18248 ;;		_fat_delete_file
 18249 ;;		_fat_append_to_file
 18250 ;; This function uses a non-reentrant model
 18251 ;;
 18252                           
 18253                           	psect	text83
 18254  006DE0                     __ptext83:
 18255                           	opt stack 0
 18256  006DE0                     __read_fat:
 18257                           	opt stack 23
 18258                           
 18259                           ;fat16.c: 173: uint16_t fat_sector;
 18260                           ;fat16.c: 174: uint16_t offset;
 18261                           ;fat16.c: 175: uint16_t value;
 18262                           ;fat16.c: 176: fat_sector = cluster>>8;
 18263                           
 18264                           ;incstack = 0
 18265  006DE0  5029               	movf	__read_fat@cluster+1,w,c
 18266  006DE2  6E2A               	movwf	__read_fat@fat_sector,c
 18267  006DE4  6A2B               	clrf	__read_fat@fat_sector+1,c
 18268                           
 18269                           ;fat16.c: 177: fat_sector += 2;
 18270  006DE6  0E02               	movlw	2
 18271  006DE8  262A               	addwf	__read_fat@fat_sector,f,c
 18272  006DEA  0E00               	movlw	0
 18273  006DEC  222B               	addwfc	__read_fat@fat_sector+1,f,c
 18274                           
 18275                           ;fat16.c: 178: offset = cluster & 0xFF;
 18276  006DEE  5028               	movf	__read_fat@cluster,w,c
 18277  006DF0  6E2C               	movwf	__read_fat@offset,c
 18278  006DF2  6A2D               	clrf	__read_fat@offset+1,c
 18279                           
 18280                           ;fat16.c: 179: offset <<= 1;
 18281  006DF4  90D8               	bcf	status,0,c
 18282  006DF6  362C               	rlcf	__read_fat@offset,f,c
 18283  006DF8  362D               	rlcf	__read_fat@offset+1,f,c
 18284                           
 18285                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 18286  006DFA  C02A  F014         	movff	__read_fat@fat_sector,flash_partial_read@page
 18287  006DFE  C02B  F015         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 18288  006E02  C02C  F016         	movff	__read_fat@offset,flash_partial_read@start
 18289  006E06  C02D  F017         	movff	__read_fat@offset+1,flash_partial_read@start+1
 18290  006E0A  0E00               	movlw	0
 18291  006E0C  6E19               	movwf	flash_partial_read@length+1,c
 18292  006E0E  0E02               	movlw	2
 18293  006E10  6E18               	movwf	flash_partial_read@length,c
 18294  006E12  0E2E               	movlw	low __read_fat@value
 18295  006E14  6E1A               	movwf	flash_partial_read@data,c
 18296  006E16  0E00               	movlw	high __read_fat@value
 18297  006E18  6E1B               	movwf	flash_partial_read@data+1,c
 18298  006E1A  EC97  F031         	call	_flash_partial_read	;wreg free
 18299                           
 18300                           ;fat16.c: 181: return value;
 18301  006E1E  C02E  F028         	movff	__read_fat@value,?__read_fat
 18302  006E22  C02F  F029         	movff	__read_fat@value+1,?__read_fat+1
 18303  006E26  0012               	return	
 18304  006E28                     __end_of__read_fat:
 18305                           	opt stack 0
 18306                           tblptru	equ	0xFF8
 18307                           tblptrh	equ	0xFF7
 18308                           tblptrl	equ	0xFF6
 18309                           tablat	equ	0xFF5
 18310                           prodh	equ	0xFF4
 18311                           prodl	equ	0xFF3
 18312                           intcon	equ	0xFF2
 18313                           intcon2	equ	0xFF1
 18314                           intcon3	equ	0xFF0
 18315                           postinc0	equ	0xFEE
 18316                           wreg	equ	0xFE8
 18317                           indf1	equ	0xFE7
 18318                           postdec1	equ	0xFE5
 18319                           plusw1	equ	0xFE3
 18320                           fsr1h	equ	0xFE2
 18321                           fsr1l	equ	0xFE1
 18322                           indf2	equ	0xFDF
 18323                           postinc2	equ	0xFDE
 18324                           postdec2	equ	0xFDD
 18325                           plusw2	equ	0xFDB
 18326                           fsr2h	equ	0xFDA
 18327                           fsr2l	equ	0xFD9
 18328                           status	equ	0xFD8
 18329                           
 18330 ;; *************** function __bootloader_check_address *****************
 18331 ;; Defined at:
 18332 ;;		line 91 in file "bootloader.c"
 18333 ;; Parameters:    Size  Location     Type
 18334 ;;  address         4    0[COMRAM] unsigned long 
 18335 ;;  dataLength      1    4[COMRAM] unsigned char 
 18336 ;; Auto vars:     Size  Location     Type
 18337 ;;  cntr            1   11[COMRAM] unsigned char 
 18338 ;;  byte_status     1   10[COMRAM] enum E8339
 18339 ;;  worst_case      1    9[COMRAM] enum E8339
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  1    wreg      enum E8339
 18342 ;; Registers used:
 18343 ;;		wreg, status,2, status,0
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 0/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18349 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18350 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18352 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18353 ;;Total ram usage:       12 bytes
 18354 ;; Hardware stack levels used:    1
 18355 ;; This function calls:
 18356 ;;		Nothing
 18357 ;; This function is called by:
 18358 ;;		__bootloader_verify_file
 18359 ;;		__bootloader_program
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text84
 18364  004E3E                     __ptext84:
 18365                           	opt stack 0
 18366  004E3E                     __bootloader_check_address:
 18367                           	opt stack 28
 18368                           
 18369                           ;bootloader.c: 93: addressCheckResult_t byte_status;
 18370                           ;bootloader.c: 94: addressCheckResult_t worst_case;
 18371                           ;bootloader.c: 95: uint8_t cntr;
 18372                           ;bootloader.c: 97: worst_case = ADDRESS_CHECK_RESULT_OK;
 18373                           
 18374                           ;incstack = 0
 18375  004E3E  0E00               	movlw	0
 18376  004E40  6E0A               	movwf	__bootloader_check_address@worst_case,c
 18377                           
 18378                           ;bootloader.c: 100: for(cntr=0; cntr<dataLength; ++cntr)
 18379  004E42  0E00               	movlw	0
 18380  004E44  6E0C               	movwf	__bootloader_check_address@cntr,c
 18381  004E46  D062               	goto	l12653
 18382  004E48                     l12629:
 18383                           
 18384                           ;bootloader.c: 101: {
 18385                           ;bootloader.c: 103: if(((address+cntr)>=0x09000) && ((address+cntr)<=0x1FFF7))
 18386  004E48  500C               	movf	__bootloader_check_address@cntr,w,c
 18387  004E4A  2401               	addwf	__bootloader_check_address@address,w,c
 18388  004E4C  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18389  004E4E  0E00               	movlw	0
 18390  004E50  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18391  004E52  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18392  004E54  0E00               	movlw	0
 18393  004E56  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18394  004E58  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18395  004E5A  0E00               	movlw	0
 18396  004E5C  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18397  004E5E  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18398  004E60  5009               	movf	??__bootloader_check_address+3,w,c
 18399  004E62  1008               	iorwf	??__bootloader_check_address+2,w,c
 18400  004E64  E104               	bnz	u9480
 18401  004E66  0E90               	movlw	144
 18402  004E68  5C07               	subwf	??__bootloader_check_address+1,w,c
 18403  004E6A  A0D8               	btfss	status,0,c
 18404  004E6C  D018               	goto	l12635
 18405  004E6E                     u9480:
 18406  004E6E  500C               	movf	__bootloader_check_address@cntr,w,c
 18407  004E70  2401               	addwf	__bootloader_check_address@address,w,c
 18408  004E72  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18409  004E74  0E00               	movlw	0
 18410  004E76  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18411  004E78  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18412  004E7A  0E00               	movlw	0
 18413  004E7C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18414  004E7E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18415  004E80  0E00               	movlw	0
 18416  004E82  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18417  004E84  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18418  004E86  5009               	movf	??__bootloader_check_address+3,w,c
 18419  004E88  E10A               	bnz	l12635
 18420  004E8A  0EF8               	movlw	248
 18421  004E8C  5C06               	subwf	??__bootloader_check_address,w,c
 18422  004E8E  0EFF               	movlw	255
 18423  004E90  5807               	subwfb	??__bootloader_check_address+1,w,c
 18424  004E92  0E01               	movlw	1
 18425  004E94  5808               	subwfb	??__bootloader_check_address+2,w,c
 18426  004E96  B0D8               	btfsc	status,0,c
 18427  004E98  D002               	goto	l12635
 18428                           
 18429                           ;bootloader.c: 104: {
 18430                           ;bootloader.c: 105: byte_status = ADDRESS_CHECK_RESULT_OK;
 18431  004E9A  0E00               	movlw	0
 18432  004E9C  D029               	goto	L4
 18433  004E9E                     l12635:
 18434                           
 18435                           ;bootloader.c: 109: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 18436  004E9E  500C               	movf	__bootloader_check_address@cntr,w,c
 18437  004EA0  2401               	addwf	__bootloader_check_address@address,w,c
 18438  004EA2  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18439  004EA4  0E00               	movlw	0
 18440  004EA6  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18441  004EA8  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18442  004EAA  0E00               	movlw	0
 18443  004EAC  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18444  004EAE  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18445  004EB0  0E00               	movlw	0
 18446  004EB2  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18447  004EB4  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18448  004EB6  5009               	movf	??__bootloader_check_address+3,w,c
 18449  004EB8  E108               	bnz	u9500
 18450  004EBA  0EF8               	movlw	248
 18451  004EBC  5C06               	subwf	??__bootloader_check_address,w,c
 18452  004EBE  0EFF               	movlw	255
 18453  004EC0  5807               	subwfb	??__bootloader_check_address+1,w,c
 18454  004EC2  0E01               	movlw	1
 18455  004EC4  5808               	subwfb	??__bootloader_check_address+2,w,c
 18456  004EC6  A0D8               	btfss	status,0,c
 18457  004EC8  D015               	goto	l2642
 18458  004ECA                     u9500:
 18459  004ECA  500C               	movf	__bootloader_check_address@cntr,w,c
 18460  004ECC  2401               	addwf	__bootloader_check_address@address,w,c
 18461  004ECE  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18462  004ED0  0E00               	movlw	0
 18463  004ED2  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18464  004ED4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18465  004ED6  0E00               	movlw	0
 18466  004ED8  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18467  004EDA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18468  004EDC  0E00               	movlw	0
 18469  004EDE  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18470  004EE0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18471  004EE2  5009               	movf	??__bootloader_check_address+3,w,c
 18472  004EE4  E107               	bnz	l2642
 18473  004EE6  0E02               	movlw	2
 18474  004EE8  5C08               	subwf	??__bootloader_check_address+2,w,c
 18475  004EEA  B0D8               	btfsc	status,0,c
 18476  004EEC  D003               	goto	l2642
 18477                           
 18478                           ;bootloader.c: 110: {
 18479                           ;bootloader.c: 111: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATION_BITS;
 18480  004EEE  0E01               	movlw	1
 18481  004EF0                     L4:
 18482  004EF0  6E0B               	movwf	__bootloader_check_address@byte_status,c
 18483                           
 18484                           ;bootloader.c: 112: }
 18485  004EF2  D001               	goto	l12641
 18486  004EF4                     l2642:
 18487                           
 18488                           ;bootloader.c: 113: else
 18489                           ;bootloader.c: 114: {
 18490                           ;bootloader.c: 115: byte_status = ADDRESS_CHECK_RESULT_ERROR;
 18491  004EF4  680B               	setf	__bootloader_check_address@byte_status,c
 18492  004EF6                     l12641:
 18493                           
 18494                           ;bootloader.c: 116: }
 18495                           ;bootloader.c: 119: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 18496  004EF6  280B               	incf	__bootloader_check_address@byte_status,w,c
 18497  004EF8  A4D8               	btfss	status,2,c
 18498  004EFA  D002               	goto	l12647
 18499                           
 18500                           ;bootloader.c: 120: {
 18501                           ;bootloader.c: 121: return ADDRESS_CHECK_RESULT_ERROR;
 18502  004EFC  0EFF               	movlw	255
 18503  004EFE  0012               	return	
 18504  004F00                     l12647:
 18505                           
 18506                           ;bootloader.c: 122: }
 18507                           ;bootloader.c: 125: if(byte_status > worst_case)
 18508  004F00  500B               	movf	__bootloader_check_address@byte_status,w,c
 18509  004F02  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 18510  004F04  A0D8               	btfss	status,0,c
 18511                           
 18512                           ;bootloader.c: 126: {
 18513                           ;bootloader.c: 127: worst_case = byte_status;
 18514  004F06  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 18515  004F0A  2A0C               	incf	__bootloader_check_address@cntr,f,c
 18516  004F0C                     l12653:
 18517  004F0C  5005               	movf	__bootloader_check_address@dataLength,w,c
 18518  004F0E  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 18519  004F10  A0D8               	btfss	status,0,c
 18520  004F12  D79A               	goto	l12629
 18521                           
 18522                           ;bootloader.c: 128: }
 18523                           ;bootloader.c: 129: }
 18524                           ;bootloader.c: 131: return worst_case;
 18525  004F14  500A               	movf	__bootloader_check_address@worst_case,w,c
 18526  004F16  0012               	return	
 18527  004F18                     __end_of__bootloader_check_address:
 18528                           	opt stack 0
 18529                           tblptru	equ	0xFF8
 18530                           tblptrh	equ	0xFF7
 18531                           tblptrl	equ	0xFF6
 18532                           tablat	equ	0xFF5
 18533                           prodh	equ	0xFF4
 18534                           prodl	equ	0xFF3
 18535                           intcon	equ	0xFF2
 18536                           intcon2	equ	0xFF1
 18537                           intcon3	equ	0xFF0
 18538                           postinc0	equ	0xFEE
 18539                           wreg	equ	0xFE8
 18540                           indf1	equ	0xFE7
 18541                           postdec1	equ	0xFE5
 18542                           plusw1	equ	0xFE3
 18543                           fsr1h	equ	0xFE2
 18544                           fsr1l	equ	0xFE1
 18545                           indf2	equ	0xFDF
 18546                           postinc2	equ	0xFDE
 18547                           postdec2	equ	0xFDD
 18548                           plusw2	equ	0xFDB
 18549                           fsr2h	equ	0xFDA
 18550                           fsr2l	equ	0xFD9
 18551                           status	equ	0xFD8
 18552                           
 18553 ;; *************** function __bootloader_find_file *****************
 18554 ;; Defined at:
 18555 ;;		line 134 in file "bootloader.c"
 18556 ;; Parameters:    Size  Location     Type
 18557 ;;		None
 18558 ;; Auto vars:     Size  Location     Type
 18559 ;;		None
 18560 ;; Return value:  Size  Location     Type
 18561 ;;                  1    wreg      void 
 18562 ;; Registers used:
 18563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18564 ;; Tracked objects:
 18565 ;;		On entry : 0/0
 18566 ;;		On exit  : 0/0
 18567 ;;		Unchanged: 0/0
 18568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18573 ;;Total ram usage:        0 bytes
 18574 ;; Hardware stack levels used:    1
 18575 ;; Hardware stack levels required when called:    5
 18576 ;; This function calls:
 18577 ;;		_fat_find_file
 18578 ;;		_fat_get_file_size
 18579 ;; This function is called by:
 18580 ;;		_bootloader_run
 18581 ;; This function uses a non-reentrant model
 18582 ;;
 18583                           
 18584                           	psect	text85
 18585  0056D0                     __ptext85:
 18586                           	opt stack 0
 18587  0056D0                     __bootloader_find_file:
 18588                           	opt stack 24
 18589                           
 18590                           ;bootloader.c: 137: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 18591                           
 18592                           ;incstack = 0
 18593  0056D0  0EB6               	movlw	low _bootloader_filename
 18594  0056D2  6E28               	movwf	fat_find_file@name,c
 18595  0056D4  0E8F               	movlw	high _bootloader_filename
 18596  0056D6  6E29               	movwf	fat_find_file@name+1,c
 18597  0056D8  0EC7               	movlw	low _bootloader_extension
 18598  0056DA  6E2A               	movwf	fat_find_file@extension,c
 18599  0056DC  0E8F               	movlw	high _bootloader_extension
 18600  0056DE  6E2B               	movwf	fat_find_file@extension+1,c
 18601  0056E0  ECF3  F029         	call	_fat_find_file	;wreg free
 18602  0056E4  0100               	movlb	0	; () banked
 18603  0056E6  6FFF               	movwf	_file_number& (0+255),b
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;bootloader.c: 140: if(file_number!=0xFF)
 18607  0056E8  0100               	movlb	0	; () banked
 18608  0056EA  29FF               	incf	_file_number& (0+255),w,b
 18609  0056EC  B4D8               	btfsc	status,2,c
 18610  0056EE  D038               	goto	l13733
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;bootloader.c: 141: {
 18614                           ;bootloader.c: 143: hex_file_size = fat_get_file_size(file_number);
 18615  0056F0  0100               	movlb	0	; () banked
 18616  0056F2  51FF               	movf	_file_number& (0+255),w,b
 18617  0056F4  ECD3  F031         	call	_fat_get_file_size
 18618  0056F8  C028  F143         	movff	?_fat_get_file_size,_hex_file_size
 18619  0056FC  C029  F144         	movff	?_fat_get_file_size+1,_hex_file_size+1
 18620  005700  C02A  F145         	movff	?_fat_get_file_size+2,_hex_file_size+2
 18621  005704  C02B  F146         	movff	?_fat_get_file_size+3,_hex_file_size+3
 18622                           
 18623                           ;bootloader.c: 145: hex_file_entries = 0;
 18624  005708  0E00               	movlw	0
 18625  00570A  0101               	movlb	1	; () banked
 18626  00570C  6F71               	movwf	(_hex_file_entries+1)& (0+255),b
 18627  00570E  0E00               	movlw	0
 18628  005710  6F70               	movwf	_hex_file_entries& (0+255),b
 18629                           
 18630                           ; BSR set to: 1
 18631                           ;bootloader.c: 146: hex_file_offset = 0;
 18632  005712  0E00               	movlw	0
 18633  005714  0101               	movlb	1	; () banked
 18634  005716  6F47               	movwf	_hex_file_offset& (0+255),b
 18635  005718  0E00               	movlw	0
 18636  00571A  6F48               	movwf	(_hex_file_offset+1)& (0+255),b
 18637  00571C  0E00               	movlw	0
 18638  00571E  6F49               	movwf	(_hex_file_offset+2)& (0+255),b
 18639  005720  0E00               	movlw	0
 18640  005722  6F4A               	movwf	(_hex_file_offset+3)& (0+255),b
 18641                           
 18642                           ; BSR set to: 1
 18643                           ;bootloader.c: 147: file_minimum_address = 0xFFFFFFFF;
 18644  005724  0101               	movlb	1	; () banked
 18645  005726  694F               	setf	_file_minimum_address& (0+255),b
 18646  005728  6950               	setf	(_file_minimum_address+1)& (0+255),b
 18647  00572A  6951               	setf	(_file_minimum_address+2)& (0+255),b
 18648  00572C  6952               	setf	(_file_minimum_address+3)& (0+255),b
 18649                           
 18650                           ; BSR set to: 1
 18651                           ;bootloader.c: 148: file_maximum_address = 0x00000000;
 18652  00572E  0E00               	movlw	0
 18653  005730  0101               	movlb	1	; () banked
 18654  005732  6F4B               	movwf	_file_maximum_address& (0+255),b
 18655  005734  0E00               	movlw	0
 18656  005736  6F4C               	movwf	(_file_maximum_address+1)& (0+255),b
 18657  005738  0E00               	movlw	0
 18658  00573A  6F4D               	movwf	(_file_maximum_address+2)& (0+255),b
 18659  00573C  0E00               	movlw	0
 18660  00573E  6F4E               	movwf	(_file_maximum_address+3)& (0+255),b
 18661                           
 18662                           ; BSR set to: 1
 18663                           ;bootloader.c: 149: extended_linear_address = 0x00000000;
 18664  005740  0E00               	movlw	0
 18665  005742  0101               	movlb	1	; () banked
 18666  005744  6F3F               	movwf	_extended_linear_address& (0+255),b
 18667  005746  0E00               	movlw	0
 18668  005748  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 18669  00574A  0E00               	movlw	0
 18670  00574C  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 18671  00574E  0E00               	movlw	0
 18672  005750  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 18673                           
 18674                           ; BSR set to: 1
 18675                           ;bootloader.c: 150: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 18676  005752  0E10               	movlw	16
 18677  005754  0100               	movlb	0	; () banked
 18678  005756  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;bootloader.c: 151: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 18682  005758  0E10               	movlw	16
 18683  00575A  0100               	movlb	0	; () banked
 18684  00575C  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 18685                           
 18686                           ;bootloader.c: 152: }
 18687  00575E  0012               	return	
 18688  005760                     l13733:
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;bootloader.c: 154: else
 18692                           ;bootloader.c: 155: {
 18693                           ;bootloader.c: 157: hex_file_size = 0;
 18694  005760  0E00               	movlw	0
 18695  005762  0101               	movlb	1	; () banked
 18696  005764  6F43               	movwf	_hex_file_size& (0+255),b
 18697  005766  0E00               	movlw	0
 18698  005768  6F44               	movwf	(_hex_file_size+1)& (0+255),b
 18699  00576A  0E00               	movlw	0
 18700  00576C  6F45               	movwf	(_hex_file_size+2)& (0+255),b
 18701  00576E  0E00               	movlw	0
 18702  005770  6F46               	movwf	(_hex_file_size+3)& (0+255),b
 18703                           
 18704                           ;bootloader.c: 159: os.bootloader_mode = BOOTLOADER_MODE_START;
 18705  005772  0E00               	movlw	0
 18706  005774  0100               	movlb	0	; () banked
 18707  005776  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 18708                           
 18709                           ;bootloader.c: 160: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 18710  005778  0E00               	movlw	0
 18711  00577A  0100               	movlb	0	; () banked
 18712  00577C  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 18713  00577E  0012               	return	
 18714  005780                     __end_of__bootloader_find_file:
 18715                           	opt stack 0
 18716                           tblptru	equ	0xFF8
 18717                           tblptrh	equ	0xFF7
 18718                           tblptrl	equ	0xFF6
 18719                           tablat	equ	0xFF5
 18720                           prodh	equ	0xFF4
 18721                           prodl	equ	0xFF3
 18722                           intcon	equ	0xFF2
 18723                           intcon2	equ	0xFF1
 18724                           intcon3	equ	0xFF0
 18725                           postinc0	equ	0xFEE
 18726                           wreg	equ	0xFE8
 18727                           indf1	equ	0xFE7
 18728                           postdec1	equ	0xFE5
 18729                           plusw1	equ	0xFE3
 18730                           fsr1h	equ	0xFE2
 18731                           fsr1l	equ	0xFE1
 18732                           indf2	equ	0xFDF
 18733                           postinc2	equ	0xFDE
 18734                           postdec2	equ	0xFDD
 18735                           plusw2	equ	0xFDB
 18736                           fsr2h	equ	0xFDA
 18737                           fsr2l	equ	0xFD9
 18738                           status	equ	0xFD8
 18739                           
 18740 ;; *************** function _fat_get_file_size *****************
 18741 ;; Defined at:
 18742 ;;		line 306 in file "fat16.c"
 18743 ;; Parameters:    Size  Location     Type
 18744 ;;  file_number     1    wreg     unsigned char 
 18745 ;; Auto vars:     Size  Location     Type
 18746 ;;  file_number     1   52[COMRAM] unsigned char 
 18747 ;;  file_size       4   46[COMRAM] unsigned long 
 18748 ;;  offset          2   50[COMRAM] unsigned int 
 18749 ;;  sector          2   44[COMRAM] unsigned int 
 18750 ;; Return value:  Size  Location     Type
 18751 ;;                  4   39[COMRAM] unsigned long 
 18752 ;; Registers used:
 18753 ;;		wreg, status,2, status,0, cstack
 18754 ;; Tracked objects:
 18755 ;;		On entry : 0/0
 18756 ;;		On exit  : 0/0
 18757 ;;		Unchanged: 0/0
 18758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18760 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18762 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18763 ;;Total ram usage:       14 bytes
 18764 ;; Hardware stack levels used:    1
 18765 ;; Hardware stack levels required when called:    4
 18766 ;; This function calls:
 18767 ;;		_flash_partial_read
 18768 ;; This function is called by:
 18769 ;;		__bootloader_find_file
 18770 ;;		__bootloader_verify_file
 18771 ;; This function uses a non-reentrant model
 18772 ;;
 18773                           
 18774                           	psect	text86
 18775  0063A6                     __ptext86:
 18776                           	opt stack 0
 18777  0063A6                     _fat_get_file_size:
 18778                           	opt stack 24
 18779                           
 18780                           ; BSR set to: 0
 18781                           ;incstack = 0
 18782                           ;fat_get_file_size@file_number stored from wreg
 18783  0063A6  6E35               	movwf	fat_get_file_size@file_number,c
 18784                           
 18785                           ;fat16.c: 308: uint16_t sector;
 18786                           ;fat16.c: 309: uint16_t offset;
 18787                           ;fat16.c: 310: uint32_t file_size;
 18788                           ;fat16.c: 311: sector = file_number >> 4;
 18789  0063A8  C035  F02C         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 18790  0063AC  3A2C               	swapf	??_fat_get_file_size,f,c
 18791  0063AE  0E0F               	movlw	15
 18792  0063B0  162C               	andwf	??_fat_get_file_size,f,c
 18793  0063B2  502C               	movf	??_fat_get_file_size,w,c
 18794  0063B4  6E2D               	movwf	fat_get_file_size@sector,c
 18795  0063B6  6A2E               	clrf	fat_get_file_size@sector+1,c
 18796                           
 18797                           ;fat16.c: 312: sector += 18;
 18798  0063B8  0E12               	movlw	18
 18799  0063BA  262D               	addwf	fat_get_file_size@sector,f,c
 18800  0063BC  0E00               	movlw	0
 18801  0063BE  222E               	addwfc	fat_get_file_size@sector+1,f,c
 18802                           
 18803                           ;fat16.c: 313: offset = file_number;
 18804  0063C0  C035  F033         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 18805  0063C4  6A34               	clrf	fat_get_file_size@offset+1,c
 18806                           
 18807                           ;fat16.c: 314: offset <<= 5;
 18808  0063C6  0E05               	movlw	5
 18809  0063C8                     u9095:
 18810  0063C8  90D8               	bcf	status,0,c
 18811  0063CA  3633               	rlcf	fat_get_file_size@offset,f,c
 18812  0063CC  3634               	rlcf	fat_get_file_size@offset+1,f,c
 18813  0063CE  2EE8               	decfsz	wreg,f,c
 18814  0063D0  D7FB               	goto	u9095
 18815                           
 18816                           ;fat16.c: 315: offset &= 0b111111111;
 18817  0063D2  0EFF               	movlw	255
 18818  0063D4  1633               	andwf	fat_get_file_size@offset,f,c
 18819  0063D6  0E01               	movlw	1
 18820  0063D8  1634               	andwf	fat_get_file_size@offset+1,f,c
 18821                           
 18822                           ;fat16.c: 316: offset += 28;
 18823  0063DA  0E1C               	movlw	28
 18824  0063DC  2633               	addwf	fat_get_file_size@offset,f,c
 18825  0063DE  0E00               	movlw	0
 18826  0063E0  2234               	addwfc	fat_get_file_size@offset+1,f,c
 18827                           
 18828                           ;fat16.c: 317: flash_partial_read(sector, offset, 4, &file_size);
 18829  0063E2  C02D  F014         	movff	fat_get_file_size@sector,flash_partial_read@page
 18830  0063E6  C02E  F015         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 18831  0063EA  C033  F016         	movff	fat_get_file_size@offset,flash_partial_read@start
 18832  0063EE  C034  F017         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 18833  0063F2  0E00               	movlw	0
 18834  0063F4  6E19               	movwf	flash_partial_read@length+1,c
 18835  0063F6  0E04               	movlw	4
 18836  0063F8  6E18               	movwf	flash_partial_read@length,c
 18837  0063FA  0E2F               	movlw	low fat_get_file_size@file_size
 18838  0063FC  6E1A               	movwf	flash_partial_read@data,c
 18839  0063FE  0E00               	movlw	high fat_get_file_size@file_size
 18840  006400  6E1B               	movwf	flash_partial_read@data+1,c
 18841  006402  EC97  F031         	call	_flash_partial_read	;wreg free
 18842                           
 18843                           ;fat16.c: 318: return file_size;
 18844  006406  C02F  F028         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 18845  00640A  C030  F029         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 18846  00640E  C031  F02A         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 18847  006412  C032  F02B         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 18848  006416  0012               	return	
 18849  006418                     __end_of_fat_get_file_size:
 18850                           	opt stack 0
 18851                           tblptru	equ	0xFF8
 18852                           tblptrh	equ	0xFF7
 18853                           tblptrl	equ	0xFF6
 18854                           tablat	equ	0xFF5
 18855                           prodh	equ	0xFF4
 18856                           prodl	equ	0xFF3
 18857                           intcon	equ	0xFF2
 18858                           intcon2	equ	0xFF1
 18859                           intcon3	equ	0xFF0
 18860                           postinc0	equ	0xFEE
 18861                           wreg	equ	0xFE8
 18862                           indf1	equ	0xFE7
 18863                           postdec1	equ	0xFE5
 18864                           plusw1	equ	0xFE3
 18865                           fsr1h	equ	0xFE2
 18866                           fsr1l	equ	0xFE1
 18867                           indf2	equ	0xFDF
 18868                           postinc2	equ	0xFDE
 18869                           postdec2	equ	0xFDD
 18870                           plusw2	equ	0xFDB
 18871                           fsr2h	equ	0xFDA
 18872                           fsr2l	equ	0xFD9
 18873                           status	equ	0xFD8
 18874                           
 18875 ;; *************** function _fat_find_file *****************
 18876 ;; Defined at:
 18877 ;;		line 262 in file "fat16.c"
 18878 ;; Parameters:    Size  Location     Type
 18879 ;;  name            2   39[COMRAM] PTR unsigned char 
 18880 ;;		 -> bootloader_filename(9), 
 18881 ;;  extension       2   41[COMRAM] PTR unsigned char 
 18882 ;;		 -> bootloader_extension(4), 
 18883 ;; Auto vars:     Size  Location     Type
 18884 ;;  buffer         11   43[COMRAM] unsigned char [11]
 18885 ;;  offset          2   57[COMRAM] unsigned int 
 18886 ;;  sector          2   55[COMRAM] unsigned int 
 18887 ;;  slot            1   54[COMRAM] unsigned char 
 18888 ;; Return value:  Size  Location     Type
 18889 ;;                  1    wreg      unsigned char 
 18890 ;; Registers used:
 18891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18892 ;; Tracked objects:
 18893 ;;		On entry : 0/0
 18894 ;;		On exit  : 0/0
 18895 ;;		Unchanged: 0/0
 18896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18898 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18900 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18901 ;;Total ram usage:       20 bytes
 18902 ;; Hardware stack levels used:    1
 18903 ;; Hardware stack levels required when called:    4
 18904 ;; This function calls:
 18905 ;;		_flash_partial_read
 18906 ;;		_strncmp
 18907 ;; This function is called by:
 18908 ;;		__bootloader_find_file
 18909 ;;		_fat_create_file
 18910 ;; This function uses a non-reentrant model
 18911 ;;
 18912                           
 18913                           	psect	text87
 18914  0053E6                     __ptext87:
 18915                           	opt stack 0
 18916  0053E6                     _fat_find_file:
 18917                           	opt stack 24
 18918                           
 18919                           ;fat16.c: 264: uint8_t slot;
 18920                           ;fat16.c: 265: uint16_t sector;
 18921                           ;fat16.c: 266: uint16_t offset;
 18922                           ;fat16.c: 267: uint8_t buffer[11];
 18923                           ;fat16.c: 268: slot = 0;
 18924                           
 18925                           ;incstack = 0
 18926  0053E6  0E00               	movlw	0
 18927  0053E8  6E37               	movwf	fat_find_file@slot,c
 18928                           
 18929                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 18930  0053EA  0E00               	movlw	0
 18931  0053EC  6E39               	movwf	fat_find_file@sector+1,c
 18932  0053EE  0E12               	movlw	18
 18933  0053F0  6E38               	movwf	fat_find_file@sector,c
 18934  0053F2                     l12291:
 18935  0053F2  5039               	movf	fat_find_file@sector+1,w,c
 18936  0053F4  E156               	bnz	l12333
 18937  0053F6  0E16               	movlw	22
 18938  0053F8  5C38               	subwf	fat_find_file@sector,w,c
 18939  0053FA  B0D8               	btfsc	status,0,c
 18940  0053FC  D052               	goto	l12333
 18941                           
 18942                           ;fat16.c: 270: {
 18943                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 18944  0053FE  0E00               	movlw	0
 18945  005400  6E3B               	movwf	fat_find_file@offset+1,c
 18946  005402  0E00               	movlw	0
 18947  005404  6E3A               	movwf	fat_find_file@offset,c
 18948  005406                     l12297:
 18949  005406  0E02               	movlw	2
 18950  005408  5C3B               	subwf	fat_find_file@offset+1,w,c
 18951  00540A  B0D8               	btfsc	status,0,c
 18952  00540C  D047               	goto	l12329
 18953                           
 18954                           ;fat16.c: 272: {
 18955                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 18956  00540E  C038  F014         	movff	fat_find_file@sector,flash_partial_read@page
 18957  005412  C039  F015         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 18958  005416  C03A  F016         	movff	fat_find_file@offset,flash_partial_read@start
 18959  00541A  C03B  F017         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 18960  00541E  0E00               	movlw	0
 18961  005420  6E19               	movwf	flash_partial_read@length+1,c
 18962  005422  0E0B               	movlw	11
 18963  005424  6E18               	movwf	flash_partial_read@length,c
 18964  005426  0E2C               	movlw	low fat_find_file@buffer
 18965  005428  6E1A               	movwf	flash_partial_read@data,c
 18966  00542A  0E00               	movlw	high fat_find_file@buffer
 18967  00542C  6E1B               	movwf	flash_partial_read@data+1,c
 18968  00542E  EC97  F031         	call	_flash_partial_read	;wreg free
 18969                           
 18970                           ;fat16.c: 274: if(buffer[0]==0x00)
 18971  005432  502C               	movf	fat_find_file@buffer,w,c
 18972  005434  A4D8               	btfss	status,2,c
 18973  005436  D002               	goto	l12311
 18974                           
 18975                           ;fat16.c: 275: {
 18976                           ;fat16.c: 278: return 0xFF;
 18977  005438  0EFF               	movlw	255
 18978  00543A  0012               	return	
 18979  00543C                     l12311:
 18980                           
 18981                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 18982  00543C  0EE5               	movlw	229
 18983  00543E  182C               	xorwf	fat_find_file@buffer,w,c
 18984  005440  B4D8               	btfsc	status,2,c
 18985  005442  D026               	goto	l12323
 18986                           
 18987                           ;fat16.c: 286: else
 18988                           ;fat16.c: 287: {
 18989                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 18990                           
 18991                           ;fat16.c: 281: {
 18992                           ;fat16.c: 285: }
 18993  005444  C028  F001         	movff	fat_find_file@name,strncmp@s1
 18994  005448  C029  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 18995  00544C  0E2C               	movlw	low fat_find_file@buffer
 18996  00544E  6E03               	movwf	strncmp@s2,c
 18997  005450  0E00               	movlw	high fat_find_file@buffer
 18998  005452  6E04               	movwf	strncmp@s2+1,c
 18999  005454  0E00               	movlw	0
 19000  005456  6E06               	movwf	strncmp@len+1,c
 19001  005458  0E08               	movlw	8
 19002  00545A  6E05               	movwf	strncmp@len,c
 19003  00545C  ECE0  F02F         	call	_strncmp	;wreg free
 19004  005460  5001               	movf	?_strncmp,w,c
 19005  005462  1002               	iorwf	?_strncmp+1,w,c
 19006  005464  A4D8               	btfss	status,2,c
 19007  005466  D014               	goto	l12323
 19008                           
 19009                           ;fat16.c: 290: {
 19010                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 19011  005468  C02A  F001         	movff	fat_find_file@extension,strncmp@s1
 19012  00546C  C02B  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 19013  005470  0E34               	movlw	low (fat_find_file@buffer+8)
 19014  005472  6E03               	movwf	strncmp@s2,c
 19015  005474  0E00               	movlw	high (fat_find_file@buffer+8)
 19016  005476  6E04               	movwf	strncmp@s2+1,c
 19017  005478  0E00               	movlw	0
 19018  00547A  6E06               	movwf	strncmp@len+1,c
 19019  00547C  0E03               	movlw	3
 19020  00547E  6E05               	movwf	strncmp@len,c
 19021  005480  ECE0  F02F         	call	_strncmp	;wreg free
 19022  005484  5001               	movf	?_strncmp,w,c
 19023  005486  1002               	iorwf	?_strncmp+1,w,c
 19024  005488  A4D8               	btfss	status,2,c
 19025  00548A  D002               	goto	l12323
 19026                           
 19027                           ;fat16.c: 293: {
 19028                           ;fat16.c: 296: return slot;
 19029  00548C  5037               	movf	fat_find_file@slot,w,c
 19030  00548E  0012               	return	
 19031  005490                     l12323:
 19032                           
 19033                           ;fat16.c: 297: }
 19034                           ;fat16.c: 298: }
 19035                           ;fat16.c: 299: }
 19036                           ;fat16.c: 300: ++slot;
 19037  005490  2A37               	incf	fat_find_file@slot,f,c
 19038  005492  0E20               	movlw	32
 19039  005494  263A               	addwf	fat_find_file@offset,f,c
 19040  005496  0E00               	movlw	0
 19041  005498  223B               	addwfc	fat_find_file@offset+1,f,c
 19042  00549A  D7B5               	goto	l12297
 19043  00549C                     l12329:
 19044  00549C  4A38               	infsnz	fat_find_file@sector,f,c
 19045  00549E  2A39               	incf	fat_find_file@sector+1,f,c
 19046  0054A0  D7A8               	goto	l12291
 19047  0054A2                     l12333:
 19048                           
 19049                           ;fat16.c: 301: }
 19050                           ;fat16.c: 302: }
 19051                           ;fat16.c: 303: return 0xFF;
 19052  0054A2  0EFF               	movlw	255
 19053  0054A4  0012               	return	
 19054  0054A6                     __end_of_fat_find_file:
 19055                           	opt stack 0
 19056                           tblptru	equ	0xFF8
 19057                           tblptrh	equ	0xFF7
 19058                           tblptrl	equ	0xFF6
 19059                           tablat	equ	0xFF5
 19060                           prodh	equ	0xFF4
 19061                           prodl	equ	0xFF3
 19062                           intcon	equ	0xFF2
 19063                           intcon2	equ	0xFF1
 19064                           intcon3	equ	0xFF0
 19065                           postinc0	equ	0xFEE
 19066                           wreg	equ	0xFE8
 19067                           indf1	equ	0xFE7
 19068                           postdec1	equ	0xFE5
 19069                           plusw1	equ	0xFE3
 19070                           fsr1h	equ	0xFE2
 19071                           fsr1l	equ	0xFE1
 19072                           indf2	equ	0xFDF
 19073                           postinc2	equ	0xFDE
 19074                           postdec2	equ	0xFDD
 19075                           plusw2	equ	0xFDB
 19076                           fsr2h	equ	0xFDA
 19077                           fsr2l	equ	0xFD9
 19078                           status	equ	0xFD8
 19079                           
 19080 ;; *************** function _strncmp *****************
 19081 ;; Defined at:
 19082 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strncmp.c"
 19083 ;; Parameters:    Size  Location     Type
 19084 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 19085 ;;		 -> bootloader_extension(4), bootloader_filename(9), 
 19086 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 19087 ;;		 -> fat_find_file@buffer(11), 
 19088 ;;  len             2    4[COMRAM] unsigned int 
 19089 ;; Auto vars:     Size  Location     Type
 19090 ;;		None
 19091 ;; Return value:  Size  Location     Type
 19092 ;;                  2    0[COMRAM] int 
 19093 ;; Registers used:
 19094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19095 ;; Tracked objects:
 19096 ;;		On entry : 0/0
 19097 ;;		On exit  : 0/0
 19098 ;;		Unchanged: 0/0
 19099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19100 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19104 ;;Total ram usage:        8 bytes
 19105 ;; Hardware stack levels used:    1
 19106 ;; This function calls:
 19107 ;;		Nothing
 19108 ;; This function is called by:
 19109 ;;		_fat_find_file
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           	psect	text88
 19114  005FC0                     __ptext88:
 19115                           	opt stack 0
 19116  005FC0                     _strncmp:
 19117                           	opt stack 27
 19118                           
 19119                           ;incstack = 0
 19120  005FC0  D034               	goto	l11313
 19121  005FC2                     l11303:
 19122  005FC2  C001  FFF6         	movff	strncmp@s1,tblptrl
 19123  005FC6  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 19124  005FCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19125  005FCA  6AF8               	clrf	tblptru,c
 19126  005FCC                     	endif
 19127  005FCC                     	if	0	;tblptru may be non-zero
 19128  005FCC                     	endif
 19129  005FCC  0008               	tblrd		*
 19130  005FCE  50F5               	movf	tablat,w,c
 19131  005FD0  0900               	iorlw	0
 19132  005FD2  B4D8               	btfsc	status,2,c
 19133  005FD4  D00E               	goto	l11307
 19134  005FD6  C003  FFD9         	movff	strncmp@s2,fsr2l
 19135  005FDA  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 19136  005FDE  C001  FFF6         	movff	strncmp@s1,tblptrl
 19137  005FE2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 19138  005FE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19139  005FE6  6AF8               	clrf	tblptru,c
 19140  005FE8                     	endif
 19141  005FE8                     	if	0	;tblptru may be non-zero
 19142  005FE8                     	endif
 19143  005FE8  50DE               	movf	postinc2,w,c
 19144  005FEA  0009               	tblrd		*+
 19145  005FEC  18F5               	xorwf	tablat,w,c
 19146  005FEE  B4D8               	btfsc	status,2,c
 19147  005FF0  D018               	goto	l11311
 19148  005FF2                     l11307:
 19149  005FF2  C003  FFD9         	movff	strncmp@s2,fsr2l
 19150  005FF6  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 19151  005FFA  50DF               	movf	indf2,w,c
 19152  005FFC  6E07               	movwf	??_strncmp& (0+255),c
 19153  005FFE  6A08               	clrf	(??_strncmp+1)& (0+255),c
 19154  006000  1E07               	comf	??_strncmp,f,c
 19155  006002  1E08               	comf	??_strncmp+1,f,c
 19156  006004  4A07               	infsnz	??_strncmp,f,c
 19157  006006  2A08               	incf	??_strncmp+1,f,c
 19158  006008  C001  FFF6         	movff	strncmp@s1,tblptrl
 19159  00600C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 19160  006010                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19161  006010  6AF8               	clrf	tblptru,c
 19162  006012                     	endif
 19163  006012                     	if	0	;tblptru may be non-zero
 19164  006012                     	endif
 19165  006012  0008               	tblrd		*
 19166  006014  50F5               	movf	tablat,w,c
 19167  006016  2407               	addwf	??_strncmp,w,c
 19168  006018  6E01               	movwf	?_strncmp,c
 19169  00601A  0E00               	movlw	0
 19170  00601C  2008               	addwfc	??_strncmp+1,w,c
 19171  00601E  6E02               	movwf	?_strncmp+1,c
 19172  006020  0012               	return	
 19173  006022                     l11311:
 19174  006022  4A01               	infsnz	strncmp@s1,f,c
 19175  006024  2A02               	incf	strncmp@s1+1,f,c
 19176  006026  4A03               	infsnz	strncmp@s2,f,c
 19177  006028  2A04               	incf	strncmp@s2+1,f,c
 19178  00602A                     l11313:
 19179  00602A  0605               	decf	strncmp@len,f,c
 19180  00602C  A0D8               	btfss	status,0,c
 19181  00602E  0606               	decf	strncmp@len+1,f,c
 19182  006030  2805               	incf	strncmp@len,w,c
 19183  006032  E1C7               	bnz	l11303
 19184  006034  2806               	incf	strncmp@len+1,w,c
 19185  006036  A4D8               	btfss	status,2,c
 19186  006038  D7C4               	goto	l11303
 19187  00603A  0E00               	movlw	0
 19188  00603C  6E02               	movwf	?_strncmp+1,c
 19189  00603E  0E00               	movlw	0
 19190  006040  6E01               	movwf	?_strncmp,c
 19191  006042  0012               	return	
 19192  006044                     __end_of_strncmp:
 19193                           	opt stack 0
 19194                           tblptru	equ	0xFF8
 19195                           tblptrh	equ	0xFF7
 19196                           tblptrl	equ	0xFF6
 19197                           tablat	equ	0xFF5
 19198                           prodh	equ	0xFF4
 19199                           prodl	equ	0xFF3
 19200                           intcon	equ	0xFF2
 19201                           intcon2	equ	0xFF1
 19202                           intcon3	equ	0xFF0
 19203                           postinc0	equ	0xFEE
 19204                           wreg	equ	0xFE8
 19205                           indf1	equ	0xFE7
 19206                           postdec1	equ	0xFE5
 19207                           plusw1	equ	0xFE3
 19208                           fsr1h	equ	0xFE2
 19209                           fsr1l	equ	0xFE1
 19210                           indf2	equ	0xFDF
 19211                           postinc2	equ	0xFDE
 19212                           postdec2	equ	0xFDD
 19213                           plusw2	equ	0xFDB
 19214                           fsr2h	equ	0xFDA
 19215                           fsr2l	equ	0xFD9
 19216                           status	equ	0xFD8
 19217                           
 19218 ;; *************** function _USBDeviceTasks *****************
 19219 ;; Defined at:
 19220 ;;		line 477 in file "usb_device.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;		None
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;  i               1   31[COMRAM] unsigned char 
 19225 ;; Return value:  Size  Location     Type
 19226 ;;                  1    wreg      void 
 19227 ;; Registers used:
 19228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19237 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19238 ;;Total ram usage:        1 bytes
 19239 ;; Hardware stack levels used:    1
 19240 ;; Hardware stack levels required when called:    8
 19241 ;; This function calls:
 19242 ;;		_USBCtrlEPAllowStatusStage
 19243 ;;		_USBCtrlEPService
 19244 ;;		_USBDeviceInit
 19245 ;;		_USBIncrement1msInternalTimers
 19246 ;;		_USBStallHandler
 19247 ;;		_USBSuspend
 19248 ;;		_USBWakeFromSuspend
 19249 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19250 ;; This function is called by:
 19251 ;;		_main
 19252 ;; This function uses a non-reentrant model
 19253 ;;
 19254                           
 19255                           	psect	text89
 19256  0034C2                     __ptext89:
 19257                           	opt stack 0
 19258  0034C2                     _USBDeviceTasks:
 19259                           	opt stack 22
 19260                           
 19261                           ;usb_device.c: 544: }
 19262                           ;usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 19263                           
 19264                           ; BSR set to: 15
 19265                           
 19266                           ; BSR set to: 15
 19267                           ;usb_device.c: 543: return;
 19268                           
 19269                           ; BSR set to: 15
 19270                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 19271                           
 19272                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 19273                           
 19274                           ;usb_device.c: 511: UIE = 0;
 19275                           
 19276                           ;usb_device.c: 506: {
 19277                           ;usb_device.c: 508: UCON = 0;
 19278                           
 19279                           ;usb_device.c: 479: uint8_t i;
 19280                           ;usb_device.c: 505: if (1 != 1)
 19281                           
 19282                           ;incstack = 0
 19283  0034C2  505F               	movf	_USBDeviceState,w,c
 19284  0034C4  A4D8               	btfss	status,2,c
 19285  0034C6  D014               	goto	l13917
 19286                           
 19287                           ;usb_device.c: 567: {
 19288                           ;usb_device.c: 569: UCON = 0;
 19289  0034C8  0E00               	movlw	0
 19290  0034CA  6E65               	movwf	3941,c	;volatile
 19291                           
 19292                           ;usb_device.c: 572: UIE = 0;
 19293  0034CC  0E00               	movlw	0
 19294  0034CE  010F               	movlb	15	; () banked
 19295  0034D0  6F36               	movwf	54,b	;volatile
 19296                           
 19297                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19298  0034D2  0E16               	movlw	22
 19299  0034D4  010F               	movlb	15	; () banked
 19300  0034D6  6F39               	movwf	57,b	;volatile
 19301  0034D8  0E9F               	movlw	159
 19302  0034DA  010F               	movlb	15	; () banked
 19303  0034DC  6F37               	movwf	55,b	;volatile
 19304  0034DE  0E7B               	movlw	123
 19305  0034E0  010F               	movlb	15	; () banked
 19306  0034E2  6F36               	movwf	54,b	;volatile
 19307                           
 19308                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 19309  0034E4  D001               	goto	l151
 19310  0034E6                     l152:
 19311  0034E6  8665               	bsf	3941,3,c	;volatile
 19312  0034E8                     l151:
 19313  0034E8  A665               	btfss	3941,3,c	;volatile
 19314  0034EA  D7FD               	goto	l152
 19315                           
 19316                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 19317  0034EC  0E01               	movlw	1
 19318  0034EE  6E5F               	movwf	_USBDeviceState,c
 19319  0034F0                     l13917:
 19320                           
 19321                           ;usb_device.c: 587: }
 19322                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 19323  0034F0  045F               	decf	_USBDeviceState,w,c
 19324  0034F2  B4D8               	btfsc	status,2,c
 19325                           
 19326                           ;usb_device.c: 591: {
 19327                           ;usb_device.c: 601: if(!UCONbits.SE0)
 19328  0034F4  BA65               	btfsc	3941,5,c	;volatile
 19329  0034F6  D00B               	goto	l13927
 19330                           
 19331                           ;usb_device.c: 602: {
 19332                           ;usb_device.c: 608: {UIR = 0;};
 19333  0034F8  0E00               	movlw	0
 19334  0034FA  6E62               	movwf	3938,c	;volatile
 19335                           
 19336                           ;usb_device.c: 612: UIE=0;
 19337  0034FC  0E00               	movlw	0
 19338  0034FE  010F               	movlb	15	; () banked
 19339  003500  6F36               	movwf	54,b	;volatile
 19340                           
 19341                           ; BSR set to: 15
 19342                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 19343  003502  010F               	movlb	15	; () banked
 19344  003504  8136               	bsf	54,0,b	;volatile
 19345                           
 19346                           ; BSR set to: 15
 19347                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 19348  003506  010F               	movlb	15	; () banked
 19349  003508  8936               	bsf	54,4,b	;volatile
 19350                           
 19351                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 19352  00350A  0E02               	movlw	2
 19353  00350C  6E5F               	movwf	_USBDeviceState,c
 19354  00350E                     l13927:
 19355                           
 19356                           ;usb_device.c: 617: }
 19357                           ;usb_device.c: 618: }
 19358                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 19359  00350E  A462               	btfss	3938,2,c	;volatile
 19360  003510  D006               	goto	l13935
 19361  003512  010F               	movlb	15	; () banked
 19362  003514  A536               	btfss	54,2,b	;volatile
 19363  003516  D003               	goto	l13935
 19364                           
 19365                           ; BSR set to: 15
 19366                           ;usb_device.c: 635: {
 19367                           ;usb_device.c: 636: (UIR &= 0xFB);
 19368  003518  9462               	bcf	3938,2,c	;volatile
 19369                           
 19370                           ; BSR set to: 15
 19371                           ;usb_device.c: 640: USBWakeFromSuspend();
 19372  00351A  ECC1  F038         	call	_USBWakeFromSuspend	;wreg free
 19373  00351E                     l13935:
 19374                           
 19375                           ;usb_device.c: 642: }
 19376                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 19377  00351E  A265               	btfss	3941,1,c	;volatile
 19378  003520  D002               	goto	l157
 19379                           
 19380                           ;usb_device.c: 648: {
 19381                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 19382  003522  98A1               	bcf	4001,4,c	;volatile
 19383                           
 19384                           ;usb_device.c: 650: return;
 19385  003524  0012               	return	
 19386  003526                     l157:
 19387                           
 19388                           ;usb_device.c: 651: }
 19389                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 19390  003526  A062               	btfss	3938,0,c	;volatile
 19391  003528  D008               	goto	l13947
 19392  00352A  010F               	movlb	15	; () banked
 19393  00352C  A136               	btfss	54,0,b	;volatile
 19394  00352E  D005               	goto	l13947
 19395                           
 19396                           ; BSR set to: 15
 19397                           ;usb_device.c: 664: {
 19398                           ;usb_device.c: 665: USBDeviceInit();
 19399  003530  ECE6  F01B         	call	_USBDeviceInit	;wreg free
 19400                           
 19401                           ;usb_device.c: 669: ;
 19402                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 19403  003534  0E04               	movlw	4
 19404  003536  6E5F               	movwf	_USBDeviceState,c
 19405                           
 19406                           ;usb_device.c: 681: (UIR &= 0xFE);
 19407  003538  9062               	bcf	3938,0,c	;volatile
 19408  00353A                     l13947:
 19409                           
 19410                           ;usb_device.c: 682: }
 19411                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 19412  00353A  A862               	btfss	3938,4,c	;volatile
 19413  00353C  D004               	goto	l13953
 19414  00353E  010F               	movlb	15	; () banked
 19415  003540  B936               	btfsc	54,4,b	;volatile
 19416                           
 19417                           ; BSR set to: 15
 19418                           ;usb_device.c: 688: {
 19419                           ;usb_device.c: 694: USBSuspend();
 19420  003542  EC47  F039         	call	_USBSuspend	;wreg free
 19421  003546                     l13953:
 19422                           
 19423                           ;usb_device.c: 696: }
 19424                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 19425  003546  AC62               	btfss	3938,6,c	;volatile
 19426  003548  D01F               	goto	l13971
 19427                           
 19428                           ;usb_device.c: 709: {
 19429                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 19430  00354A  010F               	movlb	15	; () banked
 19431  00354C  AD36               	btfss	54,6,b	;volatile
 19432  00354E  D00E               	goto	l13959
 19433                           
 19434                           ; BSR set to: 15
 19435                           ;usb_device.c: 712: {
 19436                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 19437  003550  0E00               	movlw	0
 19438  003552  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19439  003554  0E73               	movlw	115
 19440  003556  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19441  003558  0E00               	movlw	0
 19442  00355A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19443  00355C  0E00               	movlw	0
 19444  00355E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19445  003560  0E00               	movlw	0
 19446  003562  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19447  003564  0E01               	movlw	1
 19448  003566  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19449  003568  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19450  00356C                     l13959:
 19451                           
 19452                           ;usb_device.c: 714: }
 19453                           ;usb_device.c: 715: (UIR &= 0xBF);
 19454  00356C  9C62               	bcf	3938,6,c	;volatile
 19455                           
 19456                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 19457  00356E  EC6E  F03A         	call	_USBIncrement1msInternalTimers	;wreg free
 19458                           
 19459                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 19460  003572  0101               	movlb	1	; () banked
 19461  003574  5192               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 19462  003576  B4D8               	btfsc	status,2,c
 19463  003578  D002               	goto	l13967
 19464                           
 19465                           ; BSR set to: 1
 19466                           ;usb_device.c: 736: {
 19467                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 19468  00357A  0101               	movlb	1	; () banked
 19469  00357C  0792               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 19470  00357E                     l13967:
 19471                           
 19472                           ; BSR set to: 1
 19473                           ;usb_device.c: 738: }
 19474                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 19475  00357E  0101               	movlb	1	; () banked
 19476  003580  5192               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 19477  003582  B4D8               	btfsc	status,2,c
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;usb_device.c: 745: {
 19481                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 19482  003584  ECF8  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19483  003588                     l13971:
 19484                           
 19485                           ;usb_device.c: 747: }
 19486                           ;usb_device.c: 749: }
 19487                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 19488  003588  AA62               	btfss	3938,5,c	;volatile
 19489  00358A  D004               	goto	l13977
 19490  00358C  010F               	movlb	15	; () banked
 19491  00358E  BB36               	btfsc	54,5,b	;volatile
 19492                           
 19493                           ; BSR set to: 15
 19494                           ;usb_device.c: 752: {
 19495                           ;usb_device.c: 753: USBStallHandler();
 19496  003590  EC7F  F037         	call	_USBStallHandler	;wreg free
 19497  003594                     l13977:
 19498                           
 19499                           ;usb_device.c: 754: }
 19500                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 19501  003594  A262               	btfss	3938,1,c	;volatile
 19502  003596  D012               	goto	l13985
 19503  003598  010F               	movlb	15	; () banked
 19504  00359A  A336               	btfss	54,1,b	;volatile
 19505  00359C  D00F               	goto	l13985
 19506                           
 19507                           ; BSR set to: 15
 19508                           ;usb_device.c: 757: {
 19509                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 19510  00359E  0E7F               	movlw	127
 19511  0035A0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19512  0035A2  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19513  0035A4  0E00               	movlw	0
 19514  0035A6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19515  0035A8  0E00               	movlw	0
 19516  0035AA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19517  0035AC  0E00               	movlw	0
 19518  0035AE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19519  0035B0  0E01               	movlw	1
 19520  0035B2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19521  0035B4  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19522                           
 19523                           ;usb_device.c: 759: {UEIR = 0;};
 19524  0035B8  0E00               	movlw	0
 19525  0035BA  6E63               	movwf	3939,c	;volatile
 19526  0035BC                     l13985:
 19527                           
 19528                           ;usb_device.c: 767: }
 19529                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 19530  0035BC  0E04               	movlw	4
 19531  0035BE  605F               	cpfslt	_USBDeviceState,c
 19532  0035C0  D002               	goto	l166
 19533                           
 19534                           ;usb_device.c: 775: {
 19535                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 19536  0035C2  98A1               	bcf	4001,4,c	;volatile
 19537                           
 19538                           ;usb_device.c: 777: return;
 19539  0035C4  0012               	return	
 19540  0035C6                     l166:
 19541                           
 19542                           ;usb_device.c: 778: }
 19543                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 19544  0035C6  010F               	movlb	15	; () banked
 19545  0035C8  A736               	btfss	54,3,b	;volatile
 19546  0035CA  D040               	goto	l167
 19547                           
 19548                           ; BSR set to: 15
 19549                           ;usb_device.c: 784: {
 19550                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 19551  0035CC  0E00               	movlw	0
 19552  0035CE  6E20               	movwf	USBDeviceTasks@i,c
 19553  0035D0                     l13991:
 19554                           
 19555                           ; BSR set to: 15
 19556  0035D0  0E03               	movlw	3
 19557  0035D2  6420               	cpfsgt	USBDeviceTasks@i,c
 19558  0035D4  D001               	goto	l168
 19559  0035D6  D03A               	goto	l167
 19560  0035D8                     l168:
 19561                           
 19562                           ;usb_device.c: 786: {
 19563                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 19564  0035D8  A662               	btfss	3938,3,c	;volatile
 19565  0035DA  D038               	goto	l167
 19566                           
 19567                           ;usb_device.c: 788: {
 19568                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 19569  0035DC  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 19570                           
 19571                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 19572  0035E0  0100               	movlb	0	; () banked
 19573  0035E2  31FD               	rrcf	_USTATcopy& (0+255),w,b
 19574  0035E4  32E8               	rrcf	wreg,f,c
 19575  0035E6  32E8               	rrcf	wreg,f,c
 19576  0035E8  0B0F               	andlw	15
 19577  0035EA  0101               	movlb	1	; () banked
 19578  0035EC  6F94               	movwf	_endpoint_number& (0+255),b
 19579                           
 19580                           ; BSR set to: 1
 19581                           ;usb_device.c: 793: (UIR &= 0xF7);
 19582  0035EE  9662               	bcf	3938,3,c	;volatile
 19583                           
 19584                           ; BSR set to: 1
 19585                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 19586  0035F0  0100               	movlb	0	; () banked
 19587  0035F2  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 19588  0035F4  D008               	goto	l14005
 19589                           
 19590                           ; BSR set to: 0
 19591                           ;usb_device.c: 799: {
 19592                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 19593  0035F6  0101               	movlb	1	; () banked
 19594  0035F8  5194               	movf	_endpoint_number& (0+255),w,b
 19595  0035FA  0D01               	mullw	1
 19596  0035FC  0E66               	movlw	low _ep_data_out
 19597  0035FE  24F3               	addwf	prodl,w,c
 19598  003600  6ED9               	movwf	fsr2l,c
 19599  003602  0E01               	movlw	high _ep_data_out
 19600  003604  D007               	goto	L5
 19601  003606                     l14005:
 19602                           
 19603                           ;usb_device.c: 802: else
 19604                           ;usb_device.c: 803: {
 19605                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 19606  003606  0101               	movlb	1	; () banked
 19607  003608  5194               	movf	_endpoint_number& (0+255),w,b
 19608  00360A  0D01               	mullw	1
 19609  00360C  0E69               	movlw	low _ep_data_in
 19610  00360E  24F3               	addwf	prodl,w,c
 19611  003610  6ED9               	movwf	fsr2l,c
 19612  003612  0E01               	movlw	high _ep_data_in
 19613  003614                     L5:
 19614  003614  20F4               	addwfc	prodh,w,c
 19615  003616  6EDA               	movwf	fsr2h,c
 19616  003618  0101               	movlb	1	; () banked
 19617  00361A  70DF               	btg	indf2,0,c
 19618                           
 19619                           ; BSR set to: 1
 19620                           ;usb_device.c: 805: }
 19621                           ;usb_device.c: 810: if(endpoint_number == 0)
 19622                           
 19623                           ; BSR set to: 1
 19624  00361C  0101               	movlb	1	; () banked
 19625  00361E  5194               	movf	_endpoint_number& (0+255),w,b
 19626  003620  0101               	movlb	1	; () banked
 19627  003622  A4D8               	btfss	status,2,c
 19628  003624  D003               	goto	l14011
 19629                           
 19630                           ; BSR set to: 1
 19631                           ;usb_device.c: 811: {
 19632                           ;usb_device.c: 812: USBCtrlEPService();
 19633  003626  ECC0  F02B         	call	_USBCtrlEPService	;wreg free
 19634                           
 19635                           ;usb_device.c: 813: }
 19636  00362A  D00E               	goto	l14013
 19637  00362C                     l14011:
 19638                           
 19639                           ;usb_device.c: 814: else
 19640                           ;usb_device.c: 815: {
 19641                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 19642  00362C  0E00               	movlw	0
 19643  00362E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19644  003630  0E72               	movlw	114
 19645  003632  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19646  003634  0EFD               	movlw	low _USTATcopy
 19647  003636  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19648  003638  0E00               	movlw	high _USTATcopy
 19649  00363A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19650  00363C  0E00               	movlw	0
 19651  00363E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19652  003640  0E00               	movlw	0
 19653  003642  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19654  003644  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19655  003648                     l14013:
 19656  003648  2A20               	incf	USBDeviceTasks@i,f,c
 19657  00364A  D7C2               	goto	l13991
 19658  00364C                     l167:
 19659                           
 19660                           ;usb_device.c: 822: }
 19661                           ;usb_device.c: 823: }
 19662                           ;usb_device.c: 824: }
 19663                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 19664  00364C  98A1               	bcf	4001,4,c	;volatile
 19665  00364E  0012               	return		;funcret
 19666  003650                     __end_of_USBDeviceTasks:
 19667                           	opt stack 0
 19668                           tblptru	equ	0xFF8
 19669                           tblptrh	equ	0xFF7
 19670                           tblptrl	equ	0xFF6
 19671                           tablat	equ	0xFF5
 19672                           prodh	equ	0xFF4
 19673                           prodl	equ	0xFF3
 19674                           intcon	equ	0xFF2
 19675                           intcon2	equ	0xFF1
 19676                           intcon3	equ	0xFF0
 19677                           postinc0	equ	0xFEE
 19678                           wreg	equ	0xFE8
 19679                           indf1	equ	0xFE7
 19680                           postdec1	equ	0xFE5
 19681                           plusw1	equ	0xFE3
 19682                           fsr1h	equ	0xFE2
 19683                           fsr1l	equ	0xFE1
 19684                           indf2	equ	0xFDF
 19685                           postinc2	equ	0xFDE
 19686                           postdec2	equ	0xFDD
 19687                           plusw2	equ	0xFDB
 19688                           fsr2h	equ	0xFDA
 19689                           fsr2l	equ	0xFD9
 19690                           status	equ	0xFD8
 19691                           
 19692 ;; *************** function _USBWakeFromSuspend *****************
 19693 ;; Defined at:
 19694 ;;		line 2305 in file "usb_device.c"
 19695 ;; Parameters:    Size  Location     Type
 19696 ;;		None
 19697 ;; Auto vars:     Size  Location     Type
 19698 ;;		None
 19699 ;; Return value:  Size  Location     Type
 19700 ;;                  1    wreg      void 
 19701 ;; Registers used:
 19702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19703 ;; Tracked objects:
 19704 ;;		On entry : 0/0
 19705 ;;		On exit  : 0/0
 19706 ;;		Unchanged: 0/0
 19707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19712 ;;Total ram usage:        0 bytes
 19713 ;; Hardware stack levels used:    1
 19714 ;; Hardware stack levels required when called:    4
 19715 ;; This function calls:
 19716 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19717 ;; This function is called by:
 19718 ;;		_USBDeviceTasks
 19719 ;; This function uses a non-reentrant model
 19720 ;;
 19721                           
 19722                           	psect	text90
 19723  007182                     __ptext90:
 19724                           	opt stack 0
 19725  007182                     _USBWakeFromSuspend:
 19726                           	opt stack 25
 19727                           
 19728                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 19729                           
 19730                           ;incstack = 0
 19731  007182  0E00               	movlw	0
 19732  007184  0101               	movlb	1	; () banked
 19733  007186  6F95               	movwf	_USBBusIsSuspended& (0+255),b
 19734                           
 19735                           ; BSR set to: 1
 19736                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 19737  007188  0E00               	movlw	0
 19738  00718A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19739  00718C  0E74               	movlw	116
 19740  00718E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19741  007190  0E00               	movlw	0
 19742  007192  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19743  007194  0E00               	movlw	0
 19744  007196  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19745  007198  0E00               	movlw	0
 19746  00719A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19747  00719C  0E00               	movlw	0
 19748  00719E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19749  0071A0  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19750                           
 19751                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 19752  0071A4  9265               	bcf	3941,1,c	;volatile
 19753                           
 19754                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 19755  0071A6  010F               	movlb	15	; () banked
 19756  0071A8  9536               	bcf	54,2,b	;volatile
 19757                           
 19758                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 19759  0071AA  D001               	goto	l12813
 19760  0071AC                     l12811:
 19761                           
 19762                           ;usb_device.c: 2345: {
 19763                           ;usb_device.c: 2346: (UIR &= 0xFB);
 19764  0071AC  9462               	bcf	3938,2,c	;volatile
 19765  0071AE                     l12813:
 19766  0071AE  B462               	btfsc	3938,2,c	;volatile
 19767  0071B0  D7FD               	goto	l12811
 19768                           
 19769                           ;usb_device.c: 2347: }
 19770                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 19771  0071B2  0E00               	movlw	0
 19772  0071B4  0101               	movlb	1	; () banked
 19773  0071B6  6F8D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 19774                           
 19775                           ; BSR set to: 1
 19776  0071B8  0012               	return		;funcret
 19777  0071BA                     __end_of_USBWakeFromSuspend:
 19778                           	opt stack 0
 19779                           tblptru	equ	0xFF8
 19780                           tblptrh	equ	0xFF7
 19781                           tblptrl	equ	0xFF6
 19782                           tablat	equ	0xFF5
 19783                           prodh	equ	0xFF4
 19784                           prodl	equ	0xFF3
 19785                           intcon	equ	0xFF2
 19786                           intcon2	equ	0xFF1
 19787                           intcon3	equ	0xFF0
 19788                           postinc0	equ	0xFEE
 19789                           wreg	equ	0xFE8
 19790                           indf1	equ	0xFE7
 19791                           postdec1	equ	0xFE5
 19792                           plusw1	equ	0xFE3
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           postinc2	equ	0xFDE
 19797                           postdec2	equ	0xFDD
 19798                           plusw2	equ	0xFDB
 19799                           fsr2h	equ	0xFDA
 19800                           fsr2l	equ	0xFD9
 19801                           status	equ	0xFD8
 19802                           
 19803 ;; *************** function _USBSuspend *****************
 19804 ;; Defined at:
 19805 ;;		line 2247 in file "usb_device.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;		None
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;		None
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  1    wreg      void 
 19812 ;; Registers used:
 19813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19814 ;; Tracked objects:
 19815 ;;		On entry : 0/0
 19816 ;;		On exit  : 0/0
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19823 ;;Total ram usage:        0 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; Hardware stack levels required when called:    4
 19826 ;; This function calls:
 19827 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19828 ;; This function is called by:
 19829 ;;		_USBDeviceTasks
 19830 ;; This function uses a non-reentrant model
 19831 ;;
 19832                           
 19833                           	psect	text91
 19834  00728E                     __ptext91:
 19835                           	opt stack 0
 19836  00728E                     _USBSuspend:
 19837                           	opt stack 25
 19838                           
 19839                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 19840                           
 19841                           ; BSR set to: 1
 19842                           ;incstack = 0
 19843  00728E  010F               	movlb	15	; () banked
 19844  007290  8536               	bsf	54,2,b	;volatile
 19845                           
 19846                           ; BSR set to: 15
 19847                           ;usb_device.c: 2273: (UIR &= 0xEF);
 19848  007292  9862               	bcf	3938,4,c	;volatile
 19849                           
 19850                           ; BSR set to: 15
 19851                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 19852  007294  8265               	bsf	3941,1,c	;volatile
 19853                           
 19854                           ; BSR set to: 15
 19855                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 19856  007296  0E01               	movlw	1
 19857  007298  0101               	movlb	1	; () banked
 19858  00729A  6F95               	movwf	_USBBusIsSuspended& (0+255),b
 19859                           
 19860                           ; BSR set to: 1
 19861                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 19862  00729C  0E00               	movlw	0
 19863  00729E  0101               	movlb	1	; () banked
 19864  0072A0  6F8D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 19865                           
 19866                           ; BSR set to: 1
 19867                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 19868  0072A2  0E00               	movlw	0
 19869  0072A4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19870  0072A6  0E75               	movlw	117
 19871  0072A8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19872  0072AA  0E00               	movlw	0
 19873  0072AC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19874  0072AE  0E00               	movlw	0
 19875  0072B0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19876  0072B2  0E00               	movlw	0
 19877  0072B4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19878  0072B6  0E00               	movlw	0
 19879  0072B8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19880  0072BA  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19881  0072BE  0012               	return		;funcret
 19882  0072C0                     __end_of_USBSuspend:
 19883                           	opt stack 0
 19884                           tblptru	equ	0xFF8
 19885                           tblptrh	equ	0xFF7
 19886                           tblptrl	equ	0xFF6
 19887                           tablat	equ	0xFF5
 19888                           prodh	equ	0xFF4
 19889                           prodl	equ	0xFF3
 19890                           intcon	equ	0xFF2
 19891                           intcon2	equ	0xFF1
 19892                           intcon3	equ	0xFF0
 19893                           postinc0	equ	0xFEE
 19894                           wreg	equ	0xFE8
 19895                           indf1	equ	0xFE7
 19896                           postdec1	equ	0xFE5
 19897                           plusw1	equ	0xFE3
 19898                           fsr1h	equ	0xFE2
 19899                           fsr1l	equ	0xFE1
 19900                           indf2	equ	0xFDF
 19901                           postinc2	equ	0xFDE
 19902                           postdec2	equ	0xFDD
 19903                           plusw2	equ	0xFDB
 19904                           fsr2h	equ	0xFDA
 19905                           fsr2l	equ	0xFD9
 19906                           status	equ	0xFD8
 19907                           
 19908 ;; *************** function _USBStallHandler *****************
 19909 ;; Defined at:
 19910 ;;		line 2204 in file "usb_device.c"
 19911 ;; Parameters:    Size  Location     Type
 19912 ;;		None
 19913 ;; Auto vars:     Size  Location     Type
 19914 ;;		None
 19915 ;; Return value:  Size  Location     Type
 19916 ;;                  1    wreg      void 
 19917 ;; Registers used:
 19918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19919 ;; Tracked objects:
 19920 ;;		On entry : 0/0
 19921 ;;		On exit  : 0/0
 19922 ;;		Unchanged: 0/0
 19923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19928 ;;Total ram usage:        1 bytes
 19929 ;; Hardware stack levels used:    1
 19930 ;; This function calls:
 19931 ;;		Nothing
 19932 ;; This function is called by:
 19933 ;;		_USBDeviceTasks
 19934 ;; This function uses a non-reentrant model
 19935 ;;
 19936                           
 19937                           	psect	text92
 19938  006EFE                     __ptext92:
 19939                           	opt stack 0
 19940  006EFE                     _USBStallHandler:
 19941                           	opt stack 29
 19942                           
 19943                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 19944                           
 19945                           ;incstack = 0
 19946  006EFE  010F               	movlb	15	; () banked
 19947  006F00  A126               	btfss	38,0,b	;volatile
 19948  006F02  D01E               	goto	l295
 19949                           
 19950                           ; BSR set to: 15
 19951                           ;usb_device.c: 2217: {
 19952                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 19953  006F04  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19954  006F08  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19955  006F0C  0E80               	movlw	128
 19956  006F0E  18DE               	xorwf	postinc2,w,c
 19957  006F10  A4D8               	btfss	status,2,c
 19958  006F12  D014               	goto	l12849
 19959                           
 19960                           ; BSR set to: 15
 19961  006F14  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 19962  006F18  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 19963  006F1C  0E84               	movlw	132
 19964  006F1E  18DE               	xorwf	postinc2,w,c
 19965  006F20  A4D8               	btfss	status,2,c
 19966  006F22  D00C               	goto	l12849
 19967                           
 19968                           ; BSR set to: 15
 19969                           ;usb_device.c: 2220: {
 19970                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 19971  006F24  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19972  006F28  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19973  006F2C  0E0C               	movlw	12
 19974  006F2E  6EDF               	movwf	indf2,c
 19975                           
 19976                           ; BSR set to: 15
 19977                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 19978  006F30  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 19979  006F34  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 19980  006F38  0E00               	movlw	0
 19981  006F3A  8EDB               	bsf	plusw2,7,c
 19982  006F3C                     l12849:
 19983                           
 19984                           ; BSR set to: 15
 19985                           ;usb_device.c: 2224: }
 19986                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 19987  006F3C  010F               	movlb	15	; () banked
 19988  006F3E  9126               	bcf	38,0,b	;volatile
 19989  006F40                     l295:
 19990                           
 19991                           ; BSR set to: 15
 19992                           ;usb_device.c: 2226: }
 19993                           ;usb_device.c: 2228: (UIR &= 0xDF);
 19994  006F40  9A62               	bcf	3938,5,c	;volatile
 19995                           
 19996                           ; BSR set to: 15
 19997  006F42  0012               	return		;funcret
 19998  006F44                     __end_of_USBStallHandler:
 19999                           	opt stack 0
 20000                           tblptru	equ	0xFF8
 20001                           tblptrh	equ	0xFF7
 20002                           tblptrl	equ	0xFF6
 20003                           tablat	equ	0xFF5
 20004                           prodh	equ	0xFF4
 20005                           prodl	equ	0xFF3
 20006                           intcon	equ	0xFF2
 20007                           intcon2	equ	0xFF1
 20008                           intcon3	equ	0xFF0
 20009                           postinc0	equ	0xFEE
 20010                           wreg	equ	0xFE8
 20011                           indf1	equ	0xFE7
 20012                           postdec1	equ	0xFE5
 20013                           plusw1	equ	0xFE3
 20014                           fsr1h	equ	0xFE2
 20015                           fsr1l	equ	0xFE1
 20016                           indf2	equ	0xFDF
 20017                           postinc2	equ	0xFDE
 20018                           postdec2	equ	0xFDD
 20019                           plusw2	equ	0xFDB
 20020                           fsr2h	equ	0xFDA
 20021                           fsr2l	equ	0xFD9
 20022                           status	equ	0xFD8
 20023                           
 20024 ;; *************** function _USBIncrement1msInternalTimers *****************
 20025 ;; Defined at:
 20026 ;;		line 3027 in file "usb_device.c"
 20027 ;; Parameters:    Size  Location     Type
 20028 ;;		None
 20029 ;; Auto vars:     Size  Location     Type
 20030 ;;		None
 20031 ;; Return value:  Size  Location     Type
 20032 ;;                  1    wreg      void 
 20033 ;; Registers used:
 20034 ;;		wreg, status,2, status,0
 20035 ;; Tracked objects:
 20036 ;;		On entry : 0/0
 20037 ;;		On exit  : 0/0
 20038 ;;		Unchanged: 0/0
 20039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20044 ;;Total ram usage:        0 bytes
 20045 ;; Hardware stack levels used:    1
 20046 ;; This function calls:
 20047 ;;		Nothing
 20048 ;; This function is called by:
 20049 ;;		_USBDeviceTasks
 20050 ;; This function uses a non-reentrant model
 20051 ;;
 20052                           
 20053                           	psect	text93
 20054  0074DC                     __ptext93:
 20055                           	opt stack 0
 20056  0074DC                     _USBIncrement1msInternalTimers:
 20057                           	opt stack 29
 20058                           
 20059                           ;usb_device.c: 3035: USB1msTickCount++;
 20060                           
 20061                           ; BSR set to: 15
 20062                           ;incstack = 0
 20063  0074DC  0E01               	movlw	1
 20064  0074DE  0101               	movlb	1	; () banked
 20065  0074E0  275F               	addwf	_USB1msTickCount& (0+255),f,b
 20066  0074E2  0E00               	movlw	0
 20067  0074E4  2360               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 20068  0074E6  2361               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 20069  0074E8  2362               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 20070                           
 20071                           ; BSR set to: 1
 20072                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 20073  0074EA  0101               	movlb	1	; () banked
 20074  0074EC  5195               	movf	_USBBusIsSuspended& (0+255),w,b
 20075  0074EE  A4D8               	btfss	status,2,c
 20076  0074F0  0012               	return	
 20077                           
 20078                           ; BSR set to: 1
 20079                           ;usb_device.c: 3037: {
 20080                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 20081  0074F2  0101               	movlb	1	; () banked
 20082  0074F4  2B8D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 20083                           
 20084                           ; BSR set to: 1
 20085                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 20086  0074F6  0101               	movlb	1	; () banked
 20087  0074F8  518D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 20088  0074FA  A4D8               	btfss	status,2,c
 20089  0074FC  0012               	return	
 20090                           
 20091                           ; BSR set to: 1
 20092                           ;usb_device.c: 3041: {
 20093                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 20094  0074FE  0101               	movlb	1	; () banked
 20095  007500  698D               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 20096                           
 20097                           ; BSR set to: 1
 20098  007502  0012               	return	
 20099  007504                     __end_of_USBIncrement1msInternalTimers:
 20100                           	opt stack 0
 20101                           tblptru	equ	0xFF8
 20102                           tblptrh	equ	0xFF7
 20103                           tblptrl	equ	0xFF6
 20104                           tablat	equ	0xFF5
 20105                           prodh	equ	0xFF4
 20106                           prodl	equ	0xFF3
 20107                           intcon	equ	0xFF2
 20108                           intcon2	equ	0xFF1
 20109                           intcon3	equ	0xFF0
 20110                           postinc0	equ	0xFEE
 20111                           wreg	equ	0xFE8
 20112                           indf1	equ	0xFE7
 20113                           postdec1	equ	0xFE5
 20114                           plusw1	equ	0xFE3
 20115                           fsr1h	equ	0xFE2
 20116                           fsr1l	equ	0xFE1
 20117                           indf2	equ	0xFDF
 20118                           postinc2	equ	0xFDE
 20119                           postdec2	equ	0xFDD
 20120                           plusw2	equ	0xFDB
 20121                           fsr2h	equ	0xFDA
 20122                           fsr2l	equ	0xFD9
 20123                           status	equ	0xFD8
 20124                           
 20125 ;; *************** function _USBDeviceInit *****************
 20126 ;; Defined at:
 20127 ;;		line 277 in file "usb_device.c"
 20128 ;; Parameters:    Size  Location     Type
 20129 ;;		None
 20130 ;; Auto vars:     Size  Location     Type
 20131 ;;  i               1    8[COMRAM] unsigned char 
 20132 ;; Return value:  Size  Location     Type
 20133 ;;                  1    wreg      void 
 20134 ;; Registers used:
 20135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20136 ;; Tracked objects:
 20137 ;;		On entry : 0/0
 20138 ;;		On exit  : 0/0
 20139 ;;		Unchanged: 0/0
 20140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20145 ;;Total ram usage:        1 bytes
 20146 ;; Hardware stack levels used:    1
 20147 ;; Hardware stack levels required when called:    1
 20148 ;; This function calls:
 20149 ;;		_memset
 20150 ;; This function is called by:
 20151 ;;		_USBDeviceTasks
 20152 ;;		_main
 20153 ;; This function uses a non-reentrant model
 20154 ;;
 20155                           
 20156                           	psect	text94
 20157  0037CC                     __ptext94:
 20158                           	opt stack 0
 20159  0037CC                     _USBDeviceInit:
 20160                           	opt stack 28
 20161                           
 20162                           ;usb_device.c: 279: uint8_t i;
 20163                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 20164                           
 20165                           ; BSR set to: 1
 20166                           ;incstack = 0
 20167  0037CC  98A0               	bcf	4000,4,c	;volatile
 20168                           
 20169                           ;usb_device.c: 285: ;
 20170                           ;usb_device.c: 288: {UEIR = 0;};
 20171  0037CE  0E00               	movlw	0
 20172  0037D0  6E63               	movwf	3939,c	;volatile
 20173                           
 20174                           ;usb_device.c: 291: {UIR = 0;};
 20175  0037D2  0E00               	movlw	0
 20176  0037D4  6E62               	movwf	3938,c	;volatile
 20177                           
 20178                           ;usb_device.c: 294: UEP0 = 0;
 20179  0037D6  0E00               	movlw	0
 20180  0037D8  010F               	movlb	15	; () banked
 20181  0037DA  6F26               	movwf	38,b	;volatile
 20182                           
 20183                           ; BSR set to: 15
 20184                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 20185  0037DC  0E27               	movlw	39
 20186  0037DE  6E01               	movwf	memset@p1,c
 20187  0037E0  0E0F               	movlw	15
 20188  0037E2  6E02               	movwf	memset@p1+1,c
 20189  0037E4  0E00               	movlw	0
 20190  0037E6  6E04               	movwf	memset@c+1,c
 20191  0037E8  0E00               	movlw	0
 20192  0037EA  6E03               	movwf	memset@c,c
 20193  0037EC  0E00               	movlw	0
 20194  0037EE  6E06               	movwf	memset@n+1,c
 20195  0037F0  0E02               	movlw	2
 20196  0037F2  6E05               	movwf	memset@n,c
 20197  0037F4  ECF0  F039         	call	_memset	;wreg free
 20198                           
 20199                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 20200  0037F8  0E16               	movlw	22
 20201  0037FA  010F               	movlb	15	; () banked
 20202  0037FC  6F39               	movwf	57,b	;volatile
 20203                           
 20204                           ; BSR set to: 15
 20205  0037FE  0E9F               	movlw	159
 20206  003800  010F               	movlb	15	; () banked
 20207  003802  6F37               	movwf	55,b	;volatile
 20208                           
 20209                           ; BSR set to: 15
 20210  003804  0E7B               	movlw	123
 20211  003806  010F               	movlb	15	; () banked
 20212  003808  6F36               	movwf	54,b	;volatile
 20213                           
 20214                           ; BSR set to: 15
 20215                           ;usb_device.c: 301: ;
 20216                           ;usb_device.c: 304: ;
 20217                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 20218  00380A  0E00               	movlw	0
 20219  00380C  6E09               	movwf	USBDeviceInit@i,c
 20220  00380E                     l12745:
 20221                           
 20222                           ; BSR set to: 15
 20223  00380E  0E0B               	movlw	11
 20224  003810  6409               	cpfsgt	USBDeviceInit@i,c
 20225  003812  D001               	goto	l12749
 20226  003814  D00E               	goto	l140
 20227  003816                     l12749:
 20228                           
 20229                           ;usb_device.c: 308: {
 20230                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 20231  003816  5009               	movf	USBDeviceInit@i,w,c
 20232  003818  0D04               	mullw	4
 20233  00381A  0E00               	movlw	0
 20234  00381C  24F3               	addwf	prodl,w,c
 20235  00381E  6ED9               	movwf	fsr2l,c
 20236  003820  0E0D               	movlw	13
 20237  003822  20F4               	addwfc	prodh,w,c
 20238  003824  6EDA               	movwf	fsr2h,c
 20239  003826  6ADE               	clrf	postinc2,c
 20240  003828  6ADE               	clrf	postinc2,c
 20241  00382A  6ADE               	clrf	postinc2,c
 20242  00382C  6ADD               	clrf	postdec2,c
 20243  00382E  2A09               	incf	USBDeviceInit@i,f,c
 20244  003830  D7EE               	goto	l12745
 20245  003832                     l140:
 20246                           
 20247                           ;usb_device.c: 310: }
 20248                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 20249  003832  8C65               	bsf	3941,6,c	;volatile
 20250                           
 20251                           ;usb_device.c: 316: UADDR = 0x00;
 20252  003834  0E00               	movlw	0
 20253  003836  010F               	movlb	15	; () banked
 20254  003838  6F38               	movwf	56,b	;volatile
 20255                           
 20256                           ; BSR set to: 15
 20257                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 20258  00383A  9865               	bcf	3941,4,c	;volatile
 20259                           
 20260                           ; BSR set to: 15
 20261                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 20262  00383C  9C65               	bcf	3941,6,c	;volatile
 20263  00383E                     l12761:
 20264                           
 20265                           ;usb_device.c: 326: {
 20266                           ;usb_device.c: 327: (UIR &= 0xF7);
 20267  00383E  9662               	bcf	3938,3,c	;volatile
 20268                           
 20269                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 20270  003840  0E00               	movlw	0
 20271  003842  0100               	movlb	0	; () banked
 20272  003844  6FEB               	movwf	(_inPipes+3)& (0+255),b
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 20276  003846  0E00               	movlw	0
 20277  003848  0101               	movlb	1	; () banked
 20278  00384A  6F34               	movwf	(_outPipes+3)& (0+255),b
 20279                           
 20280                           ; BSR set to: 1
 20281                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 20282  00384C  0E00               	movlw	0
 20283  00384E  0101               	movlb	1	; () banked
 20284  003850  6F36               	movwf	(_outPipes+5)& (0+255),b
 20285  003852  0E00               	movlw	0
 20286  003854  6F35               	movwf	(_outPipes+4)& (0+255),b
 20287                           
 20288                           ; BSR set to: 1
 20289                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 20290  003856  B662               	btfsc	3938,3,c	;volatile
 20291  003858  D7F2               	goto	l12761
 20292                           
 20293                           ; BSR set to: 1
 20294                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 20295                           
 20296                           ; BSR set to: 1
 20297  00385A  0E01               	movlw	1
 20298  00385C  0101               	movlb	1	; () banked
 20299  00385E  6F91               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20300                           
 20301                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 20302  003860  0E01               	movlw	1
 20303  003862  0101               	movlb	1	; () banked
 20304  003864  6F90               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20305                           
 20306                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 20307  003866  0E00               	movlw	0
 20308  003868  0101               	movlb	1	; () banked
 20309  00386A  6F8F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20310                           
 20311                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 20312  00386C  0E00               	movlw	0
 20313  00386E  0101               	movlb	1	; () banked
 20314  003870  6F8E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20315                           
 20316                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 20317  003872  0E00               	movlw	0
 20318  003874  0101               	movlb	1	; () banked
 20319  003876  6F95               	movwf	_USBBusIsSuspended& (0+255),b
 20320                           
 20321                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 20322  003878  0E00               	movlw	0
 20323  00387A  6E09               	movwf	USBDeviceInit@i,c
 20324  00387C                     l12773:
 20325                           
 20326                           ; BSR set to: 1
 20327  00387C  0E02               	movlw	2
 20328  00387E  6409               	cpfsgt	USBDeviceInit@i,c
 20329  003880  D001               	goto	l12777
 20330  003882  D02E               	goto	l12783
 20331  003884                     l12777:
 20332                           
 20333                           ;usb_device.c: 346: {
 20334                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 20335  003884  5009               	movf	USBDeviceInit@i,w,c
 20336  003886  0D02               	mullw	2
 20337  003888  0EEE               	movlw	low _pBDTEntryIn
 20338  00388A  24F3               	addwf	prodl,w,c
 20339  00388C  6ED9               	movwf	fsr2l,c
 20340  00388E  0E00               	movlw	high _pBDTEntryIn
 20341  003890  20F4               	addwfc	prodh,w,c
 20342  003892  6EDA               	movwf	fsr2h,c
 20343  003894  0E00               	movlw	0
 20344  003896  6EDE               	movwf	postinc2,c
 20345  003898  0E00               	movlw	0
 20346  00389A  6EDD               	movwf	postdec2,c
 20347                           
 20348                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 20349  00389C  5009               	movf	USBDeviceInit@i,w,c
 20350  00389E  0D02               	mullw	2
 20351  0038A0  0E39               	movlw	low _pBDTEntryOut
 20352  0038A2  24F3               	addwf	prodl,w,c
 20353  0038A4  6ED9               	movwf	fsr2l,c
 20354  0038A6  0E01               	movlw	high _pBDTEntryOut
 20355  0038A8  20F4               	addwfc	prodh,w,c
 20356  0038AA  6EDA               	movwf	fsr2h,c
 20357  0038AC  0E00               	movlw	0
 20358  0038AE  6EDE               	movwf	postinc2,c
 20359  0038B0  0E00               	movlw	0
 20360  0038B2  6EDD               	movwf	postdec2,c
 20361                           
 20362                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 20363  0038B4  5009               	movf	USBDeviceInit@i,w,c
 20364  0038B6  0D01               	mullw	1
 20365  0038B8  0E69               	movlw	low _ep_data_in
 20366  0038BA  24F3               	addwf	prodl,w,c
 20367  0038BC  6ED9               	movwf	fsr2l,c
 20368  0038BE  0E01               	movlw	high _ep_data_in
 20369  0038C0  20F4               	addwfc	prodh,w,c
 20370  0038C2  6EDA               	movwf	fsr2h,c
 20371  0038C4  0E00               	movlw	0
 20372  0038C6  6EDF               	movwf	indf2,c
 20373                           
 20374                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 20375  0038C8  5009               	movf	USBDeviceInit@i,w,c
 20376  0038CA  0D01               	mullw	1
 20377  0038CC  0E66               	movlw	low _ep_data_out
 20378  0038CE  24F3               	addwf	prodl,w,c
 20379  0038D0  6ED9               	movwf	fsr2l,c
 20380  0038D2  0E01               	movlw	high _ep_data_out
 20381  0038D4  20F4               	addwfc	prodh,w,c
 20382  0038D6  6EDA               	movwf	fsr2h,c
 20383  0038D8  0E00               	movlw	0
 20384  0038DA  6EDF               	movwf	indf2,c
 20385  0038DC  2A09               	incf	USBDeviceInit@i,f,c
 20386  0038DE  D7CE               	goto	l12773
 20387  0038E0                     l12783:
 20388                           
 20389                           ;usb_device.c: 351: }
 20390                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20391  0038E0  0E08               	movlw	8
 20392  0038E2  0100               	movlb	0	; () banked
 20393  0038E4  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 20394  0038E6  0E0D               	movlw	13
 20395  0038E8  0100               	movlb	0	; () banked
 20396  0038EA  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 20400  0038EC  0E16               	movlw	22
 20401  0038EE  010F               	movlb	15	; () banked
 20402  0038F0  6F26               	movwf	38,b	;volatile
 20403                           
 20404                           ; BSR set to: 15
 20405                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 20406  0038F2  0E0D               	movlw	13
 20407  0038F4  010D               	movlb	13	; () banked
 20408  0038F6  6F03               	movwf	3,b	;volatile
 20409  0038F8  0E30               	movlw	48
 20410  0038FA  6F02               	movwf	2,b	;volatile
 20411                           
 20412                           ; BSR set to: 13
 20413                           ;usb_device.c: 359: BDT[0].CNT = 8;
 20414  0038FC  0E08               	movlw	8
 20415  0038FE  010D               	movlb	13	; () banked
 20416  003900  6F01               	movwf	1,b	;volatile
 20417                           
 20418                           ; BSR set to: 13
 20419                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 20420  003902  0E04               	movlw	4
 20421  003904  010D               	movlb	13	; () banked
 20422  003906  6F00               	movwf	0,b	;volatile
 20423                           
 20424                           ; BSR set to: 13
 20425                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 20426  003908  010D               	movlb	13	; () banked
 20427  00390A  8F00               	bsf	0,7,b	;volatile
 20428                           
 20429                           ; BSR set to: 13
 20430                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 20431  00390C  0E00               	movlw	0
 20432  00390E  0100               	movlb	0	; () banked
 20433  003910  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;usb_device.c: 366: USB1msTickCount = 0;
 20437  003912  0E00               	movlw	0
 20438  003914  0101               	movlb	1	; () banked
 20439  003916  6F5F               	movwf	_USB1msTickCount& (0+255),b
 20440  003918  0E00               	movlw	0
 20441  00391A  6F60               	movwf	(_USB1msTickCount+1)& (0+255),b
 20442  00391C  0E00               	movlw	0
 20443  00391E  6F61               	movwf	(_USB1msTickCount+2)& (0+255),b
 20444  003920  0E00               	movlw	0
 20445  003922  6F62               	movwf	(_USB1msTickCount+3)& (0+255),b
 20446                           
 20447                           ; BSR set to: 1
 20448                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 20449  003924  0E00               	movlw	0
 20450  003926  0101               	movlb	1	; () banked
 20451  003928  6F8D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 20452                           
 20453                           ; BSR set to: 1
 20454                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 20455  00392A  0E00               	movlw	0
 20456  00392C  6E5F               	movwf	_USBDeviceState,c
 20457                           
 20458                           ; BSR set to: 1
 20459  00392E  0012               	return		;funcret
 20460  003930                     __end_of_USBDeviceInit:
 20461                           	opt stack 0
 20462                           tblptru	equ	0xFF8
 20463                           tblptrh	equ	0xFF7
 20464                           tblptrl	equ	0xFF6
 20465                           tablat	equ	0xFF5
 20466                           prodh	equ	0xFF4
 20467                           prodl	equ	0xFF3
 20468                           intcon	equ	0xFF2
 20469                           intcon2	equ	0xFF1
 20470                           intcon3	equ	0xFF0
 20471                           postinc0	equ	0xFEE
 20472                           wreg	equ	0xFE8
 20473                           indf1	equ	0xFE7
 20474                           postdec1	equ	0xFE5
 20475                           plusw1	equ	0xFE3
 20476                           fsr1h	equ	0xFE2
 20477                           fsr1l	equ	0xFE1
 20478                           indf2	equ	0xFDF
 20479                           postinc2	equ	0xFDE
 20480                           postdec2	equ	0xFDD
 20481                           plusw2	equ	0xFDB
 20482                           fsr2h	equ	0xFDA
 20483                           fsr2l	equ	0xFD9
 20484                           status	equ	0xFD8
 20485                           
 20486 ;; *************** function _USBCtrlEPService *****************
 20487 ;; Defined at:
 20488 ;;		line 2374 in file "usb_device.c"
 20489 ;; Parameters:    Size  Location     Type
 20490 ;;		None
 20491 ;; Auto vars:     Size  Location     Type
 20492 ;;		None
 20493 ;; Return value:  Size  Location     Type
 20494 ;;                  1    wreg      void 
 20495 ;; Registers used:
 20496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20497 ;; Tracked objects:
 20498 ;;		On entry : 0/0
 20499 ;;		On exit  : 0/0
 20500 ;;		Unchanged: 0/0
 20501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20506 ;;Total ram usage:        2 bytes
 20507 ;; Hardware stack levels used:    1
 20508 ;; Hardware stack levels required when called:    7
 20509 ;; This function calls:
 20510 ;;		_USBCtrlTrfInHandler
 20511 ;;		_USBCtrlTrfOutHandler
 20512 ;;		_USBCtrlTrfSetupHandler
 20513 ;;		_memcpy
 20514 ;; This function is called by:
 20515 ;;		_USBDeviceTasks
 20516 ;; This function uses a non-reentrant model
 20517 ;;
 20518                           
 20519                           	psect	text95
 20520  005780                     __ptext95:
 20521                           	opt stack 0
 20522  005780                     _USBCtrlEPService:
 20523                           	opt stack 22
 20524                           
 20525                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 20526                           
 20527                           ; BSR set to: 1
 20528                           ;incstack = 0
 20529  005780  0E2D               	movlw	45
 20530  005782  0101               	movlb	1	; () banked
 20531  005784  6F92               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 20532                           
 20533                           ; BSR set to: 1
 20534                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 20535  005786  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 20536  00578A  0EFD               	movlw	253
 20537  00578C  161E               	andwf	??_USBCtrlEPService,f,c
 20538  00578E  A4D8               	btfss	status,2,c
 20539  005790  D044               	goto	l12869
 20540                           
 20541                           ; BSR set to: 1
 20542                           ;usb_device.c: 2385: {
 20543                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 20544  005792  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 20545  005796  90D8               	bcf	status,0,c
 20546  005798  321E               	rrcf	??_USBCtrlEPService,f,c
 20547  00579A  0E3F               	movlw	63
 20548  00579C  161E               	andwf	??_USBCtrlEPService,f,c
 20549  00579E  501E               	movf	??_USBCtrlEPService,w,c
 20550  0057A0  0D04               	mullw	4
 20551  0057A2  0E00               	movlw	0
 20552  0057A4  24F3               	addwf	prodl,w,c
 20553  0057A6  6E5D               	movwf	_pBDTEntryEP0OutCurrent,c
 20554  0057A8  0E0D               	movlw	13
 20555  0057AA  20F4               	addwfc	prodh,w,c
 20556  0057AC  6E5E               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20557                           
 20558                           ; BSR set to: 1
 20559                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20560  0057AE  C05D  F05B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20561  0057B2  C05E  F05C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20562                           
 20563                           ; BSR set to: 1
 20564                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 20565  0057B6  0E04               	movlw	4
 20566  0057B8  185B               	xorwf	_pBDTEntryEP0OutNext,w,c
 20567  0057BA  6E5B               	movwf	_pBDTEntryEP0OutNext,c
 20568  0057BC  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 20569  0057BE  6E5C               	movwf	_pBDTEntryEP0OutNext+1,c
 20570                           
 20571                           ; BSR set to: 1
 20572                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 20573  0057C0  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20574  0057C4  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20575  0057C8  30DF               	rrcf	indf2,w,c
 20576  0057CA  32E8               	rrcf	wreg,f,c
 20577  0057CC  0B0F               	andlw	15
 20578  0057CE  0A0D               	xorlw	13
 20579  0057D0  A4D8               	btfss	status,2,c
 20580  0057D2  D020               	goto	l12867
 20581                           
 20582                           ; BSR set to: 1
 20583                           ;usb_device.c: 2402: {
 20584                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 20585  0057D4  0E30               	movlw	48
 20586  0057D6  6E01               	movwf	memcpy@d1,c
 20587  0057D8  0E0D               	movlw	13
 20588  0057DA  6E02               	movwf	memcpy@d1+1,c
 20589  0057DC  EE20 F002          	lfsr	2,2
 20590  0057E0  505D               	movf	_pBDTEntryEP0OutCurrent,w,c
 20591  0057E2  26D9               	addwf	fsr2l,f,c
 20592  0057E4  505E               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 20593  0057E6  22DA               	addwfc	fsr2h,f,c
 20594  0057E8  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 20595  0057EC  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 20596  0057F0  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 20597  0057F4  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 20598  0057F8  5003               	movf	memcpy@s1,w,c
 20599  0057FA  1004               	iorwf	memcpy@s1+1,w,c
 20600  0057FC  A4D8               	btfss	status,2,c
 20601  0057FE  0E20               	movlw	32
 20602  005800  6E05               	movwf	memcpy@s1+2,c
 20603  005802  0E00               	movlw	0
 20604  005804  6E07               	movwf	memcpy@n+1,c
 20605  005806  0E08               	movlw	8
 20606  005808  6E06               	movwf	memcpy@n,c
 20607  00580A  EC4B  F033         	call	_memcpy	;wreg free
 20608                           
 20609                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 20610  00580E  EC0F  F02B         	call	_USBCtrlTrfSetupHandler	;wreg free
 20611                           
 20612                           ;usb_device.c: 2411: }
 20613  005812  0012               	return	
 20614  005814                     l12867:
 20615                           
 20616                           ;usb_device.c: 2412: else
 20617                           ;usb_device.c: 2413: {
 20618                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 20619  005814  EC7E  F033         	call	_USBCtrlTrfOutHandler	;wreg free
 20620                           
 20621                           ;usb_device.c: 2416: }
 20622                           ;usb_device.c: 2417: }
 20623  005818  0012               	return	
 20624  00581A                     l12869:
 20625                           
 20626                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 20627  00581A  0100               	movlb	0	; () banked
 20628  00581C  51FD               	movf	_USTATcopy& (0+255),w,b
 20629  00581E  0BFD               	andlw	253
 20630  005820  0A04               	xorlw	4
 20631  005822  A4D8               	btfss	status,2,c
 20632  005824  0012               	return	
 20633                           
 20634                           ; BSR set to: 0
 20635                           ;usb_device.c: 2419: {
 20636                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 20637  005826  EC8C  F027         	call	_USBCtrlTrfInHandler	;wreg free
 20638  00582A  0012               	return	
 20639  00582C                     __end_of_USBCtrlEPService:
 20640                           	opt stack 0
 20641                           tblptru	equ	0xFF8
 20642                           tblptrh	equ	0xFF7
 20643                           tblptrl	equ	0xFF6
 20644                           tablat	equ	0xFF5
 20645                           prodh	equ	0xFF4
 20646                           prodl	equ	0xFF3
 20647                           intcon	equ	0xFF2
 20648                           intcon2	equ	0xFF1
 20649                           intcon3	equ	0xFF0
 20650                           postinc0	equ	0xFEE
 20651                           wreg	equ	0xFE8
 20652                           indf1	equ	0xFE7
 20653                           postdec1	equ	0xFE5
 20654                           plusw1	equ	0xFE3
 20655                           fsr1h	equ	0xFE2
 20656                           fsr1l	equ	0xFE1
 20657                           indf2	equ	0xFDF
 20658                           postinc2	equ	0xFDE
 20659                           postdec2	equ	0xFDD
 20660                           plusw2	equ	0xFDB
 20661                           fsr2h	equ	0xFDA
 20662                           fsr2l	equ	0xFD9
 20663                           status	equ	0xFD8
 20664                           
 20665 ;; *************** function _USBCtrlTrfSetupHandler *****************
 20666 ;; Defined at:
 20667 ;;		line 2467 in file "usb_device.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;		None
 20670 ;; Auto vars:     Size  Location     Type
 20671 ;;		None
 20672 ;; Return value:  Size  Location     Type
 20673 ;;                  1    wreg      void 
 20674 ;; Registers used:
 20675 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20676 ;; Tracked objects:
 20677 ;;		On entry : 0/0
 20678 ;;		On exit  : 0/0
 20679 ;;		Unchanged: 0/0
 20680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20685 ;;Total ram usage:        0 bytes
 20686 ;; Hardware stack levels used:    1
 20687 ;; Hardware stack levels required when called:    6
 20688 ;; This function calls:
 20689 ;;		_USBCheckStdRequest
 20690 ;;		_USBCtrlEPServiceComplete
 20691 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20692 ;; This function is called by:
 20693 ;;		_USBCtrlEPService
 20694 ;; This function uses a non-reentrant model
 20695 ;;
 20696                           
 20697                           	psect	text96
 20698  00561E                     __ptext96:
 20699                           	opt stack 0
 20700  00561E                     _USBCtrlTrfSetupHandler:
 20701                           	opt stack 22
 20702                           
 20703                           ;usb_device.c: 2472: shortPacketStatus = 0;
 20704                           
 20705                           ;incstack = 0
 20706  00561E  0E00               	movlw	0
 20707  005620  0101               	movlb	1	; () banked
 20708  005622  6F97               	movwf	_shortPacketStatus& (0+255),b
 20709                           
 20710                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 20711  005624  0E00               	movlw	0
 20712  005626  0100               	movlb	0	; () banked
 20713  005628  6FFB               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 20714                           
 20715                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 20716  00562A  0E00               	movlw	0
 20717  00562C  0101               	movlb	1	; () banked
 20718  00562E  6F8F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20719                           
 20720                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 20721  005630  0E00               	movlw	0
 20722  005632  0101               	movlb	1	; () banked
 20723  005634  6F8E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20724                           
 20725                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 20726  005636  0E00               	movlw	0
 20727  005638  0101               	movlb	1	; () banked
 20728  00563A  6F93               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 20729                           
 20730                           ;usb_device.c: 2477: controlTransferState = 0;
 20731  00563C  0E00               	movlw	0
 20732  00563E  0100               	movlb	0	; () banked
 20733  005640  6FFC               	movwf	_controlTransferState& (0+255),b
 20734                           
 20735                           ; BSR set to: 0
 20736                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20737  005642  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 20738  005646  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20739  00564A  0E7F               	movlw	127
 20740  00564C  16DF               	andwf	indf2,f,c
 20741                           
 20742                           ; BSR set to: 0
 20743                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20744  00564E  0E04               	movlw	4
 20745  005650  0100               	movlb	0	; () banked
 20746  005652  19EE               	xorwf	_pBDTEntryIn& (0+255),w,b
 20747  005654  0100               	movlb	0	; () banked
 20748  005656  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 20749  005658  0100               	movlb	0	; () banked
 20750  00565A  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 20751  00565C  0100               	movlb	0	; () banked
 20752  00565E  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 20753                           
 20754                           ; BSR set to: 0
 20755                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 20756  005660  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 20757  005664  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20758  005668  0E7F               	movlw	127
 20759  00566A  16DF               	andwf	indf2,f,c
 20760                           
 20761                           ; BSR set to: 0
 20762                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 20763  00566C  0E04               	movlw	4
 20764  00566E  0100               	movlb	0	; () banked
 20765  005670  19EE               	xorwf	_pBDTEntryIn& (0+255),w,b
 20766  005672  0100               	movlb	0	; () banked
 20767  005674  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 20768  005676  0100               	movlb	0	; () banked
 20769  005678  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 20770  00567A  0100               	movlb	0	; () banked
 20771  00567C  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 20772                           
 20773                           ; BSR set to: 0
 20774                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 20775  00567E  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20776  005682  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20777  005686  0E7F               	movlw	127
 20778  005688  16DF               	andwf	indf2,f,c
 20779                           
 20780                           ; BSR set to: 0
 20781                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 20782  00568A  0E00               	movlw	0
 20783  00568C  0100               	movlb	0	; () banked
 20784  00568E  6FEB               	movwf	(_inPipes+3)& (0+255),b
 20785                           
 20786                           ; BSR set to: 0
 20787                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 20788  005690  0E00               	movlw	0
 20789  005692  0100               	movlb	0	; () banked
 20790  005694  6FED               	movwf	(_inPipes+5)& (0+255),b
 20791  005696  0E00               	movlw	0
 20792  005698  6FEC               	movwf	(_inPipes+4)& (0+255),b
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 20796  00569A  0E00               	movlw	0
 20797  00569C  0101               	movlb	1	; () banked
 20798  00569E  6F34               	movwf	(_outPipes+3)& (0+255),b
 20799                           
 20800                           ; BSR set to: 1
 20801                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 20802  0056A0  0E00               	movlw	0
 20803  0056A2  0101               	movlb	1	; () banked
 20804  0056A4  6F36               	movwf	(_outPipes+5)& (0+255),b
 20805  0056A6  0E00               	movlw	0
 20806  0056A8  6F35               	movwf	(_outPipes+4)& (0+255),b
 20807                           
 20808                           ; BSR set to: 1
 20809                           ;usb_device.c: 2502: USBCheckStdRequest();
 20810  0056AA  ECDA  F024         	call	_USBCheckStdRequest	;wreg free
 20811                           
 20812                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 20813  0056AE  0E00               	movlw	0
 20814  0056B0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20815  0056B2  0E03               	movlw	3
 20816  0056B4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20817  0056B6  0E00               	movlw	0
 20818  0056B8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20819  0056BA  0E00               	movlw	0
 20820  0056BC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20821  0056BE  0E00               	movlw	0
 20822  0056C0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20823  0056C2  0E00               	movlw	0
 20824  0056C4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20825  0056C6  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20826                           
 20827                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 20828  0056CA  ECD3  F021         	call	_USBCtrlEPServiceComplete	;wreg free
 20829  0056CE  0012               	return		;funcret
 20830  0056D0                     __end_of_USBCtrlTrfSetupHandler:
 20831                           	opt stack 0
 20832                           tblptru	equ	0xFF8
 20833                           tblptrh	equ	0xFF7
 20834                           tblptrl	equ	0xFF6
 20835                           tablat	equ	0xFF5
 20836                           prodh	equ	0xFF4
 20837                           prodl	equ	0xFF3
 20838                           intcon	equ	0xFF2
 20839                           intcon2	equ	0xFF1
 20840                           intcon3	equ	0xFF0
 20841                           postinc0	equ	0xFEE
 20842                           wreg	equ	0xFE8
 20843                           indf1	equ	0xFE7
 20844                           postdec1	equ	0xFE5
 20845                           plusw1	equ	0xFE3
 20846                           fsr1h	equ	0xFE2
 20847                           fsr1l	equ	0xFE1
 20848                           indf2	equ	0xFDF
 20849                           postinc2	equ	0xFDE
 20850                           postdec2	equ	0xFDD
 20851                           plusw2	equ	0xFDB
 20852                           fsr2h	equ	0xFDA
 20853                           fsr2l	equ	0xFD9
 20854                           status	equ	0xFD8
 20855                           
 20856 ;; *************** function _USBCtrlEPServiceComplete *****************
 20857 ;; Defined at:
 20858 ;;		line 1618 in file "usb_device.c"
 20859 ;; Parameters:    Size  Location     Type
 20860 ;;		None
 20861 ;; Auto vars:     Size  Location     Type
 20862 ;;		None
 20863 ;; Return value:  Size  Location     Type
 20864 ;;                  1    wreg      void 
 20865 ;; Registers used:
 20866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20867 ;; Tracked objects:
 20868 ;;		On entry : 0/0
 20869 ;;		On exit  : 0/0
 20870 ;;		Unchanged: 0/0
 20871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20876 ;;Total ram usage:        0 bytes
 20877 ;; Hardware stack levels used:    1
 20878 ;; Hardware stack levels required when called:    2
 20879 ;; This function calls:
 20880 ;;		_USBCtrlEPAllowDataStage
 20881 ;;		_USBCtrlEPAllowStatusStage
 20882 ;; This function is called by:
 20883 ;;		_USBCtrlTrfSetupHandler
 20884 ;; This function uses a non-reentrant model
 20885 ;;
 20886                           
 20887                           	psect	text97
 20888  0043A6                     __ptext97:
 20889                           	opt stack 0
 20890  0043A6                     _USBCtrlEPServiceComplete:
 20891                           	opt stack 25
 20892                           
 20893                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 20894                           
 20895                           ;incstack = 0
 20896  0043A6  9865               	bcf	3941,4,c	;volatile
 20897                           
 20898                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 20899  0043A8  0100               	movlb	0	; () banked
 20900  0043AA  BFEB               	btfsc	(_inPipes+3)& (0+255),7,b
 20901  0043AC  D03D               	goto	l219
 20902                           
 20903                           ; BSR set to: 0
 20904                           ;usb_device.c: 1631: {
 20905                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 20906  0043AE  0101               	movlb	1	; () banked
 20907  0043B0  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 20908  0043B2  D00F               	goto	l10979
 20909                           
 20910                           ; BSR set to: 1
 20911                           ;usb_device.c: 1633: {
 20912                           ;usb_device.c: 1634: controlTransferState = 2;
 20913  0043B4  0E02               	movlw	2
 20914  0043B6  0100               	movlb	0	; () banked
 20915  0043B8  6FFC               	movwf	_controlTransferState& (0+255),b
 20916                           
 20917                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 20918  0043BA  0101               	movlb	1	; () banked
 20919  0043BC  518E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 20920  0043BE  B4D8               	btfsc	status,2,c
 20921                           
 20922                           ; BSR set to: 1
 20923                           ;usb_device.c: 1646: {
 20924                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 20925  0043C0  EC0E  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 20926                           
 20927                           ;usb_device.c: 1648: }
 20928                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 20929  0043C4  0E00               	movlw	0
 20930  0043C6  0101               	movlb	1	; () banked
 20931  0043C8  6F90               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20932                           
 20933                           ; BSR set to: 1
 20934                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 20935  0043CA  0E00               	movlw	0
 20936  0043CC  0101               	movlb	1	; () banked
 20937  0043CE  6F91               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20938                           
 20939                           ;usb_device.c: 1654: }
 20940  0043D0  0012               	return	
 20941  0043D2                     l10979:
 20942                           
 20943                           ; BSR set to: 1
 20944                           ;usb_device.c: 1655: else
 20945                           ;usb_device.c: 1656: {
 20946                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 20947  0043D2  EE20 F001          	lfsr	2,1
 20948  0043D6  505B               	movf	_pBDTEntryEP0OutNext,w,c
 20949  0043D8  26D9               	addwf	fsr2l,f,c
 20950  0043DA  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 20951  0043DC  22DA               	addwfc	fsr2h,f,c
 20952  0043DE  0E08               	movlw	8
 20953  0043E0  6EDF               	movwf	indf2,c
 20954                           
 20955                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 20956  0043E2  EE20 F002          	lfsr	2,2
 20957  0043E6  505B               	movf	_pBDTEntryEP0OutNext,w,c
 20958  0043E8  26D9               	addwf	fsr2l,f,c
 20959  0043EA  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 20960  0043EC  22DA               	addwfc	fsr2h,f,c
 20961  0043EE  0E30               	movlw	48
 20962  0043F0  6EDE               	movwf	postinc2,c
 20963  0043F2  0E0D               	movlw	13
 20964  0043F4  6EDD               	movwf	postdec2,c
 20965                           
 20966                           ; BSR set to: 1
 20967                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20968  0043F6  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20969  0043FA  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20970  0043FE  0E0C               	movlw	12
 20971  004400  6EDF               	movwf	indf2,c
 20972                           
 20973                           ; BSR set to: 1
 20974                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 20975  004402  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 20976  004406  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 20977  00440A  0E00               	movlw	0
 20978  00440C  8EDB               	bsf	plusw2,7,c
 20979                           
 20980                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 20981  00440E  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 20982  004412  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20983  004416  0E04               	movlw	4
 20984  004418  6EDF               	movwf	indf2,c
 20985                           
 20986                           ; BSR set to: 1
 20987                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 20988  00441A  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 20989  00441E  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20990  004422  0E00               	movlw	0
 20991  004424  8EDB               	bsf	plusw2,7,c
 20992                           
 20993                           ; BSR set to: 1
 20994                           ;usb_device.c: 1667: }
 20995                           ;usb_device.c: 1668: }
 20996  004426  0012               	return	
 20997  004428                     l219:
 20998                           
 20999                           ; BSR set to: 0
 21000                           ;usb_device.c: 1669: else
 21001                           ;usb_device.c: 1670: {
 21002                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 21003  004428  010D               	movlb	13	; () banked
 21004  00442A  AF30               	btfss	48,7,b	;volatile
 21005  00442C  D015               	goto	l10999
 21006                           
 21007                           ; BSR set to: 13
 21008                           ;usb_device.c: 1672: {
 21009                           ;usb_device.c: 1673: controlTransferState = 1;
 21010  00442E  0E01               	movlw	1
 21011  004430  0100               	movlb	0	; () banked
 21012  004432  6FFC               	movwf	_controlTransferState& (0+255),b
 21013                           
 21014                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 21015  004434  0101               	movlb	1	; () banked
 21016  004436  518F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 21017  004438  B4D8               	btfsc	status,2,c
 21018                           
 21019                           ; BSR set to: 1
 21020                           ;usb_device.c: 1688: {
 21021                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 21022  00443A  EC0E  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 21023                           
 21024                           ;usb_device.c: 1690: }
 21025                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 21026  00443E  0E00               	movlw	0
 21027  004440  0101               	movlb	1	; () banked
 21028  004442  6F90               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21029                           
 21030                           ; BSR set to: 1
 21031                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 21032  004444  0E00               	movlw	0
 21033  004446  0101               	movlb	1	; () banked
 21034  004448  6F91               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21035                           
 21036                           ; BSR set to: 1
 21037                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 21038  00444A  0100               	movlb	0	; () banked
 21039  00444C  51FB               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21040  00444E  A4D8               	btfss	status,2,c
 21041  004450  0012               	return	
 21042                           
 21043                           ; BSR set to: 0
 21044                           ;usb_device.c: 1715: {
 21045                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 21046  004452  ECF8  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21047                           
 21048                           ;usb_device.c: 1717: }
 21049                           ;usb_device.c: 1718: }
 21050  004456  0012               	return	
 21051  004458                     l10999:
 21052                           
 21053                           ;usb_device.c: 1719: else
 21054                           ;usb_device.c: 1720: {
 21055                           ;usb_device.c: 1731: controlTransferState = 2;
 21056  004458  0E02               	movlw	2
 21057  00445A  0100               	movlb	0	; () banked
 21058  00445C  6FFC               	movwf	_controlTransferState& (0+255),b
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 21062  00445E  EE20 F001          	lfsr	2,1
 21063  004462  505B               	movf	_pBDTEntryEP0OutNext,w,c
 21064  004464  26D9               	addwf	fsr2l,f,c
 21065  004466  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 21066  004468  22DA               	addwfc	fsr2h,f,c
 21067  00446A  0E08               	movlw	8
 21068  00446C  6EDF               	movwf	indf2,c
 21069                           
 21070                           ; BSR set to: 0
 21071                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21072  00446E  EE20 F002          	lfsr	2,2
 21073  004472  505B               	movf	_pBDTEntryEP0OutNext,w,c
 21074  004474  26D9               	addwf	fsr2l,f,c
 21075  004476  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 21076  004478  22DA               	addwfc	fsr2h,f,c
 21077  00447A  0E30               	movlw	48
 21078  00447C  6EDE               	movwf	postinc2,c
 21079  00447E  0E0D               	movlw	13
 21080  004480  6EDD               	movwf	postdec2,c
 21081                           
 21082                           ; BSR set to: 0
 21083                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21084  004482  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21085  004486  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21086  00448A  0E04               	movlw	4
 21087  00448C  6EDF               	movwf	indf2,c
 21088                           
 21089                           ; BSR set to: 0
 21090                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21091  00448E  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21092  004492  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21093  004496  0E00               	movlw	0
 21094  004498  8EDB               	bsf	plusw2,7,c
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 21098  00449A  0E00               	movlw	0
 21099  00449C  0101               	movlb	1	; () banked
 21100  00449E  6F90               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21101                           
 21102                           ; BSR set to: 1
 21103                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 21104  0044A0  0E00               	movlw	0
 21105  0044A2  0101               	movlb	1	; () banked
 21106  0044A4  6F91               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21107                           
 21108                           ; BSR set to: 1
 21109                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 21110  0044A6  0100               	movlb	0	; () banked
 21111  0044A8  51FB               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21112  0044AA  A4D8               	btfss	status,2,c
 21113  0044AC  0012               	return	
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;usb_device.c: 1743: {
 21117                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 21118  0044AE  ECF8  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21119  0044B2  0012               	return	
 21120  0044B4                     __end_of_USBCtrlEPServiceComplete:
 21121                           	opt stack 0
 21122                           tblptru	equ	0xFF8
 21123                           tblptrh	equ	0xFF7
 21124                           tblptrl	equ	0xFF6
 21125                           tablat	equ	0xFF5
 21126                           prodh	equ	0xFF4
 21127                           prodl	equ	0xFF3
 21128                           intcon	equ	0xFF2
 21129                           intcon2	equ	0xFF1
 21130                           intcon3	equ	0xFF0
 21131                           postinc0	equ	0xFEE
 21132                           wreg	equ	0xFE8
 21133                           indf1	equ	0xFE7
 21134                           postdec1	equ	0xFE5
 21135                           plusw1	equ	0xFE3
 21136                           fsr1h	equ	0xFE2
 21137                           fsr1l	equ	0xFE1
 21138                           indf2	equ	0xFDF
 21139                           postinc2	equ	0xFDE
 21140                           postdec2	equ	0xFDD
 21141                           plusw2	equ	0xFDB
 21142                           fsr2h	equ	0xFDA
 21143                           fsr2l	equ	0xFD9
 21144                           status	equ	0xFD8
 21145                           
 21146 ;; *************** function _USBCtrlEPAllowDataStage *****************
 21147 ;; Defined at:
 21148 ;;		line 1490 in file "usb_device.c"
 21149 ;; Parameters:    Size  Location     Type
 21150 ;;		None
 21151 ;; Auto vars:     Size  Location     Type
 21152 ;;		None
 21153 ;; Return value:  Size  Location     Type
 21154 ;;                  1    wreg      void 
 21155 ;; Registers used:
 21156 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21157 ;; Tracked objects:
 21158 ;;		On entry : 0/0
 21159 ;;		On exit  : 0/0
 21160 ;;		Unchanged: 0/0
 21161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21166 ;;Total ram usage:        0 bytes
 21167 ;; Hardware stack levels used:    1
 21168 ;; Hardware stack levels required when called:    1
 21169 ;; This function calls:
 21170 ;;		_USBCtrlTrfTxService
 21171 ;; This function is called by:
 21172 ;;		_USBCtrlEPServiceComplete
 21173 ;; This function uses a non-reentrant model
 21174 ;;
 21175                           
 21176                           	psect	text98
 21177  005A1C                     __ptext98:
 21178                           	opt stack 0
 21179  005A1C                     _USBCtrlEPAllowDataStage:
 21180                           	opt stack 25
 21181                           
 21182                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 21183                           
 21184                           ;incstack = 0
 21185  005A1C  0E00               	movlw	0
 21186  005A1E  0101               	movlb	1	; () banked
 21187  005A20  6F8F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21188                           
 21189                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 21190  005A22  0E00               	movlw	0
 21191  005A24  0101               	movlb	1	; () banked
 21192  005A26  6F8E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21193                           
 21194                           ; BSR set to: 1
 21195                           ;usb_device.c: 1495: if(controlTransferState == 2)
 21196  005A28  0E02               	movlw	2
 21197  005A2A  0100               	movlb	0	; () banked
 21198  005A2C  19FC               	xorwf	_controlTransferState& (0+255),w,b
 21199  005A2E  A4D8               	btfss	status,2,c
 21200  005A30  D01F               	goto	l10511
 21201                           
 21202                           ; BSR set to: 0
 21203                           ;usb_device.c: 1496: {
 21204                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 21205  005A32  EE20 F001          	lfsr	2,1
 21206  005A36  505B               	movf	_pBDTEntryEP0OutNext,w,c
 21207  005A38  26D9               	addwf	fsr2l,f,c
 21208  005A3A  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 21209  005A3C  22DA               	addwfc	fsr2h,f,c
 21210  005A3E  0E08               	movlw	8
 21211  005A40  6EDF               	movwf	indf2,c
 21212                           
 21213                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21214  005A42  EE20 F002          	lfsr	2,2
 21215  005A46  505B               	movf	_pBDTEntryEP0OutNext,w,c
 21216  005A48  26D9               	addwf	fsr2l,f,c
 21217  005A4A  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 21218  005A4C  22DA               	addwfc	fsr2h,f,c
 21219  005A4E  0E38               	movlw	56
 21220  005A50  6EDE               	movwf	postinc2,c
 21221  005A52  0E0D               	movlw	13
 21222  005A54  6EDD               	movwf	postdec2,c
 21223                           
 21224                           ; BSR set to: 0
 21225                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21226  005A56  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21227  005A5A  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21228  005A5E  0E48               	movlw	72
 21229  005A60  6EDF               	movwf	indf2,c
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21233  005A62  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21234  005A66  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21235  005A6A  0E00               	movlw	0
 21236  005A6C  8EDB               	bsf	plusw2,7,c
 21237                           
 21238                           ;usb_device.c: 1502: }
 21239  005A6E  0012               	return	
 21240  005A70                     l10511:
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;usb_device.c: 1503: else
 21244                           ;usb_device.c: 1504: {
 21245                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 21246  005A70  0100               	movlb	0	; () banked
 21247  005A72  51EC               	movf	(_inPipes+4)& (0+255),w,b
 21248  005A74  010D               	movlb	13	; () banked
 21249  005A76  5D36               	subwf	54,w,b	;volatile
 21250  005A78  0100               	movlb	0	; () banked
 21251  005A7A  51ED               	movf	(_inPipes+5)& (0+255),w,b
 21252  005A7C  010D               	movlb	13	; () banked
 21253  005A7E  5937               	subwfb	55,w,b	;volatile
 21254  005A80  B0D8               	btfsc	status,0,c
 21255  005A82  D004               	goto	l10515
 21256                           
 21257                           ; BSR set to: 13
 21258                           ;usb_device.c: 1508: {
 21259                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 21260  005A84  CD36 F0EC          	movff	3382,_inPipes+4	;volatile
 21261  005A88  CD37 F0ED          	movff	3383,_inPipes+5	;volatile
 21262  005A8C                     l10515:
 21263                           
 21264                           ; BSR set to: 13
 21265                           ;usb_device.c: 1510: }
 21266                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 21267  005A8C  ECAE  F026         	call	_USBCtrlTrfTxService	;wreg free
 21268                           
 21269                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 21270  005A90  0100               	movlb	0	; () banked
 21271  005A92  EE20 F002          	lfsr	2,2
 21272  005A96  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 21273  005A98  26D9               	addwf	fsr2l,f,c
 21274  005A9A  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21275  005A9C  22DA               	addwfc	fsr2h,f,c
 21276  005A9E  0E38               	movlw	56
 21277  005AA0  6EDE               	movwf	postinc2,c
 21278  005AA2  0E0D               	movlw	13
 21279  005AA4  6EDD               	movwf	postdec2,c
 21280                           
 21281                           ; BSR set to: 0
 21282                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21283  005AA6  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21284  005AAA  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21285  005AAE  0E48               	movlw	72
 21286  005AB0  6EDF               	movwf	indf2,c
 21287                           
 21288                           ; BSR set to: 0
 21289                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21290  005AB2  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21291  005AB6  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21292  005ABA  0E00               	movlw	0
 21293  005ABC  8EDB               	bsf	plusw2,7,c
 21294  005ABE  0012               	return	
 21295  005AC0                     __end_of_USBCtrlEPAllowDataStage:
 21296                           	opt stack 0
 21297                           tblptru	equ	0xFF8
 21298                           tblptrh	equ	0xFF7
 21299                           tblptrl	equ	0xFF6
 21300                           tablat	equ	0xFF5
 21301                           prodh	equ	0xFF4
 21302                           prodl	equ	0xFF3
 21303                           intcon	equ	0xFF2
 21304                           intcon2	equ	0xFF1
 21305                           intcon3	equ	0xFF0
 21306                           postinc0	equ	0xFEE
 21307                           wreg	equ	0xFE8
 21308                           indf1	equ	0xFE7
 21309                           postdec1	equ	0xFE5
 21310                           plusw1	equ	0xFE3
 21311                           fsr1h	equ	0xFE2
 21312                           fsr1l	equ	0xFE1
 21313                           indf2	equ	0xFDF
 21314                           postinc2	equ	0xFDE
 21315                           postdec2	equ	0xFDD
 21316                           plusw2	equ	0xFDB
 21317                           fsr2h	equ	0xFDA
 21318                           fsr2l	equ	0xFD9
 21319                           status	equ	0xFD8
 21320                           
 21321 ;; *************** function _USBCheckStdRequest *****************
 21322 ;; Defined at:
 21323 ;;		line 2688 in file "usb_device.c"
 21324 ;; Parameters:    Size  Location     Type
 21325 ;;		None
 21326 ;; Auto vars:     Size  Location     Type
 21327 ;;		None
 21328 ;; Return value:  Size  Location     Type
 21329 ;;                  1    wreg      void 
 21330 ;; Registers used:
 21331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21332 ;; Tracked objects:
 21333 ;;		On entry : 0/0
 21334 ;;		On exit  : 0/0
 21335 ;;		Unchanged: 0/0
 21336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21341 ;;Total ram usage:        0 bytes
 21342 ;; Hardware stack levels used:    1
 21343 ;; Hardware stack levels required when called:    5
 21344 ;; This function calls:
 21345 ;;		_USBStdFeatureReqHandler
 21346 ;;		_USBStdGetDscHandler
 21347 ;;		_USBStdGetStatusHandler
 21348 ;;		_USBStdSetCfgHandler
 21349 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21350 ;; This function is called by:
 21351 ;;		_USBCtrlTrfSetupHandler
 21352 ;; This function uses a non-reentrant model
 21353 ;;
 21354                           
 21355                           	psect	text99
 21356  0049B4                     __ptext99:
 21357                           	opt stack 0
 21358  0049B4                     _USBCheckStdRequest:
 21359                           	opt stack 22
 21360                           
 21361                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 21362                           
 21363                           ; BSR set to: 0
 21364                           ;incstack = 0
 21365  0049B4  010D               	movlb	13	; () banked
 21366  0049B6  3930               	swapf	48,w,b	;volatile
 21367  0049B8  32E8               	rrcf	wreg,f,c
 21368  0049BA  0B03               	andlw	3
 21369  0049BC  0900               	iorlw	0
 21370  0049BE  A4D8               	btfss	status,2,c
 21371  0049C0  0012               	return	
 21372  0049C2  D04F               	goto	l11097
 21373  0049C4                     l344:
 21374                           
 21375                           ; BSR set to: 13
 21376                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 21377  0049C4  0100               	movlb	0	; () banked
 21378  0049C6  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21379                           
 21380                           ; BSR set to: 0
 21381                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 21382  0049C8  0E08               	movlw	8
 21383  0049CA  6E5F               	movwf	_USBDeviceState,c
 21384                           
 21385                           ;usb_device.c: 2698: break;
 21386  0049CC  0012               	return	
 21387  0049CE                     l11067:
 21388                           
 21389                           ;usb_device.c: 2700: USBStdGetDscHandler();
 21390  0049CE  EC41  F01D         	call	_USBStdGetDscHandler	;wreg free
 21391                           
 21392                           ;usb_device.c: 2701: break;
 21393  0049D2  0012               	return	
 21394  0049D4                     l11069:
 21395                           
 21396                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 21397  0049D4  ECCB  F025         	call	_USBStdSetCfgHandler	;wreg free
 21398                           
 21399                           ;usb_device.c: 2704: break;
 21400  0049D8  0012               	return	
 21401  0049DA                     l11071:
 21402                           
 21403                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 21404  0049DA  0EFE               	movlw	low _USBActiveConfiguration
 21405  0049DC  0100               	movlb	0	; () banked
 21406  0049DE  6FE8               	movwf	_inPipes& (0+255),b
 21407  0049E0  0E00               	movlw	high _USBActiveConfiguration
 21408  0049E2  0100               	movlb	0	; () banked
 21409  0049E4  6FE9               	movwf	(_inPipes+1)& (0+255),b
 21410                           
 21411                           ; BSR set to: 0
 21412                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21413  0049E6  0100               	movlb	0	; () banked
 21414  0049E8  81EB               	bsf	(_inPipes+3)& (0+255),0,b
 21415                           
 21416                           ; BSR set to: 0
 21417                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 21418  0049EA  0E01               	movlw	1
 21419  0049EC  0100               	movlb	0	; () banked
 21420  0049EE  6FEC               	movwf	(_inPipes+4)& (0+255),b
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 21424  0049F0  0100               	movlb	0	; () banked
 21425  0049F2  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21426                           
 21427                           ;usb_device.c: 2710: break;
 21428  0049F4  0012               	return	
 21429  0049F6                     l11079:
 21430                           
 21431                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 21432  0049F6  ECB1  F02A         	call	_USBStdGetStatusHandler	;wreg free
 21433                           
 21434                           ;usb_device.c: 2713: break;
 21435  0049FA  0012               	return	
 21436  0049FC                     l11081:
 21437                           
 21438                           ;usb_device.c: 2715: case 3:
 21439                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 21440  0049FC  ECDC  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 21441                           
 21442                           ;usb_device.c: 2717: break;
 21443  004A00  0012               	return	
 21444  004A02                     l11083:
 21445                           
 21446                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 21447  004A02  010D               	movlb	13	; () banked
 21448  004A04  5134               	movf	52,w,b	;volatile
 21449  004A06  0D01               	mullw	1
 21450  004A08  0EB4               	movlw	low _USBAlternateInterface
 21451  004A0A  24F3               	addwf	prodl,w,c
 21452  004A0C  0100               	movlb	0	; () banked
 21453  004A0E  6FE8               	movwf	_inPipes& (0+255),b
 21454  004A10  0E01               	movlw	high _USBAlternateInterface
 21455  004A12  20F4               	addwfc	prodh,w,c
 21456  004A14  0100               	movlb	0	; () banked
 21457  004A16  6FE9               	movwf	(_inPipes+1)& (0+255),b
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21461  004A18  0100               	movlb	0	; () banked
 21462  004A1A  81EB               	bsf	(_inPipes+3)& (0+255),0,b
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 21466  004A1C  0E01               	movlw	1
 21467  004A1E  0100               	movlb	0	; () banked
 21468  004A20  6FEC               	movwf	(_inPipes+4)& (0+255),b
 21469                           
 21470                           ; BSR set to: 0
 21471                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 21472  004A22  0100               	movlb	0	; () banked
 21473  004A24  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21474                           
 21475                           ;usb_device.c: 2723: break;
 21476  004A26  0012               	return	
 21477  004A28                     l353:
 21478                           
 21479                           ; BSR set to: 13
 21480                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 21481  004A28  0100               	movlb	0	; () banked
 21482  004A2A  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21483                           
 21484                           ; BSR set to: 0
 21485                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 21486  004A2C  010D               	movlb	13	; () banked
 21487  004A2E  5134               	movf	52,w,b	;volatile
 21488  004A30  0D01               	mullw	1
 21489  004A32  0EB4               	movlw	low _USBAlternateInterface
 21490  004A34  24F3               	addwf	prodl,w,c
 21491  004A36  6ED9               	movwf	fsr2l,c
 21492  004A38  0E01               	movlw	high _USBAlternateInterface
 21493  004A3A  20F4               	addwfc	prodh,w,c
 21494  004A3C  6EDA               	movwf	fsr2h,c
 21495  004A3E  CD32 FFDF          	movff	3378,indf2	;volatile
 21496                           
 21497                           ;usb_device.c: 2727: break;
 21498  004A42  0012               	return	
 21499  004A44                     l11093:
 21500                           
 21501                           ; BSR set to: 13
 21502                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 21503  004A44  0E00               	movlw	0
 21504  004A46  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21505  004A48  0E02               	movlw	2
 21506  004A4A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21507  004A4C  0E00               	movlw	0
 21508  004A4E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21509  004A50  0E00               	movlw	0
 21510  004A52  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21511  004A54  0E00               	movlw	0
 21512  004A56  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21513  004A58  0E00               	movlw	0
 21514  004A5A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21515  004A5C  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21516                           
 21517                           ;usb_device.c: 2734: }
 21518                           
 21519                           ;usb_device.c: 2733: break;
 21520                           
 21521                           ;usb_device.c: 2732: default:
 21522                           
 21523                           ;usb_device.c: 2731: case 12:
 21524                           
 21525                           ;usb_device.c: 2730: break;
 21526  004A60  0012               	return	
 21527  004A62                     l11097:
 21528  004A62  010D               	movlb	13	; () banked
 21529  004A64  5131               	movf	49,w,b	;volatile
 21530                           
 21531                           ; Switch size 1, requested type "space"
 21532                           ; Number of cases is 11, Range of values is 0 to 12
 21533                           ; switch strategies available:
 21534                           ; Name         Instructions Cycles
 21535                           ; simple_byte           34    18 (average)
 21536                           ;	Chosen strategy is simple_byte
 21537  004A66  0A00               	xorlw	0	; case 0
 21538  004A68  B4D8               	btfsc	status,2,c
 21539  004A6A  D7C5               	goto	l11079
 21540  004A6C  0A01               	xorlw	1	; case 1
 21541  004A6E  B4D8               	btfsc	status,2,c
 21542  004A70  D7C5               	goto	l11081
 21543  004A72  0A02               	xorlw	2	; case 3
 21544  004A74  B4D8               	btfsc	status,2,c
 21545  004A76  D7C2               	goto	l11081
 21546  004A78  0A06               	xorlw	6	; case 5
 21547  004A7A  B4D8               	btfsc	status,2,c
 21548  004A7C  D7A3               	goto	l344
 21549  004A7E  0A03               	xorlw	3	; case 6
 21550  004A80  B4D8               	btfsc	status,2,c
 21551  004A82  D7A5               	goto	l11067
 21552  004A84  0A01               	xorlw	1	; case 7
 21553  004A86  B4D8               	btfsc	status,2,c
 21554  004A88  D7DD               	goto	l11093
 21555  004A8A  0A0F               	xorlw	15	; case 8
 21556  004A8C  B4D8               	btfsc	status,2,c
 21557  004A8E  D7A5               	goto	l11071
 21558  004A90  0A01               	xorlw	1	; case 9
 21559  004A92  B4D8               	btfsc	status,2,c
 21560  004A94  D79F               	goto	l11069
 21561  004A96  0A03               	xorlw	3	; case 10
 21562  004A98  B4D8               	btfsc	status,2,c
 21563  004A9A  D7B3               	goto	l11083
 21564  004A9C  0A01               	xorlw	1	; case 11
 21565  004A9E  B4D8               	btfsc	status,2,c
 21566  004AA0  D7C3               	goto	l353
 21567  004AA2  0A07               	xorlw	7	; case 12
 21568  004AA4  0012               	return	
 21569  004AA6                     __end_of_USBCheckStdRequest:
 21570                           	opt stack 0
 21571                           tblptru	equ	0xFF8
 21572                           tblptrh	equ	0xFF7
 21573                           tblptrl	equ	0xFF6
 21574                           tablat	equ	0xFF5
 21575                           prodh	equ	0xFF4
 21576                           prodl	equ	0xFF3
 21577                           intcon	equ	0xFF2
 21578                           intcon2	equ	0xFF1
 21579                           intcon3	equ	0xFF0
 21580                           postinc0	equ	0xFEE
 21581                           wreg	equ	0xFE8
 21582                           indf1	equ	0xFE7
 21583                           postdec1	equ	0xFE5
 21584                           plusw1	equ	0xFE3
 21585                           fsr1h	equ	0xFE2
 21586                           fsr1l	equ	0xFE1
 21587                           indf2	equ	0xFDF
 21588                           postinc2	equ	0xFDE
 21589                           postdec2	equ	0xFDD
 21590                           plusw2	equ	0xFDB
 21591                           fsr2h	equ	0xFDA
 21592                           fsr2l	equ	0xFD9
 21593                           status	equ	0xFD8
 21594                           
 21595 ;; *************** function _USBStdSetCfgHandler *****************
 21596 ;; Defined at:
 21597 ;;		line 1970 in file "usb_device.c"
 21598 ;; Parameters:    Size  Location     Type
 21599 ;;		None
 21600 ;; Auto vars:     Size  Location     Type
 21601 ;;  i               1   23[COMRAM] unsigned char 
 21602 ;; Return value:  Size  Location     Type
 21603 ;;                  1    wreg      void 
 21604 ;; Registers used:
 21605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21606 ;; Tracked objects:
 21607 ;;		On entry : 0/0
 21608 ;;		On exit  : 0/0
 21609 ;;		Unchanged: 0/0
 21610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21615 ;;Total ram usage:        1 bytes
 21616 ;; Hardware stack levels used:    1
 21617 ;; Hardware stack levels required when called:    4
 21618 ;; This function calls:
 21619 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21620 ;;		_memset
 21621 ;; This function is called by:
 21622 ;;		_USBCheckStdRequest
 21623 ;; This function uses a non-reentrant model
 21624 ;;
 21625                           
 21626                           	psect	text100
 21627  004B96                     __ptext100:
 21628                           	opt stack 0
 21629  004B96                     _USBStdSetCfgHandler:
 21630                           	opt stack 22
 21631                           
 21632                           ;usb_device.c: 1972: uint8_t i;
 21633                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 21634                           
 21635                           ;incstack = 0
 21636  004B96  0100               	movlb	0	; () banked
 21637  004B98  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21638                           
 21639                           ; BSR set to: 0
 21640                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 21641  004B9A  0E27               	movlw	39
 21642  004B9C  6E01               	movwf	memset@p1,c
 21643  004B9E  0E0F               	movlw	15
 21644  004BA0  6E02               	movwf	memset@p1+1,c
 21645  004BA2  0E00               	movlw	0
 21646  004BA4  6E04               	movwf	memset@c+1,c
 21647  004BA6  0E00               	movlw	0
 21648  004BA8  6E03               	movwf	memset@c,c
 21649  004BAA  0E00               	movlw	0
 21650  004BAC  6E06               	movwf	memset@n+1,c
 21651  004BAE  0E02               	movlw	2
 21652  004BB0  6E05               	movwf	memset@n,c
 21653  004BB2  ECF0  F039         	call	_memset	;wreg free
 21654                           
 21655                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 21656  004BB6  0E00               	movlw	0
 21657  004BB8  6E01               	movwf	memset@p1,c
 21658  004BBA  0E0D               	movlw	13
 21659  004BBC  6E02               	movwf	memset@p1+1,c
 21660  004BBE  0E00               	movlw	0
 21661  004BC0  6E04               	movwf	memset@c+1,c
 21662  004BC2  0E00               	movlw	0
 21663  004BC4  6E03               	movwf	memset@c,c
 21664  004BC6  0E00               	movlw	0
 21665  004BC8  6E06               	movwf	memset@n+1,c
 21666  004BCA  0E30               	movlw	48
 21667  004BCC  6E05               	movwf	memset@n,c
 21668  004BCE  ECF0  F039         	call	_memset	;wreg free
 21669                           
 21670                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 21671  004BD2  8C65               	bsf	3941,6,c	;volatile
 21672                           
 21673                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 21674  004BD4  0E00               	movlw	0
 21675  004BD6  6E18               	movwf	USBStdSetCfgHandler@i,c
 21676  004BD8                     l10531:
 21677  004BD8  0E02               	movlw	2
 21678  004BDA  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 21679  004BDC  D001               	goto	l10535
 21680  004BDE  D016               	goto	l10541
 21681  004BE0                     l10535:
 21682                           
 21683                           ;usb_device.c: 1990: {
 21684                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 21685  004BE0  5018               	movf	USBStdSetCfgHandler@i,w,c
 21686  004BE2  0D01               	mullw	1
 21687  004BE4  0E69               	movlw	low _ep_data_in
 21688  004BE6  24F3               	addwf	prodl,w,c
 21689  004BE8  6ED9               	movwf	fsr2l,c
 21690  004BEA  0E01               	movlw	high _ep_data_in
 21691  004BEC  20F4               	addwfc	prodh,w,c
 21692  004BEE  6EDA               	movwf	fsr2h,c
 21693  004BF0  0E00               	movlw	0
 21694  004BF2  6EDF               	movwf	indf2,c
 21695                           
 21696                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 21697  004BF4  5018               	movf	USBStdSetCfgHandler@i,w,c
 21698  004BF6  0D01               	mullw	1
 21699  004BF8  0E66               	movlw	low _ep_data_out
 21700  004BFA  24F3               	addwf	prodl,w,c
 21701  004BFC  6ED9               	movwf	fsr2l,c
 21702  004BFE  0E01               	movlw	high _ep_data_out
 21703  004C00  20F4               	addwfc	prodh,w,c
 21704  004C02  6EDA               	movwf	fsr2h,c
 21705  004C04  0E00               	movlw	0
 21706  004C06  6EDF               	movwf	indf2,c
 21707  004C08  2A18               	incf	USBStdSetCfgHandler@i,f,c
 21708  004C0A  D7E6               	goto	l10531
 21709  004C0C                     l10541:
 21710                           
 21711                           ;usb_device.c: 1993: }
 21712                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 21713  004C0C  0EB4               	movlw	low _USBAlternateInterface
 21714  004C0E  6E01               	movwf	memset@p1,c
 21715  004C10  0E01               	movlw	high _USBAlternateInterface
 21716  004C12  6E02               	movwf	memset@p1+1,c
 21717  004C14  0E00               	movlw	0
 21718  004C16  6E04               	movwf	memset@c+1,c
 21719  004C18  0E00               	movlw	0
 21720  004C1A  6E03               	movwf	memset@c,c
 21721  004C1C  0E00               	movlw	0
 21722  004C1E  6E06               	movwf	memset@n+1,c
 21723  004C20  0E02               	movlw	2
 21724  004C22  6E05               	movwf	memset@n,c
 21725  004C24  ECF0  F039         	call	_memset	;wreg free
 21726                           
 21727                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 21728  004C28  9C65               	bcf	3941,6,c	;volatile
 21729                           
 21730                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 21731  004C2A  0E08               	movlw	8
 21732  004C2C  0100               	movlb	0	; () banked
 21733  004C2E  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 21734  004C30  0E0D               	movlw	13
 21735  004C32  0100               	movlb	0	; () banked
 21736  004C34  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21737                           
 21738                           ; BSR set to: 0
 21739                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 21740  004C36  0E00               	movlw	0
 21741  004C38  6E5D               	movwf	_pBDTEntryEP0OutCurrent,c
 21742  004C3A  0E0D               	movlw	13
 21743  004C3C  6E5E               	movwf	_pBDTEntryEP0OutCurrent+1,c
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 21747  004C3E  C05D  F05B         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 21748  004C42  C05E  F05C         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 21749                           
 21750                           ; BSR set to: 0
 21751                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 21752  004C46  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 21753                           
 21754                           ; BSR set to: 0
 21755                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 21756  004C4A  0100               	movlb	0	; () banked
 21757  004C4C  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 21758  004C4E  A4D8               	btfss	status,2,c
 21759  004C50  D003               	goto	l10557
 21760                           
 21761                           ; BSR set to: 0
 21762                           ;usb_device.c: 2012: {
 21763                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 21764  004C52  0E10               	movlw	16
 21765  004C54  6E5F               	movwf	_USBDeviceState,c
 21766                           
 21767                           ;usb_device.c: 2015: }
 21768  004C56  0012               	return	
 21769  004C58                     l10557:
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;usb_device.c: 2016: else
 21773                           ;usb_device.c: 2017: {
 21774                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 21775  004C58  0E00               	movlw	0
 21776  004C5A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21777  004C5C  0E01               	movlw	1
 21778  004C5E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21779  004C60  0EFE               	movlw	low _USBActiveConfiguration
 21780  004C62  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21781  004C64  0E00               	movlw	high _USBActiveConfiguration
 21782  004C66  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21783  004C68  0E00               	movlw	0
 21784  004C6A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21785  004C6C  0E01               	movlw	1
 21786  004C6E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21787  004C70  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21788                           
 21789                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 21790  004C74  0E20               	movlw	32
 21791  004C76  6E5F               	movwf	_USBDeviceState,c
 21792  004C78  0012               	return	
 21793  004C7A                     __end_of_USBStdSetCfgHandler:
 21794                           	opt stack 0
 21795                           tblptru	equ	0xFF8
 21796                           tblptrh	equ	0xFF7
 21797                           tblptrl	equ	0xFF6
 21798                           tablat	equ	0xFF5
 21799                           prodh	equ	0xFF4
 21800                           prodl	equ	0xFF3
 21801                           intcon	equ	0xFF2
 21802                           intcon2	equ	0xFF1
 21803                           intcon3	equ	0xFF0
 21804                           postinc0	equ	0xFEE
 21805                           wreg	equ	0xFE8
 21806                           indf1	equ	0xFE7
 21807                           postdec1	equ	0xFE5
 21808                           plusw1	equ	0xFE3
 21809                           fsr1h	equ	0xFE2
 21810                           fsr1l	equ	0xFE1
 21811                           indf2	equ	0xFDF
 21812                           postinc2	equ	0xFDE
 21813                           postdec2	equ	0xFDD
 21814                           plusw2	equ	0xFDB
 21815                           fsr2h	equ	0xFDA
 21816                           fsr2l	equ	0xFD9
 21817                           status	equ	0xFD8
 21818                           
 21819 ;; *************** function _memset *****************
 21820 ;; Defined at:
 21821 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 21822 ;; Parameters:    Size  Location     Type
 21823 ;;  p1              2    0[COMRAM] PTR void 
 21824 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 21825 ;;  c               2    2[COMRAM] int 
 21826 ;;  n               2    4[COMRAM] unsigned int 
 21827 ;; Auto vars:     Size  Location     Type
 21828 ;;  p               2    6[COMRAM] PTR unsigned char 
 21829 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 21830 ;; Return value:  Size  Location     Type
 21831 ;;                  2    0[COMRAM] PTR void 
 21832 ;; Registers used:
 21833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21834 ;; Tracked objects:
 21835 ;;		On entry : 0/0
 21836 ;;		On exit  : 0/0
 21837 ;;		Unchanged: 0/0
 21838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21839 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21842 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21843 ;;Total ram usage:        8 bytes
 21844 ;; Hardware stack levels used:    1
 21845 ;; This function calls:
 21846 ;;		Nothing
 21847 ;; This function is called by:
 21848 ;;		_USBDeviceInit
 21849 ;;		_USBStdSetCfgHandler
 21850 ;; This function uses a non-reentrant model
 21851 ;;
 21852                           
 21853                           	psect	text101
 21854  0073E0                     __ptext101:
 21855                           	opt stack 0
 21856  0073E0                     _memset:
 21857                           	opt stack 28
 21858                           
 21859                           ;incstack = 0
 21860  0073E0  C001  F007         	movff	memset@p1,memset@p
 21861  0073E4  C002  F008         	movff	memset@p1+1,memset@p+1
 21862  0073E8  D008               	goto	l10145
 21863  0073EA                     l10141:
 21864  0073EA  C007  FFD9         	movff	memset@p,fsr2l
 21865  0073EE  C008  FFDA         	movff	memset@p+1,fsr2h
 21866  0073F2  C003  FFDF         	movff	memset@c,indf2
 21867  0073F6  4A07               	infsnz	memset@p,f,c
 21868  0073F8  2A08               	incf	memset@p+1,f,c
 21869  0073FA                     l10145:
 21870  0073FA  0605               	decf	memset@n,f,c
 21871  0073FC  A0D8               	btfss	status,0,c
 21872  0073FE  0606               	decf	memset@n+1,f,c
 21873  007400  2805               	incf	memset@n,w,c
 21874  007402  E1F3               	bnz	l10141
 21875  007404  2806               	incf	memset@n+1,w,c
 21876  007406  B4D8               	btfsc	status,2,c
 21877  007408  0012               	return	
 21878  00740A  D7EF               	goto	l10141
 21879  00740C                     __end_of_memset:
 21880                           	opt stack 0
 21881                           tblptru	equ	0xFF8
 21882                           tblptrh	equ	0xFF7
 21883                           tblptrl	equ	0xFF6
 21884                           tablat	equ	0xFF5
 21885                           prodh	equ	0xFF4
 21886                           prodl	equ	0xFF3
 21887                           intcon	equ	0xFF2
 21888                           intcon2	equ	0xFF1
 21889                           intcon3	equ	0xFF0
 21890                           postinc0	equ	0xFEE
 21891                           wreg	equ	0xFE8
 21892                           indf1	equ	0xFE7
 21893                           postdec1	equ	0xFE5
 21894                           plusw1	equ	0xFE3
 21895                           fsr1h	equ	0xFE2
 21896                           fsr1l	equ	0xFE1
 21897                           indf2	equ	0xFDF
 21898                           postinc2	equ	0xFDE
 21899                           postdec2	equ	0xFDD
 21900                           plusw2	equ	0xFDB
 21901                           fsr2h	equ	0xFDA
 21902                           fsr2l	equ	0xFD9
 21903                           status	equ	0xFD8
 21904                           
 21905 ;; *************** function _USBStdGetStatusHandler *****************
 21906 ;; Defined at:
 21907 ;;		line 2131 in file "usb_device.c"
 21908 ;; Parameters:    Size  Location     Type
 21909 ;;		None
 21910 ;; Auto vars:     Size  Location     Type
 21911 ;;  p               2    1[COMRAM] PTR struct __BDT
 21912 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 21913 ;; Return value:  Size  Location     Type
 21914 ;;                  1    wreg      void 
 21915 ;; Registers used:
 21916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21917 ;; Tracked objects:
 21918 ;;		On entry : 0/0
 21919 ;;		On exit  : 0/0
 21920 ;;		Unchanged: 0/0
 21921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21926 ;;Total ram usage:        3 bytes
 21927 ;; Hardware stack levels used:    1
 21928 ;; This function calls:
 21929 ;;		Nothing
 21930 ;; This function is called by:
 21931 ;;		_USBCheckStdRequest
 21932 ;; This function uses a non-reentrant model
 21933 ;;
 21934                           
 21935                           	psect	text102
 21936  005562                     __ptext102:
 21937                           	opt stack 0
 21938  005562                     _USBStdGetStatusHandler:
 21939                           	opt stack 26
 21940                           
 21941                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 21942                           
 21943                           ;incstack = 0
 21944  005562  0E00               	movlw	0
 21945  005564  010D               	movlb	13	; () banked
 21946  005566  6F38               	movwf	56,b	;volatile
 21947                           
 21948                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 21949  005568  0E00               	movlw	0
 21950  00556A  010D               	movlb	13	; () banked
 21951  00556C  6F39               	movwf	57,b	;volatile
 21952                           
 21953                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 21954  00556E  D03C               	goto	l10613
 21955  005570                     l282:
 21956                           
 21957                           ; BSR set to: 13
 21958                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 21959  005570  0100               	movlb	0	; () banked
 21960  005572  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21961                           
 21962                           ;usb_device.c: 2147: }
 21963                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 21964                           
 21965                           ; BSR set to: 13
 21966                           
 21967                           ; BSR set to: 0
 21968                           ;usb_device.c: 2145: {
 21969                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 21970                           
 21971                           ;usb_device.c: 2144: if(0 == 1)
 21972  005574  0101               	movlb	1	; () banked
 21973  005576  0596               	decf	_RemoteWakeup& (0+255),w,b
 21974  005578  A4D8               	btfss	status,2,c
 21975  00557A  D042               	goto	l285
 21976                           
 21977                           ; BSR set to: 1
 21978                           ;usb_device.c: 2150: {
 21979                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 21980  00557C  010D               	movlb	13	; () banked
 21981  00557E  8338               	bsf	56,1,b	;volatile
 21982                           
 21983                           ; BSR set to: 13
 21984                           ;usb_device.c: 2152: }
 21985                           ;usb_device.c: 2153: break;
 21986  005580  D03F               	goto	l285
 21987  005582                     l286:
 21988                           
 21989                           ; BSR set to: 13
 21990                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 21991  005582  0100               	movlb	0	; () banked
 21992  005584  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21993                           
 21994                           ;usb_device.c: 2156: break;
 21995  005586  D03C               	goto	l285
 21996  005588                     l287:
 21997                           
 21998                           ; BSR set to: 13
 21999                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 22000  005588  0100               	movlb	0	; () banked
 22001  00558A  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22002                           
 22003                           ;usb_device.c: 2162: {
 22004                           ;usb_device.c: 2163: BDT_ENTRY *p;
 22005                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 22006  00558C  010D               	movlb	13	; () banked
 22007  00558E  BF34               	btfsc	52,7,b	;volatile
 22008  005590  D00B               	goto	l10603
 22009                           
 22010                           ; BSR set to: 13
 22011                           ;usb_device.c: 2166: {
 22012                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22013  005592  010D               	movlb	13	; () banked
 22014  005594  5134               	movf	52,w,b	;volatile
 22015  005596  0B0F               	andlw	15
 22016  005598  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22017  00559A  5001               	movf	??_USBStdGetStatusHandler,w,c
 22018  00559C  0D02               	mullw	2
 22019  00559E  0E39               	movlw	low _pBDTEntryOut
 22020  0055A0  24F3               	addwf	prodl,w,c
 22021  0055A2  6ED9               	movwf	fsr2l,c
 22022  0055A4  0E01               	movlw	high _pBDTEntryOut
 22023  0055A6  D00A               	goto	L6
 22024  0055A8                     l10603:
 22025                           
 22026                           ; BSR set to: 13
 22027                           ;usb_device.c: 2169: else
 22028                           ;usb_device.c: 2170: {
 22029                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 22030  0055A8  010D               	movlb	13	; () banked
 22031  0055AA  5134               	movf	52,w,b	;volatile
 22032  0055AC  0B0F               	andlw	15
 22033  0055AE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22034  0055B0  5001               	movf	??_USBStdGetStatusHandler,w,c
 22035  0055B2  0D02               	mullw	2
 22036  0055B4  0EEE               	movlw	low _pBDTEntryIn
 22037  0055B6  24F3               	addwf	prodl,w,c
 22038  0055B8  6ED9               	movwf	fsr2l,c
 22039  0055BA  0E00               	movlw	high _pBDTEntryIn
 22040  0055BC                     L6:
 22041  0055BC  20F4               	addwfc	prodh,w,c
 22042  0055BE  6EDA               	movwf	fsr2h,c
 22043  0055C0  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 22044  0055C4  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 22045                           
 22046                           ; BSR set to: 13
 22047                           ;usb_device.c: 2172: }
 22048                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 22049                           
 22050                           ; BSR set to: 13
 22051  0055C8  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22052  0055CC  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22053  0055D0  AEDF               	btfss	indf2,7,c
 22054  0055D2  D016               	goto	l285
 22055                           
 22056                           ; BSR set to: 13
 22057  0055D4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22058  0055D8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22059  0055DC  A4DF               	btfss	indf2,2,c
 22060  0055DE  D010               	goto	l285
 22061                           
 22062                           ; BSR set to: 13
 22063                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 22064  0055E0  0E01               	movlw	1
 22065  0055E2  010D               	movlb	13	; () banked
 22066  0055E4  6F38               	movwf	56,b	;volatile
 22067                           
 22068                           ; BSR set to: 13
 22069                           ;usb_device.c: 2177: }
 22070                           ;usb_device.c: 2178: }
 22071                           
 22072                           ; BSR set to: 13
 22073                           ;usb_device.c: 2176: break;
 22074  0055E6  D00C               	goto	l285
 22075  0055E8                     l10613:
 22076                           
 22077                           ; BSR set to: 13
 22078  0055E8  010D               	movlb	13	; () banked
 22079  0055EA  5130               	movf	48,w,b	;volatile
 22080  0055EC  0B1F               	andlw	31
 22081                           
 22082                           ; Switch size 1, requested type "space"
 22083                           ; Number of cases is 3, Range of values is 0 to 2
 22084                           ; switch strategies available:
 22085                           ; Name         Instructions Cycles
 22086                           ; simple_byte           10     6 (average)
 22087                           ;	Chosen strategy is simple_byte
 22088  0055EE  0A00               	xorlw	0	; case 0
 22089  0055F0  B4D8               	btfsc	status,2,c
 22090  0055F2  D7BE               	goto	l282
 22091  0055F4  0A01               	xorlw	1	; case 1
 22092  0055F6  B4D8               	btfsc	status,2,c
 22093  0055F8  D7C4               	goto	l286
 22094  0055FA  0A03               	xorlw	3	; case 2
 22095  0055FC  B4D8               	btfsc	status,2,c
 22096  0055FE  D7C4               	goto	l287
 22097  005600                     l285:
 22098                           
 22099                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 22100  005600  0100               	movlb	0	; () banked
 22101  005602  AFEB               	btfss	(_inPipes+3)& (0+255),7,b
 22102  005604  0012               	return	
 22103                           
 22104                           ; BSR set to: 0
 22105                           ;usb_device.c: 2181: {
 22106                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 22107  005606  0E38               	movlw	56
 22108  005608  0100               	movlb	0	; () banked
 22109  00560A  6FE8               	movwf	_inPipes& (0+255),b
 22110  00560C  0E0D               	movlw	13
 22111  00560E  0100               	movlb	0	; () banked
 22112  005610  6FE9               	movwf	(_inPipes+1)& (0+255),b
 22113                           
 22114                           ; BSR set to: 0
 22115                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22116  005612  0100               	movlb	0	; () banked
 22117  005614  81EB               	bsf	(_inPipes+3)& (0+255),0,b
 22118                           
 22119                           ; BSR set to: 0
 22120                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 22121  005616  0E02               	movlw	2
 22122  005618  0100               	movlb	0	; () banked
 22123  00561A  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22124  00561C  0012               	return	
 22125  00561E                     __end_of_USBStdGetStatusHandler:
 22126                           	opt stack 0
 22127                           tblptru	equ	0xFF8
 22128                           tblptrh	equ	0xFF7
 22129                           tblptrl	equ	0xFF6
 22130                           tablat	equ	0xFF5
 22131                           prodh	equ	0xFF4
 22132                           prodl	equ	0xFF3
 22133                           intcon	equ	0xFF2
 22134                           intcon2	equ	0xFF1
 22135                           intcon3	equ	0xFF0
 22136                           postinc0	equ	0xFEE
 22137                           wreg	equ	0xFE8
 22138                           indf1	equ	0xFE7
 22139                           postdec1	equ	0xFE5
 22140                           plusw1	equ	0xFE3
 22141                           fsr1h	equ	0xFE2
 22142                           fsr1l	equ	0xFE1
 22143                           indf2	equ	0xFDF
 22144                           postinc2	equ	0xFDE
 22145                           postdec2	equ	0xFDD
 22146                           plusw2	equ	0xFDB
 22147                           fsr2h	equ	0xFDA
 22148                           fsr2l	equ	0xFD9
 22149                           status	equ	0xFD8
 22150                           
 22151 ;; *************** function _USBStdGetDscHandler *****************
 22152 ;; Defined at:
 22153 ;;		line 2045 in file "usb_device.c"
 22154 ;; Parameters:    Size  Location     Type
 22155 ;;		None
 22156 ;; Auto vars:     Size  Location     Type
 22157 ;;		None
 22158 ;; Return value:  Size  Location     Type
 22159 ;;                  1    wreg      void 
 22160 ;; Registers used:
 22161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22162 ;; Tracked objects:
 22163 ;;		On entry : 0/0
 22164 ;;		On exit  : 0/0
 22165 ;;		Unchanged: 0/0
 22166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22170 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22171 ;;Total ram usage:        2 bytes
 22172 ;; Hardware stack levels used:    1
 22173 ;; This function calls:
 22174 ;;		Nothing
 22175 ;; This function is called by:
 22176 ;;		_USBCheckStdRequest
 22177 ;; This function uses a non-reentrant model
 22178 ;;
 22179                           
 22180                           	psect	text103
 22181  003A82                     __ptext103:
 22182                           	opt stack 0
 22183  003A82                     _USBStdGetDscHandler:
 22184                           	opt stack 26
 22185                           
 22186                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;incstack = 0
 22190  003A82  0E80               	movlw	128
 22191  003A84  010D               	movlb	13	; () banked
 22192  003A86  1930               	xorwf	48,w,b	;volatile
 22193  003A88  A4D8               	btfss	status,2,c
 22194  003A8A  0012               	return	
 22195                           
 22196                           ; BSR set to: 13
 22197                           ;usb_device.c: 2048: {
 22198                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 22199  003A8C  0EC0               	movlw	192
 22200  003A8E  0100               	movlb	0	; () banked
 22201  003A90  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22202                           
 22203                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 22204  003A92  D08F               	goto	l10591
 22205  003A94                     l10565:
 22206                           
 22207                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 22208  003A94  0EA4               	movlw	low _device_dsc
 22209  003A96  0100               	movlb	0	; () banked
 22210  003A98  6FE8               	movwf	_inPipes& (0+255),b
 22211  003A9A  0E8F               	movlw	high _device_dsc
 22212  003A9C  0100               	movlb	0	; () banked
 22213  003A9E  6FE9               	movwf	(_inPipes+1)& (0+255),b
 22214                           
 22215                           ; BSR set to: 0
 22216                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 22217  003AA0  0E00               	movlw	0
 22218  003AA2  0100               	movlb	0	; () banked
 22219  003AA4  6FED               	movwf	(_inPipes+5)& (0+255),b
 22220  003AA6  0E12               	movlw	18
 22221  003AA8  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22222                           
 22223                           ;usb_device.c: 2060: break;
 22224  003AAA  0012               	return	
 22225  003AAC                     l10569:
 22226                           
 22227                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 22228  003AAC  010D               	movlb	13	; () banked
 22229  003AAE  5132               	movf	50,w,b	;volatile
 22230  003AB0  A4D8               	btfss	status,2,c
 22231  003AB2  D047               	goto	l10577
 22232                           
 22233                           ; BSR set to: 13
 22234                           ;usb_device.c: 2066: {
 22235                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 22236  003AB4  010D               	movlb	13	; () banked
 22237  003AB6  5132               	movf	50,w,b	;volatile
 22238  003AB8  0D02               	mullw	2
 22239  003ABA  0EA5               	movlw	low _USB_CD_Ptr
 22240  003ABC  24F3               	addwf	prodl,w,c
 22241  003ABE  6EF6               	movwf	tblptrl,c
 22242  003AC0  0E8E               	movlw	high _USB_CD_Ptr
 22243  003AC2  20F4               	addwfc	prodh,w,c
 22244  003AC4  6EF7               	movwf	tblptrh,c
 22245  003AC6                     	if	1	;There are 3 active tblptr bytes
 22246  003AC6  6AF8               	clrf	tblptru,c
 22247  003AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 22248  003ACA  22F8               	addwfc	tblptru,f,c
 22249  003ACC                     	endif
 22250  003ACC  0009               	tblrd		*+
 22251  003ACE  CFF5 F0E8          	movff	tablat,_inPipes
 22252  003AD2  000A               	tblrd		*-
 22253  003AD4  CFF5 F0E9          	movff	tablat,_inPipes+1
 22254                           
 22255                           ; BSR set to: 13
 22256                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 22257  003AD8  0E02               	movlw	2
 22258  003ADA  0100               	movlb	0	; () banked
 22259  003ADC  25E8               	addwf	_inPipes& (0+255),w,b
 22260  003ADE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22261  003AE0  0E00               	movlw	0
 22262  003AE2  0100               	movlb	0	; () banked
 22263  003AE4  21E9               	addwfc	(_inPipes+1)& (0+255),w,b
 22264  003AE6  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22265  003AE8  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22266  003AEC  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22267  003AF0  6AF8               	clrf	tblptru,c
 22268  003AF2  0E0E               	movlw	(high __ramtop+-1)
 22269  003AF4  64F7               	cpfsgt	tblptrh,c
 22270  003AF6  D003               	bra	u7667
 22271  003AF8  0008               	tblrd		*
 22272  003AFA  50F5               	movf	tablat,w,c
 22273  003AFC  D005               	bra	u7660
 22274  003AFE                     u7667:
 22275  003AFE  CFF6 FFE9          	movff	tblptrl,fsr0l
 22276  003B02  CFF7 FFEA          	movff	tblptrh,fsr0h
 22277  003B06  50EF               	movf	indf0,w,c
 22278  003B08                     u7660:
 22279  003B08  0100               	movlb	0	; () banked
 22280  003B0A  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22281                           
 22282                           ; BSR set to: 0
 22283                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 22284  003B0C  0E03               	movlw	3
 22285  003B0E  0100               	movlb	0	; () banked
 22286  003B10  25E8               	addwf	_inPipes& (0+255),w,b
 22287  003B12  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22288  003B14  0E00               	movlw	0
 22289  003B16  0100               	movlb	0	; () banked
 22290  003B18  21E9               	addwfc	(_inPipes+1)& (0+255),w,b
 22291  003B1A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22292  003B1C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22293  003B20  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22294  003B24  6AF8               	clrf	tblptru,c
 22295  003B26  0E0E               	movlw	(high __ramtop+-1)
 22296  003B28  64F7               	cpfsgt	tblptrh,c
 22297  003B2A  D003               	bra	u7677
 22298  003B2C  0008               	tblrd		*
 22299  003B2E  50F5               	movf	tablat,w,c
 22300  003B30  D005               	bra	u7670
 22301  003B32                     u7677:
 22302  003B32  CFF6 FFE9          	movff	tblptrl,fsr0l
 22303  003B36  CFF7 FFEA          	movff	tblptrh,fsr0h
 22304  003B3A  50EF               	movf	indf0,w,c
 22305  003B3C                     u7670:
 22306  003B3C  0100               	movlb	0	; () banked
 22307  003B3E  6FED               	movwf	(_inPipes+5)& (0+255),b
 22308                           
 22309                           ;usb_device.c: 2078: }
 22310  003B40  0012               	return	
 22311  003B42                     l10577:
 22312                           
 22313                           ;usb_device.c: 2079: else
 22314                           ;usb_device.c: 2080: {
 22315                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 22316  003B42  0E00               	movlw	0
 22317  003B44  0100               	movlb	0	; () banked
 22318  003B46  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;usb_device.c: 2082: }
 22322                           ;usb_device.c: 2083: break;
 22323  003B48  0012               	return	
 22324  003B4A                     l10579:
 22325                           
 22326                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 22327  003B4A  0E04               	movlw	4
 22328  003B4C  010D               	movlb	13	; () banked
 22329  003B4E  6132               	cpfslt	50,b	;volatile
 22330  003B50  D028               	goto	l10585
 22331                           
 22332                           ; BSR set to: 13
 22333                           ;usb_device.c: 2089: {
 22334                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 22335  003B52  010D               	movlb	13	; () banked
 22336  003B54  5132               	movf	50,w,b	;volatile
 22337  003B56  0D02               	mullw	2
 22338  003B58  0E7B               	movlw	low _USB_SD_Ptr
 22339  003B5A  24F3               	addwf	prodl,w,c
 22340  003B5C  6EF6               	movwf	tblptrl,c
 22341  003B5E  0E8E               	movlw	high _USB_SD_Ptr
 22342  003B60  20F4               	addwfc	prodh,w,c
 22343  003B62  6EF7               	movwf	tblptrh,c
 22344  003B64                     	if	1	;There are 3 active tblptr bytes
 22345  003B64  6AF8               	clrf	tblptru,c
 22346  003B66  0E00               	movlw	low (__mediumconst shr (0+16))
 22347  003B68  22F8               	addwfc	tblptru,f,c
 22348  003B6A                     	endif
 22349  003B6A  0009               	tblrd		*+
 22350  003B6C  CFF5 F0E8          	movff	tablat,_inPipes
 22351  003B70  000A               	tblrd		*-
 22352  003B72  CFF5 F0E9          	movff	tablat,_inPipes+1
 22353                           
 22354                           ; BSR set to: 13
 22355                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 22356  003B76  C0E8  FFF6         	movff	_inPipes,tblptrl
 22357  003B7A  C0E9  FFF7         	movff	_inPipes+1,tblptrh
 22358  003B7E  6AF8               	clrf	tblptru,c
 22359  003B80  0E0E               	movlw	(high __ramtop+-1)
 22360  003B82  64F7               	cpfsgt	tblptrh,c
 22361  003B84  D003               	bra	u7697
 22362  003B86  0008               	tblrd		*
 22363  003B88  50F5               	movf	tablat,w,c
 22364  003B8A  D005               	bra	u7690
 22365  003B8C                     u7697:
 22366  003B8C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22367  003B90  CFF7 FFEA          	movff	tblptrh,fsr0h
 22368  003B94  50EF               	movf	indf0,w,c
 22369  003B96                     u7690:
 22370  003B96  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22371  003B98  5001               	movf	??_USBStdGetDscHandler,w,c
 22372  003B9A  0100               	movlb	0	; () banked
 22373  003B9C  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22374  003B9E  6BED               	clrf	(_inPipes+5)& (0+255),b
 22375                           
 22376                           ;usb_device.c: 2094: }
 22377  003BA0  0012               	return	
 22378  003BA2                     l10585:
 22379                           
 22380                           ;usb_device.c: 2104: else
 22381                           ;usb_device.c: 2105: {
 22382                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 22383  003BA2  0E00               	movlw	0
 22384  003BA4  0100               	movlb	0	; () banked
 22385  003BA6  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;usb_device.c: 2107: }
 22389                           ;usb_device.c: 2108: break;
 22390  003BA8  0012               	return	
 22391  003BAA                     l10587:
 22392                           
 22393                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 22394  003BAA  0E00               	movlw	0
 22395  003BAC  0100               	movlb	0	; () banked
 22396  003BAE  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22397                           
 22398                           ; BSR set to: 0
 22399                           ;usb_device.c: 2112: }
 22400                           
 22401                           ;usb_device.c: 2111: break;
 22402  003BB0  0012               	return	
 22403  003BB2                     l10591:
 22404                           
 22405                           ; BSR set to: 0
 22406  003BB2  010D               	movlb	13	; () banked
 22407  003BB4  5133               	movf	51,w,b	;volatile
 22408                           
 22409                           ; Switch size 1, requested type "space"
 22410                           ; Number of cases is 3, Range of values is 1 to 3
 22411                           ; switch strategies available:
 22412                           ; Name         Instructions Cycles
 22413                           ; simple_byte           10     6 (average)
 22414                           ;	Chosen strategy is simple_byte
 22415  003BB6  0A01               	xorlw	1	; case 1
 22416  003BB8  B4D8               	btfsc	status,2,c
 22417  003BBA  D76C               	goto	l10565
 22418  003BBC  0A03               	xorlw	3	; case 2
 22419  003BBE  B4D8               	btfsc	status,2,c
 22420  003BC0  D775               	goto	l10569
 22421  003BC2  0A01               	xorlw	1	; case 3
 22422  003BC4  B4D8               	btfsc	status,2,c
 22423  003BC6  D7C1               	goto	l10579
 22424  003BC8  D7F0               	goto	l10587
 22425  003BCA                     __end_of_USBStdGetDscHandler:
 22426                           	opt stack 0
 22427                           tblptru	equ	0xFF8
 22428                           tblptrh	equ	0xFF7
 22429                           tblptrl	equ	0xFF6
 22430                           tablat	equ	0xFF5
 22431                           prodh	equ	0xFF4
 22432                           prodl	equ	0xFF3
 22433                           intcon	equ	0xFF2
 22434                           intcon2	equ	0xFF1
 22435                           intcon3	equ	0xFF0
 22436                           indf0	equ	0xFEF
 22437                           postinc0	equ	0xFEE
 22438                           fsr0h	equ	0xFEA
 22439                           fsr0l	equ	0xFE9
 22440                           wreg	equ	0xFE8
 22441                           indf1	equ	0xFE7
 22442                           postdec1	equ	0xFE5
 22443                           plusw1	equ	0xFE3
 22444                           fsr1h	equ	0xFE2
 22445                           fsr1l	equ	0xFE1
 22446                           indf2	equ	0xFDF
 22447                           postinc2	equ	0xFDE
 22448                           postdec2	equ	0xFDD
 22449                           plusw2	equ	0xFDB
 22450                           fsr2h	equ	0xFDA
 22451                           fsr2l	equ	0xFD9
 22452                           status	equ	0xFD8
 22453                           
 22454 ;; *************** function _USBStdFeatureReqHandler *****************
 22455 ;; Defined at:
 22456 ;;		line 2756 in file "usb_device.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;		None
 22459 ;; Auto vars:     Size  Location     Type
 22460 ;;  p               2   27[COMRAM] PTR struct __BDT
 22461 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 22462 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 22463 ;;		 -> UEP0(1), 
 22464 ;;  current_ep_d    1   26[COMRAM] struct .
 22465 ;; Return value:  Size  Location     Type
 22466 ;;                  1    wreg      void 
 22467 ;; Registers used:
 22468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22469 ;; Tracked objects:
 22470 ;;		On entry : 0/0
 22471 ;;		On exit  : 0/0
 22472 ;;		Unchanged: 0/0
 22473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22475 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22477 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22478 ;;Total ram usage:        6 bytes
 22479 ;; Hardware stack levels used:    1
 22480 ;; Hardware stack levels required when called:    4
 22481 ;; This function calls:
 22482 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22483 ;; This function is called by:
 22484 ;;		_USBCheckStdRequest
 22485 ;; This function uses a non-reentrant model
 22486 ;;
 22487                           
 22488                           	psect	text104
 22489  001FB8                     __ptext104:
 22490                           	opt stack 0
 22491  001FB8                     _USBStdFeatureReqHandler:
 22492                           	opt stack 22
 22493                           
 22494                           ;usb_device.c: 2758: BDT_ENTRY *p;
 22495                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 22496                           ;usb_device.c: 2763: unsigned char* pUEP;
 22497                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 22498                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 22499                           
 22500                           ;incstack = 0
 22501  001FB8  010D               	movlb	13	; () banked
 22502  001FBA  0532               	decf	50,w,b	;volatile
 22503  001FBC  A4D8               	btfss	status,2,c
 22504  001FBE  D012               	goto	l359
 22505                           
 22506                           ; BSR set to: 13
 22507  001FC0  010D               	movlb	13	; () banked
 22508  001FC2  5130               	movf	48,w,b	;volatile
 22509  001FC4  0B1F               	andlw	31
 22510  001FC6  0900               	iorlw	0
 22511  001FC8  A4D8               	btfss	status,2,c
 22512  001FCA  D00C               	goto	l359
 22513                           
 22514                           ; BSR set to: 13
 22515                           ;usb_device.c: 2803: {
 22516                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 22517  001FCC  0100               	movlb	0	; () banked
 22518  001FCE  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 22522  001FD0  0E03               	movlw	3
 22523  001FD2  010D               	movlb	13	; () banked
 22524  001FD4  1931               	xorwf	49,w,b	;volatile
 22525  001FD6  A4D8               	btfss	status,2,c
 22526  001FD8  D002               	goto	l10631
 22527                           
 22528                           ; BSR set to: 13
 22529                           ;usb_device.c: 2806: RemoteWakeup = 1;
 22530  001FDA  0E01               	movlw	1
 22531  001FDC  D001               	goto	L7
 22532  001FDE                     l10631:
 22533                           
 22534                           ;usb_device.c: 2807: else
 22535                           ;usb_device.c: 2808: RemoteWakeup = 0;
 22536  001FDE  0E00               	movlw	0
 22537  001FE0                     L7:
 22538  001FE0  0101               	movlb	1	; () banked
 22539  001FE2  6F96               	movwf	_RemoteWakeup& (0+255),b
 22540  001FE4                     l359:
 22541                           
 22542                           ;usb_device.c: 2809: }
 22543                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 22544                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 22545                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 22546                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 22547  001FE4  010D               	movlb	13	; () banked
 22548  001FE6  5132               	movf	50,w,b	;volatile
 22549  001FE8  A4D8               	btfss	status,2,c
 22550  001FEA  0012               	return	
 22551                           
 22552                           ; BSR set to: 13
 22553  001FEC  010D               	movlb	13	; () banked
 22554  001FEE  5130               	movf	48,w,b	;volatile
 22555  001FF0  0B1F               	andlw	31
 22556  001FF2  0A02               	xorlw	2
 22557  001FF4  A4D8               	btfss	status,2,c
 22558  001FF6  0012               	return	
 22559                           
 22560                           ; BSR set to: 13
 22561  001FF8  010D               	movlb	13	; () banked
 22562  001FFA  5134               	movf	52,w,b	;volatile
 22563  001FFC  0B0F               	andlw	15
 22564  001FFE  0900               	iorlw	0
 22565  002000  B4D8               	btfsc	status,2,c
 22566  002002  0012               	return	
 22567                           
 22568                           ; BSR set to: 13
 22569  002004  010D               	movlb	13	; () banked
 22570  002006  5134               	movf	52,w,b	;volatile
 22571  002008  0B0F               	andlw	15
 22572  00200A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22573  00200C  0E03               	movlw	3
 22574  00200E  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 22575  002010  0012               	return	
 22576                           
 22577                           ; BSR set to: 13
 22578  002012  0E20               	movlw	32
 22579  002014  185F               	xorwf	_USBDeviceState,w,c
 22580  002016  A4D8               	btfss	status,2,c
 22581  002018  0012               	return	
 22582                           
 22583                           ; BSR set to: 13
 22584                           ;usb_device.c: 2816: {
 22585                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 22586  00201A  0100               	movlb	0	; () banked
 22587  00201C  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22588                           
 22589                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 22590  00201E  010D               	movlb	13	; () banked
 22591  002020  BF34               	btfsc	52,7,b	;volatile
 22592  002022  D01B               	goto	l10645
 22593                           
 22594                           ; BSR set to: 13
 22595                           ;usb_device.c: 2823: {
 22596                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22597  002024  010D               	movlb	13	; () banked
 22598  002026  5134               	movf	52,w,b	;volatile
 22599  002028  0B0F               	andlw	15
 22600  00202A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22601  00202C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22602  00202E  0D02               	mullw	2
 22603  002030  0E39               	movlw	low _pBDTEntryOut
 22604  002032  24F3               	addwf	prodl,w,c
 22605  002034  6ED9               	movwf	fsr2l,c
 22606  002036  0E01               	movlw	high _pBDTEntryOut
 22607  002038  20F4               	addwfc	prodh,w,c
 22608  00203A  6EDA               	movwf	fsr2h,c
 22609  00203C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 22610  002040  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 22611                           
 22612                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 22613  002044  010D               	movlb	13	; () banked
 22614  002046  5134               	movf	52,w,b	;volatile
 22615  002048  0B0F               	andlw	15
 22616  00204A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22617  00204C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22618  00204E  0D01               	mullw	1
 22619  002050  0E66               	movlw	low _ep_data_out
 22620  002052  24F3               	addwf	prodl,w,c
 22621  002054  6ED9               	movwf	fsr2l,c
 22622  002056  0E01               	movlw	high _ep_data_out
 22623  002058  D01A               	goto	L8
 22624  00205A                     l10645:
 22625                           
 22626                           ; BSR set to: 13
 22627                           ;usb_device.c: 2827: else
 22628                           ;usb_device.c: 2828: {
 22629                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 22630  00205A  010D               	movlb	13	; () banked
 22631  00205C  5134               	movf	52,w,b	;volatile
 22632  00205E  0B0F               	andlw	15
 22633  002060  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22634  002062  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22635  002064  0D02               	mullw	2
 22636  002066  0EEE               	movlw	low _pBDTEntryIn
 22637  002068  24F3               	addwf	prodl,w,c
 22638  00206A  6ED9               	movwf	fsr2l,c
 22639  00206C  0E00               	movlw	high _pBDTEntryIn
 22640  00206E  20F4               	addwfc	prodh,w,c
 22641  002070  6EDA               	movwf	fsr2h,c
 22642  002072  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 22643  002076  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 22644                           
 22645                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 22646  00207A  010D               	movlb	13	; () banked
 22647  00207C  5134               	movf	52,w,b	;volatile
 22648  00207E  0B0F               	andlw	15
 22649  002080  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22650  002082  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22651  002084  0D01               	mullw	1
 22652  002086  0E69               	movlw	low _ep_data_in
 22653  002088  24F3               	addwf	prodl,w,c
 22654  00208A  6ED9               	movwf	fsr2l,c
 22655  00208C  0E01               	movlw	high _ep_data_in
 22656  00208E                     L8:
 22657  00208E  20F4               	addwfc	prodh,w,c
 22658  002090  6EDA               	movwf	fsr2h,c
 22659  002092  50DF               	movf	indf2,w,c
 22660  002094  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 22661                           
 22662                           ; BSR set to: 13
 22663                           ;usb_device.c: 2831: }
 22664                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 22665                           
 22666                           ; BSR set to: 13
 22667  002096  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 22668  002098  D006               	goto	l10651
 22669                           
 22670                           ; BSR set to: 13
 22671                           ;usb_device.c: 2838: {
 22672                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 22673  00209A  0EFB               	movlw	251
 22674  00209C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 22675  00209E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 22676  0020A0  0EFF               	movlw	255
 22677  0020A2  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 22678  0020A4  D004               	goto	L9
 22679  0020A6                     l10651:
 22680                           
 22681                           ; BSR set to: 13
 22682                           ;usb_device.c: 2841: else
 22683                           ;usb_device.c: 2842: {
 22684                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 22685  0020A6  0E04               	movlw	4
 22686  0020A8  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 22687  0020AA  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 22688  0020AC  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 22689  0020AE                     L9:
 22690  0020AE  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 22691                           
 22692                           ; BSR set to: 13
 22693                           ;usb_device.c: 2844: }
 22694                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 22695                           
 22696                           ; BSR set to: 13
 22697  0020B0  010D               	movlb	13	; () banked
 22698  0020B2  BF34               	btfsc	52,7,b	;volatile
 22699  0020B4  D00B               	goto	l10657
 22700                           
 22701                           ; BSR set to: 13
 22702                           ;usb_device.c: 2850: {
 22703                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 22704  0020B6  010D               	movlb	13	; () banked
 22705  0020B8  5134               	movf	52,w,b	;volatile
 22706  0020BA  0B0F               	andlw	15
 22707  0020BC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22708  0020BE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22709  0020C0  0D02               	mullw	2
 22710  0020C2  0E39               	movlw	low _pBDTEntryOut
 22711  0020C4  24F3               	addwf	prodl,w,c
 22712  0020C6  6ED9               	movwf	fsr2l,c
 22713  0020C8  0E01               	movlw	high _pBDTEntryOut
 22714  0020CA  D00A               	goto	L10
 22715  0020CC                     l10657:
 22716                           
 22717                           ; BSR set to: 13
 22718                           ;usb_device.c: 2853: else
 22719                           ;usb_device.c: 2854: {
 22720                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 22721  0020CC  010D               	movlb	13	; () banked
 22722  0020CE  5134               	movf	52,w,b	;volatile
 22723  0020D0  0B0F               	andlw	15
 22724  0020D2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22725  0020D4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22726  0020D6  0D02               	mullw	2
 22727  0020D8  0EEE               	movlw	low _pBDTEntryIn
 22728  0020DA  24F3               	addwf	prodl,w,c
 22729  0020DC  6ED9               	movwf	fsr2l,c
 22730  0020DE  0E00               	movlw	high _pBDTEntryIn
 22731  0020E0                     L10:
 22732  0020E0  20F4               	addwfc	prodh,w,c
 22733  0020E2  6EDA               	movwf	fsr2h,c
 22734  0020E4  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 22735  0020E8  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 22736                           
 22737                           ; BSR set to: 13
 22738                           ;usb_device.c: 2856: }
 22739                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 22740                           
 22741                           ; BSR set to: 13
 22742  0020EC  0E03               	movlw	3
 22743  0020EE  010D               	movlb	13	; () banked
 22744  0020F0  1931               	xorwf	49,w,b	;volatile
 22745  0020F2  A4D8               	btfss	status,2,c
 22746  0020F4  D02F               	goto	l10673
 22747                           
 22748                           ; BSR set to: 13
 22749                           ;usb_device.c: 2860: {
 22750                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 22751  0020F6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22752  0020FA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22753  0020FE  AEDF               	btfss	indf2,7,c
 22754  002100  D01C               	goto	l10669
 22755                           
 22756                           ; BSR set to: 13
 22757                           ;usb_device.c: 2862: {
 22758                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 22759  002102  010D               	movlb	13	; () banked
 22760  002104  BF34               	btfsc	52,7,b	;volatile
 22761  002106  D00B               	goto	l10667
 22762                           
 22763                           ; BSR set to: 13
 22764                           ;usb_device.c: 2866: {
 22765                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22766  002108  010D               	movlb	13	; () banked
 22767  00210A  5134               	movf	52,w,b	;volatile
 22768  00210C  0B0F               	andlw	15
 22769  00210E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22770  002110  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22771  002112  0D01               	mullw	1
 22772  002114  0E66               	movlw	low _ep_data_out
 22773  002116  24F3               	addwf	prodl,w,c
 22774  002118  6ED9               	movwf	fsr2l,c
 22775  00211A  0E01               	movlw	high _ep_data_out
 22776  00211C  D00A               	goto	L11
 22777  00211E                     l10667:
 22778                           
 22779                           ;usb_device.c: 2869: else
 22780                           ;usb_device.c: 2870: {
 22781                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 22782  00211E  010D               	movlb	13	; () banked
 22783  002120  5134               	movf	52,w,b	;volatile
 22784  002122  0B0F               	andlw	15
 22785  002124  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22786  002126  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22787  002128  0D01               	mullw	1
 22788  00212A  0E69               	movlw	low _ep_data_in
 22789  00212C  24F3               	addwf	prodl,w,c
 22790  00212E  6ED9               	movwf	fsr2l,c
 22791  002130  0E01               	movlw	high _ep_data_in
 22792  002132                     L11:
 22793  002132  20F4               	addwfc	prodh,w,c
 22794  002134  6EDA               	movwf	fsr2h,c
 22795  002136  0101               	movlb	1	; () banked
 22796  002138  82DF               	bsf	indf2,1,c
 22797  00213A                     l10669:
 22798                           
 22799                           ;usb_device.c: 2872: }
 22800                           ;usb_device.c: 2873: }
 22801                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 22802  00213A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22803  00213E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22804  002142  0E00               	movlw	0
 22805  002144  84DB               	bsf	plusw2,2,c
 22806                           
 22807                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 22808  002146  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22809  00214A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22810  00214E  0E00               	movlw	0
 22811  002150  8EDB               	bsf	plusw2,7,c
 22812                           
 22813                           ;usb_device.c: 2878: }
 22814  002152  0012               	return	
 22815  002154                     l10673:
 22816                           
 22817                           ;usb_device.c: 2879: else
 22818                           ;usb_device.c: 2880: {
 22819                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22820  002154  0E04               	movlw	4
 22821  002156  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 22822  002158  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 22823  00215A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 22824  00215C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 22825                           
 22826                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 22827  00215E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22828  002162  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22829  002166  AEDF               	btfss	indf2,7,c
 22830  002168  D01B               	goto	l10683
 22831                           
 22832                           ;usb_device.c: 2887: {
 22833                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 22834  00216A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22835  00216E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22836  002172  0E7F               	movlw	127
 22837  002174  16DF               	andwf	indf2,f,c
 22838                           
 22839                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 22840  002176  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22841  00217A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22842  00217E  0E00               	movlw	0
 22843  002180  8CDB               	bsf	plusw2,6,c
 22844                           
 22845                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22846  002182  0E00               	movlw	0
 22847  002184  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22848  002186  0E05               	movlw	5
 22849  002188  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22850  00218A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22851  00218E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22852  002192  0E00               	movlw	0
 22853  002194  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22854  002196  0E02               	movlw	2
 22855  002198  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22856  00219A  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22857                           
 22858                           ;usb_device.c: 2893: }
 22859  00219E  D006               	goto	l10685
 22860  0021A0                     l10683:
 22861                           
 22862                           ;usb_device.c: 2894: else
 22863                           ;usb_device.c: 2895: {
 22864                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 22865  0021A0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22866  0021A4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22867  0021A8  0E00               	movlw	0
 22868  0021AA  8CDB               	bsf	plusw2,6,c
 22869  0021AC                     l10685:
 22870                           
 22871                           ;usb_device.c: 2898: }
 22872                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 22873  0021AC  0E04               	movlw	4
 22874  0021AE  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 22875  0021B0  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 22876  0021B2  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 22877  0021B4  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 22878                           
 22879                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 22880  0021B6  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 22881  0021B8  D006               	goto	l378
 22882  0021BA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22883  0021BE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22884  0021C2  AEDF               	btfss	indf2,7,c
 22885  0021C4  D031               	goto	l10699
 22886  0021C6                     l378:
 22887                           
 22888                           ;usb_device.c: 2909: {
 22889                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 22890  0021C6  010D               	movlb	13	; () banked
 22891  0021C8  BF34               	btfsc	52,7,b	;volatile
 22892  0021CA  D00B               	goto	l10693
 22893                           
 22894                           ; BSR set to: 13
 22895                           ;usb_device.c: 2911: {
 22896                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22897  0021CC  010D               	movlb	13	; () banked
 22898  0021CE  5134               	movf	52,w,b	;volatile
 22899  0021D0  0B0F               	andlw	15
 22900  0021D2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22901  0021D4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22902  0021D6  0D01               	mullw	1
 22903  0021D8  0E66               	movlw	low _ep_data_out
 22904  0021DA  24F3               	addwf	prodl,w,c
 22905  0021DC  6ED9               	movwf	fsr2l,c
 22906  0021DE  0E01               	movlw	high _ep_data_out
 22907  0021E0  D00A               	goto	L12
 22908  0021E2                     l10693:
 22909                           
 22910                           ;usb_device.c: 2914: else
 22911                           ;usb_device.c: 2915: {
 22912                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 22913  0021E2  010D               	movlb	13	; () banked
 22914  0021E4  5134               	movf	52,w,b	;volatile
 22915  0021E6  0B0F               	andlw	15
 22916  0021E8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22917  0021EA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22918  0021EC  0D01               	mullw	1
 22919  0021EE  0E69               	movlw	low _ep_data_in
 22920  0021F0  24F3               	addwf	prodl,w,c
 22921  0021F2  6ED9               	movwf	fsr2l,c
 22922  0021F4  0E01               	movlw	high _ep_data_in
 22923  0021F6                     L12:
 22924  0021F6  20F4               	addwfc	prodh,w,c
 22925  0021F8  6EDA               	movwf	fsr2h,c
 22926  0021FA  0101               	movlb	1	; () banked
 22927  0021FC  92DF               	bcf	indf2,1,c
 22928                           
 22929                           ; BSR set to: 1
 22930                           ;usb_device.c: 2917: }
 22931                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22932                           
 22933                           ; BSR set to: 1
 22934  0021FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22935  002202  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22936  002206  0E3B               	movlw	59
 22937  002208  16DF               	andwf	indf2,f,c
 22938                           
 22939                           ; BSR set to: 1
 22940                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 22941  00220A  0E00               	movlw	0
 22942  00220C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22943  00220E  0E05               	movlw	5
 22944  002210  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22945  002212  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 22946  002216  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 22947  00221A  0E00               	movlw	0
 22948  00221C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22949  00221E  0E02               	movlw	2
 22950  002220  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22951  002222  EC18  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22952                           
 22953                           ;usb_device.c: 2923: }
 22954  002226  D006               	goto	l10701
 22955  002228                     l10699:
 22956                           
 22957                           ;usb_device.c: 2924: else
 22958                           ;usb_device.c: 2925: {
 22959                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 22960  002228  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 22961  00222C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 22962  002230  0E3B               	movlw	59
 22963  002232  16DF               	andwf	indf2,f,c
 22964  002234                     l10701:
 22965                           
 22966                           ;usb_device.c: 2928: }
 22967                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 22968  002234  010D               	movlb	13	; () banked
 22969  002236  5134               	movf	52,w,b	;volatile
 22970  002238  0B0F               	andlw	15
 22971  00223A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22972  00223C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 22973  00223E  0D01               	mullw	1
 22974  002240  0E26               	movlw	38
 22975  002242  24F3               	addwf	prodl,w,c
 22976  002244  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 22977  002246  0E0F               	movlw	15
 22978  002248  20F4               	addwfc	prodh,w,c
 22979  00224A  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 22980                           
 22981                           ; BSR set to: 13
 22982                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 22983  00224C  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 22984  002250  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 22985  002254  0EFE               	movlw	254
 22986  002256  16DF               	andwf	indf2,f,c
 22987                           
 22988                           ; BSR set to: 13
 22989  002258  0012               	return	
 22990  00225A                     __end_of_USBStdFeatureReqHandler:
 22991                           	opt stack 0
 22992                           tblptru	equ	0xFF8
 22993                           tblptrh	equ	0xFF7
 22994                           tblptrl	equ	0xFF6
 22995                           tablat	equ	0xFF5
 22996                           prodh	equ	0xFF4
 22997                           prodl	equ	0xFF3
 22998                           intcon	equ	0xFF2
 22999                           intcon2	equ	0xFF1
 23000                           intcon3	equ	0xFF0
 23001                           indf0	equ	0xFEF
 23002                           postinc0	equ	0xFEE
 23003                           fsr0h	equ	0xFEA
 23004                           fsr0l	equ	0xFE9
 23005                           wreg	equ	0xFE8
 23006                           indf1	equ	0xFE7
 23007                           postdec1	equ	0xFE5
 23008                           plusw1	equ	0xFE3
 23009                           fsr1h	equ	0xFE2
 23010                           fsr1l	equ	0xFE1
 23011                           indf2	equ	0xFDF
 23012                           postinc2	equ	0xFDE
 23013                           postdec2	equ	0xFDD
 23014                           plusw2	equ	0xFDB
 23015                           fsr2h	equ	0xFDA
 23016                           fsr2l	equ	0xFD9
 23017                           status	equ	0xFD8
 23018                           
 23019 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 23020 ;; Defined at:
 23021 ;;		line 54 in file "usb_events.c"
 23022 ;; Parameters:    Size  Location     Type
 23023 ;;  event           2   15[COMRAM] enum E8309
 23024 ;;  pdata           2   17[COMRAM] PTR void 
 23025 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 23026 ;;		 -> BDT(48), 
 23027 ;;  size            2   19[COMRAM] unsigned int 
 23028 ;; Auto vars:     Size  Location     Type
 23029 ;;		None
 23030 ;; Return value:  Size  Location     Type
 23031 ;;                  1    wreg      unsigned char 
 23032 ;; Registers used:
 23033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23034 ;; Tracked objects:
 23035 ;;		On entry : 0/0
 23036 ;;		On exit  : 0/0
 23037 ;;		Unchanged: 0/0
 23038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23039 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23041 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23043 ;;Total ram usage:        8 bytes
 23044 ;; Hardware stack levels used:    1
 23045 ;; Hardware stack levels required when called:    3
 23046 ;; This function calls:
 23047 ;;		_APP_DeviceCustomHIDInitialize
 23048 ;;		_APP_DeviceMSDInitialize
 23049 ;;		_MSDTransferTerminated
 23050 ;;		_SYSTEM_Initialize
 23051 ;;		_USBCheckHIDRequest
 23052 ;;		_USBCheckMSDRequest
 23053 ;; This function is called by:
 23054 ;;		_USBDeviceTasks
 23055 ;;		_USBStdSetCfgHandler
 23056 ;;		_USBSuspend
 23057 ;;		_USBWakeFromSuspend
 23058 ;;		_USBCtrlTrfSetupHandler
 23059 ;;		_USBCheckStdRequest
 23060 ;;		_USBStdFeatureReqHandler
 23061 ;; This function uses a non-reentrant model
 23062 ;;
 23063                           
 23064                           	psect	text105
 23065  005E30                     __ptext105:
 23066                           	opt stack 0
 23067  005E30                     _USER_USB_CALLBACK_EVENT_HANDLER:
 23068                           	opt stack 26
 23069                           
 23070                           ;usb_events.c: 56: switch((int)event)
 23071                           
 23072                           ;incstack = 0
 23073  005E30  D019               	goto	l10165
 23074  005E32                     l10149:
 23075                           
 23076                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 23077  005E32  0E01               	movlw	1
 23078  005E34  EC6A  F035         	call	_SYSTEM_Initialize
 23079                           
 23080                           ;usb_events.c: 79: break;
 23081  005E38  0012               	return	
 23082  005E3A                     l10151:
 23083                           
 23084                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 23085  005E3A  0E02               	movlw	2
 23086  005E3C  EC6A  F035         	call	_SYSTEM_Initialize
 23087                           
 23088                           ;usb_events.c: 90: break;
 23089  005E40  0012               	return	
 23090  005E42                     l10153:
 23091                           
 23092                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 23093  005E42  EC60  F039         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 23094                           
 23095                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 23096  005E46  EC26  F03C         	call	_APP_DeviceMSDInitialize	;wreg free
 23097                           
 23098                           ;usb_events.c: 100: break;
 23099                           
 23100                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 23101                           
 23102                           ;usb_events.c: 97: break;
 23103  005E4A  0012               	return	
 23104  005E4C                     l10157:
 23105                           
 23106                           ;usb_events.c: 105: USBCheckHIDRequest();
 23107  005E4C  ECDE  F023         	call	_USBCheckHIDRequest	;wreg free
 23108                           
 23109                           ;usb_events.c: 108: USBCheckMSDRequest();
 23110  005E50  EC3D  F026         	call	_USBCheckMSDRequest	;wreg free
 23111                           
 23112                           ;usb_events.c: 112: break;
 23113                           
 23114                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 23115                           
 23116                           ;usb_events.c: 109: break;
 23117  005E54  0012               	return	
 23118  005E56                     l10161:
 23119                           
 23120                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 23121  005E56  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 23122  005E5A  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 23123  005E5E  EC14  F035         	call	_MSDTransferTerminated	;wreg free
 23124                           
 23125                           ;usb_events.c: 129: }
 23126                           
 23127                           ;usb_events.c: 128: break;
 23128                           
 23129                           ;usb_events.c: 127: default:
 23130                           
 23131                           ;usb_events.c: 125: break;
 23132  005E62  0012               	return	
 23133  005E64                     l10165:
 23134  005E64  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 23135  005E68  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 23136                           
 23137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23138                           ; Switch size 1, requested type "space"
 23139                           ; Number of cases is 2, Range of values is 0 to 127
 23140                           ; switch strategies available:
 23141                           ; Name         Instructions Cycles
 23142                           ; simple_byte            7     4 (average)
 23143                           ;	Chosen strategy is simple_byte
 23144  005E6C  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 23145  005E6E  0A00               	xorlw	0	; case 0
 23146  005E70  B4D8               	btfsc	status,2,c
 23147  005E72  D004               	goto	l15403
 23148  005E74  0A7F               	xorlw	127	; case 127
 23149  005E76  A4D8               	btfss	status,2,c
 23150  005E78  0012               	return	
 23151  005E7A  D01A               	goto	l15405
 23152  005E7C                     l15403:
 23153                           
 23154                           ; Switch size 1, requested type "space"
 23155                           ; Number of cases is 8, Range of values is 1 to 117
 23156                           ; switch strategies available:
 23157                           ; Name         Instructions Cycles
 23158                           ; simple_byte           25    13 (average)
 23159                           ;	Chosen strategy is simple_byte
 23160  005E7C  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23161  005E7E  0A01               	xorlw	1	; case 1
 23162  005E80  B4D8               	btfsc	status,2,c
 23163  005E82  D7DF               	goto	l10153
 23164  005E84  0A03               	xorlw	3	; case 2
 23165  005E86  B4D8               	btfsc	status,2,c
 23166  005E88  0012               	return	
 23167  005E8A  0A01               	xorlw	1	; case 3
 23168  005E8C  B4D8               	btfsc	status,2,c
 23169  005E8E  D7DE               	goto	l10157
 23170  005E90  0A06               	xorlw	6	; case 5
 23171  005E92  B4D8               	btfsc	status,2,c
 23172  005E94  D7E0               	goto	l10161
 23173  005E96  0A77               	xorlw	119	; case 114
 23174  005E98  B4D8               	btfsc	status,2,c
 23175  005E9A  0012               	return	
 23176  005E9C  0A01               	xorlw	1	; case 115
 23177  005E9E  B4D8               	btfsc	status,2,c
 23178  005EA0  0012               	return	
 23179  005EA2  0A07               	xorlw	7	; case 116
 23180  005EA4  B4D8               	btfsc	status,2,c
 23181  005EA6  D7C9               	goto	l10151
 23182  005EA8  0A01               	xorlw	1	; case 117
 23183  005EAA  A4D8               	btfss	status,2,c
 23184  005EAC  0012               	return	
 23185  005EAE  D7C1               	goto	l10149
 23186  005EB0                     l15405:
 23187                           
 23188                           ; Switch size 1, requested type "space"
 23189                           ; Number of cases is 1, Range of values is 255 to 255
 23190                           ; switch strategies available:
 23191                           ; Name         Instructions Cycles
 23192                           ; simple_byte            4     3 (average)
 23193                           ;	Chosen strategy is simple_byte
 23194  005EB0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23195  005EB2  0AFF               	xorlw	255	; case 255
 23196  005EB4  0012               	return	
 23197  005EB6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 23198                           	opt stack 0
 23199                           tblptru	equ	0xFF8
 23200                           tblptrh	equ	0xFF7
 23201                           tblptrl	equ	0xFF6
 23202                           tablat	equ	0xFF5
 23203                           prodh	equ	0xFF4
 23204                           prodl	equ	0xFF3
 23205                           intcon	equ	0xFF2
 23206                           intcon2	equ	0xFF1
 23207                           intcon3	equ	0xFF0
 23208                           indf0	equ	0xFEF
 23209                           postinc0	equ	0xFEE
 23210                           fsr0h	equ	0xFEA
 23211                           fsr0l	equ	0xFE9
 23212                           wreg	equ	0xFE8
 23213                           indf1	equ	0xFE7
 23214                           postdec1	equ	0xFE5
 23215                           plusw1	equ	0xFE3
 23216                           fsr1h	equ	0xFE2
 23217                           fsr1l	equ	0xFE1
 23218                           indf2	equ	0xFDF
 23219                           postinc2	equ	0xFDE
 23220                           postdec2	equ	0xFDD
 23221                           plusw2	equ	0xFDB
 23222                           fsr2h	equ	0xFDA
 23223                           fsr2l	equ	0xFD9
 23224                           status	equ	0xFD8
 23225                           
 23226 ;; *************** function _USBCheckMSDRequest *****************
 23227 ;; Defined at:
 23228 ;;		line 218 in file "usb_device_msd.c"
 23229 ;; Parameters:    Size  Location     Type
 23230 ;;		None
 23231 ;; Auto vars:     Size  Location     Type
 23232 ;;		None
 23233 ;; Return value:  Size  Location     Type
 23234 ;;                  1    wreg      void 
 23235 ;; Registers used:
 23236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23237 ;; Tracked objects:
 23238 ;;		On entry : 0/0
 23239 ;;		On exit  : 0/0
 23240 ;;		Unchanged: 0/0
 23241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23243 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23246 ;;Total ram usage:        4 bytes
 23247 ;; Hardware stack levels used:    1
 23248 ;; Hardware stack levels required when called:    1
 23249 ;; This function calls:
 23250 ;;		_USBTransferOnePacket
 23251 ;; This function is called by:
 23252 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23253 ;; This function uses a non-reentrant model
 23254 ;;
 23255                           
 23256                           	psect	text106
 23257  004C7A                     __ptext106:
 23258                           	opt stack 0
 23259  004C7A                     _USBCheckMSDRequest:
 23260                           	opt stack 27
 23261                           
 23262                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 23263                           
 23264                           ;incstack = 0
 23265  004C7A  010D               	movlb	13	; () banked
 23266  004C7C  5130               	movf	48,w,b	;volatile
 23267  004C7E  0B1F               	andlw	31
 23268  004C80  06E8               	decf	wreg,f,c
 23269  004C82  A4D8               	btfss	status,2,c
 23270  004C84  0012               	return	
 23271                           
 23272                           ; BSR set to: 13
 23273                           ;usb_device_msd.c: 223: }
 23274                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 23275                           
 23276                           ; BSR set to: 13
 23277                           
 23278                           ; BSR set to: 13
 23279                           ;usb_device_msd.c: 221: {
 23280                           ;usb_device_msd.c: 222: return;
 23281  004C86  010D               	movlb	13	; () banked
 23282  004C88  5134               	movf	52,w,b	;volatile
 23283  004C8A  A4D8               	btfss	status,2,c
 23284  004C8C  0012               	return	
 23285  004C8E  D05D               	goto	l9949
 23286  004C90                     l9911:
 23287                           
 23288                           ; BSR set to: 13
 23289                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 23290  004C90  010D               	movlb	13	; () banked
 23291  004C92  5132               	movf	50,w,b	;volatile
 23292  004C94  010D               	movlb	13	; () banked
 23293  004C96  1133               	iorwf	51,w,b	;volatile
 23294  004C98  A4D8               	btfss	status,2,c
 23295  004C9A  0012               	return	
 23296                           
 23297                           ; BSR set to: 13
 23298  004C9C  010D               	movlb	13	; () banked
 23299  004C9E  5136               	movf	54,w,b	;volatile
 23300  004CA0  010D               	movlb	13	; () banked
 23301  004CA2  1137               	iorwf	55,w,b	;volatile
 23302  004CA4  A4D8               	btfss	status,2,c
 23303  004CA6  0012               	return	
 23304                           
 23305                           ; BSR set to: 13
 23306                           ;usb_device_msd.c: 238: }
 23307                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 23308                           
 23309                           ; BSR set to: 13
 23310                           
 23311                           ; BSR set to: 13
 23312                           ;usb_device_msd.c: 236: {
 23313                           ;usb_device_msd.c: 237: return;
 23314  004CA8  0E00               	movlw	0
 23315  004CAA  0100               	movlb	0	; () banked
 23316  004CAC  6FFA               	movwf	_MSD_State& (0+255),b
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 23320  004CAE  0100               	movlb	0	; () banked
 23321  004CB0  69F9               	setf	_MSDCommandState& (0+255),b
 23322                           
 23323                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 23324  004CB2  0E00               	movlw	0
 23325  004CB4  0101               	movlb	1	; () banked
 23326  004CB6  6F8C               	movwf	_MSDReadState& (0+255),b
 23327                           
 23328                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 23329  004CB8  0E00               	movlw	0
 23330  004CBA  0101               	movlb	1	; () banked
 23331  004CBC  6F8B               	movwf	_MSDWriteState& (0+255),b
 23332                           
 23333                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 23334  004CBE  0E01               	movlw	1
 23335  004CC0  0101               	movlb	1	; () banked
 23336  004CC2  6F87               	movwf	_MSDCBWValid& (0+255),b
 23337                           
 23338                           ; BSR set to: 1
 23339                           
 23340                           ; BSR set to: 1
 23341                           
 23342                           ; BSR set to: 1
 23343                           
 23344                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 23345  004CC4  C13D  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2316
 23346  004CC8  C13E  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2316+1
 23347                           
 23348                           ; BSR set to: 1
 23349  004CCC  500C               	movf	_USBCheckMSDRequest$2316,w,c
 23350  004CCE  100D               	iorwf	_USBCheckMSDRequest$2316+1,w,c
 23351  004CD0  B4D8               	btfsc	status,2,c
 23352  004CD2  D00A               	goto	l9931
 23353                           
 23354                           ; BSR set to: 1
 23355                           
 23356                           ; BSR set to: 1
 23357                           
 23358                           ; BSR set to: 1
 23359                           
 23360                           ; BSR set to: 1
 23361  004CD4  C13D  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2317
 23362  004CD8  C13E  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2317+1
 23363                           
 23364                           ; BSR set to: 1
 23365                           
 23366                           ; BSR set to: 1
 23367  004CDC  C00E  FFD9         	movff	_USBCheckMSDRequest$2317,fsr2l
 23368  004CE0  C00F  FFDA         	movff	_USBCheckMSDRequest$2317+1,fsr2h
 23369  004CE4  BEDF               	btfsc	indf2,7,c
 23370  004CE6  D00F               	goto	l9933
 23371  004CE8                     l9931:
 23372                           
 23373                           ; BSR set to: 1
 23374                           ;usb_device_msd.c: 256: {
 23375                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 23376  004CE8  0E00               	movlw	0
 23377  004CEA  6E01               	movwf	USBTransferOnePacket@dir,c
 23378  004CEC  0E40               	movlw	64
 23379  004CEE  6E02               	movwf	USBTransferOnePacket@data,c
 23380  004CF0  0E0D               	movlw	13
 23381  004CF2  6E03               	movwf	USBTransferOnePacket@data+1,c
 23382  004CF4  0E40               	movlw	64
 23383  004CF6  6E04               	movwf	USBTransferOnePacket@len,c
 23384  004CF8  0E02               	movlw	2
 23385  004CFA  ECDD  F022         	call	_USBTransferOnePacket
 23386  004CFE  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23387  004D02  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23388  004D06                     l9933:
 23389                           
 23390                           ;usb_device_msd.c: 258: }
 23391                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 23392  004D06  0E80               	movlw	128
 23393  004D08  0100               	movlb	0	; () banked
 23394  004D0A  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23395                           
 23396                           ;usb_device_msd.c: 263: break;
 23397  004D0C  0012               	return	
 23398  004D0E                     l9935:
 23399                           
 23400                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 23401  004D0E  010D               	movlb	13	; () banked
 23402  004D10  5132               	movf	50,w,b	;volatile
 23403  004D12  010D               	movlb	13	; () banked
 23404  004D14  1133               	iorwf	51,w,b	;volatile
 23405  004D16  A4D8               	btfss	status,2,c
 23406  004D18  0012               	return	
 23407                           
 23408                           ; BSR set to: 13
 23409  004D1A  010D               	movlb	13	; () banked
 23410  004D1C  0536               	decf	54,w,b	;volatile
 23411  004D1E  010D               	movlb	13	; () banked
 23412  004D20  1137               	iorwf	55,w,b	;volatile
 23413  004D22  A4D8               	btfss	status,2,c
 23414  004D24  0012               	return	
 23415                           
 23416                           ; BSR set to: 13
 23417                           ;usb_device_msd.c: 271: }
 23418                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 23419                           
 23420                           ; BSR set to: 13
 23421                           
 23422                           ; BSR set to: 13
 23423                           ;usb_device_msd.c: 269: {
 23424                           ;usb_device_msd.c: 270: break;
 23425  004D26  0E00               	movlw	0
 23426  004D28  010D               	movlb	13	; () banked
 23427  004D2A  6F38               	movwf	56,b	;volatile
 23428                           
 23429                           ; BSR set to: 13
 23430                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 23431  004D2C  0E38               	movlw	56
 23432  004D2E  0100               	movlb	0	; () banked
 23433  004D30  6FE8               	movwf	_inPipes& (0+255),b
 23434  004D32  0E0D               	movlw	13
 23435  004D34  0100               	movlb	0	; () banked
 23436  004D36  6FE9               	movwf	(_inPipes+1)& (0+255),b
 23437                           
 23438                           ; BSR set to: 0
 23439  004D38  0E00               	movlw	0
 23440  004D3A  0100               	movlb	0	; () banked
 23441  004D3C  6FED               	movwf	(_inPipes+5)& (0+255),b
 23442  004D3E  0E01               	movlw	1
 23443  004D40  6FEC               	movwf	(_inPipes+4)& (0+255),b
 23444                           
 23445                           ; BSR set to: 0
 23446  004D42  0EC1               	movlw	193
 23447  004D44  0100               	movlb	0	; () banked
 23448  004D46  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23449                           
 23450                           ; BSR set to: 0
 23451                           ;usb_device_msd.c: 278: }
 23452                           
 23453                           ;usb_device_msd.c: 277: break;
 23454  004D48  0012               	return	
 23455  004D4A                     l9949:
 23456  004D4A  010D               	movlb	13	; () banked
 23457  004D4C  5131               	movf	49,w,b	;volatile
 23458                           
 23459                           ; Switch size 1, requested type "space"
 23460                           ; Number of cases is 2, Range of values is 254 to 255
 23461                           ; switch strategies available:
 23462                           ; Name         Instructions Cycles
 23463                           ; simple_byte            7     4 (average)
 23464                           ;	Chosen strategy is simple_byte
 23465  004D4E  0AFE               	xorlw	254	; case 254
 23466  004D50  B4D8               	btfsc	status,2,c
 23467  004D52  D7DD               	goto	l9935
 23468  004D54  0A01               	xorlw	1	; case 255
 23469  004D56  A4D8               	btfss	status,2,c
 23470  004D58  0012               	return	
 23471  004D5A  D79A               	goto	l9911
 23472  004D5C                     __end_of_USBCheckMSDRequest:
 23473                           	opt stack 0
 23474                           tblptru	equ	0xFF8
 23475                           tblptrh	equ	0xFF7
 23476                           tblptrl	equ	0xFF6
 23477                           tablat	equ	0xFF5
 23478                           prodh	equ	0xFF4
 23479                           prodl	equ	0xFF3
 23480                           intcon	equ	0xFF2
 23481                           intcon2	equ	0xFF1
 23482                           intcon3	equ	0xFF0
 23483                           indf0	equ	0xFEF
 23484                           postinc0	equ	0xFEE
 23485                           fsr0h	equ	0xFEA
 23486                           fsr0l	equ	0xFE9
 23487                           wreg	equ	0xFE8
 23488                           indf1	equ	0xFE7
 23489                           postdec1	equ	0xFE5
 23490                           plusw1	equ	0xFE3
 23491                           fsr1h	equ	0xFE2
 23492                           fsr1l	equ	0xFE1
 23493                           indf2	equ	0xFDF
 23494                           postinc2	equ	0xFDE
 23495                           postdec2	equ	0xFDD
 23496                           plusw2	equ	0xFDB
 23497                           fsr2h	equ	0xFDA
 23498                           fsr2l	equ	0xFD9
 23499                           status	equ	0xFD8
 23500                           
 23501 ;; *************** function _USBCheckHIDRequest *****************
 23502 ;; Defined at:
 23503 ;;		line 153 in file "usb_device_hid.c"
 23504 ;; Parameters:    Size  Location     Type
 23505 ;;		None
 23506 ;; Auto vars:     Size  Location     Type
 23507 ;;		None
 23508 ;; Return value:  Size  Location     Type
 23509 ;;                  1    wreg      void 
 23510 ;; Registers used:
 23511 ;;		wreg, status,2, status,0
 23512 ;; Tracked objects:
 23513 ;;		On entry : 0/0
 23514 ;;		On exit  : 0/0
 23515 ;;		Unchanged: 0/0
 23516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23521 ;;Total ram usage:        0 bytes
 23522 ;; Hardware stack levels used:    1
 23523 ;; This function calls:
 23524 ;;		Nothing
 23525 ;; This function is called by:
 23526 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text107
 23531  0047BC                     __ptext107:
 23532                           	opt stack 0
 23533  0047BC                     _USBCheckHIDRequest:
 23534                           	opt stack 28
 23535                           
 23536                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 23537                           
 23538                           ;incstack = 0
 23539  0047BC  010D               	movlb	13	; () banked
 23540  0047BE  5130               	movf	48,w,b	;volatile
 23541  0047C0  0B1F               	andlw	31
 23542  0047C2  06E8               	decf	wreg,f,c
 23543  0047C4  A4D8               	btfss	status,2,c
 23544  0047C6  0012               	return	
 23545                           
 23546                           ; BSR set to: 13
 23547                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 23548                           
 23549                           ; BSR set to: 13
 23550                           
 23551                           ; BSR set to: 13
 23552  0047C8  010D               	movlb	13	; () banked
 23553  0047CA  5134               	movf	52,w,b	;volatile
 23554  0047CC  A4D8               	btfss	status,2,c
 23555  0047CE  0012               	return	
 23556                           
 23557                           ; BSR set to: 13
 23558                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 23559                           
 23560                           ; BSR set to: 13
 23561                           
 23562                           ; BSR set to: 13
 23563  0047D0  0E06               	movlw	6
 23564  0047D2  010D               	movlb	13	; () banked
 23565  0047D4  1931               	xorwf	49,w,b	;volatile
 23566  0047D6  B4D8               	btfsc	status,2,c
 23567  0047D8  D020               	goto	l9873
 23568  0047DA  D028               	goto	l9875
 23569  0047DC                     l9857:
 23570                           
 23571                           ; BSR set to: 13
 23572                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 23573  0047DC  0100               	movlb	0	; () banked
 23574  0047DE  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 23575  0047E0  A4D8               	btfss	status,2,c
 23576  0047E2  D024               	goto	l9875
 23577                           
 23578                           ; BSR set to: 0
 23579                           ;usb_device_hid.c: 169: {
 23580                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 23581  0047E4  0EB9               	movlw	low (_configDescriptor1+18)
 23582  0047E6  0100               	movlb	0	; () banked
 23583  0047E8  6FE8               	movwf	_inPipes& (0+255),b
 23584  0047EA  0E8E               	movlw	high (_configDescriptor1+18)
 23585  0047EC  0100               	movlb	0	; () banked
 23586  0047EE  6FE9               	movwf	(_inPipes+1)& (0+255),b
 23587                           
 23588                           ; BSR set to: 0
 23589  0047F0  0E00               	movlw	0
 23590  0047F2  0100               	movlb	0	; () banked
 23591  0047F4  6FED               	movwf	(_inPipes+5)& (0+255),b
 23592  0047F6  0E09               	movlw	9
 23593  0047F8  D00E               	goto	L13
 23594  0047FA                     l9863:
 23595                           
 23596                           ; BSR set to: 0
 23597  0047FA  0EC0               	movlw	192
 23598  0047FC  0100               	movlb	0	; () banked
 23599  0047FE  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23600                           
 23601                           ; BSR set to: 0
 23602                           ;usb_device_hid.c: 174: }
 23603                           ;usb_device_hid.c: 175: break;
 23604  004800  D015               	goto	l9875
 23605  004802                     l9865:
 23606                           
 23607                           ;usb_device_hid.c: 178: {
 23608                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 23609  004802  0E6D               	movlw	low _hid_rpt01
 23610  004804  0100               	movlb	0	; () banked
 23611  004806  6FE8               	movwf	_inPipes& (0+255),b
 23612  004808  0E8F               	movlw	high _hid_rpt01
 23613  00480A  0100               	movlb	0	; () banked
 23614  00480C  6FE9               	movwf	(_inPipes+1)& (0+255),b
 23615                           
 23616                           ; BSR set to: 0
 23617  00480E  0E00               	movlw	0
 23618  004810  0100               	movlb	0	; () banked
 23619  004812  6FED               	movwf	(_inPipes+5)& (0+255),b
 23620  004814  0E1D               	movlw	29
 23621  004816                     L13:
 23622  004816  6FEC               	movwf	(_inPipes+4)& (0+255),b
 23623  004818  D7F0               	goto	l9863
 23624  00481A                     l9873:
 23625  00481A  010D               	movlb	13	; () banked
 23626  00481C  5133               	movf	51,w,b	;volatile
 23627                           
 23628                           ; Switch size 1, requested type "space"
 23629                           ; Number of cases is 3, Range of values is 33 to 35
 23630                           ; switch strategies available:
 23631                           ; Name         Instructions Cycles
 23632                           ; simple_byte           10     6 (average)
 23633                           ;	Chosen strategy is simple_byte
 23634  00481E  0A21               	xorlw	33	; case 33
 23635  004820  B4D8               	btfsc	status,2,c
 23636  004822  D7DC               	goto	l9857
 23637  004824  0A03               	xorlw	3	; case 34
 23638  004826  B4D8               	btfsc	status,2,c
 23639  004828  D7EC               	goto	l9865
 23640  00482A  0A01               	xorlw	1	; case 35
 23641  00482C                     l9875:
 23642                           
 23643                           ;usb_device_hid.c: 199: }
 23644                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 23645  00482C  010D               	movlb	13	; () banked
 23646  00482E  3930               	swapf	48,w,b	;volatile
 23647  004830  32E8               	rrcf	wreg,f,c
 23648  004832  0B03               	andlw	3
 23649  004834  06E8               	decf	wreg,f,c
 23650  004836  A4D8               	btfss	status,2,c
 23651  004838  0012               	return	
 23652  00483A  D02A               	goto	l9901
 23653  00483C                     l9879:
 23654                           
 23655                           ; BSR set to: 13
 23656                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 23657  00483C  0EB7               	movlw	low _idle_rate
 23658  00483E  0100               	movlb	0	; () banked
 23659  004840  6FE8               	movwf	_inPipes& (0+255),b
 23660  004842  0E01               	movlw	high _idle_rate
 23661  004844  0100               	movlb	0	; () banked
 23662  004846  6FE9               	movwf	(_inPipes+1)& (0+255),b
 23663                           
 23664                           ; BSR set to: 0
 23665  004848  0E00               	movlw	0
 23666  00484A  0100               	movlb	0	; () banked
 23667  00484C  6FED               	movwf	(_inPipes+5)& (0+255),b
 23668  00484E  0E01               	movlw	1
 23669  004850  6FEC               	movwf	(_inPipes+4)& (0+255),b
 23670                           
 23671                           ; BSR set to: 0
 23672  004852  0EC1               	movlw	193
 23673  004854  0100               	movlb	0	; () banked
 23674  004856  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23675                           
 23676                           ;usb_device_hid.c: 223: break;
 23677  004858  0012               	return	
 23678  00485A                     l9885:
 23679                           
 23680                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 23681  00485A  0E80               	movlw	128
 23682  00485C  0100               	movlb	0	; () banked
 23683  00485E  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 23687  004860  CD33 F1B7          	movff	3379,_idle_rate	;volatile
 23688                           
 23689                           ;usb_device_hid.c: 227: ;
 23690                           ;usb_device_hid.c: 228: break;
 23691  004864  0012               	return	
 23692  004866                     l9889:
 23693                           
 23694                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 23695  004866  0EB6               	movlw	low _active_protocol
 23696  004868  0100               	movlb	0	; () banked
 23697  00486A  6FE8               	movwf	_inPipes& (0+255),b
 23698  00486C  0E01               	movlw	high _active_protocol
 23699  00486E  0100               	movlb	0	; () banked
 23700  004870  6FE9               	movwf	(_inPipes+1)& (0+255),b
 23701                           
 23702                           ; BSR set to: 0
 23703  004872  0E00               	movlw	0
 23704  004874  0100               	movlb	0	; () banked
 23705  004876  6FED               	movwf	(_inPipes+5)& (0+255),b
 23706  004878  0E01               	movlw	1
 23707  00487A  6FEC               	movwf	(_inPipes+4)& (0+255),b
 23708                           
 23709                           ; BSR set to: 0
 23710  00487C  0E81               	movlw	129
 23711  00487E  0100               	movlb	0	; () banked
 23712  004880  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23713                           
 23714                           ;usb_device_hid.c: 234: break;
 23715  004882  0012               	return	
 23716  004884                     l9895:
 23717                           
 23718                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 23719  004884  0E80               	movlw	128
 23720  004886  0100               	movlb	0	; () banked
 23721  004888  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23722                           
 23723                           ; BSR set to: 0
 23724                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 23725  00488A  CD32 F1B6          	movff	3378,_active_protocol	;volatile
 23726                           
 23727                           ; BSR set to: 0
 23728                           ;usb_device_hid.c: 239: }
 23729                           
 23730                           ;usb_device_hid.c: 238: break;
 23731  00488E  0012               	return	
 23732  004890                     l9901:
 23733  004890  010D               	movlb	13	; () banked
 23734  004892  5131               	movf	49,w,b	;volatile
 23735                           
 23736                           ; Switch size 1, requested type "space"
 23737                           ; Number of cases is 6, Range of values is 1 to 11
 23738                           ; switch strategies available:
 23739                           ; Name         Instructions Cycles
 23740                           ; simple_byte           19    10 (average)
 23741                           ;	Chosen strategy is simple_byte
 23742  004894  0A01               	xorlw	1	; case 1
 23743  004896  B4D8               	btfsc	status,2,c
 23744  004898  0012               	return	
 23745  00489A  0A03               	xorlw	3	; case 2
 23746  00489C  B4D8               	btfsc	status,2,c
 23747  00489E  D7CE               	goto	l9879
 23748  0048A0  0A01               	xorlw	1	; case 3
 23749  0048A2  B4D8               	btfsc	status,2,c
 23750  0048A4  D7E0               	goto	l9889
 23751  0048A6  0A0A               	xorlw	10	; case 9
 23752  0048A8  B4D8               	btfsc	status,2,c
 23753  0048AA  0012               	return	
 23754  0048AC  0A03               	xorlw	3	; case 10
 23755  0048AE  B4D8               	btfsc	status,2,c
 23756  0048B0  D7D4               	goto	l9885
 23757  0048B2  0A01               	xorlw	1	; case 11
 23758  0048B4  A4D8               	btfss	status,2,c
 23759  0048B6  0012               	return	
 23760  0048B8  D7E5               	goto	l9895
 23761  0048BA                     __end_of_USBCheckHIDRequest:
 23762                           	opt stack 0
 23763                           tblptru	equ	0xFF8
 23764                           tblptrh	equ	0xFF7
 23765                           tblptrl	equ	0xFF6
 23766                           tablat	equ	0xFF5
 23767                           prodh	equ	0xFF4
 23768                           prodl	equ	0xFF3
 23769                           intcon	equ	0xFF2
 23770                           intcon2	equ	0xFF1
 23771                           intcon3	equ	0xFF0
 23772                           indf0	equ	0xFEF
 23773                           postinc0	equ	0xFEE
 23774                           fsr0h	equ	0xFEA
 23775                           fsr0l	equ	0xFE9
 23776                           wreg	equ	0xFE8
 23777                           indf1	equ	0xFE7
 23778                           postdec1	equ	0xFE5
 23779                           plusw1	equ	0xFE3
 23780                           fsr1h	equ	0xFE2
 23781                           fsr1l	equ	0xFE1
 23782                           indf2	equ	0xFDF
 23783                           postinc2	equ	0xFDE
 23784                           postdec2	equ	0xFDD
 23785                           plusw2	equ	0xFDB
 23786                           fsr2h	equ	0xFDA
 23787                           fsr2l	equ	0xFD9
 23788                           status	equ	0xFD8
 23789                           
 23790 ;; *************** function _SYSTEM_Initialize *****************
 23791 ;; Defined at:
 23792 ;;		line 147 in file "system.c"
 23793 ;; Parameters:    Size  Location     Type
 23794 ;;  state           1    wreg     enum E8100
 23795 ;; Auto vars:     Size  Location     Type
 23796 ;;  state           1    4[COMRAM] enum E8100
 23797 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 23798 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 23799 ;; Return value:  Size  Location     Type
 23800 ;;                  1    wreg      void 
 23801 ;; Registers used:
 23802 ;;		wreg, status,2, status,0
 23803 ;; Tracked objects:
 23804 ;;		On entry : 0/0
 23805 ;;		On exit  : 0/0
 23806 ;;		Unchanged: 0/0
 23807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23809 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23811 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23812 ;;Total ram usage:        5 bytes
 23813 ;; Hardware stack levels used:    1
 23814 ;; This function calls:
 23815 ;;		Nothing
 23816 ;; This function is called by:
 23817 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23818 ;;		_main
 23819 ;; This function uses a non-reentrant model
 23820 ;;
 23821                           
 23822                           	psect	text108
 23823  006AD4                     __ptext108:
 23824                           	opt stack 0
 23825  006AD4                     _SYSTEM_Initialize:
 23826                           	opt stack 28
 23827                           
 23828                           ;incstack = 0
 23829                           ;SYSTEM_Initialize@state stored from wreg
 23830  006AD4  6E05               	movwf	SYSTEM_Initialize@state,c
 23831                           
 23832                           ;system.c: 149: switch(state)
 23833  006AD6  D01D               	goto	l10057
 23834  006AD8                     l10045:
 23835                           
 23836                           ;system.c: 158: {
 23837                           ;system.c: 159: unsigned int pll_startup_counter = 600;
 23838  006AD8  0E02               	movlw	2
 23839  006ADA  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 23840  006ADC  0E58               	movlw	88
 23841  006ADE  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 23842                           
 23843                           ;system.c: 160: OSCTUNEbits.PLLEN = 1;
 23844  006AE0  8C9B               	bsf	3995,6,c	;volatile
 23845  006AE2                     l10049:
 23846  006AE2  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 23847  006AE4  A0D8               	btfss	status,0,c
 23848  006AE6  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 23849  006AE8  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 23850  006AEA  E1FB               	bnz	l10049
 23851  006AEC  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 23852  006AEE  B4D8               	btfsc	status,2,c
 23853  006AF0  0012               	return	
 23854  006AF2  D7F7               	goto	l10049
 23855  006AF4                     l10051:
 23856                           
 23857                           ;system.c: 186: OSCCON = 0x70;
 23858  006AF4  0E70               	movlw	112
 23859  006AF6  6ED3               	movwf	4051,c	;volatile
 23860                           
 23861                           ;system.c: 192: {
 23862                           ;system.c: 193: unsigned int pll_startup_counter = 800;
 23863  006AF8  0E03               	movlw	3
 23864  006AFA  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2666+1,c
 23865  006AFC  0E20               	movlw	32
 23866  006AFE  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2666,c
 23867  006B00                     l10053:
 23868  006B00  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2666,f,c
 23869  006B02  A0D8               	btfss	status,0,c
 23870  006B04  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2666+1,f,c
 23871  006B06  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2666,w,c
 23872  006B08  E1FB               	bnz	l10053
 23873  006B0A  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2666+1,w,c
 23874  006B0C  B4D8               	btfsc	status,2,c
 23875  006B0E  0012               	return	
 23876  006B10  D7F7               	goto	l10053
 23877  006B12                     l10057:
 23878  006B12  5005               	movf	SYSTEM_Initialize@state,w,c
 23879                           
 23880                           ; Switch size 1, requested type "space"
 23881                           ; Number of cases is 3, Range of values is 0 to 2
 23882                           ; switch strategies available:
 23883                           ; Name         Instructions Cycles
 23884                           ; simple_byte           10     6 (average)
 23885                           ;	Chosen strategy is simple_byte
 23886  006B14  0A00               	xorlw	0	; case 0
 23887  006B16  B4D8               	btfsc	status,2,c
 23888  006B18  D7DF               	goto	l10045
 23889  006B1A  0A01               	xorlw	1	; case 1
 23890  006B1C  B4D8               	btfsc	status,2,c
 23891  006B1E  0012               	return	
 23892  006B20  0A03               	xorlw	3	; case 2
 23893  006B22  A4D8               	btfss	status,2,c
 23894  006B24  0012               	return	
 23895  006B26  D7E6               	goto	l10051
 23896  006B28                     __end_of_SYSTEM_Initialize:
 23897                           	opt stack 0
 23898                           tblptru	equ	0xFF8
 23899                           tblptrh	equ	0xFF7
 23900                           tblptrl	equ	0xFF6
 23901                           tablat	equ	0xFF5
 23902                           prodh	equ	0xFF4
 23903                           prodl	equ	0xFF3
 23904                           intcon	equ	0xFF2
 23905                           intcon2	equ	0xFF1
 23906                           intcon3	equ	0xFF0
 23907                           indf0	equ	0xFEF
 23908                           postinc0	equ	0xFEE
 23909                           fsr0h	equ	0xFEA
 23910                           fsr0l	equ	0xFE9
 23911                           wreg	equ	0xFE8
 23912                           indf1	equ	0xFE7
 23913                           postdec1	equ	0xFE5
 23914                           plusw1	equ	0xFE3
 23915                           fsr1h	equ	0xFE2
 23916                           fsr1l	equ	0xFE1
 23917                           indf2	equ	0xFDF
 23918                           postinc2	equ	0xFDE
 23919                           postdec2	equ	0xFDD
 23920                           plusw2	equ	0xFDB
 23921                           fsr2h	equ	0xFDA
 23922                           fsr2l	equ	0xFD9
 23923                           status	equ	0xFD8
 23924                           
 23925 ;; *************** function _MSDTransferTerminated *****************
 23926 ;; Defined at:
 23927 ;;		line 1674 in file "usb_device_msd.c"
 23928 ;; Parameters:    Size  Location     Type
 23929 ;;  handle          2   11[COMRAM] PTR void 
 23930 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 23931 ;;		 -> BDT(48), 
 23932 ;; Auto vars:     Size  Location     Type
 23933 ;;		None
 23934 ;; Return value:  Size  Location     Type
 23935 ;;                  1    wreg      void 
 23936 ;; Registers used:
 23937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23938 ;; Tracked objects:
 23939 ;;		On entry : 0/0
 23940 ;;		On exit  : 0/0
 23941 ;;		Unchanged: 0/0
 23942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23947 ;;Total ram usage:        4 bytes
 23948 ;; Hardware stack levels used:    1
 23949 ;; Hardware stack levels required when called:    1
 23950 ;; This function calls:
 23951 ;;		_USBStallEndpoint
 23952 ;;		_USBTransferOnePacket
 23953 ;; This function is called by:
 23954 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23955 ;; This function uses a non-reentrant model
 23956 ;;
 23957                           
 23958                           	psect	text109
 23959  006A28                     __ptext109:
 23960                           	opt stack 0
 23961  006A28                     _MSDTransferTerminated:
 23962                           	opt stack 27
 23963                           
 23964                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 23965                           
 23966                           ;incstack = 0
 23967  006A28  0101               	movlb	1	; () banked
 23968  006A2A  5187               	movf	_MSDCBWValid& (0+255),w,b
 23969  006A2C  A4D8               	btfss	status,2,c
 23970  006A2E  D00B               	goto	l10039
 23971                           
 23972                           ; BSR set to: 1
 23973                           ;usb_device_msd.c: 1677: {
 23974                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 23975  006A30  0E01               	movlw	1
 23976  006A32  6E01               	movwf	USBStallEndpoint@dir,c
 23977  006A34  0E02               	movlw	2
 23978  006A36  EC5A  F022         	call	_USBStallEndpoint
 23979                           
 23980                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 23981  006A3A  0E00               	movlw	0
 23982  006A3C  6E01               	movwf	USBStallEndpoint@dir,c
 23983  006A3E  0E02               	movlw	2
 23984  006A40  EC5A  F022         	call	_USBStallEndpoint
 23985                           
 23986                           ;usb_device_msd.c: 1681: }
 23987  006A44  0012               	return	
 23988  006A46                     l10039:
 23989  006A46  C13D  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2404
 23990  006A4A  C13E  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2404+1
 23991  006A4E  500E               	movf	_MSDTransferTerminated$2404,w,c
 23992  006A50  180C               	xorwf	MSDTransferTerminated@handle,w,c
 23993  006A52  E114               	bnz	l767
 23994  006A54  500F               	movf	_MSDTransferTerminated$2404+1,w,c
 23995  006A56  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 23996  006A58  A4D8               	btfss	status,2,c
 23997  006A5A  0012               	return	
 23998                           
 23999                           ;usb_device_msd.c: 1687: {
 24000                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 24001  006A5C  0E00               	movlw	0
 24002  006A5E  6E01               	movwf	USBTransferOnePacket@dir,c
 24003  006A60  0E40               	movlw	64
 24004  006A62  6E02               	movwf	USBTransferOnePacket@data,c
 24005  006A64  0E0D               	movlw	13
 24006  006A66  6E03               	movwf	USBTransferOnePacket@data+1,c
 24007  006A68  0E40               	movlw	64
 24008  006A6A  6E04               	movwf	USBTransferOnePacket@len,c
 24009  006A6C  0E02               	movlw	2
 24010  006A6E  ECDD  F022         	call	_USBTransferOnePacket
 24011  006A72  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24012  006A76  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24013  006A7A  0012               	return	
 24014  006A7C                     l767:
 24015  006A7C  0012               	return		;funcret
 24016  006A7E                     __end_of_MSDTransferTerminated:
 24017                           	opt stack 0
 24018                           tblptru	equ	0xFF8
 24019                           tblptrh	equ	0xFF7
 24020                           tblptrl	equ	0xFF6
 24021                           tablat	equ	0xFF5
 24022                           prodh	equ	0xFF4
 24023                           prodl	equ	0xFF3
 24024                           intcon	equ	0xFF2
 24025                           intcon2	equ	0xFF1
 24026                           intcon3	equ	0xFF0
 24027                           indf0	equ	0xFEF
 24028                           postinc0	equ	0xFEE
 24029                           fsr0h	equ	0xFEA
 24030                           fsr0l	equ	0xFE9
 24031                           wreg	equ	0xFE8
 24032                           indf1	equ	0xFE7
 24033                           postdec1	equ	0xFE5
 24034                           plusw1	equ	0xFE3
 24035                           fsr1h	equ	0xFE2
 24036                           fsr1l	equ	0xFE1
 24037                           indf2	equ	0xFDF
 24038                           postinc2	equ	0xFDE
 24039                           postdec2	equ	0xFDD
 24040                           plusw2	equ	0xFDB
 24041                           fsr2h	equ	0xFDA
 24042                           fsr2l	equ	0xFD9
 24043                           status	equ	0xFD8
 24044                           
 24045 ;; *************** function _APP_DeviceMSDInitialize *****************
 24046 ;; Defined at:
 24047 ;;		line 84 in file "app_device_msd.c"
 24048 ;; Parameters:    Size  Location     Type
 24049 ;;		None
 24050 ;; Auto vars:     Size  Location     Type
 24051 ;;		None
 24052 ;; Return value:  Size  Location     Type
 24053 ;;                  1    wreg      void 
 24054 ;; Registers used:
 24055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24056 ;; Tracked objects:
 24057 ;;		On entry : 0/0
 24058 ;;		On exit  : 0/0
 24059 ;;		Unchanged: 0/0
 24060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24065 ;;Total ram usage:        0 bytes
 24066 ;; Hardware stack levels used:    1
 24067 ;; Hardware stack levels required when called:    2
 24068 ;; This function calls:
 24069 ;;		_USBEnableEndpoint
 24070 ;;		_USBMSDInit
 24071 ;; This function is called by:
 24072 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24073 ;; This function uses a non-reentrant model
 24074 ;;
 24075                           
 24076                           	psect	text110
 24077  00784C                     __ptext110:
 24078                           	opt stack 0
 24079  00784C                     _APP_DeviceMSDInitialize:
 24080                           	opt stack 26
 24081                           
 24082                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 24083                           
 24084                           ;incstack = 0
 24085  00784C  0E1E               	movlw	30
 24086  00784E  6E09               	movwf	USBEnableEndpoint@options,c
 24087  007850  0E02               	movlw	2
 24088  007852  ECA3  F038         	call	_USBEnableEndpoint
 24089                           
 24090                           ;app_device_msd.c: 93: USBMSDInit();
 24091  007856  EC2F  F020         	call	_USBMSDInit	;wreg free
 24092  00785A  0012               	return		;funcret
 24093  00785C                     __end_of_APP_DeviceMSDInitialize:
 24094                           	opt stack 0
 24095                           tblptru	equ	0xFF8
 24096                           tblptrh	equ	0xFF7
 24097                           tblptrl	equ	0xFF6
 24098                           tablat	equ	0xFF5
 24099                           prodh	equ	0xFF4
 24100                           prodl	equ	0xFF3
 24101                           intcon	equ	0xFF2
 24102                           intcon2	equ	0xFF1
 24103                           intcon3	equ	0xFF0
 24104                           indf0	equ	0xFEF
 24105                           postinc0	equ	0xFEE
 24106                           fsr0h	equ	0xFEA
 24107                           fsr0l	equ	0xFE9
 24108                           wreg	equ	0xFE8
 24109                           indf1	equ	0xFE7
 24110                           postdec1	equ	0xFE5
 24111                           plusw1	equ	0xFE3
 24112                           fsr1h	equ	0xFE2
 24113                           fsr1l	equ	0xFE1
 24114                           indf2	equ	0xFDF
 24115                           postinc2	equ	0xFDE
 24116                           postdec2	equ	0xFDD
 24117                           plusw2	equ	0xFDB
 24118                           fsr2h	equ	0xFDA
 24119                           fsr2l	equ	0xFD9
 24120                           status	equ	0xFD8
 24121                           
 24122 ;; *************** function _USBMSDInit *****************
 24123 ;; Defined at:
 24124 ;;		line 142 in file "usb_device_msd.c"
 24125 ;; Parameters:    Size  Location     Type
 24126 ;;		None
 24127 ;; Auto vars:     Size  Location     Type
 24128 ;;		None
 24129 ;; Return value:  Size  Location     Type
 24130 ;;                  1    wreg      void 
 24131 ;; Registers used:
 24132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24133 ;; Tracked objects:
 24134 ;;		On entry : 0/0
 24135 ;;		On exit  : 0/0
 24136 ;;		Unchanged: 0/0
 24137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24142 ;;Total ram usage:        3 bytes
 24143 ;; Hardware stack levels used:    1
 24144 ;; Hardware stack levels required when called:    1
 24145 ;; This function calls:
 24146 ;;		_ExternalFlash_MediaDetect
 24147 ;;		_ExternalFlash_MediaInitialize
 24148 ;;		_ResetSenseData
 24149 ;;		_USBTransferOnePacket
 24150 ;; This function is called by:
 24151 ;;		_APP_DeviceMSDInitialize
 24152 ;; This function uses a non-reentrant model
 24153 ;;
 24154                           
 24155                           	psect	text111
 24156  00405E                     __ptext111:
 24157                           	opt stack 0
 24158  00405E                     _USBMSDInit:
 24159                           	opt stack 26
 24160                           
 24161                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 24162                           
 24163                           ;incstack = 0
 24164  00405E  0E00               	movlw	0
 24165  004060  6E01               	movwf	USBTransferOnePacket@dir,c
 24166  004062  0E40               	movlw	64
 24167  004064  6E02               	movwf	USBTransferOnePacket@data,c
 24168  004066  0E0D               	movlw	13
 24169  004068  6E03               	movwf	USBTransferOnePacket@data+1,c
 24170  00406A  0E40               	movlw	64
 24171  00406C  6E04               	movwf	USBTransferOnePacket@len,c
 24172  00406E  0E02               	movlw	2
 24173  004070  ECDD  F022         	call	_USBTransferOnePacket
 24174  004074  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24175  004078  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24176  00407C  C0F2  F0F4         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 24177  004080  C0F3  F0F5         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 24178                           
 24179                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 24180  004084  0E00               	movlw	0
 24181  004086  0100               	movlb	0	; () banked
 24182  004088  6FFA               	movwf	_MSD_State& (0+255),b
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 24186  00408A  0100               	movlb	0	; () banked
 24187  00408C  69F9               	setf	_MSDCommandState& (0+255),b
 24188                           
 24189                           ; BSR set to: 0
 24190                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 24191  00408E  0E00               	movlw	0
 24192  004090  0101               	movlb	1	; () banked
 24193  004092  6F8C               	movwf	_MSDReadState& (0+255),b
 24194                           
 24195                           ; BSR set to: 1
 24196                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 24197  004094  0E00               	movlw	0
 24198  004096  0101               	movlb	1	; () banked
 24199  004098  6F8B               	movwf	_MSDWriteState& (0+255),b
 24200                           
 24201                           ; BSR set to: 1
 24202                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 24203  00409A  0E00               	movlw	0
 24204  00409C  0100               	movlb	0	; () banked
 24205  00409E  6FF8               	movwf	_MSDHostNoData& (0+255),b
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 24209  0040A0  0E00               	movlw	0
 24210  0040A2  0101               	movlb	1	; () banked
 24211  0040A4  6F57               	movwf	_gblNumBLKS& (0+255),b
 24212  0040A6  0E00               	movlw	0
 24213  0040A8  6F58               	movwf	(_gblNumBLKS+1)& (0+255),b
 24214  0040AA  0E00               	movlw	0
 24215  0040AC  6F59               	movwf	(_gblNumBLKS+2)& (0+255),b
 24216  0040AE  0E00               	movlw	0
 24217  0040B0  6F5A               	movwf	(_gblNumBLKS+3)& (0+255),b
 24218                           
 24219                           ; BSR set to: 1
 24220                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 24221  0040B2  0E00               	movlw	0
 24222  0040B4  0101               	movlb	1	; () banked
 24223  0040B6  6F53               	movwf	_gblBLKLen& (0+255),b
 24224  0040B8  0E00               	movlw	0
 24225  0040BA  6F54               	movwf	(_gblBLKLen+1)& (0+255),b
 24226  0040BC  0E00               	movlw	0
 24227  0040BE  6F55               	movwf	(_gblBLKLen+2)& (0+255),b
 24228  0040C0  0E00               	movlw	0
 24229  0040C2  6F56               	movwf	(_gblBLKLen+3)& (0+255),b
 24230                           
 24231                           ; BSR set to: 1
 24232                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 24233  0040C4  0E01               	movlw	1
 24234  0040C6  0101               	movlb	1	; () banked
 24235  0040C8  6F87               	movwf	_MSDCBWValid& (0+255),b
 24236                           
 24237                           ; BSR set to: 1
 24238                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 24239  0040CA  0E00               	movlw	0
 24240  0040CC  0101               	movlb	1	; () banked
 24241  0040CE  6F79               	movwf	(_gblMediaPresent+1)& (0+255),b
 24242  0040D0  0E00               	movlw	0
 24243  0040D2  6F78               	movwf	_gblMediaPresent& (0+255),b
 24244                           
 24245                           ; BSR set to: 1
 24246                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 24247  0040D4  0E00               	movlw	0
 24248  0040D6  0101               	movlb	1	; () banked
 24249  0040D8  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 24250  0040DA  D049               	goto	l9789
 24251  0040DC                     l9777:
 24252                           
 24253                           ; BSR set to: 1
 24254                           ;usb_device_msd.c: 161: {
 24255                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 24256  0040DC  0101               	movlb	1	; () banked
 24257  0040DE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24258  0040E0  0D01               	mullw	1
 24259  0040E2  0E88               	movlw	low _SoftDetach
 24260  0040E4  24F3               	addwf	prodl,w,c
 24261  0040E6  6ED9               	movwf	fsr2l,c
 24262  0040E8  0E01               	movlw	high _SoftDetach
 24263  0040EA  20F4               	addwfc	prodh,w,c
 24264  0040EC  6EDA               	movwf	fsr2h,c
 24265  0040EE  0E00               	movlw	0
 24266  0040F0  6EDF               	movwf	indf2,c
 24267                           
 24268                           ; BSR set to: 1
 24269                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 24270  0040F2  C1C6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 24271  0040F6  C1C7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 24272  0040FA  D801               	call	u6428
 24273  0040FC  D00A               	goto	u6429
 24274  0040FE                     u6428:
 24275  0040FE  0005               	push	
 24276  004100  6EFA               	movwf	pclath,c
 24277  004102  0101               	movlb	1	; () banked
 24278  004104  51BE               	movf	(_LUN+6)& (0+255),w,b
 24279  004106  6EFD               	movwf	tosl,c
 24280  004108  51BF               	movf	(_LUN+7)& (0+255),w,b
 24281  00410A  6EFE               	movwf	tosh,c
 24282  00410C  6AFF               	clrf	tosu,c
 24283  00410E  50FA               	movf	pclath,w,c
 24284  004110  0012               	return		;indir
 24285  004112                     u6429:
 24286  004112  0900               	iorlw	0
 24287  004114  B4D8               	btfsc	status,2,c
 24288  004116  D027               	goto	l9785
 24289                           
 24290                           ;usb_device_msd.c: 167: {
 24291                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 24292  004118  C1C6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 24293  00411C  C1C7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 24294  004120  D801               	call	u6448
 24295  004122  D00A               	goto	u6449
 24296  004124                     u6448:
 24297  004124  0005               	push	
 24298  004126  6EFA               	movwf	pclath,c
 24299  004128  0101               	movlb	1	; () banked
 24300  00412A  51B8               	movf	_LUN& (0+255),w,b
 24301  00412C  6EFD               	movwf	tosl,c
 24302  00412E  51B9               	movf	(_LUN+1)& (0+255),w,b
 24303  004130  6EFE               	movwf	tosh,c
 24304  004132  6AFF               	clrf	tosu,c
 24305  004134  50FA               	movf	pclath,w,c
 24306  004136  0012               	return		;indir
 24307  004138                     u6449:
 24308  004138  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 24309  00413A  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 24310  00413C  B4D8               	btfsc	status,2,c
 24311  00413E  D013               	goto	l9785
 24312                           
 24313                           ;usb_device_msd.c: 170: {
 24314                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 24315  004140  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 24316  004144  0E01               	movlw	1
 24317  004146  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 24318  004148  0E00               	movlw	0
 24319  00414A  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 24320  00414C  2A0C               	incf	??_USBMSDInit,f,c
 24321  00414E  D003               	goto	u6464
 24322  004150                     u6465:
 24323  004150  90D8               	bcf	status,0,c
 24324  004152  360D               	rlcf	??_USBMSDInit+1,f,c
 24325  004154  360E               	rlcf	??_USBMSDInit+2,f,c
 24326  004156                     u6464:
 24327  004156  2E0C               	decfsz	??_USBMSDInit,f,c
 24328  004158  D7FB               	goto	u6465
 24329  00415A  500D               	movf	??_USBMSDInit+1,w,c
 24330  00415C  0101               	movlb	1	; () banked
 24331  00415E  1378               	iorwf	_gblMediaPresent& (0+255),f,b
 24332  004160  500E               	movf	??_USBMSDInit+2,w,c
 24333  004162  0101               	movlb	1	; () banked
 24334  004164  1379               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 24335  004166                     l9785:
 24336                           
 24337                           ;usb_device_msd.c: 174: }
 24338                           ;usb_device_msd.c: 175: }
 24339                           ;usb_device_msd.c: 176: ResetSenseData();
 24340  004166  EC5B  F02F         	call	_ResetSenseData	;wreg free
 24341  00416A  0101               	movlb	1	; () banked
 24342  00416C  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 24343  00416E                     l9789:
 24344                           
 24345                           ; BSR set to: 1
 24346  00416E  0101               	movlb	1	; () banked
 24347  004170  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24348  004172  A4D8               	btfss	status,2,c
 24349  004174  0012               	return	
 24350  004176  D7B2               	goto	l9777
 24351  004178                     __end_of_USBMSDInit:
 24352                           	opt stack 0
 24353                           tosu	equ	0xFFF
 24354                           tosh	equ	0xFFE
 24355                           tosl	equ	0xFFD
 24356                           pclath	equ	0xFFA
 24357                           tblptru	equ	0xFF8
 24358                           tblptrh	equ	0xFF7
 24359                           tblptrl	equ	0xFF6
 24360                           tablat	equ	0xFF5
 24361                           prodh	equ	0xFF4
 24362                           prodl	equ	0xFF3
 24363                           intcon	equ	0xFF2
 24364                           intcon2	equ	0xFF1
 24365                           intcon3	equ	0xFF0
 24366                           indf0	equ	0xFEF
 24367                           postinc0	equ	0xFEE
 24368                           fsr0h	equ	0xFEA
 24369                           fsr0l	equ	0xFE9
 24370                           wreg	equ	0xFE8
 24371                           indf1	equ	0xFE7
 24372                           postdec1	equ	0xFE5
 24373                           plusw1	equ	0xFE3
 24374                           fsr1h	equ	0xFE2
 24375                           fsr1l	equ	0xFE1
 24376                           indf2	equ	0xFDF
 24377                           postinc2	equ	0xFDE
 24378                           postdec2	equ	0xFDD
 24379                           plusw2	equ	0xFDB
 24380                           fsr2h	equ	0xFDA
 24381                           fsr2l	equ	0xFD9
 24382                           status	equ	0xFD8
 24383                           
 24384 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 24385 ;; Defined at:
 24386 ;;		line 80 in file "app_device_custom_hid.c"
 24387 ;; Parameters:    Size  Location     Type
 24388 ;;		None
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;		None
 24391 ;; Return value:  Size  Location     Type
 24392 ;;                  1    wreg      void 
 24393 ;; Registers used:
 24394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24395 ;; Tracked objects:
 24396 ;;		On entry : 0/0
 24397 ;;		On exit  : 0/0
 24398 ;;		Unchanged: 0/0
 24399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24404 ;;Total ram usage:        0 bytes
 24405 ;; Hardware stack levels used:    1
 24406 ;; Hardware stack levels required when called:    2
 24407 ;; This function calls:
 24408 ;;		_USBEnableEndpoint
 24409 ;;		_USBTransferOnePacket
 24410 ;; This function is called by:
 24411 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24412 ;; This function uses a non-reentrant model
 24413 ;;
 24414                           
 24415                           	psect	text112
 24416  0072C0                     __ptext112:
 24417                           	opt stack 0
 24418  0072C0                     _APP_DeviceCustomHIDInitialize:
 24419                           	opt stack 26
 24420                           
 24421                           ;app_device_custom_hid.c: 84: USBInHandle = 0;
 24422                           
 24423                           ; BSR set to: 1
 24424                           ;incstack = 0
 24425  0072C0  0E00               	movlw	0
 24426  0072C2  6E59               	movwf	_USBInHandle,c
 24427  0072C4  0E00               	movlw	0
 24428  0072C6  6E5A               	movwf	_USBInHandle+1,c
 24429                           
 24430                           ;app_device_custom_hid.c: 87: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 24431  0072C8  0E1E               	movlw	30
 24432  0072CA  6E09               	movwf	USBEnableEndpoint@options,c
 24433  0072CC  0E01               	movlw	1
 24434  0072CE  ECA3  F038         	call	_USBEnableEndpoint
 24435                           
 24436                           ;app_device_custom_hid.c: 90: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 24437  0072D2  0E00               	movlw	0
 24438  0072D4  6E01               	movwf	USBTransferOnePacket@dir,c
 24439  0072D6  0E00               	movlw	low _ReceivedDataBuffer
 24440  0072D8  6E02               	movwf	USBTransferOnePacket@data,c
 24441  0072DA  0E03               	movlw	high _ReceivedDataBuffer
 24442  0072DC  6E03               	movwf	USBTransferOnePacket@data+1,c
 24443  0072DE  0E40               	movlw	64
 24444  0072E0  6E04               	movwf	USBTransferOnePacket@len,c
 24445  0072E2  0E01               	movlw	1
 24446  0072E4  ECDD  F022         	call	_USBTransferOnePacket
 24447  0072E8  C001  F174         	movff	?_USBTransferOnePacket,_USBOutHandle
 24448  0072EC  C002  F175         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 24449  0072F0  0012               	return		;funcret
 24450  0072F2                     __end_of_APP_DeviceCustomHIDInitialize:
 24451                           	opt stack 0
 24452                           tosu	equ	0xFFF
 24453                           tosh	equ	0xFFE
 24454                           tosl	equ	0xFFD
 24455                           pclath	equ	0xFFA
 24456                           tblptru	equ	0xFF8
 24457                           tblptrh	equ	0xFF7
 24458                           tblptrl	equ	0xFF6
 24459                           tablat	equ	0xFF5
 24460                           prodh	equ	0xFF4
 24461                           prodl	equ	0xFF3
 24462                           intcon	equ	0xFF2
 24463                           intcon2	equ	0xFF1
 24464                           intcon3	equ	0xFF0
 24465                           indf0	equ	0xFEF
 24466                           postinc0	equ	0xFEE
 24467                           fsr0h	equ	0xFEA
 24468                           fsr0l	equ	0xFE9
 24469                           wreg	equ	0xFE8
 24470                           indf1	equ	0xFE7
 24471                           postdec1	equ	0xFE5
 24472                           plusw1	equ	0xFE3
 24473                           fsr1h	equ	0xFE2
 24474                           fsr1l	equ	0xFE1
 24475                           indf2	equ	0xFDF
 24476                           postinc2	equ	0xFDE
 24477                           postdec2	equ	0xFDD
 24478                           plusw2	equ	0xFDB
 24479                           fsr2h	equ	0xFDA
 24480                           fsr2l	equ	0xFD9
 24481                           status	equ	0xFD8
 24482                           
 24483 ;; *************** function _USBEnableEndpoint *****************
 24484 ;; Defined at:
 24485 ;;		line 878 in file "usb_device.c"
 24486 ;; Parameters:    Size  Location     Type
 24487 ;;  ep              1    wreg     unsigned char 
 24488 ;;  options         1    8[COMRAM] unsigned char 
 24489 ;; Auto vars:     Size  Location     Type
 24490 ;;  ep              1   11[COMRAM] unsigned char 
 24491 ;;  p               2    9[COMRAM] PTR unsigned char 
 24492 ;;		 -> UEP0(1), 
 24493 ;; Return value:  Size  Location     Type
 24494 ;;                  1    wreg      void 
 24495 ;; Registers used:
 24496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/0
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24503 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24506 ;;Total ram usage:        4 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:    1
 24509 ;; This function calls:
 24510 ;;		_USBConfigureEndpoint
 24511 ;; This function is called by:
 24512 ;;		_APP_DeviceCustomHIDInitialize
 24513 ;;		_APP_DeviceMSDInitialize
 24514 ;; This function uses a non-reentrant model
 24515 ;;
 24516                           
 24517                           	psect	text113
 24518  007146                     __ptext113:
 24519                           	opt stack 0
 24520  007146                     _USBEnableEndpoint:
 24521                           	opt stack 26
 24522                           
 24523                           ;incstack = 0
 24524                           ;USBEnableEndpoint@ep stored from wreg
 24525  007146  6E0C               	movwf	USBEnableEndpoint@ep,c
 24526                           
 24527                           ;usb_device.c: 880: unsigned char* p;
 24528                           ;usb_device.c: 884: if(options & 0x04)
 24529  007148  A409               	btfss	USBEnableEndpoint@options,2,c
 24530  00714A  D005               	goto	l9743
 24531                           
 24532                           ;usb_device.c: 885: {
 24533                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 24534  00714C  0E00               	movlw	0
 24535  00714E  6E01               	movwf	USBConfigureEndpoint@direction,c
 24536  007150  500C               	movf	USBEnableEndpoint@ep,w,c
 24537  007152  ECB0  F02D         	call	_USBConfigureEndpoint
 24538  007156                     l9743:
 24539                           
 24540                           ;usb_device.c: 887: }
 24541                           ;usb_device.c: 888: if(options & 0x02)
 24542  007156  A209               	btfss	USBEnableEndpoint@options,1,c
 24543  007158  D005               	goto	l9747
 24544                           
 24545                           ;usb_device.c: 889: {
 24546                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 24547  00715A  0E01               	movlw	1
 24548  00715C  6E01               	movwf	USBConfigureEndpoint@direction,c
 24549  00715E  500C               	movf	USBEnableEndpoint@ep,w,c
 24550  007160  ECB0  F02D         	call	_USBConfigureEndpoint
 24551  007164                     l9747:
 24552                           
 24553                           ;usb_device.c: 891: }
 24554                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 24555  007164  500C               	movf	USBEnableEndpoint@ep,w,c
 24556  007166  0D01               	mullw	1
 24557  007168  0E26               	movlw	38
 24558  00716A  24F3               	addwf	prodl,w,c
 24559  00716C  6E0A               	movwf	USBEnableEndpoint@p,c
 24560  00716E  0E0F               	movlw	15
 24561  007170  20F4               	addwfc	prodh,w,c
 24562  007172  6E0B               	movwf	USBEnableEndpoint@p+1,c
 24563                           
 24564                           ;usb_device.c: 901: *p = options;
 24565  007174  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 24566  007178  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 24567  00717C  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 24568  007180  0012               	return		;funcret
 24569  007182                     __end_of_USBEnableEndpoint:
 24570                           	opt stack 0
 24571                           tosu	equ	0xFFF
 24572                           tosh	equ	0xFFE
 24573                           tosl	equ	0xFFD
 24574                           pclath	equ	0xFFA
 24575                           tblptru	equ	0xFF8
 24576                           tblptrh	equ	0xFF7
 24577                           tblptrl	equ	0xFF6
 24578                           tablat	equ	0xFF5
 24579                           prodh	equ	0xFF4
 24580                           prodl	equ	0xFF3
 24581                           intcon	equ	0xFF2
 24582                           intcon2	equ	0xFF1
 24583                           intcon3	equ	0xFF0
 24584                           indf0	equ	0xFEF
 24585                           postinc0	equ	0xFEE
 24586                           fsr0h	equ	0xFEA
 24587                           fsr0l	equ	0xFE9
 24588                           wreg	equ	0xFE8
 24589                           indf1	equ	0xFE7
 24590                           postdec1	equ	0xFE5
 24591                           plusw1	equ	0xFE3
 24592                           fsr1h	equ	0xFE2
 24593                           fsr1l	equ	0xFE1
 24594                           indf2	equ	0xFDF
 24595                           postinc2	equ	0xFDE
 24596                           postdec2	equ	0xFDD
 24597                           plusw2	equ	0xFDB
 24598                           fsr2h	equ	0xFDA
 24599                           fsr2l	equ	0xFD9
 24600                           status	equ	0xFD8
 24601                           
 24602 ;; *************** function _USBConfigureEndpoint *****************
 24603 ;; Defined at:
 24604 ;;		line 1545 in file "usb_device.c"
 24605 ;; Parameters:    Size  Location     Type
 24606 ;;  EPNum           1    wreg     unsigned char 
 24607 ;;  direction       1    0[COMRAM] unsigned char 
 24608 ;; Auto vars:     Size  Location     Type
 24609 ;;  EPNum           1    5[COMRAM] unsigned char 
 24610 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 24611 ;;		 -> BDT(48), 
 24612 ;; Return value:  Size  Location     Type
 24613 ;;                  1    wreg      void 
 24614 ;; Registers used:
 24615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24616 ;; Tracked objects:
 24617 ;;		On entry : 0/0
 24618 ;;		On exit  : 0/0
 24619 ;;		Unchanged: 0/0
 24620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24622 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24624 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24625 ;;Total ram usage:        8 bytes
 24626 ;; Hardware stack levels used:    1
 24627 ;; This function calls:
 24628 ;;		Nothing
 24629 ;; This function is called by:
 24630 ;;		_USBEnableEndpoint
 24631 ;; This function uses a non-reentrant model
 24632 ;;
 24633                           
 24634                           	psect	text114
 24635  005B60                     __ptext114:
 24636                           	opt stack 0
 24637  005B60                     _USBConfigureEndpoint:
 24638                           	opt stack 26
 24639                           
 24640                           ;incstack = 0
 24641                           ;USBConfigureEndpoint@EPNum stored from wreg
 24642  005B60  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 24643                           
 24644                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 24645                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 24646  005B62  0E00               	movlw	0
 24647  005B64  6E07               	movwf	USBConfigureEndpoint@handle,c
 24648  005B66  0E0D               	movlw	13
 24649  005B68  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 24650                           
 24651                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 24652  005B6A  5001               	movf	USBConfigureEndpoint@direction,w,c
 24653  005B6C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 24654  005B6E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 24655  005B70  90D8               	bcf	status,0,c
 24656  005B72  3602               	rlcf	??_USBConfigureEndpoint,f,c
 24657  005B74  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 24658  005B76  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 24659  005B78  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 24660  005B7A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 24661  005B7C  90D8               	bcf	status,0,c
 24662  005B7E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24663  005B80  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24664  005B82  90D8               	bcf	status,0,c
 24665  005B84  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24666  005B86  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24667  005B88  5002               	movf	??_USBConfigureEndpoint,w,c
 24668  005B8A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 24669  005B8C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 24670  005B8E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 24671  005B90  90D8               	bcf	status,0,c
 24672  005B92  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24673  005B94  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24674  005B96  90D8               	bcf	status,0,c
 24675  005B98  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 24676  005B9A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 24677  005B9C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 24678  005B9E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 24679  005BA0  5005               	movf	??_USBConfigureEndpoint+3,w,c
 24680  005BA2  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 24681                           
 24682                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 24683  005BA4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24684  005BA8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24685  005BAC  9EDF               	bcf	indf2,7,c
 24686                           
 24687                           ;usb_device.c: 1559: if(direction == 0)
 24688  005BAE  5001               	movf	USBConfigureEndpoint@direction,w,c
 24689  005BB0  A4D8               	btfss	status,2,c
 24690  005BB2  D007               	goto	l9569
 24691                           
 24692                           ;usb_device.c: 1560: {
 24693                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 24694  005BB4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 24695  005BB6  0D02               	mullw	2
 24696  005BB8  0E39               	movlw	low _pBDTEntryOut
 24697  005BBA  24F3               	addwf	prodl,w,c
 24698  005BBC  6ED9               	movwf	fsr2l,c
 24699  005BBE  0E01               	movlw	high _pBDTEntryOut
 24700  005BC0  D006               	goto	L14
 24701  005BC2                     l9569:
 24702                           
 24703                           ;usb_device.c: 1563: else
 24704                           ;usb_device.c: 1564: {
 24705                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 24706  005BC2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 24707  005BC4  0D02               	mullw	2
 24708  005BC6  0EEE               	movlw	low _pBDTEntryIn
 24709  005BC8  24F3               	addwf	prodl,w,c
 24710  005BCA  6ED9               	movwf	fsr2l,c
 24711  005BCC  0E00               	movlw	high _pBDTEntryIn
 24712  005BCE                     L14:
 24713  005BCE  20F4               	addwfc	prodh,w,c
 24714  005BD0  6EDA               	movwf	fsr2h,c
 24715  005BD2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 24716  005BD6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 24717                           
 24718                           ;usb_device.c: 1566: }
 24719                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 24720  005BDA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 24721  005BDE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 24722  005BE2  9CDF               	bcf	indf2,6,c
 24723                           
 24724                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 24725  005BE4  EE20 F004          	lfsr	2,4
 24726  005BE8  5007               	movf	USBConfigureEndpoint@handle,w,c
 24727  005BEA  26D9               	addwf	fsr2l,f,c
 24728  005BEC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 24729  005BEE  22DA               	addwfc	fsr2h,f,c
 24730  005BF0  8CDF               	bsf	indf2,6,c
 24731  005BF2  0012               	return		;funcret
 24732  005BF4                     __end_of_USBConfigureEndpoint:
 24733                           	opt stack 0
 24734                           tosu	equ	0xFFF
 24735                           tosh	equ	0xFFE
 24736                           tosl	equ	0xFFD
 24737                           pclath	equ	0xFFA
 24738                           tblptru	equ	0xFF8
 24739                           tblptrh	equ	0xFF7
 24740                           tblptrl	equ	0xFF6
 24741                           tablat	equ	0xFF5
 24742                           prodh	equ	0xFF4
 24743                           prodl	equ	0xFF3
 24744                           intcon	equ	0xFF2
 24745                           intcon2	equ	0xFF1
 24746                           intcon3	equ	0xFF0
 24747                           indf0	equ	0xFEF
 24748                           postinc0	equ	0xFEE
 24749                           fsr0h	equ	0xFEA
 24750                           fsr0l	equ	0xFE9
 24751                           wreg	equ	0xFE8
 24752                           indf1	equ	0xFE7
 24753                           postdec1	equ	0xFE5
 24754                           plusw1	equ	0xFE3
 24755                           fsr1h	equ	0xFE2
 24756                           fsr1l	equ	0xFE1
 24757                           indf2	equ	0xFDF
 24758                           postinc2	equ	0xFDE
 24759                           postdec2	equ	0xFDD
 24760                           plusw2	equ	0xFDB
 24761                           fsr2h	equ	0xFDA
 24762                           fsr2l	equ	0xFD9
 24763                           status	equ	0xFD8
 24764                           
 24765 ;; *************** function _USBCtrlTrfOutHandler *****************
 24766 ;; Defined at:
 24767 ;;		line 2540 in file "usb_device.c"
 24768 ;; Parameters:    Size  Location     Type
 24769 ;;		None
 24770 ;; Auto vars:     Size  Location     Type
 24771 ;;		None
 24772 ;; Return value:  Size  Location     Type
 24773 ;;                  1    wreg      void 
 24774 ;; Registers used:
 24775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24776 ;; Tracked objects:
 24777 ;;		On entry : 0/0
 24778 ;;		On exit  : 0/0
 24779 ;;		Unchanged: 0/0
 24780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24785 ;;Total ram usage:        0 bytes
 24786 ;; Hardware stack levels used:    1
 24787 ;; Hardware stack levels required when called:    2
 24788 ;; This function calls:
 24789 ;;		_USBCtrlTrfRxService
 24790 ;; This function is called by:
 24791 ;;		_USBCtrlEPService
 24792 ;; This function uses a non-reentrant model
 24793 ;;
 24794                           
 24795                           	psect	text115
 24796  0066FC                     __ptext115:
 24797                           	opt stack 0
 24798  0066FC                     _USBCtrlTrfOutHandler:
 24799                           	opt stack 26
 24800                           
 24801                           ;usb_device.c: 2542: if(controlTransferState == 2)
 24802                           
 24803                           ;incstack = 0
 24804  0066FC  0E02               	movlw	2
 24805  0066FE  0100               	movlb	0	; () banked
 24806  006700  19FC               	xorwf	_controlTransferState& (0+255),w,b
 24807  006702  A4D8               	btfss	status,2,c
 24808  006704  D003               	goto	l11901
 24809                           
 24810                           ; BSR set to: 0
 24811                           ;usb_device.c: 2543: {
 24812                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 24813  006706  ECBC  F020         	call	_USBCtrlTrfRxService	;wreg free
 24814                           
 24815                           ;usb_device.c: 2545: }
 24816  00670A  0012               	return	
 24817  00670C                     l11901:
 24818                           
 24819                           ;usb_device.c: 2546: else
 24820                           ;usb_device.c: 2547: {
 24821                           ;usb_device.c: 2550: controlTransferState = 0;
 24822  00670C  0E00               	movlw	0
 24823  00670E  0100               	movlb	0	; () banked
 24824  006710  6FFC               	movwf	_controlTransferState& (0+255),b
 24825                           
 24826                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 24827  006712  0101               	movlb	1	; () banked
 24828  006714  5193               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 24829  006716  A4D8               	btfss	status,2,c
 24830  006718  D01F               	goto	l11909
 24831                           
 24832                           ; BSR set to: 1
 24833                           ;usb_device.c: 2558: {
 24834                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 24835  00671A  EE20 F001          	lfsr	2,1
 24836  00671E  505B               	movf	_pBDTEntryEP0OutNext,w,c
 24837  006720  26D9               	addwf	fsr2l,f,c
 24838  006722  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 24839  006724  22DA               	addwfc	fsr2h,f,c
 24840  006726  0E08               	movlw	8
 24841  006728  6EDF               	movwf	indf2,c
 24842                           
 24843                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24844  00672A  EE20 F002          	lfsr	2,2
 24845  00672E  505B               	movf	_pBDTEntryEP0OutNext,w,c
 24846  006730  26D9               	addwf	fsr2l,f,c
 24847  006732  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 24848  006734  22DA               	addwfc	fsr2h,f,c
 24849  006736  0E30               	movlw	48
 24850  006738  6EDE               	movwf	postinc2,c
 24851  00673A  0E0D               	movlw	13
 24852  00673C  6EDD               	movwf	postdec2,c
 24853                           
 24854                           ; BSR set to: 1
 24855                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24856  00673E  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24857  006742  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24858  006746  0E0C               	movlw	12
 24859  006748  6EDF               	movwf	indf2,c
 24860                           
 24861                           ; BSR set to: 1
 24862                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24863  00674A  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24864  00674E  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24865  006752  0E00               	movlw	0
 24866  006754  8EDB               	bsf	plusw2,7,c
 24867                           
 24868                           ;usb_device.c: 2563: }
 24869  006756  0012               	return	
 24870  006758                     l11909:
 24871                           
 24872                           ; BSR set to: 1
 24873                           ;usb_device.c: 2564: else
 24874                           ;usb_device.c: 2565: {
 24875                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 24876  006758  0E00               	movlw	0
 24877  00675A  0101               	movlb	1	; () banked
 24878  00675C  6F93               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 24879                           
 24880                           ; BSR set to: 1
 24881  00675E  0012               	return	
 24882  006760                     __end_of_USBCtrlTrfOutHandler:
 24883                           	opt stack 0
 24884                           tosu	equ	0xFFF
 24885                           tosh	equ	0xFFE
 24886                           tosl	equ	0xFFD
 24887                           pclath	equ	0xFFA
 24888                           tblptru	equ	0xFF8
 24889                           tblptrh	equ	0xFF7
 24890                           tblptrl	equ	0xFF6
 24891                           tablat	equ	0xFF5
 24892                           prodh	equ	0xFF4
 24893                           prodl	equ	0xFF3
 24894                           intcon	equ	0xFF2
 24895                           intcon2	equ	0xFF1
 24896                           intcon3	equ	0xFF0
 24897                           indf0	equ	0xFEF
 24898                           postinc0	equ	0xFEE
 24899                           fsr0h	equ	0xFEA
 24900                           fsr0l	equ	0xFE9
 24901                           wreg	equ	0xFE8
 24902                           indf1	equ	0xFE7
 24903                           postdec1	equ	0xFE5
 24904                           plusw1	equ	0xFE3
 24905                           fsr1h	equ	0xFE2
 24906                           fsr1l	equ	0xFE1
 24907                           indf2	equ	0xFDF
 24908                           postinc2	equ	0xFDE
 24909                           postdec2	equ	0xFDD
 24910                           plusw2	equ	0xFDB
 24911                           fsr2h	equ	0xFDA
 24912                           fsr2l	equ	0xFD9
 24913                           status	equ	0xFD8
 24914                           
 24915 ;; *************** function _USBCtrlTrfRxService *****************
 24916 ;; Defined at:
 24917 ;;		line 1854 in file "usb_device.c"
 24918 ;; Parameters:    Size  Location     Type
 24919 ;;		None
 24920 ;; Auto vars:     Size  Location     Type
 24921 ;;  byteToRead      1    1[COMRAM] unsigned char 
 24922 ;;  i               1    0[COMRAM] unsigned char 
 24923 ;; Return value:  Size  Location     Type
 24924 ;;                  1    wreg      void 
 24925 ;; Registers used:
 24926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24927 ;; Tracked objects:
 24928 ;;		On entry : 0/0
 24929 ;;		On exit  : 0/0
 24930 ;;		Unchanged: 0/0
 24931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24936 ;;Total ram usage:        2 bytes
 24937 ;; Hardware stack levels used:    1
 24938 ;; Hardware stack levels required when called:    1
 24939 ;; This function calls:
 24940 ;;		_USBCtrlEPAllowStatusStage
 24941 ;; This function is called by:
 24942 ;;		_USBCtrlTrfOutHandler
 24943 ;; This function uses a non-reentrant model
 24944 ;;
 24945                           
 24946                           	psect	text116
 24947  004178                     __ptext116:
 24948                           	opt stack 0
 24949  004178                     _USBCtrlTrfRxService:
 24950                           	opt stack 26
 24951                           
 24952                           ;usb_device.c: 1856: uint8_t byteToRead;
 24953                           ;usb_device.c: 1857: uint8_t i;
 24954                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 24955                           
 24956                           ;incstack = 0
 24957  004178  EE20 F001          	lfsr	2,1
 24958  00417C  505D               	movf	_pBDTEntryEP0OutCurrent,w,c
 24959  00417E  26D9               	addwf	fsr2l,f,c
 24960  004180  505E               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 24961  004182  22DA               	addwfc	fsr2h,f,c
 24962  004184  50DF               	movf	indf2,w,c
 24963  004186  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 24964                           
 24965                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 24966  004188  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 24967  00418A  0101               	movlb	1	; () banked
 24968  00418C  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 24969  00418E  0E00               	movlw	0
 24970  004190  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 24971  004192  A0D8               	btfss	status,0,c
 24972                           
 24973                           ; BSR set to: 1
 24974                           ;usb_device.c: 1868: {
 24975                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 24976  004194  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 24977                           
 24978                           ; BSR set to: 1
 24979                           ;usb_device.c: 1870: }
 24980                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 24981                           
 24982                           ; BSR set to: 1
 24983  004198  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 24984  00419A  0101               	movlb	1	; () banked
 24985  00419C  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 24986  00419E  0E00               	movlw	0
 24987  0041A0  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 24988                           
 24989                           ; BSR set to: 1
 24990                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 24991  0041A2  0E00               	movlw	0
 24992  0041A4  6E01               	movwf	USBCtrlTrfRxService@i,c
 24993  0041A6  D012               	goto	l11033
 24994  0041A8                     l11027:
 24995                           
 24996                           ; BSR set to: 1
 24997                           ;usb_device.c: 1877: {
 24998                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 24999  0041A8  5001               	movf	USBCtrlTrfRxService@i,w,c
 25000  0041AA  0D01               	mullw	1
 25001  0041AC  0E38               	movlw	56
 25002  0041AE  24F3               	addwf	prodl,w,c
 25003  0041B0  6ED9               	movwf	fsr2l,c
 25004  0041B2  0E0D               	movlw	13
 25005  0041B4  20F4               	addwfc	prodh,w,c
 25006  0041B6  6EDA               	movwf	fsr2h,c
 25007  0041B8  C131  FFE1         	movff	_outPipes,fsr1l
 25008  0041BC  C132  FFE2         	movff	_outPipes+1,fsr1h
 25009  0041C0  CFDF FFE7          	movff	indf2,indf1
 25010                           
 25011                           ; BSR set to: 1
 25012  0041C4  0101               	movlb	1	; () banked
 25013  0041C6  4B31               	infsnz	_outPipes& (0+255),f,b
 25014  0041C8  2B32               	incf	(_outPipes+1)& (0+255),f,b
 25015                           
 25016                           ; BSR set to: 1
 25017  0041CA  2A01               	incf	USBCtrlTrfRxService@i,f,c
 25018  0041CC                     l11033:
 25019                           
 25020                           ; BSR set to: 1
 25021  0041CC  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25022  0041CE  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 25023  0041D0  A0D8               	btfss	status,0,c
 25024  0041D2  D7EA               	goto	l11027
 25025                           
 25026                           ; BSR set to: 1
 25027                           ;usb_device.c: 1879: }
 25028                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 25029                           
 25030                           ; BSR set to: 1
 25031  0041D4  0101               	movlb	1	; () banked
 25032  0041D6  5135               	movf	(_outPipes+4)& (0+255),w,b
 25033  0041D8  0101               	movlb	1	; () banked
 25034  0041DA  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 25035  0041DC  B4D8               	btfsc	status,2,c
 25036  0041DE  D032               	goto	l11049
 25037                           
 25038                           ; BSR set to: 1
 25039                           ;usb_device.c: 1884: {
 25040                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 25041  0041E0  EE20 F001          	lfsr	2,1
 25042  0041E4  505B               	movf	_pBDTEntryEP0OutNext,w,c
 25043  0041E6  26D9               	addwf	fsr2l,f,c
 25044  0041E8  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25045  0041EA  22DA               	addwfc	fsr2h,f,c
 25046  0041EC  0E08               	movlw	8
 25047  0041EE  6EDF               	movwf	indf2,c
 25048                           
 25049                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25050  0041F0  EE20 F002          	lfsr	2,2
 25051  0041F4  505B               	movf	_pBDTEntryEP0OutNext,w,c
 25052  0041F6  26D9               	addwf	fsr2l,f,c
 25053  0041F8  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25054  0041FA  22DA               	addwfc	fsr2h,f,c
 25055  0041FC  0E38               	movlw	56
 25056  0041FE  6EDE               	movwf	postinc2,c
 25057  004200  0E0D               	movlw	13
 25058  004202  6EDD               	movwf	postdec2,c
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 25062  004204  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25063  004208  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25064  00420C  BCDF               	btfsc	indf2,6,c
 25065  00420E  D00D               	goto	l11045
 25066                           
 25067                           ; BSR set to: 1
 25068                           ;usb_device.c: 1888: {
 25069                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25070  004210  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25071  004214  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25072  004218  0E48               	movlw	72
 25073  00421A  6EDF               	movwf	indf2,c
 25074                           
 25075                           ; BSR set to: 1
 25076                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25077  00421C  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25078  004220  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25079  004224  0E00               	movlw	0
 25080  004226  8EDB               	bsf	plusw2,7,c
 25081                           
 25082                           ;usb_device.c: 1891: }
 25083  004228  0012               	return	
 25084  00422A                     l11045:
 25085                           
 25086                           ; BSR set to: 1
 25087                           ;usb_device.c: 1892: else
 25088                           ;usb_device.c: 1893: {
 25089                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 25090  00422A  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25091  00422E  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25092  004232  0E08               	movlw	8
 25093  004234  6EDF               	movwf	indf2,c
 25094                           
 25095                           ; BSR set to: 1
 25096                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25097  004236  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25098  00423A  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25099  00423E  0E00               	movlw	0
 25100  004240  8EDB               	bsf	plusw2,7,c
 25101                           
 25102                           ; BSR set to: 1
 25103                           ;usb_device.c: 1896: }
 25104                           ;usb_device.c: 1897: }
 25105  004242  0012               	return	
 25106  004244                     l11049:
 25107                           
 25108                           ; BSR set to: 1
 25109                           ;usb_device.c: 1898: else
 25110                           ;usb_device.c: 1899: {
 25111                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 25112  004244  EE20 F001          	lfsr	2,1
 25113  004248  505B               	movf	_pBDTEntryEP0OutNext,w,c
 25114  00424A  26D9               	addwf	fsr2l,f,c
 25115  00424C  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25116  00424E  22DA               	addwfc	fsr2h,f,c
 25117  004250  0E08               	movlw	8
 25118  004252  6EDF               	movwf	indf2,c
 25119                           
 25120                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25121  004254  EE20 F002          	lfsr	2,2
 25122  004258  505B               	movf	_pBDTEntryEP0OutNext,w,c
 25123  00425A  26D9               	addwf	fsr2l,f,c
 25124  00425C  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25125  00425E  22DA               	addwfc	fsr2h,f,c
 25126  004260  0E30               	movlw	48
 25127  004262  6EDE               	movwf	postinc2,c
 25128  004264  0E0D               	movlw	13
 25129  004266  6EDD               	movwf	postdec2,c
 25130                           
 25131                           ; BSR set to: 1
 25132                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25133  004268  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25134  00426C  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25135  004270  0E04               	movlw	4
 25136  004272  6EDF               	movwf	indf2,c
 25137                           
 25138                           ; BSR set to: 1
 25139                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25140  004274  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25141  004278  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25142  00427C  0E00               	movlw	0
 25143  00427E  8EDB               	bsf	plusw2,7,c
 25144                           
 25145                           ; BSR set to: 1
 25146                           ;usb_device.c: 1928: }
 25147                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 25148                           
 25149                           ; BSR set to: 1
 25150  004280  0101               	movlb	1	; () banked
 25151  004282  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 25152                           
 25153                           ; BSR set to: 1
 25154                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 25155  004284  0100               	movlb	0	; () banked
 25156  004286  51FB               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 25157  004288  A4D8               	btfss	status,2,c
 25158  00428A  0012               	return	
 25159                           
 25160                           ; BSR set to: 0
 25161                           ;usb_device.c: 1944: {
 25162                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 25163  00428C  ECF8  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25164  004290  0012               	return	
 25165  004292                     __end_of_USBCtrlTrfRxService:
 25166                           	opt stack 0
 25167                           tosu	equ	0xFFF
 25168                           tosh	equ	0xFFE
 25169                           tosl	equ	0xFFD
 25170                           pclath	equ	0xFFA
 25171                           tblptru	equ	0xFF8
 25172                           tblptrh	equ	0xFF7
 25173                           tblptrl	equ	0xFF6
 25174                           tablat	equ	0xFF5
 25175                           prodh	equ	0xFF4
 25176                           prodl	equ	0xFF3
 25177                           intcon	equ	0xFF2
 25178                           intcon2	equ	0xFF1
 25179                           intcon3	equ	0xFF0
 25180                           indf0	equ	0xFEF
 25181                           postinc0	equ	0xFEE
 25182                           fsr0h	equ	0xFEA
 25183                           fsr0l	equ	0xFE9
 25184                           wreg	equ	0xFE8
 25185                           indf1	equ	0xFE7
 25186                           postdec1	equ	0xFE5
 25187                           plusw1	equ	0xFE3
 25188                           fsr1h	equ	0xFE2
 25189                           fsr1l	equ	0xFE1
 25190                           indf2	equ	0xFDF
 25191                           postinc2	equ	0xFDE
 25192                           postdec2	equ	0xFDD
 25193                           plusw2	equ	0xFDB
 25194                           fsr2h	equ	0xFDA
 25195                           fsr2l	equ	0xFD9
 25196                           status	equ	0xFD8
 25197                           
 25198 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 25199 ;; Defined at:
 25200 ;;		line 1418 in file "usb_device.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;		None
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;		None
 25205 ;; Return value:  Size  Location     Type
 25206 ;;                  1    wreg      void 
 25207 ;; Registers used:
 25208 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/0
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25218 ;;Total ram usage:        0 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; This function calls:
 25221 ;;		Nothing
 25222 ;; This function is called by:
 25223 ;;		_USBDeviceTasks
 25224 ;;		_USBCtrlEPServiceComplete
 25225 ;;		_USBCtrlTrfRxService
 25226 ;; This function uses a non-reentrant model
 25227 ;;
 25228                           
 25229                           	psect	text117
 25230  004FF0                     __ptext117:
 25231                           	opt stack 0
 25232  004FF0                     _USBCtrlEPAllowStatusStage:
 25233                           	opt stack 26
 25234                           
 25235                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 25236                           
 25237                           ;incstack = 0
 25238  004FF0  0101               	movlb	1	; () banked
 25239  004FF2  5191               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 25240  004FF4  A4D8               	btfss	status,2,c
 25241  004FF6  0012               	return	
 25242                           
 25243                           ; BSR set to: 1
 25244                           ;usb_device.c: 1426: {
 25245                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 25246  004FF8  0E01               	movlw	1
 25247  004FFA  0101               	movlb	1	; () banked
 25248  004FFC  6F91               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25249                           
 25250                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 25251  004FFE  0101               	movlb	1	; () banked
 25252  005000  5190               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 25253  005002  A4D8               	btfss	status,2,c
 25254  005004  0012               	return	
 25255                           
 25256                           ; BSR set to: 1
 25257                           ;usb_device.c: 1429: {
 25258                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 25259  005006  0E01               	movlw	1
 25260  005008  0101               	movlb	1	; () banked
 25261  00500A  6F90               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25262                           
 25263                           ; BSR set to: 1
 25264                           ;usb_device.c: 1434: if(controlTransferState == 2)
 25265  00500C  0E02               	movlw	2
 25266  00500E  0100               	movlb	0	; () banked
 25267  005010  19FC               	xorwf	_controlTransferState& (0+255),w,b
 25268  005012  A4D8               	btfss	status,2,c
 25269  005014  D016               	goto	l10481
 25270                           
 25271                           ; BSR set to: 0
 25272                           ;usb_device.c: 1435: {
 25273                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 25274  005016  0100               	movlb	0	; () banked
 25275  005018  EE20 F001          	lfsr	2,1
 25276  00501C  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 25277  00501E  26D9               	addwf	fsr2l,f,c
 25278  005020  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25279  005022  22DA               	addwfc	fsr2h,f,c
 25280  005024  0E00               	movlw	0
 25281  005026  6EDF               	movwf	indf2,c
 25282                           
 25283                           ; BSR set to: 0
 25284                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25285  005028  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25286  00502C  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25287  005030  0E48               	movlw	72
 25288  005032  6EDF               	movwf	indf2,c
 25289                           
 25290                           ; BSR set to: 0
 25291                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25292  005034  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25293  005038  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25294  00503C  0E00               	movlw	0
 25295  00503E  8EDB               	bsf	plusw2,7,c
 25296                           
 25297                           ;usb_device.c: 1439: }
 25298  005040  0012               	return	
 25299  005042                     l10481:
 25300                           
 25301                           ; BSR set to: 0
 25302                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 25303  005042  0100               	movlb	0	; () banked
 25304  005044  05FC               	decf	_controlTransferState& (0+255),w,b
 25305  005046  A4D8               	btfss	status,2,c
 25306  005048  0012               	return	
 25307                           
 25308                           ; BSR set to: 0
 25309                           ;usb_device.c: 1441: {
 25310                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 25311  00504A  0E00               	movlw	0
 25312  00504C  0101               	movlb	1	; () banked
 25313  00504E  6F93               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25314                           
 25315                           ; BSR set to: 1
 25316                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 25317  005050  EE20 F001          	lfsr	2,1
 25318  005054  505D               	movf	_pBDTEntryEP0OutCurrent,w,c
 25319  005056  26D9               	addwf	fsr2l,f,c
 25320  005058  505E               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25321  00505A  22DA               	addwfc	fsr2h,f,c
 25322  00505C  0E08               	movlw	8
 25323  00505E  6EDF               	movwf	indf2,c
 25324                           
 25325                           ; BSR set to: 1
 25326                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25327  005060  EE20 F002          	lfsr	2,2
 25328  005064  505D               	movf	_pBDTEntryEP0OutCurrent,w,c
 25329  005066  26D9               	addwf	fsr2l,f,c
 25330  005068  505E               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25331  00506A  22DA               	addwfc	fsr2h,f,c
 25332  00506C  0E30               	movlw	48
 25333  00506E  6EDE               	movwf	postinc2,c
 25334  005070  0E0D               	movlw	13
 25335  005072  6EDD               	movwf	postdec2,c
 25336                           
 25337                           ; BSR set to: 1
 25338                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 25339  005074  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25340  005078  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25341  00507C  0E04               	movlw	4
 25342  00507E  6EDF               	movwf	indf2,c
 25343                           
 25344                           ; BSR set to: 1
 25345                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25346  005080  C05D  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25347  005084  C05E  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25348  005088  0E00               	movlw	0
 25349  00508A  8EDB               	bsf	plusw2,7,c
 25350                           
 25351                           ; BSR set to: 1
 25352                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 25353  00508C  0E01               	movlw	1
 25354  00508E  0101               	movlb	1	; () banked
 25355  005090  6F93               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25356                           
 25357                           ; BSR set to: 1
 25358                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 25359  005092  EE20 F001          	lfsr	2,1
 25360  005096  505B               	movf	_pBDTEntryEP0OutNext,w,c
 25361  005098  26D9               	addwf	fsr2l,f,c
 25362  00509A  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25363  00509C  22DA               	addwfc	fsr2h,f,c
 25364  00509E  0E08               	movlw	8
 25365  0050A0  6EDF               	movwf	indf2,c
 25366                           
 25367                           ; BSR set to: 1
 25368                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25369  0050A2  EE20 F002          	lfsr	2,2
 25370  0050A6  505B               	movf	_pBDTEntryEP0OutNext,w,c
 25371  0050A8  26D9               	addwf	fsr2l,f,c
 25372  0050AA  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 25373  0050AC  22DA               	addwfc	fsr2h,f,c
 25374  0050AE  0E30               	movlw	48
 25375  0050B0  6EDE               	movwf	postinc2,c
 25376  0050B2  0E0D               	movlw	13
 25377  0050B4  6EDD               	movwf	postdec2,c
 25378                           
 25379                           ; BSR set to: 1
 25380                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 25381  0050B6  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25382  0050BA  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25383  0050BE  0E80               	movlw	128
 25384  0050C0  6EDF               	movwf	indf2,c
 25385                           
 25386                           ; BSR set to: 1
 25387                           
 25388                           ; BSR set to: 1
 25389                           
 25390                           ; BSR set to: 1
 25391  0050C2  0012               	return	
 25392  0050C4                     __end_of_USBCtrlEPAllowStatusStage:
 25393                           	opt stack 0
 25394                           tosu	equ	0xFFF
 25395                           tosh	equ	0xFFE
 25396                           tosl	equ	0xFFD
 25397                           pclath	equ	0xFFA
 25398                           tblptru	equ	0xFF8
 25399                           tblptrh	equ	0xFF7
 25400                           tblptrl	equ	0xFF6
 25401                           tablat	equ	0xFF5
 25402                           prodh	equ	0xFF4
 25403                           prodl	equ	0xFF3
 25404                           intcon	equ	0xFF2
 25405                           intcon2	equ	0xFF1
 25406                           intcon3	equ	0xFF0
 25407                           indf0	equ	0xFEF
 25408                           postinc0	equ	0xFEE
 25409                           fsr0h	equ	0xFEA
 25410                           fsr0l	equ	0xFE9
 25411                           wreg	equ	0xFE8
 25412                           indf1	equ	0xFE7
 25413                           postdec1	equ	0xFE5
 25414                           plusw1	equ	0xFE3
 25415                           fsr1h	equ	0xFE2
 25416                           fsr1l	equ	0xFE1
 25417                           indf2	equ	0xFDF
 25418                           postinc2	equ	0xFDE
 25419                           postdec2	equ	0xFDD
 25420                           plusw2	equ	0xFDB
 25421                           fsr2h	equ	0xFDA
 25422                           fsr2l	equ	0xFD9
 25423                           status	equ	0xFD8
 25424                           
 25425 ;; *************** function _USBCtrlTrfInHandler *****************
 25426 ;; Defined at:
 25427 ;;		line 2594 in file "usb_device.c"
 25428 ;; Parameters:    Size  Location     Type
 25429 ;;		None
 25430 ;; Auto vars:     Size  Location     Type
 25431 ;;  lastDTS         1    1[COMRAM] unsigned char 
 25432 ;; Return value:  Size  Location     Type
 25433 ;;                  1    wreg      void 
 25434 ;; Registers used:
 25435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25436 ;; Tracked objects:
 25437 ;;		On entry : 0/0
 25438 ;;		On exit  : 0/0
 25439 ;;		Unchanged: 0/0
 25440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25445 ;;Total ram usage:        1 bytes
 25446 ;; Hardware stack levels used:    1
 25447 ;; Hardware stack levels required when called:    1
 25448 ;; This function calls:
 25449 ;;		_USBCtrlTrfTxService
 25450 ;; This function is called by:
 25451 ;;		_USBCtrlEPService
 25452 ;; This function uses a non-reentrant model
 25453 ;;
 25454                           
 25455                           	psect	text118
 25456  004F18                     __ptext118:
 25457                           	opt stack 0
 25458  004F18                     _USBCtrlTrfInHandler:
 25459                           	opt stack 27
 25460                           
 25461                           ;usb_device.c: 2596: uint8_t lastDTS;
 25462                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25463                           
 25464                           ;incstack = 0
 25465  004F18  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25466  004F1C  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25467  004F20  0100               	movlb	0	; () banked
 25468  004F22  0E00               	movlw	0
 25469  004F24  BCDF               	btfsc	indf2,6,c
 25470  004F26  0E01               	movlw	1
 25471  004F28  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 25472                           
 25473                           ; BSR set to: 0
 25474                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 25475  004F2A  0E04               	movlw	4
 25476  004F2C  0100               	movlb	0	; () banked
 25477  004F2E  19EE               	xorwf	_pBDTEntryIn& (0+255),w,b
 25478  004F30  0100               	movlb	0	; () banked
 25479  004F32  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 25480  004F34  0100               	movlb	0	; () banked
 25481  004F36  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25482  004F38  0100               	movlb	0	; () banked
 25483  004F3A  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25484                           
 25485                           ; BSR set to: 0
 25486                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 25487  004F3C  0E08               	movlw	8
 25488  004F3E  185F               	xorwf	_USBDeviceState,w,c
 25489  004F40  A4D8               	btfss	status,2,c
 25490  004F42  D00D               	goto	l11925
 25491                           
 25492                           ; BSR set to: 0
 25493                           ;usb_device.c: 2607: {
 25494                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 25495  004F44  010D               	movlb	13	; () banked
 25496  004F46  5132               	movf	50,w,b	;volatile
 25497  004F48  0B7F               	andlw	127
 25498  004F4A  010F               	movlb	15	; () banked
 25499  004F4C  6F38               	movwf	56,b	;volatile
 25500                           
 25501                           ; BSR set to: 15
 25502                           ;usb_device.c: 2609: if(UADDR != 0u)
 25503  004F4E  010F               	movlb	15	; () banked
 25504  004F50  5138               	movf	56,w,b	;volatile
 25505  004F52  B4D8               	btfsc	status,2,c
 25506  004F54  D002               	goto	l11923
 25507                           
 25508                           ; BSR set to: 15
 25509                           ;usb_device.c: 2610: {
 25510                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 25511  004F56  0E10               	movlw	16
 25512  004F58  D001               	goto	L15
 25513  004F5A                     l11923:
 25514                           
 25515                           ; BSR set to: 15
 25516                           ;usb_device.c: 2613: else
 25517                           ;usb_device.c: 2614: {
 25518                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 25519  004F5A  0E04               	movlw	4
 25520  004F5C                     L15:
 25521  004F5C  6E5F               	movwf	_USBDeviceState,c
 25522  004F5E                     l11925:
 25523                           
 25524                           ;usb_device.c: 2616: }
 25525                           ;usb_device.c: 2617: }
 25526                           ;usb_device.c: 2620: if(controlTransferState == 1)
 25527  004F5E  0100               	movlb	0	; () banked
 25528  004F60  05FC               	decf	_controlTransferState& (0+255),w,b
 25529  004F62  A4D8               	btfss	status,2,c
 25530  004F64  D03C               	goto	l330
 25531                           
 25532                           ; BSR set to: 0
 25533                           ;usb_device.c: 2621: {
 25534                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25535  004F66  0100               	movlb	0	; () banked
 25536  004F68  EE20 F002          	lfsr	2,2
 25537  004F6C  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 25538  004F6E  26D9               	addwf	fsr2l,f,c
 25539  004F70  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25540  004F72  22DA               	addwfc	fsr2h,f,c
 25541  004F74  0E38               	movlw	56
 25542  004F76  6EDE               	movwf	postinc2,c
 25543  004F78  0E0D               	movlw	13
 25544  004F7A  6EDD               	movwf	postdec2,c
 25545                           
 25546                           ; BSR set to: 0
 25547                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 25548  004F7C  ECAE  F026         	call	_USBCtrlTrfTxService	;wreg free
 25549                           
 25550                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 25551  004F80  0E02               	movlw	2
 25552  004F82  0101               	movlb	1	; () banked
 25553  004F84  1997               	xorwf	_shortPacketStatus& (0+255),w,b
 25554  004F86  A4D8               	btfss	status,2,c
 25555  004F88  D00D               	goto	l11937
 25556                           
 25557                           ; BSR set to: 1
 25558                           ;usb_device.c: 2630: {
 25559                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 25560  004F8A  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25561  004F8E  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25562  004F92  0E04               	movlw	4
 25563  004F94  6EDF               	movwf	indf2,c
 25564                           
 25565                           ; BSR set to: 1
 25566                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25567  004F96  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25568  004F9A  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25569  004F9E  0E00               	movlw	0
 25570  004FA0  8EDB               	bsf	plusw2,7,c
 25571                           
 25572                           ;usb_device.c: 2635: }
 25573  004FA2  0012               	return	
 25574  004FA4                     l11937:
 25575                           
 25576                           ; BSR set to: 1
 25577                           ;usb_device.c: 2636: else
 25578                           ;usb_device.c: 2637: {
 25579                           ;usb_device.c: 2638: if(lastDTS == 0)
 25580  004FA4  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 25581  004FA6  A4D8               	btfss	status,2,c
 25582  004FA8  D00D               	goto	l11943
 25583                           
 25584                           ; BSR set to: 1
 25585                           ;usb_device.c: 2639: {
 25586                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25587  004FAA  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25588  004FAE  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25589  004FB2  0E48               	movlw	72
 25590  004FB4  6EDF               	movwf	indf2,c
 25591                           
 25592                           ; BSR set to: 1
 25593                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25594  004FB6  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25595  004FBA  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25596  004FBE  0E00               	movlw	0
 25597  004FC0  8EDB               	bsf	plusw2,7,c
 25598                           
 25599                           ;usb_device.c: 2642: }
 25600  004FC2  0012               	return	
 25601  004FC4                     l11943:
 25602                           
 25603                           ; BSR set to: 1
 25604                           ;usb_device.c: 2643: else
 25605                           ;usb_device.c: 2644: {
 25606                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 25607  004FC4  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25608  004FC8  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25609  004FCC  0E08               	movlw	8
 25610  004FCE  6EDF               	movwf	indf2,c
 25611                           
 25612                           ; BSR set to: 1
 25613                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25614  004FD0  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25615  004FD4  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25616  004FD8  0E00               	movlw	0
 25617  004FDA  8EDB               	bsf	plusw2,7,c
 25618                           
 25619                           ; BSR set to: 1
 25620                           ;usb_device.c: 2647: }
 25621                           ;usb_device.c: 2648: }
 25622                           ;usb_device.c: 2649: }
 25623                           
 25624                           ; BSR set to: 1
 25625  004FDC  0012               	return	
 25626  004FDE                     l330:
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;usb_device.c: 2650: else
 25630                           ;usb_device.c: 2651: {
 25631                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 25632  004FDE  0101               	movlb	1	; () banked
 25633  004FE0  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 25634  004FE2  D002               	goto	l11949
 25635                           
 25636                           ; BSR set to: 1
 25637                           ;usb_device.c: 2660: }
 25638                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 25639                           
 25640                           ; BSR set to: 1
 25641  004FE4  0101               	movlb	1	; () banked
 25642  004FE6  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 25643  004FE8                     l11949:
 25644                           
 25645                           ; BSR set to: 1
 25646                           ;usb_device.c: 2662: }
 25647                           ;usb_device.c: 2664: controlTransferState = 0;
 25648  004FE8  0E00               	movlw	0
 25649  004FEA  0100               	movlb	0	; () banked
 25650  004FEC  6FFC               	movwf	_controlTransferState& (0+255),b
 25651  004FEE  0012               	return	
 25652  004FF0                     __end_of_USBCtrlTrfInHandler:
 25653                           	opt stack 0
 25654                           tosu	equ	0xFFF
 25655                           tosh	equ	0xFFE
 25656                           tosl	equ	0xFFD
 25657                           pclath	equ	0xFFA
 25658                           tblptru	equ	0xFF8
 25659                           tblptrh	equ	0xFF7
 25660                           tblptrl	equ	0xFF6
 25661                           tablat	equ	0xFF5
 25662                           prodh	equ	0xFF4
 25663                           prodl	equ	0xFF3
 25664                           intcon	equ	0xFF2
 25665                           intcon2	equ	0xFF1
 25666                           intcon3	equ	0xFF0
 25667                           indf0	equ	0xFEF
 25668                           postinc0	equ	0xFEE
 25669                           fsr0h	equ	0xFEA
 25670                           fsr0l	equ	0xFE9
 25671                           wreg	equ	0xFE8
 25672                           indf1	equ	0xFE7
 25673                           postdec1	equ	0xFE5
 25674                           plusw1	equ	0xFE3
 25675                           fsr1h	equ	0xFE2
 25676                           fsr1l	equ	0xFE1
 25677                           indf2	equ	0xFDF
 25678                           postinc2	equ	0xFDE
 25679                           postdec2	equ	0xFDD
 25680                           plusw2	equ	0xFDB
 25681                           fsr2h	equ	0xFDA
 25682                           fsr2l	equ	0xFD9
 25683                           status	equ	0xFD8
 25684                           
 25685 ;; *************** function _USBCtrlTrfTxService *****************
 25686 ;; Defined at:
 25687 ;;		line 1773 in file "usb_device.c"
 25688 ;; Parameters:    Size  Location     Type
 25689 ;;		None
 25690 ;; Auto vars:     Size  Location     Type
 25691 ;;  byteToSend      1    0[COMRAM] unsigned char 
 25692 ;; Return value:  Size  Location     Type
 25693 ;;                  1    wreg      void 
 25694 ;; Registers used:
 25695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 25696 ;; Tracked objects:
 25697 ;;		On entry : 0/0
 25698 ;;		On exit  : 0/0
 25699 ;;		Unchanged: 0/0
 25700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25705 ;;Total ram usage:        1 bytes
 25706 ;; Hardware stack levels used:    1
 25707 ;; This function calls:
 25708 ;;		Nothing
 25709 ;; This function is called by:
 25710 ;;		_USBCtrlEPAllowDataStage
 25711 ;;		_USBCtrlTrfInHandler
 25712 ;; This function uses a non-reentrant model
 25713 ;;
 25714                           
 25715                           	psect	text119
 25716  004D5C                     __ptext119:
 25717                           	opt stack 0
 25718  004D5C                     _USBCtrlTrfTxService:
 25719                           	opt stack 25
 25720                           
 25721                           ;usb_device.c: 1775: uint8_t byteToSend;
 25722                           ;usb_device.c: 1779: byteToSend = 8;
 25723                           
 25724                           ;incstack = 0
 25725  004D5C  0E08               	movlw	8
 25726  004D5E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 25727                           
 25728                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 25729  004D60  0100               	movlb	0	; () banked
 25730  004D62  51ED               	movf	(_inPipes+5)& (0+255),w,b
 25731  004D64  E114               	bnz	l10189
 25732  004D66  0E08               	movlw	8
 25733  004D68  0100               	movlb	0	; () banked
 25734  004D6A  5DEC               	subwf	(_inPipes+4)& (0+255),w,b
 25735  004D6C  B0D8               	btfsc	status,0,c
 25736  004D6E  D00F               	goto	l10189
 25737                           
 25738                           ; BSR set to: 0
 25739                           ;usb_device.c: 1781: {
 25740                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 25741  004D70  C0EC  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 25742                           
 25743                           ; BSR set to: 0
 25744                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 25745  004D74  0101               	movlb	1	; () banked
 25746  004D76  5197               	movf	_shortPacketStatus& (0+255),w,b
 25747  004D78  A4D8               	btfss	status,2,c
 25748  004D7A  D002               	goto	l10185
 25749                           
 25750                           ; BSR set to: 1
 25751                           ;usb_device.c: 1790: {
 25752                           ;usb_device.c: 1791: shortPacketStatus = 1;
 25753  004D7C  0E01               	movlw	1
 25754  004D7E  D005               	goto	L16
 25755  004D80                     l10185:
 25756                           
 25757                           ; BSR set to: 1
 25758                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 25759  004D80  0101               	movlb	1	; () banked
 25760  004D82  0597               	decf	_shortPacketStatus& (0+255),w,b
 25761  004D84  A4D8               	btfss	status,2,c
 25762  004D86  D003               	goto	l10189
 25763                           
 25764                           ; BSR set to: 1
 25765                           ;usb_device.c: 1794: {
 25766                           ;usb_device.c: 1795: shortPacketStatus = 2;
 25767  004D88  0E02               	movlw	2
 25768  004D8A                     L16:
 25769  004D8A  0101               	movlb	1	; () banked
 25770  004D8C  6F97               	movwf	_shortPacketStatus& (0+255),b
 25771  004D8E                     l10189:
 25772                           
 25773                           ;usb_device.c: 1796: }
 25774                           ;usb_device.c: 1797: }
 25775                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 25776  004D8E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25777  004D90  0100               	movlb	0	; () banked
 25778  004D92  5FEC               	subwf	(_inPipes+4)& (0+255),f,b
 25779  004D94  0E00               	movlw	0
 25780  004D96  5BED               	subwfb	(_inPipes+5)& (0+255),f,b
 25781                           
 25782                           ; BSR set to: 0
 25783                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 25784  004D98  0100               	movlb	0	; () banked
 25785  004D9A  EE20 F001          	lfsr	2,1
 25786  004D9E  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 25787  004DA0  26D9               	addwf	fsr2l,f,c
 25788  004DA2  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25789  004DA4  22DA               	addwfc	fsr2h,f,c
 25790  004DA6  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 25791                           
 25792                           ; BSR set to: 0
 25793                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 25794  004DAA  0E38               	movlw	56
 25795  004DAC  0101               	movlb	1	; () banked
 25796  004DAE  6F7E               	movwf	_pDst& (0+255),b
 25797  004DB0  0E0D               	movlw	13
 25798  004DB2  0101               	movlb	1	; () banked
 25799  004DB4  6F7F               	movwf	(_pDst+1)& (0+255),b
 25800                           
 25801                           ; BSR set to: 1
 25802                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 25803  004DB6  0100               	movlb	0	; () banked
 25804  004DB8  A1EB               	btfss	(_inPipes+3)& (0+255),0,b
 25805  004DBA  D01D               	goto	l10207
 25806  004DBC  D03C               	goto	l10217
 25807  004DBE                     l10199:
 25808                           
 25809                           ;usb_device.c: 1814: {
 25810                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 25811  004DBE  C0E8  FFF6         	movff	_inPipes,tblptrl
 25812  004DC2  C0E9  FFF7         	movff	_inPipes+1,tblptrh
 25813  004DC6  6AF8               	clrf	tblptru,c
 25814  004DC8  C17E  FFD9         	movff	_pDst,fsr2l
 25815  004DCC  C17F  FFDA         	movff	_pDst+1,fsr2h
 25816  004DD0  0E0E               	movlw	(high __ramtop+-1)
 25817  004DD2  64F7               	cpfsgt	tblptrh,c
 25818  004DD4  D003               	bra	u7037
 25819  004DD6  0008               	tblrd		*
 25820  004DD8  50F5               	movf	tablat,w,c
 25821  004DDA  D005               	bra	u7030
 25822  004DDC                     u7037:
 25823  004DDC  CFF6 FFE9          	movff	tblptrl,fsr0l
 25824  004DE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 25825  004DE4  50EF               	movf	indf0,w,c
 25826  004DE6                     u7030:
 25827  004DE6  6EDF               	movwf	indf2,c
 25828  004DE8  0100               	movlb	0	; () banked
 25829  004DEA  4BE8               	infsnz	_inPipes& (0+255),f,b
 25830  004DEC  2BE9               	incf	(_inPipes+1)& (0+255),f,b
 25831                           
 25832                           ; BSR set to: 0
 25833  004DEE  0101               	movlb	1	; () banked
 25834  004DF0  4B7E               	infsnz	_pDst& (0+255),f,b
 25835  004DF2  2B7F               	incf	(_pDst+1)& (0+255),f,b
 25836                           
 25837                           ; BSR set to: 1
 25838                           ;usb_device.c: 1816: byteToSend--;
 25839  004DF4  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 25840  004DF6                     l10207:
 25841  004DF6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25842  004DF8  B4D8               	btfsc	status,2,c
 25843  004DFA  0012               	return	
 25844  004DFC  D7E0               	goto	l10199
 25845  004DFE                     l10209:
 25846                           
 25847                           ;usb_device.c: 1822: {
 25848                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 25849  004DFE  C0E8  FFF6         	movff	_inPipes,tblptrl
 25850  004E02  C0E9  FFF7         	movff	_inPipes+1,tblptrh
 25851  004E06  6AF8               	clrf	tblptru,c
 25852  004E08  C17E  FFD9         	movff	_pDst,fsr2l
 25853  004E0C  C17F  FFDA         	movff	_pDst+1,fsr2h
 25854  004E10  0E0E               	movlw	(high __ramtop+-1)
 25855  004E12  64F7               	cpfsgt	tblptrh,c
 25856  004E14  D003               	bra	u7057
 25857  004E16  0008               	tblrd		*
 25858  004E18  50F5               	movf	tablat,w,c
 25859  004E1A  D005               	bra	u7050
 25860  004E1C                     u7057:
 25861  004E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
 25862  004E20  CFF7 FFEA          	movff	tblptrh,fsr0h
 25863  004E24  50EF               	movf	indf0,w,c
 25864  004E26                     u7050:
 25865  004E26  6EDF               	movwf	indf2,c
 25866  004E28  0100               	movlb	0	; () banked
 25867  004E2A  4BE8               	infsnz	_inPipes& (0+255),f,b
 25868  004E2C  2BE9               	incf	(_inPipes+1)& (0+255),f,b
 25869                           
 25870                           ; BSR set to: 0
 25871  004E2E  0101               	movlb	1	; () banked
 25872  004E30  4B7E               	infsnz	_pDst& (0+255),f,b
 25873  004E32  2B7F               	incf	(_pDst+1)& (0+255),f,b
 25874                           
 25875                           ; BSR set to: 1
 25876                           ;usb_device.c: 1824: byteToSend--;
 25877  004E34  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 25878  004E36                     l10217:
 25879  004E36  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 25880  004E38  B4D8               	btfsc	status,2,c
 25881  004E3A  0012               	return	
 25882  004E3C  D7E0               	goto	l10209
 25883  004E3E                     __end_of_USBCtrlTrfTxService:
 25884                           	opt stack 0
 25885                           tosu	equ	0xFFF
 25886                           tosh	equ	0xFFE
 25887                           tosl	equ	0xFFD
 25888                           pclath	equ	0xFFA
 25889                           tblptru	equ	0xFF8
 25890                           tblptrh	equ	0xFF7
 25891                           tblptrl	equ	0xFF6
 25892                           tablat	equ	0xFF5
 25893                           prodh	equ	0xFF4
 25894                           prodl	equ	0xFF3
 25895                           intcon	equ	0xFF2
 25896                           intcon2	equ	0xFF1
 25897                           intcon3	equ	0xFF0
 25898                           indf0	equ	0xFEF
 25899                           postinc0	equ	0xFEE
 25900                           fsr0h	equ	0xFEA
 25901                           fsr0l	equ	0xFE9
 25902                           wreg	equ	0xFE8
 25903                           indf1	equ	0xFE7
 25904                           postdec1	equ	0xFE5
 25905                           plusw1	equ	0xFE3
 25906                           fsr1h	equ	0xFE2
 25907                           fsr1l	equ	0xFE1
 25908                           indf2	equ	0xFDF
 25909                           postinc2	equ	0xFDE
 25910                           postdec2	equ	0xFDD
 25911                           plusw2	equ	0xFDB
 25912                           fsr2h	equ	0xFDA
 25913                           fsr2l	equ	0xFD9
 25914                           status	equ	0xFD8
 25915                           
 25916 ;; *************** function _APP_DeviceMSDTasks *****************
 25917 ;; Defined at:
 25918 ;;		line 110 in file "app_device_msd.c"
 25919 ;; Parameters:    Size  Location     Type
 25920 ;;		None
 25921 ;; Auto vars:     Size  Location     Type
 25922 ;;		None
 25923 ;; Return value:  Size  Location     Type
 25924 ;;                  1    wreg      void 
 25925 ;; Registers used:
 25926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25927 ;; Tracked objects:
 25928 ;;		On entry : 0/0
 25929 ;;		On exit  : 0/0
 25930 ;;		Unchanged: 0/0
 25931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25936 ;;Total ram usage:        0 bytes
 25937 ;; Hardware stack levels used:    1
 25938 ;; Hardware stack levels required when called:   11
 25939 ;; This function calls:
 25940 ;;		_MSDTasks
 25941 ;; This function is called by:
 25942 ;;		_main
 25943 ;; This function uses a non-reentrant model
 25944 ;;
 25945                           
 25946                           	psect	text120
 25947  007808                     __ptext120:
 25948                           	opt stack 0
 25949  007808                     _APP_DeviceMSDTasks:
 25950                           	opt stack 19
 25951                           
 25952                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 25953                           
 25954                           ;incstack = 0
 25955  007808  0E20               	movlw	32
 25956  00780A  605F               	cpfslt	_USBDeviceState,c
 25957  00780C  D001               	goto	l1106
 25958  00780E  0012               	return	
 25959  007810                     l1106:
 25960                           
 25961                           ;app_device_msd.c: 118: }
 25962                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 25963  007810  B265               	btfsc	3941,1,c	;volatile
 25964  007812  0012               	return	
 25965                           
 25966                           ;app_device_msd.c: 127: }
 25967                           ;app_device_msd.c: 129: MSDTasks();
 25968                           
 25969                           ;app_device_msd.c: 125: {
 25970                           ;app_device_msd.c: 126: return;
 25971  007814  EC2D  F011         	call	_MSDTasks	;wreg free
 25972  007818  0012               	return		;funcret
 25973  00781A                     __end_of_APP_DeviceMSDTasks:
 25974                           	opt stack 0
 25975                           tosu	equ	0xFFF
 25976                           tosh	equ	0xFFE
 25977                           tosl	equ	0xFFD
 25978                           pclath	equ	0xFFA
 25979                           tblptru	equ	0xFF8
 25980                           tblptrh	equ	0xFF7
 25981                           tblptrl	equ	0xFF6
 25982                           tablat	equ	0xFF5
 25983                           prodh	equ	0xFF4
 25984                           prodl	equ	0xFF3
 25985                           intcon	equ	0xFF2
 25986                           intcon2	equ	0xFF1
 25987                           intcon3	equ	0xFF0
 25988                           indf0	equ	0xFEF
 25989                           postinc0	equ	0xFEE
 25990                           fsr0h	equ	0xFEA
 25991                           fsr0l	equ	0xFE9
 25992                           wreg	equ	0xFE8
 25993                           indf1	equ	0xFE7
 25994                           postdec1	equ	0xFE5
 25995                           plusw1	equ	0xFE3
 25996                           fsr1h	equ	0xFE2
 25997                           fsr1l	equ	0xFE1
 25998                           indf2	equ	0xFDF
 25999                           postinc2	equ	0xFDE
 26000                           postdec2	equ	0xFDD
 26001                           plusw2	equ	0xFDB
 26002                           fsr2h	equ	0xFDA
 26003                           fsr2l	equ	0xFD9
 26004                           status	equ	0xFD8
 26005                           
 26006 ;; *************** function _MSDTasks *****************
 26007 ;; Defined at:
 26008 ;;		line 335 in file "usb_device_msd.c"
 26009 ;; Parameters:    Size  Location     Type
 26010 ;;		None
 26011 ;; Auto vars:     Size  Location     Type
 26012 ;;  i               1   81[COMRAM] unsigned char 
 26013 ;; Return value:  Size  Location     Type
 26014 ;;                  1    wreg      unsigned char 
 26015 ;; Registers used:
 26016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26017 ;; Tracked objects:
 26018 ;;		On entry : 0/0
 26019 ;;		On exit  : 0/0
 26020 ;;		Unchanged: 0/0
 26021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26023 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26024 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26025 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26026 ;;Total ram usage:        6 bytes
 26027 ;; Hardware stack levels used:    1
 26028 ;; Hardware stack levels required when called:   10
 26029 ;; This function calls:
 26030 ;;		_MSDProcessCommand
 26031 ;;		_USBStallEndpoint
 26032 ;;		_USBTransferOnePacket
 26033 ;; This function is called by:
 26034 ;;		_APP_DeviceMSDTasks
 26035 ;; This function uses a non-reentrant model
 26036 ;;
 26037                           
 26038                           	psect	text121
 26039  00225A                     __ptext121:
 26040                           	opt stack 0
 26041  00225A                     _MSDTasks:
 26042                           	opt stack 19
 26043                           
 26044                           ;usb_device_msd.c: 337: uint8_t i;
 26045                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 26046                           
 26047                           ;incstack = 0
 26048  00225A  0E20               	movlw	32
 26049  00225C  185F               	xorwf	_USBDeviceState,w,c
 26050  00225E  A4D8               	btfss	status,2,c
 26051  002260  0012               	return	
 26052  002262  D133               	goto	l12975
 26053  002264                     l12877:
 26054                           
 26055                           ;usb_device_msd.c: 360: {
 26056                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 26057  002264  0100               	movlb	0	; () banked
 26058  002266  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 26059  002268  0100               	movlb	0	; () banked
 26060  00226A  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26061  00226C  B4D8               	btfsc	status,2,c
 26062  00226E  D007               	goto	l12881
 26063                           
 26064                           ; BSR set to: 0
 26065  002270  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26066  002274  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26067  002278  0100               	movlb	0	; () banked
 26068  00227A  BEDF               	btfsc	indf2,7,c
 26069  00227C  0012               	return	
 26070  00227E                     l12881:
 26071                           
 26072                           ; BSR set to: 0
 26073                           ;usb_device_msd.c: 363: {
 26074                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 26075  00227E  0E00               	movlw	0
 26076  002280  6E52               	movwf	MSDTasks@i,c
 26077  002282                     l12883:
 26078                           
 26079                           ; BSR set to: 0
 26080  002282  0E1E               	movlw	30
 26081  002284  6452               	cpfsgt	MSDTasks@i,c
 26082  002286  D001               	goto	l12887
 26083  002288  D014               	goto	l12893
 26084  00228A                     l12887:
 26085                           
 26086                           ;usb_device_msd.c: 372: {
 26087                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 26088  00228A  5052               	movf	MSDTasks@i,w,c
 26089  00228C  0D01               	mullw	1
 26090  00228E  0E40               	movlw	64
 26091  002290  24F3               	addwf	prodl,w,c
 26092  002292  6ED9               	movwf	fsr2l,c
 26093  002294  0E0D               	movlw	13
 26094  002296  20F4               	addwfc	prodh,w,c
 26095  002298  6EDA               	movwf	fsr2h,c
 26096  00229A  5052               	movf	MSDTasks@i,w,c
 26097  00229C  0D01               	mullw	1
 26098  00229E  0E00               	movlw	low _gblCBW
 26099  0022A0  24F3               	addwf	prodl,w,c
 26100  0022A2  6EE1               	movwf	fsr1l,c
 26101  0022A4  0E01               	movlw	high _gblCBW
 26102  0022A6  20F4               	addwfc	prodh,w,c
 26103  0022A8  6EE2               	movwf	fsr1h,c
 26104  0022AA  CFDF FFE7          	movff	indf2,indf1
 26105  0022AE  2A52               	incf	MSDTasks@i,f,c
 26106  0022B0  D7E8               	goto	l12883
 26107  0022B2                     l12893:
 26108                           
 26109                           ;usb_device_msd.c: 374: }
 26110                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 26111  0022B2  0100               	movlb	0	; () banked
 26112  0022B4  EE20 F001          	lfsr	2,1
 26113  0022B8  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 26114  0022BA  26D9               	addwf	fsr2l,f,c
 26115  0022BC  51F7               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 26116  0022BE  22DA               	addwfc	fsr2h,f,c
 26117  0022C0  0E1F               	movlw	31
 26118  0022C2  18DE               	xorwf	postinc2,w,c
 26119  0022C4  A4D8               	btfss	status,2,c
 26120  0022C6  D083               	goto	l12933
 26121                           
 26122                           ; BSR set to: 0
 26123  0022C8  0E55               	movlw	85
 26124  0022CA  0101               	movlb	1	; () banked
 26125  0022CC  1900               	xorwf	_gblCBW& (0+255),w,b
 26126  0022CE  E17F               	bnz	l12933
 26127  0022D0  0E53               	movlw	83
 26128  0022D2  0101               	movlb	1	; () banked
 26129  0022D4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 26130  0022D6  E17B               	bnz	l12933
 26131  0022D8  0E42               	movlw	66
 26132  0022DA  0101               	movlb	1	; () banked
 26133  0022DC  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 26134  0022DE  E177               	bnz	l12933
 26135  0022E0  0E43               	movlw	67
 26136  0022E2  0101               	movlb	1	; () banked
 26137  0022E4  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 26138  0022E6  A4D8               	btfss	status,2,c
 26139  0022E8  D072               	goto	l12933
 26140                           
 26141                           ; BSR set to: 1
 26142                           ;usb_device_msd.c: 378: {
 26143                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 26144  0022EA  0E01               	movlw	1
 26145  0022EC  0101               	movlb	1	; () banked
 26146  0022EE  6F87               	movwf	_MSDCBWValid& (0+255),b
 26147                           
 26148                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 26149                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 26150                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 26151                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 26152  0022F0  0101               	movlb	1	; () banked
 26153  0022F2  510D               	movf	(_gblCBW+13)& (0+255),w,b
 26154  0022F4  A4D8               	btfss	status,2,c
 26155  0022F6  D060               	goto	l12931
 26156                           
 26157                           ; BSR set to: 1
 26158  0022F8  0E11               	movlw	17
 26159  0022FA  0101               	movlb	1	; () banked
 26160  0022FC  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 26161  0022FE  D05C               	goto	l12931
 26162                           
 26163                           ; BSR set to: 1
 26164  002300  0101               	movlb	1	; () banked
 26165  002302  510E               	movf	(_gblCBW+14)& (0+255),w,b
 26166  002304  B4D8               	btfsc	status,2,c
 26167  002306  D058               	goto	l12931
 26168                           
 26169                           ; BSR set to: 1
 26170  002308  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 26171  00230C  0E3F               	movlw	63
 26172  00230E  164D               	andwf	??_MSDTasks,f,c
 26173  002310  A4D8               	btfss	status,2,c
 26174  002312  D052               	goto	l12931
 26175                           
 26176                           ; BSR set to: 1
 26177                           ;usb_device_msd.c: 388: {
 26178                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 26179  002314  0E55               	movlw	85
 26180  002316  010D               	movlb	13	; () banked
 26181  002318  6F80               	movwf	128,b	;volatile
 26182  00231A  0E53               	movlw	83
 26183  00231C  6F81               	movwf	129,b	;volatile
 26184  00231E  0E42               	movlw	66
 26185  002320  6F82               	movwf	130,b	;volatile
 26186  002322  0E53               	movlw	83
 26187  002324  6F83               	movwf	131,b	;volatile
 26188                           
 26189                           ; BSR set to: 13
 26190                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 26191  002326  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 26192  00232A  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 26193  00232E  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 26194  002332  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 26195                           
 26196                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 26197  002336  0E00               	movlw	0
 26198  002338  010D               	movlb	13	; () banked
 26199  00233A  6F88               	movwf	136,b	;volatile
 26200  00233C  0E00               	movlw	0
 26201  00233E  6F89               	movwf	137,b	;volatile
 26202  002340  0E00               	movlw	0
 26203  002342  6F8A               	movwf	138,b	;volatile
 26204  002344  0E00               	movlw	0
 26205  002346  6F8B               	movwf	139,b	;volatile
 26206                           
 26207                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 26208  002348  0E00               	movlw	0
 26209  00234A  010D               	movlb	13	; () banked
 26210  00234C  6F8C               	movwf	140,b	;volatile
 26211                           
 26212                           ; BSR set to: 13
 26213                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 26214  00234E  0100               	movlb	0	; () banked
 26215  002350  69F9               	setf	_MSDCommandState& (0+255),b
 26216                           
 26217                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 26218  002352  0E00               	movlw	0
 26219  002354  0101               	movlb	1	; () banked
 26220  002356  6F8C               	movwf	_MSDReadState& (0+255),b
 26221                           
 26222                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 26223  002358  0E00               	movlw	0
 26224  00235A  0101               	movlb	1	; () banked
 26225  00235C  6F8B               	movwf	_MSDWriteState& (0+255),b
 26226                           
 26227                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 26228  00235E  0E00               	movlw	0
 26229  002360  0101               	movlb	1	; () banked
 26230  002362  6F8A               	movwf	_MSDRetryAttempt& (0+255),b
 26231                           
 26232                           ; BSR set to: 1
 26233                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 26234  002364  0E03               	movlw	3
 26235  002366  0101               	movlb	1	; () banked
 26236  002368  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 26237  00236A  B4D8               	btfsc	status,2,c
 26238  00236C  D00B               	goto	l12917
 26239                           
 26240                           ; BSR set to: 1
 26241                           ;usb_device_msd.c: 421: {
 26242                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 26243  00236E  0101               	movlb	1	; () banked
 26244  002370  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26245  002372  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26246  002374  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26247  002376  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26248                           
 26249                           ; BSR set to: 1
 26250                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 26251  002378  0E00               	movlw	0
 26252  00237A  0101               	movlb	1	; () banked
 26253  00237C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26254                           
 26255                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 26256  00237E  0E00               	movlw	0
 26257  002380  0101               	movlb	1	; () banked
 26258  002382  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26259  002384                     l12917:
 26260                           
 26261                           ; BSR set to: 1
 26262                           ;usb_device_msd.c: 425: }
 26263                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 26264  002384  0101               	movlb	1	; () banked
 26265  002386  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 26266  002388  D002               	goto	l12921
 26267                           
 26268                           ; BSR set to: 1
 26269                           ;usb_device_msd.c: 432: {
 26270                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 26271  00238A  0E01               	movlw	1
 26272  00238C  D001               	goto	L17
 26273  00238E                     l12921:
 26274                           
 26275                           ;usb_device_msd.c: 435: else
 26276                           ;usb_device_msd.c: 436: {
 26277                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 26278  00238E  0E02               	movlw	2
 26279  002390                     L17:
 26280  002390  0100               	movlb	0	; () banked
 26281  002392  6FFA               	movwf	_MSD_State& (0+255),b
 26282                           
 26283                           ; BSR set to: 0
 26284                           ;usb_device_msd.c: 438: }
 26285                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 26286                           
 26287                           ; BSR set to: 0
 26288  002394  0101               	movlb	1	; () banked
 26289  002396  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26290  002398  0101               	movlb	1	; () banked
 26291  00239A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 26292  00239C  0101               	movlb	1	; () banked
 26293  00239E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 26294  0023A0  0101               	movlb	1	; () banked
 26295  0023A2  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 26296  0023A4  B4D8               	btfsc	status,2,c
 26297  0023A6  D002               	goto	l12927
 26298                           
 26299                           ; BSR set to: 1
 26300                           ;usb_device_msd.c: 443: {
 26301                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 26302  0023A8  0E00               	movlw	0
 26303  0023AA  D001               	goto	L18
 26304  0023AC                     l12927:
 26305                           
 26306                           ;usb_device_msd.c: 446: else
 26307                           ;usb_device_msd.c: 447: {
 26308                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 26309  0023AC  0E01               	movlw	1
 26310  0023AE                     L18:
 26311  0023AE  0100               	movlb	0	; () banked
 26312  0023B0  6FF8               	movwf	_MSDHostNoData& (0+255),b
 26313                           
 26314                           ; BSR set to: 0
 26315                           ;usb_device_msd.c: 449: }
 26316                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 26317                           
 26318                           ; BSR set to: 0
 26319  0023B2  C10F  F0F9         	movff	_gblCBW+15,_MSDCommandState
 26320                           
 26321                           ;usb_device_msd.c: 454: }
 26322  0023B6  0012               	return	
 26323  0023B8                     l12931:
 26324                           
 26325                           ;usb_device_msd.c: 455: else
 26326                           ;usb_device_msd.c: 456: {
 26327                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 26328  0023B8  0E01               	movlw	1
 26329  0023BA  6E01               	movwf	USBStallEndpoint@dir,c
 26330  0023BC  0E02               	movlw	2
 26331  0023BE  EC5A  F022         	call	_USBStallEndpoint
 26332                           
 26333                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 26334  0023C2  0E00               	movlw	0
 26335  0023C4  6E01               	movwf	USBStallEndpoint@dir,c
 26336  0023C6  0E02               	movlw	2
 26337  0023C8  EC5A  F022         	call	_USBStallEndpoint
 26338                           
 26339                           ;usb_device_msd.c: 462: }
 26340                           ;usb_device_msd.c: 463: }
 26341  0023CC  0012               	return	
 26342  0023CE                     l12933:
 26343                           
 26344                           ;usb_device_msd.c: 464: else
 26345                           ;usb_device_msd.c: 465: {
 26346                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 26347  0023CE  0E01               	movlw	1
 26348  0023D0  6E01               	movwf	USBStallEndpoint@dir,c
 26349  0023D2  0E02               	movlw	2
 26350  0023D4  EC5A  F022         	call	_USBStallEndpoint
 26351                           
 26352                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 26353  0023D8  0E00               	movlw	0
 26354  0023DA  6E01               	movwf	USBStallEndpoint@dir,c
 26355  0023DC  0E02               	movlw	2
 26356  0023DE  EC5A  F022         	call	_USBStallEndpoint
 26357                           
 26358                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 26359  0023E2  0E00               	movlw	0
 26360  0023E4  0101               	movlb	1	; () banked
 26361  0023E6  6F87               	movwf	_MSDCBWValid& (0+255),b
 26362                           
 26363                           ; BSR set to: 1
 26364                           ;usb_device_msd.c: 474: }
 26365                           ;usb_device_msd.c: 475: }
 26366                           ;usb_device_msd.c: 476: break;
 26367                           
 26368                           ; BSR set to: 1
 26369  0023E8  0012               	return	
 26370  0023EA                     l12937:
 26371                           
 26372                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 26373  0023EA  EC9F  F01F         	call	_MSDProcessCommand	;wreg free
 26374  0023EE  0AFF               	xorlw	255
 26375  0023F0  A4D8               	btfss	status,2,c
 26376  0023F2  0012               	return	
 26377                           
 26378                           ;usb_device_msd.c: 480: {
 26379                           ;usb_device_msd.c: 482: MSD_State = 0x03;
 26380  0023F4  0E03               	movlw	3
 26381  0023F6  0100               	movlb	0	; () banked
 26382  0023F8  6FFA               	movwf	_MSD_State& (0+255),b
 26383                           
 26384                           ; BSR set to: 0
 26385                           ;usb_device_msd.c: 483: }
 26386                           ;usb_device_msd.c: 484: break;
 26387  0023FA  0012               	return	
 26388  0023FC                     l12941:
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 26392  0023FC  EC9F  F01F         	call	_MSDProcessCommand	;wreg free
 26393  002400  0AFF               	xorlw	255
 26394  002402  A4D8               	btfss	status,2,c
 26395  002404  0012               	return	
 26396                           
 26397                           ;usb_device_msd.c: 487: {
 26398                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 26399  002406  010D               	movlb	13	; () banked
 26400  002408  518C               	movf	140,w,b	;volatile
 26401  00240A  A4D8               	btfss	status,2,c
 26402  00240C  D00D               	goto	l575
 26403                           
 26404                           ; BSR set to: 13
 26405  00240E  010D               	movlb	13	; () banked
 26406  002410  5188               	movf	136,w,b	;volatile
 26407  002412  010D               	movlb	13	; () banked
 26408  002414  1189               	iorwf	137,w,b	;volatile
 26409  002416  010D               	movlb	13	; () banked
 26410  002418  118A               	iorwf	138,w,b	;volatile
 26411  00241A  010D               	movlb	13	; () banked
 26412  00241C  118B               	iorwf	139,w,b	;volatile
 26413  00241E  B4D8               	btfsc	status,2,c
 26414  002420  D003               	goto	l575
 26415                           
 26416                           ; BSR set to: 13
 26417                           ;usb_device_msd.c: 490: {
 26418                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 26419  002422  0E02               	movlw	2
 26420  002424  010D               	movlb	13	; () banked
 26421  002426  6F8C               	movwf	140,b	;volatile
 26422  002428                     l575:
 26423                           
 26424                           ; BSR set to: 13
 26425                           ;usb_device_msd.c: 492: }
 26426                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 26427  002428  0E03               	movlw	3
 26428  00242A  0100               	movlb	0	; () banked
 26429  00242C  6FFA               	movwf	_MSD_State& (0+255),b
 26430                           
 26431                           ; BSR set to: 0
 26432                           ;usb_device_msd.c: 494: }
 26433                           ;usb_device_msd.c: 495: break;
 26434  00242E  0012               	return	
 26435  002430                     l12949:
 26436                           
 26437                           ; BSR set to: 0
 26438  002430  C0F2  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2369
 26439  002434  C0F3  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2369+1
 26440                           
 26441                           ; BSR set to: 0
 26442                           
 26443                           ; BSR set to: 0
 26444                           
 26445                           ; BSR set to: 0
 26446  002438  504E               	movf	_MSDTasks$2369,w,c
 26447  00243A  104F               	iorwf	_MSDTasks$2369+1,w,c
 26448  00243C  B4D8               	btfsc	status,2,c
 26449  00243E  D00A               	goto	l12961
 26450                           
 26451                           ; BSR set to: 0
 26452  002440  C0F2  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2370
 26453  002444  C0F3  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2370+1
 26454                           
 26455                           ; BSR set to: 0
 26456                           
 26457                           ; BSR set to: 0
 26458                           
 26459                           ; BSR set to: 0
 26460                           
 26461                           ; BSR set to: 0
 26462  002448  C050  FFD9         	movff	_MSDTasks$2370,fsr2l
 26463  00244C  C051  FFDA         	movff	_MSDTasks$2370+1,fsr2h
 26464  002450  BEDF               	btfsc	indf2,7,c
 26465  002452  0012               	return	
 26466  002454                     l12961:
 26467                           
 26468                           ; BSR set to: 0
 26469                           ;usb_device_msd.c: 502: }
 26470                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 26471  002454  0E01               	movlw	1
 26472  002456  6E01               	movwf	USBTransferOnePacket@dir,c
 26473  002458  0E80               	movlw	128
 26474  00245A  6E02               	movwf	USBTransferOnePacket@data,c
 26475  00245C  0E0D               	movlw	13
 26476  00245E  6E03               	movwf	USBTransferOnePacket@data+1,c
 26477  002460  0E0D               	movlw	13
 26478  002462  6E04               	movwf	USBTransferOnePacket@len,c
 26479  002464  0E02               	movlw	2
 26480  002466  ECDD  F022         	call	_USBTransferOnePacket
 26481  00246A  C001  F0F4         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 26482  00246E  C002  F0F5         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 26483                           
 26484                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 26485  002472  0100               	movlb	0	; () banked
 26486  002474  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 26487  002476  0100               	movlb	0	; () banked
 26488  002478  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26489  00247A  B4D8               	btfsc	status,2,c
 26490  00247C  D007               	goto	l12967
 26491                           
 26492                           ; BSR set to: 0
 26493  00247E  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26494  002482  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26495  002486  0100               	movlb	0	; () banked
 26496  002488  BEDF               	btfsc	indf2,7,c
 26497  00248A  D00F               	goto	l12969
 26498  00248C                     l12967:
 26499                           
 26500                           ; BSR set to: 0
 26501                           ;usb_device_msd.c: 509: {
 26502                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 26503  00248C  0E00               	movlw	0
 26504  00248E  6E01               	movwf	USBTransferOnePacket@dir,c
 26505  002490  0E40               	movlw	64
 26506  002492  6E02               	movwf	USBTransferOnePacket@data,c
 26507  002494  0E0D               	movlw	13
 26508  002496  6E03               	movwf	USBTransferOnePacket@data+1,c
 26509  002498  0E40               	movlw	64
 26510  00249A  6E04               	movwf	USBTransferOnePacket@len,c
 26511  00249C  0E02               	movlw	2
 26512  00249E  ECDD  F022         	call	_USBTransferOnePacket
 26513  0024A2  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 26514  0024A6  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 26515  0024AA                     l12969:
 26516                           
 26517                           ;usb_device_msd.c: 511: }
 26518                           ;usb_device_msd.c: 512: MSD_State=0x00;
 26519  0024AA  0E00               	movlw	0
 26520  0024AC  0100               	movlb	0	; () banked
 26521  0024AE  6FFA               	movwf	_MSD_State& (0+255),b
 26522                           
 26523                           ;usb_device_msd.c: 513: break;
 26524  0024B0  0012               	return	
 26525  0024B2                     l12971:
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;usb_device_msd.c: 518: MSD_State=0x00;
 26529  0024B2  0E00               	movlw	0
 26530  0024B4  0100               	movlb	0	; () banked
 26531  0024B6  6FFA               	movwf	_MSD_State& (0+255),b
 26532                           
 26533                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 26534  0024B8  0E02               	movlw	2
 26535  0024BA  010D               	movlb	13	; () banked
 26536  0024BC  6F8C               	movwf	140,b	;volatile
 26537                           
 26538                           ; BSR set to: 13
 26539                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 26540  0024BE  0E00               	movlw	0
 26541  0024C0  6E01               	movwf	USBStallEndpoint@dir,c
 26542  0024C2  0E02               	movlw	2
 26543  0024C4  EC5A  F022         	call	_USBStallEndpoint
 26544                           
 26545                           ;usb_device_msd.c: 521: }
 26546  0024C8  0012               	return	
 26547  0024CA                     l12975:
 26548  0024CA  0100               	movlb	0	; () banked
 26549  0024CC  51FA               	movf	_MSD_State& (0+255),w,b
 26550                           
 26551                           ; Switch size 1, requested type "space"
 26552                           ; Number of cases is 4, Range of values is 0 to 3
 26553                           ; switch strategies available:
 26554                           ; Name         Instructions Cycles
 26555                           ; simple_byte           13     7 (average)
 26556                           ;	Chosen strategy is simple_byte
 26557  0024CE  0A00               	xorlw	0	; case 0
 26558  0024D0  B4D8               	btfsc	status,2,c
 26559  0024D2  D6C8               	goto	l12877
 26560  0024D4  0A01               	xorlw	1	; case 1
 26561  0024D6  B4D8               	btfsc	status,2,c
 26562  0024D8  D788               	goto	l12937
 26563  0024DA  0A03               	xorlw	3	; case 2
 26564  0024DC  B4D8               	btfsc	status,2,c
 26565  0024DE  D78E               	goto	l12941
 26566  0024E0  0A01               	xorlw	1	; case 3
 26567  0024E2  B4D8               	btfsc	status,2,c
 26568  0024E4  D7A5               	goto	l12949
 26569  0024E6  D7E5               	goto	l12971
 26570  0024E8                     __end_of_MSDTasks:
 26571                           	opt stack 0
 26572                           tosu	equ	0xFFF
 26573                           tosh	equ	0xFFE
 26574                           tosl	equ	0xFFD
 26575                           pclath	equ	0xFFA
 26576                           tblptru	equ	0xFF8
 26577                           tblptrh	equ	0xFF7
 26578                           tblptrl	equ	0xFF6
 26579                           tablat	equ	0xFF5
 26580                           prodh	equ	0xFF4
 26581                           prodl	equ	0xFF3
 26582                           intcon	equ	0xFF2
 26583                           intcon2	equ	0xFF1
 26584                           intcon3	equ	0xFF0
 26585                           indf0	equ	0xFEF
 26586                           postinc0	equ	0xFEE
 26587                           fsr0h	equ	0xFEA
 26588                           fsr0l	equ	0xFE9
 26589                           wreg	equ	0xFE8
 26590                           indf1	equ	0xFE7
 26591                           postdec1	equ	0xFE5
 26592                           plusw1	equ	0xFE3
 26593                           fsr1h	equ	0xFE2
 26594                           fsr1l	equ	0xFE1
 26595                           indf2	equ	0xFDF
 26596                           postinc2	equ	0xFDE
 26597                           postdec2	equ	0xFDD
 26598                           plusw2	equ	0xFDB
 26599                           fsr2h	equ	0xFDA
 26600                           fsr2l	equ	0xFD9
 26601                           status	equ	0xFD8
 26602                           
 26603 ;; *************** function _MSDProcessCommand *****************
 26604 ;; Defined at:
 26605 ;;		line 553 in file "usb_device_msd.c"
 26606 ;; Parameters:    Size  Location     Type
 26607 ;;		None
 26608 ;; Auto vars:     Size  Location     Type
 26609 ;;		None
 26610 ;; Return value:  Size  Location     Type
 26611 ;;                  1    wreg      unsigned char 
 26612 ;; Registers used:
 26613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26614 ;; Tracked objects:
 26615 ;;		On entry : 0/0
 26616 ;;		On exit  : 0/0
 26617 ;;		Unchanged: 0/0
 26618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26621 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26622 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26623 ;;Total ram usage:        5 bytes
 26624 ;; Hardware stack levels used:    1
 26625 ;; Hardware stack levels required when called:    9
 26626 ;; This function calls:
 26627 ;;		_ExternalFlash_MediaDetect
 26628 ;;		_ExternalFlash_MediaInitialize
 26629 ;;		_MSDProcessCommandMediaAbsent
 26630 ;;		_MSDProcessCommandMediaPresent
 26631 ;; This function is called by:
 26632 ;;		_MSDTasks
 26633 ;; This function uses a non-reentrant model
 26634 ;;
 26635                           
 26636                           	psect	text122
 26637  003F3E                     __ptext122:
 26638                           	opt stack 0
 26639  003F3E                     _MSDProcessCommand:
 26640                           	opt stack 19
 26641                           
 26642                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 26643                           
 26644                           ;incstack = 0
 26645  003F3E  C1C6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 26646  003F42  C1C7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 26647  003F46  D801               	call	u8788
 26648  003F48  D00A               	goto	u8789
 26649  003F4A                     u8788:
 26650  003F4A  0005               	push	
 26651  003F4C  6EFA               	movwf	pclath,c
 26652  003F4E  0101               	movlb	1	; () banked
 26653  003F50  51BE               	movf	(_LUN+6)& (0+255),w,b
 26654  003F52  6EFD               	movwf	tosl,c
 26655  003F54  51BF               	movf	(_LUN+7)& (0+255),w,b
 26656  003F56  6EFE               	movwf	tosh,c
 26657  003F58  6AFF               	clrf	tosu,c
 26658  003F5A  50FA               	movf	pclath,w,c
 26659  003F5C  0012               	return		;indir
 26660  003F5E                     u8789:
 26661  003F5E  0900               	iorlw	0
 26662  003F60  B4D8               	btfsc	status,2,c
 26663  003F62  D00C               	goto	l11955
 26664  003F64  0101               	movlb	1	; () banked
 26665  003F66  510D               	movf	(_gblCBW+13)& (0+255),w,b
 26666  003F68  0D01               	mullw	1
 26667  003F6A  0E88               	movlw	low _SoftDetach
 26668  003F6C  24F3               	addwf	prodl,w,c
 26669  003F6E  6ED9               	movwf	fsr2l,c
 26670  003F70  0E01               	movlw	high _SoftDetach
 26671  003F72  20F4               	addwfc	prodh,w,c
 26672  003F74  6EDA               	movwf	fsr2h,c
 26673  003F76  04DE               	decf	postinc2,w,c
 26674  003F78  A4D8               	btfss	status,2,c
 26675  003F7A  D01A               	goto	l11959
 26676  003F7C                     l11955:
 26677                           
 26678                           ;usb_device_msd.c: 558: {
 26679                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 26680  003F7C  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 26681  003F80  0E01               	movlw	1
 26682  003F82  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 26683  003F84  0E00               	movlw	0
 26684  003F86  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 26685  003F88  2A48               	incf	??_MSDProcessCommand,f,c
 26686  003F8A  D003               	goto	u8814
 26687  003F8C                     u8815:
 26688  003F8C  90D8               	bcf	status,0,c
 26689  003F8E  3649               	rlcf	??_MSDProcessCommand+1,f,c
 26690  003F90  364A               	rlcf	??_MSDProcessCommand+2,f,c
 26691  003F92                     u8814:
 26692  003F92  2E48               	decfsz	??_MSDProcessCommand,f,c
 26693  003F94  D7FB               	goto	u8815
 26694  003F96  1C49               	comf	??_MSDProcessCommand+1,w,c
 26695  003F98  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 26696  003F9A  1C4A               	comf	??_MSDProcessCommand+2,w,c
 26697  003F9C  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 26698  003F9E  504B               	movf	??_MSDProcessCommand+3,w,c
 26699  003FA0  0101               	movlb	1	; () banked
 26700  003FA2  1778               	andwf	_gblMediaPresent& (0+255),f,b
 26701  003FA4  504C               	movf	??_MSDProcessCommand+4,w,c
 26702  003FA6  0101               	movlb	1	; () banked
 26703  003FA8  1779               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 26704                           
 26705                           ; BSR set to: 1
 26706                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 26707  003FAA  EC18  F033         	call	_MSDProcessCommandMediaAbsent	;wreg free
 26708                           
 26709                           ;usb_device_msd.c: 563: }
 26710  003FAE  D054               	goto	l11979
 26711  003FB0                     l11959:
 26712                           
 26713                           ;usb_device_msd.c: 564: else
 26714                           ;usb_device_msd.c: 565: {
 26715                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 26716  003FB0  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 26717  003FB4  0E01               	movlw	1
 26718  003FB6  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 26719  003FB8  0E00               	movlw	0
 26720  003FBA  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 26721  003FBC  2A48               	incf	??_MSDProcessCommand,f,c
 26722  003FBE  D003               	goto	u8824
 26723  003FC0                     u8825:
 26724  003FC0  90D8               	bcf	status,0,c
 26725  003FC2  3649               	rlcf	??_MSDProcessCommand+1,f,c
 26726  003FC4  364A               	rlcf	??_MSDProcessCommand+2,f,c
 26727  003FC6                     u8824:
 26728  003FC6  2E48               	decfsz	??_MSDProcessCommand,f,c
 26729  003FC8  D7FB               	goto	u8825
 26730  003FCA  0101               	movlb	1	; () banked
 26731  003FCC  5178               	movf	_gblMediaPresent& (0+255),w,b
 26732  003FCE  1649               	andwf	??_MSDProcessCommand+1,f,c
 26733  003FD0  0101               	movlb	1	; () banked
 26734  003FD2  5179               	movf	(_gblMediaPresent+1)& (0+255),w,b
 26735  003FD4  164A               	andwf	??_MSDProcessCommand+2,f,c
 26736  003FD6  5049               	movf	??_MSDProcessCommand+1,w,c
 26737  003FD8  104A               	iorwf	??_MSDProcessCommand+2,w,c
 26738  003FDA  A4D8               	btfss	status,2,c
 26739  003FDC  D03B               	goto	l11977
 26740                           
 26741                           ; BSR set to: 1
 26742                           ;usb_device_msd.c: 568: {
 26743                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 26744  003FDE  C1C6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 26745  003FE2  C1C7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 26746  003FE6  D801               	call	u8848
 26747  003FE8  D00A               	goto	u8849
 26748  003FEA                     u8848:
 26749  003FEA  0005               	push	
 26750  003FEC  6EFA               	movwf	pclath,c
 26751  003FEE  0101               	movlb	1	; () banked
 26752  003FF0  51B8               	movf	_LUN& (0+255),w,b
 26753  003FF2  6EFD               	movwf	tosl,c
 26754  003FF4  51B9               	movf	(_LUN+1)& (0+255),w,b
 26755  003FF6  6EFE               	movwf	tosh,c
 26756  003FF8  6AFF               	clrf	tosu,c
 26757  003FFA  50FA               	movf	pclath,w,c
 26758  003FFC  0012               	return		;indir
 26759  003FFE                     u8849:
 26760  003FFE  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 26761  004000  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 26762  004002  B4D8               	btfsc	status,2,c
 26763  004004  D024               	goto	l11975
 26764                           
 26765                           ;usb_device_msd.c: 571: {
 26766                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 26767  004006  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 26768  00400A  0E01               	movlw	1
 26769  00400C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 26770  00400E  0E00               	movlw	0
 26771  004010  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 26772  004012  2A48               	incf	??_MSDProcessCommand,f,c
 26773  004014  D003               	goto	u8864
 26774  004016                     u8865:
 26775  004016  90D8               	bcf	status,0,c
 26776  004018  3649               	rlcf	??_MSDProcessCommand+1,f,c
 26777  00401A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 26778  00401C                     u8864:
 26779  00401C  2E48               	decfsz	??_MSDProcessCommand,f,c
 26780  00401E  D7FB               	goto	u8865
 26781  004020  5049               	movf	??_MSDProcessCommand+1,w,c
 26782  004022  0101               	movlb	1	; () banked
 26783  004024  1378               	iorwf	_gblMediaPresent& (0+255),f,b
 26784  004026  504A               	movf	??_MSDProcessCommand+2,w,c
 26785  004028  0101               	movlb	1	; () banked
 26786  00402A  1379               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 26787                           
 26788                           ; BSR set to: 1
 26789                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 26790  00402C  0101               	movlb	1	; () banked
 26791  00402E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26792  004030  0BF0               	andlw	-16
 26793  004032  0906               	iorlw	6
 26794  004034  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26795                           
 26796                           ; BSR set to: 1
 26797                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 26798  004036  0E28               	movlw	40
 26799  004038  0101               	movlb	1	; () banked
 26800  00403A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26801                           
 26802                           ; BSR set to: 1
 26803                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 26804  00403C  0E00               	movlw	0
 26805  00403E  0101               	movlb	1	; () banked
 26806  004040  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26807                           
 26808                           ; BSR set to: 1
 26809                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 26810  004042  0E01               	movlw	1
 26811  004044  010D               	movlb	13	; () banked
 26812  004046  6F8C               	movwf	140,b	;volatile
 26813                           
 26814                           ; BSR set to: 13
 26815                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 26816  004048  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 26817                           
 26818                           ;usb_device_msd.c: 589: }
 26819  00404C  D005               	goto	l11979
 26820  00404E                     l11975:
 26821                           
 26822                           ;usb_device_msd.c: 590: else
 26823                           ;usb_device_msd.c: 591: {
 26824                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 26825  00404E  EC18  F033         	call	_MSDProcessCommandMediaAbsent	;wreg free
 26826                           
 26827                           ;usb_device_msd.c: 594: }
 26828                           ;usb_device_msd.c: 595: }
 26829  004052  D002               	goto	l11979
 26830  004054                     l11977:
 26831                           
 26832                           ;usb_device_msd.c: 596: else
 26833                           ;usb_device_msd.c: 597: {
 26834                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 26835  004054  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 26836  004058                     l11979:
 26837                           
 26838                           ;usb_device_msd.c: 601: }
 26839                           ;usb_device_msd.c: 602: }
 26840                           ;usb_device_msd.c: 604: return MSDCommandState;
 26841  004058  0100               	movlb	0	; () banked
 26842  00405A  51F9               	movf	_MSDCommandState& (0+255),w,b
 26843  00405C  0012               	return	
 26844  00405E                     __end_of_MSDProcessCommand:
 26845                           	opt stack 0
 26846                           tosu	equ	0xFFF
 26847                           tosh	equ	0xFFE
 26848                           tosl	equ	0xFFD
 26849                           pclath	equ	0xFFA
 26850                           tblptru	equ	0xFF8
 26851                           tblptrh	equ	0xFF7
 26852                           tblptrl	equ	0xFF6
 26853                           tablat	equ	0xFF5
 26854                           prodh	equ	0xFF4
 26855                           prodl	equ	0xFF3
 26856                           intcon	equ	0xFF2
 26857                           intcon2	equ	0xFF1
 26858                           intcon3	equ	0xFF0
 26859                           indf0	equ	0xFEF
 26860                           postinc0	equ	0xFEE
 26861                           fsr0h	equ	0xFEA
 26862                           fsr0l	equ	0xFE9
 26863                           wreg	equ	0xFE8
 26864                           indf1	equ	0xFE7
 26865                           postdec1	equ	0xFE5
 26866                           plusw1	equ	0xFE3
 26867                           fsr1h	equ	0xFE2
 26868                           fsr1l	equ	0xFE1
 26869                           indf2	equ	0xFDF
 26870                           postinc2	equ	0xFDE
 26871                           postdec2	equ	0xFDD
 26872                           plusw2	equ	0xFDB
 26873                           fsr2h	equ	0xFDA
 26874                           fsr2l	equ	0xFD9
 26875                           status	equ	0xFD8
 26876                           
 26877 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 26878 ;; Defined at:
 26879 ;;		line 635 in file "usb_device_msd.c"
 26880 ;; Parameters:    Size  Location     Type
 26881 ;;		None
 26882 ;; Auto vars:     Size  Location     Type
 26883 ;;		None
 26884 ;; Return value:  Size  Location     Type
 26885 ;;                  1    wreg      void 
 26886 ;; Registers used:
 26887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26888 ;; Tracked objects:
 26889 ;;		On entry : 0/0
 26890 ;;		On exit  : 0/0
 26891 ;;		Unchanged: 0/0
 26892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26897 ;;Total ram usage:        0 bytes
 26898 ;; Hardware stack levels used:    1
 26899 ;; Hardware stack levels required when called:    8
 26900 ;; This function calls:
 26901 ;;		_MSDErrorHandler
 26902 ;;		_MSDProcessCommandMediaPresent
 26903 ;;		_ResetSenseData
 26904 ;; This function is called by:
 26905 ;;		_MSDProcessCommand
 26906 ;; This function uses a non-reentrant model
 26907 ;;
 26908                           
 26909                           	psect	text123
 26910  006630                     __ptext123:
 26911                           	opt stack 0
 26912  006630                     _MSDProcessCommandMediaAbsent:
 26913                           	opt stack 19
 26914                           
 26915                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 26916                           
 26917                           ; BSR set to: 0
 26918                           ;incstack = 0
 26919  006630  D020               	goto	l11123
 26920  006632                     l11101:
 26921                           
 26922                           ;usb_device_msd.c: 646: ResetSenseData();
 26923  006632  EC5B  F02F         	call	_ResetSenseData	;wreg free
 26924                           
 26925                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 26926  006636  0101               	movlb	1	; () banked
 26927  006638  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26928  00663A  0BF0               	andlw	-16
 26929  00663C  0902               	iorlw	2
 26930  00663E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26931                           
 26932                           ; BSR set to: 1
 26933                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 26934  006640  0E3A               	movlw	58
 26935  006642  0101               	movlb	1	; () banked
 26936  006644  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26937                           
 26938                           ; BSR set to: 1
 26939                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 26940  006646  0E00               	movlw	0
 26941  006648  0101               	movlb	1	; () banked
 26942  00664A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26943                           
 26944                           ; BSR set to: 1
 26945                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 26946  00664C  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 26947                           
 26948                           ;usb_device_msd.c: 655: break;
 26949  006650  0012               	return	
 26950  006652                     l11111:
 26951                           
 26952                           ;usb_device_msd.c: 658: case 0x00:
 26953                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 26954  006652  0E01               	movlw	1
 26955  006654  010D               	movlb	13	; () banked
 26956  006656  6F8C               	movwf	140,b	;volatile
 26957                           
 26958                           ; BSR set to: 13
 26959                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 26960  006658  0100               	movlb	0	; () banked
 26961  00665A  69F9               	setf	_MSDCommandState& (0+255),b
 26962                           
 26963                           ;usb_device_msd.c: 665: break;
 26964  00665C  0012               	return	
 26965  00665E                     l11115:
 26966                           
 26967                           ; BSR set to: 0
 26968                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 26969  00665E  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 26970                           
 26971                           ;usb_device_msd.c: 671: break;
 26972  006662  0012               	return	
 26973  006664                     l11117:
 26974                           
 26975                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 26976  006664  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 26977                           
 26978                           ;usb_device_msd.c: 677: break;
 26979  006668  0012               	return	
 26980  00666A                     l11119:
 26981                           
 26982                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 26983  00666A  0E7F               	movlw	127
 26984  00666C  EC0E  F01F         	call	_MSDErrorHandler
 26985                           
 26986                           ;usb_device_msd.c: 685: }
 26987                           
 26988                           ;usb_device_msd.c: 684: break;
 26989  006670  0012               	return	
 26990  006672                     l11123:
 26991  006672  0100               	movlb	0	; () banked
 26992  006674  51F9               	movf	_MSDCommandState& (0+255),w,b
 26993                           
 26994                           ; Switch size 1, requested type "space"
 26995                           ; Number of cases is 5, Range of values is 0 to 253
 26996                           ; switch strategies available:
 26997                           ; Name         Instructions Cycles
 26998                           ; simple_byte           16     9 (average)
 26999                           ;	Chosen strategy is simple_byte
 27000  006676  0A00               	xorlw	0	; case 0
 27001  006678  B4D8               	btfsc	status,2,c
 27002  00667A  D7EB               	goto	l11111
 27003  00667C  0A03               	xorlw	3	; case 3
 27004  00667E  B4D8               	btfsc	status,2,c
 27005  006680  D7D8               	goto	l11101
 27006  006682  0A11               	xorlw	17	; case 18
 27007  006684  B4D8               	btfsc	status,2,c
 27008  006686  D7EB               	goto	l11115
 27009  006688  0A0C               	xorlw	12	; case 30
 27010  00668A  B4D8               	btfsc	status,2,c
 27011  00668C  D7E2               	goto	l11111
 27012  00668E  0AE3               	xorlw	227	; case 253
 27013  006690  B4D8               	btfsc	status,2,c
 27014  006692  D7E8               	goto	l11117
 27015  006694  D7EA               	goto	l11119
 27016  006696                     __end_of_MSDProcessCommandMediaAbsent:
 27017                           	opt stack 0
 27018                           tosu	equ	0xFFF
 27019                           tosh	equ	0xFFE
 27020                           tosl	equ	0xFFD
 27021                           pclath	equ	0xFFA
 27022                           tblptru	equ	0xFF8
 27023                           tblptrh	equ	0xFF7
 27024                           tblptrl	equ	0xFF6
 27025                           tablat	equ	0xFF5
 27026                           prodh	equ	0xFF4
 27027                           prodl	equ	0xFF3
 27028                           intcon	equ	0xFF2
 27029                           intcon2	equ	0xFF1
 27030                           intcon3	equ	0xFF0
 27031                           indf0	equ	0xFEF
 27032                           postinc0	equ	0xFEE
 27033                           fsr0h	equ	0xFEA
 27034                           fsr0l	equ	0xFE9
 27035                           wreg	equ	0xFE8
 27036                           indf1	equ	0xFE7
 27037                           postdec1	equ	0xFE5
 27038                           plusw1	equ	0xFE3
 27039                           fsr1h	equ	0xFE2
 27040                           fsr1l	equ	0xFE1
 27041                           indf2	equ	0xFDF
 27042                           postinc2	equ	0xFDE
 27043                           postdec2	equ	0xFDD
 27044                           plusw2	equ	0xFDB
 27045                           fsr2h	equ	0xFDA
 27046                           fsr2l	equ	0xFD9
 27047                           status	equ	0xFD8
 27048                           
 27049 ;; *************** function _MSDProcessCommandMediaPresent *****************
 27050 ;; Defined at:
 27051 ;;		line 712 in file "usb_device_msd.c"
 27052 ;; Parameters:    Size  Location     Type
 27053 ;;		None
 27054 ;; Auto vars:     Size  Location     Type
 27055 ;;  capacity        4   66[COMRAM] struct .
 27056 ;;  sectorSize      4   62[COMRAM] struct .
 27057 ;;  i               1   70[COMRAM] unsigned char 
 27058 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 27059 ;; Return value:  Size  Location     Type
 27060 ;;                  1    wreg      void 
 27061 ;; Registers used:
 27062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27063 ;; Tracked objects:
 27064 ;;		On entry : 0/0
 27065 ;;		On exit  : 0/0
 27066 ;;		Unchanged: 0/0
 27067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27069 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27071 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27072 ;;Total ram usage:       14 bytes
 27073 ;; Hardware stack levels used:    1
 27074 ;; Hardware stack levels required when called:    7
 27075 ;; This function calls:
 27076 ;;		_ExternalFlash_CapacityRead
 27077 ;;		_ExternalFlash_SectorSizeRead
 27078 ;;		_ExternalFlash_WriteProtectStateGet
 27079 ;;		_MSDCheckForErrorCases
 27080 ;;		_MSDComputeDeviceInAndResidue
 27081 ;;		_MSDErrorHandler
 27082 ;;		_MSDReadHandler
 27083 ;;		_MSDWriteHandler
 27084 ;;		_ResetSenseData
 27085 ;;		_USBTransferOnePacket
 27086 ;;		_memcpy
 27087 ;; This function is called by:
 27088 ;;		_MSDProcessCommand
 27089 ;;		_MSDProcessCommandMediaAbsent
 27090 ;; This function uses a non-reentrant model
 27091 ;;
 27092                           
 27093                           	psect	text124
 27094  000892                     __ptext124:
 27095                           	opt stack 0
 27096  000892                     _MSDProcessCommandMediaPresent:
 27097                           	opt stack 20
 27098                           
 27099                           ;usb_device_msd.c: 714: uint8_t i;
 27100                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 27101                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 27102                           
 27103                           ;incstack = 0
 27104  000892  D1D1               	goto	l10853
 27105  000894                     l10707:
 27106                           
 27107                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 27108  000894  ECD4  F015         	call	_MSDReadHandler	;wreg free
 27109  000898  0900               	iorlw	0
 27110  00089A  A4D8               	btfss	status,2,c
 27111  00089C  0012               	return	
 27112                           
 27113                           ;usb_device_msd.c: 726: {
 27114                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 27115  00089E  0100               	movlb	0	; () banked
 27116  0008A0  69F9               	setf	_MSDCommandState& (0+255),b
 27117                           
 27118                           ; BSR set to: 0
 27119                           ;usb_device_msd.c: 728: }
 27120                           ;usb_device_msd.c: 729: break;
 27121  0008A2  0012               	return	
 27122  0008A4                     l10711:
 27123                           
 27124                           ; BSR set to: 0
 27125                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 27126  0008A4  EC62  F00E         	call	_MSDWriteHandler	;wreg free
 27127  0008A8  0900               	iorlw	0
 27128  0008AA  A4D8               	btfss	status,2,c
 27129  0008AC  0012               	return	
 27130                           
 27131                           ;usb_device_msd.c: 737: {
 27132                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 27133  0008AE  0100               	movlb	0	; () banked
 27134  0008B0  69F9               	setf	_MSDCommandState& (0+255),b
 27135                           
 27136                           ; BSR set to: 0
 27137                           ;usb_device_msd.c: 739: }
 27138                           ;usb_device_msd.c: 740: break;
 27139  0008B2  0012               	return	
 27140  0008B4                     l10715:
 27141                           
 27142                           ; BSR set to: 0
 27143                           ;usb_device_msd.c: 743: {
 27144                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 27145  0008B4  0100               	movlb	0	; () banked
 27146  0008B6  05F8               	decf	_MSDHostNoData& (0+255),w,b
 27147  0008B8  A4D8               	btfss	status,2,c
 27148  0008BA  D003               	goto	l621
 27149                           
 27150                           ; BSR set to: 0
 27151                           ;usb_device_msd.c: 749: {
 27152                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 27153  0008BC  0100               	movlb	0	; () banked
 27154  0008BE  69F9               	setf	_MSDCommandState& (0+255),b
 27155                           
 27156                           ;usb_device_msd.c: 751: break;
 27157  0008C0  0012               	return	
 27158  0008C2                     l621:
 27159                           
 27160                           ; BSR set to: 0
 27161                           ;usb_device_msd.c: 752: }
 27162                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 27163  0008C2  C112  F177         	movff	_gblCBW+18,_TransferLength+1
 27164                           
 27165                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 27166  0008C6  C113  F176         	movff	_gblCBW+19,_TransferLength
 27167                           
 27168                           ; BSR set to: 0
 27169                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 27170  0008CA  C176  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 27171  0008CE  C177  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 27172  0008D2  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 27173  0008D4  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 27174  0008D6  EC5E  F023         	call	_MSDCheckForErrorCases	;wreg free
 27175  0008DA  0900               	iorlw	0
 27176  0008DC  A4D8               	btfss	status,2,c
 27177  0008DE  0012               	return	
 27178                           
 27179                           ;usb_device_msd.c: 762: }
 27180                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 27181                           
 27182                           ;usb_device_msd.c: 760: {
 27183                           ;usb_device_msd.c: 761: break;
 27184  0008E0  0E00               	movlw	0
 27185  0008E2  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27186  0008E4  0E24               	movlw	36
 27187  0008E6  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27188  0008E8  EC16  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27189                           
 27190                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 27191  0008EC  0E00               	movlw	0
 27192  0008EE  6E01               	movwf	memcpy@d1,c
 27193  0008F0  0E06               	movlw	6
 27194  0008F2  6E02               	movwf	memcpy@d1+1,c
 27195  0008F4  0E49               	movlw	low _inq_resp
 27196  0008F6  6E03               	movwf	memcpy@s1,c
 27197  0008F8  0E8F               	movlw	high _inq_resp
 27198  0008FA  6E04               	movwf	memcpy@s1+1,c
 27199  0008FC  5003               	movf	memcpy@s1,w,c
 27200  0008FE  1004               	iorwf	memcpy@s1+1,w,c
 27201  000900  A4D8               	btfss	status,2,c
 27202  000902  0E00               	movlw	low (__mediumconst shr (0+16))
 27203  000904  6E05               	movwf	memcpy@s1+2,c
 27204  000906  0E00               	movlw	0
 27205  000908  6E07               	movwf	memcpy@n+1,c
 27206  00090A  0E24               	movlw	36
 27207  00090C  6E06               	movwf	memcpy@n,c
 27208  00090E  EC4B  F033         	call	_memcpy	;wreg free
 27209                           
 27210                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 27211  000912  0EFD               	movlw	253
 27212  000914  0100               	movlb	0	; () banked
 27213  000916  6FF9               	movwf	_MSDCommandState& (0+255),b
 27214                           
 27215                           ;usb_device_msd.c: 773: break;
 27216  000918  0012               	return	
 27217  00091A                     l10729:
 27218                           
 27219                           ; BSR set to: 0
 27220                           ;usb_device_msd.c: 776: {
 27221                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 27222                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 27223                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 27224  00091A  C1C6  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 27225  00091E  C1C7  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 27226  000922  D801               	call	u7978
 27227  000924  D00A               	goto	u7979
 27228  000926                     u7978:
 27229  000926  0005               	push	
 27230  000928  6EFA               	movwf	pclath,c
 27231  00092A  0101               	movlb	1	; () banked
 27232  00092C  51BA               	movf	(_LUN+2)& (0+255),w,b
 27233  00092E  6EFD               	movwf	tosl,c
 27234  000930  51BB               	movf	(_LUN+3)& (0+255),w,b
 27235  000932  6EFE               	movwf	tosh,c
 27236  000934  6AFF               	clrf	tosu,c
 27237  000936  50FA               	movf	pclath,w,c
 27238  000938  0012               	return		;indir
 27239  00093A                     u7979:
 27240  00093A  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 27241  00093E  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 27242  000942  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 27243  000946  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 27244                           
 27245                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 27246  00094A  C1C6  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 27247  00094E  C1C7  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 27248  000952  D801               	call	u7988
 27249  000954  D00A               	goto	u7989
 27250  000956                     u7988:
 27251  000956  0005               	push	
 27252  000958  6EFA               	movwf	pclath,c
 27253  00095A  0101               	movlb	1	; () banked
 27254  00095C  51BC               	movf	(_LUN+4)& (0+255),w,b
 27255  00095E  6EFD               	movwf	tosl,c
 27256  000960  51BD               	movf	(_LUN+5)& (0+255),w,b
 27257  000962  6EFE               	movwf	tosh,c
 27258  000964  6AFF               	clrf	tosu,c
 27259  000966  50FA               	movf	pclath,w,c
 27260  000968  0012               	return		;indir
 27261  00096A                     u7989:
 27262  00096A  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 27263  00096E  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 27264  000972  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 27265  000974  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 27266                           
 27267                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 27268  000976  EE26 F000          	lfsr	2,1536
 27269  00097A  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 27270                           
 27271                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 27272  00097E  EE26 F001          	lfsr	2,1537	;volatile
 27273  000982  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 27274                           
 27275                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 27276  000986  EE26 F002          	lfsr	2,1538	;volatile
 27277  00098A  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 27278                           
 27279                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 27280  00098E  EE26 F003          	lfsr	2,1539	;volatile
 27281  000992  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 27282                           
 27283                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 27284  000996  EE26 F004          	lfsr	2,1540	;volatile
 27285  00099A  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 27286                           
 27287                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 27288  00099E  EE26 F005          	lfsr	2,1541	;volatile
 27289  0009A2  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 27290                           
 27291                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 27292  0009A6  EE26 F006          	lfsr	2,1542	;volatile
 27293  0009AA  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 27294                           
 27295                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 27296  0009AE  EE26 F007          	lfsr	2,1543	;volatile
 27297  0009B2  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 27298                           
 27299                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 27300  0009B6  0E00               	movlw	0
 27301  0009B8  0101               	movlb	1	; () banked
 27302  0009BA  6F77               	movwf	(_TransferLength+1)& (0+255),b
 27303  0009BC  0E08               	movlw	8
 27304  0009BE  6F76               	movwf	_TransferLength& (0+255),b
 27305                           
 27306                           ; BSR set to: 1
 27307                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 27308  0009C0  0E00               	movlw	0
 27309  0009C2  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27310  0009C4  0E08               	movlw	8
 27311  0009C6  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27312  0009C8  EC16  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27313                           
 27314                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 27315  0009CC  0EFD               	movlw	253
 27316  0009CE  0100               	movlb	0	; () banked
 27317  0009D0  6FF9               	movwf	_MSDCommandState& (0+255),b
 27318                           
 27319                           ;usb_device_msd.c: 802: break;
 27320  0009D2  0012               	return	
 27321  0009D4                     l10753:
 27322                           
 27323                           ; BSR set to: 0
 27324                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 27325  0009D4  0100               	movlb	0	; () banked
 27326  0009D6  05F8               	decf	_MSDHostNoData& (0+255),w,b
 27327  0009D8  A4D8               	btfss	status,2,c
 27328  0009DA  D003               	goto	l10757
 27329                           
 27330                           ; BSR set to: 0
 27331                           ;usb_device_msd.c: 812: {
 27332                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 27333  0009DC  0100               	movlb	0	; () banked
 27334  0009DE  69F9               	setf	_MSDCommandState& (0+255),b
 27335                           
 27336                           ;usb_device_msd.c: 814: break;
 27337  0009E0  0012               	return	
 27338  0009E2                     l10757:
 27339                           
 27340                           ; BSR set to: 0
 27341                           ;usb_device_msd.c: 815: }
 27342                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 27343  0009E2  0E00               	movlw	0
 27344  0009E4  0101               	movlb	1	; () banked
 27345  0009E6  6F77               	movwf	(_TransferLength+1)& (0+255),b
 27346  0009E8  0E12               	movlw	18
 27347  0009EA  6F76               	movwf	_TransferLength& (0+255),b
 27348                           
 27349                           ; BSR set to: 1
 27350                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 27351  0009EC  0E00               	movlw	0
 27352  0009EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27353  0009F0  0E12               	movlw	18
 27354  0009F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27355  0009F4  EC16  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27356                           
 27357                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 27358  0009F8  0E00               	movlw	0
 27359  0009FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 27360  0009FC                     l10763:
 27361  0009FC  0E11               	movlw	17
 27362  0009FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 27363  000A00  D001               	goto	l10767
 27364  000A02  D014               	goto	l10773
 27365  000A04                     l10767:
 27366                           
 27367                           ;usb_device_msd.c: 823: {
 27368                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 27369  000A04  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 27370  000A06  0D01               	mullw	1
 27371  000A08  0E1F               	movlw	low _gblSenseData
 27372  000A0A  24F3               	addwf	prodl,w,c
 27373  000A0C  6ED9               	movwf	fsr2l,c
 27374  000A0E  0E01               	movlw	high _gblSenseData
 27375  000A10  20F4               	addwfc	prodh,w,c
 27376  000A12  6EDA               	movwf	fsr2h,c
 27377  000A14  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 27378  000A16  0D01               	mullw	1
 27379  000A18  0E00               	movlw	0
 27380  000A1A  24F3               	addwf	prodl,w,c
 27381  000A1C  6EE1               	movwf	fsr1l,c
 27382  000A1E  0E06               	movlw	6
 27383  000A20  20F4               	addwfc	prodh,w,c
 27384  000A22  6EE2               	movwf	fsr1h,c
 27385  000A24  CFDF FFE7          	movff	indf2,indf1
 27386  000A28  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 27387  000A2A  D7E8               	goto	l10763
 27388  000A2C                     l10773:
 27389                           
 27390                           ;usb_device_msd.c: 825: }
 27391                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 27392  000A2C  0EFD               	movlw	253
 27393  000A2E  0100               	movlb	0	; () banked
 27394  000A30  6FF9               	movwf	_MSDCommandState& (0+255),b
 27395                           
 27396                           ;usb_device_msd.c: 827: break;
 27397  000A32  0012               	return	
 27398  000A34                     l628:
 27399                           
 27400                           ; BSR set to: 0
 27401                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 27402  000A34  0E03               	movlw	3
 27403  000A36  CFE8 F600          	movff	wreg,1536
 27404                           
 27405                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 27406  000A3A  0E00               	movlw	0
 27407  000A3C  CFE8 F601          	movff	wreg,1537	;volatile
 27408                           
 27409                           ; BSR set to: 0
 27410                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 27411  000A40  C1C6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 27412  000A44  C1C7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 27413  000A48  D801               	call	u8028
 27414  000A4A  D00A               	goto	u8029
 27415  000A4C                     u8028:
 27416  000A4C  0005               	push	
 27417  000A4E  6EFA               	movwf	pclath,c
 27418  000A50  0101               	movlb	1	; () banked
 27419  000A52  51C2               	movf	(_LUN+10)& (0+255),w,b
 27420  000A54  6EFD               	movwf	tosl,c
 27421  000A56  51C3               	movf	(_LUN+11)& (0+255),w,b
 27422  000A58  6EFE               	movwf	tosh,c
 27423  000A5A  6AFF               	clrf	tosu,c
 27424  000A5C  50FA               	movf	pclath,w,c
 27425  000A5E  0012               	return		;indir
 27426  000A60                     u8029:
 27427  000A60  0900               	iorlw	0
 27428  000A62  A4D8               	btfss	status,2,c
 27429  000A64  D004               	goto	l10779
 27430  000A66  0E00               	movlw	0
 27431  000A68  6E3D               	movwf	_MSDProcessCommandMediaPresent$2387+1,c
 27432  000A6A  0E00               	movlw	0
 27433  000A6C  D003               	goto	L19
 27434  000A6E                     l10779:
 27435  000A6E  0E00               	movlw	0
 27436  000A70  6E3D               	movwf	_MSDProcessCommandMediaPresent$2387+1,c
 27437  000A72  0E80               	movlw	128
 27438  000A74                     L19:
 27439  000A74  6E3C               	movwf	_MSDProcessCommandMediaPresent$2387,c
 27440  000A76  EE26 F002          	lfsr	2,1538	;volatile
 27441  000A7A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2387,indf2
 27442                           
 27443                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 27444  000A7E  0E00               	movlw	0
 27445  000A80  CFE8 F603          	movff	wreg,1539	;volatile
 27446                           
 27447                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 27448  000A84  0E00               	movlw	0
 27449  000A86  0101               	movlb	1	; () banked
 27450  000A88  6F77               	movwf	(_TransferLength+1)& (0+255),b
 27451  000A8A  0E04               	movlw	4
 27452  000A8C  6F76               	movwf	_TransferLength& (0+255),b
 27453                           
 27454                           ; BSR set to: 1
 27455                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 27456  000A8E  0E00               	movlw	0
 27457  000A90  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27458  000A92  0E04               	movlw	4
 27459  000A94  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27460  000A96  EC16  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27461                           
 27462                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 27463  000A9A  0EFD               	movlw	253
 27464  000A9C  0100               	movlb	0	; () banked
 27465  000A9E  6FF9               	movwf	_MSDCommandState& (0+255),b
 27466                           
 27467                           ;usb_device_msd.c: 839: break;
 27468  000AA0  0012               	return	
 27469  000AA2                     l10791:
 27470                           
 27471                           ; BSR set to: 0
 27472                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 27473  000AA2  0101               	movlb	1	; () banked
 27474  000AA4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27475  000AA6  0BF0               	andlw	-16
 27476  000AA8  0905               	iorlw	5
 27477  000AAA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 27478                           
 27479                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 27480  000AAC  0E20               	movlw	32
 27481  000AAE  0101               	movlb	1	; () banked
 27482  000AB0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27483                           
 27484                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 27485  000AB2  0E00               	movlw	0
 27486  000AB4  0101               	movlb	1	; () banked
 27487  000AB6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27488                           
 27489                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 27490  000AB8  0E01               	movlw	1
 27491  000ABA  010D               	movlb	13	; () banked
 27492  000ABC  6F8C               	movwf	140,b	;volatile
 27493                           
 27494                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 27495  000ABE  0E00               	movlw	0
 27496  000AC0  010D               	movlb	13	; () banked
 27497  000AC2  6F88               	movwf	136,b	;volatile
 27498  000AC4  0E00               	movlw	0
 27499  000AC6  6F89               	movwf	137,b	;volatile
 27500  000AC8  0E00               	movlw	0
 27501  000ACA  6F8A               	movwf	138,b	;volatile
 27502  000ACC  0E00               	movlw	0
 27503  000ACE  6F8B               	movwf	139,b	;volatile
 27504                           
 27505                           ; BSR set to: 13
 27506                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 27507  000AD0  0100               	movlb	0	; () banked
 27508  000AD2  69F9               	setf	_MSDCommandState& (0+255),b
 27509                           
 27510                           ;usb_device_msd.c: 848: break;
 27511  000AD4  0012               	return	
 27512  000AD6                     l10795:
 27513                           
 27514                           ; BSR set to: 0
 27515                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 27516  000AD6  0E00               	movlw	0
 27517  000AD8  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 27518  000ADA  0E00               	movlw	0
 27519  000ADC  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 27520  000ADE  0E00               	movlw	0
 27521  000AE0  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 27522  000AE2  0E00               	movlw	0
 27523  000AE4  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 27524  000AE6  EC5E  F023         	call	_MSDCheckForErrorCases	;wreg free
 27525  000AEA  0900               	iorlw	0
 27526  000AEC  A4D8               	btfss	status,2,c
 27527  000AEE  0012               	return	
 27528                           
 27529                           ;usb_device_msd.c: 861: }
 27530                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 27531                           
 27532                           ;usb_device_msd.c: 859: {
 27533                           ;usb_device_msd.c: 860: break;
 27534  000AF0  0101               	movlb	1	; () banked
 27535  000AF2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27536  000AF4  0B0F               	andlw	15
 27537  000AF6  0A06               	xorlw	6
 27538  000AF8  A4D8               	btfss	status,2,c
 27539  000AFA  D007               	goto	l10805
 27540                           
 27541                           ; BSR set to: 1
 27542  000AFC  010D               	movlb	13	; () banked
 27543  000AFE  058C               	decf	140,w,b	;volatile
 27544  000B00  A4D8               	btfss	status,2,c
 27545  000B02  D003               	goto	l10805
 27546                           
 27547                           ; BSR set to: 13
 27548                           ;usb_device_msd.c: 868: {
 27549                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 27550  000B04  0100               	movlb	0	; () banked
 27551  000B06  69F9               	setf	_MSDCommandState& (0+255),b
 27552                           
 27553                           ;usb_device_msd.c: 870: }
 27554  000B08  0012               	return	
 27555  000B0A                     l10805:
 27556                           
 27557                           ;usb_device_msd.c: 871: else
 27558                           ;usb_device_msd.c: 872: {
 27559                           ;usb_device_msd.c: 873: ResetSenseData();
 27560  000B0A  EC5B  F02F         	call	_ResetSenseData	;wreg free
 27561                           
 27562                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 27563  000B0E  0E00               	movlw	0
 27564  000B10  010D               	movlb	13	; () banked
 27565  000B12  6F88               	movwf	136,b	;volatile
 27566  000B14  0E00               	movlw	0
 27567  000B16  6F89               	movwf	137,b	;volatile
 27568  000B18  0E00               	movlw	0
 27569  000B1A  6F8A               	movwf	138,b	;volatile
 27570  000B1C  0E00               	movlw	0
 27571  000B1E  6F8B               	movwf	139,b	;volatile
 27572                           
 27573                           ; BSR set to: 13
 27574                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 27575  000B20  0100               	movlb	0	; () banked
 27576  000B22  69F9               	setf	_MSDCommandState& (0+255),b
 27577                           
 27578                           ; BSR set to: 0
 27579                           ;usb_device_msd.c: 876: }
 27580                           ;usb_device_msd.c: 877: break;
 27581  000B24  0012               	return	
 27582  000B26                     l10811:
 27583                           
 27584                           ; BSR set to: 0
 27585                           ;usb_device_msd.c: 882: case 0x1b:
 27586                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 27587  000B26  0E00               	movlw	0
 27588  000B28  010D               	movlb	13	; () banked
 27589  000B2A  6F88               	movwf	136,b	;volatile
 27590  000B2C  0E00               	movlw	0
 27591  000B2E  6F89               	movwf	137,b	;volatile
 27592  000B30  0E00               	movlw	0
 27593  000B32  6F8A               	movwf	138,b	;volatile
 27594  000B34  0E00               	movlw	0
 27595  000B36  6F8B               	movwf	139,b	;volatile
 27596                           
 27597                           ; BSR set to: 13
 27598                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 27599  000B38  0100               	movlb	0	; () banked
 27600  000B3A  69F9               	setf	_MSDCommandState& (0+255),b
 27601                           
 27602                           ;usb_device_msd.c: 885: break;
 27603  000B3C  0012               	return	
 27604  000B3E                     l10815:
 27605                           
 27606                           ; BSR set to: 0
 27607                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 27608  000B3E  0100               	movlb	0	; () banked
 27609  000B40  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 27610  000B42  0100               	movlb	0	; () banked
 27611  000B44  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 27612  000B46  B4D8               	btfsc	status,2,c
 27613  000B48  D007               	goto	l10819
 27614                           
 27615                           ; BSR set to: 0
 27616  000B4A  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 27617  000B4E  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 27618  000B52  0100               	movlb	0	; () banked
 27619  000B54  BEDF               	btfsc	indf2,7,c
 27620  000B56  0012               	return	
 27621  000B58                     l10819:
 27622                           
 27623                           ; BSR set to: 0
 27624                           ;usb_device_msd.c: 893: {
 27625                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 27626  000B58  0101               	movlb	1	; () banked
 27627  000B5A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 27628  000B5C  0101               	movlb	1	; () banked
 27629  000B5E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 27630  000B60  0101               	movlb	1	; () banked
 27631  000B62  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 27632  000B64  E105               	bnz	u8090
 27633  000B66  0E40               	movlw	64
 27634  000B68  0101               	movlb	1	; () banked
 27635  000B6A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 27636  000B6C  A0D8               	btfss	status,0,c
 27637  000B6E  D00A               	goto	l644
 27638  000B70                     u8090:
 27639                           
 27640                           ; BSR set to: 1
 27641                           ;usb_device_msd.c: 897: {
 27642                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 27643  000B70  0E40               	movlw	64
 27644  000B72  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 27645                           
 27646                           ; BSR set to: 1
 27647                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 27648  000B74  0E40               	movlw	64
 27649  000B76  0101               	movlb	1	; () banked
 27650  000B78  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 27651  000B7A  0E00               	movlw	0
 27652  000B7C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 27653  000B7E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 27654  000B80  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 27655                           
 27656                           ;usb_device_msd.c: 900: }
 27657  000B82  D00B               	goto	l10827
 27658  000B84                     l644:
 27659                           
 27660                           ; BSR set to: 1
 27661                           ;usb_device_msd.c: 901: else
 27662                           ;usb_device_msd.c: 902: {
 27663                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 27664  000B84  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 27665                           
 27666                           ; BSR set to: 1
 27667                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 27668  000B88  0E00               	movlw	0
 27669  000B8A  0101               	movlb	1	; () banked
 27670  000B8C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 27671  000B8E  0E00               	movlw	0
 27672  000B90  6F09               	movwf	(_gblCBW+9)& (0+255),b
 27673  000B92  0E00               	movlw	0
 27674  000B94  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 27675  000B96  0E00               	movlw	0
 27676  000B98  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 27677  000B9A                     l10827:
 27678                           
 27679                           ; BSR set to: 1
 27680                           ;usb_device_msd.c: 907: }
 27681                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 27682  000B9A  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 27683  000B9C  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 27684  000B9E  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 27685  000BA0  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 27686  000BA2  0101               	movlb	1	; () banked
 27687  000BA4  5D76               	subwf	_TransferLength& (0+255),w,b
 27688  000BA6  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 27689  000BA8  0101               	movlb	1	; () banked
 27690  000BAA  5977               	subwfb	(_TransferLength+1)& (0+255),w,b
 27691  000BAC  A0D8               	btfss	status,0,c
 27692  000BAE  D006               	goto	l10831
 27693                           
 27694                           ; BSR set to: 1
 27695                           ;usb_device_msd.c: 915: {
 27696                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 27697  000BB0  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 27698  000BB2  0101               	movlb	1	; () banked
 27699  000BB4  5F76               	subwf	_TransferLength& (0+255),f,b
 27700  000BB6  0E00               	movlw	0
 27701  000BB8  5B77               	subwfb	(_TransferLength+1)& (0+255),f,b
 27702                           
 27703                           ;usb_device_msd.c: 918: }
 27704  000BBA  D01D               	goto	l10843
 27705  000BBC                     l10831:
 27706                           
 27707                           ; BSR set to: 1
 27708                           ;usb_device_msd.c: 919: else
 27709                           ;usb_device_msd.c: 920: {
 27710                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 27711  000BBC  0E00               	movlw	0
 27712  000BBE  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 27713  000BC0  D016               	goto	l10841
 27714  000BC2                     l10833:
 27715                           
 27716                           ; BSR set to: 1
 27717                           ;usb_device_msd.c: 928: {
 27718                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 27719  000BC2  0101               	movlb	1	; () banked
 27720  000BC4  5176               	movf	_TransferLength& (0+255),w,b
 27721  000BC6  0101               	movlb	1	; () banked
 27722  000BC8  1177               	iorwf	(_TransferLength+1)& (0+255),w,b
 27723  000BCA  B4D8               	btfsc	status,2,c
 27724  000BCC  D005               	goto	l10837
 27725                           
 27726                           ; BSR set to: 1
 27727                           ;usb_device_msd.c: 930: {
 27728                           ;usb_device_msd.c: 931: TransferLength.Val--;
 27729  000BCE  0101               	movlb	1	; () banked
 27730  000BD0  0776               	decf	_TransferLength& (0+255),f,b
 27731  000BD2  A0D8               	btfss	status,0,c
 27732  000BD4  0777               	decf	(_TransferLength+1)& (0+255),f,b
 27733                           
 27734                           ;usb_device_msd.c: 932: }
 27735  000BD6  D00A               	goto	l10839
 27736  000BD8                     l10837:
 27737                           
 27738                           ; BSR set to: 1
 27739                           ;usb_device_msd.c: 933: else
 27740                           ;usb_device_msd.c: 934: {
 27741                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 27742  000BD8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 27743  000BDA  0D01               	mullw	1
 27744  000BDC  0E00               	movlw	0
 27745  000BDE  24F3               	addwf	prodl,w,c
 27746  000BE0  6ED9               	movwf	fsr2l,c
 27747  000BE2  0E06               	movlw	6
 27748  000BE4  20F4               	addwfc	prodh,w,c
 27749  000BE6  6EDA               	movwf	fsr2h,c
 27750  000BE8  0E00               	movlw	0
 27751  000BEA  6EDF               	movwf	indf2,c
 27752  000BEC                     l10839:
 27753                           
 27754                           ; BSR set to: 1
 27755  000BEC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 27756  000BEE                     l10841:
 27757                           
 27758                           ; BSR set to: 1
 27759  000BEE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 27760  000BF0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 27761  000BF2  A0D8               	btfss	status,0,c
 27762  000BF4  D7E6               	goto	l10833
 27763  000BF6                     l10843:
 27764                           
 27765                           ; BSR set to: 1
 27766                           ;usb_device_msd.c: 936: }
 27767                           ;usb_device_msd.c: 937: }
 27768                           ;usb_device_msd.c: 938: }
 27769                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 27770  000BF6  0E01               	movlw	1
 27771  000BF8  6E01               	movwf	USBTransferOnePacket@dir,c
 27772  000BFA  0E00               	movlw	0
 27773  000BFC  6E02               	movwf	USBTransferOnePacket@data,c
 27774  000BFE  0E06               	movlw	6
 27775  000C00  6E03               	movwf	USBTransferOnePacket@data+1,c
 27776  000C02  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 27777  000C06  0E02               	movlw	2
 27778  000C08  ECDD  F022         	call	_USBTransferOnePacket
 27779  000C0C  C001  F0F4         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 27780  000C10  C002  F0F5         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 27781                           
 27782                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 27783  000C14  0101               	movlb	1	; () banked
 27784  000C16  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27785  000C18  0101               	movlb	1	; () banked
 27786  000C1A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 27787  000C1C  0101               	movlb	1	; () banked
 27788  000C1E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 27789  000C20  0101               	movlb	1	; () banked
 27790  000C22  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 27791  000C24  A4D8               	btfss	status,2,c
 27792  000C26  0012               	return	
 27793                           
 27794                           ; BSR set to: 1
 27795                           ;usb_device_msd.c: 945: {
 27796                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 27797  000C28  0100               	movlb	0	; () banked
 27798  000C2A  69F9               	setf	_MSDCommandState& (0+255),b
 27799                           
 27800                           ; BSR set to: 0
 27801                           ;usb_device_msd.c: 950: }
 27802                           ;usb_device_msd.c: 951: }
 27803                           ;usb_device_msd.c: 952: break;
 27804                           
 27805                           ; BSR set to: 0
 27806                           
 27807                           ;usb_device_msd.c: 949: break;
 27808  000C2C  0012               	return	
 27809  000C2E                     l10849:
 27810                           
 27811                           ; BSR set to: 0
 27812                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 27813  000C2E  0E7F               	movlw	127
 27814  000C30  EC0E  F01F         	call	_MSDErrorHandler
 27815                           
 27816                           ;usb_device_msd.c: 960: }
 27817                           
 27818                           ;usb_device_msd.c: 959: break;
 27819  000C34  0012               	return	
 27820  000C36                     l10853:
 27821  000C36  0100               	movlb	0	; () banked
 27822  000C38  51F9               	movf	_MSDCommandState& (0+255),w,b
 27823                           
 27824                           ; Switch size 1, requested type "space"
 27825                           ; Number of cases is 12, Range of values is 0 to 254
 27826                           ; switch strategies available:
 27827                           ; Name         Instructions Cycles
 27828                           ; simple_byte           37    19 (average)
 27829                           ;	Chosen strategy is simple_byte
 27830  000C3A  0A00               	xorlw	0	; case 0
 27831  000C3C  B4D8               	btfsc	status,2,c
 27832  000C3E  D74B               	goto	l10795
 27833  000C40  0A03               	xorlw	3	; case 3
 27834  000C42  B4D8               	btfsc	status,2,c
 27835  000C44  D6C7               	goto	l10753
 27836  000C46  0A11               	xorlw	17	; case 18
 27837  000C48  B4D8               	btfsc	status,2,c
 27838  000C4A  D634               	goto	l10715
 27839  000C4C  0A08               	xorlw	8	; case 26
 27840  000C4E  B4D8               	btfsc	status,2,c
 27841  000C50  D6F1               	goto	l628
 27842  000C52  0A01               	xorlw	1	; case 27
 27843  000C54  B4D8               	btfsc	status,2,c
 27844  000C56  D767               	goto	l10811
 27845  000C58  0A05               	xorlw	5	; case 30
 27846  000C5A  B4D8               	btfsc	status,2,c
 27847  000C5C  D722               	goto	l10791
 27848  000C5E  0A3B               	xorlw	59	; case 37
 27849  000C60  B4D8               	btfsc	status,2,c
 27850  000C62  D65B               	goto	l10729
 27851  000C64  0A0D               	xorlw	13	; case 40
 27852  000C66  B4D8               	btfsc	status,2,c
 27853  000C68  D615               	goto	l10707
 27854  000C6A  0A02               	xorlw	2	; case 42
 27855  000C6C  B4D8               	btfsc	status,2,c
 27856  000C6E  D61A               	goto	l10711
 27857  000C70  0A05               	xorlw	5	; case 47
 27858  000C72  B4D8               	btfsc	status,2,c
 27859  000C74  D758               	goto	l10811
 27860  000C76  0AD2               	xorlw	210	; case 253
 27861  000C78  B4D8               	btfsc	status,2,c
 27862  000C7A  D761               	goto	l10815
 27863  000C7C  0A03               	xorlw	3	; case 254
 27864  000C7E  D7D7               	goto	l10849
 27865  000C80                     __end_of_MSDProcessCommandMediaPresent:
 27866                           	opt stack 0
 27867                           tosu	equ	0xFFF
 27868                           tosh	equ	0xFFE
 27869                           tosl	equ	0xFFD
 27870                           pclath	equ	0xFFA
 27871                           tblptru	equ	0xFF8
 27872                           tblptrh	equ	0xFF7
 27873                           tblptrl	equ	0xFF6
 27874                           tablat	equ	0xFF5
 27875                           prodh	equ	0xFF4
 27876                           prodl	equ	0xFF3
 27877                           intcon	equ	0xFF2
 27878                           intcon2	equ	0xFF1
 27879                           intcon3	equ	0xFF0
 27880                           indf0	equ	0xFEF
 27881                           postinc0	equ	0xFEE
 27882                           fsr0h	equ	0xFEA
 27883                           fsr0l	equ	0xFE9
 27884                           wreg	equ	0xFE8
 27885                           indf1	equ	0xFE7
 27886                           postdec1	equ	0xFE5
 27887                           plusw1	equ	0xFE3
 27888                           fsr1h	equ	0xFE2
 27889                           fsr1l	equ	0xFE1
 27890                           indf2	equ	0xFDF
 27891                           postinc2	equ	0xFDE
 27892                           postdec2	equ	0xFDD
 27893                           plusw2	equ	0xFDB
 27894                           fsr2h	equ	0xFDA
 27895                           fsr2l	equ	0xFD9
 27896                           status	equ	0xFD8
 27897                           
 27898 ;; *************** function _MSDWriteHandler *****************
 27899 ;; Defined at:
 27900 ;;		line 1188 in file "usb_device_msd.c"
 27901 ;; Parameters:    Size  Location     Type
 27902 ;;		None
 27903 ;; Auto vars:     Size  Location     Type
 27904 ;;		None
 27905 ;; Return value:  Size  Location     Type
 27906 ;;                  1    wreg      unsigned char 
 27907 ;; Registers used:
 27908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27909 ;; Tracked objects:
 27910 ;;		On entry : 0/0
 27911 ;;		On exit  : 0/0
 27912 ;;		Unchanged: 0/0
 27913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27916 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27918 ;;Total ram usage:        5 bytes
 27919 ;; Hardware stack levels used:    1
 27920 ;; Hardware stack levels required when called:    6
 27921 ;; This function calls:
 27922 ;;		_ExternalFlash_SectorWrite
 27923 ;;		_ExternalFlash_WriteProtectStateGet
 27924 ;;		_MSDCheckForErrorCases
 27925 ;;		_USBStallEndpoint
 27926 ;;		_USBTransferOnePacket
 27927 ;; This function is called by:
 27928 ;;		_MSDProcessCommandMediaPresent
 27929 ;; This function uses a non-reentrant model
 27930 ;;
 27931                           
 27932                           	psect	text125
 27933  001CC4                     __ptext125:
 27934                           	opt stack 0
 27935  001CC4                     _MSDWriteHandler:
 27936                           	opt stack 20
 27937                           
 27938                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 27939                           
 27940                           ;incstack = 0
 27941  001CC4  D164               	goto	l10391
 27942  001CC6                     l685:
 27943                           
 27944                           ; BSR set to: 1
 27945                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 27946  001CC6  C111  F15E         	movff	_gblCBW+17,_LBA+3
 27947                           
 27948                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 27949  001CCA  C112  F15D         	movff	_gblCBW+18,_LBA+2
 27950                           
 27951                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 27952  001CCE  C113  F15C         	movff	_gblCBW+19,_LBA+1
 27953                           
 27954                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 27955  001CD2  C114  F15B         	movff	_gblCBW+20,_LBA
 27956                           
 27957                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 27958  001CD6  C116  F177         	movff	_gblCBW+22,_TransferLength+1
 27959                           
 27960                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 27961  001CDA  C117  F176         	movff	_gblCBW+23,_TransferLength
 27962                           
 27963                           ; BSR set to: 1
 27964                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 27965  001CDE  0101               	movlb	1	; () banked
 27966  001CE0  5176               	movf	_TransferLength& (0+255),w,b
 27967  001CE2  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 27968  001CE4  0101               	movlb	1	; () banked
 27969  001CE6  5177               	movf	(_TransferLength+1)& (0+255),w,b
 27970  001CE8  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 27971  001CEA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 27972  001CEC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 27973  001CEE  0E09               	movlw	9
 27974  001CF0                     u7205:
 27975  001CF0  90D8               	bcf	status,0,c
 27976  001CF2  3630               	rlcf	??_MSDWriteHandler,f,c
 27977  001CF4  3631               	rlcf	??_MSDWriteHandler+1,f,c
 27978  001CF6  3632               	rlcf	??_MSDWriteHandler+2,f,c
 27979  001CF8  3633               	rlcf	??_MSDWriteHandler+3,f,c
 27980  001CFA  2EE8               	decfsz	wreg,f,c
 27981  001CFC  D7F9               	goto	u7205
 27982  001CFE  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 27983  001D02  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 27984  001D06  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 27985  001D0A  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 27986  001D0E  EC5E  F023         	call	_MSDCheckForErrorCases	;wreg free
 27987  001D12  0900               	iorlw	0
 27988  001D14  A4D8               	btfss	status,2,c
 27989  001D16  D14D               	goto	l10393
 27990                           
 27991                           ;usb_device_msd.c: 1208: }
 27992                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 27993                           
 27994                           ;usb_device_msd.c: 1204: {
 27995                           ;usb_device_msd.c: 1207: break;
 27996  001D18  C1C6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 27997  001D1C  C1C7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 27998  001D20  D801               	call	u7228
 27999  001D22  D00A               	goto	u7229
 28000  001D24                     u7228:
 28001  001D24  0005               	push	
 28002  001D26  6EFA               	movwf	pclath,c
 28003  001D28  0101               	movlb	1	; () banked
 28004  001D2A  51C2               	movf	(_LUN+10)& (0+255),w,b
 28005  001D2C  6EFD               	movwf	tosl,c
 28006  001D2E  51C3               	movf	(_LUN+11)& (0+255),w,b
 28007  001D30  6EFE               	movwf	tosh,c
 28008  001D32  6AFF               	clrf	tosu,c
 28009  001D34  50FA               	movf	pclath,w,c
 28010  001D36  0012               	return		;indir
 28011  001D38                     u7229:
 28012  001D38  0900               	iorlw	0
 28013  001D3A  B4D8               	btfsc	status,2,c
 28014  001D3C  D019               	goto	l10327
 28015                           
 28016                           ;usb_device_msd.c: 1213: {
 28017                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 28018  001D3E  0E01               	movlw	1
 28019  001D40  010D               	movlb	13	; () banked
 28020  001D42  6F8C               	movwf	140,b	;volatile
 28021                           
 28022                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 28023  001D44  0101               	movlb	1	; () banked
 28024  001D46  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 28025  001D48  0BF0               	andlw	-16
 28026  001D4A  0907               	iorlw	7
 28027  001D4C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 28028                           
 28029                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 28030  001D4E  0E27               	movlw	39
 28031  001D50  0101               	movlb	1	; () banked
 28032  001D52  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 28033                           
 28034                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 28035  001D54  0E00               	movlw	0
 28036  001D56  0101               	movlb	1	; () banked
 28037  001D58  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 28038                           
 28039                           ; BSR set to: 1
 28040                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 28041  001D5A  0E00               	movlw	0
 28042  001D5C  6E01               	movwf	USBStallEndpoint@dir,c
 28043  001D5E  0E02               	movlw	2
 28044  001D60  EC5A  F022         	call	_USBStallEndpoint
 28045                           
 28046                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 28047  001D64  0E00               	movlw	0
 28048  001D66  0101               	movlb	1	; () banked
 28049  001D68  6F8B               	movwf	_MSDWriteState& (0+255),b
 28050                           
 28051                           ; BSR set to: 1
 28052                           ;usb_device_msd.c: 1228: return MSDWriteState;
 28053  001D6A  0101               	movlb	1	; () banked
 28054  001D6C  518B               	movf	_MSDWriteState& (0+255),w,b
 28055                           
 28056                           ; BSR set to: 1
 28057  001D6E  0012               	return	
 28058  001D70                     l10327:
 28059                           
 28060                           ;usb_device_msd.c: 1229: }
 28061                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 28062  001D70  0E01               	movlw	1
 28063  001D72  0100               	movlb	0	; () banked
 28064  001D74  6FFA               	movwf	_MSD_State& (0+255),b
 28065  001D76                     l10329:
 28066                           
 28067                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 28068  001D76  0101               	movlb	1	; () banked
 28069  001D78  5176               	movf	_TransferLength& (0+255),w,b
 28070  001D7A  0101               	movlb	1	; () banked
 28071  001D7C  1177               	iorwf	(_TransferLength+1)& (0+255),w,b
 28072  001D7E  B4D8               	btfsc	status,2,c
 28073  001D80  D102               	goto	l10387
 28074                           
 28075                           ; BSR set to: 1
 28076                           ;usb_device_msd.c: 1239: }
 28077                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 28078                           
 28079                           ; BSR set to: 1
 28080                           
 28081                           ;usb_device_msd.c: 1238: break;
 28082                           
 28083                           ; BSR set to: 1
 28084                           ;usb_device_msd.c: 1236: {
 28085                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 28086  001D82  0E03               	movlw	3
 28087  001D84  0101               	movlb	1	; () banked
 28088  001D86  6F8B               	movwf	_MSDWriteState& (0+255),b
 28089                           
 28090                           ; BSR set to: 1
 28091                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 28092  001D88  0E00               	movlw	0
 28093  001D8A  0101               	movlb	1	; () banked
 28094  001D8C  6F7C               	movwf	_ptrNextData& (0+255),b
 28095  001D8E  0E06               	movlw	6
 28096  001D90  0101               	movlb	1	; () banked
 28097  001D92  6F7D               	movwf	(_ptrNextData+1)& (0+255),b
 28098                           
 28099                           ; BSR set to: 1
 28100                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 28101  001D94  0E00               	movlw	0
 28102  001D96  010D               	movlb	13	; () banked
 28103  001D98  6F88               	movwf	136,b	;volatile
 28104  001D9A  0E02               	movlw	2
 28105  001D9C  6F89               	movwf	137,b	;volatile
 28106  001D9E  0E00               	movlw	0
 28107  001DA0  6F8A               	movwf	138,b	;volatile
 28108  001DA2  0E00               	movlw	0
 28109  001DA4  6F8B               	movwf	139,b	;volatile
 28110  001DA6                     l692:
 28111                           
 28112                           ;usb_device_msd.c: 1248: {
 28113                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 28114  001DA6  010D               	movlb	13	; () banked
 28115  001DA8  5188               	movf	136,w,b	;volatile
 28116  001DAA  010D               	movlb	13	; () banked
 28117  001DAC  1189               	iorwf	137,w,b	;volatile
 28118  001DAE  010D               	movlb	13	; () banked
 28119  001DB0  118A               	iorwf	138,w,b	;volatile
 28120  001DB2  010D               	movlb	13	; () banked
 28121  001DB4  118B               	iorwf	139,w,b	;volatile
 28122  001DB6  B4D8               	btfsc	status,2,c
 28123  001DB8  D020               	goto	l10349
 28124                           
 28125                           ; BSR set to: 13
 28126                           ;usb_device_msd.c: 1251: {
 28127                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 28128  001DBA  0100               	movlb	0	; () banked
 28129  001DBC  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28130  001DBE  0100               	movlb	0	; () banked
 28131  001DC0  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 28132  001DC2  B4D8               	btfsc	status,2,c
 28133  001DC4  D007               	goto	l10345
 28134                           
 28135                           ; BSR set to: 0
 28136  001DC6  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 28137  001DCA  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 28138  001DCE  0100               	movlb	0	; () banked
 28139  001DD0  BEDF               	btfsc	indf2,7,c
 28140  001DD2  D0EF               	goto	l10393
 28141  001DD4                     l10345:
 28142                           
 28143                           ; BSR set to: 0
 28144                           ;usb_device_msd.c: 1255: }
 28145                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 28146  001DD4  0E00               	movlw	0
 28147  001DD6  6E01               	movwf	USBTransferOnePacket@dir,c
 28148  001DD8  C17C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 28149  001DDC  C17D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 28150  001DE0  0E40               	movlw	64
 28151  001DE2  6E04               	movwf	USBTransferOnePacket@len,c
 28152  001DE4  0E02               	movlw	2
 28153  001DE6  ECDD  F022         	call	_USBTransferOnePacket
 28154  001DEA  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 28155  001DEE  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 28156                           
 28157                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 28158  001DF2  0E04               	movlw	4
 28159  001DF4  0101               	movlb	1	; () banked
 28160  001DF6  6F8B               	movwf	_MSDWriteState& (0+255),b
 28161                           
 28162                           ;usb_device_msd.c: 1260: }
 28163  001DF8  D023               	goto	l10353
 28164  001DFA                     l10349:
 28165                           
 28166                           ;usb_device_msd.c: 1261: else
 28167                           ;usb_device_msd.c: 1262: {
 28168                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 28169  001DFA  C1C6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 28170  001DFE  C1C7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 28171  001E02  D801               	call	u7288
 28172  001E04  D00A               	goto	u7289
 28173  001E06                     u7288:
 28174  001E06  0005               	push	
 28175  001E08  6EFA               	movwf	pclath,c
 28176  001E0A  0101               	movlb	1	; () banked
 28177  001E0C  51C2               	movf	(_LUN+10)& (0+255),w,b
 28178  001E0E  6EFD               	movwf	tosl,c
 28179  001E10  51C3               	movf	(_LUN+11)& (0+255),w,b
 28180  001E12  6EFE               	movwf	tosh,c
 28181  001E14  6AFF               	clrf	tosu,c
 28182  001E16  50FA               	movf	pclath,w,c
 28183  001E18  0012               	return		;indir
 28184  001E1A                     u7289:
 28185  001E1A  0900               	iorlw	0
 28186  001E1C  B4D8               	btfsc	status,2,c
 28187  001E1E  D00E               	goto	l696
 28188                           
 28189                           ;usb_device_msd.c: 1267: {
 28190                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 28191  001E20  0E01               	movlw	1
 28192  001E22  010D               	movlb	13	; () banked
 28193  001E24  6F8C               	movwf	140,b	;volatile
 28194                           
 28195                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 28196  001E26  0101               	movlb	1	; () banked
 28197  001E28  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 28198  001E2A  0BF0               	andlw	-16
 28199  001E2C  0902               	iorlw	2
 28200  001E2E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 28201                           
 28202                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 28203  001E30  0E27               	movlw	39
 28204  001E32  0101               	movlb	1	; () banked
 28205  001E34  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 28206                           
 28207                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 28208  001E36  0E00               	movlw	0
 28209  001E38  0101               	movlb	1	; () banked
 28210  001E3A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 28211  001E3C                     l696:
 28212                           
 28213                           ;usb_device_msd.c: 1277: }
 28214                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 28215  001E3C  0E02               	movlw	2
 28216  001E3E  D0A4               	goto	L23
 28217  001E40                     l10353:
 28218                           
 28219                           ; BSR set to: 1
 28220                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 28221  001E40  0100               	movlb	0	; () banked
 28222  001E42  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28223  001E44  0100               	movlb	0	; () banked
 28224  001E46  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 28225  001E48  B4D8               	btfsc	status,2,c
 28226  001E4A  D007               	goto	l10359
 28227                           
 28228                           ; BSR set to: 0
 28229  001E4C  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 28230  001E50  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 28231  001E54  0100               	movlb	0	; () banked
 28232  001E56  BEDF               	btfsc	indf2,7,c
 28233  001E58  D0AC               	goto	l10393
 28234  001E5A                     l10359:
 28235                           
 28236                           ; BSR set to: 0
 28237                           ;usb_device_msd.c: 1288: }
 28238                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 28239  001E5A  0100               	movlb	0	; () banked
 28240  001E5C  EE20 F001          	lfsr	2,1
 28241  001E60  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28242  001E62  26D9               	addwf	fsr2l,f,c
 28243  001E64  51F7               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 28244  001E66  22DA               	addwfc	fsr2h,f,c
 28245  001E68  50DF               	movf	indf2,w,c
 28246  001E6A  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 28247  001E6C  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 28248  001E70  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 28249  001E72  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 28250  001E74  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 28251  001E76  5031               	movf	??_MSDWriteHandler+1,w,c
 28252  001E78  0101               	movlb	1	; () banked
 28253  001E7A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 28254  001E7C  5032               	movf	??_MSDWriteHandler+2,w,c
 28255  001E7E  0101               	movlb	1	; () banked
 28256  001E80  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 28257  001E82  5033               	movf	??_MSDWriteHandler+3,w,c
 28258  001E84  0101               	movlb	1	; () banked
 28259  001E86  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 28260  001E88  5034               	movf	??_MSDWriteHandler+4,w,c
 28261  001E8A  0101               	movlb	1	; () banked
 28262  001E8C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 28263                           
 28264                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 28265  001E8E  0100               	movlb	0	; () banked
 28266  001E90  EE20 F001          	lfsr	2,1
 28267  001E94  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28268  001E96  26D9               	addwf	fsr2l,f,c
 28269  001E98  51F7               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 28270  001E9A  22DA               	addwfc	fsr2h,f,c
 28271  001E9C  50DF               	movf	indf2,w,c
 28272  001E9E  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 28273  001EA0  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 28274  001EA4  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 28275  001EA6  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 28276  001EA8  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 28277  001EAA  5031               	movf	??_MSDWriteHandler+1,w,c
 28278  001EAC  010D               	movlb	13	; () banked
 28279  001EAE  5F88               	subwf	136,f,b	;volatile
 28280  001EB0  5032               	movf	??_MSDWriteHandler+2,w,c
 28281  001EB2  010D               	movlb	13	; () banked
 28282  001EB4  5B89               	subwfb	137,f,b	;volatile
 28283  001EB6  5033               	movf	??_MSDWriteHandler+3,w,c
 28284  001EB8  010D               	movlb	13	; () banked
 28285  001EBA  5B8A               	subwfb	138,f,b	;volatile
 28286  001EBC  5034               	movf	??_MSDWriteHandler+4,w,c
 28287  001EBE  010D               	movlb	13	; () banked
 28288  001EC0  5B8B               	subwfb	139,f,b	;volatile
 28289                           
 28290                           ; BSR set to: 13
 28291                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 28292  001EC2  0E40               	movlw	64
 28293  001EC4  0101               	movlb	1	; () banked
 28294  001EC6  277C               	addwf	_ptrNextData& (0+255),f,b
 28295  001EC8  0E00               	movlw	0
 28296  001ECA  237D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 28297                           
 28298                           ; BSR set to: 1
 28299                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 28300  001ECC  0E03               	movlw	3
 28301  001ECE  D05C               	goto	L23
 28302  001ED0                     l10365:
 28303                           
 28304                           ; BSR set to: 1
 28305                           ;usb_device_msd.c: 1298: {
 28306                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 28307  001ED0  010D               	movlb	13	; () banked
 28308  001ED2  518C               	movf	140,w,b	;volatile
 28309  001ED4  A4D8               	btfss	status,2,c
 28310  001ED6  D042               	goto	l10377
 28311                           
 28312                           ; BSR set to: 13
 28313                           ;usb_device_msd.c: 1306: {
 28314                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 28315  001ED8  C1C6  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 28316  001EDC  C1C7  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 28317  001EE0  C15B  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 28318  001EE4  C15C  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 28319  001EE8  C15D  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 28320  001EEC  C15E  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 28321  001EF0  0E00               	movlw	0
 28322  001EF2  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 28323  001EF4  0E06               	movlw	6
 28324  001EF6  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 28325  001EF8  0101               	movlb	1	; () banked
 28326  001EFA  515B               	movf	_LBA& (0+255),w,b
 28327  001EFC  0101               	movlb	1	; () banked
 28328  001EFE  115C               	iorwf	(_LBA+1)& (0+255),w,b
 28329  001F00  0101               	movlb	1	; () banked
 28330  001F02  115D               	iorwf	(_LBA+2)& (0+255),w,b
 28331  001F04  0101               	movlb	1	; () banked
 28332  001F06  115E               	iorwf	(_LBA+3)& (0+255),w,b
 28333  001F08  A4D8               	btfss	status,2,c
 28334  001F0A  D002               	goto	u7330
 28335  001F0C  0E01               	movlw	1
 28336  001F0E  D001               	goto	u7340
 28337  001F10                     u7330:
 28338  001F10  0E00               	movlw	0
 28339  001F12                     u7340:
 28340  001F12  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 28341  001F14  D801               	call	u7358
 28342  001F16  D00A               	goto	u7359
 28343  001F18                     u7358:
 28344  001F18  0005               	push	
 28345  001F1A  6EFA               	movwf	pclath,c
 28346  001F1C  0101               	movlb	1	; () banked
 28347  001F1E  51C4               	movf	(_LUN+12)& (0+255),w,b
 28348  001F20  6EFD               	movwf	tosl,c
 28349  001F22  51C5               	movf	(_LUN+13)& (0+255),w,b
 28350  001F24  6EFE               	movwf	tosh,c
 28351  001F26  6AFF               	clrf	tosu,c
 28352  001F28  50FA               	movf	pclath,w,c
 28353  001F2A  0012               	return		;indir
 28354  001F2C                     u7359:
 28355  001F2C  06E8               	decf	wreg,f,c
 28356  001F2E  B4D8               	btfsc	status,2,c
 28357  001F30  D015               	goto	l10377
 28358                           
 28359                           ;usb_device_msd.c: 1308: {
 28360                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 28361  001F32  0E64               	movlw	100
 28362  001F34  0101               	movlb	1	; () banked
 28363  001F36  618A               	cpfslt	_MSDRetryAttempt& (0+255),b
 28364  001F38  D003               	goto	l10375
 28365                           
 28366                           ; BSR set to: 1
 28367                           ;usb_device_msd.c: 1312: {
 28368                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 28369  001F3A  0101               	movlb	1	; () banked
 28370  001F3C  2B8A               	incf	_MSDRetryAttempt& (0+255),f,b
 28371                           
 28372                           ;usb_device_msd.c: 1314: break;
 28373  001F3E  D039               	goto	l10393
 28374  001F40                     l10375:
 28375                           
 28376                           ; BSR set to: 1
 28377                           ;usb_device_msd.c: 1316: else
 28378                           ;usb_device_msd.c: 1317: {
 28379                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 28380  001F40  0E01               	movlw	1
 28381  001F42  010D               	movlb	13	; () banked
 28382  001F44  6F8C               	movwf	140,b	;volatile
 28383                           
 28384                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 28385  001F46  0101               	movlb	1	; () banked
 28386  001F48  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 28387  001F4A  0BF0               	andlw	-16
 28388  001F4C  0903               	iorlw	3
 28389  001F4E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 28390                           
 28391                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 28392  001F50  0E00               	movlw	0
 28393  001F52  0101               	movlb	1	; () banked
 28394  001F54  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 28395                           
 28396                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 28397  001F56  0E00               	movlw	0
 28398  001F58  0101               	movlb	1	; () banked
 28399  001F5A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 28400  001F5C                     l10377:
 28401                           
 28402                           ;usb_device_msd.c: 1326: }
 28403                           ;usb_device_msd.c: 1327: }
 28404                           ;usb_device_msd.c: 1328: }
 28405                           ;usb_device_msd.c: 1332: LBA.Val++;
 28406  001F5C  0E01               	movlw	1
 28407  001F5E  0101               	movlb	1	; () banked
 28408  001F60  275B               	addwf	_LBA& (0+255),f,b
 28409  001F62  0E00               	movlw	0
 28410  001F64  235C               	addwfc	(_LBA+1)& (0+255),f,b
 28411  001F66  235D               	addwfc	(_LBA+2)& (0+255),f,b
 28412  001F68  235E               	addwfc	(_LBA+3)& (0+255),f,b
 28413                           
 28414                           ; BSR set to: 1
 28415                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 28416  001F6A  0101               	movlb	1	; () banked
 28417  001F6C  0776               	decf	_TransferLength& (0+255),f,b
 28418  001F6E  A0D8               	btfss	status,0,c
 28419  001F70  0777               	decf	(_TransferLength+1)& (0+255),f,b
 28420                           
 28421                           ; BSR set to: 1
 28422                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 28423  001F72  0E01               	movlw	1
 28424  001F74  D009               	goto	L23
 28425  001F76                     l10383:
 28426                           
 28427                           ; BSR set to: 1
 28428                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 28429  001F76  0E02               	movlw	2
 28430  001F78  010D               	movlb	13	; () banked
 28431  001F7A  6F8C               	movwf	140,b	;volatile
 28432                           
 28433                           ; BSR set to: 13
 28434                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 28435  001F7C  0E00               	movlw	0
 28436  001F7E  6E01               	movwf	USBStallEndpoint@dir,c
 28437  001F80  0E02               	movlw	2
 28438  001F82  EC5A  F022         	call	_USBStallEndpoint
 28439  001F86                     l10387:
 28440                           
 28441                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 28442  001F86  0E00               	movlw	0
 28443  001F88                     L23:
 28444  001F88  0101               	movlb	1	; () banked
 28445  001F8A  6F8B               	movwf	_MSDWriteState& (0+255),b
 28446                           
 28447                           ; BSR set to: 1
 28448                           ;usb_device_msd.c: 1345: }
 28449                           
 28450                           ;usb_device_msd.c: 1344: break;
 28451  001F8C  D012               	goto	l10393
 28452  001F8E                     l10391:
 28453  001F8E  0101               	movlb	1	; () banked
 28454  001F90  518B               	movf	_MSDWriteState& (0+255),w,b
 28455                           
 28456                           ; Switch size 1, requested type "space"
 28457                           ; Number of cases is 5, Range of values is 0 to 4
 28458                           ; switch strategies available:
 28459                           ; Name         Instructions Cycles
 28460                           ; simple_byte           16     9 (average)
 28461                           ;	Chosen strategy is simple_byte
 28462  001F92  0A00               	xorlw	0	; case 0
 28463  001F94  B4D8               	btfsc	status,2,c
 28464  001F96  D697               	goto	l685
 28465  001F98  0A01               	xorlw	1	; case 1
 28466  001F9A  B4D8               	btfsc	status,2,c
 28467  001F9C  D6EC               	goto	l10329
 28468  001F9E  0A03               	xorlw	3	; case 2
 28469  001FA0  B4D8               	btfsc	status,2,c
 28470  001FA2  D796               	goto	l10365
 28471  001FA4  0A01               	xorlw	1	; case 3
 28472  001FA6  B4D8               	btfsc	status,2,c
 28473  001FA8  D6FE               	goto	l692
 28474  001FAA  0A07               	xorlw	7	; case 4
 28475  001FAC  B4D8               	btfsc	status,2,c
 28476  001FAE  D748               	goto	l10353
 28477  001FB0  D7E2               	goto	l10383
 28478  001FB2                     l10393:
 28479                           
 28480                           ;usb_device_msd.c: 1347: return MSDWriteState;
 28481  001FB2  0101               	movlb	1	; () banked
 28482  001FB4  518B               	movf	_MSDWriteState& (0+255),w,b
 28483  001FB6  0012               	return	
 28484  001FB8                     __end_of_MSDWriteHandler:
 28485                           	opt stack 0
 28486                           tosu	equ	0xFFF
 28487                           tosh	equ	0xFFE
 28488                           tosl	equ	0xFFD
 28489                           pclath	equ	0xFFA
 28490                           tblptru	equ	0xFF8
 28491                           tblptrh	equ	0xFF7
 28492                           tblptrl	equ	0xFF6
 28493                           tablat	equ	0xFF5
 28494                           prodh	equ	0xFF4
 28495                           prodl	equ	0xFF3
 28496                           intcon	equ	0xFF2
 28497                           intcon2	equ	0xFF1
 28498                           intcon3	equ	0xFF0
 28499                           indf0	equ	0xFEF
 28500                           postinc0	equ	0xFEE
 28501                           fsr0h	equ	0xFEA
 28502                           fsr0l	equ	0xFE9
 28503                           wreg	equ	0xFE8
 28504                           indf1	equ	0xFE7
 28505                           postdec1	equ	0xFE5
 28506                           plusw1	equ	0xFE3
 28507                           fsr1h	equ	0xFE2
 28508                           fsr1l	equ	0xFE1
 28509                           indf2	equ	0xFDF
 28510                           postinc2	equ	0xFDE
 28511                           postdec2	equ	0xFDD
 28512                           plusw2	equ	0xFDB
 28513                           fsr2h	equ	0xFDA
 28514                           fsr2l	equ	0xFD9
 28515                           status	equ	0xFD8
 28516                           
 28517 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 28518 ;; Defined at:
 28519 ;;		line 34 in file "external_flash.c"
 28520 ;; Parameters:    Size  Location     Type
 28521 ;;  config          2    0[COMRAM] PTR void 
 28522 ;;		 -> NULL(0), 
 28523 ;; Auto vars:     Size  Location     Type
 28524 ;;		None
 28525 ;; Return value:  Size  Location     Type
 28526 ;;                  1    wreg      unsigned char 
 28527 ;; Registers used:
 28528 ;;		wreg
 28529 ;; Tracked objects:
 28530 ;;		On entry : 0/0
 28531 ;;		On exit  : 0/0
 28532 ;;		Unchanged: 0/0
 28533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28538 ;;Total ram usage:        2 bytes
 28539 ;; Hardware stack levels used:    1
 28540 ;; This function calls:
 28541 ;;		Nothing
 28542 ;; This function is called by:
 28543 ;;		_MSDWriteHandler
 28544 ;;		_MSDProcessCommandMediaPresent
 28545 ;; This function uses a non-reentrant model
 28546 ;;
 28547                           
 28548                           	psect	text126
 28549  0078F4                     __ptext126:
 28550                           	opt stack 0
 28551  0078F4                     _ExternalFlash_WriteProtectStateGet:
 28552                           	opt stack 25
 28553                           
 28554                           ;external_flash.c: 37: return 0;
 28555                           
 28556                           ; BSR set to: 1
 28557                           ;incstack = 0
 28558  0078F4  0E00               	movlw	0
 28559  0078F6  0012               	return	
 28560  0078F8                     __end_of_ExternalFlash_WriteProtectStateGet:
 28561                           	opt stack 0
 28562                           tosu	equ	0xFFF
 28563                           tosh	equ	0xFFE
 28564                           tosl	equ	0xFFD
 28565                           pclath	equ	0xFFA
 28566                           tblptru	equ	0xFF8
 28567                           tblptrh	equ	0xFF7
 28568                           tblptrl	equ	0xFF6
 28569                           tablat	equ	0xFF5
 28570                           prodh	equ	0xFF4
 28571                           prodl	equ	0xFF3
 28572                           intcon	equ	0xFF2
 28573                           intcon2	equ	0xFF1
 28574                           intcon3	equ	0xFF0
 28575                           indf0	equ	0xFEF
 28576                           postinc0	equ	0xFEE
 28577                           fsr0h	equ	0xFEA
 28578                           fsr0l	equ	0xFE9
 28579                           wreg	equ	0xFE8
 28580                           indf1	equ	0xFE7
 28581                           postdec1	equ	0xFE5
 28582                           plusw1	equ	0xFE3
 28583                           fsr1h	equ	0xFE2
 28584                           fsr1l	equ	0xFE1
 28585                           indf2	equ	0xFDF
 28586                           postinc2	equ	0xFDE
 28587                           postdec2	equ	0xFDD
 28588                           plusw2	equ	0xFDB
 28589                           fsr2h	equ	0xFDA
 28590                           fsr2l	equ	0xFD9
 28591                           status	equ	0xFD8
 28592                           
 28593 ;; *************** function _ExternalFlash_SectorWrite *****************
 28594 ;; Defined at:
 28595 ;;		line 104 in file "external_flash.c"
 28596 ;; Parameters:    Size  Location     Type
 28597 ;;  config          2   36[COMRAM] PTR void 
 28598 ;;		 -> NULL(0), 
 28599 ;;  sector_addr     4   38[COMRAM] unsigned long 
 28600 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 28601 ;;		 -> msd_buffer(512), 
 28602 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 28603 ;; Auto vars:     Size  Location     Type
 28604 ;;  page            2   45[COMRAM] unsigned int 
 28605 ;; Return value:  Size  Location     Type
 28606 ;;                  1    wreg      unsigned char 
 28607 ;; Registers used:
 28608 ;;		wreg, status,2, status,0, cstack
 28609 ;; Tracked objects:
 28610 ;;		On entry : 0/0
 28611 ;;		On exit  : 0/0
 28612 ;;		Unchanged: 0/0
 28613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28614 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28617 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28618 ;;Total ram usage:       11 bytes
 28619 ;; Hardware stack levels used:    1
 28620 ;; Hardware stack levels required when called:    5
 28621 ;; This function calls:
 28622 ;;		_flash_page_write
 28623 ;; This function is called by:
 28624 ;;		_MSDWriteHandler
 28625 ;; This function uses a non-reentrant model
 28626 ;;
 28627                           
 28628                           	psect	text127
 28629  0072F2                     __ptext127:
 28630                           	opt stack 0
 28631  0072F2                     _ExternalFlash_SectorWrite:
 28632                           	opt stack 20
 28633                           
 28634                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 28635                           
 28636                           ;incstack = 0
 28637  0072F2  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 28638  0072F6  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 28639                           
 28640                           ;external_flash.c: 110: if(sector_addr >= 4096)
 28641  0072FA  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 28642  0072FC  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 28643  0072FE  E104               	bnz	u6910
 28644  007300  0E10               	movlw	16
 28645  007302  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 28646  007304  A0D8               	btfss	status,0,c
 28647  007306  D002               	goto	l10095
 28648  007308                     u6910:
 28649                           
 28650                           ;external_flash.c: 111: {
 28651                           ;external_flash.c: 112: return 0;
 28652  007308  0E00               	movlw	0
 28653  00730A  0012               	return	
 28654  00730C                     l10095:
 28655                           
 28656                           ;external_flash.c: 113: }
 28657                           ;external_flash.c: 141: flash_page_write(page, buffer);
 28658  00730C  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 28659  007310  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 28660  007314  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 28661  007318  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 28662  00731C  ECA7  F036         	call	_flash_page_write	;wreg free
 28663                           
 28664                           ;external_flash.c: 143: return 1;
 28665  007320  0E01               	movlw	1
 28666  007322  0012               	return	
 28667  007324                     __end_of_ExternalFlash_SectorWrite:
 28668                           	opt stack 0
 28669                           tosu	equ	0xFFF
 28670                           tosh	equ	0xFFE
 28671                           tosl	equ	0xFFD
 28672                           pclath	equ	0xFFA
 28673                           tblptru	equ	0xFF8
 28674                           tblptrh	equ	0xFF7
 28675                           tblptrl	equ	0xFF6
 28676                           tablat	equ	0xFF5
 28677                           prodh	equ	0xFF4
 28678                           prodl	equ	0xFF3
 28679                           intcon	equ	0xFF2
 28680                           intcon2	equ	0xFF1
 28681                           intcon3	equ	0xFF0
 28682                           indf0	equ	0xFEF
 28683                           postinc0	equ	0xFEE
 28684                           fsr0h	equ	0xFEA
 28685                           fsr0l	equ	0xFE9
 28686                           wreg	equ	0xFE8
 28687                           indf1	equ	0xFE7
 28688                           postdec1	equ	0xFE5
 28689                           plusw1	equ	0xFE3
 28690                           fsr1h	equ	0xFE2
 28691                           fsr1l	equ	0xFE1
 28692                           indf2	equ	0xFDF
 28693                           postinc2	equ	0xFDE
 28694                           postdec2	equ	0xFDD
 28695                           plusw2	equ	0xFDB
 28696                           fsr2h	equ	0xFDA
 28697                           fsr2l	equ	0xFD9
 28698                           status	equ	0xFD8
 28699                           
 28700 ;; *************** function _flash_page_write *****************
 28701 ;; Defined at:
 28702 ;;		line 547 in file "flash.c"
 28703 ;; Parameters:    Size  Location     Type
 28704 ;;  page            2   31[COMRAM] unsigned int 
 28705 ;;  data            2   33[COMRAM] PTR unsigned char 
 28706 ;;		 -> buffer(512), msd_buffer(512), 
 28707 ;; Auto vars:     Size  Location     Type
 28708 ;;  match           1   35[COMRAM] enum E8301
 28709 ;; Return value:  Size  Location     Type
 28710 ;;                  1    wreg      void 
 28711 ;; Registers used:
 28712 ;;		wreg, status,2, status,0, cstack
 28713 ;; Tracked objects:
 28714 ;;		On entry : 0/0
 28715 ;;		On exit  : 0/0
 28716 ;;		Unchanged: 0/0
 28717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28721 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28722 ;;Total ram usage:        5 bytes
 28723 ;; Hardware stack levels used:    1
 28724 ;; Hardware stack levels required when called:    4
 28725 ;; This function calls:
 28726 ;;		__flash_compare_page_to_buffer
 28727 ;;		__flash_write_page_from_buffer
 28728 ;;		__flash_write_to_buffer
 28729 ;; This function is called by:
 28730 ;;		_ExternalFlash_SectorWrite
 28731 ;;		_fat_format
 28732 ;; This function uses a non-reentrant model
 28733 ;;
 28734                           
 28735                           	psect	text128
 28736  006D4E                     __ptext128:
 28737                           	opt stack 0
 28738  006D4E                     _flash_page_write:
 28739                           	opt stack 23
 28740                           
 28741                           ;flash.c: 549: flashMatchResult_t match;
 28742                           ;flash.c: 552: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 28743                           
 28744                           ;incstack = 0
 28745  006D4E  0E00               	movlw	0
 28746  006D50  6E15               	movwf	__flash_write_to_buffer@start+1,c
 28747  006D52  0E00               	movlw	0
 28748  006D54  6E14               	movwf	__flash_write_to_buffer@start,c
 28749  006D56  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 28750  006D5A  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 28751  006D5E  0E02               	movlw	2
 28752  006D60  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 28753  006D62  0E00               	movlw	0
 28754  006D64  6E18               	movwf	__flash_write_to_buffer@data_length,c
 28755  006D66  0E00               	movlw	0
 28756  006D68  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 28757  006D6A  ECE6  F035         	call	__flash_write_to_buffer	;wreg free
 28758                           
 28759                           ;flash.c: 555: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 28760  006D6E  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 28761  006D72  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 28762  006D76  0E00               	movlw	0
 28763  006D78  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 28764  006D7A  EC5B  F031         	call	__flash_compare_page_to_buffer	;wreg free
 28765  006D7E  6E24               	movwf	flash_page_write@match,c
 28766                           
 28767                           ;flash.c: 558: if(match==DATA_DOES_NOT_MATCH)
 28768  006D80  0424               	decf	flash_page_write@match,w,c
 28769  006D82  A4D8               	btfss	status,2,c
 28770  006D84  0012               	return	
 28771                           
 28772                           ;flash.c: 559: {
 28773                           ;flash.c: 560: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 28774  006D86  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 28775  006D8A  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 28776  006D8E  0E00               	movlw	0
 28777  006D90  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 28778  006D92  EC3A  F034         	call	__flash_write_page_from_buffer	;wreg free
 28779  006D96  0012               	return	
 28780  006D98                     __end_of_flash_page_write:
 28781                           	opt stack 0
 28782                           tosu	equ	0xFFF
 28783                           tosh	equ	0xFFE
 28784                           tosl	equ	0xFFD
 28785                           pclath	equ	0xFFA
 28786                           tblptru	equ	0xFF8
 28787                           tblptrh	equ	0xFF7
 28788                           tblptrl	equ	0xFF6
 28789                           tablat	equ	0xFF5
 28790                           prodh	equ	0xFF4
 28791                           prodl	equ	0xFF3
 28792                           intcon	equ	0xFF2
 28793                           intcon2	equ	0xFF1
 28794                           intcon3	equ	0xFF0
 28795                           indf0	equ	0xFEF
 28796                           postinc0	equ	0xFEE
 28797                           fsr0h	equ	0xFEA
 28798                           fsr0l	equ	0xFE9
 28799                           wreg	equ	0xFE8
 28800                           indf1	equ	0xFE7
 28801                           postdec1	equ	0xFE5
 28802                           plusw1	equ	0xFE3
 28803                           fsr1h	equ	0xFE2
 28804                           fsr1l	equ	0xFE1
 28805                           indf2	equ	0xFDF
 28806                           postinc2	equ	0xFDE
 28807                           postdec2	equ	0xFDD
 28808                           plusw2	equ	0xFDB
 28809                           fsr2h	equ	0xFDA
 28810                           fsr2l	equ	0xFD9
 28811                           status	equ	0xFD8
 28812                           
 28813 ;; *************** function __flash_write_to_buffer *****************
 28814 ;; Defined at:
 28815 ;;		line 397 in file "flash.c"
 28816 ;; Parameters:    Size  Location     Type
 28817 ;;  start           2   19[COMRAM] unsigned int 
 28818 ;;  data            2   21[COMRAM] PTR unsigned char 
 28819 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 28820 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 28821 ;;  data_length     2   23[COMRAM] unsigned int 
 28822 ;;  buffer          1   25[COMRAM] enum E8297
 28823 ;; Auto vars:     Size  Location     Type
 28824 ;;  command         4   26[COMRAM] unsigned char [4]
 28825 ;; Return value:  Size  Location     Type
 28826 ;;                  1    wreg      void 
 28827 ;; Registers used:
 28828 ;;		wreg, status,2, status,0, cstack
 28829 ;; Tracked objects:
 28830 ;;		On entry : 0/0
 28831 ;;		On exit  : 0/0
 28832 ;;		Unchanged: 0/0
 28833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28834 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28837 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28838 ;;Total ram usage:       11 bytes
 28839 ;; Hardware stack levels used:    1
 28840 ;; Hardware stack levels required when called:    3
 28841 ;; This function calls:
 28842 ;;		__flash_spi_tx_tx
 28843 ;;		_flash_is_busy
 28844 ;; This function is called by:
 28845 ;;		_flash_page_write
 28846 ;;		_flash_partial_write
 28847 ;; This function uses a non-reentrant model
 28848 ;;
 28849                           
 28850                           	psect	text129
 28851  006BCC                     __ptext129:
 28852                           	opt stack 0
 28853  006BCC                     __flash_write_to_buffer:
 28854                           	opt stack 23
 28855  006BCC                     l9675:
 28856  006BCC  ECEF  F03A         	call	_flash_is_busy	;wreg free
 28857  006BD0  0900               	iorlw	0
 28858  006BD2  A4D8               	btfss	status,2,c
 28859  006BD4  D7FB               	goto	l9675
 28860                           
 28861                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 28862  006BD6  501A               	movf	__flash_write_to_buffer@buffer,w,c
 28863  006BD8  A4D8               	btfss	status,2,c
 28864  006BDA  D002               	goto	l9681
 28865                           
 28866                           ;flash.c: 406: command[0] = 0x84;
 28867  006BDC  0E84               	movlw	132
 28868  006BDE  6E1B               	movwf	__flash_write_to_buffer@command,c
 28869  006BE0                     l9681:
 28870                           
 28871                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 28872  006BE0  041A               	decf	__flash_write_to_buffer@buffer,w,c
 28873  006BE2  A4D8               	btfss	status,2,c
 28874  006BE4  D002               	goto	l2122
 28875                           
 28876                           ;flash.c: 408: command[0] = 0x87;
 28877  006BE6  0E87               	movlw	135
 28878  006BE8  6E1B               	movwf	__flash_write_to_buffer@command,c
 28879  006BEA                     l2122:
 28880                           
 28881                           ;flash.c: 410: command[1] = 0x00;
 28882  006BEA  0E00               	movlw	0
 28883  006BEC  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 28884                           
 28885                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 28886  006BEE  5015               	movf	__flash_write_to_buffer@start+1,w,c
 28887  006BF0  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 28888                           
 28889                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 28890  006BF2  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 28891                           
 28892                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 28893  006BF6  0E1B               	movlw	low __flash_write_to_buffer@command
 28894  006BF8  6E01               	movwf	__flash_spi_tx_tx@command,c
 28895  006BFA  0E00               	movlw	high __flash_write_to_buffer@command
 28896  006BFC  6E02               	movwf	__flash_spi_tx_tx@command+1,c
 28897  006BFE  0E00               	movlw	0
 28898  006C00  6E04               	movwf	__flash_spi_tx_tx@command_length+1,c
 28899  006C02  0E04               	movlw	4
 28900  006C04  6E03               	movwf	__flash_spi_tx_tx@command_length,c
 28901  006C06  C016  F005         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 28902  006C0A  C017  F006         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 28903  006C0E  C018  F007         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 28904  006C12  C019  F008         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 28905  006C16  ECD2  F02E         	call	__flash_spi_tx_tx	;wreg free
 28906  006C1A  0012               	return		;funcret
 28907  006C1C                     __end_of__flash_write_to_buffer:
 28908                           	opt stack 0
 28909                           tosu	equ	0xFFF
 28910                           tosh	equ	0xFFE
 28911                           tosl	equ	0xFFD
 28912                           pclath	equ	0xFFA
 28913                           tblptru	equ	0xFF8
 28914                           tblptrh	equ	0xFF7
 28915                           tblptrl	equ	0xFF6
 28916                           tablat	equ	0xFF5
 28917                           prodh	equ	0xFF4
 28918                           prodl	equ	0xFF3
 28919                           intcon	equ	0xFF2
 28920                           intcon2	equ	0xFF1
 28921                           intcon3	equ	0xFF0
 28922                           indf0	equ	0xFEF
 28923                           postinc0	equ	0xFEE
 28924                           fsr0h	equ	0xFEA
 28925                           fsr0l	equ	0xFE9
 28926                           wreg	equ	0xFE8
 28927                           indf1	equ	0xFE7
 28928                           postdec1	equ	0xFE5
 28929                           plusw1	equ	0xFE3
 28930                           fsr1h	equ	0xFE2
 28931                           fsr1l	equ	0xFE1
 28932                           indf2	equ	0xFDF
 28933                           postinc2	equ	0xFDE
 28934                           postdec2	equ	0xFDD
 28935                           plusw2	equ	0xFDB
 28936                           fsr2h	equ	0xFDA
 28937                           fsr2l	equ	0xFD9
 28938                           status	equ	0xFD8
 28939                           
 28940 ;; *************** function __flash_spi_tx_tx *****************
 28941 ;; Defined at:
 28942 ;;		line 141 in file "flash.c"
 28943 ;; Parameters:    Size  Location     Type
 28944 ;;  command         2    0[COMRAM] PTR unsigned char 
 28945 ;;		 -> _flash_write_to_buffer@command(4), 
 28946 ;;  command_leng    2    2[COMRAM] unsigned int 
 28947 ;;  data            2    4[COMRAM] PTR unsigned char 
 28948 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 28949 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 28950 ;;  data_length     2    6[COMRAM] unsigned int 
 28951 ;; Auto vars:     Size  Location     Type
 28952 ;;		None
 28953 ;; Return value:  Size  Location     Type
 28954 ;;                  1    wreg      void 
 28955 ;; Registers used:
 28956 ;;		wreg, status,2, status,0
 28957 ;; Tracked objects:
 28958 ;;		On entry : 0/0
 28959 ;;		On exit  : 0/0
 28960 ;;		Unchanged: 0/0
 28961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28962 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28965 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28966 ;;Total ram usage:       12 bytes
 28967 ;; Hardware stack levels used:    1
 28968 ;; This function calls:
 28969 ;;		Nothing
 28970 ;; This function is called by:
 28971 ;;		__flash_write_to_buffer
 28972 ;; This function uses a non-reentrant model
 28973 ;;
 28974                           
 28975                           	psect	text130
 28976  005DA4                     __ptext130:
 28977                           	opt stack 0
 28978  005DA4                     __flash_spi_tx_tx:
 28979                           	opt stack 25
 28980                           
 28981                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 28982                           
 28983                           ;incstack = 0
 28984  005DA4  9E88               	bcf	3976,7,c	;volatile
 28985                           
 28986                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 28987  005DA6  9C88               	bcf	3976,6,c	;volatile
 28988                           
 28989                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 28990  005DA8  8A88               	bsf	3976,5,c	;volatile
 28991                           
 28992                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 28993  005DAA  9888               	bcf	3976,4,c	;volatile
 28994                           
 28995                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 28996  005DAC  9688               	bcf	3976,3,c	;volatile
 28997                           
 28998                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 28999  005DAE  8488               	bsf	3976,2,c	;volatile
 29000                           
 29001                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 29002  005DB0  9288               	bcf	3976,1,c	;volatile
 29003                           
 29004                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 29005  005DB2  9886               	bcf	3974,4,c	;volatile
 29006  005DB4  9A86               	bcf	3974,5,c	;volatile
 29007  005DB6  9C86               	bcf	3974,6,c	;volatile
 29008  005DB8  9E86               	bcf	3974,7,c	;volatile
 29009                           
 29010                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 29011  005DBA  9086               	bcf	3974,0,c	;volatile
 29012  005DBC  9286               	bcf	3974,1,c	;volatile
 29013  005DBE  9486               	bcf	3974,2,c	;volatile
 29014  005DC0  9686               	bcf	3974,3,c	;volatile
 29015                           
 29016                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 29017  005DC2  5002               	movf	__flash_spi_tx_tx@command+1,w,c
 29018  005DC4  6E6A               	movwf	3946,c	;volatile
 29019                           
 29020                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 29021  005DC6  C001  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 29022                           
 29023                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 29024  005DCA  0EFF               	movlw	255
 29025  005DCC  6E09               	movwf	??__flash_spi_tx_tx& (0+255),c
 29026  005DCE  0EFF               	movlw	255
 29027  005DD0  6E0A               	movwf	(??__flash_spi_tx_tx+1)& (0+255),c
 29028  005DD2  C003  F00B         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 29029  005DD6  C004  F00C         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 29030  005DDA  5009               	movf	??__flash_spi_tx_tx,w,c
 29031  005DDC  260B               	addwf	??__flash_spi_tx_tx+2,f,c
 29032  005DDE  500A               	movf	??__flash_spi_tx_tx+1,w,c
 29033  005DE0  220C               	addwfc	??__flash_spi_tx_tx+3,f,c
 29034  005DE2  C00C  F00B         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 29035  005DE6  6A0C               	clrf	??__flash_spi_tx_tx+3,c
 29036  005DE8  500B               	movf	??__flash_spi_tx_tx+2,w,c
 29037  005DEA  6E66               	movwf	3942,c	;volatile
 29038                           
 29039                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 29040  005DEC  0403               	decf	__flash_spi_tx_tx@command_length,w,c
 29041  005DEE  6E67               	movwf	3943,c	;volatile
 29042                           
 29043                           ;flash.c: 169: LATDbits.LD7 = 0;
 29044  005DF0  9E8C               	bcf	3980,7,c	;volatile
 29045                           
 29046                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 29047  005DF2  8088               	bsf	3976,0,c	;volatile
 29048  005DF4                     l2055:
 29049  005DF4  B088               	btfsc	3976,0,c	;volatile
 29050  005DF6  D7FE               	goto	l2055
 29051                           
 29052                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 29053  005DF8  5006               	movf	__flash_spi_tx_tx@data+1,w,c
 29054  005DFA  6E6A               	movwf	3946,c	;volatile
 29055                           
 29056                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 29057  005DFC  C005  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 29058                           
 29059                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 29060  005E00  0EFF               	movlw	255
 29061  005E02  6E09               	movwf	??__flash_spi_tx_tx& (0+255),c
 29062  005E04  0EFF               	movlw	255
 29063  005E06  6E0A               	movwf	(??__flash_spi_tx_tx+1)& (0+255),c
 29064  005E08  C007  F00B         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 29065  005E0C  C008  F00C         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 29066  005E10  5009               	movf	??__flash_spi_tx_tx,w,c
 29067  005E12  260B               	addwf	??__flash_spi_tx_tx+2,f,c
 29068  005E14  500A               	movf	??__flash_spi_tx_tx+1,w,c
 29069  005E16  220C               	addwfc	??__flash_spi_tx_tx+3,f,c
 29070  005E18  C00C  F00B         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 29071  005E1C  6A0C               	clrf	??__flash_spi_tx_tx+3,c
 29072  005E1E  500B               	movf	??__flash_spi_tx_tx+2,w,c
 29073  005E20  6E66               	movwf	3942,c	;volatile
 29074                           
 29075                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 29076  005E22  0407               	decf	__flash_spi_tx_tx@data_length,w,c
 29077  005E24  6E67               	movwf	3943,c	;volatile
 29078                           
 29079                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 29080  005E26  8088               	bsf	3976,0,c	;volatile
 29081  005E28                     l2058:
 29082  005E28  B088               	btfsc	3976,0,c	;volatile
 29083  005E2A  D7FE               	goto	l2058
 29084                           
 29085                           ;flash.c: 188: LATDbits.LD7 = 1;
 29086  005E2C  8E8C               	bsf	3980,7,c	;volatile
 29087  005E2E  0012               	return		;funcret
 29088  005E30                     __end_of__flash_spi_tx_tx:
 29089                           	opt stack 0
 29090                           tosu	equ	0xFFF
 29091                           tosh	equ	0xFFE
 29092                           tosl	equ	0xFFD
 29093                           pclath	equ	0xFFA
 29094                           tblptru	equ	0xFF8
 29095                           tblptrh	equ	0xFF7
 29096                           tblptrl	equ	0xFF6
 29097                           tablat	equ	0xFF5
 29098                           prodh	equ	0xFF4
 29099                           prodl	equ	0xFF3
 29100                           intcon	equ	0xFF2
 29101                           intcon2	equ	0xFF1
 29102                           intcon3	equ	0xFF0
 29103                           indf0	equ	0xFEF
 29104                           postinc0	equ	0xFEE
 29105                           fsr0h	equ	0xFEA
 29106                           fsr0l	equ	0xFE9
 29107                           wreg	equ	0xFE8
 29108                           indf1	equ	0xFE7
 29109                           postdec1	equ	0xFE5
 29110                           plusw1	equ	0xFE3
 29111                           fsr1h	equ	0xFE2
 29112                           fsr1l	equ	0xFE1
 29113                           indf2	equ	0xFDF
 29114                           postinc2	equ	0xFDE
 29115                           postdec2	equ	0xFDD
 29116                           plusw2	equ	0xFDB
 29117                           fsr2h	equ	0xFDA
 29118                           fsr2l	equ	0xFD9
 29119                           status	equ	0xFD8
 29120                           
 29121 ;; *************** function __flash_write_page_from_buffer *****************
 29122 ;; Defined at:
 29123 ;;		line 419 in file "flash.c"
 29124 ;; Parameters:    Size  Location     Type
 29125 ;;  page            2   19[COMRAM] unsigned int 
 29126 ;;  buffer          1   21[COMRAM] enum E8297
 29127 ;; Auto vars:     Size  Location     Type
 29128 ;;  command         4   25[COMRAM] unsigned char [4]
 29129 ;; Return value:  Size  Location     Type
 29130 ;;                  1    wreg      void 
 29131 ;; Registers used:
 29132 ;;		wreg, status,2, status,0, cstack
 29133 ;; Tracked objects:
 29134 ;;		On entry : 0/0
 29135 ;;		On exit  : 0/0
 29136 ;;		Unchanged: 0/0
 29137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29138 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29139 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29141 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29142 ;;Total ram usage:       10 bytes
 29143 ;; Hardware stack levels used:    1
 29144 ;; Hardware stack levels required when called:    3
 29145 ;; This function calls:
 29146 ;;		__flash_spi_tx
 29147 ;;		_flash_is_busy
 29148 ;; This function is called by:
 29149 ;;		_flash_page_write
 29150 ;;		_flash_partial_write
 29151 ;; This function uses a non-reentrant model
 29152 ;;
 29153                           
 29154                           	psect	text131
 29155  006874                     __ptext131:
 29156                           	opt stack 0
 29157  006874                     __flash_write_page_from_buffer:
 29158                           	opt stack 23
 29159  006874                     l9691:
 29160  006874  ECEF  F03A         	call	_flash_is_busy	;wreg free
 29161  006878  0900               	iorlw	0
 29162  00687A  A4D8               	btfss	status,2,c
 29163  00687C  D7FB               	goto	l9691
 29164                           
 29165                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 29166  00687E  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 29167  006880  A4D8               	btfss	status,2,c
 29168  006882  D002               	goto	l9697
 29169                           
 29170                           ;flash.c: 428: command[0] = 0x83;
 29171  006884  0E83               	movlw	131
 29172  006886  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 29173  006888                     l9697:
 29174                           
 29175                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 29176  006888  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 29177  00688A  A4D8               	btfss	status,2,c
 29178  00688C  D002               	goto	l9701
 29179                           
 29180                           ;flash.c: 430: command[0] = 0x86;
 29181  00688E  0E86               	movlw	134
 29182  006890  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 29183  006892                     l9701:
 29184                           
 29185                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 29186  006892  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 29187  006896  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 29188  00689A  0E07               	movlw	7
 29189  00689C  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 29190  00689E                     u6375:
 29191  00689E  90D8               	bcf	status,0,c
 29192  0068A0  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 29193  0068A2  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 29194  0068A4  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 29195  0068A6  D7FB               	goto	u6375
 29196  0068A8  5017               	movf	??__flash_write_page_from_buffer,w,c
 29197  0068AA  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 29198                           
 29199                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 29200  0068AC  5014               	movf	__flash_write_page_from_buffer@page,w,c
 29201  0068AE  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 29202  0068B0  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 29203                           
 29204                           ;flash.c: 434: command[3] = 0x00;
 29205  0068B2  0E00               	movlw	0
 29206  0068B4  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 29207                           
 29208                           ;flash.c: 437: _flash_spi_tx(command, 4);
 29209  0068B6  0E1A               	movlw	low __flash_write_page_from_buffer@command
 29210  0068B8  6E01               	movwf	__flash_spi_tx@data,c
 29211  0068BA  0E00               	movlw	high __flash_write_page_from_buffer@command
 29212  0068BC  6E02               	movwf	__flash_spi_tx@data+1,c
 29213  0068BE  0E00               	movlw	0
 29214  0068C0  6E04               	movwf	__flash_spi_tx@length+1,c
 29215  0068C2  0E04               	movlw	4
 29216  0068C4  6E03               	movwf	__flash_spi_tx@length,c
 29217  0068C6  EC66  F034         	call	__flash_spi_tx	;wreg free
 29218  0068CA  0012               	return		;funcret
 29219  0068CC                     __end_of__flash_write_page_from_buffer:
 29220                           	opt stack 0
 29221                           tosu	equ	0xFFF
 29222                           tosh	equ	0xFFE
 29223                           tosl	equ	0xFFD
 29224                           pclath	equ	0xFFA
 29225                           tblptru	equ	0xFF8
 29226                           tblptrh	equ	0xFF7
 29227                           tblptrl	equ	0xFF6
 29228                           tablat	equ	0xFF5
 29229                           prodh	equ	0xFF4
 29230                           prodl	equ	0xFF3
 29231                           intcon	equ	0xFF2
 29232                           intcon2	equ	0xFF1
 29233                           intcon3	equ	0xFF0
 29234                           indf0	equ	0xFEF
 29235                           postinc0	equ	0xFEE
 29236                           fsr0h	equ	0xFEA
 29237                           fsr0l	equ	0xFE9
 29238                           wreg	equ	0xFE8
 29239                           indf1	equ	0xFE7
 29240                           postdec1	equ	0xFE5
 29241                           plusw1	equ	0xFE3
 29242                           fsr1h	equ	0xFE2
 29243                           fsr1l	equ	0xFE1
 29244                           indf2	equ	0xFDF
 29245                           postinc2	equ	0xFDE
 29246                           postdec2	equ	0xFDD
 29247                           plusw2	equ	0xFDB
 29248                           fsr2h	equ	0xFDA
 29249                           fsr2l	equ	0xFD9
 29250                           status	equ	0xFD8
 29251                           
 29252 ;; *************** function __flash_compare_page_to_buffer *****************
 29253 ;; Defined at:
 29254 ;;		line 337 in file "flash.c"
 29255 ;; Parameters:    Size  Location     Type
 29256 ;;  page            2   19[COMRAM] unsigned int 
 29257 ;;  buffer          1   21[COMRAM] enum E8297
 29258 ;; Auto vars:     Size  Location     Type
 29259 ;;  command         4   27[COMRAM] unsigned char [4]
 29260 ;;  status          2   25[COMRAM] unsigned int 
 29261 ;; Return value:  Size  Location     Type
 29262 ;;                  1    wreg      enum E8301
 29263 ;; Registers used:
 29264 ;;		wreg, status,2, status,0, cstack
 29265 ;; Tracked objects:
 29266 ;;		On entry : 0/0
 29267 ;;		On exit  : 0/0
 29268 ;;		Unchanged: 0/0
 29269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29270 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29271 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29273 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29274 ;;Total ram usage:       12 bytes
 29275 ;; Hardware stack levels used:    1
 29276 ;; Hardware stack levels required when called:    3
 29277 ;; This function calls:
 29278 ;;		__flash_get_status
 29279 ;;		__flash_spi_tx
 29280 ;;		_flash_is_busy
 29281 ;; This function is called by:
 29282 ;;		_flash_page_write
 29283 ;;		_flash_partial_write
 29284 ;; This function uses a non-reentrant model
 29285 ;;
 29286                           
 29287                           	psect	text132
 29288  0062B6                     __ptext132:
 29289                           	opt stack 0
 29290  0062B6                     __flash_compare_page_to_buffer:
 29291                           	opt stack 23
 29292  0062B6                     l9641:
 29293  0062B6  ECEF  F03A         	call	_flash_is_busy	;wreg free
 29294  0062BA  0900               	iorlw	0
 29295  0062BC  A4D8               	btfss	status,2,c
 29296  0062BE  D7FB               	goto	l9641
 29297                           
 29298                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 29299  0062C0  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 29300  0062C2  A4D8               	btfss	status,2,c
 29301  0062C4  D002               	goto	l9647
 29302                           
 29303                           ;flash.c: 347: command[0] = 0x60;
 29304  0062C6  0E60               	movlw	96
 29305  0062C8  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 29306  0062CA                     l9647:
 29307                           
 29308                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 29309  0062CA  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 29310  0062CC  A4D8               	btfss	status,2,c
 29311  0062CE  D002               	goto	l9651
 29312                           
 29313                           ;flash.c: 349: command[0] = 0x60;
 29314  0062D0  0E60               	movlw	96
 29315  0062D2  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 29316  0062D4                     l9651:
 29317                           
 29318                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 29319  0062D4  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 29320  0062D8  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 29321  0062DC  0E07               	movlw	7
 29322  0062DE  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 29323  0062E0                     u6285:
 29324  0062E0  90D8               	bcf	status,0,c
 29325  0062E2  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 29326  0062E4  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 29327  0062E6  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 29328  0062E8  D7FB               	goto	u6285
 29329  0062EA  5017               	movf	??__flash_compare_page_to_buffer,w,c
 29330  0062EC  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 29331                           
 29332                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 29333  0062EE  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 29334  0062F0  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 29335  0062F2  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 29336                           
 29337                           ;flash.c: 353: command[3] = 0x00;
 29338  0062F4  0E00               	movlw	0
 29339  0062F6  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 29340                           
 29341                           ;flash.c: 356: _flash_spi_tx(command, 4);
 29342  0062F8  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 29343  0062FA  6E01               	movwf	__flash_spi_tx@data,c
 29344  0062FC  0E00               	movlw	high __flash_compare_page_to_buffer@command
 29345  0062FE  6E02               	movwf	__flash_spi_tx@data+1,c
 29346  006300  0E00               	movlw	0
 29347  006302  6E04               	movwf	__flash_spi_tx@length+1,c
 29348  006304  0E04               	movlw	4
 29349  006306  6E03               	movwf	__flash_spi_tx@length,c
 29350  006308  EC66  F034         	call	__flash_spi_tx	;wreg free
 29351  00630C                     l9657:
 29352  00630C  ECEF  F03A         	call	_flash_is_busy	;wreg free
 29353  006310  0900               	iorlw	0
 29354  006312  A4D8               	btfss	status,2,c
 29355  006314  D7FB               	goto	l9657
 29356                           
 29357                           ;flash.c: 362: status = _flash_get_status();
 29358  006316  ECAB  F039         	call	__flash_get_status	;wreg free
 29359  00631A  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 29360  00631E  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 29361                           
 29362                           ;flash.c: 365: if(status & 0b0000000001000000)
 29363  006322  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 29364  006324  D002               	goto	l9669
 29365                           
 29366                           ;flash.c: 366: {
 29367                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 29368  006326  0E01               	movlw	1
 29369                           
 29370                           ;flash.c: 369: }
 29371  006328  0012               	return	
 29372  00632A                     l9669:
 29373                           
 29374                           ;flash.c: 370: else
 29375                           ;flash.c: 371: {
 29376                           ;flash.c: 373: return DATA_DOES_MATCH;
 29377  00632A  0E00               	movlw	0
 29378  00632C  0012               	return	
 29379  00632E                     __end_of__flash_compare_page_to_buffer:
 29380                           	opt stack 0
 29381                           tosu	equ	0xFFF
 29382                           tosh	equ	0xFFE
 29383                           tosl	equ	0xFFD
 29384                           pclath	equ	0xFFA
 29385                           tblptru	equ	0xFF8
 29386                           tblptrh	equ	0xFF7
 29387                           tblptrl	equ	0xFF6
 29388                           tablat	equ	0xFF5
 29389                           prodh	equ	0xFF4
 29390                           prodl	equ	0xFF3
 29391                           intcon	equ	0xFF2
 29392                           intcon2	equ	0xFF1
 29393                           intcon3	equ	0xFF0
 29394                           indf0	equ	0xFEF
 29395                           postinc0	equ	0xFEE
 29396                           fsr0h	equ	0xFEA
 29397                           fsr0l	equ	0xFE9
 29398                           wreg	equ	0xFE8
 29399                           indf1	equ	0xFE7
 29400                           postdec1	equ	0xFE5
 29401                           plusw1	equ	0xFE3
 29402                           fsr1h	equ	0xFE2
 29403                           fsr1l	equ	0xFE1
 29404                           indf2	equ	0xFDF
 29405                           postinc2	equ	0xFDE
 29406                           postdec2	equ	0xFDD
 29407                           plusw2	equ	0xFDB
 29408                           fsr2h	equ	0xFDA
 29409                           fsr2l	equ	0xFD9
 29410                           status	equ	0xFD8
 29411                           
 29412 ;; *************** function _MSDReadHandler *****************
 29413 ;; Defined at:
 29414 ;;		line 1038 in file "usb_device_msd.c"
 29415 ;; Parameters:    Size  Location     Type
 29416 ;;		None
 29417 ;; Auto vars:     Size  Location     Type
 29418 ;;		None
 29419 ;; Return value:  Size  Location     Type
 29420 ;;                  1    wreg      unsigned char 
 29421 ;; Registers used:
 29422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29423 ;; Tracked objects:
 29424 ;;		On entry : 0/0
 29425 ;;		On exit  : 0/0
 29426 ;;		Unchanged: 0/0
 29427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29430 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29432 ;;Total ram usage:        4 bytes
 29433 ;; Hardware stack levels used:    1
 29434 ;; Hardware stack levels required when called:    6
 29435 ;; This function calls:
 29436 ;;		_ExternalFlash_SectorRead
 29437 ;;		_MSDCheckForErrorCases
 29438 ;;		_USBStallEndpoint
 29439 ;;		_USBTransferOnePacket
 29440 ;; This function is called by:
 29441 ;;		_MSDProcessCommandMediaPresent
 29442 ;; This function uses a non-reentrant model
 29443 ;;
 29444                           
 29445                           	psect	text133
 29446  002BA8                     __ptext133:
 29447                           	opt stack 0
 29448  002BA8                     _MSDReadHandler:
 29449                           	opt stack 20
 29450                           
 29451                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 29452                           
 29453                           ;incstack = 0
 29454  002BA8  D0E7               	goto	l10303
 29455  002BAA                     l666:
 29456                           
 29457                           ; BSR set to: 1
 29458                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 29459  002BAA  C111  F15E         	movff	_gblCBW+17,_LBA+3
 29460                           
 29461                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 29462  002BAE  C112  F15D         	movff	_gblCBW+18,_LBA+2
 29463                           
 29464                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 29465  002BB2  C113  F15C         	movff	_gblCBW+19,_LBA+1
 29466                           
 29467                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 29468  002BB6  C114  F15B         	movff	_gblCBW+20,_LBA
 29469                           
 29470                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 29471  002BBA  C116  F177         	movff	_gblCBW+22,_TransferLength+1
 29472                           
 29473                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 29474  002BBE  C117  F176         	movff	_gblCBW+23,_TransferLength
 29475                           
 29476                           ; BSR set to: 1
 29477                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 29478  002BC2  0101               	movlb	1	; () banked
 29479  002BC4  5176               	movf	_TransferLength& (0+255),w,b
 29480  002BC6  6E36               	movwf	??_MSDReadHandler& (0+255),c
 29481  002BC8  0101               	movlb	1	; () banked
 29482  002BCA  5177               	movf	(_TransferLength+1)& (0+255),w,b
 29483  002BCC  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 29484  002BCE  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 29485  002BD0  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 29486  002BD2  0E09               	movlw	9
 29487  002BD4                     u7095:
 29488  002BD4  90D8               	bcf	status,0,c
 29489  002BD6  3636               	rlcf	??_MSDReadHandler,f,c
 29490  002BD8  3637               	rlcf	??_MSDReadHandler+1,f,c
 29491  002BDA  3638               	rlcf	??_MSDReadHandler+2,f,c
 29492  002BDC  3639               	rlcf	??_MSDReadHandler+3,f,c
 29493  002BDE  2EE8               	decfsz	wreg,f,c
 29494  002BE0  D7F9               	goto	u7095
 29495  002BE2  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 29496  002BE6  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 29497  002BEA  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 29498  002BEE  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 29499  002BF2  EC5E  F023         	call	_MSDCheckForErrorCases	;wreg free
 29500  002BF6  0900               	iorlw	0
 29501  002BF8  A4D8               	btfss	status,2,c
 29502  002BFA  D0D0               	goto	l10305
 29503                           
 29504                           ;usb_device_msd.c: 1058: }
 29505                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 29506                           
 29507                           ;usb_device_msd.c: 1056: {
 29508                           ;usb_device_msd.c: 1057: break;
 29509  002BFC  0E01               	movlw	1
 29510  002BFE  0101               	movlb	1	; () banked
 29511  002C00  6F8C               	movwf	_MSDReadState& (0+255),b
 29512  002C02                     l10239:
 29513                           
 29514                           ; BSR set to: 1
 29515                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 29516  002C02  0101               	movlb	1	; () banked
 29517  002C04  5176               	movf	_TransferLength& (0+255),w,b
 29518  002C06  0101               	movlb	1	; () banked
 29519  002C08  1177               	iorwf	(_TransferLength+1)& (0+255),w,b
 29520  002C0A  B4D8               	btfsc	status,2,c
 29521  002C0C  D0B1               	goto	l10299
 29522                           
 29523                           ; BSR set to: 1
 29524                           ;usb_device_msd.c: 1068: }
 29525                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 29526                           
 29527                           ; BSR set to: 1
 29528                           
 29529                           ;usb_device_msd.c: 1067: break;
 29530                           
 29531                           ; BSR set to: 1
 29532                           ;usb_device_msd.c: 1065: {
 29533                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 29534  002C0E  0101               	movlb	1	; () banked
 29535  002C10  0776               	decf	_TransferLength& (0+255),f,b
 29536  002C12  A0D8               	btfss	status,0,c
 29537  002C14  0777               	decf	(_TransferLength+1)& (0+255),f,b
 29538                           
 29539                           ; BSR set to: 1
 29540                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 29541  002C16  0E02               	movlw	2
 29542  002C18  0101               	movlb	1	; () banked
 29543  002C1A  6F8C               	movwf	_MSDReadState& (0+255),b
 29544  002C1C                     l10247:
 29545                           
 29546                           ; BSR set to: 1
 29547                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 29548  002C1C  0100               	movlb	0	; () banked
 29549  002C1E  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 29550  002C20  0100               	movlb	0	; () banked
 29551  002C22  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 29552  002C24  B4D8               	btfsc	status,2,c
 29553  002C26  D007               	goto	l10253
 29554                           
 29555                           ; BSR set to: 0
 29556  002C28  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 29557  002C2C  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 29558  002C30  0100               	movlb	0	; () banked
 29559  002C32  BEDF               	btfsc	indf2,7,c
 29560  002C34  D0B3               	goto	l10305
 29561  002C36                     l10253:
 29562                           
 29563                           ; BSR set to: 0
 29564                           ;usb_device_msd.c: 1079: }
 29565                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 29566  002C36  C1C6  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 29567  002C3A  C1C7  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 29568  002C3E  C15B  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 29569  002C42  C15C  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 29570  002C46  C15D  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 29571  002C4A  C15E  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 29572  002C4E  0E00               	movlw	0
 29573  002C50  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 29574  002C52  0E06               	movlw	6
 29575  002C54  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 29576  002C56  D801               	call	u7148
 29577  002C58  D00A               	goto	u7149
 29578  002C5A                     u7148:
 29579  002C5A  0005               	push	
 29580  002C5C  6EFA               	movwf	pclath,c
 29581  002C5E  0101               	movlb	1	; () banked
 29582  002C60  51C0               	movf	(_LUN+8)& (0+255),w,b
 29583  002C62  6EFD               	movwf	tosl,c
 29584  002C64  51C1               	movf	(_LUN+9)& (0+255),w,b
 29585  002C66  6EFE               	movwf	tosh,c
 29586  002C68  6AFF               	clrf	tosu,c
 29587  002C6A  50FA               	movf	pclath,w,c
 29588  002C6C  0012               	return		;indir
 29589  002C6E                     u7149:
 29590  002C6E  06E8               	decf	wreg,f,c
 29591  002C70  B4D8               	btfsc	status,2,c
 29592  002C72  D01B               	goto	l10267
 29593                           
 29594                           ;usb_device_msd.c: 1084: {
 29595                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 29596  002C74  0E64               	movlw	100
 29597  002C76  0101               	movlb	1	; () banked
 29598  002C78  618A               	cpfslt	_MSDRetryAttempt& (0+255),b
 29599  002C7A  D003               	goto	l10261
 29600                           
 29601                           ; BSR set to: 1
 29602                           ;usb_device_msd.c: 1086: {
 29603                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 29604  002C7C  0101               	movlb	1	; () banked
 29605  002C7E  2B8A               	incf	_MSDRetryAttempt& (0+255),f,b
 29606                           
 29607                           ;usb_device_msd.c: 1088: break;
 29608  002C80  D08D               	goto	l10305
 29609  002C82                     l10261:
 29610                           
 29611                           ; BSR set to: 1
 29612                           ;usb_device_msd.c: 1090: else
 29613                           ;usb_device_msd.c: 1091: {
 29614                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 29615  002C82  0E02               	movlw	2
 29616  002C84  010D               	movlb	13	; () banked
 29617  002C86  6F8C               	movwf	140,b	;volatile
 29618                           
 29619                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 29620  002C88  0101               	movlb	1	; () banked
 29621  002C8A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 29622  002C8C  0BF0               	andlw	-16
 29623  002C8E  0903               	iorlw	3
 29624  002C90  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 29625                           
 29626                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 29627  002C92  0E00               	movlw	0
 29628  002C94  0101               	movlb	1	; () banked
 29629  002C96  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 29630                           
 29631                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 29632  002C98  0E00               	movlw	0
 29633  002C9A  0101               	movlb	1	; () banked
 29634  002C9C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 29635                           
 29636                           ; BSR set to: 1
 29637                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 29638  002C9E  0E01               	movlw	1
 29639  002CA0  6E01               	movwf	USBStallEndpoint@dir,c
 29640  002CA2  0E02               	movlw	2
 29641  002CA4  EC5A  F022         	call	_USBStallEndpoint
 29642  002CA8  D063               	goto	l10299
 29643  002CAA                     l10267:
 29644                           
 29645                           ;usb_device_msd.c: 1110: }
 29646                           ;usb_device_msd.c: 1111: }
 29647                           ;usb_device_msd.c: 1113: LBA.Val++;
 29648  002CAA  0E01               	movlw	1
 29649  002CAC  0101               	movlb	1	; () banked
 29650  002CAE  275B               	addwf	_LBA& (0+255),f,b
 29651  002CB0  0E00               	movlw	0
 29652  002CB2  235C               	addwfc	(_LBA+1)& (0+255),f,b
 29653  002CB4  235D               	addwfc	(_LBA+2)& (0+255),f,b
 29654  002CB6  235E               	addwfc	(_LBA+3)& (0+255),f,b
 29655                           
 29656                           ; BSR set to: 1
 29657                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 29658  002CB8  0E00               	movlw	0
 29659  002CBA  010D               	movlb	13	; () banked
 29660  002CBC  6F88               	movwf	136,b	;volatile
 29661  002CBE  0E02               	movlw	2
 29662  002CC0  6F89               	movwf	137,b	;volatile
 29663  002CC2  0E00               	movlw	0
 29664  002CC4  6F8A               	movwf	138,b	;volatile
 29665  002CC6  0E00               	movlw	0
 29666  002CC8  6F8B               	movwf	139,b	;volatile
 29667                           
 29668                           ; BSR set to: 13
 29669                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 29670  002CCA  0E00               	movlw	0
 29671  002CCC  0101               	movlb	1	; () banked
 29672  002CCE  6F7C               	movwf	_ptrNextData& (0+255),b
 29673  002CD0  0E06               	movlw	6
 29674  002CD2  0101               	movlb	1	; () banked
 29675  002CD4  6F7D               	movwf	(_ptrNextData+1)& (0+255),b
 29676                           
 29677                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 29678  002CD6  0E03               	movlw	3
 29679  002CD8  0101               	movlb	1	; () banked
 29680  002CDA  6F8C               	movwf	_MSDReadState& (0+255),b
 29681  002CDC                     l10273:
 29682                           
 29683                           ; BSR set to: 1
 29684                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 29685  002CDC  010D               	movlb	13	; () banked
 29686  002CDE  5188               	movf	136,w,b	;volatile
 29687  002CE0  010D               	movlb	13	; () banked
 29688  002CE2  1189               	iorwf	137,w,b	;volatile
 29689  002CE4  010D               	movlb	13	; () banked
 29690  002CE6  118A               	iorwf	138,w,b	;volatile
 29691  002CE8  010D               	movlb	13	; () banked
 29692  002CEA  118B               	iorwf	139,w,b	;volatile
 29693  002CEC  A4D8               	btfss	status,2,c
 29694  002CEE  D002               	goto	l10277
 29695                           
 29696                           ; BSR set to: 13
 29697                           ;usb_device_msd.c: 1124: {
 29698                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 29699  002CF0  0E01               	movlw	1
 29700  002CF2  D03F               	goto	L25
 29701  002CF4                     l10277:
 29702                           
 29703                           ;usb_device_msd.c: 1127: }
 29704                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 29705  002CF4  0E04               	movlw	4
 29706  002CF6  0101               	movlb	1	; () banked
 29707  002CF8  6F8C               	movwf	_MSDReadState& (0+255),b
 29708  002CFA                     l10279:
 29709                           
 29710                           ; BSR set to: 1
 29711                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 29712  002CFA  0100               	movlb	0	; () banked
 29713  002CFC  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 29714  002CFE  0100               	movlb	0	; () banked
 29715  002D00  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 29716  002D02  B4D8               	btfsc	status,2,c
 29717  002D04  D007               	goto	l10285
 29718                           
 29719                           ; BSR set to: 0
 29720  002D06  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 29721  002D0A  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 29722  002D0E  0100               	movlb	0	; () banked
 29723  002D10  BEDF               	btfsc	indf2,7,c
 29724  002D12  D044               	goto	l10305
 29725  002D14                     l10285:
 29726                           
 29727                           ; BSR set to: 0
 29728                           ;usb_device_msd.c: 1139: }
 29729                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 29730  002D14  0E01               	movlw	1
 29731  002D16  6E01               	movwf	USBTransferOnePacket@dir,c
 29732  002D18  C17C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 29733  002D1C  C17D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 29734  002D20  0E40               	movlw	64
 29735  002D22  6E04               	movwf	USBTransferOnePacket@len,c
 29736  002D24  0E02               	movlw	2
 29737  002D26  ECDD  F022         	call	_USBTransferOnePacket
 29738  002D2A  C001  F0F4         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 29739  002D2E  C002  F0F5         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 29740                           
 29741                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 29742  002D32  0E03               	movlw	3
 29743  002D34  0101               	movlb	1	; () banked
 29744  002D36  6F8C               	movwf	_MSDReadState& (0+255),b
 29745                           
 29746                           ; BSR set to: 1
 29747                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 29748  002D38  0E40               	movlw	64
 29749  002D3A  0101               	movlb	1	; () banked
 29750  002D3C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 29751  002D3E  0E00               	movlw	0
 29752  002D40  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 29753  002D42  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 29754  002D44  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 29755                           
 29756                           ; BSR set to: 1
 29757                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 29758  002D46  0E40               	movlw	64
 29759  002D48  010D               	movlb	13	; () banked
 29760  002D4A  5F88               	subwf	136,f,b	;volatile
 29761  002D4C  0E00               	movlw	0
 29762  002D4E  5B89               	subwfb	137,f,b	;volatile
 29763  002D50  5B8A               	subwfb	138,f,b	;volatile
 29764  002D52  5B8B               	subwfb	139,f,b	;volatile
 29765                           
 29766                           ; BSR set to: 13
 29767                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 29768  002D54  0E40               	movlw	64
 29769  002D56  0101               	movlb	1	; () banked
 29770  002D58  277C               	addwf	_ptrNextData& (0+255),f,b
 29771  002D5A  0E00               	movlw	0
 29772  002D5C  237D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 29773                           
 29774                           ;usb_device_msd.c: 1149: break;
 29775  002D5E  D01E               	goto	l10305
 29776  002D60                     l10295:
 29777                           
 29778                           ; BSR set to: 1
 29779                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 29780  002D60  0E02               	movlw	2
 29781  002D62  010D               	movlb	13	; () banked
 29782  002D64  6F8C               	movwf	140,b	;volatile
 29783                           
 29784                           ; BSR set to: 13
 29785                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 29786  002D66  0E01               	movlw	1
 29787  002D68  6E01               	movwf	USBStallEndpoint@dir,c
 29788  002D6A  0E02               	movlw	2
 29789  002D6C  EC5A  F022         	call	_USBStallEndpoint
 29790  002D70                     l10299:
 29791                           
 29792                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 29793  002D70  0E00               	movlw	0
 29794  002D72                     L25:
 29795  002D72  0101               	movlb	1	; () banked
 29796  002D74  6F8C               	movwf	_MSDReadState& (0+255),b
 29797                           
 29798                           ; BSR set to: 1
 29799                           ;usb_device_msd.c: 1159: }
 29800                           
 29801                           ;usb_device_msd.c: 1158: break;
 29802  002D76  D012               	goto	l10305
 29803  002D78                     l10303:
 29804  002D78  0101               	movlb	1	; () banked
 29805  002D7A  518C               	movf	_MSDReadState& (0+255),w,b
 29806                           
 29807                           ; Switch size 1, requested type "space"
 29808                           ; Number of cases is 5, Range of values is 0 to 4
 29809                           ; switch strategies available:
 29810                           ; Name         Instructions Cycles
 29811                           ; simple_byte           16     9 (average)
 29812                           ;	Chosen strategy is simple_byte
 29813  002D7C  0A00               	xorlw	0	; case 0
 29814  002D7E  B4D8               	btfsc	status,2,c
 29815  002D80  D714               	goto	l666
 29816  002D82  0A01               	xorlw	1	; case 1
 29817  002D84  B4D8               	btfsc	status,2,c
 29818  002D86  D73D               	goto	l10239
 29819  002D88  0A03               	xorlw	3	; case 2
 29820  002D8A  B4D8               	btfsc	status,2,c
 29821  002D8C  D747               	goto	l10247
 29822  002D8E  0A01               	xorlw	1	; case 3
 29823  002D90  B4D8               	btfsc	status,2,c
 29824  002D92  D7A4               	goto	l10273
 29825  002D94  0A07               	xorlw	7	; case 4
 29826  002D96  B4D8               	btfsc	status,2,c
 29827  002D98  D7B0               	goto	l10279
 29828  002D9A  D7E2               	goto	l10295
 29829  002D9C                     l10305:
 29830                           
 29831                           ;usb_device_msd.c: 1161: return MSDReadState;
 29832  002D9C  0101               	movlb	1	; () banked
 29833  002D9E  518C               	movf	_MSDReadState& (0+255),w,b
 29834  002DA0  0012               	return	
 29835  002DA2                     __end_of_MSDReadHandler:
 29836                           	opt stack 0
 29837                           tosu	equ	0xFFF
 29838                           tosh	equ	0xFFE
 29839                           tosl	equ	0xFFD
 29840                           pclath	equ	0xFFA
 29841                           tblptru	equ	0xFF8
 29842                           tblptrh	equ	0xFF7
 29843                           tblptrl	equ	0xFF6
 29844                           tablat	equ	0xFF5
 29845                           prodh	equ	0xFF4
 29846                           prodl	equ	0xFF3
 29847                           intcon	equ	0xFF2
 29848                           intcon2	equ	0xFF1
 29849                           intcon3	equ	0xFF0
 29850                           indf0	equ	0xFEF
 29851                           postinc0	equ	0xFEE
 29852                           fsr0h	equ	0xFEA
 29853                           fsr0l	equ	0xFE9
 29854                           wreg	equ	0xFE8
 29855                           indf1	equ	0xFE7
 29856                           postdec1	equ	0xFE5
 29857                           plusw1	equ	0xFE3
 29858                           fsr1h	equ	0xFE2
 29859                           fsr1l	equ	0xFE1
 29860                           indf2	equ	0xFDF
 29861                           postinc2	equ	0xFDE
 29862                           postdec2	equ	0xFDD
 29863                           plusw2	equ	0xFDB
 29864                           fsr2h	equ	0xFDA
 29865                           fsr2l	equ	0xFD9
 29866                           status	equ	0xFD8
 29867                           
 29868 ;; *************** function _MSDCheckForErrorCases *****************
 29869 ;; Defined at:
 29870 ;;		line 1434 in file "usb_device_msd.c"
 29871 ;; Parameters:    Size  Location     Type
 29872 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 29873 ;; Auto vars:     Size  Location     Type
 29874 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 29875 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 29876 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 29877 ;; Return value:  Size  Location     Type
 29878 ;;                  1    wreg      unsigned char 
 29879 ;; Registers used:
 29880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29881 ;; Tracked objects:
 29882 ;;		On entry : 0/0
 29883 ;;		On exit  : 0/0
 29884 ;;		Unchanged: 0/0
 29885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29887 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29890 ;;Total ram usage:        7 bytes
 29891 ;; Hardware stack levels used:    1
 29892 ;; Hardware stack levels required when called:    2
 29893 ;; This function calls:
 29894 ;;		_MSDErrorHandler
 29895 ;; This function is called by:
 29896 ;;		_MSDProcessCommandMediaPresent
 29897 ;;		_MSDReadHandler
 29898 ;;		_MSDWriteHandler
 29899 ;; This function uses a non-reentrant model
 29900 ;;
 29901                           
 29902                           	psect	text134
 29903  0046BC                     __ptext134:
 29904                           	opt stack 0
 29905  0046BC                     _MSDCheckForErrorCases:
 29906                           	opt stack 23
 29907                           
 29908                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 29909                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 29910                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 29911                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 29912                           
 29913                           ; BSR set to: 1
 29914                           ;incstack = 0
 29915  0046BC  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 29916  0046BE  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 29917  0046C0  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 29918  0046C2  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 29919  0046C4  A4D8               	btfss	status,2,c
 29920  0046C6  D002               	goto	l9955
 29921                           
 29922                           ;usb_device_msd.c: 1442: {
 29923                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 29924  0046C8  0E01               	movlw	1
 29925  0046CA  D001               	goto	L26
 29926  0046CC                     l9955:
 29927                           
 29928                           ;usb_device_msd.c: 1445: else
 29929                           ;usb_device_msd.c: 1446: {
 29930                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 29931  0046CC  0E00               	movlw	0
 29932  0046CE                     L26:
 29933  0046CE  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 29934                           
 29935                           ;usb_device_msd.c: 1448: }
 29936                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 29937  0046D0  0100               	movlb	0	; () banked
 29938  0046D2  05F8               	decf	_MSDHostNoData& (0+255),w,b
 29939  0046D4  A4D8               	btfss	status,2,c
 29940  0046D6  D005               	goto	l9965
 29941                           
 29942                           ; BSR set to: 0
 29943  0046D8  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 29944  0046DA  A4D8               	btfss	status,2,c
 29945  0046DC  D002               	goto	l9965
 29946                           
 29947                           ; BSR set to: 0
 29948                           ;usb_device_msd.c: 1454: {
 29949                           ;usb_device_msd.c: 1455: return 0x00;
 29950  0046DE  0E00               	movlw	0
 29951                           
 29952                           ; BSR set to: 0
 29953  0046E0  0012               	return	
 29954  0046E2                     l9965:
 29955                           
 29956                           ; BSR set to: 0
 29957                           ;usb_device_msd.c: 1456: }
 29958                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 29959  0046E2  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 29960  0046E4  0101               	movlb	1	; () banked
 29961  0046E6  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 29962  0046E8  E11F               	bnz	l9981
 29963  0046EA  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 29964  0046EC  0101               	movlb	1	; () banked
 29965  0046EE  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 29966  0046F0  E11B               	bnz	l9981
 29967  0046F2  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 29968  0046F4  0101               	movlb	1	; () banked
 29969  0046F6  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 29970  0046F8  E117               	bnz	l9981
 29971  0046FA  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 29972  0046FC  0101               	movlb	1	; () banked
 29973  0046FE  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 29974  004700  A4D8               	btfss	status,2,c
 29975  004702  D012               	goto	l9981
 29976                           
 29977                           ; BSR set to: 1
 29978                           ;usb_device_msd.c: 1460: {
 29979                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 29980  004704  0100               	movlb	0	; () banked
 29981  004706  05FA               	decf	_MSD_State& (0+255),w,b
 29982  004708  A4D8               	btfss	status,2,c
 29983  00470A  D007               	goto	l9975
 29984                           
 29985                           ; BSR set to: 0
 29986                           ;usb_device_msd.c: 1463: {
 29987                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 29988  00470C  0E2A               	movlw	42
 29989  00470E  0100               	movlb	0	; () banked
 29990  004710  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 29991  004712  B4D8               	btfsc	status,2,c
 29992  004714  D009               	goto	l9981
 29993                           
 29994                           ; BSR set to: 0
 29995                           ;usb_device_msd.c: 1466: {
 29996                           ;usb_device_msd.c: 1467: return 0x00;
 29997  004716  0E00               	movlw	0
 29998                           
 29999                           ; BSR set to: 0
 30000  004718  0012               	return	
 30001  00471A                     l9975:
 30002                           
 30003                           ; BSR set to: 0
 30004                           ;usb_device_msd.c: 1470: else
 30005                           ;usb_device_msd.c: 1471: {
 30006                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 30007  00471A  0E2A               	movlw	42
 30008  00471C  0100               	movlb	0	; () banked
 30009  00471E  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30010  004720  A4D8               	btfss	status,2,c
 30011  004722  D002               	goto	l9981
 30012                           
 30013                           ; BSR set to: 0
 30014                           ;usb_device_msd.c: 1475: {
 30015                           ;usb_device_msd.c: 1476: return 0x00;
 30016  004724  0E00               	movlw	0
 30017                           
 30018                           ; BSR set to: 0
 30019  004726  0012               	return	
 30020  004728                     l9981:
 30021                           
 30022                           ;usb_device_msd.c: 1477: }
 30023                           ;usb_device_msd.c: 1478: }
 30024                           ;usb_device_msd.c: 1479: }
 30025                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 30026  004728  0101               	movlb	1	; () banked
 30027  00472A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 30028  00472C  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 30029  00472E  0101               	movlb	1	; () banked
 30030  004730  5109               	movf	(_gblCBW+9)& (0+255),w,b
 30031  004732  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 30032  004734  0101               	movlb	1	; () banked
 30033  004736  510A               	movf	(_gblCBW+10)& (0+255),w,b
 30034  004738  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 30035  00473A  0101               	movlb	1	; () banked
 30036  00473C  510B               	movf	(_gblCBW+11)& (0+255),w,b
 30037  00473E  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 30038  004740  B0D8               	btfsc	status,0,c
 30039  004742  D002               	goto	l9985
 30040                           
 30041                           ; BSR set to: 1
 30042                           ;usb_device_msd.c: 1486: {
 30043                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 30044  004744  0E01               	movlw	1
 30045  004746  D001               	goto	L27
 30046  004748                     l9985:
 30047                           
 30048                           ; BSR set to: 1
 30049                           ;usb_device_msd.c: 1489: else
 30050                           ;usb_device_msd.c: 1490: {
 30051                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 30052  004748  0E00               	movlw	0
 30053  00474A                     L27:
 30054  00474A  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 30055                           
 30056                           ; BSR set to: 1
 30057                           ;usb_device_msd.c: 1492: }
 30058                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 30059                           
 30060                           ; BSR set to: 1
 30061  00474C  0E02               	movlw	2
 30062  00474E  0100               	movlb	0	; () banked
 30063  004750  19FA               	xorwf	_MSD_State& (0+255),w,b
 30064  004752  A4D8               	btfss	status,2,c
 30065  004754  D019               	goto	l10009
 30066                           
 30067                           ; BSR set to: 0
 30068                           ;usb_device_msd.c: 1496: {
 30069                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 30070  004756  0E2A               	movlw	42
 30071  004758  0100               	movlb	0	; () banked
 30072  00475A  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30073  00475C  B4D8               	btfsc	status,2,c
 30074  00475E  D005               	goto	l9995
 30075                           
 30076                           ; BSR set to: 0
 30077  004760  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 30078  004762  A4D8               	btfss	status,2,c
 30079  004764  D002               	goto	l9995
 30080  004766                     l9993:
 30081                           
 30082                           ; BSR set to: 0
 30083                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 30084  004766  0E05               	movlw	5
 30085  004768  D008               	goto	L29
 30086  00476A                     l9995:
 30087                           
 30088                           ; BSR set to: 0
 30089                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 30090  00476A  0100               	movlb	0	; () banked
 30091  00476C  05F8               	decf	_MSDHostNoData& (0+255),w,b
 30092  00476E  B4D8               	btfsc	status,2,c
 30093  004770  D014               	goto	l10015
 30094                           
 30095                           ; BSR set to: 0
 30096                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 30097                           
 30098                           ; BSR set to: 0
 30099                           
 30100                           ; BSR set to: 0
 30101                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 30102  004772  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 30103  004774  A4D8               	btfss	status,2,c
 30104  004776  D003               	goto	l10003
 30105  004778  D005               	goto	l10005
 30106  00477A                     L29:
 30107  00477A  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 30108  00477C  D01A               	goto	l10027
 30109  00477E                     l10003:
 30110                           
 30111                           ; BSR set to: 0
 30112                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 30113  00477E  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 30114  004780  A4D8               	btfss	status,2,c
 30115  004782  D7F1               	goto	l9993
 30116  004784                     l10005:
 30117                           
 30118                           ; BSR set to: 0
 30119                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 30120  004784  0E04               	movlw	4
 30121  004786  D7F9               	goto	L29
 30122  004788                     l10009:
 30123                           
 30124                           ; BSR set to: 0
 30125                           ;usb_device_msd.c: 1513: else
 30126                           ;usb_device_msd.c: 1514: {
 30127                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 30128  004788  0E2A               	movlw	42
 30129  00478A  0100               	movlb	0	; () banked
 30130  00478C  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30131  00478E  B4D8               	btfsc	status,2,c
 30132  004790  D00E               	goto	l10025
 30133                           
 30134                           ; BSR set to: 0
 30135                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 30136                           
 30137                           ; BSR set to: 0
 30138                           
 30139                           ; BSR set to: 0
 30140                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 30141  004792  0100               	movlb	0	; () banked
 30142  004794  05F8               	decf	_MSDHostNoData& (0+255),w,b
 30143  004796  A4D8               	btfss	status,2,c
 30144  004798  D002               	goto	l10017
 30145  00479A                     l10015:
 30146                           
 30147                           ; BSR set to: 0
 30148                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 30149  00479A  0E01               	movlw	1
 30150  00479C  D7EE               	goto	L29
 30151  00479E                     l10017:
 30152                           
 30153                           ; BSR set to: 0
 30154                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 30155  00479E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 30156  0047A0  B4D8               	btfsc	status,2,c
 30157  0047A2  D003               	goto	l10023
 30158                           
 30159                           ; BSR set to: 0
 30160                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 30161                           
 30162                           ; BSR set to: 0
 30163                           
 30164                           ; BSR set to: 0
 30165                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 30166  0047A4  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 30167  0047A6  A4D8               	btfss	status,2,c
 30168  0047A8  D002               	goto	l10025
 30169  0047AA                     l10023:
 30170                           
 30171                           ; BSR set to: 0
 30172                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 30173  0047AA  0E02               	movlw	2
 30174  0047AC  D7E6               	goto	L29
 30175  0047AE                     l10025:
 30176                           
 30177                           ; BSR set to: 0
 30178                           ;usb_device_msd.c: 1528: else
 30179                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 30180  0047AE  0E03               	movlw	3
 30181  0047B0  D7E4               	goto	L29
 30182  0047B2                     l10027:
 30183                           
 30184                           ; BSR set to: 0
 30185                           ;usb_device_msd.c: 1530: }
 30186                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 30187  0047B2  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 30188  0047B4  EC0E  F01F         	call	_MSDErrorHandler
 30189                           
 30190                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 30191  0047B8  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 30192  0047BA  0012               	return	
 30193  0047BC                     __end_of_MSDCheckForErrorCases:
 30194                           	opt stack 0
 30195                           tosu	equ	0xFFF
 30196                           tosh	equ	0xFFE
 30197                           tosl	equ	0xFFD
 30198                           pclath	equ	0xFFA
 30199                           tblptru	equ	0xFF8
 30200                           tblptrh	equ	0xFF7
 30201                           tblptrl	equ	0xFF6
 30202                           tablat	equ	0xFF5
 30203                           prodh	equ	0xFF4
 30204                           prodl	equ	0xFF3
 30205                           intcon	equ	0xFF2
 30206                           intcon2	equ	0xFF1
 30207                           intcon3	equ	0xFF0
 30208                           indf0	equ	0xFEF
 30209                           postinc0	equ	0xFEE
 30210                           fsr0h	equ	0xFEA
 30211                           fsr0l	equ	0xFE9
 30212                           wreg	equ	0xFE8
 30213                           indf1	equ	0xFE7
 30214                           postdec1	equ	0xFE5
 30215                           plusw1	equ	0xFE3
 30216                           fsr1h	equ	0xFE2
 30217                           fsr1l	equ	0xFE1
 30218                           indf2	equ	0xFDF
 30219                           postinc2	equ	0xFDE
 30220                           postdec2	equ	0xFDD
 30221                           plusw2	equ	0xFDB
 30222                           fsr2h	equ	0xFDA
 30223                           fsr2l	equ	0xFD9
 30224                           status	equ	0xFD8
 30225                           
 30226 ;; *************** function _MSDErrorHandler *****************
 30227 ;; Defined at:
 30228 ;;		line 1577 in file "usb_device_msd.c"
 30229 ;; Parameters:    Size  Location     Type
 30230 ;;  ErrorCase       1    wreg     unsigned char 
 30231 ;; Auto vars:     Size  Location     Type
 30232 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 30233 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 30234 ;; Return value:  Size  Location     Type
 30235 ;;                  1    wreg      void 
 30236 ;; Registers used:
 30237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30238 ;; Tracked objects:
 30239 ;;		On entry : 0/0
 30240 ;;		On exit  : 0/0
 30241 ;;		Unchanged: 0/0
 30242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30247 ;;Total ram usage:        2 bytes
 30248 ;; Hardware stack levels used:    1
 30249 ;; Hardware stack levels required when called:    1
 30250 ;; This function calls:
 30251 ;;		_ResetSenseData
 30252 ;;		_USBStallEndpoint
 30253 ;; This function is called by:
 30254 ;;		_MSDProcessCommandMediaAbsent
 30255 ;;		_MSDProcessCommandMediaPresent
 30256 ;;		_MSDCheckForErrorCases
 30257 ;; This function uses a non-reentrant model
 30258 ;;
 30259                           
 30260                           	psect	text135
 30261  003E1C                     __ptext135:
 30262                           	opt stack 0
 30263  003E1C                     _MSDErrorHandler:
 30264                           	opt stack 23
 30265                           
 30266                           ;incstack = 0
 30267                           ;MSDErrorHandler@ErrorCase stored from wreg
 30268  003E1C  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 30269                           
 30270                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 30271                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 30272  003E1E  0100               	movlb	0	; () banked
 30273  003E20  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 30274  003E22  0100               	movlb	0	; () banked
 30275  003E24  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 30276  003E26  B4D8               	btfsc	status,2,c
 30277  003E28  D007               	goto	l9795
 30278                           
 30279                           ; BSR set to: 0
 30280  003E2A  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 30281  003E2E  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 30282  003E32  0100               	movlb	0	; () banked
 30283  003E34  BEDF               	btfsc	indf2,7,c
 30284  003E36  0012               	return	
 30285  003E38                     l9795:
 30286                           
 30287                           ; BSR set to: 0
 30288  003E38  0100               	movlb	0	; () banked
 30289  003E3A  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 30290  003E3C  0100               	movlb	0	; () banked
 30291  003E3E  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 30292  003E40  B4D8               	btfsc	status,2,c
 30293  003E42  D007               	goto	l741
 30294                           
 30295                           ; BSR set to: 0
 30296  003E44  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 30297  003E48  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 30298  003E4C  0100               	movlb	0	; () banked
 30299  003E4E  BEDF               	btfsc	indf2,7,c
 30300  003E50  0012               	return	
 30301  003E52                     l741:
 30302                           
 30303                           ; BSR set to: 0
 30304                           ;usb_device_msd.c: 1586: }
 30305                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 30306  003E52  C0FA  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 30307                           
 30308                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 30309  003E56  0100               	movlb	0	; () banked
 30310  003E58  69F9               	setf	_MSDCommandState& (0+255),b
 30311                           
 30312                           ; BSR set to: 0
 30313                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 30314  003E5A  0E00               	movlw	0
 30315  003E5C  0101               	movlb	1	; () banked
 30316  003E5E  6F8C               	movwf	_MSDReadState& (0+255),b
 30317                           
 30318                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 30319  003E60  0E00               	movlw	0
 30320  003E62  0101               	movlb	1	; () banked
 30321  003E64  6F8B               	movwf	_MSDWriteState& (0+255),b
 30322                           
 30323                           ; BSR set to: 1
 30324                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 30325  003E66  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 30326  003E6A  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 30327  003E6E  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 30328  003E72  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 30329                           
 30330                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 30331  003E76  0E01               	movlw	1
 30332  003E78  010D               	movlb	13	; () banked
 30333  003E7A  6F8C               	movwf	140,b	;volatile
 30334                           
 30335                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 30336  003E7C  0E03               	movlw	3
 30337  003E7E  0100               	movlb	0	; () banked
 30338  003E80  6FFA               	movwf	_MSD_State& (0+255),b
 30339                           
 30340                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 30341  003E82  D049               	goto	l9835
 30342  003E84                     l9803:
 30343                           
 30344                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 30345  003E84  0E02               	movlw	2
 30346  003E86  010D               	movlb	13	; () banked
 30347  003E88  6F8C               	movwf	140,b	;volatile
 30348                           
 30349                           ;usb_device_msd.c: 1607: break;
 30350  003E8A  0012               	return	
 30351  003E8C                     l9805:
 30352                           
 30353                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 30354  003E8C  0E01               	movlw	1
 30355  003E8E  6E01               	movwf	USBStallEndpoint@dir,c
 30356  003E90  0E02               	movlw	2
 30357  003E92  EC5A  F022         	call	_USBStallEndpoint
 30358                           
 30359                           ;usb_device_msd.c: 1611: break;
 30360  003E96  0012               	return	
 30361  003E98                     l9807:
 30362                           
 30363                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 30364  003E98  0E02               	movlw	2
 30365  003E9A  010D               	movlb	13	; () banked
 30366  003E9C  6F8C               	movwf	140,b	;volatile
 30367                           
 30368                           ; BSR set to: 13
 30369                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 30370  003E9E  0E01               	movlw	1
 30371  003EA0  6E01               	movwf	USBStallEndpoint@dir,c
 30372  003EA2  0E02               	movlw	2
 30373  003EA4  EC5A  F022         	call	_USBStallEndpoint
 30374                           
 30375                           ;usb_device_msd.c: 1616: break;
 30376  003EA8  0012               	return	
 30377  003EAA                     l9811:
 30378                           
 30379                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 30380  003EAA  0E00               	movlw	0
 30381  003EAC  6E01               	movwf	USBStallEndpoint@dir,c
 30382  003EAE  0E02               	movlw	2
 30383  003EB0  EC5A  F022         	call	_USBStallEndpoint
 30384                           
 30385                           ;usb_device_msd.c: 1620: break;
 30386  003EB4  0012               	return	
 30387  003EB6                     l9813:
 30388                           
 30389                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 30390  003EB6  0E02               	movlw	2
 30391  003EB8  010D               	movlb	13	; () banked
 30392  003EBA  6F8C               	movwf	140,b	;volatile
 30393                           
 30394                           ; BSR set to: 13
 30395                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 30396  003EBC  0E00               	movlw	0
 30397  003EBE  6E01               	movwf	USBStallEndpoint@dir,c
 30398  003EC0  0E02               	movlw	2
 30399  003EC2  EC5A  F022         	call	_USBStallEndpoint
 30400                           
 30401                           ;usb_device_msd.c: 1625: break;
 30402  003EC6  0012               	return	
 30403  003EC8                     l9817:
 30404                           
 30405                           ;usb_device_msd.c: 1628: ResetSenseData();
 30406  003EC8  EC5B  F02F         	call	_ResetSenseData	;wreg free
 30407                           
 30408                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 30409  003ECC  0101               	movlb	1	; () banked
 30410  003ECE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 30411  003ED0  0BF0               	andlw	-16
 30412  003ED2  0905               	iorlw	5
 30413  003ED4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 30414                           
 30415                           ; BSR set to: 1
 30416                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 30417  003ED6  0E20               	movlw	32
 30418  003ED8  0101               	movlb	1	; () banked
 30419  003EDA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 30420                           
 30421                           ; BSR set to: 1
 30422                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 30423  003EDC  0E00               	movlw	0
 30424  003EDE  0101               	movlb	1	; () banked
 30425  003EE0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 30426                           
 30427                           ; BSR set to: 1
 30428                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 30429  003EE2  0E02               	movlw	2
 30430  003EE4  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 30431  003EE6  A4D8               	btfss	status,2,c
 30432  003EE8  D010               	goto	l9831
 30433                           
 30434                           ; BSR set to: 1
 30435  003EEA  0101               	movlb	1	; () banked
 30436  003EEC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 30437  003EEE  0101               	movlb	1	; () banked
 30438  003EF0  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 30439  003EF2  0101               	movlb	1	; () banked
 30440  003EF4  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 30441  003EF6  0101               	movlb	1	; () banked
 30442  003EF8  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 30443  003EFA  B4D8               	btfsc	status,2,c
 30444  003EFC  D006               	goto	l9831
 30445                           
 30446                           ; BSR set to: 1
 30447                           ;usb_device_msd.c: 1634: {
 30448                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 30449  003EFE  0E00               	movlw	0
 30450  003F00  6E01               	movwf	USBStallEndpoint@dir,c
 30451  003F02  0E02               	movlw	2
 30452  003F04  EC5A  F022         	call	_USBStallEndpoint
 30453                           
 30454                           ;usb_device_msd.c: 1636: }
 30455  003F08  0012               	return	
 30456  003F0A                     l9831:
 30457                           
 30458                           ;usb_device_msd.c: 1637: else
 30459                           ;usb_device_msd.c: 1638: {
 30460                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 30461  003F0A  0E01               	movlw	1
 30462  003F0C  6E01               	movwf	USBStallEndpoint@dir,c
 30463  003F0E  0E02               	movlw	2
 30464  003F10  EC5A  F022         	call	_USBStallEndpoint
 30465                           
 30466                           ;usb_device_msd.c: 1644: }
 30467                           
 30468                           ;usb_device_msd.c: 1643: break;
 30469                           
 30470                           ;usb_device_msd.c: 1642: default:
 30471                           
 30472                           ;usb_device_msd.c: 1640: }
 30473                           ;usb_device_msd.c: 1641: break;
 30474  003F14  0012               	return	
 30475  003F16                     l9835:
 30476  003F16  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 30477                           
 30478                           ; Switch size 1, requested type "space"
 30479                           ; Number of cases is 6, Range of values is 1 to 127
 30480                           ; switch strategies available:
 30481                           ; Name         Instructions Cycles
 30482                           ; simple_byte           19    10 (average)
 30483                           ;	Chosen strategy is simple_byte
 30484  003F18  0A01               	xorlw	1	; case 1
 30485  003F1A  B4D8               	btfsc	status,2,c
 30486  003F1C  D7B3               	goto	l9803
 30487  003F1E  0A03               	xorlw	3	; case 2
 30488  003F20  B4D8               	btfsc	status,2,c
 30489  003F22  D7B4               	goto	l9805
 30490  003F24  0A01               	xorlw	1	; case 3
 30491  003F26  B4D8               	btfsc	status,2,c
 30492  003F28  D7B7               	goto	l9807
 30493  003F2A  0A07               	xorlw	7	; case 4
 30494  003F2C  B4D8               	btfsc	status,2,c
 30495  003F2E  D7BD               	goto	l9811
 30496  003F30  0A01               	xorlw	1	; case 5
 30497  003F32  B4D8               	btfsc	status,2,c
 30498  003F34  D7C0               	goto	l9813
 30499  003F36  0A7A               	xorlw	122	; case 127
 30500  003F38  A4D8               	btfss	status,2,c
 30501  003F3A  0012               	return	
 30502  003F3C  D7C5               	goto	l9817
 30503  003F3E                     __end_of_MSDErrorHandler:
 30504                           	opt stack 0
 30505                           tosu	equ	0xFFF
 30506                           tosh	equ	0xFFE
 30507                           tosl	equ	0xFFD
 30508                           pclath	equ	0xFFA
 30509                           tblptru	equ	0xFF8
 30510                           tblptrh	equ	0xFF7
 30511                           tblptrl	equ	0xFF6
 30512                           tablat	equ	0xFF5
 30513                           prodh	equ	0xFF4
 30514                           prodl	equ	0xFF3
 30515                           intcon	equ	0xFF2
 30516                           intcon2	equ	0xFF1
 30517                           intcon3	equ	0xFF0
 30518                           indf0	equ	0xFEF
 30519                           postinc0	equ	0xFEE
 30520                           fsr0h	equ	0xFEA
 30521                           fsr0l	equ	0xFE9
 30522                           wreg	equ	0xFE8
 30523                           indf1	equ	0xFE7
 30524                           postdec1	equ	0xFE5
 30525                           plusw1	equ	0xFE3
 30526                           fsr1h	equ	0xFE2
 30527                           fsr1l	equ	0xFE1
 30528                           indf2	equ	0xFDF
 30529                           postinc2	equ	0xFDE
 30530                           postdec2	equ	0xFDD
 30531                           plusw2	equ	0xFDB
 30532                           fsr2h	equ	0xFDA
 30533                           fsr2l	equ	0xFD9
 30534                           status	equ	0xFD8
 30535                           
 30536 ;; *************** function _USBStallEndpoint *****************
 30537 ;; Defined at:
 30538 ;;		line 1073 in file "usb_device.c"
 30539 ;; Parameters:    Size  Location     Type
 30540 ;;  ep              1    wreg     unsigned char 
 30541 ;;  dir             1    0[COMRAM] unsigned char 
 30542 ;; Auto vars:     Size  Location     Type
 30543 ;;  ep              1    5[COMRAM] unsigned char 
 30544 ;;  p               2    6[COMRAM] PTR struct __BDT
 30545 ;;		 -> BDT(48), 
 30546 ;; Return value:  Size  Location     Type
 30547 ;;                  1    wreg      void 
 30548 ;; Registers used:
 30549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30550 ;; Tracked objects:
 30551 ;;		On entry : 0/0
 30552 ;;		On exit  : 0/0
 30553 ;;		Unchanged: 0/0
 30554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30555 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30556 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30558 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30559 ;;Total ram usage:        8 bytes
 30560 ;; Hardware stack levels used:    1
 30561 ;; This function calls:
 30562 ;;		Nothing
 30563 ;; This function is called by:
 30564 ;;		_MSDTasks
 30565 ;;		_MSDReadHandler
 30566 ;;		_MSDWriteHandler
 30567 ;;		_MSDErrorHandler
 30568 ;;		_MSDTransferTerminated
 30569 ;; This function uses a non-reentrant model
 30570 ;;
 30571                           
 30572                           	psect	text136
 30573  0044B4                     __ptext136:
 30574                           	opt stack 0
 30575  0044B4                     _USBStallEndpoint:
 30576                           	opt stack 27
 30577                           
 30578                           ;incstack = 0
 30579                           ;USBStallEndpoint@ep stored from wreg
 30580  0044B4  6E06               	movwf	USBStallEndpoint@ep,c
 30581                           
 30582                           ;usb_device.c: 1075: BDT_ENTRY *p;
 30583                           ;usb_device.c: 1077: if(ep == 0)
 30584  0044B6  5006               	movf	USBStallEndpoint@ep,w,c
 30585  0044B8  A4D8               	btfss	status,2,c
 30586  0044BA  D02B               	goto	l9615
 30587                           
 30588                           ;usb_device.c: 1078: {
 30589                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 30590  0044BC  EE20 F001          	lfsr	2,1
 30591  0044C0  505B               	movf	_pBDTEntryEP0OutNext,w,c
 30592  0044C2  26D9               	addwf	fsr2l,f,c
 30593  0044C4  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 30594  0044C6  22DA               	addwfc	fsr2h,f,c
 30595  0044C8  0E08               	movlw	8
 30596  0044CA  6EDF               	movwf	indf2,c
 30597                           
 30598                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30599  0044CC  EE20 F002          	lfsr	2,2
 30600  0044D0  505B               	movf	_pBDTEntryEP0OutNext,w,c
 30601  0044D2  26D9               	addwf	fsr2l,f,c
 30602  0044D4  505C               	movf	_pBDTEntryEP0OutNext+1,w,c
 30603  0044D6  22DA               	addwfc	fsr2h,f,c
 30604  0044D8  0E30               	movlw	48
 30605  0044DA  6EDE               	movwf	postinc2,c
 30606  0044DC  0E0D               	movlw	13
 30607  0044DE  6EDD               	movwf	postdec2,c
 30608                           
 30609                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 30610  0044E0  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30611  0044E4  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30612  0044E8  0E0C               	movlw	12
 30613  0044EA  6EDF               	movwf	indf2,c
 30614                           
 30615                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30616  0044EC  C05B  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30617  0044F0  C05C  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30618  0044F4  0E00               	movlw	0
 30619  0044F6  8EDB               	bsf	plusw2,7,c
 30620                           
 30621                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 30622  0044F8  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 30623  0044FC  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30624  004500  0E04               	movlw	4
 30625  004502  6EDF               	movwf	indf2,c
 30626                           
 30627                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 30628  004504  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 30629  004508  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 30630  00450C  0E00               	movlw	0
 30631  00450E  8EDB               	bsf	plusw2,7,c
 30632                           
 30633                           ;usb_device.c: 1089: }
 30634  004510  0012               	return	
 30635  004512                     l9615:
 30636                           
 30637                           ;usb_device.c: 1090: else
 30638                           ;usb_device.c: 1091: {
 30639                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 30640  004512  5001               	movf	USBStallEndpoint@dir,w,c
 30641  004514  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 30642  004516  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 30643  004518  90D8               	bcf	status,0,c
 30644  00451A  3602               	rlcf	??_USBStallEndpoint,f,c
 30645  00451C  3603               	rlcf	??_USBStallEndpoint+1,f,c
 30646  00451E  5006               	movf	USBStallEndpoint@ep,w,c
 30647  004520  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 30648  004522  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 30649  004524  90D8               	bcf	status,0,c
 30650  004526  3604               	rlcf	??_USBStallEndpoint+2,f,c
 30651  004528  3605               	rlcf	??_USBStallEndpoint+3,f,c
 30652  00452A  90D8               	bcf	status,0,c
 30653  00452C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 30654  00452E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 30655  004530  5002               	movf	??_USBStallEndpoint,w,c
 30656  004532  2604               	addwf	??_USBStallEndpoint+2,f,c
 30657  004534  5003               	movf	??_USBStallEndpoint+1,w,c
 30658  004536  2205               	addwfc	??_USBStallEndpoint+3,f,c
 30659  004538  90D8               	bcf	status,0,c
 30660  00453A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 30661  00453C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 30662  00453E  90D8               	bcf	status,0,c
 30663  004540  3604               	rlcf	??_USBStallEndpoint+2,f,c
 30664  004542  3605               	rlcf	??_USBStallEndpoint+3,f,c
 30665  004544  0E00               	movlw	0
 30666  004546  2404               	addwf	??_USBStallEndpoint+2,w,c
 30667  004548  6E07               	movwf	USBStallEndpoint@p,c
 30668  00454A  0E0D               	movlw	13
 30669  00454C  2005               	addwfc	??_USBStallEndpoint+3,w,c
 30670  00454E  6E08               	movwf	USBStallEndpoint@p+1,c
 30671                           
 30672                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 30673  004550  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 30674  004554  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 30675  004558  0E00               	movlw	0
 30676  00455A  84DB               	bsf	plusw2,2,c
 30677                           
 30678                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 30679  00455C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 30680  004560  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 30681  004564  0E00               	movlw	0
 30682  004566  8EDB               	bsf	plusw2,7,c
 30683                           
 30684                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 30685  004568  5006               	movf	USBStallEndpoint@ep,w,c
 30686  00456A  0D04               	mullw	4
 30687  00456C  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 30688  004570  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 30689  004574  5001               	movf	USBStallEndpoint@dir,w,c
 30690  004576  0D02               	mullw	2
 30691  004578  50F3               	movf	prodl,w,c
 30692  00457A  2602               	addwf	??_USBStallEndpoint,f,c
 30693  00457C  50F4               	movf	prodh,w,c
 30694  00457E  2203               	addwfc	??_USBStallEndpoint+1,f,c
 30695  004580  90D8               	bcf	status,0,c
 30696  004582  3602               	rlcf	??_USBStallEndpoint,f,c
 30697  004584  3603               	rlcf	??_USBStallEndpoint+1,f,c
 30698  004586  90D8               	bcf	status,0,c
 30699  004588  3602               	rlcf	??_USBStallEndpoint,f,c
 30700  00458A  3603               	rlcf	??_USBStallEndpoint+1,f,c
 30701  00458C  0E04               	movlw	4
 30702  00458E  2602               	addwf	??_USBStallEndpoint,f,c
 30703  004590  0E00               	movlw	0
 30704  004592  2203               	addwfc	??_USBStallEndpoint+1,f,c
 30705  004594  0E00               	movlw	0
 30706  004596  2402               	addwf	??_USBStallEndpoint,w,c
 30707  004598  6E07               	movwf	USBStallEndpoint@p,c
 30708  00459A  0E0D               	movlw	13
 30709  00459C  2003               	addwfc	??_USBStallEndpoint+1,w,c
 30710  00459E  6E08               	movwf	USBStallEndpoint@p+1,c
 30711                           
 30712                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 30713  0045A0  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 30714  0045A4  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 30715  0045A8  0E00               	movlw	0
 30716  0045AA  84DB               	bsf	plusw2,2,c
 30717                           
 30718                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 30719  0045AC  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 30720  0045B0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 30721  0045B4  0E00               	movlw	0
 30722  0045B6  8EDB               	bsf	plusw2,7,c
 30723  0045B8  0012               	return	
 30724  0045BA                     __end_of_USBStallEndpoint:
 30725                           	opt stack 0
 30726                           tosu	equ	0xFFF
 30727                           tosh	equ	0xFFE
 30728                           tosl	equ	0xFFD
 30729                           pclath	equ	0xFFA
 30730                           tblptru	equ	0xFF8
 30731                           tblptrh	equ	0xFF7
 30732                           tblptrl	equ	0xFF6
 30733                           tablat	equ	0xFF5
 30734                           prodh	equ	0xFF4
 30735                           prodl	equ	0xFF3
 30736                           intcon	equ	0xFF2
 30737                           intcon2	equ	0xFF1
 30738                           intcon3	equ	0xFF0
 30739                           indf0	equ	0xFEF
 30740                           postinc0	equ	0xFEE
 30741                           fsr0h	equ	0xFEA
 30742                           fsr0l	equ	0xFE9
 30743                           wreg	equ	0xFE8
 30744                           indf1	equ	0xFE7
 30745                           postdec1	equ	0xFE5
 30746                           plusw1	equ	0xFE3
 30747                           fsr1h	equ	0xFE2
 30748                           fsr1l	equ	0xFE1
 30749                           indf2	equ	0xFDF
 30750                           postinc2	equ	0xFDE
 30751                           postdec2	equ	0xFDD
 30752                           plusw2	equ	0xFDB
 30753                           fsr2h	equ	0xFDA
 30754                           fsr2l	equ	0xFD9
 30755                           status	equ	0xFD8
 30756                           
 30757 ;; *************** function _ResetSenseData *****************
 30758 ;; Defined at:
 30759 ;;		line 1373 in file "usb_device_msd.c"
 30760 ;; Parameters:    Size  Location     Type
 30761 ;;		None
 30762 ;; Auto vars:     Size  Location     Type
 30763 ;;		None
 30764 ;; Return value:  Size  Location     Type
 30765 ;;                  1    wreg      void 
 30766 ;; Registers used:
 30767 ;;		wreg, status,2
 30768 ;; Tracked objects:
 30769 ;;		On entry : 0/0
 30770 ;;		On exit  : 0/0
 30771 ;;		Unchanged: 0/0
 30772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30777 ;;Total ram usage:        0 bytes
 30778 ;; Hardware stack levels used:    1
 30779 ;; This function calls:
 30780 ;;		Nothing
 30781 ;; This function is called by:
 30782 ;;		_USBMSDInit
 30783 ;;		_MSDProcessCommandMediaAbsent
 30784 ;;		_MSDProcessCommandMediaPresent
 30785 ;;		_MSDErrorHandler
 30786 ;; This function uses a non-reentrant model
 30787 ;;
 30788                           
 30789                           	psect	text137
 30790  005EB6                     __ptext137:
 30791                           	opt stack 0
 30792  005EB6                     _ResetSenseData:
 30793                           	opt stack 26
 30794                           
 30795                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 30796                           
 30797                           ;incstack = 0
 30798  005EB6  0101               	movlb	1	; () banked
 30799  005EB8  911F               	bcf	_gblSenseData& (0+255),0,b
 30800  005EBA  931F               	bcf	_gblSenseData& (0+255),1,b
 30801  005EBC  951F               	bcf	_gblSenseData& (0+255),2,b
 30802  005EBE  971F               	bcf	_gblSenseData& (0+255),3,b
 30803  005EC0  891F               	bsf	_gblSenseData& (0+255),4,b
 30804  005EC2  8B1F               	bsf	_gblSenseData& (0+255),5,b
 30805  005EC4  8D1F               	bsf	_gblSenseData& (0+255),6,b
 30806                           
 30807                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 30808  005EC6  0101               	movlb	1	; () banked
 30809  005EC8  9F1F               	bcf	_gblSenseData& (0+255),7,b
 30810                           
 30811                           ; BSR set to: 1
 30812                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 30813  005ECA  0E00               	movlw	0
 30814  005ECC  0101               	movlb	1	; () banked
 30815  005ECE  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 30816                           
 30817                           ; BSR set to: 1
 30818                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 30819  005ED0  0101               	movlb	1	; () banked
 30820  005ED2  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 30821  005ED4  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 30822  005ED6  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 30823  005ED8  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 30824                           
 30825                           ; BSR set to: 1
 30826                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 30827  005EDA  0101               	movlb	1	; () banked
 30828  005EDC  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 30829                           
 30830                           ; BSR set to: 1
 30831                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 30832  005EDE  0101               	movlb	1	; () banked
 30833  005EE0  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 30834                           
 30835                           ; BSR set to: 1
 30836                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 30837  005EE2  0101               	movlb	1	; () banked
 30838  005EE4  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 30839                           
 30840                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 30841  005EE6  0E00               	movlw	0
 30842  005EE8  0101               	movlb	1	; () banked
 30843  005EEA  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 30844                           
 30845                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 30846  005EEC  0E00               	movlw	0
 30847  005EEE  0101               	movlb	1	; () banked
 30848  005EF0  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 30849                           
 30850                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 30851  005EF2  0E00               	movlw	0
 30852  005EF4  0101               	movlb	1	; () banked
 30853  005EF6  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 30854                           
 30855                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 30856  005EF8  0E00               	movlw	0
 30857  005EFA  0101               	movlb	1	; () banked
 30858  005EFC  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 30859                           
 30860                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 30861  005EFE  0E0A               	movlw	10
 30862  005F00  0101               	movlb	1	; () banked
 30863  005F02  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 30864                           
 30865                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 30866  005F04  0E00               	movlw	0
 30867  005F06  0101               	movlb	1	; () banked
 30868  005F08  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 30869  005F0A  0E00               	movlw	0
 30870  005F0C  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 30871  005F0E  0E00               	movlw	0
 30872  005F10  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 30873  005F12  0E00               	movlw	0
 30874  005F14  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 30875                           
 30876                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 30877  005F16  0E00               	movlw	0
 30878  005F18  0101               	movlb	1	; () banked
 30879  005F1A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 30880                           
 30881                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 30882  005F1C  0E00               	movlw	0
 30883  005F1E  0101               	movlb	1	; () banked
 30884  005F20  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 30885                           
 30886                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 30887  005F22  0E00               	movlw	0
 30888  005F24  0101               	movlb	1	; () banked
 30889  005F26  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 30890                           
 30891                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 30892  005F28  0E00               	movlw	0
 30893  005F2A  0101               	movlb	1	; () banked
 30894  005F2C  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 30895                           
 30896                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 30897  005F2E  0E00               	movlw	0
 30898  005F30  0101               	movlb	1	; () banked
 30899  005F32  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 30900                           
 30901                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 30902  005F34  0E00               	movlw	0
 30903  005F36  0101               	movlb	1	; () banked
 30904  005F38  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 30905                           
 30906                           ; BSR set to: 1
 30907  005F3A  0012               	return		;funcret
 30908  005F3C                     __end_of_ResetSenseData:
 30909                           	opt stack 0
 30910                           tosu	equ	0xFFF
 30911                           tosh	equ	0xFFE
 30912                           tosl	equ	0xFFD
 30913                           pclath	equ	0xFFA
 30914                           tblptru	equ	0xFF8
 30915                           tblptrh	equ	0xFF7
 30916                           tblptrl	equ	0xFF6
 30917                           tablat	equ	0xFF5
 30918                           prodh	equ	0xFF4
 30919                           prodl	equ	0xFF3
 30920                           intcon	equ	0xFF2
 30921                           intcon2	equ	0xFF1
 30922                           intcon3	equ	0xFF0
 30923                           indf0	equ	0xFEF
 30924                           postinc0	equ	0xFEE
 30925                           fsr0h	equ	0xFEA
 30926                           fsr0l	equ	0xFE9
 30927                           wreg	equ	0xFE8
 30928                           indf1	equ	0xFE7
 30929                           postdec1	equ	0xFE5
 30930                           plusw1	equ	0xFE3
 30931                           fsr1h	equ	0xFE2
 30932                           fsr1l	equ	0xFE1
 30933                           indf2	equ	0xFDF
 30934                           postinc2	equ	0xFDE
 30935                           postdec2	equ	0xFDD
 30936                           plusw2	equ	0xFDB
 30937                           fsr2h	equ	0xFDA
 30938                           fsr2l	equ	0xFD9
 30939                           status	equ	0xFD8
 30940                           
 30941 ;; *************** function _ExternalFlash_SectorRead *****************
 30942 ;; Defined at:
 30943 ;;		line 64 in file "external_flash.c"
 30944 ;; Parameters:    Size  Location     Type
 30945 ;;  config          2   43[COMRAM] PTR void 
 30946 ;;		 -> NULL(0), 
 30947 ;;  sector_addr     4   45[COMRAM] unsigned long 
 30948 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 30949 ;;		 -> msd_buffer(512), 
 30950 ;; Auto vars:     Size  Location     Type
 30951 ;;  page            2   51[COMRAM] unsigned int 
 30952 ;; Return value:  Size  Location     Type
 30953 ;;                  1    wreg      unsigned char 
 30954 ;; Registers used:
 30955 ;;		wreg, status,2, status,0, cstack
 30956 ;; Tracked objects:
 30957 ;;		On entry : 0/0
 30958 ;;		On exit  : 0/0
 30959 ;;		Unchanged: 0/0
 30960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30961 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30964 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30965 ;;Total ram usage:       10 bytes
 30966 ;; Hardware stack levels used:    1
 30967 ;; Hardware stack levels required when called:    5
 30968 ;; This function calls:
 30969 ;;		_flash_page_read
 30970 ;; This function is called by:
 30971 ;;		_MSDReadHandler
 30972 ;; This function uses a non-reentrant model
 30973 ;;
 30974                           
 30975                           	psect	text138
 30976  007324                     __ptext138:
 30977                           	opt stack 0
 30978  007324                     _ExternalFlash_SectorRead:
 30979                           	opt stack 20
 30980                           
 30981                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 30982                           
 30983                           ; BSR set to: 1
 30984                           ;incstack = 0
 30985  007324  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 30986  007328  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 30987                           
 30988                           ;external_flash.c: 70: if(sector_addr >= 4096)
 30989  00732C  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 30990  00732E  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 30991  007330  E104               	bnz	u6900
 30992  007332  0E10               	movlw	16
 30993  007334  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 30994  007336  A0D8               	btfss	status,0,c
 30995  007338  D002               	goto	l10081
 30996  00733A                     u6900:
 30997                           
 30998                           ;external_flash.c: 71: {
 30999                           ;external_flash.c: 72: return 0;
 31000  00733A  0E00               	movlw	0
 31001  00733C  0012               	return	
 31002  00733E                     l10081:
 31003                           
 31004                           ;external_flash.c: 73: }
 31005                           ;external_flash.c: 76: flash_page_read(page, buffer);
 31006  00733E  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 31007  007342  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 31008  007346  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 31009  00734A  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 31010  00734E  ECA8  F03A         	call	_flash_page_read	;wreg free
 31011                           
 31012                           ;external_flash.c: 78: return 1;
 31013  007352  0E01               	movlw	1
 31014  007354  0012               	return	
 31015  007356                     __end_of_ExternalFlash_SectorRead:
 31016                           	opt stack 0
 31017                           tosu	equ	0xFFF
 31018                           tosh	equ	0xFFE
 31019                           tosl	equ	0xFFD
 31020                           pclath	equ	0xFFA
 31021                           tblptru	equ	0xFF8
 31022                           tblptrh	equ	0xFF7
 31023                           tblptrl	equ	0xFF6
 31024                           tablat	equ	0xFF5
 31025                           prodh	equ	0xFF4
 31026                           prodl	equ	0xFF3
 31027                           intcon	equ	0xFF2
 31028                           intcon2	equ	0xFF1
 31029                           intcon3	equ	0xFF0
 31030                           indf0	equ	0xFEF
 31031                           postinc0	equ	0xFEE
 31032                           fsr0h	equ	0xFEA
 31033                           fsr0l	equ	0xFE9
 31034                           wreg	equ	0xFE8
 31035                           indf1	equ	0xFE7
 31036                           postdec1	equ	0xFE5
 31037                           plusw1	equ	0xFE3
 31038                           fsr1h	equ	0xFE2
 31039                           fsr1l	equ	0xFE1
 31040                           indf2	equ	0xFDF
 31041                           postinc2	equ	0xFDE
 31042                           postdec2	equ	0xFDD
 31043                           plusw2	equ	0xFDB
 31044                           fsr2h	equ	0xFDA
 31045                           fsr2l	equ	0xFD9
 31046                           status	equ	0xFD8
 31047                           
 31048 ;; *************** function _flash_page_read *****************
 31049 ;; Defined at:
 31050 ;;		line 539 in file "flash.c"
 31051 ;; Parameters:    Size  Location     Type
 31052 ;;  page            2   39[COMRAM] unsigned int 
 31053 ;;  data            2   41[COMRAM] PTR unsigned char 
 31054 ;;		 -> buffer(512), msd_buffer(512), 
 31055 ;; Auto vars:     Size  Location     Type
 31056 ;;		None
 31057 ;; Return value:  Size  Location     Type
 31058 ;;                  1    wreg      void 
 31059 ;; Registers used:
 31060 ;;		wreg, status,2, status,0, cstack
 31061 ;; Tracked objects:
 31062 ;;		On entry : 0/0
 31063 ;;		On exit  : 0/0
 31064 ;;		Unchanged: 0/0
 31065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31070 ;;Total ram usage:        4 bytes
 31071 ;; Hardware stack levels used:    1
 31072 ;; Hardware stack levels required when called:    4
 31073 ;; This function calls:
 31074 ;;		_flash_partial_read
 31075 ;; This function is called by:
 31076 ;;		_ExternalFlash_SectorRead
 31077 ;;		_fat_get_format_status
 31078 ;; This function uses a non-reentrant model
 31079 ;;
 31080                           
 31081                           	psect	text139
 31082  007550                     __ptext139:
 31083                           	opt stack 0
 31084  007550                     _flash_page_read:
 31085                           	opt stack 23
 31086                           
 31087                           ;flash.c: 542: flash_partial_read(page, 0, 512, data);
 31088                           
 31089                           ;incstack = 0
 31090  007550  C028  F014         	movff	flash_page_read@page,flash_partial_read@page
 31091  007554  C029  F015         	movff	flash_page_read@page+1,flash_partial_read@page+1
 31092  007558  0E00               	movlw	0
 31093  00755A  6E17               	movwf	flash_partial_read@start+1,c
 31094  00755C  0E00               	movlw	0
 31095  00755E  6E16               	movwf	flash_partial_read@start,c
 31096  007560  0E02               	movlw	2
 31097  007562  6E19               	movwf	flash_partial_read@length+1,c
 31098  007564  0E00               	movlw	0
 31099  007566  6E18               	movwf	flash_partial_read@length,c
 31100  007568  C02A  F01A         	movff	flash_page_read@data,flash_partial_read@data
 31101  00756C  C02B  F01B         	movff	flash_page_read@data+1,flash_partial_read@data+1
 31102  007570  EC97  F031         	call	_flash_partial_read	;wreg free
 31103  007574  0012               	return		;funcret
 31104  007576                     __end_of_flash_page_read:
 31105                           	opt stack 0
 31106                           tosu	equ	0xFFF
 31107                           tosh	equ	0xFFE
 31108                           tosl	equ	0xFFD
 31109                           pclath	equ	0xFFA
 31110                           tblptru	equ	0xFF8
 31111                           tblptrh	equ	0xFF7
 31112                           tblptrl	equ	0xFF6
 31113                           tablat	equ	0xFF5
 31114                           prodh	equ	0xFF4
 31115                           prodl	equ	0xFF3
 31116                           intcon	equ	0xFF2
 31117                           intcon2	equ	0xFF1
 31118                           intcon3	equ	0xFF0
 31119                           indf0	equ	0xFEF
 31120                           postinc0	equ	0xFEE
 31121                           fsr0h	equ	0xFEA
 31122                           fsr0l	equ	0xFE9
 31123                           wreg	equ	0xFE8
 31124                           indf1	equ	0xFE7
 31125                           postdec1	equ	0xFE5
 31126                           plusw1	equ	0xFE3
 31127                           fsr1h	equ	0xFE2
 31128                           fsr1l	equ	0xFE1
 31129                           indf2	equ	0xFDF
 31130                           postinc2	equ	0xFDE
 31131                           postdec2	equ	0xFDD
 31132                           plusw2	equ	0xFDB
 31133                           fsr2h	equ	0xFDA
 31134                           fsr2l	equ	0xFD9
 31135                           status	equ	0xFD8
 31136                           
 31137 ;; *************** function _flash_partial_read *****************
 31138 ;; Defined at:
 31139 ;;		line 565 in file "flash.c"
 31140 ;; Parameters:    Size  Location     Type
 31141 ;;  page            2   19[COMRAM] unsigned int 
 31142 ;;  start           2   21[COMRAM] unsigned int 
 31143 ;;  length          2   23[COMRAM] unsigned int 
 31144 ;;  data            2   25[COMRAM] PTR unsigned char 
 31145 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 31146 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 31147 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 31148 ;;		 -> _root_is_available@first_byte(1), msd_buffer(512), 
 31149 ;; Auto vars:     Size  Location     Type
 31150 ;;  command         4   31[COMRAM] unsigned char [4]
 31151 ;;  address         4   35[COMRAM] unsigned long 
 31152 ;; Return value:  Size  Location     Type
 31153 ;;                  1    wreg      void 
 31154 ;; Registers used:
 31155 ;;		wreg, status,2, status,0, cstack
 31156 ;; Tracked objects:
 31157 ;;		On entry : 0/0
 31158 ;;		On exit  : 0/0
 31159 ;;		Unchanged: 0/0
 31160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31161 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31162 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31164 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31165 ;;Total ram usage:       20 bytes
 31166 ;; Hardware stack levels used:    1
 31167 ;; Hardware stack levels required when called:    3
 31168 ;; This function calls:
 31169 ;;		__flash_spi_tx_rx
 31170 ;;		_flash_is_busy
 31171 ;; This function is called by:
 31172 ;;		_flash_page_read
 31173 ;;		__read_fat
 31174 ;;		__read_root
 31175 ;;		_fat_find_file
 31176 ;;		_fat_get_file_size
 31177 ;;		_fat_read_from_file
 31178 ;;		__root_is_available
 31179 ;;		__get_empty_cluster
 31180 ;;		_fat_get_empty_clusters
 31181 ;;		__get_first_cluster
 31182 ;;		__get_file_size
 31183 ;; This function uses a non-reentrant model
 31184 ;;
 31185                           
 31186                           	psect	text140
 31187  00632E                     __ptext140:
 31188                           	opt stack 0
 31189  00632E                     _flash_partial_read:
 31190                           	opt stack 23
 31191  00632E                     l9709:
 31192  00632E  ECEF  F03A         	call	_flash_is_busy	;wreg free
 31193  006332  0900               	iorlw	0
 31194  006334  A4D8               	btfss	status,2,c
 31195  006336  D7FB               	goto	l9709
 31196                           
 31197                           ;flash.c: 574: address = page;
 31198  006338  C014  F024         	movff	flash_partial_read@page,flash_partial_read@address
 31199  00633C  C015  F025         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 31200  006340  6A26               	clrf	flash_partial_read@address+2,c
 31201  006342  6A27               	clrf	flash_partial_read@address+3,c
 31202                           
 31203                           ;flash.c: 575: address <<= 9;
 31204  006344  0E09               	movlw	9
 31205  006346                     u6395:
 31206  006346  90D8               	bcf	status,0,c
 31207  006348  3624               	rlcf	flash_partial_read@address,f,c
 31208  00634A  3625               	rlcf	flash_partial_read@address+1,f,c
 31209  00634C  3626               	rlcf	flash_partial_read@address+2,f,c
 31210  00634E  3627               	rlcf	flash_partial_read@address+3,f,c
 31211  006350  2EE8               	decfsz	wreg,f,c
 31212  006352  D7F9               	goto	u6395
 31213                           
 31214                           ;flash.c: 576: address |= start;
 31215  006354  5016               	movf	flash_partial_read@start,w,c
 31216  006356  6E1C               	movwf	??_flash_partial_read& (0+255),c
 31217  006358  5017               	movf	flash_partial_read@start+1,w,c
 31218  00635A  6E1D               	movwf	(??_flash_partial_read+1)& (0+255),c
 31219  00635C  6A1E               	clrf	(??_flash_partial_read+2)& (0+255),c
 31220  00635E  6A1F               	clrf	(??_flash_partial_read+3)& (0+255),c
 31221  006360  501C               	movf	??_flash_partial_read,w,c
 31222  006362  1224               	iorwf	flash_partial_read@address,f,c
 31223  006364  501D               	movf	??_flash_partial_read+1,w,c
 31224  006366  1225               	iorwf	flash_partial_read@address+1,f,c
 31225  006368  501E               	movf	??_flash_partial_read+2,w,c
 31226  00636A  1226               	iorwf	flash_partial_read@address+2,f,c
 31227  00636C  501F               	movf	??_flash_partial_read+3,w,c
 31228  00636E  1227               	iorwf	flash_partial_read@address+3,f,c
 31229                           
 31230                           ;flash.c: 579: command[0] = 0x03;
 31231  006370  0E03               	movlw	3
 31232  006372  6E20               	movwf	flash_partial_read@command,c
 31233                           
 31234                           ;flash.c: 580: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 31235  006374  C026  F021         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 31236                           
 31237                           ;flash.c: 581: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 31238  006378  5025               	movf	flash_partial_read@address+1,w,c
 31239  00637A  6E22               	movwf	flash_partial_read@command+2,c
 31240                           
 31241                           ;flash.c: 582: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 31242  00637C  C024  F023         	movff	flash_partial_read@address,flash_partial_read@command+3
 31243                           
 31244                           ;flash.c: 585: _flash_spi_tx_rx(command, 4, data, length);
 31245  006380  0E20               	movlw	low flash_partial_read@command
 31246  006382  6E01               	movwf	__flash_spi_tx_rx@command,c
 31247  006384  0E00               	movlw	high flash_partial_read@command
 31248  006386  6E02               	movwf	__flash_spi_tx_rx@command+1,c
 31249  006388  0E00               	movlw	0
 31250  00638A  6E04               	movwf	__flash_spi_tx_rx@command_length+1,c
 31251  00638C  0E04               	movlw	4
 31252  00638E  6E03               	movwf	__flash_spi_tx_rx@command_length,c
 31253  006390  C01A  F005         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 31254  006394  C01B  F006         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 31255  006398  C018  F007         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 31256  00639C  C019  F008         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 31257  0063A0  ECFA  F02D         	call	__flash_spi_tx_rx	;wreg free
 31258  0063A4  0012               	return		;funcret
 31259  0063A6                     __end_of_flash_partial_read:
 31260                           	opt stack 0
 31261                           tosu	equ	0xFFF
 31262                           tosh	equ	0xFFE
 31263                           tosl	equ	0xFFD
 31264                           pclath	equ	0xFFA
 31265                           tblptru	equ	0xFF8
 31266                           tblptrh	equ	0xFF7
 31267                           tblptrl	equ	0xFF6
 31268                           tablat	equ	0xFF5
 31269                           prodh	equ	0xFF4
 31270                           prodl	equ	0xFF3
 31271                           intcon	equ	0xFF2
 31272                           intcon2	equ	0xFF1
 31273                           intcon3	equ	0xFF0
 31274                           indf0	equ	0xFEF
 31275                           postinc0	equ	0xFEE
 31276                           fsr0h	equ	0xFEA
 31277                           fsr0l	equ	0xFE9
 31278                           wreg	equ	0xFE8
 31279                           indf1	equ	0xFE7
 31280                           postdec1	equ	0xFE5
 31281                           plusw1	equ	0xFE3
 31282                           fsr1h	equ	0xFE2
 31283                           fsr1l	equ	0xFE1
 31284                           indf2	equ	0xFDF
 31285                           postinc2	equ	0xFDE
 31286                           postdec2	equ	0xFDD
 31287                           plusw2	equ	0xFDB
 31288                           fsr2h	equ	0xFDA
 31289                           fsr2l	equ	0xFD9
 31290                           status	equ	0xFD8
 31291                           
 31292 ;; *************** function _flash_is_busy *****************
 31293 ;; Defined at:
 31294 ;;		line 476 in file "flash.c"
 31295 ;; Parameters:    Size  Location     Type
 31296 ;;		None
 31297 ;; Auto vars:     Size  Location     Type
 31298 ;;  status          2   17[COMRAM] unsigned int 
 31299 ;; Return value:  Size  Location     Type
 31300 ;;                  1    wreg      unsigned char 
 31301 ;; Registers used:
 31302 ;;		wreg, status,2, status,0, cstack
 31303 ;; Tracked objects:
 31304 ;;		On entry : 0/0
 31305 ;;		On exit  : 0/0
 31306 ;;		Unchanged: 0/0
 31307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31312 ;;Total ram usage:        2 bytes
 31313 ;; Hardware stack levels used:    1
 31314 ;; Hardware stack levels required when called:    2
 31315 ;; This function calls:
 31316 ;;		__flash_get_status
 31317 ;;		__flash_wakeup
 31318 ;; This function is called by:
 31319 ;;		__flash_set_page_size
 31320 ;;		__flash_compare_page_to_buffer
 31321 ;;		__flash_write_to_buffer
 31322 ;;		__flash_write_page_from_buffer
 31323 ;;		_flash_partial_read
 31324 ;;		__flash_copy_page_to_buffer
 31325 ;;		__flash_erase_page
 31326 ;;		_flash_set_power_state
 31327 ;;		_flash_partial_write
 31328 ;; This function uses a non-reentrant model
 31329 ;;
 31330                           
 31331                           	psect	text141
 31332  0075DE                     __ptext141:
 31333                           	opt stack 0
 31334  0075DE                     _flash_is_busy:
 31335                           	opt stack 25
 31336                           
 31337                           ;flash.c: 479: if(power_state!=FLASH_POWER_STATE_NORMAL)
 31338                           
 31339                           ;incstack = 0
 31340  0075DE  0101               	movlb	1	; () banked
 31341  0075E0  5182               	movf	_power_state& (0+255),w,b
 31342  0075E2  A4D8               	btfss	status,2,c
 31343                           
 31344                           ; BSR set to: 1
 31345                           ;flash.c: 480: {
 31346                           ;flash.c: 481: _flash_wakeup();
 31347  0075E4  EC3F  F035         	call	__flash_wakeup	;wreg free
 31348                           
 31349                           ;flash.c: 482: }
 31350                           ;flash.c: 485: uint16_t status = _flash_get_status();
 31351  0075E8  ECAB  F039         	call	__flash_get_status	;wreg free
 31352  0075EC  C00D  F012         	movff	?__flash_get_status,flash_is_busy@status
 31353  0075F0  C00E  F013         	movff	?__flash_get_status+1,flash_is_busy@status+1
 31354                           
 31355                           ;flash.c: 486: if(status & 0b0000000010000000)
 31356  0075F4  AE12               	btfss	flash_is_busy@status,7,c
 31357  0075F6  D002               	goto	l9555
 31358                           
 31359                           ;flash.c: 487: {
 31360                           ;flash.c: 489: return 0;
 31361  0075F8  0E00               	movlw	0
 31362                           
 31363                           ;flash.c: 490: }
 31364  0075FA  0012               	return	
 31365  0075FC                     l9555:
 31366                           
 31367                           ;flash.c: 491: else
 31368                           ;flash.c: 492: {
 31369                           ;flash.c: 494: return 1;
 31370  0075FC  0E01               	movlw	1
 31371  0075FE  0012               	return	
 31372  007600                     __end_of_flash_is_busy:
 31373                           	opt stack 0
 31374                           tosu	equ	0xFFF
 31375                           tosh	equ	0xFFE
 31376                           tosl	equ	0xFFD
 31377                           pclath	equ	0xFFA
 31378                           tblptru	equ	0xFF8
 31379                           tblptrh	equ	0xFF7
 31380                           tblptrl	equ	0xFF6
 31381                           tablat	equ	0xFF5
 31382                           prodh	equ	0xFF4
 31383                           prodl	equ	0xFF3
 31384                           intcon	equ	0xFF2
 31385                           intcon2	equ	0xFF1
 31386                           intcon3	equ	0xFF0
 31387                           indf0	equ	0xFEF
 31388                           postinc0	equ	0xFEE
 31389                           fsr0h	equ	0xFEA
 31390                           fsr0l	equ	0xFE9
 31391                           wreg	equ	0xFE8
 31392                           indf1	equ	0xFE7
 31393                           postdec1	equ	0xFE5
 31394                           plusw1	equ	0xFE3
 31395                           fsr1h	equ	0xFE2
 31396                           fsr1l	equ	0xFE1
 31397                           indf2	equ	0xFDF
 31398                           postinc2	equ	0xFDE
 31399                           postdec2	equ	0xFDD
 31400                           plusw2	equ	0xFDB
 31401                           fsr2h	equ	0xFDA
 31402                           fsr2l	equ	0xFD9
 31403                           status	equ	0xFD8
 31404                           
 31405 ;; *************** function __flash_wakeup *****************
 31406 ;; Defined at:
 31407 ;;		line 289 in file "flash.c"
 31408 ;; Parameters:    Size  Location     Type
 31409 ;;		None
 31410 ;; Auto vars:     Size  Location     Type
 31411 ;;  command         1    8[COMRAM] unsigned char 
 31412 ;; Return value:  Size  Location     Type
 31413 ;;                  1    wreg      void 
 31414 ;; Registers used:
 31415 ;;		wreg, status,2, status,0, cstack
 31416 ;; Tracked objects:
 31417 ;;		On entry : 0/0
 31418 ;;		On exit  : 0/0
 31419 ;;		Unchanged: 0/0
 31420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31425 ;;Total ram usage:        1 bytes
 31426 ;; Hardware stack levels used:    1
 31427 ;; Hardware stack levels required when called:    1
 31428 ;; This function calls:
 31429 ;;		__flash_spi_tx
 31430 ;; This function is called by:
 31431 ;;		_flash_is_busy
 31432 ;;		_flash_set_power_state
 31433 ;; This function uses a non-reentrant model
 31434 ;;
 31435                           
 31436                           	psect	text142
 31437  006A7E                     __ptext142:
 31438                           	opt stack 0
 31439  006A7E                     __flash_wakeup:
 31440                           	opt stack 25
 31441                           
 31442                           ;flash.c: 291: uint8_t command;
 31443                           ;flash.c: 293: switch(power_state)
 31444                           
 31445                           ;incstack = 0
 31446  006A7E  D021               	goto	l9517
 31447  006A80                     l9501:
 31448                           
 31449                           ;flash.c: 296: command = 0xAB;
 31450  006A80  0EAB               	movlw	171
 31451  006A82  6E09               	movwf	__flash_wakeup@command,c
 31452                           
 31453                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 31454  006A84  0E09               	movlw	low __flash_wakeup@command
 31455  006A86  6E01               	movwf	__flash_spi_tx@data,c
 31456  006A88  0E00               	movlw	high __flash_wakeup@command
 31457  006A8A  6E02               	movwf	__flash_spi_tx@data+1,c
 31458  006A8C  0E00               	movlw	0
 31459  006A8E  6E04               	movwf	__flash_spi_tx@length+1,c
 31460  006A90  0E01               	movlw	1
 31461  006A92  6E03               	movwf	__flash_spi_tx@length,c
 31462  006A94  EC66  F034         	call	__flash_spi_tx	;wreg free
 31463                           
 31464                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 31465  006A98  0E17               	movlw	23
 31466  006A9A                     u12207:
 31467  006A9A  2EE8               	decfsz	wreg,f,c
 31468  006A9C  D7FE               	bra	u12207
 31469  006A9E  F000               	nop	
 31470                           
 31471                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 31472  006AA0  0E00               	movlw	0
 31473  006AA2  0101               	movlb	1	; () banked
 31474  006AA4  6F82               	movwf	_power_state& (0+255),b
 31475                           
 31476                           ;flash.c: 300: break;
 31477  006AA6  0012               	return	
 31478  006AA8                     l2087:
 31479                           
 31480                           ; BSR set to: 1
 31481                           ;flash.c: 305: LATDbits.LD7 = 0;
 31482  006AA8  9E8C               	bcf	3980,7,c	;volatile
 31483                           
 31484                           ; BSR set to: 1
 31485                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 31486  006AAA  0E0D               	movlw	13
 31487  006AAC                     u12217:
 31488  006AAC  2EE8               	decfsz	wreg,f,c
 31489  006AAE  D7FE               	bra	u12217
 31490  006AB0  F000               	nop	
 31491                           
 31492                           ;flash.c: 307: LATDbits.LD7 = 1;
 31493  006AB2  8E8C               	bsf	3980,7,c	;volatile
 31494                           
 31495                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 31496  006AB4  0E50               	movlw	80
 31497  006AB6                     u12227:
 31498  006AB6  2EE8               	decfsz	wreg,f,c
 31499  006AB8  D7FE               	bra	u12227
 31500                           
 31501                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 31502  006ABA  0E00               	movlw	0
 31503  006ABC  0101               	movlb	1	; () banked
 31504  006ABE  6F82               	movwf	_power_state& (0+255),b
 31505                           
 31506                           ; BSR set to: 1
 31507                           ;flash.c: 311: }
 31508                           
 31509                           ;flash.c: 310: break;
 31510  006AC0  0012               	return	
 31511  006AC2                     l9517:
 31512  006AC2  0101               	movlb	1	; () banked
 31513  006AC4  5182               	movf	_power_state& (0+255),w,b
 31514                           
 31515                           ; Switch size 1, requested type "space"
 31516                           ; Number of cases is 2, Range of values is 1 to 2
 31517                           ; switch strategies available:
 31518                           ; Name         Instructions Cycles
 31519                           ; simple_byte            7     4 (average)
 31520                           ;	Chosen strategy is simple_byte
 31521  006AC6  0A01               	xorlw	1	; case 1
 31522  006AC8  B4D8               	btfsc	status,2,c
 31523  006ACA  D7DA               	goto	l9501
 31524  006ACC  0A03               	xorlw	3	; case 2
 31525  006ACE  A4D8               	btfss	status,2,c
 31526  006AD0  0012               	return	
 31527  006AD2  D7EA               	goto	l2087
 31528  006AD4                     __end_of__flash_wakeup:
 31529                           	opt stack 0
 31530                           tosu	equ	0xFFF
 31531                           tosh	equ	0xFFE
 31532                           tosl	equ	0xFFD
 31533                           pclath	equ	0xFFA
 31534                           tblptru	equ	0xFF8
 31535                           tblptrh	equ	0xFF7
 31536                           tblptrl	equ	0xFF6
 31537                           tablat	equ	0xFF5
 31538                           prodh	equ	0xFF4
 31539                           prodl	equ	0xFF3
 31540                           intcon	equ	0xFF2
 31541                           intcon2	equ	0xFF1
 31542                           intcon3	equ	0xFF0
 31543                           indf0	equ	0xFEF
 31544                           postinc0	equ	0xFEE
 31545                           fsr0h	equ	0xFEA
 31546                           fsr0l	equ	0xFE9
 31547                           wreg	equ	0xFE8
 31548                           indf1	equ	0xFE7
 31549                           postdec1	equ	0xFE5
 31550                           plusw1	equ	0xFE3
 31551                           fsr1h	equ	0xFE2
 31552                           fsr1l	equ	0xFE1
 31553                           indf2	equ	0xFDF
 31554                           postinc2	equ	0xFDE
 31555                           postdec2	equ	0xFDD
 31556                           plusw2	equ	0xFDB
 31557                           fsr2h	equ	0xFDA
 31558                           fsr2l	equ	0xFD9
 31559                           status	equ	0xFD8
 31560                           
 31561 ;; *************** function __flash_spi_tx *****************
 31562 ;; Defined at:
 31563 ;;		line 103 in file "flash.c"
 31564 ;; Parameters:    Size  Location     Type
 31565 ;;  data            2    0[COMRAM] PTR unsigned char 
 31566 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 31567 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 31568 ;;  length          2    2[COMRAM] unsigned int 
 31569 ;; Auto vars:     Size  Location     Type
 31570 ;;		None
 31571 ;; Return value:  Size  Location     Type
 31572 ;;                  1    wreg      void 
 31573 ;; Registers used:
 31574 ;;		wreg, status,2, status,0
 31575 ;; Tracked objects:
 31576 ;;		On entry : 0/0
 31577 ;;		On exit  : 0/0
 31578 ;;		Unchanged: 0/0
 31579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31584 ;;Total ram usage:        8 bytes
 31585 ;; Hardware stack levels used:    1
 31586 ;; This function calls:
 31587 ;;		Nothing
 31588 ;; This function is called by:
 31589 ;;		__flash_set_page_size
 31590 ;;		__flash_wakeup
 31591 ;;		__flash_compare_page_to_buffer
 31592 ;;		__flash_write_page_from_buffer
 31593 ;;		__flash_copy_page_to_buffer
 31594 ;;		__flash_erase_page
 31595 ;;		_flash_set_power_state
 31596 ;; This function uses a non-reentrant model
 31597 ;;
 31598                           
 31599                           	psect	text143
 31600  0068CC                     __ptext143:
 31601                           	opt stack 0
 31602  0068CC                     __flash_spi_tx:
 31603                           	opt stack 25
 31604                           
 31605                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 31606                           
 31607                           ; BSR set to: 1
 31608                           ;incstack = 0
 31609  0068CC  9E88               	bcf	3976,7,c	;volatile
 31610                           
 31611                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 31612  0068CE  9C88               	bcf	3976,6,c	;volatile
 31613                           
 31614                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 31615  0068D0  8A88               	bsf	3976,5,c	;volatile
 31616                           
 31617                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 31618  0068D2  9888               	bcf	3976,4,c	;volatile
 31619                           
 31620                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 31621  0068D4  9688               	bcf	3976,3,c	;volatile
 31622                           
 31623                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 31624  0068D6  8488               	bsf	3976,2,c	;volatile
 31625                           
 31626                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 31627  0068D8  9288               	bcf	3976,1,c	;volatile
 31628                           
 31629                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 31630  0068DA  9886               	bcf	3974,4,c	;volatile
 31631  0068DC  9A86               	bcf	3974,5,c	;volatile
 31632  0068DE  9C86               	bcf	3974,6,c	;volatile
 31633  0068E0  9E86               	bcf	3974,7,c	;volatile
 31634                           
 31635                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 31636  0068E2  9086               	bcf	3974,0,c	;volatile
 31637  0068E4  9286               	bcf	3974,1,c	;volatile
 31638  0068E6  9486               	bcf	3974,2,c	;volatile
 31639  0068E8  9686               	bcf	3974,3,c	;volatile
 31640                           
 31641                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 31642  0068EA  5002               	movf	__flash_spi_tx@data+1,w,c
 31643  0068EC  6E6A               	movwf	3946,c	;volatile
 31644                           
 31645                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 31646  0068EE  C001  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 31647                           
 31648                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 31649  0068F2  0EFF               	movlw	255
 31650  0068F4  6E05               	movwf	??__flash_spi_tx& (0+255),c
 31651  0068F6  0EFF               	movlw	255
 31652  0068F8  6E06               	movwf	(??__flash_spi_tx+1)& (0+255),c
 31653  0068FA  C003  F007         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 31654  0068FE  C004  F008         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 31655  006902  5005               	movf	??__flash_spi_tx,w,c
 31656  006904  2607               	addwf	??__flash_spi_tx+2,f,c
 31657  006906  5006               	movf	??__flash_spi_tx+1,w,c
 31658  006908  2208               	addwfc	??__flash_spi_tx+3,f,c
 31659  00690A  C008  F007         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 31660  00690E  6A08               	clrf	??__flash_spi_tx+3,c
 31661  006910  5007               	movf	??__flash_spi_tx+2,w,c
 31662  006912  6E66               	movwf	3942,c	;volatile
 31663                           
 31664                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 31665  006914  0403               	decf	__flash_spi_tx@length,w,c
 31666  006916  6E67               	movwf	3943,c	;volatile
 31667                           
 31668                           ;flash.c: 131: LATDbits.LD7 = 0;
 31669  006918  9E8C               	bcf	3980,7,c	;volatile
 31670                           
 31671                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 31672  00691A  8088               	bsf	3976,0,c	;volatile
 31673  00691C                     l2049:
 31674  00691C  B088               	btfsc	3976,0,c	;volatile
 31675  00691E  D7FE               	goto	l2049
 31676                           
 31677                           ;flash.c: 134: LATDbits.LD7 = 1;
 31678  006920  8E8C               	bsf	3980,7,c	;volatile
 31679  006922  0012               	return		;funcret
 31680  006924                     __end_of__flash_spi_tx:
 31681                           	opt stack 0
 31682                           tosu	equ	0xFFF
 31683                           tosh	equ	0xFFE
 31684                           tosl	equ	0xFFD
 31685                           pclath	equ	0xFFA
 31686                           tblptru	equ	0xFF8
 31687                           tblptrh	equ	0xFF7
 31688                           tblptrl	equ	0xFF6
 31689                           tablat	equ	0xFF5
 31690                           prodh	equ	0xFF4
 31691                           prodl	equ	0xFF3
 31692                           intcon	equ	0xFF2
 31693                           intcon2	equ	0xFF1
 31694                           intcon3	equ	0xFF0
 31695                           indf0	equ	0xFEF
 31696                           postinc0	equ	0xFEE
 31697                           fsr0h	equ	0xFEA
 31698                           fsr0l	equ	0xFE9
 31699                           wreg	equ	0xFE8
 31700                           indf1	equ	0xFE7
 31701                           postdec1	equ	0xFE5
 31702                           plusw1	equ	0xFE3
 31703                           fsr1h	equ	0xFE2
 31704                           fsr1l	equ	0xFE1
 31705                           indf2	equ	0xFDF
 31706                           postinc2	equ	0xFDE
 31707                           postdec2	equ	0xFDD
 31708                           plusw2	equ	0xFDB
 31709                           fsr2h	equ	0xFDA
 31710                           fsr2l	equ	0xFD9
 31711                           status	equ	0xFD8
 31712                           
 31713 ;; *************** function __flash_get_status *****************
 31714 ;; Defined at:
 31715 ;;		line 278 in file "flash.c"
 31716 ;; Parameters:    Size  Location     Type
 31717 ;;		None
 31718 ;; Auto vars:     Size  Location     Type
 31719 ;;  status          2   15[COMRAM] unsigned int 
 31720 ;;  command         1   14[COMRAM] unsigned char 
 31721 ;; Return value:  Size  Location     Type
 31722 ;;                  2   12[COMRAM] unsigned int 
 31723 ;; Registers used:
 31724 ;;		wreg, status,2, status,0, cstack
 31725 ;; Tracked objects:
 31726 ;;		On entry : 0/0
 31727 ;;		On exit  : 0/0
 31728 ;;		Unchanged: 0/0
 31729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31731 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31734 ;;Total ram usage:        5 bytes
 31735 ;; Hardware stack levels used:    1
 31736 ;; Hardware stack levels required when called:    1
 31737 ;; This function calls:
 31738 ;;		__flash_spi_tx_rx
 31739 ;; This function is called by:
 31740 ;;		__flash_compare_page_to_buffer
 31741 ;;		_flash_is_busy
 31742 ;; This function uses a non-reentrant model
 31743 ;;
 31744                           
 31745                           	psect	text144
 31746  007356                     __ptext144:
 31747                           	opt stack 0
 31748  007356                     __flash_get_status:
 31749                           	opt stack 25
 31750                           
 31751                           ;flash.c: 282: uint8_t command = 0xD7;
 31752                           
 31753                           ;incstack = 0
 31754  007356  0ED7               	movlw	215
 31755  007358  6E0F               	movwf	__flash_get_status@command,c
 31756                           
 31757                           ;flash.c: 283: uint16_t status;
 31758                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 31759  00735A  0E0F               	movlw	low __flash_get_status@command
 31760  00735C  6E01               	movwf	__flash_spi_tx_rx@command,c
 31761  00735E  0E00               	movlw	high __flash_get_status@command
 31762  007360  6E02               	movwf	__flash_spi_tx_rx@command+1,c
 31763  007362  0E00               	movlw	0
 31764  007364  6E04               	movwf	__flash_spi_tx_rx@command_length+1,c
 31765  007366  0E01               	movlw	1
 31766  007368  6E03               	movwf	__flash_spi_tx_rx@command_length,c
 31767  00736A  0E10               	movlw	low __flash_get_status@status
 31768  00736C  6E05               	movwf	__flash_spi_tx_rx@data,c
 31769  00736E  0E00               	movlw	high __flash_get_status@status
 31770  007370  6E06               	movwf	__flash_spi_tx_rx@data+1,c
 31771  007372  0E00               	movlw	0
 31772  007374  6E08               	movwf	__flash_spi_tx_rx@data_length+1,c
 31773  007376  0E02               	movlw	2
 31774  007378  6E07               	movwf	__flash_spi_tx_rx@data_length,c
 31775  00737A  ECFA  F02D         	call	__flash_spi_tx_rx	;wreg free
 31776                           
 31777                           ;flash.c: 285: return status;
 31778  00737E  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 31779  007382  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 31780  007386  0012               	return	
 31781  007388                     __end_of__flash_get_status:
 31782                           	opt stack 0
 31783                           tosu	equ	0xFFF
 31784                           tosh	equ	0xFFE
 31785                           tosl	equ	0xFFD
 31786                           pclath	equ	0xFFA
 31787                           tblptru	equ	0xFF8
 31788                           tblptrh	equ	0xFF7
 31789                           tblptrl	equ	0xFF6
 31790                           tablat	equ	0xFF5
 31791                           prodh	equ	0xFF4
 31792                           prodl	equ	0xFF3
 31793                           intcon	equ	0xFF2
 31794                           intcon2	equ	0xFF1
 31795                           intcon3	equ	0xFF0
 31796                           indf0	equ	0xFEF
 31797                           postinc0	equ	0xFEE
 31798                           fsr0h	equ	0xFEA
 31799                           fsr0l	equ	0xFE9
 31800                           wreg	equ	0xFE8
 31801                           indf1	equ	0xFE7
 31802                           postdec1	equ	0xFE5
 31803                           plusw1	equ	0xFE3
 31804                           fsr1h	equ	0xFE2
 31805                           fsr1l	equ	0xFE1
 31806                           indf2	equ	0xFDF
 31807                           postinc2	equ	0xFDE
 31808                           postdec2	equ	0xFDD
 31809                           plusw2	equ	0xFDB
 31810                           fsr2h	equ	0xFDA
 31811                           fsr2l	equ	0xFD9
 31812                           status	equ	0xFD8
 31813                           
 31814 ;; *************** function __flash_spi_tx_rx *****************
 31815 ;; Defined at:
 31816 ;;		line 194 in file "flash.c"
 31817 ;; Parameters:    Size  Location     Type
 31818 ;;  command         2    0[COMRAM] PTR unsigned char 
 31819 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 31820 ;;  command_leng    2    2[COMRAM] unsigned int 
 31821 ;;  data            2    4[COMRAM] PTR unsigned char 
 31822 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 31823 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 31824 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 31825 ;;		 -> _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 31826 ;;  data_length     2    6[COMRAM] unsigned int 
 31827 ;; Auto vars:     Size  Location     Type
 31828 ;;		None
 31829 ;; Return value:  Size  Location     Type
 31830 ;;                  1    wreg      void 
 31831 ;; Registers used:
 31832 ;;		wreg, status,2, status,0
 31833 ;; Tracked objects:
 31834 ;;		On entry : 0/0
 31835 ;;		On exit  : 0/0
 31836 ;;		Unchanged: 0/0
 31837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31838 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31841 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31842 ;;Total ram usage:       12 bytes
 31843 ;; Hardware stack levels used:    1
 31844 ;; This function calls:
 31845 ;;		Nothing
 31846 ;; This function is called by:
 31847 ;;		__flash_get_status
 31848 ;;		_flash_partial_read
 31849 ;; This function uses a non-reentrant model
 31850 ;;
 31851                           
 31852                           	psect	text145
 31853  005BF4                     __ptext145:
 31854                           	opt stack 0
 31855  005BF4                     __flash_spi_tx_rx:
 31856                           	opt stack 25
 31857                           
 31858                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 31859                           
 31860                           ;incstack = 0
 31861  005BF4  9E88               	bcf	3976,7,c	;volatile
 31862                           
 31863                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 31864  005BF6  9C88               	bcf	3976,6,c	;volatile
 31865                           
 31866                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 31867  005BF8  8A88               	bsf	3976,5,c	;volatile
 31868                           
 31869                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 31870  005BFA  9888               	bcf	3976,4,c	;volatile
 31871                           
 31872                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 31873  005BFC  9688               	bcf	3976,3,c	;volatile
 31874                           
 31875                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 31876  005BFE  8488               	bsf	3976,2,c	;volatile
 31877                           
 31878                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 31879  005C00  9288               	bcf	3976,1,c	;volatile
 31880                           
 31881                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 31882  005C02  9886               	bcf	3974,4,c	;volatile
 31883  005C04  9A86               	bcf	3974,5,c	;volatile
 31884  005C06  9C86               	bcf	3974,6,c	;volatile
 31885  005C08  9E86               	bcf	3974,7,c	;volatile
 31886                           
 31887                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 31888  005C0A  9086               	bcf	3974,0,c	;volatile
 31889  005C0C  9286               	bcf	3974,1,c	;volatile
 31890  005C0E  9486               	bcf	3974,2,c	;volatile
 31891  005C10  9686               	bcf	3974,3,c	;volatile
 31892                           
 31893                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 31894  005C12  5002               	movf	__flash_spi_tx_rx@command+1,w,c
 31895  005C14  6E6A               	movwf	3946,c	;volatile
 31896                           
 31897                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 31898  005C16  C001  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 31899                           
 31900                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 31901  005C1A  0EFF               	movlw	255
 31902  005C1C  6E09               	movwf	??__flash_spi_tx_rx& (0+255),c
 31903  005C1E  0EFF               	movlw	255
 31904  005C20  6E0A               	movwf	(??__flash_spi_tx_rx+1)& (0+255),c
 31905  005C22  C003  F00B         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 31906  005C26  C004  F00C         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 31907  005C2A  5009               	movf	??__flash_spi_tx_rx,w,c
 31908  005C2C  260B               	addwf	??__flash_spi_tx_rx+2,f,c
 31909  005C2E  500A               	movf	??__flash_spi_tx_rx+1,w,c
 31910  005C30  220C               	addwfc	??__flash_spi_tx_rx+3,f,c
 31911  005C32  C00C  F00B         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 31912  005C36  6A0C               	clrf	??__flash_spi_tx_rx+3,c
 31913  005C38  500B               	movf	??__flash_spi_tx_rx+2,w,c
 31914  005C3A  6E66               	movwf	3942,c	;volatile
 31915                           
 31916                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 31917  005C3C  0403               	decf	__flash_spi_tx_rx@command_length,w,c
 31918  005C3E  6E67               	movwf	3943,c	;volatile
 31919                           
 31920                           ;flash.c: 222: LATDbits.LD7 = 0;
 31921  005C40  9E8C               	bcf	3980,7,c	;volatile
 31922                           
 31923                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 31924  005C42  8088               	bsf	3976,0,c	;volatile
 31925  005C44                     l2064:
 31926  005C44  B088               	btfsc	3976,0,c	;volatile
 31927  005C46  D7FE               	goto	l2064
 31928                           
 31929                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 31930  005C48  9A88               	bcf	3976,5,c	;volatile
 31931                           
 31932                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 31933  005C4A  8888               	bsf	3976,4,c	;volatile
 31934                           
 31935                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 31936  005C4C  9688               	bcf	3976,3,c	;volatile
 31937                           
 31938                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 31939  005C4E  9488               	bcf	3976,2,c	;volatile
 31940                           
 31941                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 31942  005C50  5006               	movf	__flash_spi_tx_rx@data+1,w,c
 31943  005C52  6E68               	movwf	3944,c	;volatile
 31944                           
 31945                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 31946  005C54  C005  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 31947                           
 31948                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 31949  005C58  0EFF               	movlw	255
 31950  005C5A  6E09               	movwf	??__flash_spi_tx_rx& (0+255),c
 31951  005C5C  0EFF               	movlw	255
 31952  005C5E  6E0A               	movwf	(??__flash_spi_tx_rx+1)& (0+255),c
 31953  005C60  C007  F00B         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 31954  005C64  C008  F00C         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 31955  005C68  5009               	movf	??__flash_spi_tx_rx,w,c
 31956  005C6A  260B               	addwf	??__flash_spi_tx_rx+2,f,c
 31957  005C6C  500A               	movf	??__flash_spi_tx_rx+1,w,c
 31958  005C6E  220C               	addwfc	??__flash_spi_tx_rx+3,f,c
 31959  005C70  C00C  F00B         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 31960  005C74  6A0C               	clrf	??__flash_spi_tx_rx+3,c
 31961  005C76  500B               	movf	??__flash_spi_tx_rx+2,w,c
 31962  005C78  6E66               	movwf	3942,c	;volatile
 31963                           
 31964                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 31965  005C7A  0407               	decf	__flash_spi_tx_rx@data_length,w,c
 31966  005C7C  6E67               	movwf	3943,c	;volatile
 31967                           
 31968                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 31969  005C7E  8088               	bsf	3976,0,c	;volatile
 31970  005C80                     l2067:
 31971  005C80  B088               	btfsc	3976,0,c	;volatile
 31972  005C82  D7FE               	goto	l2067
 31973                           
 31974                           ;flash.c: 249: LATDbits.LD7 = 1;
 31975  005C84  8E8C               	bsf	3980,7,c	;volatile
 31976  005C86  0012               	return		;funcret
 31977  005C88                     __end_of__flash_spi_tx_rx:
 31978                           	opt stack 0
 31979                           tosu	equ	0xFFF
 31980                           tosh	equ	0xFFE
 31981                           tosl	equ	0xFFD
 31982                           pclath	equ	0xFFA
 31983                           tblptru	equ	0xFF8
 31984                           tblptrh	equ	0xFF7
 31985                           tblptrl	equ	0xFF6
 31986                           tablat	equ	0xFF5
 31987                           prodh	equ	0xFF4
 31988                           prodl	equ	0xFF3
 31989                           intcon	equ	0xFF2
 31990                           intcon2	equ	0xFF1
 31991                           intcon3	equ	0xFF0
 31992                           indf0	equ	0xFEF
 31993                           postinc0	equ	0xFEE
 31994                           fsr0h	equ	0xFEA
 31995                           fsr0l	equ	0xFE9
 31996                           wreg	equ	0xFE8
 31997                           indf1	equ	0xFE7
 31998                           postdec1	equ	0xFE5
 31999                           plusw1	equ	0xFE3
 32000                           fsr1h	equ	0xFE2
 32001                           fsr1l	equ	0xFE1
 32002                           indf2	equ	0xFDF
 32003                           postinc2	equ	0xFDE
 32004                           postdec2	equ	0xFDD
 32005                           plusw2	equ	0xFDB
 32006                           fsr2h	equ	0xFDA
 32007                           fsr2l	equ	0xFD9
 32008                           status	equ	0xFD8
 32009                           
 32010 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 32011 ;; Defined at:
 32012 ;;		line 993 in file "usb_device_msd.c"
 32013 ;; Parameters:    Size  Location     Type
 32014 ;;  DiExpected      2    0[COMRAM] unsigned int 
 32015 ;; Auto vars:     Size  Location     Type
 32016 ;;		None
 32017 ;; Return value:  Size  Location     Type
 32018 ;;                  1    wreg      void 
 32019 ;; Registers used:
 32020 ;;		wreg, status,2, status,0
 32021 ;; Tracked objects:
 32022 ;;		On entry : 0/0
 32023 ;;		On exit  : 0/0
 32024 ;;		Unchanged: 0/0
 32025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32030 ;;Total ram usage:        6 bytes
 32031 ;; Hardware stack levels used:    1
 32032 ;; This function calls:
 32033 ;;		Nothing
 32034 ;; This function is called by:
 32035 ;;		_MSDProcessCommandMediaPresent
 32036 ;; This function uses a non-reentrant model
 32037 ;;
 32038                           
 32039                           	psect	text146
 32040  00582C                     __ptext146:
 32041                           	opt stack 0
 32042  00582C                     _MSDComputeDeviceInAndResidue:
 32043                           	opt stack 26
 32044                           
 32045                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 32046                           
 32047                           ;incstack = 0
 32048  00582C  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 32049  00582E  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 32050  005830  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 32051  005832  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 32052  005834  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 32053  005836  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 32054  005838  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 32055  00583A  0101               	movlb	1	; () banked
 32056  00583C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 32057  00583E  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 32058  005840  0101               	movlb	1	; () banked
 32059  005842  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 32060  005844  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 32061  005846  0101               	movlb	1	; () banked
 32062  005848  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 32063  00584A  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 32064  00584C  0101               	movlb	1	; () banked
 32065  00584E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 32066  005850  B0D8               	btfsc	status,0,c
 32067  005852  D00E               	goto	l10403
 32068                           
 32069                           ; BSR set to: 1
 32070                           ;usb_device_msd.c: 997: {
 32071                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 32072  005854  0E00               	movlw	0
 32073  005856  010D               	movlb	13	; () banked
 32074  005858  6F88               	movwf	136,b	;volatile
 32075  00585A  0E00               	movlw	0
 32076  00585C  6F89               	movwf	137,b	;volatile
 32077  00585E  0E00               	movlw	0
 32078  005860  6F8A               	movwf	138,b	;volatile
 32079  005862  0E00               	movlw	0
 32080  005864  6F8B               	movwf	139,b	;volatile
 32081                           
 32082                           ; BSR set to: 13
 32083                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 32084  005866  C108  F176         	movff	_gblCBW+8,_TransferLength
 32085  00586A  C109  F177         	movff	_gblCBW+9,_TransferLength+1
 32086                           
 32087                           ;usb_device_msd.c: 1002: }
 32088  00586E  0012               	return	
 32089  005870                     l10403:
 32090                           
 32091                           ;usb_device_msd.c: 1003: else
 32092                           ;usb_device_msd.c: 1004: {
 32093                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 32094  005870  0101               	movlb	1	; () banked
 32095  005872  5176               	movf	_TransferLength& (0+255),w,b
 32096  005874  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 32097  005876  0101               	movlb	1	; () banked
 32098  005878  5177               	movf	(_TransferLength+1)& (0+255),w,b
 32099  00587A  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 32100  00587C  B0D8               	btfsc	status,0,c
 32101  00587E  D004               	goto	l10407
 32102                           
 32103                           ; BSR set to: 1
 32104                           ;usb_device_msd.c: 1007: {
 32105                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 32106  005880  C001  F176         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 32107  005884  C002  F177         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 32108  005888                     l10407:
 32109                           
 32110                           ; BSR set to: 1
 32111                           ;usb_device_msd.c: 1009: }
 32112                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 32113  005888  0101               	movlb	1	; () banked
 32114  00588A  5176               	movf	_TransferLength& (0+255),w,b
 32115  00588C  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 32116  00588E  0101               	movlb	1	; () banked
 32117  005890  5177               	movf	(_TransferLength+1)& (0+255),w,b
 32118  005892  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 32119  005894  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 32120  005896  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 32121  005898  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 32122  00589A  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 32123  00589C  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 32124  00589E  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 32125  0058A0  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 32126  0058A2  0E00               	movlw	0
 32127  0058A4  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 32128  0058A6  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 32129  0058A8  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 32130  0058AA  0101               	movlb	1	; () banked
 32131  0058AC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 32132  0058AE  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 32133  0058B0  010D               	movlb	13	; () banked
 32134  0058B2  6F88               	movwf	136,b	;volatile
 32135  0058B4  0101               	movlb	1	; () banked
 32136  0058B6  5109               	movf	(_gblCBW+9)& (0+255),w,b
 32137  0058B8  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 32138  0058BA  010D               	movlb	13	; () banked
 32139  0058BC  6F89               	movwf	137,b	;volatile
 32140  0058BE  0101               	movlb	1	; () banked
 32141  0058C0  510A               	movf	(_gblCBW+10)& (0+255),w,b
 32142  0058C2  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 32143  0058C4  010D               	movlb	13	; () banked
 32144  0058C6  6F8A               	movwf	138,b	;volatile
 32145  0058C8  0101               	movlb	1	; () banked
 32146  0058CA  510B               	movf	(_gblCBW+11)& (0+255),w,b
 32147  0058CC  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 32148  0058CE  010D               	movlb	13	; () banked
 32149  0058D0  6F8B               	movwf	139,b	;volatile
 32150  0058D2  0012               	return	
 32151  0058D4                     __end_of_MSDComputeDeviceInAndResidue:
 32152                           	opt stack 0
 32153                           tosu	equ	0xFFF
 32154                           tosh	equ	0xFFE
 32155                           tosl	equ	0xFFD
 32156                           pclath	equ	0xFFA
 32157                           tblptru	equ	0xFF8
 32158                           tblptrh	equ	0xFF7
 32159                           tblptrl	equ	0xFF6
 32160                           tablat	equ	0xFF5
 32161                           prodh	equ	0xFF4
 32162                           prodl	equ	0xFF3
 32163                           intcon	equ	0xFF2
 32164                           intcon2	equ	0xFF1
 32165                           intcon3	equ	0xFF0
 32166                           indf0	equ	0xFEF
 32167                           postinc0	equ	0xFEE
 32168                           fsr0h	equ	0xFEA
 32169                           fsr0l	equ	0xFE9
 32170                           wreg	equ	0xFE8
 32171                           indf1	equ	0xFE7
 32172                           postdec1	equ	0xFE5
 32173                           plusw1	equ	0xFE3
 32174                           fsr1h	equ	0xFE2
 32175                           fsr1l	equ	0xFE1
 32176                           indf2	equ	0xFDF
 32177                           postinc2	equ	0xFDE
 32178                           postdec2	equ	0xFDD
 32179                           plusw2	equ	0xFDB
 32180                           fsr2h	equ	0xFDA
 32181                           fsr2l	equ	0xFD9
 32182                           status	equ	0xFD8
 32183                           
 32184 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 32185 ;; Defined at:
 32186 ;;		line 18 in file "external_flash.c"
 32187 ;; Parameters:    Size  Location     Type
 32188 ;;  config          2    0[COMRAM] PTR void 
 32189 ;;		 -> NULL(0), 
 32190 ;; Auto vars:     Size  Location     Type
 32191 ;;		None
 32192 ;; Return value:  Size  Location     Type
 32193 ;;                  2    0[COMRAM] unsigned int 
 32194 ;; Registers used:
 32195 ;;		wreg, status,2
 32196 ;; Tracked objects:
 32197 ;;		On entry : 0/0
 32198 ;;		On exit  : 0/0
 32199 ;;		Unchanged: 0/0
 32200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32205 ;;Total ram usage:        2 bytes
 32206 ;; Hardware stack levels used:    1
 32207 ;; This function calls:
 32208 ;;		Nothing
 32209 ;; This function is called by:
 32210 ;;		_MSDProcessCommandMediaPresent
 32211 ;; This function uses a non-reentrant model
 32212 ;;
 32213                           
 32214                           	psect	text147
 32215  0078C6                     __ptext147:
 32216                           	opt stack 0
 32217  0078C6                     _ExternalFlash_SectorSizeRead:
 32218                           	opt stack 26
 32219                           
 32220                           ;external_flash.c: 21: return 512;
 32221                           
 32222                           ; BSR set to: 13
 32223                           ;incstack = 0
 32224  0078C6  0E02               	movlw	2
 32225  0078C8  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 32226  0078CA  0E00               	movlw	0
 32227  0078CC  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 32228  0078CE  0012               	return	
 32229  0078D0                     __end_of_ExternalFlash_SectorSizeRead:
 32230                           	opt stack 0
 32231                           tosu	equ	0xFFF
 32232                           tosh	equ	0xFFE
 32233                           tosl	equ	0xFFD
 32234                           pclath	equ	0xFFA
 32235                           tblptru	equ	0xFF8
 32236                           tblptrh	equ	0xFF7
 32237                           tblptrl	equ	0xFF6
 32238                           tablat	equ	0xFF5
 32239                           prodh	equ	0xFF4
 32240                           prodl	equ	0xFF3
 32241                           intcon	equ	0xFF2
 32242                           intcon2	equ	0xFF1
 32243                           intcon3	equ	0xFF0
 32244                           indf0	equ	0xFEF
 32245                           postinc0	equ	0xFEE
 32246                           fsr0h	equ	0xFEA
 32247                           fsr0l	equ	0xFE9
 32248                           wreg	equ	0xFE8
 32249                           indf1	equ	0xFE7
 32250                           postdec1	equ	0xFE5
 32251                           plusw1	equ	0xFE3
 32252                           fsr1h	equ	0xFE2
 32253                           fsr1l	equ	0xFE1
 32254                           indf2	equ	0xFDF
 32255                           postinc2	equ	0xFDE
 32256                           postdec2	equ	0xFDD
 32257                           plusw2	equ	0xFDB
 32258                           fsr2h	equ	0xFDA
 32259                           fsr2l	equ	0xFD9
 32260                           status	equ	0xFD8
 32261                           
 32262 ;; *************** function _ExternalFlash_CapacityRead *****************
 32263 ;; Defined at:
 32264 ;;		line 24 in file "external_flash.c"
 32265 ;; Parameters:    Size  Location     Type
 32266 ;;  config          2    0[COMRAM] PTR void 
 32267 ;;		 -> NULL(0), 
 32268 ;; Auto vars:     Size  Location     Type
 32269 ;;		None
 32270 ;; Return value:  Size  Location     Type
 32271 ;;                  4    0[COMRAM] unsigned long 
 32272 ;; Registers used:
 32273 ;;		wreg, status,2
 32274 ;; Tracked objects:
 32275 ;;		On entry : 0/0
 32276 ;;		On exit  : 0/0
 32277 ;;		Unchanged: 0/0
 32278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32283 ;;Total ram usage:        4 bytes
 32284 ;; Hardware stack levels used:    1
 32285 ;; This function calls:
 32286 ;;		Nothing
 32287 ;; This function is called by:
 32288 ;;		_MSDProcessCommandMediaPresent
 32289 ;; This function uses a non-reentrant model
 32290 ;;
 32291                           
 32292                           	psect	text148
 32293  00781A                     __ptext148:
 32294                           	opt stack 0
 32295  00781A                     _ExternalFlash_CapacityRead:
 32296                           	opt stack 26
 32297                           
 32298                           ;external_flash.c: 26: return ((uint32_t) 4114 - 1);
 32299                           
 32300                           ;incstack = 0
 32301  00781A  0E11               	movlw	17
 32302  00781C  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 32303  00781E  0E10               	movlw	16
 32304  007820  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 32305  007822  0E00               	movlw	0
 32306  007824  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 32307  007826  0E00               	movlw	0
 32308  007828  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 32309  00782A  0012               	return	
 32310  00782C                     __end_of_ExternalFlash_CapacityRead:
 32311                           	opt stack 0
 32312                           tosu	equ	0xFFF
 32313                           tosh	equ	0xFFE
 32314                           tosl	equ	0xFFD
 32315                           pclath	equ	0xFFA
 32316                           tblptru	equ	0xFF8
 32317                           tblptrh	equ	0xFF7
 32318                           tblptrl	equ	0xFF6
 32319                           tablat	equ	0xFF5
 32320                           prodh	equ	0xFF4
 32321                           prodl	equ	0xFF3
 32322                           intcon	equ	0xFF2
 32323                           intcon2	equ	0xFF1
 32324                           intcon3	equ	0xFF0
 32325                           indf0	equ	0xFEF
 32326                           postinc0	equ	0xFEE
 32327                           fsr0h	equ	0xFEA
 32328                           fsr0l	equ	0xFE9
 32329                           wreg	equ	0xFE8
 32330                           indf1	equ	0xFE7
 32331                           postdec1	equ	0xFE5
 32332                           plusw1	equ	0xFE3
 32333                           fsr1h	equ	0xFE2
 32334                           fsr1l	equ	0xFE1
 32335                           indf2	equ	0xFDF
 32336                           postinc2	equ	0xFDE
 32337                           postdec2	equ	0xFDD
 32338                           plusw2	equ	0xFDB
 32339                           fsr2h	equ	0xFDA
 32340                           fsr2l	equ	0xFD9
 32341                           status	equ	0xFD8
 32342                           
 32343 ;; *************** function _ExternalFlash_MediaInitialize *****************
 32344 ;; Defined at:
 32345 ;;		line 10 in file "external_flash.c"
 32346 ;; Parameters:    Size  Location     Type
 32347 ;;  config          2    0[COMRAM] PTR void 
 32348 ;;		 -> NULL(0), 
 32349 ;; Auto vars:     Size  Location     Type
 32350 ;;		None
 32351 ;; Return value:  Size  Location     Type
 32352 ;;                  2    0[COMRAM] PTR struct .
 32353 ;; Registers used:
 32354 ;;		wreg, status,2, status,0
 32355 ;; Tracked objects:
 32356 ;;		On entry : 0/0
 32357 ;;		On exit  : 0/0
 32358 ;;		Unchanged: 0/0
 32359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32364 ;;Total ram usage:        2 bytes
 32365 ;; Hardware stack levels used:    1
 32366 ;; This function calls:
 32367 ;;		Nothing
 32368 ;; This function is called by:
 32369 ;;		_USBMSDInit
 32370 ;;		_MSDProcessCommand
 32371 ;; This function uses a non-reentrant model
 32372 ;;
 32373                           
 32374                           	psect	text149
 32375  007640                     __ptext149:
 32376                           	opt stack 0
 32377  007640                     _ExternalFlash_MediaInitialize:
 32378                           	opt stack 26
 32379                           
 32380                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 32381                           
 32382                           ;incstack = 0
 32383  007640  0101               	movlb	1	; () banked
 32384  007642  81B0               	bsf	(_mediaInformation+1)& (0+255),0,b
 32385                           
 32386                           ; BSR set to: 1
 32387                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 32388  007644  0E02               	movlw	2
 32389  007646  0101               	movlb	1	; () banked
 32390  007648  6FB2               	movwf	(_mediaInformation+3)& (0+255),b
 32391  00764A  0E00               	movlw	0
 32392  00764C  6FB1               	movwf	(_mediaInformation+2)& (0+255),b
 32393                           
 32394                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 32395  00764E  0E00               	movlw	0
 32396  007650  0101               	movlb	1	; () banked
 32397  007652  6FAF               	movwf	_mediaInformation& (0+255),b
 32398                           
 32399                           ; BSR set to: 1
 32400                           ;external_flash.c: 15: return &mediaInformation;
 32401  007654  0EAF               	movlw	low _mediaInformation
 32402  007656  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 32403  007658  0E01               	movlw	high _mediaInformation
 32404  00765A  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 32405  00765C  0012               	return	
 32406  00765E                     __end_of_ExternalFlash_MediaInitialize:
 32407                           	opt stack 0
 32408                           tosu	equ	0xFFF
 32409                           tosh	equ	0xFFE
 32410                           tosl	equ	0xFFD
 32411                           pclath	equ	0xFFA
 32412                           tblptru	equ	0xFF8
 32413                           tblptrh	equ	0xFF7
 32414                           tblptrl	equ	0xFF6
 32415                           tablat	equ	0xFF5
 32416                           prodh	equ	0xFF4
 32417                           prodl	equ	0xFF3
 32418                           intcon	equ	0xFF2
 32419                           intcon2	equ	0xFF1
 32420                           intcon3	equ	0xFF0
 32421                           indf0	equ	0xFEF
 32422                           postinc0	equ	0xFEE
 32423                           fsr0h	equ	0xFEA
 32424                           fsr0l	equ	0xFE9
 32425                           wreg	equ	0xFE8
 32426                           indf1	equ	0xFE7
 32427                           postdec1	equ	0xFE5
 32428                           plusw1	equ	0xFE3
 32429                           fsr1h	equ	0xFE2
 32430                           fsr1l	equ	0xFE1
 32431                           indf2	equ	0xFDF
 32432                           postinc2	equ	0xFDE
 32433                           postdec2	equ	0xFDD
 32434                           plusw2	equ	0xFDB
 32435                           fsr2h	equ	0xFDA
 32436                           fsr2l	equ	0xFD9
 32437                           status	equ	0xFD8
 32438                           
 32439 ;; *************** function _ExternalFlash_MediaDetect *****************
 32440 ;; Defined at:
 32441 ;;		line 29 in file "external_flash.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;  config          2    0[COMRAM] PTR void 
 32444 ;;		 -> NULL(0), 
 32445 ;; Auto vars:     Size  Location     Type
 32446 ;;		None
 32447 ;; Return value:  Size  Location     Type
 32448 ;;                  1    wreg      unsigned char 
 32449 ;; Registers used:
 32450 ;;		wreg
 32451 ;; Tracked objects:
 32452 ;;		On entry : 0/0
 32453 ;;		On exit  : 0/0
 32454 ;;		Unchanged: 0/0
 32455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32459 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32460 ;;Total ram usage:        2 bytes
 32461 ;; Hardware stack levels used:    1
 32462 ;; This function calls:
 32463 ;;		Nothing
 32464 ;; This function is called by:
 32465 ;;		_USBMSDInit
 32466 ;;		_MSDProcessCommand
 32467 ;; This function uses a non-reentrant model
 32468 ;;
 32469                           
 32470                           	psect	text150
 32471  0078F8                     __ptext150:
 32472                           	opt stack 0
 32473  0078F8                     _ExternalFlash_MediaDetect:
 32474                           	opt stack 26
 32475                           
 32476                           ;external_flash.c: 31: return 1;
 32477                           
 32478                           ; BSR set to: 1
 32479                           ;incstack = 0
 32480  0078F8  0E01               	movlw	1
 32481  0078FA  0012               	return	
 32482  0078FC                     __end_of_ExternalFlash_MediaDetect:
 32483                           	opt stack 0
 32484                           tosu	equ	0xFFF
 32485                           tosh	equ	0xFFE
 32486                           tosl	equ	0xFFD
 32487                           pclath	equ	0xFFA
 32488                           tblptru	equ	0xFF8
 32489                           tblptrh	equ	0xFF7
 32490                           tblptrl	equ	0xFF6
 32491                           tablat	equ	0xFF5
 32492                           prodh	equ	0xFF4
 32493                           prodl	equ	0xFF3
 32494                           intcon	equ	0xFF2
 32495                           intcon2	equ	0xFF1
 32496                           intcon3	equ	0xFF0
 32497                           indf0	equ	0xFEF
 32498                           postinc0	equ	0xFEE
 32499                           fsr0h	equ	0xFEA
 32500                           fsr0l	equ	0xFE9
 32501                           wreg	equ	0xFE8
 32502                           indf1	equ	0xFE7
 32503                           postdec1	equ	0xFE5
 32504                           plusw1	equ	0xFE3
 32505                           fsr1h	equ	0xFE2
 32506                           fsr1l	equ	0xFE1
 32507                           indf2	equ	0xFDF
 32508                           postinc2	equ	0xFDE
 32509                           postdec2	equ	0xFDD
 32510                           plusw2	equ	0xFDB
 32511                           fsr2h	equ	0xFDA
 32512                           fsr2l	equ	0xFD9
 32513                           status	equ	0xFD8
 32514                           
 32515 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 32516 ;; Defined at:
 32517 ;;		line 107 in file "app_device_custom_hid.c"
 32518 ;; Parameters:    Size  Location     Type
 32519 ;;		None
 32520 ;; Auto vars:     Size  Location     Type
 32521 ;;  return_value    2   52[COMRAM] unsigned int 
 32522 ;;  idx             1   54[COMRAM] unsigned char 
 32523 ;; Return value:  Size  Location     Type
 32524 ;;                  1    wreg      void 
 32525 ;; Registers used:
 32526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32527 ;; Tracked objects:
 32528 ;;		On entry : 0/0
 32529 ;;		On exit  : 0/0
 32530 ;;		Unchanged: 0/0
 32531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32533 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32534 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32535 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32536 ;;Total ram usage:       11 bytes
 32537 ;; Hardware stack levels used:    1
 32538 ;; Hardware stack levels required when called:    5
 32539 ;; This function calls:
 32540 ;;		_USBTransferOnePacket
 32541 ;;		__fill_buffer_get_calibration1
 32542 ;;		__fill_buffer_get_calibration2
 32543 ;;		__fill_buffer_get_display1
 32544 ;;		__fill_buffer_get_display2
 32545 ;;		__fill_buffer_get_status
 32546 ;;		__parse_command_calibration
 32547 ;;		__parse_command_long
 32548 ;;		__parse_command_short
 32549 ;; This function is called by:
 32550 ;;		_main
 32551 ;; This function uses a non-reentrant model
 32552 ;;
 32553                           
 32554                           	psect	text151
 32555  0013AC                     __ptext151:
 32556                           	opt stack 0
 32557  0013AC                     _APP_DeviceCustomHIDTasks:
 32558                           	opt stack 25
 32559                           
 32560                           ;app_device_custom_hid.c: 109: uint8_t idx;
 32561                           ;app_device_custom_hid.c: 114: if( USBDeviceState < CONFIGURED_STATE )
 32562                           
 32563                           ;incstack = 0
 32564  0013AC  0E20               	movlw	32
 32565  0013AE  605F               	cpfslt	_USBDeviceState,c
 32566  0013B0  D001               	goto	l966
 32567  0013B2  0012               	return	
 32568  0013B4                     l966:
 32569                           
 32570                           ;app_device_custom_hid.c: 117: }
 32571                           ;app_device_custom_hid.c: 123: if( UCONbits.SUSPND== 1 )
 32572  0013B4  B265               	btfsc	3941,1,c	;volatile
 32573  0013B6  0012               	return	
 32574                           
 32575                           ;app_device_custom_hid.c: 126: }
 32576                           ;app_device_custom_hid.c: 129: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 32577                           
 32578                           ;app_device_custom_hid.c: 124: {
 32579                           ;app_device_custom_hid.c: 125: return;
 32580  0013B8  0101               	movlb	1	; () banked
 32581  0013BA  5174               	movf	_USBOutHandle& (0+255),w,b
 32582  0013BC  0101               	movlb	1	; () banked
 32583  0013BE  1175               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 32584  0013C0  B4D8               	btfsc	status,2,c
 32585  0013C2  D0C8               	goto	l14213
 32586                           
 32587                           ; BSR set to: 1
 32588  0013C4  C174  FFD9         	movff	_USBOutHandle,fsr2l
 32589  0013C8  C175  FFDA         	movff	_USBOutHandle+1,fsr2h
 32590  0013CC  0101               	movlb	1	; () banked
 32591  0013CE  BEDF               	btfsc	indf2,7,c
 32592  0013D0  0012               	return	
 32593  0013D2  D0C0               	goto	l14213
 32594  0013D4                     l14149:
 32595                           
 32596                           ;app_device_custom_hid.c: 139: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32597  0013D4  5059               	movf	_USBInHandle,w,c
 32598  0013D6  105A               	iorwf	_USBInHandle+1,w,c
 32599  0013D8  B4D8               	btfsc	status,2,c
 32600  0013DA  D006               	goto	l14153
 32601  0013DC  C059  FFD9         	movff	_USBInHandle,fsr2l
 32602  0013E0  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32603  0013E4  BEDF               	btfsc	indf2,7,c
 32604  0013E6  D0D0               	goto	l14215
 32605  0013E8                     l14153:
 32606                           
 32607                           ;app_device_custom_hid.c: 140: {
 32608                           ;app_device_custom_hid.c: 142: _fill_buffer_get_status();
 32609  0013E8  EC38  F037         	call	__fill_buffer_get_status	;wreg free
 32610                           
 32611                           ;app_device_custom_hid.c: 144: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32612  0013EC  0E01               	movlw	1
 32613  0013EE  6E01               	movwf	USBTransferOnePacket@dir,c
 32614  0013F0  0EB4               	movlw	low _ToSendDataBuffer
 32615  0013F2  6E02               	movwf	USBTransferOnePacket@data,c
 32616  0013F4  0E02               	movlw	high _ToSendDataBuffer
 32617  0013F6  6E03               	movwf	USBTransferOnePacket@data+1,c
 32618  0013F8  0E40               	movlw	64
 32619  0013FA  6E04               	movwf	USBTransferOnePacket@len,c
 32620  0013FC  0E01               	movlw	1
 32621  0013FE  ECDD  F022         	call	_USBTransferOnePacket
 32622  001402  D0A3               	goto	L36
 32623  001404                     l14157:
 32624                           
 32625                           ;app_device_custom_hid.c: 150: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32626  001404  5059               	movf	_USBInHandle,w,c
 32627  001406  105A               	iorwf	_USBInHandle+1,w,c
 32628  001408  B4D8               	btfsc	status,2,c
 32629  00140A  D006               	goto	l14161
 32630  00140C  C059  FFD9         	movff	_USBInHandle,fsr2l
 32631  001410  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32632  001414  BEDF               	btfsc	indf2,7,c
 32633  001416  D0B8               	goto	l14215
 32634  001418                     l14161:
 32635                           
 32636                           ;app_device_custom_hid.c: 151: {
 32637                           ;app_device_custom_hid.c: 153: _fill_buffer_get_display1();
 32638  001418  EC81  F036         	call	__fill_buffer_get_display1	;wreg free
 32639                           
 32640                           ;app_device_custom_hid.c: 155: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32641  00141C  0E01               	movlw	1
 32642  00141E  6E01               	movwf	USBTransferOnePacket@dir,c
 32643  001420  0EB4               	movlw	low _ToSendDataBuffer
 32644  001422  6E02               	movwf	USBTransferOnePacket@data,c
 32645  001424  0E02               	movlw	high _ToSendDataBuffer
 32646  001426  6E03               	movwf	USBTransferOnePacket@data+1,c
 32647  001428  0E40               	movlw	64
 32648  00142A  6E04               	movwf	USBTransferOnePacket@len,c
 32649  00142C  0E01               	movlw	1
 32650  00142E  ECDD  F022         	call	_USBTransferOnePacket
 32651  001432  D08B               	goto	L36
 32652  001434                     l14163:
 32653                           
 32654                           ;app_device_custom_hid.c: 161: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32655  001434  5059               	movf	_USBInHandle,w,c
 32656  001436  105A               	iorwf	_USBInHandle+1,w,c
 32657  001438  B4D8               	btfsc	status,2,c
 32658  00143A  D006               	goto	l14167
 32659  00143C  C059  FFD9         	movff	_USBInHandle,fsr2l
 32660  001440  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32661  001444  BEDF               	btfsc	indf2,7,c
 32662  001446  D0A0               	goto	l14215
 32663  001448                     l14167:
 32664                           
 32665                           ;app_device_custom_hid.c: 162: {
 32666                           ;app_device_custom_hid.c: 164: _fill_buffer_get_display2();
 32667  001448  EC5B  F036         	call	__fill_buffer_get_display2	;wreg free
 32668                           
 32669                           ;app_device_custom_hid.c: 166: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32670  00144C  0E01               	movlw	1
 32671  00144E  6E01               	movwf	USBTransferOnePacket@dir,c
 32672  001450  0EB4               	movlw	low _ToSendDataBuffer
 32673  001452  6E02               	movwf	USBTransferOnePacket@data,c
 32674  001454  0E02               	movlw	high _ToSendDataBuffer
 32675  001456  6E03               	movwf	USBTransferOnePacket@data+1,c
 32676  001458  0E40               	movlw	64
 32677  00145A  6E04               	movwf	USBTransferOnePacket@len,c
 32678  00145C  0E01               	movlw	1
 32679  00145E  ECDD  F022         	call	_USBTransferOnePacket
 32680  001462  D073               	goto	L36
 32681  001464                     l14169:
 32682                           
 32683                           ;app_device_custom_hid.c: 172: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32684  001464  5059               	movf	_USBInHandle,w,c
 32685  001466  105A               	iorwf	_USBInHandle+1,w,c
 32686  001468  B4D8               	btfsc	status,2,c
 32687  00146A  D006               	goto	l14173
 32688  00146C  C059  FFD9         	movff	_USBInHandle,fsr2l
 32689  001470  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32690  001474  BEDF               	btfsc	indf2,7,c
 32691  001476  D088               	goto	l14215
 32692  001478                     l14173:
 32693                           
 32694                           ;app_device_custom_hid.c: 173: {
 32695                           ;app_device_custom_hid.c: 175: _fill_buffer_get_calibration1();
 32696  001478  EC60  F02D         	call	__fill_buffer_get_calibration1	;wreg free
 32697                           
 32698                           ;app_device_custom_hid.c: 177: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32699  00147C  0E01               	movlw	1
 32700  00147E  6E01               	movwf	USBTransferOnePacket@dir,c
 32701  001480  0EB4               	movlw	low _ToSendDataBuffer
 32702  001482  6E02               	movwf	USBTransferOnePacket@data,c
 32703  001484  0E02               	movlw	high _ToSendDataBuffer
 32704  001486  6E03               	movwf	USBTransferOnePacket@data+1,c
 32705  001488  0E40               	movlw	64
 32706  00148A  6E04               	movwf	USBTransferOnePacket@len,c
 32707  00148C  0E01               	movlw	1
 32708  00148E  ECDD  F022         	call	_USBTransferOnePacket
 32709  001492  D05B               	goto	L36
 32710  001494                     l14177:
 32711                           
 32712                           ;app_device_custom_hid.c: 183: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32713  001494  5059               	movf	_USBInHandle,w,c
 32714  001496  105A               	iorwf	_USBInHandle+1,w,c
 32715  001498  B4D8               	btfsc	status,2,c
 32716  00149A  D006               	goto	l14181
 32717  00149C  C059  FFD9         	movff	_USBInHandle,fsr2l
 32718  0014A0  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32719  0014A4  BEDF               	btfsc	indf2,7,c
 32720  0014A6  D070               	goto	l14215
 32721  0014A8                     l14181:
 32722                           
 32723                           ;app_device_custom_hid.c: 184: {
 32724                           ;app_device_custom_hid.c: 186: _fill_buffer_get_calibration2();
 32725  0014A8  EC1E  F031         	call	__fill_buffer_get_calibration2	;wreg free
 32726                           
 32727                           ;app_device_custom_hid.c: 188: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32728  0014AC  0E01               	movlw	1
 32729  0014AE  6E01               	movwf	USBTransferOnePacket@dir,c
 32730  0014B0  0EB4               	movlw	low _ToSendDataBuffer
 32731  0014B2  6E02               	movwf	USBTransferOnePacket@data,c
 32732  0014B4  0E02               	movlw	high _ToSendDataBuffer
 32733  0014B6  6E03               	movwf	USBTransferOnePacket@data+1,c
 32734  0014B8  0E40               	movlw	64
 32735  0014BA  6E04               	movwf	USBTransferOnePacket@len,c
 32736  0014BC  0E01               	movlw	1
 32737  0014BE  ECDD  F022         	call	_USBTransferOnePacket
 32738  0014C2  D043               	goto	L36
 32739  0014C4                     l14185:
 32740                           
 32741                           ;app_device_custom_hid.c: 194: LATDbits.LD2 ^= 1;
 32742  0014C4  748C               	btg	3980,2,c	;volatile
 32743                           
 32744                           ;app_device_custom_hid.c: 195: break;
 32745  0014C6  D060               	goto	l14215
 32746  0014C8                     l14187:
 32747                           
 32748                           ;app_device_custom_hid.c: 199: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32749  0014C8  5059               	movf	_USBInHandle,w,c
 32750  0014CA  105A               	iorwf	_USBInHandle+1,w,c
 32751  0014CC  B4D8               	btfsc	status,2,c
 32752  0014CE  D006               	goto	l14191
 32753  0014D0  C059  FFD9         	movff	_USBInHandle,fsr2l
 32754  0014D4  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32755  0014D8  BEDF               	btfsc	indf2,7,c
 32756  0014DA  D056               	goto	l14215
 32757  0014DC                     l14191:
 32758                           
 32759                           ;app_device_custom_hid.c: 200: {
 32760                           ;app_device_custom_hid.c: 202: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 32761  0014DC  0E81               	movlw	129
 32762  0014DE  0102               	movlb	2	; () banked
 32763  0014E0  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 32764                           
 32765                           ; BSR set to: 2
 32766                           ;app_device_custom_hid.c: 203: if(PORTAbits.RA0)
 32767  0014E2  A080               	btfss	3968,0,c	;volatile
 32768  0014E4  D002               	goto	l14197
 32769                           
 32770                           ; BSR set to: 2
 32771                           ;app_device_custom_hid.c: 204: {
 32772                           ;app_device_custom_hid.c: 206: ToSendDataBuffer[1] = 0x01;
 32773  0014E6  0E01               	movlw	1
 32774  0014E8  D001               	goto	L35
 32775  0014EA                     l14197:
 32776                           
 32777                           ; BSR set to: 2
 32778                           ;app_device_custom_hid.c: 208: else
 32779                           ;app_device_custom_hid.c: 209: {
 32780                           ;app_device_custom_hid.c: 211: ToSendDataBuffer[1] = 0x00;
 32781  0014EA  0E00               	movlw	0
 32782  0014EC                     L35:
 32783  0014EC  0102               	movlb	2	; () banked
 32784  0014EE  6FB5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 32785                           
 32786                           ; BSR set to: 2
 32787                           ;app_device_custom_hid.c: 212: }
 32788                           ;app_device_custom_hid.c: 214: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32789                           
 32790                           ; BSR set to: 2
 32791  0014F0  0E01               	movlw	1
 32792  0014F2  6E01               	movwf	USBTransferOnePacket@dir,c
 32793  0014F4  0EB4               	movlw	low _ToSendDataBuffer
 32794  0014F6  6E02               	movwf	USBTransferOnePacket@data,c
 32795  0014F8  0E02               	movlw	high _ToSendDataBuffer
 32796  0014FA  6E03               	movwf	USBTransferOnePacket@data+1,c
 32797  0014FC  0E40               	movlw	64
 32798  0014FE  6E04               	movwf	USBTransferOnePacket@len,c
 32799  001500  0E01               	movlw	1
 32800  001502  ECDD  F022         	call	_USBTransferOnePacket
 32801  001506  D021               	goto	L36
 32802  001508                     l14201:
 32803                           
 32804                           ;app_device_custom_hid.c: 219: {
 32805                           ;app_device_custom_hid.c: 220: uint16_t return_value;
 32806                           ;app_device_custom_hid.c: 222: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 32807  001508  5059               	movf	_USBInHandle,w,c
 32808  00150A  105A               	iorwf	_USBInHandle+1,w,c
 32809  00150C  B4D8               	btfsc	status,2,c
 32810  00150E  D006               	goto	l14205
 32811  001510  C059  FFD9         	movff	_USBInHandle,fsr2l
 32812  001514  C05A  FFDA         	movff	_USBInHandle+1,fsr2h
 32813  001518  BEDF               	btfsc	indf2,7,c
 32814  00151A  D036               	goto	l14215
 32815  00151C                     l14205:
 32816                           
 32817                           ;app_device_custom_hid.c: 223: {
 32818                           ;app_device_custom_hid.c: 225: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 32819  00151C  0E37               	movlw	55
 32820  00151E  0102               	movlb	2	; () banked
 32821  001520  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 32822                           
 32823                           ;app_device_custom_hid.c: 227: return_value = 0x1234;
 32824  001522  0E12               	movlw	18
 32825  001524  6E36               	movwf	APP_DeviceCustomHIDTasks@return_value+1,c
 32826  001526  0E34               	movlw	52
 32827  001528  6E35               	movwf	APP_DeviceCustomHIDTasks@return_value,c
 32828                           
 32829                           ; BSR set to: 2
 32830                           ;app_device_custom_hid.c: 228: ToSendDataBuffer[1] = (uint8_t) return_value;
 32831  00152A  C035  F2B5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 32832                           
 32833                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[2] = return_value >> 8;
 32834  00152E  5036               	movf	APP_DeviceCustomHIDTasks@return_value+1,w,c
 32835  001530  0102               	movlb	2	; () banked
 32836  001532  6FB6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 32837                           
 32838                           ; BSR set to: 2
 32839                           ;app_device_custom_hid.c: 231: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 32840  001534  0E01               	movlw	1
 32841  001536  6E01               	movwf	USBTransferOnePacket@dir,c
 32842  001538  0EB4               	movlw	low _ToSendDataBuffer
 32843  00153A  6E02               	movwf	USBTransferOnePacket@data,c
 32844  00153C  0E02               	movlw	high _ToSendDataBuffer
 32845  00153E  6E03               	movwf	USBTransferOnePacket@data+1,c
 32846  001540  0E40               	movlw	64
 32847  001542  6E04               	movwf	USBTransferOnePacket@len,c
 32848  001544  0E01               	movlw	1
 32849  001546  ECDD  F022         	call	_USBTransferOnePacket
 32850  00154A                     L36:
 32851  00154A  C001  F059         	movff	?_USBTransferOnePacket,_USBInHandle
 32852  00154E  C002  F05A         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 32853                           
 32854                           ;app_device_custom_hid.c: 235: }
 32855                           
 32856                           ;app_device_custom_hid.c: 232: }
 32857                           ;app_device_custom_hid.c: 233: }
 32858                           ;app_device_custom_hid.c: 234: break;
 32859  001552  D01A               	goto	l14215
 32860  001554                     l14213:
 32861  001554  0103               	movlb	3	; () banked
 32862  001556  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
 32863                           
 32864                           ; Switch size 1, requested type "space"
 32865                           ; Number of cases is 8, Range of values is 16 to 129
 32866                           ; switch strategies available:
 32867                           ; Name         Instructions Cycles
 32868                           ; simple_byte           25    13 (average)
 32869                           ;	Chosen strategy is simple_byte
 32870  001558  0A10               	xorlw	16	; case 16
 32871  00155A  B4D8               	btfsc	status,2,c
 32872  00155C  D73B               	goto	l14149
 32873  00155E  0A01               	xorlw	1	; case 17
 32874  001560  B4D8               	btfsc	status,2,c
 32875  001562  D750               	goto	l14157
 32876  001564  0A03               	xorlw	3	; case 18
 32877  001566  B4D8               	btfsc	status,2,c
 32878  001568  D765               	goto	l14163
 32879  00156A  0A01               	xorlw	1	; case 19
 32880  00156C  B4D8               	btfsc	status,2,c
 32881  00156E  D77A               	goto	l14169
 32882  001570  0A07               	xorlw	7	; case 20
 32883  001572  B4D8               	btfsc	status,2,c
 32884  001574  D78F               	goto	l14177
 32885  001576  0A23               	xorlw	35	; case 55
 32886  001578  B4D8               	btfsc	status,2,c
 32887  00157A  D7C6               	goto	l14201
 32888  00157C  0AB7               	xorlw	183	; case 128
 32889  00157E  B4D8               	btfsc	status,2,c
 32890  001580  D7A1               	goto	l14185
 32891  001582  0A01               	xorlw	1	; case 129
 32892  001584  B4D8               	btfsc	status,2,c
 32893  001586  D7A0               	goto	l14187
 32894  001588                     l14215:
 32895                           
 32896                           ;app_device_custom_hid.c: 238: idx = 1;
 32897  001588  0E01               	movlw	1
 32898  00158A  D074               	goto	L37
 32899  00158C                     l14217:
 32900                           
 32901                           ;app_device_custom_hid.c: 244: _parse_command_short(ReceivedDataBuffer[idx]);
 32902  00158C  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32903  00158E  0D01               	mullw	1
 32904  001590  0E00               	movlw	low _ReceivedDataBuffer
 32905  001592  24F3               	addwf	prodl,w,c
 32906  001594  6ED9               	movwf	fsr2l,c
 32907  001596  0E03               	movlw	high _ReceivedDataBuffer
 32908  001598  20F4               	addwfc	prodh,w,c
 32909  00159A  6EDA               	movwf	fsr2h,c
 32910  00159C  50DF               	movf	indf2,w,c
 32911  00159E  ECDD  F038         	call	__parse_command_short
 32912                           
 32913                           ;app_device_custom_hid.c: 245: ++idx;
 32914  0015A2  2A37               	incf	APP_DeviceCustomHIDTasks@idx,f,c
 32915                           
 32916                           ;app_device_custom_hid.c: 246: break;
 32917  0015A4  D084               	goto	l14233
 32918  0015A6                     l14221:
 32919                           
 32920                           ;app_device_custom_hid.c: 248: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 32921  0015A6  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32922  0015A8  6E2D               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),c
 32923  0015AA  6A2E               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),c
 32924  0015AC  0E01               	movlw	1
 32925  0015AE  262D               	addwf	??_APP_DeviceCustomHIDTasks,f,c
 32926  0015B0  0E00               	movlw	0
 32927  0015B2  222E               	addwfc	??_APP_DeviceCustomHIDTasks+1,f,c
 32928  0015B4  0E00               	movlw	low _ReceivedDataBuffer
 32929  0015B6  242D               	addwf	??_APP_DeviceCustomHIDTasks,w,c
 32930  0015B8  6ED9               	movwf	fsr2l,c
 32931  0015BA  0E03               	movlw	high _ReceivedDataBuffer
 32932  0015BC  202E               	addwfc	??_APP_DeviceCustomHIDTasks+1,w,c
 32933  0015BE  6EDA               	movwf	fsr2h,c
 32934  0015C0  50DF               	movf	indf2,w,c
 32935  0015C2  6E02               	movwf	__parse_command_long@data,c
 32936  0015C4  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32937  0015C6  0D01               	mullw	1
 32938  0015C8  0E00               	movlw	low _ReceivedDataBuffer
 32939  0015CA  24F3               	addwf	prodl,w,c
 32940  0015CC  6ED9               	movwf	fsr2l,c
 32941  0015CE  0E03               	movlw	high _ReceivedDataBuffer
 32942  0015D0  20F4               	addwfc	prodh,w,c
 32943  0015D2  6EDA               	movwf	fsr2h,c
 32944  0015D4  50DF               	movf	indf2,w,c
 32945  0015D6  ECE0  F033         	call	__parse_command_long
 32946                           
 32947                           ;app_device_custom_hid.c: 249: idx += 2;
 32948  0015DA  0E02               	movlw	2
 32949  0015DC  D048               	goto	L38
 32950  0015DE                     l14225:
 32951                           
 32952                           ;app_device_custom_hid.c: 252: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 32953  0015DE  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32954  0015E0  6E2D               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),c
 32955  0015E2  6A2E               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),c
 32956  0015E4  0E01               	movlw	1
 32957  0015E6  262D               	addwf	??_APP_DeviceCustomHIDTasks,f,c
 32958  0015E8  0E00               	movlw	0
 32959  0015EA  222E               	addwfc	??_APP_DeviceCustomHIDTasks+1,f,c
 32960  0015EC  0E00               	movlw	low _ReceivedDataBuffer
 32961  0015EE  242D               	addwf	??_APP_DeviceCustomHIDTasks,w,c
 32962  0015F0  6ED9               	movwf	fsr2l,c
 32963  0015F2  0E03               	movlw	high _ReceivedDataBuffer
 32964  0015F4  202E               	addwfc	??_APP_DeviceCustomHIDTasks+1,w,c
 32965  0015F6  6EDA               	movwf	fsr2h,c
 32966  0015F8  50DF               	movf	indf2,w,c
 32967  0015FA  6E04               	movwf	__parse_command_calibration@item,c
 32968  0015FC  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32969  0015FE  6E2F               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),c
 32970  001600  6A30               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),c
 32971  001602  0E02               	movlw	2
 32972  001604  262F               	addwf	??_APP_DeviceCustomHIDTasks+2,f,c
 32973  001606  0E00               	movlw	0
 32974  001608  2230               	addwfc	??_APP_DeviceCustomHIDTasks+3,f,c
 32975  00160A  0E00               	movlw	low _ReceivedDataBuffer
 32976  00160C  242F               	addwf	??_APP_DeviceCustomHIDTasks+2,w,c
 32977  00160E  6ED9               	movwf	fsr2l,c
 32978  001610  0E03               	movlw	high _ReceivedDataBuffer
 32979  001612  2030               	addwfc	??_APP_DeviceCustomHIDTasks+3,w,c
 32980  001614  6EDA               	movwf	fsr2h,c
 32981  001616  50DF               	movf	indf2,w,c
 32982  001618  6E05               	movwf	__parse_command_calibration@dat1,c
 32983  00161A  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32984  00161C  6E31               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),c
 32985  00161E  6A32               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),c
 32986  001620  0E03               	movlw	3
 32987  001622  2631               	addwf	??_APP_DeviceCustomHIDTasks+4,f,c
 32988  001624  0E00               	movlw	0
 32989  001626  2232               	addwfc	??_APP_DeviceCustomHIDTasks+5,f,c
 32990  001628  0E00               	movlw	low _ReceivedDataBuffer
 32991  00162A  2431               	addwf	??_APP_DeviceCustomHIDTasks+4,w,c
 32992  00162C  6ED9               	movwf	fsr2l,c
 32993  00162E  0E03               	movlw	high _ReceivedDataBuffer
 32994  001630  2032               	addwfc	??_APP_DeviceCustomHIDTasks+5,w,c
 32995  001632  6EDA               	movwf	fsr2h,c
 32996  001634  50DF               	movf	indf2,w,c
 32997  001636  6E06               	movwf	__parse_command_calibration@dat2,c
 32998  001638  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 32999  00163A  6E33               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),c
 33000  00163C  6A34               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),c
 33001  00163E  0E04               	movlw	4
 33002  001640  2633               	addwf	??_APP_DeviceCustomHIDTasks+6,f,c
 33003  001642  0E00               	movlw	0
 33004  001644  2234               	addwfc	??_APP_DeviceCustomHIDTasks+7,f,c
 33005  001646  0E00               	movlw	low _ReceivedDataBuffer
 33006  001648  2433               	addwf	??_APP_DeviceCustomHIDTasks+6,w,c
 33007  00164A  6ED9               	movwf	fsr2l,c
 33008  00164C  0E03               	movlw	high _ReceivedDataBuffer
 33009  00164E  2034               	addwfc	??_APP_DeviceCustomHIDTasks+7,w,c
 33010  001650  6EDA               	movwf	fsr2h,c
 33011  001652  50DF               	movf	indf2,w,c
 33012  001654  6E07               	movwf	__parse_command_calibration@dat3,c
 33013  001656  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33014  001658  0D01               	mullw	1
 33015  00165A  0E00               	movlw	low _ReceivedDataBuffer
 33016  00165C  24F3               	addwf	prodl,w,c
 33017  00165E  6ED9               	movwf	fsr2l,c
 33018  001660  0E03               	movlw	high _ReceivedDataBuffer
 33019  001662  20F4               	addwfc	prodh,w,c
 33020  001664  6EDA               	movwf	fsr2h,c
 33021  001666  50DF               	movf	indf2,w,c
 33022  001668  EC7B  F01E         	call	__parse_command_calibration
 33023                           
 33024                           ;app_device_custom_hid.c: 253: idx += 5;
 33025  00166C  0E05               	movlw	5
 33026  00166E                     L38:
 33027  00166E  2637               	addwf	APP_DeviceCustomHIDTasks@idx,f,c
 33028                           
 33029                           ;app_device_custom_hid.c: 254: break;
 33030  001670  D01E               	goto	l14233
 33031  001672                     l14229:
 33032                           
 33033                           ;app_device_custom_hid.c: 256: idx = 65;
 33034  001672  0E41               	movlw	65
 33035  001674                     L37:
 33036  001674  6E37               	movwf	APP_DeviceCustomHIDTasks@idx,c
 33037                           
 33038                           ;app_device_custom_hid.c: 257: }
 33039  001676  D01B               	goto	l14233
 33040  001678                     l14231:
 33041  001678  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33042  00167A  0D01               	mullw	1
 33043  00167C  0E00               	movlw	low _ReceivedDataBuffer
 33044  00167E  24F3               	addwf	prodl,w,c
 33045  001680  6ED9               	movwf	fsr2l,c
 33046  001682  0E03               	movlw	high _ReceivedDataBuffer
 33047  001684  20F4               	addwfc	prodh,w,c
 33048  001686  6EDA               	movwf	fsr2h,c
 33049  001688  50DF               	movf	indf2,w,c
 33050  00168A  0BF0               	andlw	240
 33051  00168C  6E2D               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),c
 33052  00168E  6A2E               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),c
 33053                           
 33054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33055                           ; Switch size 1, requested type "space"
 33056                           ; Number of cases is 1, Range of values is 0 to 0
 33057                           ; switch strategies available:
 33058                           ; Name         Instructions Cycles
 33059                           ; simple_byte            4     3 (average)
 33060                           ;	Chosen strategy is simple_byte
 33061  001690  502E               	movf	??_APP_DeviceCustomHIDTasks+1,w,c
 33062  001692  0A00               	xorlw	0	; case 0
 33063  001694  A4D8               	btfss	status,2,c
 33064  001696  D7ED               	goto	l14229
 33065                           
 33066                           ; Switch size 1, requested type "space"
 33067                           ; Number of cases is 3, Range of values is 48 to 96
 33068                           ; switch strategies available:
 33069                           ; Name         Instructions Cycles
 33070                           ; simple_byte           10     6 (average)
 33071                           ;	Chosen strategy is simple_byte
 33072  001698  502D               	movf	??_APP_DeviceCustomHIDTasks,w,c
 33073  00169A  0A30               	xorlw	48	; case 48
 33074  00169C  B4D8               	btfsc	status,2,c
 33075  00169E  D776               	goto	l14217
 33076  0016A0  0A70               	xorlw	112	; case 64
 33077  0016A2  B4D8               	btfsc	status,2,c
 33078  0016A4  D780               	goto	l14221
 33079  0016A6  0A20               	xorlw	32	; case 96
 33080  0016A8  B4D8               	btfsc	status,2,c
 33081  0016AA  D799               	goto	l14225
 33082  0016AC  D7E2               	goto	l14229
 33083  0016AE                     l14233:
 33084  0016AE  0E3D               	movlw	61
 33085  0016B0  6437               	cpfsgt	APP_DeviceCustomHIDTasks@idx,c
 33086  0016B2  D7E2               	goto	l14231
 33087                           
 33088                           ;app_device_custom_hid.c: 258: }
 33089                           ;app_device_custom_hid.c: 262: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 33090  0016B4  0E00               	movlw	0
 33091  0016B6  6E01               	movwf	USBTransferOnePacket@dir,c
 33092  0016B8  0E00               	movlw	low _ReceivedDataBuffer
 33093  0016BA  6E02               	movwf	USBTransferOnePacket@data,c
 33094  0016BC  0E03               	movlw	high _ReceivedDataBuffer
 33095  0016BE  6E03               	movwf	USBTransferOnePacket@data+1,c
 33096  0016C0  0E40               	movlw	64
 33097  0016C2  6E04               	movwf	USBTransferOnePacket@len,c
 33098  0016C4  0E01               	movlw	1
 33099  0016C6  ECDD  F022         	call	_USBTransferOnePacket
 33100  0016CA  C001  F174         	movff	?_USBTransferOnePacket,_USBOutHandle
 33101  0016CE  C002  F175         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 33102  0016D2  0012               	return	
 33103  0016D4                     __end_of_APP_DeviceCustomHIDTasks:
 33104                           	opt stack 0
 33105                           tosu	equ	0xFFF
 33106                           tosh	equ	0xFFE
 33107                           tosl	equ	0xFFD
 33108                           pclath	equ	0xFFA
 33109                           tblptru	equ	0xFF8
 33110                           tblptrh	equ	0xFF7
 33111                           tblptrl	equ	0xFF6
 33112                           tablat	equ	0xFF5
 33113                           prodh	equ	0xFF4
 33114                           prodl	equ	0xFF3
 33115                           intcon	equ	0xFF2
 33116                           intcon2	equ	0xFF1
 33117                           intcon3	equ	0xFF0
 33118                           indf0	equ	0xFEF
 33119                           postinc0	equ	0xFEE
 33120                           fsr0h	equ	0xFEA
 33121                           fsr0l	equ	0xFE9
 33122                           wreg	equ	0xFE8
 33123                           indf1	equ	0xFE7
 33124                           postdec1	equ	0xFE5
 33125                           plusw1	equ	0xFE3
 33126                           fsr1h	equ	0xFE2
 33127                           fsr1l	equ	0xFE1
 33128                           indf2	equ	0xFDF
 33129                           postinc2	equ	0xFDE
 33130                           postdec2	equ	0xFDD
 33131                           plusw2	equ	0xFDB
 33132                           fsr2h	equ	0xFDA
 33133                           fsr2l	equ	0xFD9
 33134                           status	equ	0xFD8
 33135                           
 33136 ;; *************** function __parse_command_short *****************
 33137 ;; Defined at:
 33138 ;;		line 358 in file "app_device_custom_hid.c"
 33139 ;; Parameters:    Size  Location     Type
 33140 ;;  cmd             1    wreg     unsigned char 
 33141 ;; Auto vars:     Size  Location     Type
 33142 ;;  cmd             1   43[COMRAM] unsigned char 
 33143 ;; Return value:  Size  Location     Type
 33144 ;;                  1    wreg      void 
 33145 ;; Registers used:
 33146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33147 ;; Tracked objects:
 33148 ;;		On entry : 0/0
 33149 ;;		On exit  : 0/0
 33150 ;;		Unchanged: 0/0
 33151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33156 ;;Total ram usage:        1 bytes
 33157 ;; Hardware stack levels used:    1
 33158 ;; Hardware stack levels required when called:    4
 33159 ;; This function calls:
 33160 ;;		_rtcc_write_eeprom
 33161 ;; This function is called by:
 33162 ;;		_APP_DeviceCustomHIDTasks
 33163 ;; This function uses a non-reentrant model
 33164 ;;
 33165                           
 33166                           	psect	text152
 33167  0071BA                     __ptext152:
 33168                           	opt stack 0
 33169  0071BA                     __parse_command_short:
 33170                           	opt stack 25
 33171                           
 33172                           ;incstack = 0
 33173                           ;__parse_command_short@cmd stored from wreg
 33174  0071BA  6E2C               	movwf	__parse_command_short@cmd,c
 33175                           
 33176                           ;app_device_custom_hid.c: 360: switch(cmd)
 33177  0071BC  D00C               	goto	l13075
 33178  0071BE                     l13065:
 33179                           
 33180                           ;app_device_custom_hid.c: 363: --os.encoderCount;
 33181  0071BE  0100               	movlb	0	; () banked
 33182  0071C0  07E2               	decf	_os& (0+255),f,b	;volatile
 33183                           
 33184                           ;app_device_custom_hid.c: 364: break;
 33185  0071C2  0012               	return	
 33186  0071C4                     l13067:
 33187                           
 33188                           ;app_device_custom_hid.c: 366: ++os.encoderCount;
 33189  0071C4  0100               	movlb	0	; () banked
 33190  0071C6  2BE2               	incf	_os& (0+255),f,b	;volatile
 33191                           
 33192                           ;app_device_custom_hid.c: 367: break;
 33193  0071C8  0012               	return	
 33194  0071CA                     l13069:
 33195                           
 33196                           ;app_device_custom_hid.c: 369: ++os.buttonCount;
 33197  0071CA  0100               	movlb	0	; () banked
 33198  0071CC  2BE3               	incf	(_os+1)& (0+255),f,b	;volatile
 33199                           
 33200                           ;app_device_custom_hid.c: 370: break;
 33201  0071CE  0012               	return	
 33202  0071D0                     l13071:
 33203                           
 33204                           ;app_device_custom_hid.c: 372: rtcc_write_eeprom();
 33205  0071D0  EC84  F038         	call	_rtcc_write_eeprom	;wreg free
 33206                           
 33207                           ;app_device_custom_hid.c: 374: }
 33208                           
 33209                           ;app_device_custom_hid.c: 373: break;
 33210  0071D4  0012               	return	
 33211  0071D6                     l13075:
 33212  0071D6  502C               	movf	__parse_command_short@cmd,w,c
 33213                           
 33214                           ; Switch size 1, requested type "space"
 33215                           ; Number of cases is 4, Range of values is 60 to 63
 33216                           ; switch strategies available:
 33217                           ; Name         Instructions Cycles
 33218                           ; simple_byte           13     7 (average)
 33219                           ;	Chosen strategy is simple_byte
 33220  0071D8  0A3C               	xorlw	60	; case 60
 33221  0071DA  B4D8               	btfsc	status,2,c
 33222  0071DC  D7F0               	goto	l13065
 33223  0071DE  0A01               	xorlw	1	; case 61
 33224  0071E0  B4D8               	btfsc	status,2,c
 33225  0071E2  D7F0               	goto	l13067
 33226  0071E4  0A03               	xorlw	3	; case 62
 33227  0071E6  B4D8               	btfsc	status,2,c
 33228  0071E8  D7F0               	goto	l13069
 33229  0071EA  0A01               	xorlw	1	; case 63
 33230  0071EC  A4D8               	btfss	status,2,c
 33231  0071EE  0012               	return	
 33232  0071F0  D7EF               	goto	l13071
 33233  0071F2                     __end_of__parse_command_short:
 33234                           	opt stack 0
 33235                           tosu	equ	0xFFF
 33236                           tosh	equ	0xFFE
 33237                           tosl	equ	0xFFD
 33238                           pclath	equ	0xFFA
 33239                           tblptru	equ	0xFF8
 33240                           tblptrh	equ	0xFF7
 33241                           tblptrl	equ	0xFF6
 33242                           tablat	equ	0xFF5
 33243                           prodh	equ	0xFF4
 33244                           prodl	equ	0xFF3
 33245                           intcon	equ	0xFF2
 33246                           intcon2	equ	0xFF1
 33247                           intcon3	equ	0xFF0
 33248                           indf0	equ	0xFEF
 33249                           postinc0	equ	0xFEE
 33250                           fsr0h	equ	0xFEA
 33251                           fsr0l	equ	0xFE9
 33252                           wreg	equ	0xFE8
 33253                           indf1	equ	0xFE7
 33254                           postdec1	equ	0xFE5
 33255                           plusw1	equ	0xFE3
 33256                           fsr1h	equ	0xFE2
 33257                           fsr1l	equ	0xFE1
 33258                           indf2	equ	0xFDF
 33259                           postinc2	equ	0xFDE
 33260                           postdec2	equ	0xFDD
 33261                           plusw2	equ	0xFDB
 33262                           fsr2h	equ	0xFDA
 33263                           fsr2l	equ	0xFD9
 33264                           status	equ	0xFD8
 33265                           
 33266 ;; *************** function _rtcc_write_eeprom *****************
 33267 ;; Defined at:
 33268 ;;		line 344 in file "rtcc.c"
 33269 ;; Parameters:    Size  Location     Type
 33270 ;;		None
 33271 ;; Auto vars:     Size  Location     Type
 33272 ;;  date            6   37[COMRAM] unsigned char [6]
 33273 ;; Return value:  Size  Location     Type
 33274 ;;                  1    wreg      void 
 33275 ;; Registers used:
 33276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33277 ;; Tracked objects:
 33278 ;;		On entry : 0/0
 33279 ;;		On exit  : 0/0
 33280 ;;		Unchanged: 0/0
 33281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33283 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33285 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33286 ;;Total ram usage:        6 bytes
 33287 ;; Hardware stack levels used:    1
 33288 ;; Hardware stack levels required when called:    3
 33289 ;; This function calls:
 33290 ;;		_i2c_eeprom_write
 33291 ;;		_rtcc_get_day
 33292 ;;		_rtcc_get_hours
 33293 ;;		_rtcc_get_minutes
 33294 ;;		_rtcc_get_month
 33295 ;;		_rtcc_get_seconds
 33296 ;;		_rtcc_get_year
 33297 ;; This function is called by:
 33298 ;;		__parse_command_short
 33299 ;; This function uses a non-reentrant model
 33300 ;;
 33301                           
 33302                           	psect	text153
 33303  007108                     __ptext153:
 33304                           	opt stack 0
 33305  007108                     _rtcc_write_eeprom:
 33306                           	opt stack 25
 33307                           
 33308                           ;rtcc.c: 346: uint8_t date[6];
 33309                           ;rtcc.c: 347: date[0] = rtcc_get_year();
 33310                           
 33311                           ;incstack = 0
 33312  007108  ECBF  F03B         	call	_rtcc_get_year	;wreg free
 33313  00710C  6E26               	movwf	rtcc_write_eeprom@date,c
 33314                           
 33315                           ;rtcc.c: 348: date[1] = rtcc_get_month();
 33316  00710E  ECD3  F03B         	call	_rtcc_get_month	;wreg free
 33317  007112  6E27               	movwf	rtcc_write_eeprom@date+1,c
 33318                           
 33319                           ;rtcc.c: 349: date[2] = rtcc_get_day();
 33320  007114  ECF1  F03B         	call	_rtcc_get_day	;wreg free
 33321  007118  6E28               	movwf	rtcc_write_eeprom@date+2,c
 33322                           
 33323                           ;rtcc.c: 350: date[3] = rtcc_get_hours();
 33324  00711A  ECE7  F03B         	call	_rtcc_get_hours	;wreg free
 33325  00711E  6E29               	movwf	rtcc_write_eeprom@date+3,c
 33326                           
 33327                           ;rtcc.c: 351: date[4] = rtcc_get_minutes();
 33328  007120  ECDD  F03B         	call	_rtcc_get_minutes	;wreg free
 33329  007124  6E2A               	movwf	rtcc_write_eeprom@date+4,c
 33330                           
 33331                           ;rtcc.c: 352: date[5] = rtcc_get_seconds();
 33332  007126  ECC9  F03B         	call	_rtcc_get_seconds	;wreg free
 33333  00712A  6E2B               	movwf	rtcc_write_eeprom@date+5,c
 33334                           
 33335                           ;rtcc.c: 354: i2c_eeprom_write(0x0040, &date[0], 6);
 33336  00712C  0E00               	movlw	0
 33337  00712E  6E0C               	movwf	i2c_eeprom_write@address+1,c
 33338  007130  0E40               	movlw	64
 33339  007132  6E0B               	movwf	i2c_eeprom_write@address,c
 33340  007134  0E26               	movlw	low rtcc_write_eeprom@date
 33341  007136  6E0D               	movwf	i2c_eeprom_write@data,c
 33342  007138  0E00               	movlw	high rtcc_write_eeprom@date
 33343  00713A  6E0E               	movwf	i2c_eeprom_write@data+1,c
 33344  00713C  0E06               	movlw	6
 33345  00713E  6E0F               	movwf	i2c_eeprom_write@length,c
 33346  007140  ECA2  F030         	call	_i2c_eeprom_write	;wreg free
 33347  007144  0012               	return		;funcret
 33348  007146                     __end_of_rtcc_write_eeprom:
 33349                           	opt stack 0
 33350                           tosu	equ	0xFFF
 33351                           tosh	equ	0xFFE
 33352                           tosl	equ	0xFFD
 33353                           pclath	equ	0xFFA
 33354                           tblptru	equ	0xFF8
 33355                           tblptrh	equ	0xFF7
 33356                           tblptrl	equ	0xFF6
 33357                           tablat	equ	0xFF5
 33358                           prodh	equ	0xFF4
 33359                           prodl	equ	0xFF3
 33360                           intcon	equ	0xFF2
 33361                           intcon2	equ	0xFF1
 33362                           intcon3	equ	0xFF0
 33363                           indf0	equ	0xFEF
 33364                           postinc0	equ	0xFEE
 33365                           fsr0h	equ	0xFEA
 33366                           fsr0l	equ	0xFE9
 33367                           wreg	equ	0xFE8
 33368                           indf1	equ	0xFE7
 33369                           postdec1	equ	0xFE5
 33370                           plusw1	equ	0xFE3
 33371                           fsr1h	equ	0xFE2
 33372                           fsr1l	equ	0xFE1
 33373                           indf2	equ	0xFDF
 33374                           postinc2	equ	0xFDE
 33375                           postdec2	equ	0xFDD
 33376                           plusw2	equ	0xFDB
 33377                           fsr2h	equ	0xFDA
 33378                           fsr2l	equ	0xFD9
 33379                           status	equ	0xFD8
 33380                           
 33381 ;; *************** function _i2c_eeprom_write *****************
 33382 ;; Defined at:
 33383 ;;		line 519 in file "i2c.c"
 33384 ;; Parameters:    Size  Location     Type
 33385 ;;  address         2   10[COMRAM] unsigned int 
 33386 ;;  data            2   12[COMRAM] PTR unsigned char 
 33387 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 33388 ;;  length          1   14[COMRAM] unsigned char 
 33389 ;; Auto vars:     Size  Location     Type
 33390 ;;  dat            17   18[COMRAM] unsigned char [17]
 33391 ;;  cntr            1   36[COMRAM] unsigned char 
 33392 ;;  slave_addres    1   35[COMRAM] unsigned char 
 33393 ;; Return value:  Size  Location     Type
 33394 ;;                  1    wreg      void 
 33395 ;; Registers used:
 33396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33397 ;; Tracked objects:
 33398 ;;		On entry : 0/0
 33399 ;;		On exit  : 0/0
 33400 ;;		Unchanged: 0/0
 33401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33402 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33403 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33404 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33405 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33406 ;;Total ram usage:       27 bytes
 33407 ;; Hardware stack levels used:    1
 33408 ;; Hardware stack levels required when called:    2
 33409 ;; This function calls:
 33410 ;;		__i2c_write
 33411 ;;		_i2c_set_frequency
 33412 ;; This function is called by:
 33413 ;;		__write_calibration
 33414 ;;		_rtcc_write_eeprom
 33415 ;; This function uses a non-reentrant model
 33416 ;;
 33417                           
 33418                           	psect	text154
 33419  006144                     __ptext154:
 33420                           	opt stack 0
 33421  006144                     _i2c_eeprom_write:
 33422                           	opt stack 26
 33423                           
 33424                           ;i2c.c: 521: uint8_t cntr;
 33425                           ;i2c.c: 522: uint8_t slave_address;
 33426                           ;i2c.c: 523: uint8_t dat[17];
 33427                           ;i2c.c: 525: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 33428                           
 33429                           ;incstack = 0
 33430  006144  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 33431  006148  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 33432  00614C  0E07               	movlw	7
 33433  00614E  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 33434  006150                     u8415:
 33435  006150  90D8               	bcf	status,0,c
 33436  006152  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 33437  006154  3210               	rrcf	??_i2c_eeprom_write,f,c
 33438  006156  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 33439  006158  D7FB               	goto	u8415
 33440  00615A  5010               	movf	??_i2c_eeprom_write,w,c
 33441  00615C  0B0E               	andlw	14
 33442  00615E  09A0               	iorlw	160
 33443  006160  6E24               	movwf	i2c_eeprom_write@slave_address,c
 33444                           
 33445                           ;i2c.c: 526: dat[0] = address & 0xFF;
 33446  006162  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 33447                           
 33448                           ;i2c.c: 528: length &= 0b00001111;
 33449  006166  0E0F               	movlw	15
 33450  006168  160F               	andwf	i2c_eeprom_write@length,f,c
 33451                           
 33452                           ;i2c.c: 529: for(cntr=0; cntr<length; ++cntr)
 33453  00616A  0E00               	movlw	0
 33454  00616C  6E25               	movwf	i2c_eeprom_write@cntr,c
 33455  00616E  D018               	goto	l11219
 33456  006170                     l11215:
 33457                           
 33458                           ;i2c.c: 530: {
 33459                           ;i2c.c: 531: dat[cntr+1] = data[cntr];
 33460  006170  5025               	movf	i2c_eeprom_write@cntr,w,c
 33461  006172  0D01               	mullw	1
 33462  006174  50F3               	movf	prodl,w,c
 33463  006176  240D               	addwf	i2c_eeprom_write@data,w,c
 33464  006178  6ED9               	movwf	fsr2l,c
 33465  00617A  50F4               	movf	prodh,w,c
 33466  00617C  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 33467  00617E  6EDA               	movwf	fsr2h,c
 33468  006180  5025               	movf	i2c_eeprom_write@cntr,w,c
 33469  006182  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 33470  006184  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 33471  006186  0E01               	movlw	1
 33472  006188  2610               	addwf	??_i2c_eeprom_write,f,c
 33473  00618A  0E00               	movlw	0
 33474  00618C  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 33475  00618E  0E13               	movlw	low i2c_eeprom_write@dat
 33476  006190  2410               	addwf	??_i2c_eeprom_write,w,c
 33477  006192  6EE1               	movwf	fsr1l,c
 33478  006194  0E00               	movlw	high i2c_eeprom_write@dat
 33479  006196  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 33480  006198  6EE2               	movwf	fsr1h,c
 33481  00619A  CFDF FFE7          	movff	indf2,indf1
 33482  00619E  2A25               	incf	i2c_eeprom_write@cntr,f,c
 33483  0061A0                     l11219:
 33484  0061A0  500F               	movf	i2c_eeprom_write@length,w,c
 33485  0061A2  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 33486  0061A4  A0D8               	btfss	status,0,c
 33487  0061A6  D7E4               	goto	l11215
 33488                           
 33489                           ;i2c.c: 532: }
 33490                           ;i2c.c: 535: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 33491  0061A8  0E02               	movlw	2
 33492  0061AA  EC06  F03A         	call	_i2c_set_frequency
 33493                           
 33494                           ;i2c.c: 537: _i2c_write(slave_address, &dat[0], length+1);
 33495  0061AE  0E13               	movlw	low i2c_eeprom_write@dat
 33496  0061B0  6E06               	movwf	__i2c_write@data,c
 33497  0061B2  0E00               	movlw	high i2c_eeprom_write@dat
 33498  0061B4  6E07               	movwf	__i2c_write@data+1,c
 33499  0061B6  280F               	incf	i2c_eeprom_write@length,w,c
 33500  0061B8  6E08               	movwf	__i2c_write@length,c
 33501  0061BA  5024               	movf	i2c_eeprom_write@slave_address,w,c
 33502  0061BC  EC14  F037         	call	__i2c_write
 33503  0061C0  0012               	return		;funcret
 33504  0061C2                     __end_of_i2c_eeprom_write:
 33505                           	opt stack 0
 33506                           tosu	equ	0xFFF
 33507                           tosh	equ	0xFFE
 33508                           tosl	equ	0xFFD
 33509                           pclath	equ	0xFFA
 33510                           tblptru	equ	0xFF8
 33511                           tblptrh	equ	0xFF7
 33512                           tblptrl	equ	0xFF6
 33513                           tablat	equ	0xFF5
 33514                           prodh	equ	0xFF4
 33515                           prodl	equ	0xFF3
 33516                           intcon	equ	0xFF2
 33517                           intcon2	equ	0xFF1
 33518                           intcon3	equ	0xFF0
 33519                           indf0	equ	0xFEF
 33520                           postinc0	equ	0xFEE
 33521                           fsr0h	equ	0xFEA
 33522                           fsr0l	equ	0xFE9
 33523                           wreg	equ	0xFE8
 33524                           indf1	equ	0xFE7
 33525                           postdec1	equ	0xFE5
 33526                           plusw1	equ	0xFE3
 33527                           fsr1h	equ	0xFE2
 33528                           fsr1l	equ	0xFE1
 33529                           indf2	equ	0xFDF
 33530                           postinc2	equ	0xFDE
 33531                           postdec2	equ	0xFDD
 33532                           plusw2	equ	0xFDB
 33533                           fsr2h	equ	0xFDA
 33534                           fsr2l	equ	0xFD9
 33535                           status	equ	0xFD8
 33536                           
 33537 ;; *************** function _i2c_set_frequency *****************
 33538 ;; Defined at:
 33539 ;;		line 106 in file "i2c.c"
 33540 ;; Parameters:    Size  Location     Type
 33541 ;;  frequency       1    wreg     enum E8179
 33542 ;; Auto vars:     Size  Location     Type
 33543 ;;  frequency       1    0[COMRAM] enum E8179
 33544 ;; Return value:  Size  Location     Type
 33545 ;;                  1    wreg      void 
 33546 ;; Registers used:
 33547 ;;		wreg, status,2, status,0
 33548 ;; Tracked objects:
 33549 ;;		On entry : 0/0
 33550 ;;		On exit  : 0/0
 33551 ;;		Unchanged: 0/0
 33552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33557 ;;Total ram usage:        1 bytes
 33558 ;; Hardware stack levels used:    1
 33559 ;; This function calls:
 33560 ;;		Nothing
 33561 ;; This function is called by:
 33562 ;;		_i2c_init
 33563 ;;		_i2c_display_send_init_sequence
 33564 ;;		__ic2_display_set_address
 33565 ;;		_i2c_display_cursor
 33566 ;;		_i2c_display_write_fixed
 33567 ;;		_i2c_digipot_reset_on
 33568 ;;		_i2c_digipot_reset_off
 33569 ;;		_i2c_digipot_backlight
 33570 ;;		_i2c_eeprom_write
 33571 ;;		_i2c_eeprom_read
 33572 ;;		_i2c_display_init
 33573 ;;		_i2c_display_write
 33574 ;;		_i2c_digipot_set_defaults
 33575 ;;		_i2c_adc_start
 33576 ;;		_i2c_adc_read
 33577 ;;		_i2c_eeprom_writeByte
 33578 ;;		_i2c_eeprom_readByte
 33579 ;; This function uses a non-reentrant model
 33580 ;;
 33581                           
 33582                           	psect	text155
 33583  00740C                     __ptext155:
 33584                           	opt stack 0
 33585  00740C                     _i2c_set_frequency:
 33586                           	opt stack 28
 33587                           
 33588                           ;incstack = 0
 33589                           ;i2c_set_frequency@frequency stored from wreg
 33590  00740C  6E01               	movwf	i2c_set_frequency@frequency,c
 33591                           
 33592                           ;i2c.c: 108: switch(frequency)
 33593  00740E  D007               	goto	l10865
 33594  007410                     l10857:
 33595                           
 33596                           ;i2c.c: 111: SSP1ADD = 119;
 33597  007410  0E77               	movlw	119
 33598  007412  D003               	goto	L40
 33599  007414                     l10859:
 33600                           
 33601                           ;i2c.c: 114: SSP1ADD = 59;
 33602  007414  0E3B               	movlw	59
 33603  007416  D001               	goto	L40
 33604  007418                     l10861:
 33605                           
 33606                           ;i2c.c: 117: SSP1ADD = 29;
 33607  007418  0E1D               	movlw	29
 33608  00741A                     L40:
 33609  00741A  6EC8               	movwf	4040,c	;volatile
 33610                           
 33611                           ;i2c.c: 119: }
 33612                           
 33613                           ;i2c.c: 118: break;
 33614  00741C  D00A               	goto	l10867
 33615  00741E                     l10865:
 33616  00741E  5001               	movf	i2c_set_frequency@frequency,w,c
 33617                           
 33618                           ; Switch size 1, requested type "space"
 33619                           ; Number of cases is 3, Range of values is 0 to 2
 33620                           ; switch strategies available:
 33621                           ; Name         Instructions Cycles
 33622                           ; simple_byte           10     6 (average)
 33623                           ;	Chosen strategy is simple_byte
 33624  007420  0A00               	xorlw	0	; case 0
 33625  007422  B4D8               	btfsc	status,2,c
 33626  007424  D7F5               	goto	l10857
 33627  007426  0A01               	xorlw	1	; case 1
 33628  007428  B4D8               	btfsc	status,2,c
 33629  00742A  D7F4               	goto	l10859
 33630  00742C  0A03               	xorlw	3	; case 2
 33631  00742E  B4D8               	btfsc	status,2,c
 33632  007430  D7F3               	goto	l10861
 33633  007432                     l10867:
 33634                           
 33635                           ;i2c.c: 121: i2c_frequency = frequency;
 33636  007432  C001  F186         	movff	i2c_set_frequency@frequency,_i2c_frequency
 33637  007436  0012               	return		;funcret
 33638  007438                     __end_of_i2c_set_frequency:
 33639                           	opt stack 0
 33640                           tosu	equ	0xFFF
 33641                           tosh	equ	0xFFE
 33642                           tosl	equ	0xFFD
 33643                           pclath	equ	0xFFA
 33644                           tblptru	equ	0xFF8
 33645                           tblptrh	equ	0xFF7
 33646                           tblptrl	equ	0xFF6
 33647                           tablat	equ	0xFF5
 33648                           prodh	equ	0xFF4
 33649                           prodl	equ	0xFF3
 33650                           intcon	equ	0xFF2
 33651                           intcon2	equ	0xFF1
 33652                           intcon3	equ	0xFF0
 33653                           indf0	equ	0xFEF
 33654                           postinc0	equ	0xFEE
 33655                           fsr0h	equ	0xFEA
 33656                           fsr0l	equ	0xFE9
 33657                           wreg	equ	0xFE8
 33658                           indf1	equ	0xFE7
 33659                           postdec1	equ	0xFE5
 33660                           plusw1	equ	0xFE3
 33661                           fsr1h	equ	0xFE2
 33662                           fsr1l	equ	0xFE1
 33663                           indf2	equ	0xFDF
 33664                           postinc2	equ	0xFDE
 33665                           postdec2	equ	0xFDD
 33666                           plusw2	equ	0xFDB
 33667                           fsr2h	equ	0xFDA
 33668                           fsr2l	equ	0xFD9
 33669                           status	equ	0xFD8
 33670                           
 33671 ;; *************** function __i2c_write *****************
 33672 ;; Defined at:
 33673 ;;		line 125 in file "i2c.c"
 33674 ;; Parameters:    Size  Location     Type
 33675 ;;  slave_addres    1    wreg     unsigned char 
 33676 ;;  data            2    5[COMRAM] PTR unsigned char 
 33677 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 33678 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 33679 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 33680 ;;  length          1    7[COMRAM] unsigned char 
 33681 ;; Auto vars:     Size  Location     Type
 33682 ;;  slave_addres    1    8[COMRAM] unsigned char 
 33683 ;;  cntr            1    9[COMRAM] unsigned char 
 33684 ;; Return value:  Size  Location     Type
 33685 ;;                  1    wreg      void 
 33686 ;; Registers used:
 33687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33688 ;; Tracked objects:
 33689 ;;		On entry : 0/0
 33690 ;;		On exit  : 0/0
 33691 ;;		Unchanged: 0/0
 33692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33693 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33697 ;;Total ram usage:        5 bytes
 33698 ;; Hardware stack levels used:    1
 33699 ;; Hardware stack levels required when called:    1
 33700 ;; This function calls:
 33701 ;;		__i2c_send
 33702 ;;		__i2c_start
 33703 ;;		__i2c_stop
 33704 ;;		__i2c_wait_idle
 33705 ;; This function is called by:
 33706 ;;		_i2c_display_send_init_sequence
 33707 ;;		__ic2_display_set_address
 33708 ;;		_i2c_digipot_reset_on
 33709 ;;		_i2c_digipot_reset_off
 33710 ;;		_i2c_digipot_backlight
 33711 ;;		_i2c_eeprom_write
 33712 ;;		_i2c_eeprom_read
 33713 ;;		_i2c_display_init
 33714 ;;		_i2c_digipot_set_defaults
 33715 ;;		_i2c_adc_start
 33716 ;;		_i2c_eeprom_writeByte
 33717 ;;		_i2c_eeprom_readByte
 33718 ;; This function uses a non-reentrant model
 33719 ;;
 33720                           
 33721                           	psect	text156
 33722  006E28                     __ptext156:
 33723                           	opt stack 0
 33724  006E28                     __i2c_write:
 33725                           	opt stack 27
 33726                           
 33727                           ;incstack = 0
 33728                           ;__i2c_write@slave_address stored from wreg
 33729  006E28  6E09               	movwf	__i2c_write@slave_address,c
 33730                           
 33731                           ;i2c.c: 127: uint8_t cntr;
 33732                           ;i2c.c: 129: _i2c_wait_idle();
 33733  006E2A  EC92  F034         	call	__i2c_wait_idle	;wreg free
 33734                           
 33735                           ;i2c.c: 130: _i2c_start();
 33736  006E2E  EC6C  F03C         	call	__i2c_start	;wreg free
 33737                           
 33738                           ;i2c.c: 131: _i2c_wait_idle();
 33739  006E32  EC92  F034         	call	__i2c_wait_idle	;wreg free
 33740                           
 33741                           ;i2c.c: 132: _i2c_send(slave_address);
 33742  006E36  5009               	movf	__i2c_write@slave_address,w,c
 33743  006E38  EC70  F03C         	call	__i2c_send
 33744                           
 33745                           ;i2c.c: 133: _i2c_wait_idle();
 33746  006E3C  EC92  F034         	call	__i2c_wait_idle	;wreg free
 33747                           
 33748                           ;i2c.c: 135: for(cntr=0; cntr<length; ++cntr)
 33749  006E40  0E00               	movlw	0
 33750  006E42  6E0A               	movwf	__i2c_write@cntr,c
 33751  006E44  D00E               	goto	l10887
 33752  006E46                     l10881:
 33753                           
 33754                           ;i2c.c: 136: {
 33755                           ;i2c.c: 137: _i2c_send(data[cntr]);
 33756  006E46  500A               	movf	__i2c_write@cntr,w,c
 33757  006E48  0D01               	mullw	1
 33758  006E4A  50F3               	movf	prodl,w,c
 33759  006E4C  2406               	addwf	__i2c_write@data,w,c
 33760  006E4E  6ED9               	movwf	fsr2l,c
 33761  006E50  50F4               	movf	prodh,w,c
 33762  006E52  2007               	addwfc	__i2c_write@data+1,w,c
 33763  006E54  6EDA               	movwf	fsr2h,c
 33764  006E56  50DF               	movf	indf2,w,c
 33765  006E58  EC70  F03C         	call	__i2c_send
 33766                           
 33767                           ;i2c.c: 138: _i2c_wait_idle();
 33768  006E5C  EC92  F034         	call	__i2c_wait_idle	;wreg free
 33769  006E60  2A0A               	incf	__i2c_write@cntr,f,c
 33770  006E62                     l10887:
 33771  006E62  5008               	movf	__i2c_write@length,w,c
 33772  006E64  5C0A               	subwf	__i2c_write@cntr,w,c
 33773  006E66  A0D8               	btfss	status,0,c
 33774  006E68  D7EE               	goto	l10881
 33775                           
 33776                           ;i2c.c: 139: }
 33777                           ;i2c.c: 141: _i2c_stop();
 33778  006E6A  EC68  F03C         	call	__i2c_stop	;wreg free
 33779  006E6E  0012               	return		;funcret
 33780  006E70                     __end_of__i2c_write:
 33781                           	opt stack 0
 33782                           tosu	equ	0xFFF
 33783                           tosh	equ	0xFFE
 33784                           tosl	equ	0xFFD
 33785                           pclath	equ	0xFFA
 33786                           tblptru	equ	0xFF8
 33787                           tblptrh	equ	0xFF7
 33788                           tblptrl	equ	0xFF6
 33789                           tablat	equ	0xFF5
 33790                           prodh	equ	0xFF4
 33791                           prodl	equ	0xFF3
 33792                           intcon	equ	0xFF2
 33793                           intcon2	equ	0xFF1
 33794                           intcon3	equ	0xFF0
 33795                           indf0	equ	0xFEF
 33796                           postinc0	equ	0xFEE
 33797                           fsr0h	equ	0xFEA
 33798                           fsr0l	equ	0xFE9
 33799                           wreg	equ	0xFE8
 33800                           indf1	equ	0xFE7
 33801                           postdec1	equ	0xFE5
 33802                           plusw1	equ	0xFE3
 33803                           fsr1h	equ	0xFE2
 33804                           fsr1l	equ	0xFE1
 33805                           indf2	equ	0xFDF
 33806                           postinc2	equ	0xFDE
 33807                           postdec2	equ	0xFDD
 33808                           plusw2	equ	0xFDB
 33809                           fsr2h	equ	0xFDA
 33810                           fsr2l	equ	0xFD9
 33811                           status	equ	0xFD8
 33812                           
 33813 ;; *************** function __i2c_wait_idle *****************
 33814 ;; Defined at:
 33815 ;;		line 44 in file "i2c.c"
 33816 ;; Parameters:    Size  Location     Type
 33817 ;;		None
 33818 ;; Auto vars:     Size  Location     Type
 33819 ;;		None
 33820 ;; Return value:  Size  Location     Type
 33821 ;;                  1    wreg      void 
 33822 ;; Registers used:
 33823 ;;		wreg, status,2, status,0
 33824 ;; Tracked objects:
 33825 ;;		On entry : 0/0
 33826 ;;		On exit  : 0/0
 33827 ;;		Unchanged: 0/0
 33828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33831 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33832 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33833 ;;Total ram usage:        5 bytes
 33834 ;; Hardware stack levels used:    1
 33835 ;; This function calls:
 33836 ;;		Nothing
 33837 ;; This function is called by:
 33838 ;;		__i2c_write
 33839 ;;		__i2c_read
 33840 ;;		_i2c_display_write_fixed
 33841 ;;		_i2c_display_write
 33842 ;;		_i2c_adc_read
 33843 ;; This function uses a non-reentrant model
 33844 ;;
 33845                           
 33846                           	psect	text157
 33847  006924                     __ptext157:
 33848                           	opt stack 0
 33849  006924                     __i2c_wait_idle:
 33850                           	opt stack 27
 33851  006924                     l10411:
 33852  006924  A4C7               	btfss	4039,2,c	;volatile
 33853  006926  D003               	goto	u7400
 33854  006928  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33855  00692A  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33856  00692C  D001               	goto	u7408
 33857  00692E                     u7400:
 33858  00692E  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33859  006930                     u7408:
 33860  006930  A0C5               	btfss	4037,0,c	;volatile
 33861  006932  D003               	goto	u7410
 33862  006934  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33863  006936  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33864  006938  D001               	goto	u7418
 33865  00693A                     u7410:
 33866  00693A  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33867  00693C                     u7418:
 33868  00693C  A2C5               	btfss	4037,1,c	;volatile
 33869  00693E  D003               	goto	u7420
 33870  006940  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33871  006942  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33872  006944  D001               	goto	u7428
 33873  006946                     u7420:
 33874  006946  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33875  006948                     u7428:
 33876  006948  A4C5               	btfss	4037,2,c	;volatile
 33877  00694A  D003               	goto	u7430
 33878  00694C  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33879  00694E  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33880  006950  D001               	goto	u7438
 33881  006952                     u7430:
 33882  006952  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33883  006954                     u7438:
 33884  006954  A6C5               	btfss	4037,3,c	;volatile
 33885  006956  D003               	goto	u7440
 33886  006958  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33887  00695A  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33888  00695C  D001               	goto	u7448
 33889  00695E                     u7440:
 33890  00695E  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33891  006960                     u7448:
 33892  006960  A8C5               	btfss	4037,4,c	;volatile
 33893  006962  D002               	goto	u7450
 33894  006964  0E01               	movlw	1
 33895  006966  D001               	goto	u7456
 33896  006968                     u7450:
 33897  006968  0E00               	movlw	0
 33898  00696A                     u7456:
 33899  00696A  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33900  00696C  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33901  00696E  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33902  006970  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33903  006972  1001               	iorwf	??__i2c_wait_idle,w,c
 33904  006974  0900               	iorlw	0
 33905  006976  B4D8               	btfsc	status,2,c
 33906  006978  0012               	return	
 33907  00697A  D7D4               	goto	l10411
 33908  00697C                     __end_of__i2c_wait_idle:
 33909                           	opt stack 0
 33910                           tosu	equ	0xFFF
 33911                           tosh	equ	0xFFE
 33912                           tosl	equ	0xFFD
 33913                           pclath	equ	0xFFA
 33914                           tblptru	equ	0xFF8
 33915                           tblptrh	equ	0xFF7
 33916                           tblptrl	equ	0xFF6
 33917                           tablat	equ	0xFF5
 33918                           prodh	equ	0xFF4
 33919                           prodl	equ	0xFF3
 33920                           intcon	equ	0xFF2
 33921                           intcon2	equ	0xFF1
 33922                           intcon3	equ	0xFF0
 33923                           indf0	equ	0xFEF
 33924                           postinc0	equ	0xFEE
 33925                           fsr0h	equ	0xFEA
 33926                           fsr0l	equ	0xFE9
 33927                           wreg	equ	0xFE8
 33928                           indf1	equ	0xFE7
 33929                           postdec1	equ	0xFE5
 33930                           plusw1	equ	0xFE3
 33931                           fsr1h	equ	0xFE2
 33932                           fsr1l	equ	0xFE1
 33933                           indf2	equ	0xFDF
 33934                           postinc2	equ	0xFDE
 33935                           postdec2	equ	0xFDD
 33936                           plusw2	equ	0xFDB
 33937                           fsr2h	equ	0xFDA
 33938                           fsr2l	equ	0xFD9
 33939                           status	equ	0xFD8
 33940                           
 33941 ;; *************** function __i2c_stop *****************
 33942 ;; Defined at:
 33943 ;;		line 71 in file "i2c.c"
 33944 ;; Parameters:    Size  Location     Type
 33945 ;;		None
 33946 ;; Auto vars:     Size  Location     Type
 33947 ;;		None
 33948 ;; Return value:  Size  Location     Type
 33949 ;;                  1    wreg      void 
 33950 ;; Registers used:
 33951 ;;		None
 33952 ;; Tracked objects:
 33953 ;;		On entry : 0/0
 33954 ;;		On exit  : 0/0
 33955 ;;		Unchanged: 0/0
 33956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33961 ;;Total ram usage:        0 bytes
 33962 ;; Hardware stack levels used:    1
 33963 ;; This function calls:
 33964 ;;		Nothing
 33965 ;; This function is called by:
 33966 ;;		__i2c_write
 33967 ;;		__i2c_read
 33968 ;;		_i2c_display_write_fixed
 33969 ;;		_i2c_display_write
 33970 ;;		_i2c_adc_read
 33971 ;; This function uses a non-reentrant model
 33972 ;;
 33973                           
 33974                           	psect	text158
 33975  0078D0                     __ptext158:
 33976                           	opt stack 0
 33977  0078D0                     __i2c_stop:
 33978                           	opt stack 27
 33979                           
 33980                           ;i2c.c: 73: SSP1CON2bits.PEN = 1;
 33981                           
 33982                           ;incstack = 0
 33983  0078D0  84C5               	bsf	4037,2,c	;volatile
 33984  0078D2                     l1290:
 33985  0078D2  A4C5               	btfss	4037,2,c	;volatile
 33986  0078D4  0012               	return	
 33987  0078D6  D7FD               	goto	l1290
 33988  0078D8                     __end_of__i2c_stop:
 33989                           	opt stack 0
 33990                           tosu	equ	0xFFF
 33991                           tosh	equ	0xFFE
 33992                           tosl	equ	0xFFD
 33993                           pclath	equ	0xFFA
 33994                           tblptru	equ	0xFF8
 33995                           tblptrh	equ	0xFF7
 33996                           tblptrl	equ	0xFF6
 33997                           tablat	equ	0xFF5
 33998                           prodh	equ	0xFF4
 33999                           prodl	equ	0xFF3
 34000                           intcon	equ	0xFF2
 34001                           intcon2	equ	0xFF1
 34002                           intcon3	equ	0xFF0
 34003                           indf0	equ	0xFEF
 34004                           postinc0	equ	0xFEE
 34005                           fsr0h	equ	0xFEA
 34006                           fsr0l	equ	0xFE9
 34007                           wreg	equ	0xFE8
 34008                           indf1	equ	0xFE7
 34009                           postdec1	equ	0xFE5
 34010                           plusw1	equ	0xFE3
 34011                           fsr1h	equ	0xFE2
 34012                           fsr1l	equ	0xFE1
 34013                           indf2	equ	0xFDF
 34014                           postinc2	equ	0xFDE
 34015                           postdec2	equ	0xFDD
 34016                           plusw2	equ	0xFDB
 34017                           fsr2h	equ	0xFDA
 34018                           fsr2l	equ	0xFD9
 34019                           status	equ	0xFD8
 34020                           
 34021 ;; *************** function __i2c_start *****************
 34022 ;; Defined at:
 34023 ;;		line 50 in file "i2c.c"
 34024 ;; Parameters:    Size  Location     Type
 34025 ;;		None
 34026 ;; Auto vars:     Size  Location     Type
 34027 ;;		None
 34028 ;; Return value:  Size  Location     Type
 34029 ;;                  1    wreg      void 
 34030 ;; Registers used:
 34031 ;;		None
 34032 ;; Tracked objects:
 34033 ;;		On entry : 0/0
 34034 ;;		On exit  : 0/0
 34035 ;;		Unchanged: 0/0
 34036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34041 ;;Total ram usage:        0 bytes
 34042 ;; Hardware stack levels used:    1
 34043 ;; This function calls:
 34044 ;;		Nothing
 34045 ;; This function is called by:
 34046 ;;		__i2c_write
 34047 ;;		__i2c_read
 34048 ;;		_i2c_display_write_fixed
 34049 ;;		_i2c_display_write
 34050 ;;		_i2c_adc_read
 34051 ;; This function uses a non-reentrant model
 34052 ;;
 34053                           
 34054                           	psect	text159
 34055  0078D8                     __ptext159:
 34056                           	opt stack 0
 34057  0078D8                     __i2c_start:
 34058                           	opt stack 27
 34059                           
 34060                           ;i2c.c: 52: SSP1CON2bits.SEN=1;
 34061                           
 34062                           ;incstack = 0
 34063  0078D8  80C5               	bsf	4037,0,c	;volatile
 34064  0078DA                     l1275:
 34065  0078DA  A0C5               	btfss	4037,0,c	;volatile
 34066  0078DC  0012               	return	
 34067  0078DE  D7FD               	goto	l1275
 34068  0078E0                     __end_of__i2c_start:
 34069                           	opt stack 0
 34070                           tosu	equ	0xFFF
 34071                           tosh	equ	0xFFE
 34072                           tosl	equ	0xFFD
 34073                           pclath	equ	0xFFA
 34074                           tblptru	equ	0xFF8
 34075                           tblptrh	equ	0xFF7
 34076                           tblptrl	equ	0xFF6
 34077                           tablat	equ	0xFF5
 34078                           prodh	equ	0xFF4
 34079                           prodl	equ	0xFF3
 34080                           intcon	equ	0xFF2
 34081                           intcon2	equ	0xFF1
 34082                           intcon3	equ	0xFF0
 34083                           indf0	equ	0xFEF
 34084                           postinc0	equ	0xFEE
 34085                           fsr0h	equ	0xFEA
 34086                           fsr0l	equ	0xFE9
 34087                           wreg	equ	0xFE8
 34088                           indf1	equ	0xFE7
 34089                           postdec1	equ	0xFE5
 34090                           plusw1	equ	0xFE3
 34091                           fsr1h	equ	0xFE2
 34092                           fsr1l	equ	0xFE1
 34093                           indf2	equ	0xFDF
 34094                           postinc2	equ	0xFDE
 34095                           postdec2	equ	0xFDD
 34096                           plusw2	equ	0xFDB
 34097                           fsr2h	equ	0xFDA
 34098                           fsr2l	equ	0xFD9
 34099                           status	equ	0xFD8
 34100                           
 34101 ;; *************** function __i2c_send *****************
 34102 ;; Defined at:
 34103 ;;		line 57 in file "i2c.c"
 34104 ;; Parameters:    Size  Location     Type
 34105 ;;  dat             1    wreg     unsigned char 
 34106 ;; Auto vars:     Size  Location     Type
 34107 ;;  dat             1    0[COMRAM] unsigned char 
 34108 ;; Return value:  Size  Location     Type
 34109 ;;                  1    wreg      void 
 34110 ;; Registers used:
 34111 ;;		wreg
 34112 ;; Tracked objects:
 34113 ;;		On entry : 0/0
 34114 ;;		On exit  : 0/0
 34115 ;;		Unchanged: 0/0
 34116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34121 ;;Total ram usage:        1 bytes
 34122 ;; Hardware stack levels used:    1
 34123 ;; This function calls:
 34124 ;;		Nothing
 34125 ;; This function is called by:
 34126 ;;		__i2c_write
 34127 ;;		__i2c_read
 34128 ;;		_i2c_display_write_fixed
 34129 ;;		_i2c_display_write
 34130 ;;		_i2c_adc_read
 34131 ;; This function uses a non-reentrant model
 34132 ;;
 34133                           
 34134                           	psect	text160
 34135  0078E0                     __ptext160:
 34136                           	opt stack 0
 34137  0078E0                     __i2c_send:
 34138                           	opt stack 27
 34139                           
 34140                           ;incstack = 0
 34141                           ;__i2c_send@dat stored from wreg
 34142  0078E0  6E01               	movwf	__i2c_send@dat,c
 34143                           
 34144                           ;i2c.c: 59: SSP1BUF = dat;
 34145  0078E2  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 34146  0078E6  0012               	return		;funcret
 34147  0078E8                     __end_of__i2c_send:
 34148                           	opt stack 0
 34149                           tosu	equ	0xFFF
 34150                           tosh	equ	0xFFE
 34151                           tosl	equ	0xFFD
 34152                           pclath	equ	0xFFA
 34153                           tblptru	equ	0xFF8
 34154                           tblptrh	equ	0xFF7
 34155                           tblptrl	equ	0xFF6
 34156                           tablat	equ	0xFF5
 34157                           prodh	equ	0xFF4
 34158                           prodl	equ	0xFF3
 34159                           intcon	equ	0xFF2
 34160                           intcon2	equ	0xFF1
 34161                           intcon3	equ	0xFF0
 34162                           indf0	equ	0xFEF
 34163                           postinc0	equ	0xFEE
 34164                           fsr0h	equ	0xFEA
 34165                           fsr0l	equ	0xFE9
 34166                           wreg	equ	0xFE8
 34167                           indf1	equ	0xFE7
 34168                           postdec1	equ	0xFE5
 34169                           plusw1	equ	0xFE3
 34170                           fsr1h	equ	0xFE2
 34171                           fsr1l	equ	0xFE1
 34172                           indf2	equ	0xFDF
 34173                           postinc2	equ	0xFDE
 34174                           postdec2	equ	0xFDD
 34175                           plusw2	equ	0xFDB
 34176                           fsr2h	equ	0xFDA
 34177                           fsr2l	equ	0xFD9
 34178                           status	equ	0xFD8
 34179                           
 34180 ;; *************** function __parse_command_long *****************
 34181 ;; Defined at:
 34182 ;;		line 377 in file "app_device_custom_hid.c"
 34183 ;; Parameters:    Size  Location     Type
 34184 ;;  cmd             1    wreg     unsigned char 
 34185 ;;  data            1    1[COMRAM] unsigned char 
 34186 ;; Auto vars:     Size  Location     Type
 34187 ;;  cmd             1    2[COMRAM] unsigned char 
 34188 ;; Return value:  Size  Location     Type
 34189 ;;                  1    wreg      void 
 34190 ;; Registers used:
 34191 ;;		wreg, status,2, status,0, cstack
 34192 ;; Tracked objects:
 34193 ;;		On entry : 0/0
 34194 ;;		On exit  : 0/0
 34195 ;;		Unchanged: 0/0
 34196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34197 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34201 ;;Total ram usage:        2 bytes
 34202 ;; Hardware stack levels used:    1
 34203 ;; Hardware stack levels required when called:    2
 34204 ;; This function calls:
 34205 ;;		_rtcc_set_day
 34206 ;;		_rtcc_set_hours
 34207 ;;		_rtcc_set_minutes
 34208 ;;		_rtcc_set_month
 34209 ;;		_rtcc_set_seconds
 34210 ;;		_rtcc_set_year
 34211 ;; This function is called by:
 34212 ;;		_APP_DeviceCustomHIDTasks
 34213 ;; This function uses a non-reentrant model
 34214 ;;
 34215                           
 34216                           	psect	text161
 34217  0067C0                     __ptext161:
 34218                           	opt stack 0
 34219  0067C0                     __parse_command_long:
 34220                           	opt stack 27
 34221                           
 34222                           ;incstack = 0
 34223                           ;__parse_command_long@cmd stored from wreg
 34224  0067C0  6E03               	movwf	__parse_command_long@cmd,c
 34225                           
 34226                           ;app_device_custom_hid.c: 379: switch(cmd)
 34227  0067C2  D018               	goto	l13093
 34228  0067C4                     l13079:
 34229                           
 34230                           ;app_device_custom_hid.c: 382: rtcc_set_year(data);
 34231  0067C4  5002               	movf	__parse_command_long@data,w,c
 34232  0067C6  EC57  F03B         	call	_rtcc_set_year
 34233                           
 34234                           ;app_device_custom_hid.c: 383: break;
 34235  0067CA  0012               	return	
 34236  0067CC                     l13081:
 34237                           
 34238                           ;app_device_custom_hid.c: 385: rtcc_set_month(data);
 34239  0067CC  5002               	movf	__parse_command_long@data,w,c
 34240  0067CE  EC6F  F03B         	call	_rtcc_set_month
 34241                           
 34242                           ;app_device_custom_hid.c: 386: break;
 34243  0067D2  0012               	return	
 34244  0067D4                     l13083:
 34245                           
 34246                           ;app_device_custom_hid.c: 388: rtcc_set_day(data);
 34247  0067D4  5002               	movf	__parse_command_long@data,w,c
 34248  0067D6  EC93  F03B         	call	_rtcc_set_day
 34249                           
 34250                           ;app_device_custom_hid.c: 389: break;
 34251  0067DA  0012               	return	
 34252  0067DC                     l13085:
 34253                           
 34254                           ;app_device_custom_hid.c: 391: rtcc_set_hours(data);
 34255  0067DC  5002               	movf	__parse_command_long@data,w,c
 34256  0067DE  EC87  F03B         	call	_rtcc_set_hours
 34257                           
 34258                           ;app_device_custom_hid.c: 392: break;
 34259  0067E2  0012               	return	
 34260  0067E4                     l13087:
 34261                           
 34262                           ;app_device_custom_hid.c: 394: rtcc_set_minutes(data);
 34263  0067E4  5002               	movf	__parse_command_long@data,w,c
 34264  0067E6  EC7B  F03B         	call	_rtcc_set_minutes
 34265                           
 34266                           ;app_device_custom_hid.c: 395: break;
 34267  0067EA  0012               	return	
 34268  0067EC                     l13089:
 34269                           
 34270                           ;app_device_custom_hid.c: 397: rtcc_set_seconds(data);
 34271  0067EC  5002               	movf	__parse_command_long@data,w,c
 34272  0067EE  EC63  F03B         	call	_rtcc_set_seconds
 34273                           
 34274                           ;app_device_custom_hid.c: 399: }
 34275                           
 34276                           ;app_device_custom_hid.c: 398: break;
 34277  0067F2  0012               	return	
 34278  0067F4                     l13093:
 34279  0067F4  5003               	movf	__parse_command_long@cmd,w,c
 34280                           
 34281                           ; Switch size 1, requested type "space"
 34282                           ; Number of cases is 6, Range of values is 64 to 69
 34283                           ; switch strategies available:
 34284                           ; Name         Instructions Cycles
 34285                           ; simple_byte           19    10 (average)
 34286                           ;	Chosen strategy is simple_byte
 34287  0067F6  0A40               	xorlw	64	; case 64
 34288  0067F8  B4D8               	btfsc	status,2,c
 34289  0067FA  D7E4               	goto	l13079
 34290  0067FC  0A01               	xorlw	1	; case 65
 34291  0067FE  B4D8               	btfsc	status,2,c
 34292  006800  D7E5               	goto	l13081
 34293  006802  0A03               	xorlw	3	; case 66
 34294  006804  B4D8               	btfsc	status,2,c
 34295  006806  D7E6               	goto	l13083
 34296  006808  0A01               	xorlw	1	; case 67
 34297  00680A  B4D8               	btfsc	status,2,c
 34298  00680C  D7E7               	goto	l13085
 34299  00680E  0A07               	xorlw	7	; case 68
 34300  006810  B4D8               	btfsc	status,2,c
 34301  006812  D7E8               	goto	l13087
 34302  006814  0A01               	xorlw	1	; case 69
 34303  006816  A4D8               	btfss	status,2,c
 34304  006818  0012               	return	
 34305  00681A  D7E8               	goto	l13089
 34306  00681C                     __end_of__parse_command_long:
 34307                           	opt stack 0
 34308                           tosu	equ	0xFFF
 34309                           tosh	equ	0xFFE
 34310                           tosl	equ	0xFFD
 34311                           pclath	equ	0xFFA
 34312                           tblptru	equ	0xFF8
 34313                           tblptrh	equ	0xFF7
 34314                           tblptrl	equ	0xFF6
 34315                           tablat	equ	0xFF5
 34316                           prodh	equ	0xFF4
 34317                           prodl	equ	0xFF3
 34318                           intcon	equ	0xFF2
 34319                           intcon2	equ	0xFF1
 34320                           intcon3	equ	0xFF0
 34321                           indf0	equ	0xFEF
 34322                           postinc0	equ	0xFEE
 34323                           fsr0h	equ	0xFEA
 34324                           fsr0l	equ	0xFE9
 34325                           wreg	equ	0xFE8
 34326                           indf1	equ	0xFE7
 34327                           postdec1	equ	0xFE5
 34328                           plusw1	equ	0xFE3
 34329                           fsr1h	equ	0xFE2
 34330                           fsr1l	equ	0xFE1
 34331                           indf2	equ	0xFDF
 34332                           postinc2	equ	0xFDE
 34333                           postdec2	equ	0xFDD
 34334                           plusw2	equ	0xFDB
 34335                           fsr2h	equ	0xFDA
 34336                           fsr2l	equ	0xFD9
 34337                           status	equ	0xFD8
 34338                           
 34339 ;; *************** function _rtcc_set_year *****************
 34340 ;; Defined at:
 34341 ;;		line 117 in file "rtcc.c"
 34342 ;; Parameters:    Size  Location     Type
 34343 ;;  year            1    wreg     unsigned char 
 34344 ;; Auto vars:     Size  Location     Type
 34345 ;;  year            1    0[COMRAM] unsigned char 
 34346 ;; Return value:  Size  Location     Type
 34347 ;;                  1    wreg      void 
 34348 ;; Registers used:
 34349 ;;		wreg, status,2, cstack
 34350 ;; Tracked objects:
 34351 ;;		On entry : 0/0
 34352 ;;		On exit  : 0/0
 34353 ;;		Unchanged: 0/0
 34354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34359 ;;Total ram usage:        1 bytes
 34360 ;; Hardware stack levels used:    1
 34361 ;; Hardware stack levels required when called:    1
 34362 ;; This function calls:
 34363 ;;		__rtcc_write_disable
 34364 ;;		__rtcc_write_enable
 34365 ;; This function is called by:
 34366 ;;		__parse_command_long
 34367 ;;		_rtcc_read_eeprom
 34368 ;;		_rtcc_increment_year
 34369 ;;		_rtcc_decrement_year
 34370 ;; This function uses a non-reentrant model
 34371 ;;
 34372                           
 34373                           	psect	text162
 34374  0076AE                     __ptext162:
 34375                           	opt stack 0
 34376  0076AE                     _rtcc_set_year:
 34377                           	opt stack 26
 34378                           
 34379                           ;incstack = 0
 34380                           ;rtcc_set_year@year stored from wreg
 34381  0076AE  6E01               	movwf	rtcc_set_year@year,c
 34382                           
 34383                           ;rtcc.c: 119: _rtcc_write_enable();
 34384  0076B0  EC9F  F03B         	call	__rtcc_write_enable	;wreg free
 34385                           
 34386                           ;rtcc.c: 120: RTCCFGbits.RTCPTR1 = 1;
 34387  0076B4  010F               	movlb	15	; () banked
 34388  0076B6  833F               	bsf	63,1,b	;volatile
 34389                           
 34390                           ; BSR set to: 15
 34391                           ;rtcc.c: 121: RTCCFGbits.RTCPTR0 = 1;
 34392  0076B8  010F               	movlb	15	; () banked
 34393  0076BA  813F               	bsf	63,0,b	;volatile
 34394                           
 34395                           ; BSR set to: 15
 34396                           ;rtcc.c: 122: RTCVALL = year;
 34397  0076BC  C001  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 34398                           
 34399                           ;rtcc.c: 123: _rtcc_write_disable();
 34400  0076C0  ECAA  F03B         	call	__rtcc_write_disable	;wreg free
 34401  0076C4  0012               	return		;funcret
 34402  0076C6                     __end_of_rtcc_set_year:
 34403                           	opt stack 0
 34404                           tosu	equ	0xFFF
 34405                           tosh	equ	0xFFE
 34406                           tosl	equ	0xFFD
 34407                           pclath	equ	0xFFA
 34408                           tblptru	equ	0xFF8
 34409                           tblptrh	equ	0xFF7
 34410                           tblptrl	equ	0xFF6
 34411                           tablat	equ	0xFF5
 34412                           prodh	equ	0xFF4
 34413                           prodl	equ	0xFF3
 34414                           intcon	equ	0xFF2
 34415                           intcon2	equ	0xFF1
 34416                           intcon3	equ	0xFF0
 34417                           indf0	equ	0xFEF
 34418                           postinc0	equ	0xFEE
 34419                           fsr0h	equ	0xFEA
 34420                           fsr0l	equ	0xFE9
 34421                           wreg	equ	0xFE8
 34422                           indf1	equ	0xFE7
 34423                           postdec1	equ	0xFE5
 34424                           plusw1	equ	0xFE3
 34425                           fsr1h	equ	0xFE2
 34426                           fsr1l	equ	0xFE1
 34427                           indf2	equ	0xFDF
 34428                           postinc2	equ	0xFDE
 34429                           postdec2	equ	0xFDD
 34430                           plusw2	equ	0xFDB
 34431                           fsr2h	equ	0xFDA
 34432                           fsr2l	equ	0xFD9
 34433                           status	equ	0xFD8
 34434                           
 34435 ;; *************** function _rtcc_set_seconds *****************
 34436 ;; Defined at:
 34437 ;;		line 307 in file "rtcc.c"
 34438 ;; Parameters:    Size  Location     Type
 34439 ;;  seconds         1    wreg     unsigned char 
 34440 ;; Auto vars:     Size  Location     Type
 34441 ;;  seconds         1    0[COMRAM] unsigned char 
 34442 ;; Return value:  Size  Location     Type
 34443 ;;                  1    wreg      void 
 34444 ;; Registers used:
 34445 ;;		wreg, status,2, cstack
 34446 ;; Tracked objects:
 34447 ;;		On entry : 0/0
 34448 ;;		On exit  : 0/0
 34449 ;;		Unchanged: 0/0
 34450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34455 ;;Total ram usage:        1 bytes
 34456 ;; Hardware stack levels used:    1
 34457 ;; Hardware stack levels required when called:    1
 34458 ;; This function calls:
 34459 ;;		__rtcc_write_disable
 34460 ;;		__rtcc_write_enable
 34461 ;; This function is called by:
 34462 ;;		__parse_command_long
 34463 ;;		_rtcc_read_eeprom
 34464 ;;		_rtcc_increment_seconds
 34465 ;;		_rtcc_decrement_seconds
 34466 ;; This function uses a non-reentrant model
 34467 ;;
 34468                           
 34469                           	psect	text163
 34470  0076C6                     __ptext163:
 34471                           	opt stack 0
 34472  0076C6                     _rtcc_set_seconds:
 34473                           	opt stack 26
 34474                           
 34475                           ;incstack = 0
 34476                           ;rtcc_set_seconds@seconds stored from wreg
 34477  0076C6  6E01               	movwf	rtcc_set_seconds@seconds,c
 34478                           
 34479                           ;rtcc.c: 309: _rtcc_write_enable();
 34480  0076C8  EC9F  F03B         	call	__rtcc_write_enable	;wreg free
 34481                           
 34482                           ;rtcc.c: 310: RTCCFGbits.RTCPTR1 = 0;
 34483  0076CC  010F               	movlb	15	; () banked
 34484  0076CE  933F               	bcf	63,1,b	;volatile
 34485                           
 34486                           ; BSR set to: 15
 34487                           ;rtcc.c: 311: RTCCFGbits.RTCPTR0 = 0;
 34488  0076D0  010F               	movlb	15	; () banked
 34489  0076D2  913F               	bcf	63,0,b	;volatile
 34490                           
 34491                           ; BSR set to: 15
 34492                           ;rtcc.c: 312: RTCVALL = seconds;
 34493  0076D4  C001  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 34494                           
 34495                           ;rtcc.c: 313: _rtcc_write_disable();
 34496  0076D8  ECAA  F03B         	call	__rtcc_write_disable	;wreg free
 34497  0076DC  0012               	return		;funcret
 34498  0076DE                     __end_of_rtcc_set_seconds:
 34499                           	opt stack 0
 34500                           tosu	equ	0xFFF
 34501                           tosh	equ	0xFFE
 34502                           tosl	equ	0xFFD
 34503                           pclath	equ	0xFFA
 34504                           tblptru	equ	0xFF8
 34505                           tblptrh	equ	0xFF7
 34506                           tblptrl	equ	0xFF6
 34507                           tablat	equ	0xFF5
 34508                           prodh	equ	0xFF4
 34509                           prodl	equ	0xFF3
 34510                           intcon	equ	0xFF2
 34511                           intcon2	equ	0xFF1
 34512                           intcon3	equ	0xFF0
 34513                           indf0	equ	0xFEF
 34514                           postinc0	equ	0xFEE
 34515                           fsr0h	equ	0xFEA
 34516                           fsr0l	equ	0xFE9
 34517                           wreg	equ	0xFE8
 34518                           indf1	equ	0xFE7
 34519                           postdec1	equ	0xFE5
 34520                           plusw1	equ	0xFE3
 34521                           fsr1h	equ	0xFE2
 34522                           fsr1l	equ	0xFE1
 34523                           indf2	equ	0xFDF
 34524                           postinc2	equ	0xFDE
 34525                           postdec2	equ	0xFDD
 34526                           plusw2	equ	0xFDB
 34527                           fsr2h	equ	0xFDA
 34528                           fsr2l	equ	0xFD9
 34529                           status	equ	0xFD8
 34530                           
 34531 ;; *************** function _rtcc_set_month *****************
 34532 ;; Defined at:
 34533 ;;		line 155 in file "rtcc.c"
 34534 ;; Parameters:    Size  Location     Type
 34535 ;;  month           1    wreg     unsigned char 
 34536 ;; Auto vars:     Size  Location     Type
 34537 ;;  month           1    0[COMRAM] unsigned char 
 34538 ;; Return value:  Size  Location     Type
 34539 ;;                  1    wreg      void 
 34540 ;; Registers used:
 34541 ;;		wreg, status,2, cstack
 34542 ;; Tracked objects:
 34543 ;;		On entry : 0/0
 34544 ;;		On exit  : 0/0
 34545 ;;		Unchanged: 0/0
 34546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34551 ;;Total ram usage:        1 bytes
 34552 ;; Hardware stack levels used:    1
 34553 ;; Hardware stack levels required when called:    1
 34554 ;; This function calls:
 34555 ;;		__rtcc_write_disable
 34556 ;;		__rtcc_write_enable
 34557 ;; This function is called by:
 34558 ;;		__parse_command_long
 34559 ;;		_rtcc_read_eeprom
 34560 ;;		_rtcc_increment_month
 34561 ;;		_rtcc_decrement_month
 34562 ;; This function uses a non-reentrant model
 34563 ;;
 34564                           
 34565                           	psect	text164
 34566  0076DE                     __ptext164:
 34567                           	opt stack 0
 34568  0076DE                     _rtcc_set_month:
 34569                           	opt stack 26
 34570                           
 34571                           ;incstack = 0
 34572                           ;rtcc_set_month@month stored from wreg
 34573  0076DE  6E01               	movwf	rtcc_set_month@month,c
 34574                           
 34575                           ;rtcc.c: 157: _rtcc_write_enable();
 34576  0076E0  EC9F  F03B         	call	__rtcc_write_enable	;wreg free
 34577                           
 34578                           ;rtcc.c: 158: RTCCFGbits.RTCPTR1 = 1;
 34579  0076E4  010F               	movlb	15	; () banked
 34580  0076E6  833F               	bsf	63,1,b	;volatile
 34581                           
 34582                           ; BSR set to: 15
 34583                           ;rtcc.c: 159: RTCCFGbits.RTCPTR0 = 0;
 34584  0076E8  010F               	movlb	15	; () banked
 34585  0076EA  913F               	bcf	63,0,b	;volatile
 34586                           
 34587                           ; BSR set to: 15
 34588                           ;rtcc.c: 160: RTCVALH = month;
 34589  0076EC  C001  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 34590                           
 34591                           ;rtcc.c: 161: _rtcc_write_disable();
 34592  0076F0  ECAA  F03B         	call	__rtcc_write_disable	;wreg free
 34593  0076F4  0012               	return		;funcret
 34594  0076F6                     __end_of_rtcc_set_month:
 34595                           	opt stack 0
 34596                           tosu	equ	0xFFF
 34597                           tosh	equ	0xFFE
 34598                           tosl	equ	0xFFD
 34599                           pclath	equ	0xFFA
 34600                           tblptru	equ	0xFF8
 34601                           tblptrh	equ	0xFF7
 34602                           tblptrl	equ	0xFF6
 34603                           tablat	equ	0xFF5
 34604                           prodh	equ	0xFF4
 34605                           prodl	equ	0xFF3
 34606                           intcon	equ	0xFF2
 34607                           intcon2	equ	0xFF1
 34608                           intcon3	equ	0xFF0
 34609                           indf0	equ	0xFEF
 34610                           postinc0	equ	0xFEE
 34611                           fsr0h	equ	0xFEA
 34612                           fsr0l	equ	0xFE9
 34613                           wreg	equ	0xFE8
 34614                           indf1	equ	0xFE7
 34615                           postdec1	equ	0xFE5
 34616                           plusw1	equ	0xFE3
 34617                           fsr1h	equ	0xFE2
 34618                           fsr1l	equ	0xFE1
 34619                           indf2	equ	0xFDF
 34620                           postinc2	equ	0xFDE
 34621                           postdec2	equ	0xFDD
 34622                           plusw2	equ	0xFDB
 34623                           fsr2h	equ	0xFDA
 34624                           fsr2l	equ	0xFD9
 34625                           status	equ	0xFD8
 34626                           
 34627 ;; *************** function _rtcc_set_minutes *****************
 34628 ;; Defined at:
 34629 ;;		line 269 in file "rtcc.c"
 34630 ;; Parameters:    Size  Location     Type
 34631 ;;  minutes         1    wreg     unsigned char 
 34632 ;; Auto vars:     Size  Location     Type
 34633 ;;  minutes         1    0[COMRAM] unsigned char 
 34634 ;; Return value:  Size  Location     Type
 34635 ;;                  1    wreg      void 
 34636 ;; Registers used:
 34637 ;;		wreg, status,2, cstack
 34638 ;; Tracked objects:
 34639 ;;		On entry : 0/0
 34640 ;;		On exit  : 0/0
 34641 ;;		Unchanged: 0/0
 34642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34647 ;;Total ram usage:        1 bytes
 34648 ;; Hardware stack levels used:    1
 34649 ;; Hardware stack levels required when called:    1
 34650 ;; This function calls:
 34651 ;;		__rtcc_write_disable
 34652 ;;		__rtcc_write_enable
 34653 ;; This function is called by:
 34654 ;;		__parse_command_long
 34655 ;;		_rtcc_read_eeprom
 34656 ;;		_rtcc_increment_minutes
 34657 ;;		_rtcc_decrement_minutes
 34658 ;; This function uses a non-reentrant model
 34659 ;;
 34660                           
 34661                           	psect	text165
 34662  0076F6                     __ptext165:
 34663                           	opt stack 0
 34664  0076F6                     _rtcc_set_minutes:
 34665                           	opt stack 26
 34666                           
 34667                           ;incstack = 0
 34668                           ;rtcc_set_minutes@minutes stored from wreg
 34669  0076F6  6E01               	movwf	rtcc_set_minutes@minutes,c
 34670                           
 34671                           ;rtcc.c: 271: _rtcc_write_enable();
 34672  0076F8  EC9F  F03B         	call	__rtcc_write_enable	;wreg free
 34673                           
 34674                           ;rtcc.c: 272: RTCCFGbits.RTCPTR1 = 0;
 34675  0076FC  010F               	movlb	15	; () banked
 34676  0076FE  933F               	bcf	63,1,b	;volatile
 34677                           
 34678                           ; BSR set to: 15
 34679                           ;rtcc.c: 273: RTCCFGbits.RTCPTR0 = 0;
 34680  007700  010F               	movlb	15	; () banked
 34681  007702  913F               	bcf	63,0,b	;volatile
 34682                           
 34683                           ; BSR set to: 15
 34684                           ;rtcc.c: 274: RTCVALH = minutes;
 34685  007704  C001  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 34686                           
 34687                           ;rtcc.c: 275: _rtcc_write_disable();
 34688  007708  ECAA  F03B         	call	__rtcc_write_disable	;wreg free
 34689  00770C  0012               	return		;funcret
 34690  00770E                     __end_of_rtcc_set_minutes:
 34691                           	opt stack 0
 34692                           tosu	equ	0xFFF
 34693                           tosh	equ	0xFFE
 34694                           tosl	equ	0xFFD
 34695                           pclath	equ	0xFFA
 34696                           tblptru	equ	0xFF8
 34697                           tblptrh	equ	0xFF7
 34698                           tblptrl	equ	0xFF6
 34699                           tablat	equ	0xFF5
 34700                           prodh	equ	0xFF4
 34701                           prodl	equ	0xFF3
 34702                           intcon	equ	0xFF2
 34703                           intcon2	equ	0xFF1
 34704                           intcon3	equ	0xFF0
 34705                           indf0	equ	0xFEF
 34706                           postinc0	equ	0xFEE
 34707                           fsr0h	equ	0xFEA
 34708                           fsr0l	equ	0xFE9
 34709                           wreg	equ	0xFE8
 34710                           indf1	equ	0xFE7
 34711                           postdec1	equ	0xFE5
 34712                           plusw1	equ	0xFE3
 34713                           fsr1h	equ	0xFE2
 34714                           fsr1l	equ	0xFE1
 34715                           indf2	equ	0xFDF
 34716                           postinc2	equ	0xFDE
 34717                           postdec2	equ	0xFDD
 34718                           plusw2	equ	0xFDB
 34719                           fsr2h	equ	0xFDA
 34720                           fsr2l	equ	0xFD9
 34721                           status	equ	0xFD8
 34722                           
 34723 ;; *************** function _rtcc_set_hours *****************
 34724 ;; Defined at:
 34725 ;;		line 231 in file "rtcc.c"
 34726 ;; Parameters:    Size  Location     Type
 34727 ;;  hours           1    wreg     unsigned char 
 34728 ;; Auto vars:     Size  Location     Type
 34729 ;;  hours           1    0[COMRAM] unsigned char 
 34730 ;; Return value:  Size  Location     Type
 34731 ;;                  1    wreg      void 
 34732 ;; Registers used:
 34733 ;;		wreg, status,2, cstack
 34734 ;; Tracked objects:
 34735 ;;		On entry : 0/0
 34736 ;;		On exit  : 0/0
 34737 ;;		Unchanged: 0/0
 34738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34743 ;;Total ram usage:        1 bytes
 34744 ;; Hardware stack levels used:    1
 34745 ;; Hardware stack levels required when called:    1
 34746 ;; This function calls:
 34747 ;;		__rtcc_write_disable
 34748 ;;		__rtcc_write_enable
 34749 ;; This function is called by:
 34750 ;;		__parse_command_long
 34751 ;;		_rtcc_read_eeprom
 34752 ;;		_rtcc_increment_hours
 34753 ;;		_rtcc_decrement_hours
 34754 ;; This function uses a non-reentrant model
 34755 ;;
 34756                           
 34757                           	psect	text166
 34758  00770E                     __ptext166:
 34759                           	opt stack 0
 34760  00770E                     _rtcc_set_hours:
 34761                           	opt stack 26
 34762                           
 34763                           ;incstack = 0
 34764                           ;rtcc_set_hours@hours stored from wreg
 34765  00770E  6E01               	movwf	rtcc_set_hours@hours,c
 34766                           
 34767                           ;rtcc.c: 233: _rtcc_write_enable();
 34768  007710  EC9F  F03B         	call	__rtcc_write_enable	;wreg free
 34769                           
 34770                           ;rtcc.c: 234: RTCCFGbits.RTCPTR1 = 0;
 34771  007714  010F               	movlb	15	; () banked
 34772  007716  933F               	bcf	63,1,b	;volatile
 34773                           
 34774                           ; BSR set to: 15
 34775                           ;rtcc.c: 235: RTCCFGbits.RTCPTR0 = 1;
 34776  007718  010F               	movlb	15	; () banked
 34777  00771A  813F               	bsf	63,0,b	;volatile
 34778                           
 34779                           ; BSR set to: 15
 34780                           ;rtcc.c: 236: RTCVALL = hours;
 34781  00771C  C001  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 34782                           
 34783                           ;rtcc.c: 237: _rtcc_write_disable();
 34784  007720  ECAA  F03B         	call	__rtcc_write_disable	;wreg free
 34785  007724  0012               	return		;funcret
 34786  007726                     __end_of_rtcc_set_hours:
 34787                           	opt stack 0
 34788                           tosu	equ	0xFFF
 34789                           tosh	equ	0xFFE
 34790                           tosl	equ	0xFFD
 34791                           pclath	equ	0xFFA
 34792                           tblptru	equ	0xFF8
 34793                           tblptrh	equ	0xFF7
 34794                           tblptrl	equ	0xFF6
 34795                           tablat	equ	0xFF5
 34796                           prodh	equ	0xFF4
 34797                           prodl	equ	0xFF3
 34798                           intcon	equ	0xFF2
 34799                           intcon2	equ	0xFF1
 34800                           intcon3	equ	0xFF0
 34801                           indf0	equ	0xFEF
 34802                           postinc0	equ	0xFEE
 34803                           fsr0h	equ	0xFEA
 34804                           fsr0l	equ	0xFE9
 34805                           wreg	equ	0xFE8
 34806                           indf1	equ	0xFE7
 34807                           postdec1	equ	0xFE5
 34808                           plusw1	equ	0xFE3
 34809                           fsr1h	equ	0xFE2
 34810                           fsr1l	equ	0xFE1
 34811                           indf2	equ	0xFDF
 34812                           postinc2	equ	0xFDE
 34813                           postdec2	equ	0xFDD
 34814                           plusw2	equ	0xFDB
 34815                           fsr2h	equ	0xFDA
 34816                           fsr2l	equ	0xFD9
 34817                           status	equ	0xFD8
 34818                           
 34819 ;; *************** function _rtcc_set_day *****************
 34820 ;; Defined at:
 34821 ;;		line 193 in file "rtcc.c"
 34822 ;; Parameters:    Size  Location     Type
 34823 ;;  day             1    wreg     unsigned char 
 34824 ;; Auto vars:     Size  Location     Type
 34825 ;;  day             1    0[COMRAM] unsigned char 
 34826 ;; Return value:  Size  Location     Type
 34827 ;;                  1    wreg      void 
 34828 ;; Registers used:
 34829 ;;		wreg, status,2, cstack
 34830 ;; Tracked objects:
 34831 ;;		On entry : 0/0
 34832 ;;		On exit  : 0/0
 34833 ;;		Unchanged: 0/0
 34834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34839 ;;Total ram usage:        1 bytes
 34840 ;; Hardware stack levels used:    1
 34841 ;; Hardware stack levels required when called:    1
 34842 ;; This function calls:
 34843 ;;		__rtcc_write_disable
 34844 ;;		__rtcc_write_enable
 34845 ;; This function is called by:
 34846 ;;		__parse_command_long
 34847 ;;		_rtcc_read_eeprom
 34848 ;;		_rtcc_correct_day
 34849 ;;		_rtcc_increment_day
 34850 ;;		_rtcc_decrement_day
 34851 ;; This function uses a non-reentrant model
 34852 ;;
 34853                           
 34854                           	psect	text167
 34855  007726                     __ptext167:
 34856                           	opt stack 0
 34857  007726                     _rtcc_set_day:
 34858                           	opt stack 26
 34859                           
 34860                           ;incstack = 0
 34861                           ;rtcc_set_day@day stored from wreg
 34862  007726  6E01               	movwf	rtcc_set_day@day,c
 34863                           
 34864                           ;rtcc.c: 195: _rtcc_write_enable();
 34865  007728  EC9F  F03B         	call	__rtcc_write_enable	;wreg free
 34866                           
 34867                           ;rtcc.c: 196: RTCCFGbits.RTCPTR1 = 1;
 34868  00772C  010F               	movlb	15	; () banked
 34869  00772E  833F               	bsf	63,1,b	;volatile
 34870                           
 34871                           ; BSR set to: 15
 34872                           ;rtcc.c: 197: RTCCFGbits.RTCPTR0 = 0;
 34873  007730  010F               	movlb	15	; () banked
 34874  007732  913F               	bcf	63,0,b	;volatile
 34875                           
 34876                           ; BSR set to: 15
 34877                           ;rtcc.c: 198: RTCVALL = day;
 34878  007734  C001  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 34879                           
 34880                           ;rtcc.c: 199: _rtcc_write_disable();
 34881  007738  ECAA  F03B         	call	__rtcc_write_disable	;wreg free
 34882  00773C  0012               	return		;funcret
 34883  00773E                     __end_of_rtcc_set_day:
 34884                           	opt stack 0
 34885                           tosu	equ	0xFFF
 34886                           tosh	equ	0xFFE
 34887                           tosl	equ	0xFFD
 34888                           pclath	equ	0xFFA
 34889                           tblptru	equ	0xFF8
 34890                           tblptrh	equ	0xFF7
 34891                           tblptrl	equ	0xFF6
 34892                           tablat	equ	0xFF5
 34893                           prodh	equ	0xFF4
 34894                           prodl	equ	0xFF3
 34895                           intcon	equ	0xFF2
 34896                           intcon2	equ	0xFF1
 34897                           intcon3	equ	0xFF0
 34898                           indf0	equ	0xFEF
 34899                           postinc0	equ	0xFEE
 34900                           fsr0h	equ	0xFEA
 34901                           fsr0l	equ	0xFE9
 34902                           wreg	equ	0xFE8
 34903                           indf1	equ	0xFE7
 34904                           postdec1	equ	0xFE5
 34905                           plusw1	equ	0xFE3
 34906                           fsr1h	equ	0xFE2
 34907                           fsr1l	equ	0xFE1
 34908                           indf2	equ	0xFDF
 34909                           postinc2	equ	0xFDE
 34910                           postdec2	equ	0xFDD
 34911                           plusw2	equ	0xFDB
 34912                           fsr2h	equ	0xFDA
 34913                           fsr2l	equ	0xFD9
 34914                           status	equ	0xFD8
 34915                           
 34916 ;; *************** function __rtcc_write_enable *****************
 34917 ;; Defined at:
 34918 ;;		line 14 in file "rtcc.c"
 34919 ;; Parameters:    Size  Location     Type
 34920 ;;		None
 34921 ;; Auto vars:     Size  Location     Type
 34922 ;;		None
 34923 ;; Return value:  Size  Location     Type
 34924 ;;                  1    wreg      void 
 34925 ;; Registers used:
 34926 ;;		wreg, status,2
 34927 ;; Tracked objects:
 34928 ;;		On entry : 0/0
 34929 ;;		On exit  : 0/0
 34930 ;;		Unchanged: 0/0
 34931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34936 ;;Total ram usage:        0 bytes
 34937 ;; Hardware stack levels used:    1
 34938 ;; This function calls:
 34939 ;;		Nothing
 34940 ;; This function is called by:
 34941 ;;		_rtcc_set_year
 34942 ;;		_rtcc_set_month
 34943 ;;		_rtcc_set_day
 34944 ;;		_rtcc_set_hours
 34945 ;;		_rtcc_set_minutes
 34946 ;;		_rtcc_set_seconds
 34947 ;; This function uses a non-reentrant model
 34948 ;;
 34949                           
 34950                           	psect	text168
 34951  00773E                     __ptext168:
 34952                           	opt stack 0
 34953  00773E                     __rtcc_write_enable:
 34954                           	opt stack 26
 34955                           
 34956                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 34957                           
 34958                           ;incstack = 0
 34959  00773E  D006               	goto	l10935
 34960  007740                     l10931:
 34961                           
 34962                           ;rtcc.c: 17: {
 34963                           ;rtcc.c: 18: EECON2 = 0x55;
 34964  007740  0E55               	movlw	85
 34965  007742  6EA7               	movwf	4007,c	;volatile
 34966                           
 34967                           ;rtcc.c: 19: EECON2 = 0xAA;
 34968  007744  0EAA               	movlw	170
 34969  007746  6EA7               	movwf	4007,c	;volatile
 34970                           
 34971                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 34972  007748  010F               	movlb	15	; () banked
 34973  00774A  8B3F               	bsf	63,5,b	;volatile
 34974  00774C                     l10935:
 34975  00774C  010F               	movlb	15	; () banked
 34976  00774E  BB3F               	btfsc	63,5,b	;volatile
 34977  007750  0012               	return	
 34978  007752  D7F6               	goto	l10931
 34979  007754                     __end_of__rtcc_write_enable:
 34980                           	opt stack 0
 34981                           tosu	equ	0xFFF
 34982                           tosh	equ	0xFFE
 34983                           tosl	equ	0xFFD
 34984                           pclath	equ	0xFFA
 34985                           tblptru	equ	0xFF8
 34986                           tblptrh	equ	0xFF7
 34987                           tblptrl	equ	0xFF6
 34988                           tablat	equ	0xFF5
 34989                           prodh	equ	0xFF4
 34990                           prodl	equ	0xFF3
 34991                           intcon	equ	0xFF2
 34992                           intcon2	equ	0xFF1
 34993                           intcon3	equ	0xFF0
 34994                           indf0	equ	0xFEF
 34995                           postinc0	equ	0xFEE
 34996                           fsr0h	equ	0xFEA
 34997                           fsr0l	equ	0xFE9
 34998                           wreg	equ	0xFE8
 34999                           indf1	equ	0xFE7
 35000                           postdec1	equ	0xFE5
 35001                           plusw1	equ	0xFE3
 35002                           fsr1h	equ	0xFE2
 35003                           fsr1l	equ	0xFE1
 35004                           indf2	equ	0xFDF
 35005                           postinc2	equ	0xFDE
 35006                           postdec2	equ	0xFDD
 35007                           plusw2	equ	0xFDB
 35008                           fsr2h	equ	0xFDA
 35009                           fsr2l	equ	0xFD9
 35010                           status	equ	0xFD8
 35011                           
 35012 ;; *************** function __rtcc_write_disable *****************
 35013 ;; Defined at:
 35014 ;;		line 24 in file "rtcc.c"
 35015 ;; Parameters:    Size  Location     Type
 35016 ;;		None
 35017 ;; Auto vars:     Size  Location     Type
 35018 ;;		None
 35019 ;; Return value:  Size  Location     Type
 35020 ;;                  1    wreg      void 
 35021 ;; Registers used:
 35022 ;;		wreg, status,2
 35023 ;; Tracked objects:
 35024 ;;		On entry : 0/0
 35025 ;;		On exit  : 0/0
 35026 ;;		Unchanged: 0/0
 35027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35032 ;;Total ram usage:        0 bytes
 35033 ;; Hardware stack levels used:    1
 35034 ;; This function calls:
 35035 ;;		Nothing
 35036 ;; This function is called by:
 35037 ;;		_rtcc_set_year
 35038 ;;		_rtcc_set_month
 35039 ;;		_rtcc_set_day
 35040 ;;		_rtcc_set_hours
 35041 ;;		_rtcc_set_minutes
 35042 ;;		_rtcc_set_seconds
 35043 ;; This function uses a non-reentrant model
 35044 ;;
 35045                           
 35046                           	psect	text169
 35047  007754                     __ptext169:
 35048                           	opt stack 0
 35049  007754                     __rtcc_write_disable:
 35050                           	opt stack 26
 35051                           
 35052                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 35053                           
 35054                           ; BSR set to: 15
 35055                           ;incstack = 0
 35056  007754  D006               	goto	l10943
 35057  007756                     l10939:
 35058                           
 35059                           ;rtcc.c: 27: {
 35060                           ;rtcc.c: 28: EECON2 = 0x55;
 35061  007756  0E55               	movlw	85
 35062  007758  6EA7               	movwf	4007,c	;volatile
 35063                           
 35064                           ;rtcc.c: 29: EECON2 = 0xAA;
 35065  00775A  0EAA               	movlw	170
 35066  00775C  6EA7               	movwf	4007,c	;volatile
 35067                           
 35068                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 35069  00775E  010F               	movlb	15	; () banked
 35070  007760  9B3F               	bcf	63,5,b	;volatile
 35071  007762                     l10943:
 35072  007762  010F               	movlb	15	; () banked
 35073  007764  AB3F               	btfss	63,5,b	;volatile
 35074  007766  0012               	return	
 35075  007768  D7F6               	goto	l10939
 35076  00776A                     __end_of__rtcc_write_disable:
 35077                           	opt stack 0
 35078                           tosu	equ	0xFFF
 35079                           tosh	equ	0xFFE
 35080                           tosl	equ	0xFFD
 35081                           pclath	equ	0xFFA
 35082                           tblptru	equ	0xFF8
 35083                           tblptrh	equ	0xFF7
 35084                           tblptrl	equ	0xFF6
 35085                           tablat	equ	0xFF5
 35086                           prodh	equ	0xFF4
 35087                           prodl	equ	0xFF3
 35088                           intcon	equ	0xFF2
 35089                           intcon2	equ	0xFF1
 35090                           intcon3	equ	0xFF0
 35091                           indf0	equ	0xFEF
 35092                           postinc0	equ	0xFEE
 35093                           fsr0h	equ	0xFEA
 35094                           fsr0l	equ	0xFE9
 35095                           wreg	equ	0xFE8
 35096                           indf1	equ	0xFE7
 35097                           postdec1	equ	0xFE5
 35098                           plusw1	equ	0xFE3
 35099                           fsr1h	equ	0xFE2
 35100                           fsr1l	equ	0xFE1
 35101                           indf2	equ	0xFDF
 35102                           postinc2	equ	0xFDE
 35103                           postdec2	equ	0xFDD
 35104                           plusw2	equ	0xFDB
 35105                           fsr2h	equ	0xFDA
 35106                           fsr2l	equ	0xFD9
 35107                           status	equ	0xFD8
 35108                           
 35109 ;; *************** function __parse_command_calibration *****************
 35110 ;; Defined at:
 35111 ;;		line 402 in file "app_device_custom_hid.c"
 35112 ;; Parameters:    Size  Location     Type
 35113 ;;  cmd             1    wreg     unsigned char 
 35114 ;;  item            1    3[COMRAM] unsigned char 
 35115 ;;  dat1            1    4[COMRAM] unsigned char 
 35116 ;;  dat2            1    5[COMRAM] unsigned char 
 35117 ;;  dat3            1    6[COMRAM] unsigned char 
 35118 ;; Auto vars:     Size  Location     Type
 35119 ;;  cmd             1    0[COMRAM] unsigned char 
 35120 ;;  parameter       2    9[COMRAM] int 
 35121 ;; Return value:  Size  Location     Type
 35122 ;;                  1    wreg      void 
 35123 ;; Registers used:
 35124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35125 ;; Tracked objects:
 35126 ;;		On entry : 0/0
 35127 ;;		On exit  : 0/0
 35128 ;;		Unchanged: 0/0
 35129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35133 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35134 ;;Total ram usage:        8 bytes
 35135 ;; Hardware stack levels used:    1
 35136 ;; Hardware stack levels required when called:    1
 35137 ;; This function calls:
 35138 ;;		_schedule_eeprom_write_task
 35139 ;; This function is called by:
 35140 ;;		_APP_DeviceCustomHIDTasks
 35141 ;; This function uses a non-reentrant model
 35142 ;;
 35143                           
 35144                           	psect	text170
 35145  003CF6                     __ptext170:
 35146                           	opt stack 0
 35147  003CF6                     __parse_command_calibration:
 35148                           	opt stack 28
 35149                           
 35150                           ;app_device_custom_hid.c: 404: int16_t parameter = dat1;
 35151                           
 35152                           ; BSR set to: 15
 35153                           ;incstack = 0
 35154  003CF6  C005  F00A         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 35155  003CFA  6A0B               	clrf	__parse_command_calibration@parameter+1,c
 35156                           
 35157                           ;app_device_custom_hid.c: 405: parameter <<= 8;
 35158  003CFC  500A               	movf	__parse_command_calibration@parameter,w,c
 35159  003CFE  6E0B               	movwf	__parse_command_calibration@parameter+1,c
 35160  003D00  6A0A               	clrf	__parse_command_calibration@parameter,c
 35161                           
 35162                           ;app_device_custom_hid.c: 406: parameter |= dat2;
 35163  003D02  5006               	movf	__parse_command_calibration@dat2,w,c
 35164  003D04  120A               	iorwf	__parse_command_calibration@parameter,f,c
 35165                           
 35166                           ;app_device_custom_hid.c: 408: switch(item & 0x0F)
 35167  003D06  D03F               	goto	l13107
 35168  003D08                     l13101:
 35169                           
 35170                           ;app_device_custom_hid.c: 412: calibrationParameters[item>>4].Offset = parameter;
 35171  003D08  C004  F008         	movff	__parse_command_calibration@item,??__parse_command_calibration
 35172  003D0C  3A08               	swapf	??__parse_command_calibration,f,c
 35173  003D0E  0E0F               	movlw	15
 35174  003D10  1608               	andwf	??__parse_command_calibration,f,c
 35175  003D12  5008               	movf	??__parse_command_calibration,w,c
 35176  003D14  0D0C               	mullw	12
 35177  003D16  0E05               	movlw	5
 35178  003D18  26F3               	addwf	prodl,f,c
 35179  003D1A  0E00               	movlw	0
 35180  003D1C  22F4               	addwfc	prodh,f,c
 35181  003D1E  0E10               	movlw	low _calibrationParameters
 35182  003D20  24F3               	addwf	prodl,w,c
 35183  003D22  6ED9               	movwf	fsr2l,c
 35184  003D24  0E02               	movlw	high _calibrationParameters
 35185  003D26  20F4               	addwfc	prodh,w,c
 35186  003D28  6EDA               	movwf	fsr2h,c
 35187  003D2A  C00A  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 35188  003D2E  C00B  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 35189                           
 35190                           ;app_device_custom_hid.c: 413: break;
 35191  003D32  D055               	goto	l13125
 35192  003D34                     l13103:
 35193                           
 35194                           ;app_device_custom_hid.c: 416: calibrationParameters[item>>4].Multiplier = parameter;
 35195  003D34  C004  F008         	movff	__parse_command_calibration@item,??__parse_command_calibration
 35196  003D38  3A08               	swapf	??__parse_command_calibration,f,c
 35197  003D3A  0E0F               	movlw	15
 35198  003D3C  1608               	andwf	??__parse_command_calibration,f,c
 35199  003D3E  5008               	movf	??__parse_command_calibration,w,c
 35200  003D40  0D0C               	mullw	12
 35201  003D42  0E07               	movlw	7
 35202  003D44  26F3               	addwf	prodl,f,c
 35203  003D46  0E00               	movlw	0
 35204  003D48  22F4               	addwfc	prodh,f,c
 35205  003D4A  0E10               	movlw	low _calibrationParameters
 35206  003D4C  24F3               	addwf	prodl,w,c
 35207  003D4E  6ED9               	movwf	fsr2l,c
 35208  003D50  0E02               	movlw	high _calibrationParameters
 35209  003D52  20F4               	addwfc	prodh,w,c
 35210  003D54  6EDA               	movwf	fsr2h,c
 35211  003D56  C00A  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 35212  003D5A  C00B  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 35213                           
 35214                           ;app_device_custom_hid.c: 417: calibrationParameters[item>>4].Shift = dat3;
 35215  003D5E  C004  F008         	movff	__parse_command_calibration@item,??__parse_command_calibration
 35216  003D62  3A08               	swapf	??__parse_command_calibration,f,c
 35217  003D64  0E0F               	movlw	15
 35218  003D66  1608               	andwf	??__parse_command_calibration,f,c
 35219  003D68  5008               	movf	??__parse_command_calibration,w,c
 35220  003D6A  0D0C               	mullw	12
 35221  003D6C  0E09               	movlw	9
 35222  003D6E  26F3               	addwf	prodl,f,c
 35223  003D70  0E00               	movlw	0
 35224  003D72  22F4               	addwfc	prodh,f,c
 35225  003D74  0E10               	movlw	low _calibrationParameters
 35226  003D76  24F3               	addwf	prodl,w,c
 35227  003D78  6ED9               	movwf	fsr2l,c
 35228  003D7A  0E02               	movlw	high _calibrationParameters
 35229  003D7C  20F4               	addwfc	prodh,w,c
 35230  003D7E  6EDA               	movwf	fsr2h,c
 35231  003D80  C007  FFDF         	movff	__parse_command_calibration@dat3,indf2
 35232                           
 35233                           ;app_device_custom_hid.c: 419: }
 35234                           
 35235                           ;app_device_custom_hid.c: 418: break;
 35236  003D84  D02C               	goto	l13125
 35237  003D86                     l13107:
 35238  003D86  5004               	movf	__parse_command_calibration@item,w,c
 35239  003D88  0B0F               	andlw	15
 35240  003D8A  6E08               	movwf	??__parse_command_calibration& (0+255),c
 35241  003D8C  6A09               	clrf	(??__parse_command_calibration+1)& (0+255),c
 35242                           
 35243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35244                           ; Switch size 1, requested type "space"
 35245                           ; Number of cases is 1, Range of values is 0 to 0
 35246                           ; switch strategies available:
 35247                           ; Name         Instructions Cycles
 35248                           ; simple_byte            4     3 (average)
 35249                           ;	Chosen strategy is simple_byte
 35250  003D8E  5009               	movf	??__parse_command_calibration+1,w,c
 35251  003D90  0A00               	xorlw	0	; case 0
 35252  003D92  A4D8               	btfss	status,2,c
 35253  003D94  D024               	goto	l13125
 35254                           
 35255                           ; Switch size 1, requested type "space"
 35256                           ; Number of cases is 2, Range of values is 0 to 1
 35257                           ; switch strategies available:
 35258                           ; Name         Instructions Cycles
 35259                           ; simple_byte            7     4 (average)
 35260                           ;	Chosen strategy is simple_byte
 35261  003D96  5008               	movf	??__parse_command_calibration,w,c
 35262  003D98  0A00               	xorlw	0	; case 0
 35263  003D9A  B4D8               	btfsc	status,2,c
 35264  003D9C  D7B5               	goto	l13101
 35265  003D9E  0A01               	xorlw	1	; case 1
 35266  003DA0  B4D8               	btfsc	status,2,c
 35267  003DA2  D7C8               	goto	l13103
 35268                           
 35269                           ;app_device_custom_hid.c: 421: switch((calibrationIndex_t) item>>4)
 35270  003DA4  D01C               	goto	l13125
 35271  003DA6                     l13109:
 35272                           
 35273                           ;app_device_custom_hid.c: 424: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 35274  003DA6  0E02               	movlw	2
 35275  003DA8  ECBD  F035         	call	_schedule_eeprom_write_task
 35276                           
 35277                           ;app_device_custom_hid.c: 425: break;
 35278  003DAC  0012               	return	
 35279  003DAE                     l13111:
 35280                           
 35281                           ;app_device_custom_hid.c: 427: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 35282  003DAE  0E03               	movlw	3
 35283  003DB0  ECBD  F035         	call	_schedule_eeprom_write_task
 35284                           
 35285                           ;app_device_custom_hid.c: 428: break;
 35286  003DB4  0012               	return	
 35287  003DB6                     l13113:
 35288                           
 35289                           ;app_device_custom_hid.c: 430: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 35290  003DB6  0E04               	movlw	4
 35291  003DB8  ECBD  F035         	call	_schedule_eeprom_write_task
 35292                           
 35293                           ;app_device_custom_hid.c: 431: break;
 35294  003DBC  0012               	return	
 35295  003DBE                     l13115:
 35296                           
 35297                           ;app_device_custom_hid.c: 433: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 35298  003DBE  0E05               	movlw	5
 35299  003DC0  ECBD  F035         	call	_schedule_eeprom_write_task
 35300                           
 35301                           ;app_device_custom_hid.c: 434: break;
 35302  003DC4  0012               	return	
 35303  003DC6                     l13117:
 35304                           
 35305                           ;app_device_custom_hid.c: 436: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 35306  003DC6  0E06               	movlw	6
 35307  003DC8  ECBD  F035         	call	_schedule_eeprom_write_task
 35308                           
 35309                           ;app_device_custom_hid.c: 437: break;
 35310  003DCC  0012               	return	
 35311  003DCE                     l13119:
 35312                           
 35313                           ;app_device_custom_hid.c: 439: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 35314  003DCE  0E07               	movlw	7
 35315  003DD0  ECBD  F035         	call	_schedule_eeprom_write_task
 35316                           
 35317                           ;app_device_custom_hid.c: 440: break;
 35318  003DD4  0012               	return	
 35319  003DD6                     l13121:
 35320                           
 35321                           ;app_device_custom_hid.c: 442: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 35322  003DD6  0E08               	movlw	8
 35323  003DD8  ECBD  F035         	call	_schedule_eeprom_write_task
 35324                           
 35325                           ;app_device_custom_hid.c: 444: }
 35326                           
 35327                           ;app_device_custom_hid.c: 443: break;
 35328  003DDC  0012               	return	
 35329  003DDE                     l13125:
 35330  003DDE  3804               	swapf	__parse_command_calibration@item,w,c
 35331  003DE0  0B0F               	andlw	15
 35332  003DE2  6E08               	movwf	??__parse_command_calibration& (0+255),c
 35333  003DE4  6A09               	clrf	(??__parse_command_calibration+1)& (0+255),c
 35334                           
 35335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35336                           ; Switch size 1, requested type "space"
 35337                           ; Number of cases is 1, Range of values is 0 to 0
 35338                           ; switch strategies available:
 35339                           ; Name         Instructions Cycles
 35340                           ; simple_byte            4     3 (average)
 35341                           ;	Chosen strategy is simple_byte
 35342  003DE6  5009               	movf	??__parse_command_calibration+1,w,c
 35343  003DE8  0A00               	xorlw	0	; case 0
 35344  003DEA  A4D8               	btfss	status,2,c
 35345  003DEC  0012               	return	
 35346                           
 35347                           ; Switch size 1, requested type "space"
 35348                           ; Number of cases is 7, Range of values is 0 to 6
 35349                           ; switch strategies available:
 35350                           ; Name         Instructions Cycles
 35351                           ; simple_byte           22    12 (average)
 35352                           ;	Chosen strategy is simple_byte
 35353  003DEE  5008               	movf	??__parse_command_calibration,w,c
 35354  003DF0  0A00               	xorlw	0	; case 0
 35355  003DF2  B4D8               	btfsc	status,2,c
 35356  003DF4  D7D8               	goto	l13109
 35357  003DF6  0A01               	xorlw	1	; case 1
 35358  003DF8  B4D8               	btfsc	status,2,c
 35359  003DFA  D7D9               	goto	l13111
 35360  003DFC  0A03               	xorlw	3	; case 2
 35361  003DFE  B4D8               	btfsc	status,2,c
 35362  003E00  D7DA               	goto	l13113
 35363  003E02  0A01               	xorlw	1	; case 3
 35364  003E04  B4D8               	btfsc	status,2,c
 35365  003E06  D7DB               	goto	l13115
 35366  003E08  0A07               	xorlw	7	; case 4
 35367  003E0A  B4D8               	btfsc	status,2,c
 35368  003E0C  D7DC               	goto	l13117
 35369  003E0E  0A01               	xorlw	1	; case 5
 35370  003E10  B4D8               	btfsc	status,2,c
 35371  003E12  D7DD               	goto	l13119
 35372  003E14  0A03               	xorlw	3	; case 6
 35373  003E16  A4D8               	btfss	status,2,c
 35374  003E18  0012               	return	
 35375  003E1A  D7DD               	goto	l13121
 35376  003E1C                     __end_of__parse_command_calibration:
 35377                           	opt stack 0
 35378                           tosu	equ	0xFFF
 35379                           tosh	equ	0xFFE
 35380                           tosl	equ	0xFFD
 35381                           pclath	equ	0xFFA
 35382                           tblptru	equ	0xFF8
 35383                           tblptrh	equ	0xFF7
 35384                           tblptrl	equ	0xFF6
 35385                           tablat	equ	0xFF5
 35386                           prodh	equ	0xFF4
 35387                           prodl	equ	0xFF3
 35388                           intcon	equ	0xFF2
 35389                           intcon2	equ	0xFF1
 35390                           intcon3	equ	0xFF0
 35391                           indf0	equ	0xFEF
 35392                           postinc0	equ	0xFEE
 35393                           fsr0h	equ	0xFEA
 35394                           fsr0l	equ	0xFE9
 35395                           wreg	equ	0xFE8
 35396                           indf1	equ	0xFE7
 35397                           postdec1	equ	0xFE5
 35398                           plusw1	equ	0xFE3
 35399                           fsr1h	equ	0xFE2
 35400                           fsr1l	equ	0xFE1
 35401                           indf2	equ	0xFDF
 35402                           postinc2	equ	0xFDE
 35403                           postdec2	equ	0xFDD
 35404                           plusw2	equ	0xFDB
 35405                           fsr2h	equ	0xFDA
 35406                           fsr2l	equ	0xFD9
 35407                           status	equ	0xFD8
 35408                           
 35409 ;; *************** function _schedule_eeprom_write_task *****************
 35410 ;; Defined at:
 35411 ;;		line 718 in file "i2c.c"
 35412 ;; Parameters:    Size  Location     Type
 35413 ;;  task            1    wreg     enum E8218
 35414 ;; Auto vars:     Size  Location     Type
 35415 ;;  task            1    1[COMRAM] enum E8218
 35416 ;;  idx             1    2[COMRAM] unsigned char 
 35417 ;; Return value:  Size  Location     Type
 35418 ;;                  1    wreg      void 
 35419 ;; Registers used:
 35420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35421 ;; Tracked objects:
 35422 ;;		On entry : 0/0
 35423 ;;		On exit  : 0/0
 35424 ;;		Unchanged: 0/0
 35425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35430 ;;Total ram usage:        3 bytes
 35431 ;; Hardware stack levels used:    1
 35432 ;; This function calls:
 35433 ;;		Nothing
 35434 ;; This function is called by:
 35435 ;;		__parse_command_calibration
 35436 ;;		_i2c_eeprom_read_calibration
 35437 ;; This function uses a non-reentrant model
 35438 ;;
 35439                           
 35440                           	psect	text171
 35441  006B7A                     __ptext171:
 35442                           	opt stack 0
 35443  006B7A                     _schedule_eeprom_write_task:
 35444                           	opt stack 28
 35445                           
 35446                           ;incstack = 0
 35447                           ;schedule_eeprom_write_task@task stored from wreg
 35448  006B7A  6E02               	movwf	schedule_eeprom_write_task@task,c
 35449                           
 35450                           ;i2c.c: 720: uint8_t idx;
 35451                           ;i2c.c: 722: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 35452  006B7C  C185  F003         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 35453  006B80  D00F               	goto	l1431
 35454  006B82                     l11997:
 35455                           
 35456                           ;i2c.c: 723: {
 35457                           ;i2c.c: 724: if (task_list[idx] == task)
 35458  006B82  5003               	movf	schedule_eeprom_write_task@idx,w,c
 35459  006B84  0D01               	mullw	1
 35460  006B86  0E00               	movlw	low _task_list
 35461  006B88  24F3               	addwf	prodl,w,c
 35462  006B8A  6ED9               	movwf	fsr2l,c
 35463  006B8C  0E02               	movlw	high _task_list
 35464  006B8E  20F4               	addwfc	prodh,w,c
 35465  006B90  6EDA               	movwf	fsr2h,c
 35466  006B92  5002               	movf	schedule_eeprom_write_task@task,w,c
 35467  006B94  18DE               	xorwf	postinc2,w,c
 35468  006B96  B4D8               	btfsc	status,2,c
 35469  006B98  0012               	return	
 35470                           
 35471                           ;i2c.c: 725: {
 35472                           ;i2c.c: 727: return;
 35473  006B9A  2803               	incf	schedule_eeprom_write_task@idx,w,c
 35474  006B9C  0B0F               	andlw	15
 35475  006B9E  6E03               	movwf	schedule_eeprom_write_task@idx,c
 35476  006BA0                     l1431:
 35477  006BA0  0101               	movlb	1	; () banked
 35478  006BA2  5184               	movf	_task_list_write_index& (0+255),w,b
 35479  006BA4  1803               	xorwf	schedule_eeprom_write_task@idx,w,c
 35480  006BA6  A4D8               	btfss	status,2,c
 35481  006BA8  D7EC               	goto	l11997
 35482                           
 35483                           ; BSR set to: 1
 35484                           ;i2c.c: 728: }
 35485                           ;i2c.c: 729: }
 35486                           ;i2c.c: 731: task_list[task_list_write_index] = task;
 35487                           
 35488                           ; BSR set to: 1
 35489  006BAA  0101               	movlb	1	; () banked
 35490  006BAC  5184               	movf	_task_list_write_index& (0+255),w,b
 35491  006BAE  0D01               	mullw	1
 35492  006BB0  0E00               	movlw	low _task_list
 35493  006BB2  24F3               	addwf	prodl,w,c
 35494  006BB4  6ED9               	movwf	fsr2l,c
 35495  006BB6  0E02               	movlw	high _task_list
 35496  006BB8  20F4               	addwfc	prodh,w,c
 35497  006BBA  6EDA               	movwf	fsr2h,c
 35498  006BBC  C002  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 35499                           
 35500                           ; BSR set to: 1
 35501                           ;i2c.c: 732: ++task_list_write_index;
 35502  006BC0  0101               	movlb	1	; () banked
 35503  006BC2  2B84               	incf	_task_list_write_index& (0+255),f,b
 35504                           
 35505                           ; BSR set to: 1
 35506                           ;i2c.c: 733: task_list_write_index &= 0x0F;
 35507  006BC4  0E0F               	movlw	15
 35508  006BC6  0101               	movlb	1	; () banked
 35509  006BC8  1784               	andwf	_task_list_write_index& (0+255),f,b
 35510  006BCA  0012               	return		;funcret
 35511  006BCC                     __end_of_schedule_eeprom_write_task:
 35512                           	opt stack 0
 35513                           tosu	equ	0xFFF
 35514                           tosh	equ	0xFFE
 35515                           tosl	equ	0xFFD
 35516                           pclath	equ	0xFFA
 35517                           tblptru	equ	0xFF8
 35518                           tblptrh	equ	0xFF7
 35519                           tblptrl	equ	0xFF6
 35520                           tablat	equ	0xFF5
 35521                           prodh	equ	0xFF4
 35522                           prodl	equ	0xFF3
 35523                           intcon	equ	0xFF2
 35524                           intcon2	equ	0xFF1
 35525                           intcon3	equ	0xFF0
 35526                           indf0	equ	0xFEF
 35527                           postinc0	equ	0xFEE
 35528                           fsr0h	equ	0xFEA
 35529                           fsr0l	equ	0xFE9
 35530                           wreg	equ	0xFE8
 35531                           indf1	equ	0xFE7
 35532                           postdec1	equ	0xFE5
 35533                           plusw1	equ	0xFE3
 35534                           fsr1h	equ	0xFE2
 35535                           fsr1l	equ	0xFE1
 35536                           indf2	equ	0xFDF
 35537                           postinc2	equ	0xFDE
 35538                           postdec2	equ	0xFDD
 35539                           plusw2	equ	0xFDB
 35540                           fsr2h	equ	0xFDA
 35541                           fsr2l	equ	0xFD9
 35542                           status	equ	0xFD8
 35543                           
 35544 ;; *************** function __fill_buffer_get_status *****************
 35545 ;; Defined at:
 35546 ;;		line 268 in file "app_device_custom_hid.c"
 35547 ;; Parameters:    Size  Location     Type
 35548 ;;		None
 35549 ;; Auto vars:     Size  Location     Type
 35550 ;;		None
 35551 ;; Return value:  Size  Location     Type
 35552 ;;                  1    wreg      void 
 35553 ;; Registers used:
 35554 ;;		wreg, status,2, cstack
 35555 ;; Tracked objects:
 35556 ;;		On entry : 0/0
 35557 ;;		On exit  : 0/0
 35558 ;;		Unchanged: 0/0
 35559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35564 ;;Total ram usage:        0 bytes
 35565 ;; Hardware stack levels used:    1
 35566 ;; Hardware stack levels required when called:    1
 35567 ;; This function calls:
 35568 ;;		_rtcc_get_day
 35569 ;;		_rtcc_get_hours
 35570 ;;		_rtcc_get_minutes
 35571 ;;		_rtcc_get_month
 35572 ;;		_rtcc_get_seconds
 35573 ;;		_rtcc_get_year
 35574 ;;		_ui_get_status
 35575 ;; This function is called by:
 35576 ;;		_APP_DeviceCustomHIDTasks
 35577 ;; This function uses a non-reentrant model
 35578 ;;
 35579                           
 35580                           	psect	text172
 35581  006E70                     __ptext172:
 35582                           	opt stack 0
 35583  006E70                     __fill_buffer_get_status:
 35584                           	opt stack 28
 35585                           
 35586                           ;app_device_custom_hid.c: 271: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 35587                           
 35588                           ;incstack = 0
 35589  006E70  0E10               	movlw	16
 35590  006E72  0102               	movlb	2	; () banked
 35591  006E74  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 35592                           
 35593                           ; BSR set to: 2
 35594                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[16] = os.display_mode;
 35595  006E76  C0E7  F2C4         	movff	_os+5,_ToSendDataBuffer+16	;volatile
 35596                           
 35597                           ; BSR set to: 2
 35598                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[17] = rtcc_get_year();
 35599  006E7A  ECBF  F03B         	call	_rtcc_get_year	;wreg free
 35600  006E7E  0102               	movlb	2	; () banked
 35601  006E80  6FC5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 35602                           
 35603                           ; BSR set to: 2
 35604                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[18] = rtcc_get_month();
 35605  006E82  ECD3  F03B         	call	_rtcc_get_month	;wreg free
 35606  006E86  0102               	movlb	2	; () banked
 35607  006E88  6FC6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 35608                           
 35609                           ; BSR set to: 2
 35610                           ;app_device_custom_hid.c: 279: ToSendDataBuffer[19] = rtcc_get_day();
 35611  006E8A  ECF1  F03B         	call	_rtcc_get_day	;wreg free
 35612  006E8E  0102               	movlb	2	; () banked
 35613  006E90  6FC7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 35614                           
 35615                           ; BSR set to: 2
 35616                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[20] = rtcc_get_hours();
 35617  006E92  ECE7  F03B         	call	_rtcc_get_hours	;wreg free
 35618  006E96  0102               	movlb	2	; () banked
 35619  006E98  6FC8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 35620                           
 35621                           ; BSR set to: 2
 35622                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[21] = rtcc_get_minutes();
 35623  006E9A  ECDD  F03B         	call	_rtcc_get_minutes	;wreg free
 35624  006E9E  0102               	movlb	2	; () banked
 35625  006EA0  6FC9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 35626                           
 35627                           ; BSR set to: 2
 35628                           ;app_device_custom_hid.c: 282: ToSendDataBuffer[22] = rtcc_get_seconds();
 35629  006EA2  ECC9  F03B         	call	_rtcc_get_seconds	;wreg free
 35630  006EA6  0102               	movlb	2	; () banked
 35631  006EA8  6FCA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 35632                           
 35633                           ; BSR set to: 2
 35634                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[41] = ui_get_status();
 35635  006EAA  EC77  F03C         	call	_ui_get_status	;wreg free
 35636  006EAE  0102               	movlb	2	; () banked
 35637  006EB0  6FDD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 35638                           
 35639                           ; BSR set to: 2
 35640                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[42] = os.timeSlot;
 35641  006EB2  C0E4  F2DE         	movff	_os+2,_ToSendDataBuffer+42	;volatile
 35642                           
 35643                           ; BSR set to: 2
 35644  006EB6  0012               	return		;funcret
 35645  006EB8                     __end_of__fill_buffer_get_status:
 35646                           	opt stack 0
 35647                           tosu	equ	0xFFF
 35648                           tosh	equ	0xFFE
 35649                           tosl	equ	0xFFD
 35650                           pclath	equ	0xFFA
 35651                           tblptru	equ	0xFF8
 35652                           tblptrh	equ	0xFF7
 35653                           tblptrl	equ	0xFF6
 35654                           tablat	equ	0xFF5
 35655                           prodh	equ	0xFF4
 35656                           prodl	equ	0xFF3
 35657                           intcon	equ	0xFF2
 35658                           intcon2	equ	0xFF1
 35659                           intcon3	equ	0xFF0
 35660                           indf0	equ	0xFEF
 35661                           postinc0	equ	0xFEE
 35662                           fsr0h	equ	0xFEA
 35663                           fsr0l	equ	0xFE9
 35664                           wreg	equ	0xFE8
 35665                           indf1	equ	0xFE7
 35666                           postdec1	equ	0xFE5
 35667                           plusw1	equ	0xFE3
 35668                           fsr1h	equ	0xFE2
 35669                           fsr1l	equ	0xFE1
 35670                           indf2	equ	0xFDF
 35671                           postinc2	equ	0xFDE
 35672                           postdec2	equ	0xFDD
 35673                           plusw2	equ	0xFDB
 35674                           fsr2h	equ	0xFDA
 35675                           fsr2l	equ	0xFD9
 35676                           status	equ	0xFD8
 35677                           
 35678 ;; *************** function _ui_get_status *****************
 35679 ;; Defined at:
 35680 ;;		line 12 in file "ui.c"
 35681 ;; Parameters:    Size  Location     Type
 35682 ;;		None
 35683 ;; Auto vars:     Size  Location     Type
 35684 ;;		None
 35685 ;; Return value:  Size  Location     Type
 35686 ;;                  1    wreg      enum E9440
 35687 ;; Registers used:
 35688 ;;		wreg, status,2
 35689 ;; Tracked objects:
 35690 ;;		On entry : 0/0
 35691 ;;		On exit  : 0/0
 35692 ;;		Unchanged: 0/0
 35693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35698 ;;Total ram usage:        0 bytes
 35699 ;; Hardware stack levels used:    1
 35700 ;; This function calls:
 35701 ;;		Nothing
 35702 ;; This function is called by:
 35703 ;;		_main
 35704 ;;		__fill_buffer_get_status
 35705 ;; This function uses a non-reentrant model
 35706 ;;
 35707                           
 35708                           	psect	text173
 35709  0078EE                     __ptext173:
 35710                           	opt stack 0
 35711  0078EE                     _ui_get_status:
 35712                           	opt stack 30
 35713                           
 35714                           ;ui.c: 14: return userInterfaceStatus;
 35715                           
 35716                           ; BSR set to: 2
 35717                           ;incstack = 0
 35718  0078EE  0101               	movlb	1	; () banked
 35719  0078F0  5183               	movf	_userInterfaceStatus& (0+255),w,b
 35720  0078F2  0012               	return	
 35721  0078F4                     __end_of_ui_get_status:
 35722                           	opt stack 0
 35723                           tosu	equ	0xFFF
 35724                           tosh	equ	0xFFE
 35725                           tosl	equ	0xFFD
 35726                           pclath	equ	0xFFA
 35727                           tblptru	equ	0xFF8
 35728                           tblptrh	equ	0xFF7
 35729                           tblptrl	equ	0xFF6
 35730                           tablat	equ	0xFF5
 35731                           prodh	equ	0xFF4
 35732                           prodl	equ	0xFF3
 35733                           intcon	equ	0xFF2
 35734                           intcon2	equ	0xFF1
 35735                           intcon3	equ	0xFF0
 35736                           indf0	equ	0xFEF
 35737                           postinc0	equ	0xFEE
 35738                           fsr0h	equ	0xFEA
 35739                           fsr0l	equ	0xFE9
 35740                           wreg	equ	0xFE8
 35741                           indf1	equ	0xFE7
 35742                           postdec1	equ	0xFE5
 35743                           plusw1	equ	0xFE3
 35744                           fsr1h	equ	0xFE2
 35745                           fsr1l	equ	0xFE1
 35746                           indf2	equ	0xFDF
 35747                           postinc2	equ	0xFDE
 35748                           postdec2	equ	0xFDD
 35749                           plusw2	equ	0xFDB
 35750                           fsr2h	equ	0xFDA
 35751                           fsr2l	equ	0xFD9
 35752                           status	equ	0xFD8
 35753                           
 35754 ;; *************** function _rtcc_get_year *****************
 35755 ;; Defined at:
 35756 ;;		line 103 in file "rtcc.c"
 35757 ;; Parameters:    Size  Location     Type
 35758 ;;		None
 35759 ;; Auto vars:     Size  Location     Type
 35760 ;;		None
 35761 ;; Return value:  Size  Location     Type
 35762 ;;                  1    wreg      unsigned char 
 35763 ;; Registers used:
 35764 ;;		wreg, status,2
 35765 ;; Tracked objects:
 35766 ;;		On entry : 0/0
 35767 ;;		On exit  : 0/0
 35768 ;;		Unchanged: 0/0
 35769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35774 ;;Total ram usage:        0 bytes
 35775 ;; Hardware stack levels used:    1
 35776 ;; This function calls:
 35777 ;;		Nothing
 35778 ;; This function is called by:
 35779 ;;		__fill_buffer_get_status
 35780 ;;		_rtcc_write_eeprom
 35781 ;;		__number_of_days
 35782 ;;		_rtcc_get_year_decimal
 35783 ;;		_rtcc_increment_year
 35784 ;;		_rtcc_decrement_year
 35785 ;; This function uses a non-reentrant model
 35786 ;;
 35787                           
 35788                           	psect	text174
 35789  00777E                     __ptext174:
 35790                           	opt stack 0
 35791  00777E                     _rtcc_get_year:
 35792                           	opt stack 27
 35793                           
 35794                           ;rtcc.c: 105: RTCCFGbits.RTCPTR1 = 1;
 35795                           
 35796                           ; BSR set to: 1
 35797                           ;incstack = 0
 35798  00777E  010F               	movlb	15	; () banked
 35799  007780  833F               	bsf	63,1,b	;volatile
 35800                           
 35801                           ;rtcc.c: 106: RTCCFGbits.RTCPTR0 = 1;
 35802  007782  010F               	movlb	15	; () banked
 35803  007784  813F               	bsf	63,0,b	;volatile
 35804  007786                     l1885:
 35805                           
 35806                           ; BSR set to: 15
 35807  007786  010F               	movlb	15	; () banked
 35808  007788  B93F               	btfsc	63,4,b	;volatile
 35809  00778A  D7FD               	goto	l1885
 35810                           
 35811                           ; BSR set to: 15
 35812                           ;rtcc.c: 108: return RTCVALL;
 35813                           
 35814                           ; BSR set to: 15
 35815  00778C  010F               	movlb	15	; () banked
 35816  00778E  513A               	movf	58,w,b	;volatile
 35817  007790  0012               	return	
 35818  007792                     __end_of_rtcc_get_year:
 35819                           	opt stack 0
 35820                           tosu	equ	0xFFF
 35821                           tosh	equ	0xFFE
 35822                           tosl	equ	0xFFD
 35823                           pclath	equ	0xFFA
 35824                           tblptru	equ	0xFF8
 35825                           tblptrh	equ	0xFF7
 35826                           tblptrl	equ	0xFF6
 35827                           tablat	equ	0xFF5
 35828                           prodh	equ	0xFF4
 35829                           prodl	equ	0xFF3
 35830                           intcon	equ	0xFF2
 35831                           intcon2	equ	0xFF1
 35832                           intcon3	equ	0xFF0
 35833                           indf0	equ	0xFEF
 35834                           postinc0	equ	0xFEE
 35835                           fsr0h	equ	0xFEA
 35836                           fsr0l	equ	0xFE9
 35837                           wreg	equ	0xFE8
 35838                           indf1	equ	0xFE7
 35839                           postdec1	equ	0xFE5
 35840                           plusw1	equ	0xFE3
 35841                           fsr1h	equ	0xFE2
 35842                           fsr1l	equ	0xFE1
 35843                           indf2	equ	0xFDF
 35844                           postinc2	equ	0xFDE
 35845                           postdec2	equ	0xFDD
 35846                           plusw2	equ	0xFDB
 35847                           fsr2h	equ	0xFDA
 35848                           fsr2l	equ	0xFD9
 35849                           status	equ	0xFD8
 35850                           
 35851 ;; *************** function _rtcc_get_seconds *****************
 35852 ;; Defined at:
 35853 ;;		line 293 in file "rtcc.c"
 35854 ;; Parameters:    Size  Location     Type
 35855 ;;		None
 35856 ;; Auto vars:     Size  Location     Type
 35857 ;;		None
 35858 ;; Return value:  Size  Location     Type
 35859 ;;                  1    wreg      unsigned char 
 35860 ;; Registers used:
 35861 ;;		wreg, status,2
 35862 ;; Tracked objects:
 35863 ;;		On entry : 0/0
 35864 ;;		On exit  : 0/0
 35865 ;;		Unchanged: 0/0
 35866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35871 ;;Total ram usage:        0 bytes
 35872 ;; Hardware stack levels used:    1
 35873 ;; This function calls:
 35874 ;;		Nothing
 35875 ;; This function is called by:
 35876 ;;		__fill_buffer_get_status
 35877 ;;		_rtcc_write_eeprom
 35878 ;;		_rtcc_get_seconds_decimal
 35879 ;;		_rtcc_increment_seconds
 35880 ;;		_rtcc_decrement_seconds
 35881 ;; This function uses a non-reentrant model
 35882 ;;
 35883                           
 35884                           	psect	text175
 35885  007792                     __ptext175:
 35886                           	opt stack 0
 35887  007792                     _rtcc_get_seconds:
 35888                           	opt stack 27
 35889                           
 35890                           ;rtcc.c: 295: RTCCFGbits.RTCPTR1 = 0;
 35891                           
 35892                           ; BSR set to: 15
 35893                           ;incstack = 0
 35894  007792  010F               	movlb	15	; () banked
 35895  007794  933F               	bcf	63,1,b	;volatile
 35896                           
 35897                           ;rtcc.c: 296: RTCCFGbits.RTCPTR0 = 0;
 35898  007796  010F               	movlb	15	; () banked
 35899  007798  913F               	bcf	63,0,b	;volatile
 35900  00779A                     l1975:
 35901                           
 35902                           ; BSR set to: 15
 35903  00779A  010F               	movlb	15	; () banked
 35904  00779C  B93F               	btfsc	63,4,b	;volatile
 35905  00779E  D7FD               	goto	l1975
 35906                           
 35907                           ; BSR set to: 15
 35908                           ;rtcc.c: 298: return RTCVALL;
 35909                           
 35910                           ; BSR set to: 15
 35911  0077A0  010F               	movlb	15	; () banked
 35912  0077A2  513A               	movf	58,w,b	;volatile
 35913  0077A4  0012               	return	
 35914  0077A6                     __end_of_rtcc_get_seconds:
 35915                           	opt stack 0
 35916                           tosu	equ	0xFFF
 35917                           tosh	equ	0xFFE
 35918                           tosl	equ	0xFFD
 35919                           pclath	equ	0xFFA
 35920                           tblptru	equ	0xFF8
 35921                           tblptrh	equ	0xFF7
 35922                           tblptrl	equ	0xFF6
 35923                           tablat	equ	0xFF5
 35924                           prodh	equ	0xFF4
 35925                           prodl	equ	0xFF3
 35926                           intcon	equ	0xFF2
 35927                           intcon2	equ	0xFF1
 35928                           intcon3	equ	0xFF0
 35929                           indf0	equ	0xFEF
 35930                           postinc0	equ	0xFEE
 35931                           fsr0h	equ	0xFEA
 35932                           fsr0l	equ	0xFE9
 35933                           wreg	equ	0xFE8
 35934                           indf1	equ	0xFE7
 35935                           postdec1	equ	0xFE5
 35936                           plusw1	equ	0xFE3
 35937                           fsr1h	equ	0xFE2
 35938                           fsr1l	equ	0xFE1
 35939                           indf2	equ	0xFDF
 35940                           postinc2	equ	0xFDE
 35941                           postdec2	equ	0xFDD
 35942                           plusw2	equ	0xFDB
 35943                           fsr2h	equ	0xFDA
 35944                           fsr2l	equ	0xFD9
 35945                           status	equ	0xFD8
 35946                           
 35947 ;; *************** function _rtcc_get_month *****************
 35948 ;; Defined at:
 35949 ;;		line 141 in file "rtcc.c"
 35950 ;; Parameters:    Size  Location     Type
 35951 ;;		None
 35952 ;; Auto vars:     Size  Location     Type
 35953 ;;		None
 35954 ;; Return value:  Size  Location     Type
 35955 ;;                  1    wreg      unsigned char 
 35956 ;; Registers used:
 35957 ;;		wreg, status,2
 35958 ;; Tracked objects:
 35959 ;;		On entry : 0/0
 35960 ;;		On exit  : 0/0
 35961 ;;		Unchanged: 0/0
 35962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35967 ;;Total ram usage:        0 bytes
 35968 ;; Hardware stack levels used:    1
 35969 ;; This function calls:
 35970 ;;		Nothing
 35971 ;; This function is called by:
 35972 ;;		__fill_buffer_get_status
 35973 ;;		_rtcc_write_eeprom
 35974 ;;		__number_of_days
 35975 ;;		_rtcc_get_month_decimal
 35976 ;;		_rtcc_increment_month
 35977 ;;		_rtcc_decrement_month
 35978 ;; This function uses a non-reentrant model
 35979 ;;
 35980                           
 35981                           	psect	text176
 35982  0077A6                     __ptext176:
 35983                           	opt stack 0
 35984  0077A6                     _rtcc_get_month:
 35985                           	opt stack 27
 35986                           
 35987                           ;rtcc.c: 143: RTCCFGbits.RTCPTR1 = 1;
 35988                           
 35989                           ; BSR set to: 15
 35990                           ;incstack = 0
 35991  0077A6  010F               	movlb	15	; () banked
 35992  0077A8  833F               	bsf	63,1,b	;volatile
 35993                           
 35994                           ;rtcc.c: 144: RTCCFGbits.RTCPTR0 = 0;
 35995  0077AA  010F               	movlb	15	; () banked
 35996  0077AC  913F               	bcf	63,0,b	;volatile
 35997  0077AE                     l1903:
 35998                           
 35999                           ; BSR set to: 15
 36000  0077AE  010F               	movlb	15	; () banked
 36001  0077B0  B93F               	btfsc	63,4,b	;volatile
 36002  0077B2  D7FD               	goto	l1903
 36003                           
 36004                           ; BSR set to: 15
 36005                           ;rtcc.c: 146: return RTCVALH;
 36006                           
 36007                           ; BSR set to: 15
 36008  0077B4  010F               	movlb	15	; () banked
 36009  0077B6  513B               	movf	59,w,b	;volatile
 36010  0077B8  0012               	return	
 36011  0077BA                     __end_of_rtcc_get_month:
 36012                           	opt stack 0
 36013                           tosu	equ	0xFFF
 36014                           tosh	equ	0xFFE
 36015                           tosl	equ	0xFFD
 36016                           pclath	equ	0xFFA
 36017                           tblptru	equ	0xFF8
 36018                           tblptrh	equ	0xFF7
 36019                           tblptrl	equ	0xFF6
 36020                           tablat	equ	0xFF5
 36021                           prodh	equ	0xFF4
 36022                           prodl	equ	0xFF3
 36023                           intcon	equ	0xFF2
 36024                           intcon2	equ	0xFF1
 36025                           intcon3	equ	0xFF0
 36026                           indf0	equ	0xFEF
 36027                           postinc0	equ	0xFEE
 36028                           fsr0h	equ	0xFEA
 36029                           fsr0l	equ	0xFE9
 36030                           wreg	equ	0xFE8
 36031                           indf1	equ	0xFE7
 36032                           postdec1	equ	0xFE5
 36033                           plusw1	equ	0xFE3
 36034                           fsr1h	equ	0xFE2
 36035                           fsr1l	equ	0xFE1
 36036                           indf2	equ	0xFDF
 36037                           postinc2	equ	0xFDE
 36038                           postdec2	equ	0xFDD
 36039                           plusw2	equ	0xFDB
 36040                           fsr2h	equ	0xFDA
 36041                           fsr2l	equ	0xFD9
 36042                           status	equ	0xFD8
 36043                           
 36044 ;; *************** function _rtcc_get_minutes *****************
 36045 ;; Defined at:
 36046 ;;		line 255 in file "rtcc.c"
 36047 ;; Parameters:    Size  Location     Type
 36048 ;;		None
 36049 ;; Auto vars:     Size  Location     Type
 36050 ;;		None
 36051 ;; Return value:  Size  Location     Type
 36052 ;;                  1    wreg      unsigned char 
 36053 ;; Registers used:
 36054 ;;		wreg, status,2
 36055 ;; Tracked objects:
 36056 ;;		On entry : 0/0
 36057 ;;		On exit  : 0/0
 36058 ;;		Unchanged: 0/0
 36059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36064 ;;Total ram usage:        0 bytes
 36065 ;; Hardware stack levels used:    1
 36066 ;; This function calls:
 36067 ;;		Nothing
 36068 ;; This function is called by:
 36069 ;;		__fill_buffer_get_status
 36070 ;;		_rtcc_write_eeprom
 36071 ;;		_rtcc_get_minutes_decimal
 36072 ;;		_rtcc_increment_minutes
 36073 ;;		_rtcc_decrement_minutes
 36074 ;; This function uses a non-reentrant model
 36075 ;;
 36076                           
 36077                           	psect	text177
 36078  0077BA                     __ptext177:
 36079                           	opt stack 0
 36080  0077BA                     _rtcc_get_minutes:
 36081                           	opt stack 27
 36082                           
 36083                           ;rtcc.c: 257: RTCCFGbits.RTCPTR1 = 0;
 36084                           
 36085                           ; BSR set to: 15
 36086                           ;incstack = 0
 36087  0077BA  010F               	movlb	15	; () banked
 36088  0077BC  933F               	bcf	63,1,b	;volatile
 36089                           
 36090                           ;rtcc.c: 258: RTCCFGbits.RTCPTR0 = 0;
 36091  0077BE  010F               	movlb	15	; () banked
 36092  0077C0  913F               	bcf	63,0,b	;volatile
 36093  0077C2                     l1957:
 36094                           
 36095                           ; BSR set to: 15
 36096  0077C2  010F               	movlb	15	; () banked
 36097  0077C4  B93F               	btfsc	63,4,b	;volatile
 36098  0077C6  D7FD               	goto	l1957
 36099                           
 36100                           ; BSR set to: 15
 36101                           ;rtcc.c: 260: return RTCVALH;
 36102                           
 36103                           ; BSR set to: 15
 36104  0077C8  010F               	movlb	15	; () banked
 36105  0077CA  513B               	movf	59,w,b	;volatile
 36106  0077CC  0012               	return	
 36107  0077CE                     __end_of_rtcc_get_minutes:
 36108                           	opt stack 0
 36109                           tosu	equ	0xFFF
 36110                           tosh	equ	0xFFE
 36111                           tosl	equ	0xFFD
 36112                           pclath	equ	0xFFA
 36113                           tblptru	equ	0xFF8
 36114                           tblptrh	equ	0xFF7
 36115                           tblptrl	equ	0xFF6
 36116                           tablat	equ	0xFF5
 36117                           prodh	equ	0xFF4
 36118                           prodl	equ	0xFF3
 36119                           intcon	equ	0xFF2
 36120                           intcon2	equ	0xFF1
 36121                           intcon3	equ	0xFF0
 36122                           indf0	equ	0xFEF
 36123                           postinc0	equ	0xFEE
 36124                           fsr0h	equ	0xFEA
 36125                           fsr0l	equ	0xFE9
 36126                           wreg	equ	0xFE8
 36127                           indf1	equ	0xFE7
 36128                           postdec1	equ	0xFE5
 36129                           plusw1	equ	0xFE3
 36130                           fsr1h	equ	0xFE2
 36131                           fsr1l	equ	0xFE1
 36132                           indf2	equ	0xFDF
 36133                           postinc2	equ	0xFDE
 36134                           postdec2	equ	0xFDD
 36135                           plusw2	equ	0xFDB
 36136                           fsr2h	equ	0xFDA
 36137                           fsr2l	equ	0xFD9
 36138                           status	equ	0xFD8
 36139                           
 36140 ;; *************** function _rtcc_get_hours *****************
 36141 ;; Defined at:
 36142 ;;		line 217 in file "rtcc.c"
 36143 ;; Parameters:    Size  Location     Type
 36144 ;;		None
 36145 ;; Auto vars:     Size  Location     Type
 36146 ;;		None
 36147 ;; Return value:  Size  Location     Type
 36148 ;;                  1    wreg      unsigned char 
 36149 ;; Registers used:
 36150 ;;		wreg, status,2
 36151 ;; Tracked objects:
 36152 ;;		On entry : 0/0
 36153 ;;		On exit  : 0/0
 36154 ;;		Unchanged: 0/0
 36155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36160 ;;Total ram usage:        0 bytes
 36161 ;; Hardware stack levels used:    1
 36162 ;; This function calls:
 36163 ;;		Nothing
 36164 ;; This function is called by:
 36165 ;;		__fill_buffer_get_status
 36166 ;;		_rtcc_write_eeprom
 36167 ;;		_rtcc_get_hours_decimal
 36168 ;;		_rtcc_increment_hours
 36169 ;;		_rtcc_decrement_hours
 36170 ;; This function uses a non-reentrant model
 36171 ;;
 36172                           
 36173                           	psect	text178
 36174  0077CE                     __ptext178:
 36175                           	opt stack 0
 36176  0077CE                     _rtcc_get_hours:
 36177                           	opt stack 27
 36178                           
 36179                           ;rtcc.c: 219: RTCCFGbits.RTCPTR1 = 0;
 36180                           
 36181                           ; BSR set to: 15
 36182                           ;incstack = 0
 36183  0077CE  010F               	movlb	15	; () banked
 36184  0077D0  933F               	bcf	63,1,b	;volatile
 36185                           
 36186                           ;rtcc.c: 220: RTCCFGbits.RTCPTR0 = 1;
 36187  0077D2  010F               	movlb	15	; () banked
 36188  0077D4  813F               	bsf	63,0,b	;volatile
 36189  0077D6                     l1939:
 36190                           
 36191                           ; BSR set to: 15
 36192  0077D6  010F               	movlb	15	; () banked
 36193  0077D8  B93F               	btfsc	63,4,b	;volatile
 36194  0077DA  D7FD               	goto	l1939
 36195                           
 36196                           ; BSR set to: 15
 36197                           ;rtcc.c: 222: return RTCVALL;
 36198                           
 36199                           ; BSR set to: 15
 36200  0077DC  010F               	movlb	15	; () banked
 36201  0077DE  513A               	movf	58,w,b	;volatile
 36202  0077E0  0012               	return	
 36203  0077E2                     __end_of_rtcc_get_hours:
 36204                           	opt stack 0
 36205                           tosu	equ	0xFFF
 36206                           tosh	equ	0xFFE
 36207                           tosl	equ	0xFFD
 36208                           pclath	equ	0xFFA
 36209                           tblptru	equ	0xFF8
 36210                           tblptrh	equ	0xFF7
 36211                           tblptrl	equ	0xFF6
 36212                           tablat	equ	0xFF5
 36213                           prodh	equ	0xFF4
 36214                           prodl	equ	0xFF3
 36215                           intcon	equ	0xFF2
 36216                           intcon2	equ	0xFF1
 36217                           intcon3	equ	0xFF0
 36218                           indf0	equ	0xFEF
 36219                           postinc0	equ	0xFEE
 36220                           fsr0h	equ	0xFEA
 36221                           fsr0l	equ	0xFE9
 36222                           wreg	equ	0xFE8
 36223                           indf1	equ	0xFE7
 36224                           postdec1	equ	0xFE5
 36225                           plusw1	equ	0xFE3
 36226                           fsr1h	equ	0xFE2
 36227                           fsr1l	equ	0xFE1
 36228                           indf2	equ	0xFDF
 36229                           postinc2	equ	0xFDE
 36230                           postdec2	equ	0xFDD
 36231                           plusw2	equ	0xFDB
 36232                           fsr2h	equ	0xFDA
 36233                           fsr2l	equ	0xFD9
 36234                           status	equ	0xFD8
 36235                           
 36236 ;; *************** function _rtcc_get_day *****************
 36237 ;; Defined at:
 36238 ;;		line 179 in file "rtcc.c"
 36239 ;; Parameters:    Size  Location     Type
 36240 ;;		None
 36241 ;; Auto vars:     Size  Location     Type
 36242 ;;		None
 36243 ;; Return value:  Size  Location     Type
 36244 ;;                  1    wreg      unsigned char 
 36245 ;; Registers used:
 36246 ;;		wreg, status,2
 36247 ;; Tracked objects:
 36248 ;;		On entry : 0/0
 36249 ;;		On exit  : 0/0
 36250 ;;		Unchanged: 0/0
 36251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36256 ;;Total ram usage:        0 bytes
 36257 ;; Hardware stack levels used:    1
 36258 ;; This function calls:
 36259 ;;		Nothing
 36260 ;; This function is called by:
 36261 ;;		__fill_buffer_get_status
 36262 ;;		_rtcc_write_eeprom
 36263 ;;		_rtcc_correct_day
 36264 ;;		_rtcc_get_day_decimal
 36265 ;;		_rtcc_increment_day
 36266 ;;		_rtcc_decrement_day
 36267 ;; This function uses a non-reentrant model
 36268 ;;
 36269                           
 36270                           	psect	text179
 36271  0077E2                     __ptext179:
 36272                           	opt stack 0
 36273  0077E2                     _rtcc_get_day:
 36274                           	opt stack 27
 36275                           
 36276                           ;rtcc.c: 181: RTCCFGbits.RTCPTR1 = 1;
 36277                           
 36278                           ; BSR set to: 15
 36279                           ;incstack = 0
 36280  0077E2  010F               	movlb	15	; () banked
 36281  0077E4  833F               	bsf	63,1,b	;volatile
 36282                           
 36283                           ;rtcc.c: 182: RTCCFGbits.RTCPTR0 = 0;
 36284  0077E6  010F               	movlb	15	; () banked
 36285  0077E8  913F               	bcf	63,0,b	;volatile
 36286  0077EA                     l1921:
 36287                           
 36288                           ; BSR set to: 15
 36289  0077EA  010F               	movlb	15	; () banked
 36290  0077EC  B93F               	btfsc	63,4,b	;volatile
 36291  0077EE  D7FD               	goto	l1921
 36292                           
 36293                           ; BSR set to: 15
 36294                           ;rtcc.c: 184: return RTCVALL;
 36295                           
 36296                           ; BSR set to: 15
 36297  0077F0  010F               	movlb	15	; () banked
 36298  0077F2  513A               	movf	58,w,b	;volatile
 36299  0077F4  0012               	return	
 36300  0077F6                     __end_of_rtcc_get_day:
 36301                           	opt stack 0
 36302                           tosu	equ	0xFFF
 36303                           tosh	equ	0xFFE
 36304                           tosl	equ	0xFFD
 36305                           pclath	equ	0xFFA
 36306                           tblptru	equ	0xFF8
 36307                           tblptrh	equ	0xFF7
 36308                           tblptrl	equ	0xFF6
 36309                           tablat	equ	0xFF5
 36310                           prodh	equ	0xFF4
 36311                           prodl	equ	0xFF3
 36312                           intcon	equ	0xFF2
 36313                           intcon2	equ	0xFF1
 36314                           intcon3	equ	0xFF0
 36315                           indf0	equ	0xFEF
 36316                           postinc0	equ	0xFEE
 36317                           fsr0h	equ	0xFEA
 36318                           fsr0l	equ	0xFE9
 36319                           wreg	equ	0xFE8
 36320                           indf1	equ	0xFE7
 36321                           postdec1	equ	0xFE5
 36322                           plusw1	equ	0xFE3
 36323                           fsr1h	equ	0xFE2
 36324                           fsr1l	equ	0xFE1
 36325                           indf2	equ	0xFDF
 36326                           postinc2	equ	0xFDE
 36327                           postdec2	equ	0xFDD
 36328                           plusw2	equ	0xFDB
 36329                           fsr2h	equ	0xFDA
 36330                           fsr2l	equ	0xFD9
 36331                           status	equ	0xFD8
 36332                           
 36333 ;; *************** function __fill_buffer_get_display2 *****************
 36334 ;; Defined at:
 36335 ;;		line 313 in file "app_device_custom_hid.c"
 36336 ;; Parameters:    Size  Location     Type
 36337 ;;		None
 36338 ;; Auto vars:     Size  Location     Type
 36339 ;;  position        1    7[COMRAM] unsigned char 
 36340 ;;  line            1    6[COMRAM] unsigned char 
 36341 ;;  cntr            1    5[COMRAM] unsigned char 
 36342 ;; Return value:  Size  Location     Type
 36343 ;;                  1    wreg      void 
 36344 ;; Registers used:
 36345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36346 ;; Tracked objects:
 36347 ;;		On entry : 0/0
 36348 ;;		On exit  : 0/0
 36349 ;;		Unchanged: 0/0
 36350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36352 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36355 ;;Total ram usage:        4 bytes
 36356 ;; Hardware stack levels used:    1
 36357 ;; Hardware stack levels required when called:    1
 36358 ;; This function calls:
 36359 ;;		_display_get_character
 36360 ;; This function is called by:
 36361 ;;		_APP_DeviceCustomHIDTasks
 36362 ;; This function uses a non-reentrant model
 36363 ;;
 36364                           
 36365                           	psect	text180
 36366  006CB6                     __ptext180:
 36367                           	opt stack 0
 36368  006CB6                     __fill_buffer_get_display2:
 36369                           	opt stack 28
 36370                           
 36371                           ;app_device_custom_hid.c: 315: uint8_t cntr;
 36372                           ;app_device_custom_hid.c: 316: uint8_t line;
 36373                           ;app_device_custom_hid.c: 317: uint8_t position;
 36374                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 36375                           
 36376                           ; BSR set to: 15
 36377                           ;incstack = 0
 36378  006CB6  0E12               	movlw	18
 36379  006CB8  0102               	movlb	2	; () banked
 36380  006CBA  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36381                           
 36382                           ;app_device_custom_hid.c: 323: cntr = 1;
 36383  006CBC  0E01               	movlw	1
 36384  006CBE  6E06               	movwf	__fill_buffer_get_display2@cntr,c
 36385                           
 36386                           ;app_device_custom_hid.c: 324: for(line=2; line<4; ++line)
 36387  006CC0  0E02               	movlw	2
 36388  006CC2  6E07               	movwf	__fill_buffer_get_display2@line,c
 36389  006CC4                     l13023:
 36390                           
 36391                           ; BSR set to: 2
 36392  006CC4  0E03               	movlw	3
 36393  006CC6  6407               	cpfsgt	__fill_buffer_get_display2@line,c
 36394  006CC8  D001               	goto	l13027
 36395  006CCA  0012               	return	
 36396  006CCC                     l13027:
 36397                           
 36398                           ;app_device_custom_hid.c: 325: {
 36399                           ;app_device_custom_hid.c: 326: for(position=0; position<20; ++position)
 36400  006CCC  0E00               	movlw	0
 36401  006CCE  6E08               	movwf	__fill_buffer_get_display2@position,c
 36402  006CD0                     l13029:
 36403  006CD0  0E13               	movlw	19
 36404  006CD2  6408               	cpfsgt	__fill_buffer_get_display2@position,c
 36405  006CD4  D001               	goto	l13033
 36406  006CD6  D013               	goto	l13041
 36407  006CD8                     l13033:
 36408                           
 36409                           ;app_device_custom_hid.c: 327: {
 36410                           ;app_device_custom_hid.c: 328: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 36411  006CD8  C008  F001         	movff	__fill_buffer_get_display2@position,display_get_character@position
 36412  006CDC  5007               	movf	__fill_buffer_get_display2@line,w,c
 36413  006CDE  EC31  F03A         	call	_display_get_character
 36414  006CE2  6E05               	movwf	??__fill_buffer_get_display2& (0+255),c
 36415  006CE4  5006               	movf	__fill_buffer_get_display2@cntr,w,c
 36416  006CE6  0D01               	mullw	1
 36417  006CE8  0EB4               	movlw	low _ToSendDataBuffer
 36418  006CEA  24F3               	addwf	prodl,w,c
 36419  006CEC  6ED9               	movwf	fsr2l,c
 36420  006CEE  0E02               	movlw	high _ToSendDataBuffer
 36421  006CF0  20F4               	addwfc	prodh,w,c
 36422  006CF2  6EDA               	movwf	fsr2h,c
 36423  006CF4  C005  FFDF         	movff	??__fill_buffer_get_display2,indf2
 36424                           
 36425                           ;app_device_custom_hid.c: 329: ++cntr;
 36426  006CF8  2A06               	incf	__fill_buffer_get_display2@cntr,f,c
 36427  006CFA  2A08               	incf	__fill_buffer_get_display2@position,f,c
 36428  006CFC  D7E9               	goto	l13029
 36429  006CFE                     l13041:
 36430  006CFE  2A07               	incf	__fill_buffer_get_display2@line,f,c
 36431  006D00  D7E1               	goto	l13023
 36432  006D02                     __end_of__fill_buffer_get_display2:
 36433                           	opt stack 0
 36434                           tosu	equ	0xFFF
 36435                           tosh	equ	0xFFE
 36436                           tosl	equ	0xFFD
 36437                           pclath	equ	0xFFA
 36438                           tblptru	equ	0xFF8
 36439                           tblptrh	equ	0xFF7
 36440                           tblptrl	equ	0xFF6
 36441                           tablat	equ	0xFF5
 36442                           prodh	equ	0xFF4
 36443                           prodl	equ	0xFF3
 36444                           intcon	equ	0xFF2
 36445                           intcon2	equ	0xFF1
 36446                           intcon3	equ	0xFF0
 36447                           indf0	equ	0xFEF
 36448                           postinc0	equ	0xFEE
 36449                           fsr0h	equ	0xFEA
 36450                           fsr0l	equ	0xFE9
 36451                           wreg	equ	0xFE8
 36452                           indf1	equ	0xFE7
 36453                           postdec1	equ	0xFE5
 36454                           plusw1	equ	0xFE3
 36455                           fsr1h	equ	0xFE2
 36456                           fsr1l	equ	0xFE1
 36457                           indf2	equ	0xFDF
 36458                           postinc2	equ	0xFDE
 36459                           postdec2	equ	0xFDD
 36460                           plusw2	equ	0xFDB
 36461                           fsr2h	equ	0xFDA
 36462                           fsr2l	equ	0xFD9
 36463                           status	equ	0xFD8
 36464                           
 36465 ;; *************** function __fill_buffer_get_display1 *****************
 36466 ;; Defined at:
 36467 ;;		line 291 in file "app_device_custom_hid.c"
 36468 ;; Parameters:    Size  Location     Type
 36469 ;;		None
 36470 ;; Auto vars:     Size  Location     Type
 36471 ;;  position        1    7[COMRAM] unsigned char 
 36472 ;;  line            1    6[COMRAM] unsigned char 
 36473 ;;  cntr            1    5[COMRAM] unsigned char 
 36474 ;; Return value:  Size  Location     Type
 36475 ;;                  1    wreg      void 
 36476 ;; Registers used:
 36477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36478 ;; Tracked objects:
 36479 ;;		On entry : 0/0
 36480 ;;		On exit  : 0/0
 36481 ;;		Unchanged: 0/0
 36482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36484 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36485 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36486 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36487 ;;Total ram usage:        4 bytes
 36488 ;; Hardware stack levels used:    1
 36489 ;; Hardware stack levels required when called:    1
 36490 ;; This function calls:
 36491 ;;		_display_get_character
 36492 ;; This function is called by:
 36493 ;;		_APP_DeviceCustomHIDTasks
 36494 ;; This function uses a non-reentrant model
 36495 ;;
 36496                           
 36497                           	psect	text181
 36498  006D02                     __ptext181:
 36499                           	opt stack 0
 36500  006D02                     __fill_buffer_get_display1:
 36501                           	opt stack 28
 36502                           
 36503                           ;app_device_custom_hid.c: 293: uint8_t cntr;
 36504                           ;app_device_custom_hid.c: 294: uint8_t line;
 36505                           ;app_device_custom_hid.c: 295: uint8_t position;
 36506                           ;app_device_custom_hid.c: 298: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 36507                           
 36508                           ;incstack = 0
 36509  006D02  0E11               	movlw	17
 36510  006D04  0102               	movlb	2	; () banked
 36511  006D06  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36512                           
 36513                           ;app_device_custom_hid.c: 301: cntr = 1;
 36514  006D08  0E01               	movlw	1
 36515  006D0A  6E06               	movwf	__fill_buffer_get_display1@cntr,c
 36516                           
 36517                           ;app_device_custom_hid.c: 302: for(line=0; line<2; ++line)
 36518  006D0C  0E00               	movlw	0
 36519  006D0E  6E07               	movwf	__fill_buffer_get_display1@line,c
 36520  006D10                     l12999:
 36521                           
 36522                           ; BSR set to: 2
 36523  006D10  0E01               	movlw	1
 36524  006D12  6407               	cpfsgt	__fill_buffer_get_display1@line,c
 36525  006D14  D001               	goto	l13003
 36526  006D16  0012               	return	
 36527  006D18                     l13003:
 36528                           
 36529                           ;app_device_custom_hid.c: 303: {
 36530                           ;app_device_custom_hid.c: 304: for(position=0; position<20; ++position)
 36531  006D18  0E00               	movlw	0
 36532  006D1A  6E08               	movwf	__fill_buffer_get_display1@position,c
 36533  006D1C                     l13005:
 36534  006D1C  0E13               	movlw	19
 36535  006D1E  6408               	cpfsgt	__fill_buffer_get_display1@position,c
 36536  006D20  D001               	goto	l13009
 36537  006D22  D013               	goto	l13017
 36538  006D24                     l13009:
 36539                           
 36540                           ;app_device_custom_hid.c: 305: {
 36541                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 36542  006D24  C008  F001         	movff	__fill_buffer_get_display1@position,display_get_character@position
 36543  006D28  5007               	movf	__fill_buffer_get_display1@line,w,c
 36544  006D2A  EC31  F03A         	call	_display_get_character
 36545  006D2E  6E05               	movwf	??__fill_buffer_get_display1& (0+255),c
 36546  006D30  5006               	movf	__fill_buffer_get_display1@cntr,w,c
 36547  006D32  0D01               	mullw	1
 36548  006D34  0EB4               	movlw	low _ToSendDataBuffer
 36549  006D36  24F3               	addwf	prodl,w,c
 36550  006D38  6ED9               	movwf	fsr2l,c
 36551  006D3A  0E02               	movlw	high _ToSendDataBuffer
 36552  006D3C  20F4               	addwfc	prodh,w,c
 36553  006D3E  6EDA               	movwf	fsr2h,c
 36554  006D40  C005  FFDF         	movff	??__fill_buffer_get_display1,indf2
 36555                           
 36556                           ;app_device_custom_hid.c: 307: ++cntr;
 36557  006D44  2A06               	incf	__fill_buffer_get_display1@cntr,f,c
 36558  006D46  2A08               	incf	__fill_buffer_get_display1@position,f,c
 36559  006D48  D7E9               	goto	l13005
 36560  006D4A                     l13017:
 36561  006D4A  2A07               	incf	__fill_buffer_get_display1@line,f,c
 36562  006D4C  D7E1               	goto	l12999
 36563  006D4E                     __end_of__fill_buffer_get_display1:
 36564                           	opt stack 0
 36565                           tosu	equ	0xFFF
 36566                           tosh	equ	0xFFE
 36567                           tosl	equ	0xFFD
 36568                           pclath	equ	0xFFA
 36569                           tblptru	equ	0xFF8
 36570                           tblptrh	equ	0xFF7
 36571                           tblptrl	equ	0xFF6
 36572                           tablat	equ	0xFF5
 36573                           prodh	equ	0xFF4
 36574                           prodl	equ	0xFF3
 36575                           intcon	equ	0xFF2
 36576                           intcon2	equ	0xFF1
 36577                           intcon3	equ	0xFF0
 36578                           indf0	equ	0xFEF
 36579                           postinc0	equ	0xFEE
 36580                           fsr0h	equ	0xFEA
 36581                           fsr0l	equ	0xFE9
 36582                           wreg	equ	0xFE8
 36583                           indf1	equ	0xFE7
 36584                           postdec1	equ	0xFE5
 36585                           plusw1	equ	0xFE3
 36586                           fsr1h	equ	0xFE2
 36587                           fsr1l	equ	0xFE1
 36588                           indf2	equ	0xFDF
 36589                           postinc2	equ	0xFDE
 36590                           postdec2	equ	0xFDD
 36591                           plusw2	equ	0xFDB
 36592                           fsr2h	equ	0xFDA
 36593                           fsr2l	equ	0xFD9
 36594                           status	equ	0xFD8
 36595                           
 36596 ;; *************** function _display_get_character *****************
 36597 ;; Defined at:
 36598 ;;		line 59 in file "display.c"
 36599 ;; Parameters:    Size  Location     Type
 36600 ;;  line            1    wreg     unsigned char 
 36601 ;;  position        1    0[COMRAM] unsigned char 
 36602 ;; Auto vars:     Size  Location     Type
 36603 ;;  line            1    3[COMRAM] unsigned char 
 36604 ;; Return value:  Size  Location     Type
 36605 ;;                  1    wreg      unsigned char 
 36606 ;; Registers used:
 36607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36608 ;; Tracked objects:
 36609 ;;		On entry : 0/0
 36610 ;;		On exit  : 0/0
 36611 ;;		Unchanged: 0/0
 36612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36613 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36617 ;;Total ram usage:        4 bytes
 36618 ;; Hardware stack levels used:    1
 36619 ;; This function calls:
 36620 ;;		Nothing
 36621 ;; This function is called by:
 36622 ;;		__fill_buffer_get_display1
 36623 ;;		__fill_buffer_get_display2
 36624 ;; This function uses a non-reentrant model
 36625 ;;
 36626                           
 36627                           	psect	text182
 36628  007462                     __ptext182:
 36629                           	opt stack 0
 36630  007462                     _display_get_character:
 36631                           	opt stack 28
 36632                           
 36633                           ;incstack = 0
 36634                           ;display_get_character@line stored from wreg
 36635  007462  6E04               	movwf	display_get_character@line,c
 36636                           
 36637                           ;display.c: 61: return display_content[line][position];
 36638  007464  5004               	movf	display_get_character@line,w,c
 36639  007466  0D14               	mullw	20
 36640  007468  0E64               	movlw	low _display_content
 36641  00746A  6E02               	movwf	??_display_get_character& (0+255),c
 36642  00746C  0E02               	movlw	high _display_content
 36643  00746E  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 36644  007470  50F3               	movf	prodl,w,c
 36645  007472  2602               	addwf	??_display_get_character,f,c
 36646  007474  50F4               	movf	prodh,w,c
 36647  007476  2203               	addwfc	??_display_get_character+1,f,c
 36648  007478  5001               	movf	display_get_character@position,w,c
 36649  00747A  0D01               	mullw	1
 36650  00747C  50F3               	movf	prodl,w,c
 36651  00747E  2402               	addwf	??_display_get_character,w,c
 36652  007480  6ED9               	movwf	fsr2l,c
 36653  007482  50F4               	movf	prodh,w,c
 36654  007484  2003               	addwfc	??_display_get_character+1,w,c
 36655  007486  6EDA               	movwf	fsr2h,c
 36656  007488  50DF               	movf	indf2,w,c
 36657  00748A  0012               	return	
 36658  00748C                     __end_of_display_get_character:
 36659                           	opt stack 0
 36660                           tosu	equ	0xFFF
 36661                           tosh	equ	0xFFE
 36662                           tosl	equ	0xFFD
 36663                           pclath	equ	0xFFA
 36664                           tblptru	equ	0xFF8
 36665                           tblptrh	equ	0xFF7
 36666                           tblptrl	equ	0xFF6
 36667                           tablat	equ	0xFF5
 36668                           prodh	equ	0xFF4
 36669                           prodl	equ	0xFF3
 36670                           intcon	equ	0xFF2
 36671                           intcon2	equ	0xFF1
 36672                           intcon3	equ	0xFF0
 36673                           indf0	equ	0xFEF
 36674                           postinc0	equ	0xFEE
 36675                           fsr0h	equ	0xFEA
 36676                           fsr0l	equ	0xFE9
 36677                           wreg	equ	0xFE8
 36678                           indf1	equ	0xFE7
 36679                           postdec1	equ	0xFE5
 36680                           plusw1	equ	0xFE3
 36681                           fsr1h	equ	0xFE2
 36682                           fsr1l	equ	0xFE1
 36683                           indf2	equ	0xFDF
 36684                           postinc2	equ	0xFDE
 36685                           postdec2	equ	0xFDD
 36686                           plusw2	equ	0xFDB
 36687                           fsr2h	equ	0xFDA
 36688                           fsr2l	equ	0xFD9
 36689                           status	equ	0xFD8
 36690                           
 36691 ;; *************** function __fill_buffer_get_calibration2 *****************
 36692 ;; Defined at:
 36693 ;;		line 348 in file "app_device_custom_hid.c"
 36694 ;; Parameters:    Size  Location     Type
 36695 ;;		None
 36696 ;; Auto vars:     Size  Location     Type
 36697 ;;		None
 36698 ;; Return value:  Size  Location     Type
 36699 ;;                  1    wreg      void 
 36700 ;; Registers used:
 36701 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36702 ;; Tracked objects:
 36703 ;;		On entry : 0/0
 36704 ;;		On exit  : 0/0
 36705 ;;		Unchanged: 0/0
 36706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36711 ;;Total ram usage:        0 bytes
 36712 ;; Hardware stack levels used:    1
 36713 ;; Hardware stack levels required when called:    1
 36714 ;; This function calls:
 36715 ;;		_memcpy
 36716 ;; This function is called by:
 36717 ;;		_APP_DeviceCustomHIDTasks
 36718 ;; This function uses a non-reentrant model
 36719 ;;
 36720                           
 36721                           	psect	text183
 36722  00623C                     __ptext183:
 36723                           	opt stack 0
 36724  00623C                     __fill_buffer_get_calibration2:
 36725                           	opt stack 28
 36726                           
 36727                           ;app_device_custom_hid.c: 351: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 36728                           
 36729                           ;incstack = 0
 36730  00623C  0E14               	movlw	20
 36731  00623E  0102               	movlb	2	; () banked
 36732  006240  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36733                           
 36734                           ; BSR set to: 2
 36735                           ;app_device_custom_hid.c: 353: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 36736  006242  0EB5               	movlw	low (_ToSendDataBuffer+1)
 36737  006244  6E01               	movwf	memcpy@d1,c
 36738  006246  0E02               	movlw	high (_ToSendDataBuffer+1)
 36739  006248  6E02               	movwf	memcpy@d1+1,c
 36740  00624A  0E40               	movlw	low (_calibrationParameters+48)
 36741  00624C  6E03               	movwf	memcpy@s1,c
 36742  00624E  0E02               	movlw	high (_calibrationParameters+48)
 36743  006250  6E04               	movwf	memcpy@s1+1,c
 36744  006252  5003               	movf	memcpy@s1,w,c
 36745  006254  1004               	iorwf	memcpy@s1+1,w,c
 36746  006256  A4D8               	btfss	status,2,c
 36747  006258  0E20               	movlw	32
 36748  00625A  6E05               	movwf	memcpy@s1+2,c
 36749  00625C  0E00               	movlw	0
 36750  00625E  6E07               	movwf	memcpy@n+1,c
 36751  006260  0E0C               	movlw	12
 36752  006262  6E06               	movwf	memcpy@n,c
 36753  006264  EC4B  F033         	call	_memcpy	;wreg free
 36754                           
 36755                           ;app_device_custom_hid.c: 354: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 36756  006268  0EC1               	movlw	low (_ToSendDataBuffer+13)
 36757  00626A  6E01               	movwf	memcpy@d1,c
 36758  00626C  0E02               	movlw	high (_ToSendDataBuffer+13)
 36759  00626E  6E02               	movwf	memcpy@d1+1,c
 36760  006270  0E4C               	movlw	low (_calibrationParameters+60)
 36761  006272  6E03               	movwf	memcpy@s1,c
 36762  006274  0E02               	movlw	high (_calibrationParameters+60)
 36763  006276  6E04               	movwf	memcpy@s1+1,c
 36764  006278  5003               	movf	memcpy@s1,w,c
 36765  00627A  1004               	iorwf	memcpy@s1+1,w,c
 36766  00627C  A4D8               	btfss	status,2,c
 36767  00627E  0E20               	movlw	32
 36768  006280  6E05               	movwf	memcpy@s1+2,c
 36769  006282  0E00               	movlw	0
 36770  006284  6E07               	movwf	memcpy@n+1,c
 36771  006286  0E0C               	movlw	12
 36772  006288  6E06               	movwf	memcpy@n,c
 36773  00628A  EC4B  F033         	call	_memcpy	;wreg free
 36774                           
 36775                           ;app_device_custom_hid.c: 355: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 36776  00628E  0ECD               	movlw	low (_ToSendDataBuffer+25)
 36777  006290  6E01               	movwf	memcpy@d1,c
 36778  006292  0E02               	movlw	high (_ToSendDataBuffer+25)
 36779  006294  6E02               	movwf	memcpy@d1+1,c
 36780  006296  0E58               	movlw	low (_calibrationParameters+72)
 36781  006298  6E03               	movwf	memcpy@s1,c
 36782  00629A  0E02               	movlw	high (_calibrationParameters+72)
 36783  00629C  6E04               	movwf	memcpy@s1+1,c
 36784  00629E  5003               	movf	memcpy@s1,w,c
 36785  0062A0  1004               	iorwf	memcpy@s1+1,w,c
 36786  0062A2  A4D8               	btfss	status,2,c
 36787  0062A4  0E20               	movlw	32
 36788  0062A6  6E05               	movwf	memcpy@s1+2,c
 36789  0062A8  0E00               	movlw	0
 36790  0062AA  6E07               	movwf	memcpy@n+1,c
 36791  0062AC  0E0C               	movlw	12
 36792  0062AE  6E06               	movwf	memcpy@n,c
 36793  0062B0  EC4B  F033         	call	_memcpy	;wreg free
 36794  0062B4  0012               	return		;funcret
 36795  0062B6                     __end_of__fill_buffer_get_calibration2:
 36796                           	opt stack 0
 36797                           tosu	equ	0xFFF
 36798                           tosh	equ	0xFFE
 36799                           tosl	equ	0xFFD
 36800                           pclath	equ	0xFFA
 36801                           tblptru	equ	0xFF8
 36802                           tblptrh	equ	0xFF7
 36803                           tblptrl	equ	0xFF6
 36804                           tablat	equ	0xFF5
 36805                           prodh	equ	0xFF4
 36806                           prodl	equ	0xFF3
 36807                           intcon	equ	0xFF2
 36808                           intcon2	equ	0xFF1
 36809                           intcon3	equ	0xFF0
 36810                           indf0	equ	0xFEF
 36811                           postinc0	equ	0xFEE
 36812                           fsr0h	equ	0xFEA
 36813                           fsr0l	equ	0xFE9
 36814                           wreg	equ	0xFE8
 36815                           indf1	equ	0xFE7
 36816                           postdec1	equ	0xFE5
 36817                           plusw1	equ	0xFE3
 36818                           fsr1h	equ	0xFE2
 36819                           fsr1l	equ	0xFE1
 36820                           indf2	equ	0xFDF
 36821                           postinc2	equ	0xFDE
 36822                           postdec2	equ	0xFDD
 36823                           plusw2	equ	0xFDB
 36824                           fsr2h	equ	0xFDA
 36825                           fsr2l	equ	0xFD9
 36826                           status	equ	0xFD8
 36827                           
 36828 ;; *************** function __fill_buffer_get_calibration1 *****************
 36829 ;; Defined at:
 36830 ;;		line 336 in file "app_device_custom_hid.c"
 36831 ;; Parameters:    Size  Location     Type
 36832 ;;		None
 36833 ;; Auto vars:     Size  Location     Type
 36834 ;;		None
 36835 ;; Return value:  Size  Location     Type
 36836 ;;                  1    wreg      void 
 36837 ;; Registers used:
 36838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36839 ;; Tracked objects:
 36840 ;;		On entry : 0/0
 36841 ;;		On exit  : 0/0
 36842 ;;		Unchanged: 0/0
 36843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36848 ;;Total ram usage:        0 bytes
 36849 ;; Hardware stack levels used:    1
 36850 ;; Hardware stack levels required when called:    1
 36851 ;; This function calls:
 36852 ;;		_memcpy
 36853 ;; This function is called by:
 36854 ;;		_APP_DeviceCustomHIDTasks
 36855 ;; This function uses a non-reentrant model
 36856 ;;
 36857                           
 36858                           	psect	text184
 36859  005AC0                     __ptext184:
 36860                           	opt stack 0
 36861  005AC0                     __fill_buffer_get_calibration1:
 36862                           	opt stack 28
 36863                           
 36864                           ;app_device_custom_hid.c: 339: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 36865                           
 36866                           ;incstack = 0
 36867  005AC0  0E13               	movlw	19
 36868  005AC2  0102               	movlb	2	; () banked
 36869  005AC4  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36870                           
 36871                           ; BSR set to: 2
 36872                           ;app_device_custom_hid.c: 341: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 36873  005AC6  0EB5               	movlw	low (_ToSendDataBuffer+1)
 36874  005AC8  6E01               	movwf	memcpy@d1,c
 36875  005ACA  0E02               	movlw	high (_ToSendDataBuffer+1)
 36876  005ACC  6E02               	movwf	memcpy@d1+1,c
 36877  005ACE  0E10               	movlw	low _calibrationParameters
 36878  005AD0  6E03               	movwf	memcpy@s1,c
 36879  005AD2  0E02               	movlw	high _calibrationParameters
 36880  005AD4  6E04               	movwf	memcpy@s1+1,c
 36881  005AD6  5003               	movf	memcpy@s1,w,c
 36882  005AD8  1004               	iorwf	memcpy@s1+1,w,c
 36883  005ADA  A4D8               	btfss	status,2,c
 36884  005ADC  0E20               	movlw	32
 36885  005ADE  6E05               	movwf	memcpy@s1+2,c
 36886  005AE0  0E00               	movlw	0
 36887  005AE2  6E07               	movwf	memcpy@n+1,c
 36888  005AE4  0E0C               	movlw	12
 36889  005AE6  6E06               	movwf	memcpy@n,c
 36890  005AE8  EC4B  F033         	call	_memcpy	;wreg free
 36891                           
 36892                           ;app_device_custom_hid.c: 342: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 36893  005AEC  0EC1               	movlw	low (_ToSendDataBuffer+13)
 36894  005AEE  6E01               	movwf	memcpy@d1,c
 36895  005AF0  0E02               	movlw	high (_ToSendDataBuffer+13)
 36896  005AF2  6E02               	movwf	memcpy@d1+1,c
 36897  005AF4  0E1C               	movlw	low (_calibrationParameters+12)
 36898  005AF6  6E03               	movwf	memcpy@s1,c
 36899  005AF8  0E02               	movlw	high (_calibrationParameters+12)
 36900  005AFA  6E04               	movwf	memcpy@s1+1,c
 36901  005AFC  5003               	movf	memcpy@s1,w,c
 36902  005AFE  1004               	iorwf	memcpy@s1+1,w,c
 36903  005B00  A4D8               	btfss	status,2,c
 36904  005B02  0E20               	movlw	32
 36905  005B04  6E05               	movwf	memcpy@s1+2,c
 36906  005B06  0E00               	movlw	0
 36907  005B08  6E07               	movwf	memcpy@n+1,c
 36908  005B0A  0E0C               	movlw	12
 36909  005B0C  6E06               	movwf	memcpy@n,c
 36910  005B0E  EC4B  F033         	call	_memcpy	;wreg free
 36911                           
 36912                           ;app_device_custom_hid.c: 343: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 36913  005B12  0ECD               	movlw	low (_ToSendDataBuffer+25)
 36914  005B14  6E01               	movwf	memcpy@d1,c
 36915  005B16  0E02               	movlw	high (_ToSendDataBuffer+25)
 36916  005B18  6E02               	movwf	memcpy@d1+1,c
 36917  005B1A  0E28               	movlw	low (_calibrationParameters+24)
 36918  005B1C  6E03               	movwf	memcpy@s1,c
 36919  005B1E  0E02               	movlw	high (_calibrationParameters+24)
 36920  005B20  6E04               	movwf	memcpy@s1+1,c
 36921  005B22  5003               	movf	memcpy@s1,w,c
 36922  005B24  1004               	iorwf	memcpy@s1+1,w,c
 36923  005B26  A4D8               	btfss	status,2,c
 36924  005B28  0E20               	movlw	32
 36925  005B2A  6E05               	movwf	memcpy@s1+2,c
 36926  005B2C  0E00               	movlw	0
 36927  005B2E  6E07               	movwf	memcpy@n+1,c
 36928  005B30  0E0C               	movlw	12
 36929  005B32  6E06               	movwf	memcpy@n,c
 36930  005B34  EC4B  F033         	call	_memcpy	;wreg free
 36931                           
 36932                           ;app_device_custom_hid.c: 344: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 36933  005B38  0ED9               	movlw	low (_ToSendDataBuffer+37)
 36934  005B3A  6E01               	movwf	memcpy@d1,c
 36935  005B3C  0E02               	movlw	high (_ToSendDataBuffer+37)
 36936  005B3E  6E02               	movwf	memcpy@d1+1,c
 36937  005B40  0E34               	movlw	low (_calibrationParameters+36)
 36938  005B42  6E03               	movwf	memcpy@s1,c
 36939  005B44  0E02               	movlw	high (_calibrationParameters+36)
 36940  005B46  6E04               	movwf	memcpy@s1+1,c
 36941  005B48  5003               	movf	memcpy@s1,w,c
 36942  005B4A  1004               	iorwf	memcpy@s1+1,w,c
 36943  005B4C  A4D8               	btfss	status,2,c
 36944  005B4E  0E20               	movlw	32
 36945  005B50  6E05               	movwf	memcpy@s1+2,c
 36946  005B52  0E00               	movlw	0
 36947  005B54  6E07               	movwf	memcpy@n+1,c
 36948  005B56  0E0C               	movlw	12
 36949  005B58  6E06               	movwf	memcpy@n,c
 36950  005B5A  EC4B  F033         	call	_memcpy	;wreg free
 36951  005B5E  0012               	return		;funcret
 36952  005B60                     __end_of__fill_buffer_get_calibration1:
 36953                           	opt stack 0
 36954                           tosu	equ	0xFFF
 36955                           tosh	equ	0xFFE
 36956                           tosl	equ	0xFFD
 36957                           pclath	equ	0xFFA
 36958                           tblptru	equ	0xFF8
 36959                           tblptrh	equ	0xFF7
 36960                           tblptrl	equ	0xFF6
 36961                           tablat	equ	0xFF5
 36962                           prodh	equ	0xFF4
 36963                           prodl	equ	0xFF3
 36964                           intcon	equ	0xFF2
 36965                           intcon2	equ	0xFF1
 36966                           intcon3	equ	0xFF0
 36967                           indf0	equ	0xFEF
 36968                           postinc0	equ	0xFEE
 36969                           fsr0h	equ	0xFEA
 36970                           fsr0l	equ	0xFE9
 36971                           wreg	equ	0xFE8
 36972                           indf1	equ	0xFE7
 36973                           postdec1	equ	0xFE5
 36974                           plusw1	equ	0xFE3
 36975                           fsr1h	equ	0xFE2
 36976                           fsr1l	equ	0xFE1
 36977                           indf2	equ	0xFDF
 36978                           postinc2	equ	0xFDE
 36979                           postdec2	equ	0xFDD
 36980                           plusw2	equ	0xFDB
 36981                           fsr2h	equ	0xFDA
 36982                           fsr2l	equ	0xFD9
 36983                           status	equ	0xFD8
 36984                           
 36985 ;; *************** function _memcpy *****************
 36986 ;; Defined at:
 36987 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 36988 ;; Parameters:    Size  Location     Type
 36989 ;;  d1              2    0[COMRAM] PTR void 
 36990 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 36991 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 36992 ;;  s1              3    2[COMRAM] PTR const void 
 36993 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), calibrationParameters(84), 
 36994 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 36995 ;;  n               2    5[COMRAM] unsigned int 
 36996 ;; Auto vars:     Size  Location     Type
 36997 ;;  s               3    7[COMRAM] PTR const unsigned char 
 36998 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), calibrationParameters(84), 
 36999 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 37000 ;;  d               2   10[COMRAM] PTR unsigned char 
 37001 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 37002 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 37003 ;;  tmp             1   12[COMRAM] unsigned char 
 37004 ;; Return value:  Size  Location     Type
 37005 ;;                  2    0[COMRAM] PTR void 
 37006 ;; Registers used:
 37007 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37008 ;; Tracked objects:
 37009 ;;		On entry : 0/0
 37010 ;;		On exit  : 0/0
 37011 ;;		Unchanged: 0/0
 37012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37013 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37014 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37016 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37017 ;;Total ram usage:       13 bytes
 37018 ;; Hardware stack levels used:    1
 37019 ;; This function calls:
 37020 ;;		Nothing
 37021 ;; This function is called by:
 37022 ;;		_USBCtrlEPService
 37023 ;;		_MSDProcessCommandMediaPresent
 37024 ;;		__fill_buffer_get_calibration1
 37025 ;;		__fill_buffer_get_calibration2
 37026 ;;		__flash_set_page_size
 37027 ;;		_internalFlash_read
 37028 ;;		_fat_create_file
 37029 ;; This function uses a non-reentrant model
 37030 ;;
 37031                           
 37032                           	psect	text185
 37033  006696                     __ptext185:
 37034                           	opt stack 0
 37035  006696                     _memcpy:
 37036                           	opt stack 27
 37037                           
 37038                           ;incstack = 0
 37039  006696  C003  F008         	movff	memcpy@s1,memcpy@s
 37040  00669A  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 37041  00669E  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 37042  0066A2  C001  F00B         	movff	memcpy@d1,memcpy@d
 37043  0066A6  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 37044  0066AA  D01F               	goto	l10229
 37045  0066AC                     l10221:
 37046  0066AC  C008  FFF6         	movff	memcpy@s,tblptrl
 37047  0066B0  C009  FFF7         	movff	memcpy@s+1,tblptrh
 37048  0066B4  C00A  FFF8         	movff	memcpy@s+2,tblptru
 37049  0066B8  BAF8               	btfsc	tblptru,5,c
 37050  0066BA  D003               	bra	u7077
 37051  0066BC  0008               	tblrd		*
 37052  0066BE  50F5               	movf	tablat,w,c
 37053  0066C0  D005               	bra	u7070
 37054  0066C2                     u7077:
 37055  0066C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 37056  0066C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 37057  0066CA  50EF               	movf	indf0,w,c
 37058  0066CC                     u7070:
 37059  0066CC  6E0D               	movwf	memcpy@tmp,c
 37060  0066CE  0E01               	movlw	1
 37061  0066D0  2608               	addwf	memcpy@s,f,c
 37062  0066D2  0E00               	movlw	0
 37063  0066D4  2209               	addwfc	memcpy@s+1,f,c
 37064  0066D6  0E00               	movlw	0
 37065  0066D8  220A               	addwfc	memcpy@s+2,f,c
 37066  0066DA  C00B  FFD9         	movff	memcpy@d,fsr2l
 37067  0066DE  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 37068  0066E2  C00D  FFDF         	movff	memcpy@tmp,indf2
 37069  0066E6  4A0B               	infsnz	memcpy@d,f,c
 37070  0066E8  2A0C               	incf	memcpy@d+1,f,c
 37071  0066EA                     l10229:
 37072  0066EA  0606               	decf	memcpy@n,f,c
 37073  0066EC  A0D8               	btfss	status,0,c
 37074  0066EE  0607               	decf	memcpy@n+1,f,c
 37075  0066F0  2806               	incf	memcpy@n,w,c
 37076  0066F2  E1DC               	bnz	l10221
 37077  0066F4  2807               	incf	memcpy@n+1,w,c
 37078  0066F6  B4D8               	btfsc	status,2,c
 37079  0066F8  0012               	return	
 37080  0066FA  D7D8               	goto	l10221
 37081  0066FC                     __end_of_memcpy:
 37082                           	opt stack 0
 37083                           tosu	equ	0xFFF
 37084                           tosh	equ	0xFFE
 37085                           tosl	equ	0xFFD
 37086                           pclath	equ	0xFFA
 37087                           tblptru	equ	0xFF8
 37088                           tblptrh	equ	0xFF7
 37089                           tblptrl	equ	0xFF6
 37090                           tablat	equ	0xFF5
 37091                           prodh	equ	0xFF4
 37092                           prodl	equ	0xFF3
 37093                           intcon	equ	0xFF2
 37094                           intcon2	equ	0xFF1
 37095                           intcon3	equ	0xFF0
 37096                           indf0	equ	0xFEF
 37097                           postinc0	equ	0xFEE
 37098                           fsr0h	equ	0xFEA
 37099                           fsr0l	equ	0xFE9
 37100                           wreg	equ	0xFE8
 37101                           indf1	equ	0xFE7
 37102                           postdec1	equ	0xFE5
 37103                           plusw1	equ	0xFE3
 37104                           fsr1h	equ	0xFE2
 37105                           fsr1l	equ	0xFE1
 37106                           indf2	equ	0xFDF
 37107                           postinc2	equ	0xFDE
 37108                           postdec2	equ	0xFDD
 37109                           plusw2	equ	0xFDB
 37110                           fsr2h	equ	0xFDA
 37111                           fsr2l	equ	0xFD9
 37112                           status	equ	0xFD8
 37113                           
 37114 ;; *************** function _USBTransferOnePacket *****************
 37115 ;; Defined at:
 37116 ;;		line 995 in file "usb_device.c"
 37117 ;; Parameters:    Size  Location     Type
 37118 ;;  ep              1    wreg     unsigned char 
 37119 ;;  dir             1    0[COMRAM] unsigned char 
 37120 ;;  data            2    1[COMRAM] PTR unsigned char 
 37121 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 37122 ;;		 -> msd_cbw(31), NULL(0), 
 37123 ;;  len             1    3[COMRAM] unsigned char 
 37124 ;; Auto vars:     Size  Location     Type
 37125 ;;  ep              1    8[COMRAM] unsigned char 
 37126 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 37127 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37128 ;; Return value:  Size  Location     Type
 37129 ;;                  2    0[COMRAM] PTR void 
 37130 ;; Registers used:
 37131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37132 ;; Tracked objects:
 37133 ;;		On entry : 0/0
 37134 ;;		On exit  : 0/0
 37135 ;;		Unchanged: 0/0
 37136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37139 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37140 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37141 ;;Total ram usage:       11 bytes
 37142 ;; Hardware stack levels used:    1
 37143 ;; This function calls:
 37144 ;;		Nothing
 37145 ;; This function is called by:
 37146 ;;		_USBMSDInit
 37147 ;;		_USBCheckMSDRequest
 37148 ;;		_MSDTasks
 37149 ;;		_MSDProcessCommandMediaPresent
 37150 ;;		_MSDReadHandler
 37151 ;;		_MSDWriteHandler
 37152 ;;		_MSDTransferTerminated
 37153 ;;		_APP_DeviceCustomHIDInitialize
 37154 ;;		_APP_DeviceCustomHIDTasks
 37155 ;; This function uses a non-reentrant model
 37156 ;;
 37157                           
 37158                           	psect	text186
 37159  0045BA                     __ptext186:
 37160                           	opt stack 0
 37161  0045BA                     _USBTransferOnePacket:
 37162                           	opt stack 27
 37163                           
 37164                           ;incstack = 0
 37165                           ;USBTransferOnePacket@ep stored from wreg
 37166  0045BA  6E09               	movwf	USBTransferOnePacket@ep,c
 37167                           
 37168                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 37169                           ;usb_device.c: 1000: if(dir != 0)
 37170  0045BC  5001               	movf	USBTransferOnePacket@dir,w,c
 37171  0045BE  B4D8               	btfsc	status,2,c
 37172  0045C0  D007               	goto	l9579
 37173                           
 37174                           ;usb_device.c: 1001: {
 37175                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 37176  0045C2  5009               	movf	USBTransferOnePacket@ep,w,c
 37177  0045C4  0D02               	mullw	2
 37178  0045C6  0EEE               	movlw	low _pBDTEntryIn
 37179  0045C8  24F3               	addwf	prodl,w,c
 37180  0045CA  6ED9               	movwf	fsr2l,c
 37181  0045CC  0E00               	movlw	high _pBDTEntryIn
 37182  0045CE  D006               	goto	L41
 37183  0045D0                     l9579:
 37184                           
 37185                           ;usb_device.c: 1005: else
 37186                           ;usb_device.c: 1006: {
 37187                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 37188  0045D0  5009               	movf	USBTransferOnePacket@ep,w,c
 37189  0045D2  0D02               	mullw	2
 37190  0045D4  0E39               	movlw	low _pBDTEntryOut
 37191  0045D6  24F3               	addwf	prodl,w,c
 37192  0045D8  6ED9               	movwf	fsr2l,c
 37193  0045DA  0E01               	movlw	high _pBDTEntryOut
 37194  0045DC                     L41:
 37195  0045DC  20F4               	addwfc	prodh,w,c
 37196  0045DE  6EDA               	movwf	fsr2h,c
 37197  0045E0  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 37198  0045E4  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 37199                           
 37200                           ;usb_device.c: 1009: }
 37201                           ;usb_device.c: 1013: if(handle == 0)
 37202  0045E8  500A               	movf	USBTransferOnePacket@handle,w,c
 37203  0045EA  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 37204  0045EC  A4D8               	btfss	status,2,c
 37205  0045EE  D005               	goto	l9587
 37206                           
 37207                           ;usb_device.c: 1014: {
 37208                           ;usb_device.c: 1015: return 0;
 37209  0045F0  0E00               	movlw	0
 37210  0045F2  6E01               	movwf	?_USBTransferOnePacket,c
 37211  0045F4  0E00               	movlw	0
 37212  0045F6  6E02               	movwf	?_USBTransferOnePacket+1,c
 37213  0045F8  0012               	return	
 37214  0045FA                     l9587:
 37215                           
 37216                           ;usb_device.c: 1016: }
 37217                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 37218  0045FA  EE20 F002          	lfsr	2,2
 37219  0045FE  500A               	movf	USBTransferOnePacket@handle,w,c
 37220  004600  26D9               	addwf	fsr2l,f,c
 37221  004602  500B               	movf	USBTransferOnePacket@handle+1,w,c
 37222  004604  22DA               	addwfc	fsr2h,f,c
 37223  004606  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 37224  00460A  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 37225                           
 37226                           ;usb_device.c: 1030: handle->CNT = len;
 37227  00460E  EE20 F001          	lfsr	2,1
 37228  004612  500A               	movf	USBTransferOnePacket@handle,w,c
 37229  004614  26D9               	addwf	fsr2l,f,c
 37230  004616  500B               	movf	USBTransferOnePacket@handle+1,w,c
 37231  004618  22DA               	addwfc	fsr2h,f,c
 37232  00461A  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 37233                           
 37234                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 37235  00461E  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37236  004622  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37237  004626  0E40               	movlw	64
 37238  004628  16DF               	andwf	indf2,f,c
 37239                           
 37240                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 37241  00462A  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37242  00462E  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37243  004632  0E00               	movlw	0
 37244  004634  86DB               	bsf	plusw2,3,c
 37245                           
 37246                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 37247  004636  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37248  00463A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37249  00463E  0E00               	movlw	0
 37250  004640  8EDB               	bsf	plusw2,7,c
 37251                           
 37252                           ;usb_device.c: 1036: if(dir != 0)
 37253  004642  5001               	movf	USBTransferOnePacket@dir,w,c
 37254  004644  B4D8               	btfsc	status,2,c
 37255  004646  D018               	goto	l9599
 37256                           
 37257                           ;usb_device.c: 1037: {
 37258                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 37259  004648  5009               	movf	USBTransferOnePacket@ep,w,c
 37260  00464A  0D02               	mullw	2
 37261  00464C  0EEE               	movlw	low _pBDTEntryIn
 37262  00464E  24F3               	addwf	prodl,w,c
 37263  004650  6ED9               	movwf	fsr2l,c
 37264  004652  0E00               	movlw	high _pBDTEntryIn
 37265  004654  20F4               	addwfc	prodh,w,c
 37266  004656  6EDA               	movwf	fsr2h,c
 37267  004658  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 37268  00465C  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 37269  004660  0E04               	movlw	4
 37270  004662  1805               	xorwf	??_USBTransferOnePacket,w,c
 37271  004664  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 37272  004666  5006               	movf	??_USBTransferOnePacket+1,w,c
 37273  004668  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 37274  00466A  5009               	movf	USBTransferOnePacket@ep,w,c
 37275  00466C  0D02               	mullw	2
 37276  00466E  0EEE               	movlw	low _pBDTEntryIn
 37277  004670  24F3               	addwf	prodl,w,c
 37278  004672  6ED9               	movwf	fsr2l,c
 37279  004674  0E00               	movlw	high _pBDTEntryIn
 37280  004676  D017               	goto	L42
 37281  004678                     l9599:
 37282                           
 37283                           ;usb_device.c: 1041: else
 37284                           ;usb_device.c: 1042: {
 37285                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 37286  004678  5009               	movf	USBTransferOnePacket@ep,w,c
 37287  00467A  0D02               	mullw	2
 37288  00467C  0E39               	movlw	low _pBDTEntryOut
 37289  00467E  24F3               	addwf	prodl,w,c
 37290  004680  6ED9               	movwf	fsr2l,c
 37291  004682  0E01               	movlw	high _pBDTEntryOut
 37292  004684  20F4               	addwfc	prodh,w,c
 37293  004686  6EDA               	movwf	fsr2h,c
 37294  004688  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 37295  00468C  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 37296  004690  0E04               	movlw	4
 37297  004692  1805               	xorwf	??_USBTransferOnePacket,w,c
 37298  004694  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 37299  004696  5006               	movf	??_USBTransferOnePacket+1,w,c
 37300  004698  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 37301  00469A  5009               	movf	USBTransferOnePacket@ep,w,c
 37302  00469C  0D02               	mullw	2
 37303  00469E  0E39               	movlw	low _pBDTEntryOut
 37304  0046A0  24F3               	addwf	prodl,w,c
 37305  0046A2  6ED9               	movwf	fsr2l,c
 37306  0046A4  0E01               	movlw	high _pBDTEntryOut
 37307  0046A6                     L42:
 37308  0046A6  20F4               	addwfc	prodh,w,c
 37309  0046A8  6EDA               	movwf	fsr2h,c
 37310  0046AA  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 37311  0046AE  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 37312                           
 37313                           ;usb_device.c: 1045: }
 37314                           ;usb_device.c: 1046: return (void*)handle;
 37315  0046B2  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 37316  0046B6  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 37317  0046BA  0012               	return	
 37318  0046BC                     __end_of_USBTransferOnePacket:
 37319                           	opt stack 0
 37320                           tosu	equ	0xFFF
 37321                           tosh	equ	0xFFE
 37322                           tosl	equ	0xFFD
 37323                           pclath	equ	0xFFA
 37324                           tblptru	equ	0xFF8
 37325                           tblptrh	equ	0xFF7
 37326                           tblptrl	equ	0xFF6
 37327                           tablat	equ	0xFF5
 37328                           prodh	equ	0xFF4
 37329                           prodl	equ	0xFF3
 37330                           intcon	equ	0xFF2
 37331                           intcon2	equ	0xFF1
 37332                           intcon3	equ	0xFF0
 37333                           indf0	equ	0xFEF
 37334                           postinc0	equ	0xFEE
 37335                           fsr0h	equ	0xFEA
 37336                           fsr0l	equ	0xFE9
 37337                           wreg	equ	0xFE8
 37338                           indf1	equ	0xFE7
 37339                           postdec1	equ	0xFE5
 37340                           plusw1	equ	0xFE3
 37341                           fsr1h	equ	0xFE2
 37342                           fsr1l	equ	0xFE1
 37343                           indf2	equ	0xFDF
 37344                           postinc2	equ	0xFDE
 37345                           postdec2	equ	0xFDD
 37346                           plusw2	equ	0xFDB
 37347                           fsr2h	equ	0xFDA
 37348                           fsr2l	equ	0xFD9
 37349                           status	equ	0xFD8
 37350                           tosu	equ	0xFFF
 37351                           tosh	equ	0xFFE
 37352                           tosl	equ	0xFFD
 37353                           pclath	equ	0xFFA
 37354                           tblptru	equ	0xFF8
 37355                           tblptrh	equ	0xFF7
 37356                           tblptrl	equ	0xFF6
 37357                           tablat	equ	0xFF5
 37358                           prodh	equ	0xFF4
 37359                           prodl	equ	0xFF3
 37360                           intcon	equ	0xFF2
 37361                           intcon2	equ	0xFF1
 37362                           intcon3	equ	0xFF0
 37363                           indf0	equ	0xFEF
 37364                           postinc0	equ	0xFEE
 37365                           fsr0h	equ	0xFEA
 37366                           fsr0l	equ	0xFE9
 37367                           wreg	equ	0xFE8
 37368                           indf1	equ	0xFE7
 37369                           postdec1	equ	0xFE5
 37370                           plusw1	equ	0xFE3
 37371                           fsr1h	equ	0xFE2
 37372                           fsr1l	equ	0xFE1
 37373                           indf2	equ	0xFDF
 37374                           postinc2	equ	0xFDE
 37375                           postdec2	equ	0xFDD
 37376                           plusw2	equ	0xFDB
 37377                           fsr2h	equ	0xFDA
 37378                           fsr2l	equ	0xFD9
 37379                           status	equ	0xFD8
 37380                           
 37381                           	psect	text187
 37382  000000                     __ptext187:
 37383                           	opt stack 0
 37384                           tosu	equ	0xFFF
 37385                           tosh	equ	0xFFE
 37386                           tosl	equ	0xFFD
 37387                           pclath	equ	0xFFA
 37388                           tblptru	equ	0xFF8
 37389                           tblptrh	equ	0xFF7
 37390                           tblptrl	equ	0xFF6
 37391                           tablat	equ	0xFF5
 37392                           prodh	equ	0xFF4
 37393                           prodl	equ	0xFF3
 37394                           intcon	equ	0xFF2
 37395                           intcon2	equ	0xFF1
 37396                           intcon3	equ	0xFF0
 37397                           indf0	equ	0xFEF
 37398                           postinc0	equ	0xFEE
 37399                           fsr0h	equ	0xFEA
 37400                           fsr0l	equ	0xFE9
 37401                           wreg	equ	0xFE8
 37402                           indf1	equ	0xFE7
 37403                           postdec1	equ	0xFE5
 37404                           plusw1	equ	0xFE3
 37405                           fsr1h	equ	0xFE2
 37406                           fsr1l	equ	0xFE1
 37407                           indf2	equ	0xFDF
 37408                           postinc2	equ	0xFDE
 37409                           postdec2	equ	0xFDD
 37410                           plusw2	equ	0xFDB
 37411                           fsr2h	equ	0xFDA
 37412                           fsr2l	equ	0xFD9
 37413                           status	equ	0xFD8
 37414                           
 37415                           	psect	rparam
 37416  0000                     tosu	equ	0xFFF
 37417                           tosh	equ	0xFFE
 37418                           tosl	equ	0xFFD
 37419                           pclath	equ	0xFFA
 37420                           tblptru	equ	0xFF8
 37421                           tblptrh	equ	0xFF7
 37422                           tblptrl	equ	0xFF6
 37423                           tablat	equ	0xFF5
 37424                           prodh	equ	0xFF4
 37425                           prodl	equ	0xFF3
 37426                           intcon	equ	0xFF2
 37427                           intcon2	equ	0xFF1
 37428                           intcon3	equ	0xFF0
 37429                           indf0	equ	0xFEF
 37430                           postinc0	equ	0xFEE
 37431                           fsr0h	equ	0xFEA
 37432                           fsr0l	equ	0xFE9
 37433                           wreg	equ	0xFE8
 37434                           indf1	equ	0xFE7
 37435                           postdec1	equ	0xFE5
 37436                           plusw1	equ	0xFE3
 37437                           fsr1h	equ	0xFE2
 37438                           fsr1l	equ	0xFE1
 37439                           indf2	equ	0xFDF
 37440                           postinc2	equ	0xFDE
 37441                           postdec2	equ	0xFDD
 37442                           plusw2	equ	0xFDB
 37443                           fsr2h	equ	0xFDA
 37444                           fsr2l	equ	0xFD9
 37445                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    738
    Data        169
    BSS         2114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     88      95
    BANK0           160    130     160
    BANK1           256      0     248
    BANK2           256      0     244
    BANK3           256      0     218
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1970$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1970$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), calibrationParameters(BANK2[84]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), calibrationParameters(BANK2[84]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK3[50]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK3[50]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> bootloader_extension(CODE[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> bootloader_filename(CODE[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(COMRAM[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> file_buffer(BANK3[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_append_to_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> file_buffer(BANK3[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_append_to_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK2[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK2[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(COMRAM[6]), i2c_eeprom_read_calibration@buffer(COMRAM[4]), calibrationParameters(BANK2[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(COMRAM[6]), _write_calibration@buffer(COMRAM[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(COMRAM[6]), i2c_eeprom_read_calibration@buffer(COMRAM[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK2[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(COMRAM[1]), i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(COMRAM[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2404	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2370	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2369	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2317	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2316	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1970$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1970$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1970$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1970$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1970$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1970$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1970$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1970$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1970$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1970$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_i2c_eeprom_read
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    _fat_read_from_file->__read_fat
    _fat_read_from_file->__read_root
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __bootloader_find_file->_fat_find_file
    _fat_get_file_size->_flash_partial_read
    _fat_find_file->_flash_partial_read
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_rtcc_set_day
    __parse_command_long->_rtcc_set_hours
    __parse_command_long->_rtcc_set_minutes
    __parse_command_long->_rtcc_set_month
    __parse_command_long->_rtcc_set_seconds
    __parse_command_long->_rtcc_set_year
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _main in BANK0

    _main->_system_init
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  544442
                                             86 COMRAM     2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                     _bootloader_run
                    _display_prepare
                     _display_update
                   _i2c_eeprom_tasks
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   10158
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2516
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2540
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2540
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2562
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   42650
                                              0 BANK0    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0    4281
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     6     6      0    4281
                                             25 COMRAM     6     6      0
                    _i2c_eeprom_read
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    5717
                                             25 COMRAM     9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    3986
                                             17 COMRAM     8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1278
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    7662
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    7662
                                             19 COMRAM     5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24941
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8549
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16392
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    3600
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    3577
                                             37 COMRAM    24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3900
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3032
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    2562
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   66241
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    7039
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    7175
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   15173
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   22140
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14765
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    7175
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    7109
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6813
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       0     0      0   88457
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   36569
                                             69 COMRAM    17    17      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   35628
                                             69 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    4861
                                             20 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   7     0      7    4503
                                             13 COMRAM     7     0      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   24966
                                             47 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
                         __read_root
               __sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_root                                           8     6      2    7771
                                             39 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    7883
                                             39 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   16260
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7529
                                             39 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    8731
                                             39 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              8     2      6     668
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  189805
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   26060
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   26060
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0  110213
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0  106103
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   79951
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   27314
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   26531
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   26060
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    4963
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    6763
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    5904
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    5171
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    5648
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  119978
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  119978
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  113212
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   57357
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   55599
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24251
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15061
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14716
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   17248
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    8250
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    7969
                                             39 COMRAM     4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                  20    12      8    7391
                                             19 COMRAM    20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   18219
                                             44 COMRAM    11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    3442
                                             43 COMRAM     1     1      0
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    3420
                                             37 COMRAM     6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_write                                    27    22      5    3276
                                             10 COMRAM    27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2448
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     375
                                              1 COMRAM     2     1      1
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     691
                                              3 COMRAM     8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              0     0      0       0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     382
                                              4 COMRAM     4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     382
                                              4 COMRAM     4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     222
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    3881
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    3881
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    3881
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    4915
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __read_root
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __sector_from_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __read_root
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __sector_from_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _rtcc_init
       _rtcc_read_eeprom
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DA      11       85.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F4       9       95.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     58      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C5      31        0.0%
DATA                 0      0     9C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 08 23:49:58 2018

                          __end_of_fat_read_from_file 29AA  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
              __end_of_i2c_display_send_init_sequence 73B4  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7388  
                                 __system_timer0_init 7620  
                             rtcc_set_minutes@minutes 0001  
                                                  _os 00E2  
                                       _USBDeviceInit 37CC  
                                  _USBCheckHIDRequest 47BC  
                __bootloader_verify_file@return_value 004F  
                                        __CFG_CP0$OFF 000000  
                                 __end_of_system_init 4B96  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l140 3832  
                                                 l151 34E8  
                                                 l152 34E6  
                                                 l330 4FDE  
                                                 l219 4428  
                                                 l157 3526  
                         __end_of_USBStdGetDscHandler 3BCA  
                                                 l166 35C6  
                                                 l167 364C  
                                                 l344 49C4  
                                                 l168 35D8  
                                                 l353 4A28  
                                                 l282 5570  
                                                 l621 08C2  
                                                 l285 5600  
                                                 l286 5582  
                                                 l359 1FE4  
                                                 l287 5588  
                                                 l295 6F40  
                                                 l378 21C6  
                                                 l644 0B84  
                                                 l628 0A34  
                                                 l741 3E52  
                                                 l575 2428  
                                                 l666 2BAA  
                                                 l692 1DA6  
                                                 _BDT 000D00  
                                                 l685 1CC6  
                                                 l767 6A7C  
                                                 l696 1E3C  
                       __size_of__sector_from_cluster 000E  
                                                 l966 13B4  
                                                 _LBA 015B  
                                                 _LUN 01B8  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 759A  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DA8  
                                         _start_line2 8D97  
                                         _start_line3 8D16  
                                         _start_line4 8E62  
                                          _USBSuspend 728E  
                                  _internalFlash_read 7226  
                              __end_of_display_update 6562  
                                USBStdSetCfgHandler@i 0018  
                              i2c_eeprom_read@address 0012  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 34C2  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 005F  
                                    _rtcc_read_eeprom 708C  
                            __size_of__display_verify 012C  
                             rtcc_set_seconds@seconds 0001  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 002A  
                                       _hex_file_size 0143  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                         __flash_write_to_buffer@data 0016  
                                                l1106 7810  
                                                l1302 787A  
                                                l1222 4B6E  
                                                l2122 6BEA  
                                                l1501 48DE  
                                                l1431 6BA0  
                                                l2055 5DF4  
                                                l2064 5C44  
                                                l2049 691C  
                                                l1290 78D2  
                                                l2058 5E28  
                                                l1275 78DA  
                                                l2067 5C80  
                                                l1284 7882  
                                                l2087 6AA8  
                                                l3215 6B70  
                                                l3136 59F8  
                                                l1296 788E  
                                                l3225 7002  
                                                l3162 60B4  
                                                l3172 661E  
                          USBConfigureEndpoint@handle 0007  
                                                l1903 77AE  
                                                l1921 77EA  
                                                l2642 4EF4  
                                                l1683 5208  
                                                l1684 520E  
                                                l1685 5240  
                                                l2681 066C  
                                                l1939 77D6  
                                                l2772 6128  
                                                l1957 77C2  
                                                l1885 7786  
                                                l1975 779A  
                                                l2776 74C2  
                                                l2785 7258  
                                                l9501 6A80  
                                                l9517 6AC2  
                                                l9701 6892  
                                                l9615 4512  
                                                l9641 62B6  
                                                l9555 75FC  
                                                l9811 3EAA  
                                                l9803 3E84  
                                                l9651 62D4  
                                                l9709 632E  
                                                l9813 3EB6  
                                                l9805 3E8C  
                                                l9901 4890  
                                                l9831 3F0A  
                                                l9807 3E98  
                                                l9647 62CA  
                                                l9743 7156  
                                                l9911 4C90  
                                                l9817 3EC8  
                                                l9657 630C  
                                                l9681 6BE0  
                                                l9569 5BC2  
                                                l9587 45FA  
                                                l9579 45D0  
                                                l9835 3F16  
                                                l9691 6874  
                                                l9675 6BCC  
                                                l9747 7164  
                                                l9931 4CE8  
                                                l9669 632A  
                                                l9933 4D06  
                                                l9599 4678  
                                                l9863 47FA  
                                                l9935 4D0E  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                l9697 6888  
                                                l9785 4166  
                                                l9777 40DC  
                                                l9865 4802  
                                                l9857 47DC  
                                                l9873 481A  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                l9795 3E38  
                                                l9955 46CC  
                                                l9875 482C  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                l9981 4728  
                                                l9965 46E2  
                                                l9789 416E  
                                                l9885 485A  
                                                l9949 4D4A  
                      __fill_buffer_get_display1@cntr 0006  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8D02  
                                                l9975 471A  
                                                l9895 4884  
                                                l9879 483C  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D97  
                                                l9993 4766  
                                                l9985 4748  
                                                l9889 4866  
                                                l9995 476A  
                                      _bootloader_run 6EB8  
                      __fill_buffer_get_display1@line 0007  
                                 ?_internalFlash_read 000E  
                      __fill_buffer_get_display2@cntr 0006  
                      __fill_buffer_get_display2@line 0007  
                                       _i2c_frequency 0186  
                                                u7030 4DE6  
                                                u7050 4E26  
                                                u7205 1CF0  
                                                u7037 4DDC  
                                                u7070 66CC  
                                                u7400 692E  
                                                u7057 4E1C  
                                                u7410 693A  
                                                u7330 1F10  
                                                u7420 6946  
                                                u7148 2C5A  
                                                u7340 1F12  
                                                u7228 1D24  
                                                u8028 0A4C  
                                                u6428 40FE  
                                                u7077 66C2  
                                                u7149 2C6E  
                                                u6285 62E0  
                                                u7229 1D38  
                                                u8029 0A60  
                                                u6429 4112  
                                                u7430 6952  
                                                u7095 2BD4  
                                                u6375 689E  
                               ??_USBCtrlTrfTxService 0001  
                                                u7440 695E  
                                                u7408 6930  
                                                u6464 4156  
                                                u6448 4124  
                                                u6465 4150  
                                                u6449 4138  
                                                u7450 6968  
                                                u7418 693C  
                                                u8090 0B70  
                                                u6395 6346  
                                                u7428 6948  
                                                u6900 733A  
                                                u7438 6954  
                                                u6910 7308  
                                                u7358 1F18  
                                                u8415 6150  
                                                u7359 1F2C  
                                                _UCFG 000F39  
                                                u7456 696A  
                                                u7448 6960  
                                                u7288 1E06  
                                                u9400 00A2  
                                                u8440 5350  
                                                u7289 1E1A  
                                                u8450 5376  
                                                u8435 6C7A  
                                                u7660 3B08  
                                                u9500 4ECA  
                                                u8460 539A  
                                                _UEP0 000F26  
                                                _UEP1 000F27  
                                                u7670 3B3C  
                                                u8470 53BE  
                                                u9095 63C8  
                                                u8615 7446  
                                                u8551 3374  
                                                u7690 3B96  
                                                u7667 3AFE  
                                                _UEIE 000F37  
                                                u7677 3B32  
                                                u8485 6844  
                                                u8814 3F92  
                                                u8910 1124  
                                                u8815 3F8C  
                                                u8824 3FC6  
                                                u9480 4E6E  
                                                u8920 11D0  
                                                u8825 3FC0  
                                                u7697 3B8C  
                                                u8930 127C  
                                                u9555 767E  
                                                u8595 6496  
                                                u9565 7268  
                                                u9575 60D4  
                                                u8864 401C  
                                                u8848 3FEA  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8865 4016  
                                                u8849 3FFE  
                                                u7978 0926  
                                                u7979 093A  
                                                u7988 0956  
                                                u8788 3F4A  
                                                u7989 096A  
                                                u8789 3F5E  
                               _i2c_digipot_reset_off 75BC  
                  __fill_buffer_get_display1@position 0008  
                             ??_fat_get_format_status 002C  
                                      _ResetSenseData 5EB6  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 017E  
                                                _main 525E  
                                                _itoa 6F88  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 525E  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5978  
                  __fill_buffer_get_display2@position 0008  
                          ??_ExternalFlash_SectorRead 0034  
                                     ??_rtcc_get_year 0001  
                             __bootloader_verify_file 16D4  
                           _ExternalFlash_MediaDetect 78F8  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 785C  
                               _display_get_character 7462  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D74  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4AA6  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 004A  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0174  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 37CC  
                                      _hex_file_entry 0198  
                              _bootloader_get_entries 78A8  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0015  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7356  
                     __flash_spi_tx_tx@command_length 0003  
                            _system_ui_inactive_count 0172  
                                       __CFG_PLLDIV$2 000000  
                                     ??_rtcc_set_year 0001  
                       i2c_display_write_fixed@length 0008  
                                               l10003 477E  
                                               l10005 4784  
                                               l10023 47AA  
                                               l10015 479A  
                                               l10111 6B4A  
                                               l10025 47AE  
                                               l10017 479E  
                                               l10009 4788  
                                               l10027 47B2  
                                               l10051 6AF4  
                                               l10107 6B3E  
                                               l10131 6FE4  
                                               l10221 66AC  
                                               l11101 6632  
                                               l10053 6B00  
                                               l10045 6AD8  
                                               l10141 73EA  
                                               l10109 6B46  
                                               l10303 2D78  
                                               l11111 6652  
                                               l10207 4DF6  
                                               l10039 6A46  
                                               l10151 5E3A  
                                               l10119 6B66  
                                               l10135 6FF8  
                                               l10127 6FD8  
                                               l10081 733E  
                                               l10305 2D9C  
                                               l10209 4DFE  
                                               l10217 4E36  
                                               l11033 41CC  
                                               l10049 6AE2  
                                               l10057 6B12  
                                               l10161 5E56  
                                               l10153 5E42  
                                               l10145 73FA  
                                               l10129 6FE0  
                                               l10411 6924  
                                               l10403 5870  
                                               l11115 665E  
                                               l11123 6672  
                                               l11027 41A8  
                                               l10229 66EA  
                                               l10261 2C82  
                                               l10253 2C36  
                                               l11117 6664  
                                               l11045 422A  
                                               l10157 5E4C  
                                               l10149 5E32  
                                               l10165 5E64  
                                               l11215 6170  
                                               l10407 5888  
                                               l10247 2C1C  
                                               l10239 2C02  
                                               l10095 730C  
                                               l10327 1D70  
                                               l11119 666A  
                                               l11071 49DA  
                                               l10511 5A70  
                                               l11311 6022  
                                               l11303 5FC2  
                                               l10273 2CDC  
                                               l10353 1E40  
                                               l10345 1DD4  
                                               l10329 1D76  
                                               l10185 4D80  
                                               l11049 4244  
                                               l11081 49FC  
                                               l11313 602A  
                                               l12113 0F8E  
                                               l13003 6D18  
                                               l11219 61A0  
                                               l10267 2CAA  
                                               l10603 55A8  
                                               l10531 4BD8  
                                               l11083 4A02  
                                               l11067 49CE  
                                               l10515 5A8C  
                                               l11307 5FF2  
                                               l11411 24EA  
                                               l11403 5112  
                                               l12043 0D04  
                                               l13005 6D1C  
                                               l13101 3D08  
                                               l10285 2D14  
                                               l10277 2CF4  
                                               l10365 1ED0  
                                               l10349 1DFA  
                                               l10189 4D8E  
                                               l10701 2234  
                                               l10613 55E8  
                                               l10541 4C0C  
                                               l11093 4A44  
                                               l11069 49D4  
                                               l11341 50D6  
                                               l11333 50CE  
                                               l11325 50C6  
                                               l12029 0C82  
                                               l13023 6CC4  
                                               l13111 3DAE  
                                               l13103 3D34  
                                               l10295 2D60  
                                               l10279 2CFA  
                                               l10383 1F76  
                                               l10375 1F40  
                                               l10359 1E5A  
                                               l10391 1F8E  
                                               l10711 08A4  
                                               l10199 4DBE  
                                               l10631 1FDE  
                                               l10535 4BE0  
                                               l11079 49F6  
                                               l12311 543C  
                                               l10439 5980  
                                               l11247 5364  
                                               l11511 25B0  
                                               l11503 25A8  
                                               l11431 2518  
                                               l11423 24F6  
                                               l11415 24EE  
                                               l12071 0E08  
                                               l13017 6D4A  
                                               l13009 6D24  
                                               l13041 6CFE  
                                               l13033 6CD8  
                                               l13121 3DD6  
                                               l13113 3DB6  
                                               l10377 1F5C  
                                               l10393 1FB2  
                                               l10481 5042  
                                               l11097 4A62  
                                               l10449 59BA  
                                               l11257 538A  
                                               l12161 11BC  
                                               l12137 1066  
                                               l11361 50EA  
                                               l11353 50E2  
                                               l11345 50DA  
                                               l11337 50D2  
                                               l11329 50CA  
                                               l12057 0D86  
                                               l12129 1010  
                                               l13027 6CCC  
                                               l13115 3DBE  
                                               l13107 3D86  
                                               l10299 2D70  
                                               l10387 1F86  
                                               l10811 0B26  
                                               l10715 08B4  
                                               l10707 0894  
                                               l10651 20A6  
                                               l14011 362C  
                                               l12323 5490  
                                               l11267 53AE  
                                               l11603 260C  
                                               l11531 25C4  
                                               l11523 25BC  
                                               l11515 25B4  
                                               l11507 25AC  
                                               l11451 2568  
                                               l11443 2548  
                                               l11435 2528  
                                               l11427 2508  
                                               l11419 24F2  
                                               l12411 5940  
                                               l12403 591E  
                                               l13211 433E  
                              ?_i2c_digipot_backlight 0001  
                                               l13029 6CD0  
                                               l13117 3DC6  
                                               l13109 3DA6  
                                               l13125 3DDE  
                                               l10805 0B0A  
                                               l10645 205A  
                                               l10565 3A94  
                                               l10557 4C58  
                                               l14013 3648  
                                               l14005 3606  
                                               l12333 54A2  
                                               l11277 53D2  
                                               l12173 1268  
                                               l12149 1110  
                                               l11621 697E  
                                               l11381 50FE  
                                               l11373 50F6  
                                               l11365 50EE  
                                               l11357 50E6  
                                               l11349 50DE  
                                               l11701 33EE  
                                               l12421 596E  
                                               l12085 0E8A  
                                               l13221 4366  
                                               l13213 4346  
                                               l13119 3DCE  
                                               l13071 71D0  
                                               l10831 0BBC  
                                               l10815 0B3E  
                                               l10591 3BB2  
                                               l13303 69FE  
                                               l11551 25D8  
                                               l11543 25D0  
                                               l11535 25C8  
                                               l11527 25C0  
                                               l11519 25B8  
                                               l11471 2588  
                                               l11463 2580  
                                               l11455 2578  
                                               l11447 2558  
                                               l11439 2538  
                                               l12511 2B16  
                                               l12431 29B2  
                                               l12407 5924  
                                               l10903 5D38  
                                               l13223 436E  
                                               l13215 434E  
                                               l13081 67CC  
                                               l13065 71BE  
                                               l14201 1508  
                                               l10833 0BC2  
                                               l10841 0BEE  
                                               l10753 09D4  
                                               l10729 091A  
                                               l10673 2154  
                                               l10657 20CC  
                                               l10585 3BA2  
                                               l10577 3B42  
                                               l10569 3AAC  
                                               l12329 549C  
                                               l12361 27DA  
                                               l12185 1314  
                                               l13401 3964  
                                               l13321 5CAE  
                                               l11641 6992  
                                               l11633 698A  
                                               l11625 6982  
                                               l11609 2610  
                                               l11393 510A  
                                               l11385 5102  
                                               l11377 50FA  
                                               l11369 50F2  
                                               l11721 3402  
                                               l11713 33FA  
                                               l11705 33F2  
                                               l12521 2B34  
                                               l12441 29DA  
                                               l12425 5974  
                                               l12265 61FA  
                                               l13217 4356  
                                               l13209 4324  
                                               l10931 7740  
                                               l13083 67D4  
                                               l13067 71C4  
                                               l13075 71D6  
                                               l10843 0BF6  
                                               l10827 0B9A  
                                               l10819 0B58  
                                               l10763 09FC  
                                               l10683 21A0  
                                               l10667 211E  
                                               l10587 3BAA  
                                               l10579 3B4A  
                                               l12291 53F2  
                                               l12611 0426  
                                               l12603 03C0  
                                               l11651 699A  
                                               l11571 25EC  
                                               l11563 25E4  
                                               l11555 25DC  
                                               l11547 25D4  
                                               l11539 25CC  
                                               l11491 259C  
                                               l11483 2594  
                                               l11475 258C  
                                               l11467 2584  
                                               l11459 257C  
                                               l12523 2B3C  
                                               l12507 2AFA  
                                               l12259 61C4  
                                               l12099 0F0C  
                                               l13219 435E  
                                               l13227 4376  
                                               l13085 67DC  
                                               l13093 67F4  
                                               l10861 7418  
                                               l13069 71CA  
                                               l14221 15A6  
                                               l14205 151C  
                                               l14213 1554  
                                               l10837 0BD8  
                                               l10773 0A2C  
                                               l10757 09E2  
                                               l10853 0C36  
                                               l11901 670C  
                                               l10693 21E2  
                                               l10685 21AC  
                                               l10669 213A  
                                               l12381 2934  
                                               l12373 2882  
                                               l12357 27B4  
                                               l10925 6FAC  
                                               l13501 3684  
                                               l13421 3A32  
                                               l13413 39DE  
                                               l13405 398A  
                                               l13309 6A1A  
                                               l13333 5CDA  
                                               l13325 5CB6  
                                               l11645 6996  
                                               l11637 698E  
                                               l11629 6986  
                                               l11397 510E  
                                               l11389 5106  
                                               l11741 3416  
                                               l11733 340E  
                                               l11725 3406  
                                               l11717 33FE  
                                               l11709 33F6  
                                               l12533 2B62  
                                               l12445 29F6  
                                               l12269 6226  
                                               l10909 5D54  
                                               l13229 43A2  
                                               l10943 7762  
                                               l10935 774C  
                                               l13087 67E4  
                                               l13079 67C4  
                                               l14231 1678  
                                               l14215 1588  
                                               l10839 0BEC  
                                               l10791 0AA2  
                                               l10767 0A04  
                                               l12367 2856  
                                               l12703 60FA  
                                               l10951 73C4  
                                               l12623 048A  
                                               l12551 003E  
                                               l11591 2600  
                                               l11583 25F8  
                                               l11575 25F0  
                                               l11567 25E8  
                                               l11559 25E0  
                                               l11495 25A0  
                                               l11487 2598  
                                               l11479 2590  
                                               l11671 336A  
                                               l12535 2B6A  
                                               l12455 2A1E  
                                               l13089 67EC  
                                               l10881 6E46  
                                               l10857 7410  
                                               l10865 741E  
                                               l14225 15DE  
                                               l14217 158C  
                                               l14233 16AE  
                                               l14161 1418  
                                               l14153 13E8  
                                               l10849 0C2E  
                                               l12297 5406  
                                               l12641 4EF6  
                                               l12713 610E  
                                               l12617 0458  
                                               l13521 3756  
                                               l13505 36AA  
                                               l11841 6072  
                                               l13441 2E2A  
                                               l13433 2DD6  
                                               l13601 2FB4  
                                               l13425 3A60  
                                               l13417 3A0C  
                                               l13409 39B8  
                                               l13345 7202  
                                               l11761 342A  
                                               l11753 3422  
                                               l11745 341A  
                                               l11737 3412  
                                               l11729 340A  
                                               l11665 335C  
                                               l12545 2B92  
                                               l12473 2A7E  
                                               l12393 58F0  
                                               l13193 429E  
                                               l13361 5F5E  
                                               l14313 4908  
                                               l10939 7756  
                                               l10859 7414  
                                               l10867 7432  
                                               l14163 1434  
                                               l10795 0AD6  
                                               l10779 0A6E  
                                               l11923 4F5A  
                                               l10699 2228  
                                               l12811 71AC  
                                               l12635 4E9E  
                                               l12387 298C  
                                               l12707 6102  
                                               l10963 73DC  
                                               l10955 73CE  
                                               l11851 60A6  
                                               l11843 6076  
                                               l11595 2604  
                                               l11587 25FC  
                                               l11579 25F4  
                                               l11499 25A4  
                                               l11771 3432  
                                               l12483 2A9C  
                                               l12459 2A3A  
                                               l13371 5F90  
                                               l14323 4934  
                                               l14307 48F2  
                                               l14229 1672  
                                               l14181 14A8  
                                               l14173 1478  
                                               l14157 1404  
                                               l14149 13D4  
                                               l11925 4F5E  
                                               l11909 6758  
                                               l12813 71AE  
                                               l12629 4E48  
                                               l12653 4F0C  
                                               l12709 6106  
                                               l12565 0188  
                                               l13525 377C  
                                               l13517 371E  
                                               l13509 36D8  
                                               l13381 6DA8  
                                               l11861 65E8  
                                               l13541 1A28  
                                               l13533 19D4  
                                               l13445 2E50  
                                               l13437 2DFC  
                                               l13429 2DA8  
                                               l13613 302E  
                                               l13605 2FDA  
                                               l11765 342E  
                                               l11757 3426  
                                               l11749 341E  
                                               l11693 33E6  
                                               l11685 33DE  
                                               l11773 34BE  
                                               l12485 2AA4  
                                               l12469 2A62  
                                               l13189 4296  
                                               l14261 706E  
                                               l13365 5F7E  
                                               l13357 5F3E  
                                               l14341 497A  
                                               l14333 4954  
                                               l10887 6E62  
                                               l14191 14DC  
                                               l14167 1448  
                                               l11943 4FC4  
                                               l12647 4F00  
                                               l12583 0310  
                                               l12559 00B4  
                                               l14351 6EBA  
                                               l13391 6DDC  
                                               l13375 6D9C  
                                               l11839 6066  
                                               l11863 65EC  
                                               l13463 2F30  
                                               l13455 2ED2  
                                               l13471 3BD0  
                                               l11599 2608  
                                               l11679 33A2  
                                               l12495 2ACA  
                                               l14185 14C4  
                                               l14177 1494  
                                               l14169 1464  
                                               l12921 238E  
                                               l11937 4FA4  
                                               l12761 383E  
                                               l12745 380E  
                                               l12569 0202  
                                               l14353 6EC0  
                                               l14361 6ED2  
                                               l13529 37AA  
                                               l13385 6DB0  
                                               l13561 1B1C  
                                               l13553 1AAA  
                                               l13545 1A56  
                                               l13537 1A02  
                                               l13449 2E7E  
                                               l13633 3110  
                                               l13617 305C  
                                               l13609 3008  
                                               l14281 6422  
                                               l11697 33EA  
                                               l11689 33E2  
                                               l12497 2AD2  
                                               l14601 528E  
                                               l14187 14C8  
                                               l11955 3F7C  
                                               l12931 23B8  
                                               l15403 5E7C  
                                               l10979 43D2  
                                               l12595 039C  
                                               l12587 033E  
                                               l13811 053C  
                                               l14355 6EC6  
                                               l13379 6DA4  
                                               l13651 31DE  
                                               l13643 318A  
                                               l11867 6610  
                                               l11859 65DC  
                                               l13571 1B9A  
                                               l13555 1ACC  
                                               l13467 2F5E  
                                               l13459 2F0A  
                                               l13491 3CA6  
                                               l13483 3C52  
                                               l13475 3BFE  
                                               l14371 51AC  
                                               l14291 644A  
                                               l14283 642A  
                                               l11787 74B0  
                                               l14275 7088  
                                               l14267 707A  
                                               l14347 498A  
                                               l14611 52AC  
                                               l14603 5294  
                                               l14197 14EA  
                                               l12941 23FC  
                                               l12917 2384  
                                               l12933 23CE  
                                               l11949 4FE8  
                                               l15405 5EB0  
                                               l12773 387C  
                                               l12749 3816  
                                               l13733 5760  
                                               l13901 087A  
                                               l13813 059E  
                                               l13741 1700  
                                               l14357 6ECC  
                                               l13573 1BBC  
                                               l13565 1B4A  
                                               l13549 1A7C  
                                               l13629 30E2  
                                               l13397 3936  
                                               l14373 51B2  
                                               l14365 519A  
                                               l14381 51C4  
                                               l14285 6432  
                                               l14269 707C  
                                               l14613 52B2  
                                               l14605 529A  
                                               l11975 404E  
                                               l11959 3FB0  
                                               l12927 23AC  
                                               l10999 4458  
                                               l12783 38E0  
                                               l13807 04B8  
                                               l13751 17EC  
                                               l13671 32B8  
                                               l13655 3204  
                                               l13647 31B0  
                                               l13639 315C  
                                               l13591 1C7E  
                                               l13567 1B6C  
                                               l13559 1AFA  
                                               l13583 1C28  
                                               l13487 3C78  
                                               l13479 3C24  
                                               l14383 5202  
                                               l14375 51B8  
                                               l14367 51A0  
                                               l14287 643A  
                                               l14279 641A  
                                               l14295 6452  
                                               l14607 52A0  
                                               l14623 52D6  
                                               l11977 4054  
                                               l12961 2454  
                                               l12937 23EA  
                                               l12881 227E  
                                               l12777 3884  
                                               l12849 6F3C  
                                               l13825 0602  
                                               l13497 3656  
                                               l13577 1BEA  
                                               l13585 1C4A  
                                               l14377 51BE  
                                               l14369 51A6  
                                               l14385 5216  
                                               l14289 6442  
                                               l14617 52C6  
                                               l14609 52A6  
                                               l14625 531A  
                                               l11979 4058  
                                               l12971 24B2  
                                               l12883 2282  
                                               l12867 5814  
                                               l13827 0624  
                                               l13675 32E6  
                                               l13659 3232  
                                               l13587 1C50  
                                               l14299 48BC  
                                               l11997 6B82  
                                               l12949 2430  
                                               l12893 22B2  
                                               l12877 2264  
                                               l12869 581A  
                                               l13917 34F0  
                                               l13773 18CE  
                                               l13781 192C  
                                               l13749 178A  
                                               l13597 2F86  
                                               l14389 524A  
                                               l12967 248C  
                                               l12887 228A  
                                               l12975 24CA  
                                               l13935 351E  
                                               l13927 350E  
                                               l13767 1876  
                                               l12969 24AA  
                                               l13953 3546  
                                               l13865 07DA  
                                               l13881 082C  
                                               l13857 0734  
                                               l13777 18FA  
                                               l15393 2628  
                                               l13971 3588  
                                               l13947 353A  
                                               l13883 0842  
                                               l13859 073E  
                                               l15395 2740  
                                               l13789 198C  
                                               l14589 526C  
                                               l12999 6D10  
                                               l13991 35D0  
                                               l13967 357E  
                                               l13959 356C  
                                               l13879 0826  
                                               l13799 19B2  
                                               l13985 35BC  
                                               l13977 3594  
                                  ?__flash_get_status 000D  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 010E  
                                     __end_of___lldiv 60C6  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10131 7392  
                                               u11071 4AB0  
                                               u11400 491E  
                                               u11081 4AD2  
                                               u11091 4AF4  
                                               u11430 4972  
                                               u12207 6A9A  
                                               u12217 6AAC  
                                     __end_of___llmod 6630  
                              __end_of_USBDeviceTasks 3650  
                                               u10650 1758  
                                               u12227 6AB6  
                                               u10740 050A  
                           ?_USBCtrlEPServiceComplete 0001  
                                     __end_of___lwdiv 6B7A  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 700C  
                               rtcc_write_eeprom@date 0026  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR1H 000FCF  
                                               _TMR0L 000FD6  
                                               _TMR1L 000FCE  
                                _file_minimum_address 014F  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 009C  
                  __size_of_USBCtrlEPAllowStatusStage 00D4  
                                     _i2c_eeprom_read 6C6A  
                                ?__bootloader_program 0001  
                                     ??_flash_is_busy 0012  
                                    __end_of_MSDTasks 24E8  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 002E  
                                  _USBCheckMSDRequest 4C7A  
                     __end_of_internalFlash_getBuffer 78C6  
                     __end_of_USBCtrlEPAllowDataStage 5AC0  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 6EFE  
                 i2c_display_send_init_sequence@F8320 01D5  
                       __end_of_MSDTransferTerminated 6A7E  
                                        _gblCBWLength 0189  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                                   ?__flash_spi_tx_rx 0001  
                                   ?__flash_spi_tx_tx 0001  
                              __end_of_ResetSenseData 5F3C  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0002  
                                    ??_rtcc_get_hours 0001  
                           fat_get_format_status@cntr 002E  
                                    ??_rtcc_get_month 0001  
                                               pclath 000FFA  
                                  ??__flash_spi_tx_rx 0009  
                                  ??__flash_spi_tx_tx 0009  
                                     __end_of_ui_init 777E  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0106  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00F9  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 728E  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 0044  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 6044  
                               hexCharsToUint8@retVal 0006  
                     ??__fill_buffer_get_calibration1 000E  
                     ??__fill_buffer_get_calibration2 000E  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 752A  
                                      _MSDReadHandler 2BA8  
                             __CFG_DSWDTOSC$INTOSCREF 000000  
                        __size_of_USBStdSetCfgHandler 00E4  
                                flash_page_write@data 0022  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0017  
                                     __initialization 54A6  
                       fat_read_from_file@file_number 0062  
                           __end_of__flash_get_status 7388  
               __end_of_ExternalFlash_MediaInitialize 765E  
              __size_of_ExternalFlash_MediaInitialize 001E  
                       _ExternalFlash_MediaInitialize 7640  
                                         _system_init 4AA6  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0163  
                                        __end_of_main 5322  
                                        __end_of_itoa 6FCA  
                       __end_of_system_encoder_enable 783C  
                                    _rtcc_set_minutes 76F6  
                                    _rtcc_set_seconds 76C6  
                     __end_of_i2c_display_write_fixed 6A28  
                                        __end_of_utoa 5A1C  
                         ??__fill_buffer_get_display1 0005  
                         ??__fill_buffer_get_display2 0005  
                                    _timer_pseudo_isr 704C  
                            __parse_command_short@cmd 002C  
                                    __end_of_i2c_init 7876  
                            __end_of__i2c_acknowledge 7894  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 0147  
                                ??_USBCheckMSDRequest 000C  
                                      __CFG_OSC$HSPLL 000000  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2316 000C  
                             _USBCheckMSDRequest$2317 000E  
                               system_init@appendtext 0060  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                              ??_main 0057  
                                    __end_of__i2c_get 788A  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0084  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 008D  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 78F8  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 78F4  
                                         ?_USBSuspend 0001  
         __i2c_eeprom_load_default_calibration@buffer 0001  
                               ??__bootloader_program 0046  
                                    ??_rtcc_set_hours 0001  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                    ??_rtcc_set_month 0001  
                            __end_of_rtcc_get_minutes 77CE  
                            __end_of_rtcc_get_seconds 77A6  
                                     ?_bootloader_run 0001  
                         __size_of__write_calibration 0090  
                       __flash_write_to_buffer@buffer 001A  
                              __flash_write_to_buffer 6BCC  
                     i2c_digipot_reset_off@data_array 000B  
                                _start_from_byte_next 0180  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                                          __i2c_start 78D8  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 6E28  
                           fat_read_from_file@cluster 0083  
                                      __CFG_WDTEN$OFF 000000  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0046  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0001  
                                    __end_of__get_fat 69D2  
                                    __end_of__get_fbr 2750  
                                    __end_of__get_mbr 5192  
                                              _OSCCON 000FD3  
                        ??_get_next_eeprom_write_task 0001  
                                              _TBLPTR 000FF6  
                                              _RTCCAL 000F3E  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2DA2  
                                 _flash_pages_written 016C  
                                     __read_root@data 0028  
                             i2c_eeprom_write@address 000B  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                                     __read_root@slot 002F  
                             __write_calibration@addr 0038  
                             __write_calibration@cntr 003D  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 56D0  
                                    __read_fat@offset 002C  
                                    __end_of_fat_init 784C  
                                    _i2c_eeprom_tasks 6418  
                   __bootloader_program@page_to_write 009E  
                                   _shortPacketStatus 0197  
                                      __CFG_XINST$OFF 000000  
                                    _i2c_eeprom_write 6144  
                                     rtcc_set_day@day 0001  
                        ??__parse_command_calibration 0008  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 6144  
                        __end_of__flash_set_page_size 623C  
                                     _hexCharsToUint8 765E  
                                     ??_USBDeviceInit 0009  
                            flash_partial_read@length 0018  
                                              _gblCBW 0100  
                                   _fat_get_file_size 63A6  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2666 0003  
                                          _SoftDetach 0188  
                                           ??___lwmod 0005  
                                              _buffer 03DA  
                                   _USBEnableEndpoint 7146  
                       __bootloader_program@address32 0097  
                     __size_of_USBStdGetStatusHandler 00BC  
                                              _memcpy 6696  
                                  ?_fat_get_file_size 0028  
                                              _memset 73E0  
                             __end_of_i2c_eeprom_read 6CB6  
                                              clear_0 5500  
                                              clear_1 5514  
                                              clear_2 5526  
                                              clear_3 5532  
                                              clear_4 553E  
                                              clear_5 554A  
                           _ExternalFlash_SectorWrite 72F2  
                                              clear_6 5556  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                                              _ui_run 48BA  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                                  _flash_partial_read 632E  
                               i2c_display_init@F8323 01CC  
                            ??_internalFlash_readPage 0017  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 011A  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                              __size_of__flash_spi_tx 0058  
                                   _i2c_set_frequency 740C  
                               system_init@extension2 00DE  
                               __end_of_fat_find_file 54A6  
                                 ??_fat_get_file_size 002C  
                       __size_of__parse_command_short 0038  
                         ?_bootloader_get_rec_address 0001  
                 __size_of_get_next_eeprom_write_task 0034  
                                        __mediumconst 8CEC  
                                 __end_of__i2c_open_1 76AE  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 67C0  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6760  
                                              tblptru 000FF8  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0014  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0026  
                           __fill_buffer_get_display1 6D02  
                           __fill_buffer_get_display2 6CB6  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                               __end_of_ui_get_status 78F4  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00FC  
                          ??_APP_DeviceCustomHIDTasks 002D  
                               __flash_spi_tx_rx@data 0005  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 6AD4  
                               __flash_spi_tx_tx@data 0005  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 0087  
                                          __accesstop 0060  
                             __end_of__initialization 555C  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                         ?__parse_command_calibration 0004  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 01D6  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0046  
                        __end_of__i2c_not_acknowledge 7880  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                         __end_of__parse_command_long 681C  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                           __end_of_fat_get_file_size 6418  
                                 __size_of_USBSuspend 0032  
                                  __size_of__get_root 0196  
                               flash_page_write@match 0024  
                            __end_of_rtcc_read_eeprom 70CA  
                                ??_flash_partial_read 001C  
                                    _flash_page_write 6D4E  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 7182  
                            _bootloader_get_file_size 77F6  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                  __rtcc_write_enable 773E  
               __end_of__fill_buffer_get_calibration1 5B60  
              __size_of__fill_buffer_get_calibration1 00A0  
                       __fill_buffer_get_calibration1 5AC0  
               __end_of__fill_buffer_get_calibration2 62B6  
              __size_of__fill_buffer_get_calibration2 007A  
                       __fill_buffer_get_calibration2 623C  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 78FC  
                                        __pidataBANK1 700C  
                                        __pidataBANK3 6562  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 78A8  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 789E  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 00A4  
                __size_of_i2c_eeprom_read_calibration 0114  
                                  __size_of__read_fat 0048  
                                     _active_protocol 01B6  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 19CE  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4FF0  
                                 _userInterfaceStatus 0183  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3E1C  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7438  
                                 ?__rtcc_write_enable 0001  
                       __size_of__display_programming 01D6  
                                 system_init@filename 00C8  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0170  
                      __end_of_failed_line3_startCode 8D3D  
                                  _fat_read_from_file 2750  
               __end_of_MSDProcessCommandMediaPresent 0C80  
              __size_of_MSDProcessCommandMediaPresent 03EE  
                       _MSDProcessCommandMediaPresent 0892  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D62  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 001A  
                              flash_partial_read@page 0014  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 018D  
                           __end_of_SYSTEM_Initialize 6B28  
                                   __end_of__i2c_read 5DA4  
                        __size_of__rtcc_write_disable 0016  
                                   __end_of__i2c_send 78E8  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5562  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 78D8  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0030  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 00E2  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                              __read_root@root_sector 002B  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 44B4  
                                          _gblNumBLKS 0157  
                                           ?_i2c_init 0001  
                        __end_of__sector_from_cluster 786A  
                                ??__rtcc_write_enable 0001  
                        ??_schedule_eeprom_write_task 0001  
                                          __read_root 681C  
                                    _mediaInformation 01AF  
                             __end_of_hexCharsToUint8 767A  
                      __size_of_fat_get_format_status 00A4  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5978  
                                       __flash_wakeup 6A7E  
                                       __flash_spi_tx 68CC  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00EE  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 44B4  
               __end_of_APP_DeviceCustomHIDInitialize 72F2  
              __size_of_APP_DeviceCustomHIDInitialize 0032  
                       _APP_DeviceCustomHIDInitialize 72C0  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4E3E  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 29AA  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 003A  
                                           MSDTasks@i 0052  
                                             ?_memcpy 0001  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                                    ??_display_update 0011  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                    ?_i2c_eeprom_read 0012  
                                         __i2c_open_1 7696  
                                    _USBCtrlEPService 5780  
                                             ?_ui_run 0001  
                                          _ep_data_in 0169  
                                  __display_clear@col 0004  
                             _extended_linear_address 013F  
                                  __display_clear@row 0003  
                      __parse_command_calibration@cmd 0001  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3156  
                         APP_DeviceCustomHIDTasks@idx 0037  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 4292  
                                  _USBCheckStdRequest 49B4  
                           __write_calibration@buffer 0028  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 003E  
                             ??_MSDCheckForErrorCases 000F  
                                  __size_of_rtcc_init 0020  
                                          _flash_init 6C1C  
                         __end_of_USBCtrlTrfTxService 4E3E  
                                   __end_of__get_data 74B4  
                                 _USBStdSetCfgHandler 4B96  
                 __size_of_schedule_eeprom_write_task 0052  
                                  __display_done@cntr 001F  
                                   __end_of__get_root 34C2  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                                             _RTCVALH 000F3B  
                                             _RTCVALL 000F3A  
                              _total_hex_file_entries 016E  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                            __end_of_rtcc_set_minutes 770E  
                            __end_of_rtcc_set_seconds 76DE  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 0148  
                                __flash_set_page_size 61C2  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 708C  
                  __end_of_get_next_eeprom_write_task 7226  
                          _get_next_eeprom_write_task 71F2  
                                 i2c_eeprom_read@addr 0018  
                          __end_of_APP_DeviceMSDTasks 781A  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 6E28  
                                 i2c_eeprom_read@data 0014  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 004E  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 632E  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 62B6  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                            __write_calibration@index 003C  
                                   __read_fat@cluster 0028  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                                      ?__flash_spi_tx 0001  
                      __end_of_bootloader_get_entries 78B2  
                              fat_find_file@extension 002A  
                            ?_internalFlash_getBuffer 0001  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3F3E  
                                     hexCharToUint8@c 0001  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                  __flash_spi_tx@data 0001  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                ?_USBStdSetCfgHandler 0001  
                               __end_of_rtcc_get_year 7792  
                          __size_of_fat_get_file_size 0072  
                         __size_of_USBCheckHIDRequest 00FE  
                                             __Lparam 0000  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 3F3E  
                          _MSDTransferTerminated$2404 000E  
                          __size_of_USBEnableEndpoint 003C  
                           __size_of__flash_spi_tx_rx 0094  
                           __size_of__flash_spi_tx_tx 008C  
                APP_DeviceCustomHIDTasks@return_value 0035  
                                        ?_system_init 0001  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 6488  
                                          _last_error 0181  
                       __size_of_USBCtrlTrfOutHandler 0064  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 02B4  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 6044  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 65CA  
                                             ___lwdiv 6B28  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 6FCA  
                         __size_of_internalFlash_read 0034  
                                   ?__i2c_acknowledge 0001  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 6F88  
                                             __pcinit 54A6  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02F4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                      ?__fill_buffer_get_calibration1 0001  
                      ?__fill_buffer_get_calibration2 0001  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 525E  
                                             __ptext1 48BA  
                                     __display_failed 19CE  
                                             __ptext2 782C  
                                             __ptext3 7388  
                                             __ptext4 759A  
                                             __ptext5 75BC  
                                             __ptext6 7504  
                                             __ptext7 5F3C  
                                             __ptext8 704C  
                                             __ptext9 4AA6  
                                             _inPipes 00E8  
                                     __size_of_ui_run 00FA  
                                      fat_format@cntr 0025  
                               _task_list_write_index 0184  
                   __size_of_ExternalFlash_SectorRead 0032  
                         _USBDeferOUTDataStagePackets 018E  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                               __end_of_rtcc_set_year 76C6  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 0057  
                         __end_of__system_timer0_init 7640  
                                           _T1CONbits 000FCD  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 4178  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 784C  
                                             _msd_cbw 000D40  
                            __end_of_i2c_eeprom_tasks 6488  
                                     __display_verify 3BCA  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7876  
                            __end_of_i2c_eeprom_write 61C2  
                                             _ui_init 776A  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7600  
                                  __end_of_USB_CD_Ptr 8EA7  
                                          _msd_buffer 000600  
                                   ?_rtcc_get_minutes 0001  
                                   ?_rtcc_get_seconds 0001  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 00B2  
                        fat_get_file_size@file_number 0035  
                                             _strncmp 5FC0  
                                end_of_initialization 555C  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 6A28  
               __flash_compare_page_to_buffer@command 001C  
                      ?_MSDProcessCommandMediaPresent 0001  
                                  __end_of_USB_SD_Ptr 8E83  
                                  ??_rtcc_get_minutes 0001  
                                  ??_rtcc_get_seconds 0001  
                                 i2c_eeprom_write@dat 0013  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 005B  
                           __end_of_MSDProcessCommand 405E  
                                             itoa@buf 0011  
                                         ?__read_root 0028  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                                     _USB1msTickCount 015F  
                                    ?_hexCharsToUint8 0003  
                              _internalFlash_readPage 70CA  
                            ?_USBStdFeatureReqHandler 0001  
                       i2c_eeprom_write@slave_address 0024  
                  __size_of__fill_buffer_get_display1 004C  
                  __size_of__fill_buffer_get_display2 004C  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                                   __end_of_rtcc_init 7620  
                                     ___lldiv@counter 000D  
                                       ?_rtcc_get_day 0001  
                                  __end_of_USBSuspend 72C0  
                             _USBCtrlEPAllowDataStage 5A1C  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 78D0  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 78C6  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                 rtcc_set_hours@hours 0001  
                    __size_of__fill_buffer_get_status 0048  
                                       ??__ui_encoder 0001  
                                       ?_rtcc_set_day 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 43A6  
                                             utoa@val 000A  
                                           _MSD_State 00FA  
                         __end_of__bootloader_program 0892  
                               _system_encoder_enable 782C  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00E2  
                          _USBStatusStageEnabledFlag1 0191  
                          _USBStatusStageEnabledFlag2 0190  
                                  USBEnableEndpoint@p 000A  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                      __end_of__flash_write_to_buffer 6C1C  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 785C  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                          __end_of__write_calibration 5D18  
                               ?__i2c_not_acknowledge 0001  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0300  
                                  _BothEP0OutUOWNsSet 0193  
                            __end_of_flash_page_write 6D98  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03DA  
                                    ??_MSDReadHandler 0036  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 69D2  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
                  __end_of_schedule_eeprom_write_task 6BCC  
                          _schedule_eeprom_write_task 6B7A  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                                     ??__flash_spi_tx 0005  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CED  
                                       _checked_line3 8E73  
                                       _checked_line4 8D86  
                          ??_bootloader_get_file_size 0005  
                        ?_i2c_eeprom_read_calibration 0001  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                     i2c_eeprom_read_calibration@addr 0020  
                        __end_of_USBTransferOnePacket 46BC  
                     i2c_eeprom_read_calibration@cntr 0022  
                               i2c_eeprom_read@length 0016  
                                 rtcc_set_month@month 0001  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 71F2  
               __end_of_internalFlash_pageFromAddress 7696  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 767A  
                                      ??_rtcc_get_day 0001  
                      ?__flash_compare_page_to_buffer 0014  
                                   __CFG_WPEND$PAGE_0 000000  
                   __end_of__fill_buffer_get_display1 6D4E  
                   __end_of__fill_buffer_get_display2 6D02  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                                   ?_rtcc_read_eeprom 0001  
                             __end_of__display_failed 1CC4  
                                    ?_MSDErrorHandler 0001  
                             __size_of_rtcc_get_hours 0014  
                             __size_of_rtcc_get_month 0014  
                              _USBCtrlTrfSetupHandler 561E  
                                      ??_rtcc_set_day 0001  
                                 __rtcc_write_disable 7754  
                      __bootloader_program@entry_page 008F  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00CC  
                               __end_of_USBDeviceInit 3930  
                                  ??_rtcc_read_eeprom 001A  
               __end_of_USBIncrement1msInternalTimers 7504  
              __size_of_USBIncrement1msInternalTimers 0028  
                       _USBIncrement1msInternalTimers 74DC  
                                     ??__display_done 001F  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3CF6  
                                   __size_of_MSDTasks 028E  
                            __end_of_USBStallEndpoint 45BA  
                 __bootloader_program@start_from_byte 009B  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8D02  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 66FC  
                                     _MSDRetryAttempt 018A  
                                      __end_of_memset 740C  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                             __parse_command_long@cmd 0003  
                                 __size_of__read_root 0058  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0195  
                                      __end_of_ui_run 49B4  
                                 __end_of__ui_encoder 5FC0  
                           __flash_set_page_size@size 0018  
                                 start_initialization 54A6  
                             ?_USBStdGetStatusHandler 0001  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                      get_next_eeprom_write_task@task 0001  
                          i2c_display_cursor@position 000E  
                                ?__rtcc_write_disable 0001  
                              ?_MSDTransferTerminated 000C  
                                     _USBMSDOutHandle 00F6  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5BF4  
                                system_init@filename2 00D1  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 225A  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 003C  
                                       _MSDHostNoData 00F8  
                                _task_list_read_index 0185  
                                      _hexCharToUint8 73B4  
              internalFlash_addressWithinPage@address 0009  
                   __end_of_USBCtrlEPAllowStatusStage 50C4  
                        __end_of__display_programming 3156  
                            __end_of_USBCtrlEPService 582C  
                          __size_of_MSDProcessCommand 0120  
                                __system_encoder_init 6F44  
                                           __i2c_read 5D18  
                             __size_of_rtcc_set_hours 0018  
                                rtcc_read_eeprom@date 001A  
                                           __i2c_send 78E0  
                             __size_of_rtcc_set_month 0018  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 78D0  
                                __flash_spi_tx@length 0003  
                                     ___llmod@counter 0009  
                       ??_i2c_eeprom_read_calibration 001A  
                                   __size_of_i2c_init 000C  
                                   _rtcc_write_eeprom 7108  
                           ??_USBCtrlEPAllowDataStage 0002  
                                      USBDeviceInit@i 0009  
                              __write_calibration@ptr 003A  
                        __end_of_bootloader_get_error 78EE  
                       __end_of_failed_line3_checksum 8E38  
                              _pBDTEntryEP0OutCurrent 005D  
                              __size_of_fat_find_file 00C0  
                                  ?_rtcc_write_eeprom 0001  
                                         _DMACON1bits 000F88  
                              i2c_eeprom_write@length 000F  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 004E  
                             USBTransferOnePacket@dir 0001  
                                    __flash_spi_tx_rx 5BF4  
                                    __flash_spi_tx_tx 5DA4  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D50  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2370 0050  
                                       _MSDTasks$2369 004E  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0078  
                             flash_partial_read@start 0016  
                                 _USBStdGetDscHandler 3A82  
                              ?_system_encoder_enable 0001  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 0328  
                          fat_get_file_size@file_size 002F  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B8  
                                         __pdataBANK3 0372  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 00F0  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                                system_init@extension 00DA  
                        __size_of__parse_command_long 005C  
                       __end_of_i2c_digipot_backlight 752A  
                                        ?__i2c_open_1 0001  
                              __size_of_ui_get_status 0006  
                                 ??_rtcc_write_eeprom 0026  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 78E0  
                                  __end_of__i2c_write 6E70  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                      __end_of_USBStdGetStatusHandler 561E  
                                         __pbssCOMRAM 0059  
                   __end_of__bootloader_check_address 4F18  
               __end_of_internalFlash_addressFromPage 7462  
              __size_of_internalFlash_addressFromPage 002A  
                       _internalFlash_addressFromPage 7438  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0268  
                                     _flash_page_read 7550  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00D8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 0100  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 47BC  
             __bootloader_program@address_within_page 0091  
                               ??__rtcc_write_disable 0001  
                              __end_of_hexCharToUint8 73E0  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0153  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 64F8  
                          i2c_set_frequency@frequency 0001  
                                   ?_rtcc_set_minutes 0001  
                                   ?_rtcc_set_seconds 0001  
                                        _found_line3b 8E91  
                                           __get_data 748C  
                    __bootloader_program@return_value 0093  
                                   __size_of_fat_init 0010  
                                   ?_timer_pseudo_isr 0001  
                         ?_get_next_eeprom_write_task 0001  
                                           __get_root 332C  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 71BA  
                                  ??_rtcc_set_minutes 0001  
                                  ??_rtcc_set_seconds 0001  
                           __end_of_rtcc_write_eeprom 7146  
                          __end_of_i2c_display_cursor 759A  
                                          ?__i2c_read 0006  
                         __size_of__rtcc_write_enable 0016  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 6EFE  
                                        _pBDTEntryOut 0139  
                                          ?__i2c_stop 0001  
                                           __read_fat 6DE0  
                      schedule_eeprom_write_task@task 0002  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D62  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 7356  
                __end_of_bootloader_get_total_entries 78BC  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 78B2  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 58D4  
                                 flash_is_busy@status 0012  
                                   fat_find_file@name 0028  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 002C  
                                   fat_find_file@slot 0037  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 6E70  
                                  _APP_DeviceMSDTasks 7808  
                                       __pmediumconst 8CEC  
                                 fat_find_file@offset 003A  
                                           __ptext100 4B96  
                                           __ptext101 73E0  
                                           __ptext110 784C  
                                           __ptext102 5562  
                                           __ptext111 405E  
                                           __ptext103 3A82  
                                           __ptext120 7808  
                                           __ptext112 72C0  
                                           __ptext104 1FB8  
                                           __ptext121 225A  
                                           __ptext113 7146  
                                           __ptext105 5E30  
                                           __ptext130 5DA4  
                                           __ptext122 3F3E  
                                           __ptext114 5B60  
                                           __ptext106 4C7A  
                                           __ptext131 6874  
                                           __ptext123 6630  
                                           __ptext115 66FC  
                                           __ptext107 47BC  
                                           __ptext140 632E  
                                           __ptext132 62B6  
                                           __ptext124 0892  
                                           __ptext116 4178  
                                           __ptext108 6AD4  
                                           __ptext141 75DE  
                                           __ptext133 2BA8  
                                           __ptext125 1CC4  
                                           __ptext117 4FF0  
                                           __ptext109 6A28  
                                           __ptext150 78F8  
                                           __ptext142 6A7E  
                                           __ptext134 46BC  
                                           __ptext126 78F4  
                                           __ptext118 4F18  
                                           __ptext151 13AC  
                                           __ptext143 68CC  
                                           __ptext135 3E1C  
                                           __ptext127 72F2  
                                           __ptext119 4D5C  
                                           __ptext160 78E0  
                                           __ptext152 71BA  
                                           __ptext144 7356  
                                           __ptext136 44B4  
                                           __ptext128 6D4E  
                                           __ptext161 67C0  
                                           __ptext153 7108  
                                           __ptext145 5BF4  
                                           __ptext137 5EB6  
                                           __ptext129 6BCC  
                                           __ptext170 3CF6  
                                           __ptext162 76AE  
                                           __ptext154 6144  
                                           __ptext146 582C  
                                           __ptext138 7324  
                                           __ptext171 6B7A  
                                           __ptext163 76C6  
                                           __ptext155 740C  
                                           __ptext147 78C6  
                                           __ptext139 7550  
                                           __ptext180 6CB6  
                                           __ptext172 6E70  
                                           __ptext164 76DE  
                                           __ptext156 6E28  
                                           __ptext148 781A  
                                           __ptext181 6D02  
                                           __ptext173 78EE  
                                           __ptext165 76F6  
                                           __ptext157 6924  
                                           __ptext149 7640  
                                           __ptext182 7462  
                                           __ptext174 777E  
                                           __ptext166 770E  
                                           __ptext158 78D0  
                                           __ptext183 623C  
                                           __ptext175 7792  
                                           __ptext167 7726  
                                           __ptext159 78D8  
                                           __ptext184 5AC0  
                                           __ptext176 77A6  
                                           __ptext168 773E  
                                           __ptext185 6696  
                                           __ptext177 77BA  
                                           __ptext169 7754  
                                           __ptext186 45BA  
                                           __ptext178 77CE  
                                           __ptext187 0000  
                                           __ptext179 77E2  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0038  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 025A  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 5F3C  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 01B7  
                                    ?__display_verify 0001  
                    __size_of_internalFlash_getBuffer 000A  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014B  
                                     __i2c_write@cntr 000A  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                      internalFlash_erasePage@address 0005  
                                _USBTransferOnePacket 45BA  
                        __flash_spi_tx_rx@data_length 0007  
                          ?_ExternalFlash_MediaDetect 0001  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 71BA  
                                __end_of_rtcc_get_day 77F6  
                              fat_read_from_file@data 0038  
                                       _fat_find_file 53E6  
                                   ?_i2c_eeprom_tasks 0001  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 0063  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 103E  
                                   __display_itoa_u16 5322  
                    __size_of_internalFlash_erasePage 0034  
                                   ?_i2c_eeprom_write 000B  
                        __end_of_USBCtrlTrfOutHandler 6760  
                            __size_of_i2c_eeprom_read 004C  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D50  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D86  
                                         _ep_data_out 0166  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
                       __end_of_i2c_digipot_reset_off 75DE  
                                  ??_i2c_eeprom_tasks 003E  
                                       _MSDWriteState 018B  
                        __size_of_USBCtrlTrfRxService 011A  
                     __parse_command_calibration@dat1 0005  
                     __parse_command_calibration@dat2 0006  
                     __parse_command_calibration@dat3 0007  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 6D98  
                                __end_of_rtcc_set_day 773E  
                                  ??_i2c_eeprom_write 0010  
                           __size_of__i2c_acknowledge 000A  
                     __parse_command_calibration@item 0004  
                                          ?__get_data 0001  
                             ?_internalFlash_readPage 0015  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2DA2  
                    __end_of_bootloader_get_file_size 7808  
                                         _file_buffer 0340  
                                          ?__get_root 0001  
                                       _ui_get_status 78EE  
                                      __display_start 3930  
                        __size_of_USBCtrlTrfTxService 00E2  
                                        ??__read_root 002A  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 748C  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 48BA  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0028  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR1bits 000F9E  
                                           _task_list 0200  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                      _rtcc_get_hours 77CE  
                                      _rtcc_get_month 77A6  
                   __bootloader_verify_file@address32 0053  
                          __end_of_internalFlash_read 725A  
                           __size_of_rtcc_get_minutes 0014  
                           __size_of_rtcc_get_seconds 0014  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                                            _MSDTasks 225A  
                          _USBDeferINDataStagePackets 018F  
                                        ??_fat_format 0025  
                           ?__ic2_display_set_address 0001  
                         __size_of_USBCheckStdRequest 00F2  
                     ??_MSDProcessCommandMediaPresent 003A  
                                           _rtcc_init 7600  
                                            _UCONbits 000F65  
                                _USBConfigureEndpoint 5B60  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7576  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 02A2  
                                      _USBMSDInHandle 00F4  
                                __display_programming 2F80  
                               ?_USBTransferOnePacket 0001  
                                   __read_root@offset 002D  
                 internalFlash_addressWithinPage@page 000D  
                           __end_of__display_itoa_u16 53E6  
                           __end_of__display_itoa_u32 13AC  
                                  __end_of__read_root 6874  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0028  
                        i2c_eeprom_read@slave_address 0019  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 0196  
                   __end_of_ExternalFlash_MediaDetect 78FC  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0013  
                        ??_bootloader_get_rec_address 0003  
                              __end_of__display_clear 6DE0  
                                _bootloader_get_error 78E8  
                              __size_of_rtcc_get_year 0014  
                               __display_checked@cntr 0022  
                              __end_of__display_found 2F80  
                             __end_of_USBStallHandler 6F44  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7108  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 3A82  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 54BA  
                                           copy_data1 54DA  
                        __size_of__system_timer0_init 0020  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                         __end_of_USBStdSetCfgHandler 4C7A  
                                  ??_flash_page_write 0024  
                                  __end_of_fat_format 2BA8  
                         ?_schedule_eeprom_write_task 0001  
                                 __display_found@cntr 0028  
                                            _i2c_init 786A  
                          __size_of_rtcc_write_eeprom 003E  
                                      _rtcc_set_hours 770E  
                                      _rtcc_set_month 76DE  
          __i2c_eeprom_load_default_calibration@index 0003  
                                         ??__i2c_read 0009  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 018C  
                                  __write_calibration 5C88  
                                         ??__i2c_stop 0001  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                              __end_of_rtcc_get_hours 77E2  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                              __end_of_rtcc_get_month 77BA  
                                            __i2c_get 7880  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                              __size_of_rtcc_set_year 0018  
                           ??__fill_buffer_get_status 0001  
                                          _ANCON0bits 000F48  
                                          _ANCON1bits 000F49  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0034  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 0085  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 0060  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
                                 ?__write_calibration 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 6C6A  
                                      _TransferLength 0176  
                                _bootloader_extension 8FC7  
                          __end_of_USBCheckMSDRequest 4D5C  
                            __size_of_hexCharsToUint8 001C  
                                          ?_rtcc_init 0001  
                               ?_USBConfigureEndpoint 0001  
                            _ExternalFlash_SectorRead 7324  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0022  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                      __i2c_wait_idle 6924  
                                     _MSDWriteHandler 1CC4  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                         _MSDCBWValid 0187  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D3D  
                                         _found_line3 8E98  
                                         _found_line4 8D74  
                                            __get_fat 697C  
                                            __get_fbr 24E8  
                                            __get_mbr 50C4  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                  __end_of_ExternalFlash_CapacityRead 782C  
                          _ExternalFlash_CapacityRead 781A  
                             ??_MSDTransferTerminated 000E  
                       schedule_eeprom_write_task@idx 0003  
                        __size_of__bootloader_program 03F6  
                               ?_bootloader_get_error 0001  
                           __size_of_rtcc_read_eeprom 003E  
                             __size_of_USBDeviceTasks 018E  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 783C  
                                ??__write_calibration 0026  
                                     ?__display_clear 0001  
                            __end_of__flash_spi_tx_rx 5C88  
                                     ___lwdiv@counter 0007  
                            __end_of__flash_spi_tx_tx 5E30  
                                    __display_checked 3650  
                                            __ptext10 776A  
                                            __ptext11 7600  
                                            __ptext20 788A  
                                            __ptext12 708C  
                                            __ptext21 0C80  
                                            __ptext13 786A  
                                            __ptext30 697C  
                                            __ptext22 6C1C  
                                            __ptext14 7696  
                                            __ptext31 748C  
                                            __ptext23 61C2  
                                            __ptext15 4292  
                                            __ptext40 752A  
                                            __ptext32 7620  
                                            __ptext24 783C  
                                            __ptext16 6C6A  
                                            __ptext41 5192  
                                            __ptext33 6F44  
                                            __ptext25 58D4  
                                            __ptext17 5D18  
                                            __ptext50 103E  
                                            __ptext42 3BCA  
                                            __ptext34 6418  
                                            __ptext26 29AA  
                                            __ptext18 7876  
                                            __ptext51 65CA  
                                            __ptext43 3930  
                                            __ptext35 71F2  
                                            __ptext27 332C  
                                            __ptext19 7880  
                                            __ptext60 6F88  
                                            __ptext52 6044  
                                            __ptext44 2F80  
                                            __ptext36 5C88  
                                            __ptext28 50C4  
                                            __ptext61 5978  
                                            __ptext53 3156  
                                            __ptext45 2DA2  
                                            __ptext37 64F8  
                                            __ptext29 24E8  
                                            __ptext70 73B4  
                                            __ptext62 6FCA  
                                            __ptext54 789E  
                                            __ptext46 77F6  
                                            __ptext38 69D2  
                                            __ptext71 60C6  
                                            __ptext63 6B28  
                                            __ptext55 78A8  
                                            __ptext47 19CE  
                                            __ptext39 7576  
                                            __ptext80 2750  
                                            __ptext72 70CA  
                                            __ptext64 6EB8  
                                            __ptext56 6D98  
                                            __ptext48 7894  
                                            __ptext81 785C  
                                            __ptext73 7226  
                                            __ptext65 16D4  
                                            __ptext57 3650  
                                            __ptext49 78E8  
                                            __ptext90 7182  
                                            __ptext82 681C  
                                            __ptext74 767A  
                                            __ptext66 049C  
                                            __ptext58 78B2  
                                            __ptext91 728E  
                                            __ptext83 6DE0  
                                            __ptext75 78BC  
                                            __ptext67 0020  
                                            __ptext59 5322  
                                            __ptext92 6EFE  
                                            __ptext84 4E3E  
                                            __ptext76 725A  
                                            __ptext68 765E  
                                            __ptext93 74DC  
                                            __ptext85 56D0  
                                            __ptext77 74B4  
                                            __ptext69 6488  
                                            __ptext94 37CC  
                                            __ptext86 63A6  
                                            __ptext78 6760  
                                            __ptext95 5780  
                                            __ptext87 53E6  
                                            __ptext79 7438  
                                            __ptext96 561E  
                                            __ptext88 5FC0  
                                            __ptext97 43A6  
                                            __ptext89 34C2  
                                            __ptext98 5A1C  
                                            __ptext99 49B4  
                 __size_of__parse_command_calibration 0126  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                              __end_of_rtcc_set_hours 7726  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6696  
               __size_of_MSDProcessCommandMediaAbsent 0066  
                        _MSDProcessCommandMediaAbsent 6630  
                                         ??__get_data 0003  
                               __flash_wakeup@command 0009  
                              __end_of_rtcc_set_month 76F6  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 0046  
                                    __size_of_strncmp 0084  
                                 __parse_command_long 67C0  
                   __end_of_failed_line3_addressRange 8D16  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                   i2c_eeprom_read_calibration@buffer 001C  
                      __size_of__bootloader_find_file 00B0  
                             __size_of_ResetSenseData 0086  
                    __end_of_APP_DeviceCustomHIDTasks 16D4  
                       __end_of__bootloader_find_file 5780  
                        __end_of_i2c_digipot_reset_on 75BC  
                                   ??_i2c_eeprom_read 0017  
                               __end_of__flash_wakeup 6AD4  
                      __end_of_USBCtrlTrfSetupHandler 56D0  
                                       __size_of_main 00C4  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                               __end_of__flash_spi_tx 6924  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                                         ??__read_fat 002A  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 0033  
                                     ?_rtcc_get_hours 0001  
                                     ?_rtcc_get_month 0001  
                             fat_get_file_size@sector 002D  
                                  ??_USBCtrlEPService 001E  
                    __size_of__bootloader_verify_file 02FA  
                             ??_system_encoder_enable 0001  
                                 _USBCtrlTrfInHandler 4F18  
                  _MSDProcessCommandMediaPresent$2387 003C  
                __parse_command_calibration@parameter 000A  
                                       _rtcc_get_year 777E  
                               _calibrationParameters 0210  
                              __end_of__i2c_wait_idle 697C  
                          internalFlash_readPage@page 0015  
                                            _outPipes 0131  
                          ?__fill_buffer_get_display1 0001  
                          ?__fill_buffer_get_display2 0001  
                                _USBCtrlTrfOutHandler 66FC  
                           _USBCtrlEPAllowStatusStage 4FF0  
                             _internalFlash_getBuffer 78BC  
                                ?__parse_command_long 0002  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                               __size_of_rtcc_get_day 0014  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 332C  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 002C  
                              ??__parse_command_short 002C  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0122  
                                    system_init@F8461 01F4  
                                    system_init@F8463 01DE  
                                    system_init@F8465 01F0  
                                    system_init@F8467 0372  
                                    system_init@F8459 01E7  
                                   rtcc_set_year@year 0001  
                           _USBDeferStatusStagePacket 00FB  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 6EB8  
                                       _rtcc_set_year 76AE  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 74DC  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 74B4  
                               __size_of_rtcc_set_day 0018  
                             _internalFlash_erasePage 725A  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                                i2c_eeprom_write@data 000D  
                                i2c_eeprom_write@cntr 0025  
                       USBCtrlTrfTxService@byteToSend 0001  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 58D4  
               __size_of_MSDComputeDeviceInAndResidue 00A8  
                        _MSDComputeDeviceInAndResidue 582C  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                                 __end_of_start_line1 8DB9  
                                 __end_of_start_line2 8DA8  
                                 __end_of_start_line3 8D2A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       _flash_is_busy 75DE  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 788A  
                                     ?_rtcc_set_hours 0001  
                                     ?_rtcc_set_month 0001  
                            __flash_get_status@status 0010  
                     __flash_spi_tx_rx@command_length 0003  
                                  ?_parseHexFileEntry 000C  
                              __size_of_USBDeviceInit 0164  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5EB6  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5E30  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 7324  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 68CC  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6874  
                SYSTEM_Initialize@pll_startup_counter 0001  
                        fat_read_from_file@start_byte 0030  
                                     _display_content 0264  
                          __end_of_flash_partial_read 63A6  
                             __end_of_MSDWriteHandler 1FB8  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                      ?_rtcc_get_year 0001  
                             __size_of_MSDReadHandler 01FA  
                                        _rtcc_get_day 77E2  
                                       ??_system_init 0030  
                                    _rtcc_get_minutes 77BA  
                                    _rtcc_get_seconds 7792  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 5192  
                            ??__flash_write_to_buffer 001B  
                           __size_of_rtcc_set_minutes 0018  
                            ?_APP_DeviceMSDInitialize 0001  
                           __size_of_rtcc_set_seconds 0018  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 4178  
                                         ??_rtcc_init 0020  
                           __size_of_timer_pseudo_isr 0040  
                                  _USBWakeFromSuspend 7182  
                               ??__parse_command_long 0003  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                        _rtcc_set_day 7726  
                                  _i2c_display_cursor 7576  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1FB8  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4D5C  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                          _RTCCFGbits 000F3F  
                                     _gblMediaPresent 0178  
                         __end_of__rtcc_write_disable 776A  
                                      ?_rtcc_set_year 0001  
                               _i2c_digipot_backlight 7504  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 789E  
                          _bootloader_get_rec_address 7894  
        __end_of__i2c_eeprom_load_default_calibration 103E  
       __size_of__i2c_eeprom_load_default_calibration 03BE  
              ??__i2c_eeprom_load_default_calibration 0004  
               ?__i2c_eeprom_load_default_calibration 0001  
                __i2c_eeprom_load_default_calibration 0C80  
                        __flash_spi_tx_tx@data_length 0007  
                               _USBAlternateInterface 01B4  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 017C  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 0194  
                                      _display_update 64F8  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D2A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 46BC  
                          __end_of__rtcc_write_enable 7754  
                          fat_read_from_file@position 0089  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7550  
                 __end_of_i2c_eeprom_read_calibration 43A6  
                         _i2c_eeprom_read_calibration 4292  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 017A  
                             _internalFlash_writePage 60C6  
                            __flash_spi_tx_rx@command 0001  
                                ?_USBCtrlTrfTxService 0001  
                           flash_partial_read@address 0024  
                  __end_of__parse_command_calibration 3E1C  
                          __parse_command_calibration 3CF6  
                                          _USBMSDInit 405E  
                        _USBStatusStageTimeoutCounter 0192  
                     ??_ExternalFlash_MediaInitialize 0003  
                                ??_USBWakeFromSuspend 0018  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                           flash_partial_read@command 0020  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                           __size_of_i2c_eeprom_tasks 0070  
                                          _USB_CD_Ptr 8EA5  
                            __flash_spi_tx_tx@command 0001  
                           __size_of_i2c_eeprom_write 007E  
                                         _power_state 0182  
                                         _USBInHandle 0059  
                            _APP_DeviceCustomHIDTasks 13AC  
